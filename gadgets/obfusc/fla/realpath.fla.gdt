0x000000000042ed41 : adc al, -1 ; jmp qword ptr [rdi]
0x000000000042f27d : adc al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x000000000042ee9d : adc byte ptr [rax], al ; add al, dh ; sbb bh, bh ; jmp rbx
0x0000000000406e25 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404a1c : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d7d0 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; xor byte ptr [rdx - 3], al ; jmp rax
0x000000000041ea2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a989 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f0bd : adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov bl, -1 ; call qword ptr [rsi]
0x000000000042ee9b : add ah, ah ; adc byte ptr [rax], al ; add al, dh ; sbb bh, bh ; jmp rbx
0x000000000042e09b : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rdx]
0x000000000042f27b : add ah, al ; adc al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x000000000042e07b : add ah, al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rdx]
0x000000000042e17b : add ah, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x49], ah ; std ; call rax
0x0000000000401a44 : add ah, byte ptr [rbx] ; jmp rax
0x0000000000401a84 : add ah, byte ptr [rbx] ; jmp rdx
0x0000000000422b23 : add al, 0 ; add cl, ch ; ret 1
0x00000000004098c7 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042ec9f : add al, al ; or edi, edi ; call qword ptr [rbx]
0x000000000042e07d : add al, byte ptr [rax] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rdx]
0x000000000041e323 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cf64 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042d8c3 : add al, dh ; ret
0x000000000042ee9f : add al, dh ; sbb bh, bh ; jmp rbx
0x0000000000422f76 : add bh, al ; in al, dx ; int1 ; ret
0x000000000040cb21 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000040495e : add bh, al ; mov r12b, 0x4f ; ret
0x000000000041e71e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041e486 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004274e8 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042772b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004274bd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000042eb01 : add bh, bh ; call rdx
0x000000000042ca3f : add bl, dh ; ret
0x0000000000428349 : add byte ptr [r8], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cc2a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000042e17f : add byte ptr [rax - 0x49], ah ; std ; call rax
0x0000000000428335 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042324b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000404150 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040521c : add byte ptr [rax - 0x77], cl ; ret 0xbe8
0x000000000042f279 : add byte ptr [rax], al ; add ah, al ; adc al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040cc2b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041e71c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041e484 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004274e6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000427729 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000042ca3d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000428333 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000423249 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000040521a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbe8
0x000000000042ca3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000403262 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ca3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000042bea4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000041a6ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409931 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000404660 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f2da445], cl ; ret
0x00000000004095bf : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000042b599 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000042b515 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000422a2e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x000000000042240e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000411aff : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004080b4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000419581 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042b655 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000422158 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042ae98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004125dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004031b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403bd7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408c45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004247cb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000421f8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041e61a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004125bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406cf7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403c46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042ae5d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000042eafe : add byte ptr [rax], al ; add dil, dil ; call rdx
0x000000000041a98b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a3f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042aa18 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ea2d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a947 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408b2c : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040156b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042ec9a : add byte ptr [rax], al ; in al, 0xe ; add byte ptr [rax], al ; ror byte ptr [rcx], -1 ; call qword ptr [rbx]
0x000000000042df9a : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; mov al, -0x5f ; std ; call qword ptr [rsi]
0x0000000000401709 : add byte ptr [rax], al ; jmp 0x401589
0x000000000042ae59 : add byte ptr [rax], al ; jmp 0x42ae68
0x000000000042bac9 : add byte ptr [rax], al ; jmp 0x42bad8
0x000000000042bf3f : add byte ptr [rax], al ; jmp 0x42c04f
0x000000000042e07f : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rdx]
0x000000000042df9e : add byte ptr [rax], al ; mov al, -0x5f ; std ; call qword ptr [rsi]
0x000000000042035c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004202dd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000042bcd7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000408799 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408fcc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411ea9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042ed3e : add byte ptr [rax], al ; nop ; adc al, -1 ; jmp qword ptr [rdi]
0x000000000042e15e : add byte ptr [rax], al ; nop ; mov dh, -3 ; jmp rsi
0x000000000042dffe : add byte ptr [rax], al ; nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x00000000004035ab : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a6cf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a3a8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042ca3e : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 1
0x000000000042ec9e : add byte ptr [rax], al ; ror byte ptr [rcx], -1 ; call qword ptr [rbx]
0x000000000042df3a : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; xor byte ptr [rcx - 3], dh ; jmp qword ptr [rsi]
0x000000000042ed3a : add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rax], al ; nop ; adc al, -1 ; jmp qword ptr [rdi]
0x000000000042df3e : add byte ptr [rax], al ; xor byte ptr [rcx - 3], dh ; jmp qword ptr [rsi]
0x000000000042d7d2 : add byte ptr [rax], al ; xor byte ptr [rdx - 3], al ; jmp rax
0x000000000042df3f : add byte ptr [rax], dh ; jno 0x42df44 ; jmp qword ptr [rsi]
0x000000000042d7d3 : add byte ptr [rax], dh ; std ; jmp rax
0x000000000042f0bf : add byte ptr [rax], dl ; mov bl, -1 ; call qword ptr [rsi]
0x000000000042f27f : add byte ptr [rax], dl ; ret 0xffff
0x0000000000409f95 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000409fd7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042bea6 : add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000041a6d0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409933 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000404662 : add byte ptr [rbx + 0x4f2da445], cl ; ret
0x000000000041a3a9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004095c1 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000042e15b : add byte ptr [rbx + rax - 0x49700000], ah ; std ; jmp rsi
0x000000000042b59b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000042b517 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000422b8e : add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000422a30 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000422410 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000411b01 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004080b6 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000419583 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042df3b : add byte ptr [rcx + rax + 0x71300000], al ; std ; jmp qword ptr [rsi]
0x000000000040c01f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x000000000042b657 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000406e27 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042ae9a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004125df : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004031b7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403bd9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408c47 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004247cd : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000421f8f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041e61c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004125c1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406cf9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403c48 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000429f2d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040944d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041d469 : add cl, ch ; ret
0x000000000042ae5f : add cl, ch ; ret 0
0x0000000000402a82 : add cl, ch ; ret 1
0x000000000040495d : add dil, al ; mov r12b, 0x4f ; ret
0x000000000042eb00 : add dil, dil ; call rdx
0x000000000040eeaa : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000422f74 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x000000000040cb1f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041a945 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042df3d : add dword ptr [rax], eax ; add byte ptr [rax], dh ; jno 0x42df46 ; jmp qword ptr [rsi]
0x000000000041b06a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000422b8c : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000427c23 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040f09b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409391 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000403de4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x28 ; pop rbp ; ret
0x0000000000408c67 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405287 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000426cbf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ada8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401aa4 : add eax, 0x22e88e ; add ebx, esi ; ret
0x00000000004278b1 : add eax, 0x458b0000 ; call 0xffffffffc3a3a4f1
0x000000000042e17d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x49], ah ; std ; call rax
0x000000000042e0bd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rdx]
0x00000000004098c9 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x00000000004281e9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004034e6 : add ebp, ecx ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x00000000004230eb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004277f5 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000401cdb : add esp, 0x10 ; pop rbp ; ret
0x000000000040c01d : add esp, 0x100 ; pop rbp ; ret
0x0000000000404a1a : add esp, 0x110 ; pop rbp ; ret
0x000000000041b067 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004290d5 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000040de7f : add esp, 0x120 ; pop rbp ; ret
0x00000000004281ba : add esp, 0x130 ; pop rbp ; ret
0x000000000042013a : add esp, 0x150 ; pop rbp ; ret
0x000000000040ea6e : add esp, 0x160 ; pop rbp ; ret
0x0000000000409396 : add esp, 0x18 ; pop rbp ; ret
0x000000000040d78c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041bd85 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000411c72 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000040a2b5 : add esp, 0x20 ; pop rbp ; ret
0x0000000000429f2b : add esp, 0x200 ; pop rbp ; ret
0x0000000000403de9 : add esp, 0x28 ; pop rbp ; ret
0x00000000004035a7 : add esp, 0x2a0 ; pop rbp ; ret
0x000000000041d341 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041f421 : add esp, 0x30 ; pop rbp ; ret
0x0000000000410ddc : add esp, 0x360 ; pop rbp ; ret
0x0000000000401c8f : add esp, 0x40 ; pop rbp ; ret
0x000000000040505d : add esp, 0x48 ; pop rbp ; ret
0x0000000000401e82 : add esp, 0x50 ; pop rbp ; ret
0x00000000004254b9 : add esp, 0x520 ; pop rbp ; ret
0x0000000000407edf : add esp, 0x550 ; pop rbp ; ret
0x0000000000403722 : add esp, 0x60 ; pop rbp ; ret
0x000000000040528c : add esp, 0x70 ; pop rbp ; ret
0x0000000000409ba3 : add esp, 0x80 ; pop rbp ; ret
0x00000000004041df : add esp, 0x90 ; pop rbp ; ret
0x000000000040f5fe : add esp, 0xa0 ; pop rbp ; ret
0x000000000040a663 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403855 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041a3a4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040ad35 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040c59c : add esp, 0xf0 ; pop rbp ; ret
0x000000000040156e : add esp, 8 ; ret
0x0000000000408161 : add esp, dword ptr [rbx] ; pop rbp ; ret
0x00000000004098c8 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x00000000004281e8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004230ea : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401cda : add rsp, 0x10 ; pop rbp ; ret
0x000000000040c01c : add rsp, 0x100 ; pop rbp ; ret
0x0000000000404a19 : add rsp, 0x110 ; pop rbp ; ret
0x000000000041b066 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004290d4 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000040de7e : add rsp, 0x120 ; pop rbp ; ret
0x00000000004281b9 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000420139 : add rsp, 0x150 ; pop rbp ; ret
0x000000000040ea6d : add rsp, 0x160 ; pop rbp ; ret
0x0000000000409395 : add rsp, 0x18 ; pop rbp ; ret
0x000000000040d78b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041bd84 : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000411c71 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000040a2b4 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000429f2a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000403de8 : add rsp, 0x28 ; pop rbp ; ret
0x00000000004035a6 : add rsp, 0x2a0 ; pop rbp ; ret
0x000000000041d340 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041f420 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000410ddb : add rsp, 0x360 ; pop rbp ; ret
0x0000000000401c8e : add rsp, 0x40 ; pop rbp ; ret
0x000000000040505c : add rsp, 0x48 ; pop rbp ; ret
0x0000000000401e81 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004254b8 : add rsp, 0x520 ; pop rbp ; ret
0x0000000000407ede : add rsp, 0x550 ; pop rbp ; ret
0x0000000000403721 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040528b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000409ba2 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004041de : add rsp, 0x90 ; pop rbp ; ret
0x000000000040f5fd : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a662 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403854 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041a3a3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040ad34 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040c59b : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040156d : add rsp, 8 ; ret
0x0000000000426cbe : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ada7 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401aa7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040eea8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040de81 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040eea7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040a7a5 : and eax, 0x42d260 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040815f : and eax, 0x630358 ; pop rbp ; ret
0x0000000000408183 : and eax, 0x630360 ; pop rbp ; ret
0x0000000000401bed : call 0x4016f9
0x0000000000422fa0 : call 0x401729
0x000000000041f2e4 : call 0x401946
0x000000000042a277 : call 0x4019e6
0x0000000000427f81 : call 0x41f789
0x000000000040c696 : call 0xffffffff8a032c38
0x00000000004278b6 : call 0xffffffffc3a3a4ec
0x00000000004278b5 : call 0xffffffffc3a3a4ed
0x00000000004278f8 : call 0xffffffffc3a3a62e
0x00000000004278f7 : call 0xffffffffc3a3a62f
0x000000000041a3e9 : call 0xffffffffe9042d39
0x000000000041a3e8 : call 0xffffffffe9042d3a
0x0000000000415e2d : call 0xfffffffff739e3c4
0x0000000000426243 : call 0xfffffffffee6e815
0x0000000000426242 : call 0xfffffffffee6e816
0x00000000004221d5 : call 0xffffffffff46a7aa
0x0000000000418959 : call 0xffffffffff560f2b
0x0000000000418958 : call 0xffffffffff560f2c
0x0000000000418959 : call 0xffffffffff560f2d
0x0000000000418958 : call 0xffffffffff560f2e
0x000000000040b787 : call 0xffffffffff7a42d8
0x000000000040b786 : call 0xffffffffff7a42d9
0x0000000000411848 : call 0xffffffffffad9e1a
0x0000000000411847 : call 0xffffffffffad9e1b
0x0000000000426cfa : call 0xffffffffffbef2cc
0x0000000000426cf9 : call 0xffffffffffbef2cd
0x000000000042ca19 : call qword ptr [r12 + rbx*8]
0x000000000042d7cf : call qword ptr [rax]
0x00000000004262e1 : call qword ptr [rbx]
0x0000000000406ce4 : call qword ptr [rcx]
0x0000000000426419 : call qword ptr [rdi]
0x0000000000417913 : call qword ptr [rdx]
0x000000000040b6b1 : call qword ptr [rsi]
0x000000000042ca1a : call qword ptr [rsp + rbx*8]
0x000000000040b823 : call rax
0x0000000000407b5b : call rbx
0x00000000004274ee : call rcx
0x000000000041094c : call rdi
0x0000000000409767 : call rdx
0x000000000041e724 : call rsi
0x0000000000423a16 : cdq ; jbe 0x423a3a ; ret
0x000000000042533d : cdq ; jbe 0x425361 ; ret
0x000000000042b51c : cdq ; ret
0x000000000040a2b3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004035a5 : clc ; add rsp, 0x2a0 ; pop rbp ; ret
0x00000000004208d2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a7f0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409f03 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040a661 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000040eaae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000408c8b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408cab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408ccb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042017f : clc ; pop rbp ; ret
0x00000000004290d3 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x00000000004185ad : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000403bbb : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004217dd : cmp al, -0x2a ; ret
0x000000000040815e : cmp al, 0x25 ; pop rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000401bf4 : cmp al, 0x25 ; ret
0x00000000004080b2 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x000000000040944b : cmp eax, 0xf660002 ; pop rsp ; ret 0xf66
0x000000000041a884 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004239c2 : cwde ; jbe 0x4239e6 ; ret
0x000000000042b01b : cwde ; js 0x42afc5 ; ret
0x000000000042b062 : cwde ; js 0x42b00c ; ret
0x000000000042b09c : cwde ; js 0x42b046 ; ret
0x0000000000410c45 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000401bf1 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000425202 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000041d201 : dec dword ptr [rax - 0x77] ; ret 0x26e8
0x000000000041ccab : dec dword ptr [rax - 0x77] ; ret 0x7ce8
0x0000000000425238 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000041dae7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000427f7d : dec dword ptr [rax - 0x77] ; ret 0xfae8
0x00000000004078a0 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000418a5d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000419f64 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000422b1f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000041d463 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000427c1f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000417a98 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004250a4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041d323 : dec ebx ; je 0x41d2e9 ; ret 0x1ce9
0x000000000040ef31 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040ef30 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000409817 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004098ca : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000040a1d8 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421f8b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000401a43 : enter 0x6302, 0 ; jmp rax
0x0000000000401a83 : enter 0x6302, 0 ; jmp rdx
0x00000000004031d5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406cf5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b899 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000426673 : fcmovbe st(0), st(5) ; jmp 0x426cd1
0x000000000041f024 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000428339 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042324f : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000425206 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000042ca1c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040b394 : fsubr st(1) ; ret 0
0x000000000040be5c : fucompi st(1) ; ret
0x0000000000401cd9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042a94c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6302c8 ; jmp rax
0x000000000041ddbe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004276d6 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x0000000000417f09 : in al, -0x7f ; ret 0xff9f
0x00000000004180ef : in al, -0x7f ; ret 0xffbf
0x0000000000418195 : in al, -0x7f ; ret 0xffc5
0x00000000004181c3 : in al, -0x7f ; ret 0xffd5
0x0000000000418291 : in al, -0x7f ; ret 0xffd8
0x0000000000418427 : in al, -0x7f ; ret 0xffe0
0x000000000042c46f : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x000000000042ec9c : in al, 0xe ; add byte ptr [rax], al ; ror byte ptr [rcx], -1 ; call qword ptr [rbx]
0x000000000042df9c : in al, 1 ; add byte ptr [rax], al ; mov al, -0x5f ; std ; call qword ptr [rsi]
0x000000000040d78a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042063f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000422f79 : in al, dx ; int1 ; ret
0x0000000000411fba : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000426cc5 : in al, dx ; pop rbp ; ret
0x000000000042b71b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f1ed : inc dword ptr [rax + 0x4d8801e1] ; ret
0x000000000041957f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004075a3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424840 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041a12a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428bb2 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000402c8c : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000422fa4 : inc edi ; in al, dx ; int1 ; ret
0x000000000041b038 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000411be2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004118d2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000040f1ec : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x00000000004146df : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000417d1f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000422b93 : int1 ; ret
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x000000000040eab1 : ja 0x40eafe ; pop rbp ; ret
0x000000000040495b : jb 0x404936 ; add dil, al ; mov r12b, 0x4f ; ret
0x000000000042ce1f : jb 0x42ce88 ; jns 0x42ce2a ; push rax ; ret
0x000000000042ce1e : jb 0x42ce89 ; jns 0x42ce2b ; push rax ; ret
0x00000000004239c3 : jbe 0x4239e5 ; ret
0x0000000000423a17 : jbe 0x423a39 ; ret
0x000000000042533e : jbe 0x425360 ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6302c8 ; jmp rax
0x0000000000406cdf : je 0x406d24 ; pop rsi ; xor ecx, ebp ; call qword ptr [rcx]
0x000000000041c552 : je 0x41c514 ; ret 0x8589
0x000000000041c632 : je 0x41c5f4 ; ret 0x8589
0x000000000041d220 : je 0x41d1e2 ; ret 0x7d81
0x000000000041d325 : je 0x41d2e7 ; ret 0x1ce9
0x0000000000408c8a : jge 0x408c8b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408caa : jge 0x408cab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408cca : jge 0x408ccb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040eaad : jge 0x40eaae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041d8d8 : jge 0x41d8ef ; ret
0x000000000041ddc3 : jge 0x41ddda ; ret
0x000000000042408a : jge 0x424103 ; ret
0x000000000042bc89 : jge 0x42bc83 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041d7ac : jl 0x41d7c3 ; ret
0x00000000004240de : jle 0x424157 ; ret
0x0000000000424d0c : jle 0x424d85 ; ret
0x000000000040170b : jmp 0x401587
0x0000000000404ea6 : jmp 0x405068
0x00000000004071b6 : jmp 0x407eef
0x0000000000409712 : jmp 0x4097e7
0x0000000000411c12 : jmp 0x411c80
0x00000000004176cd : jmp 0x41a3b3
0x000000000041a161 : jmp 0x41a3b5
0x000000000041ddbd : jmp 0x41e335
0x0000000000422f72 : jmp 0x4230b7
0x000000000042506f : jmp 0x4254c7
0x000000000042506e : jmp 0x4254c8
0x0000000000426675 : jmp 0x426ccf
0x0000000000427483 : jmp 0x42781a
0x000000000042ae5b : jmp 0x42ae66
0x000000000042bacb : jmp 0x42bad6
0x000000000042bf41 : jmp 0x42c04d
0x000000000040d491 : jmp 0x49035de1
0x000000000040d50c : jmp 0x49035e5c
0x000000000040e865 : jmp 0x490371b5
0x000000000040e8e0 : jmp 0x49037230
0x000000000040c6db : jmp 0xffffffff8a032c7d
0x000000000042105e : jmp 0xffffffffb704142a
0x000000000042b01a : jmp 0xffffffffc3e728bb
0x000000000040ca8f : jmp 0xffffffffea033031
0x00000000004177ed : jmp qword ptr [rax]
0x000000000041895f : jmp qword ptr [rbx]
0x000000000041a330 : jmp qword ptr [rcx]
0x0000000000407b06 : jmp qword ptr [rdi]
0x000000000041a885 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000415e36 : jmp qword ptr [rdx]
0x00000000004188ef : jmp qword ptr [rsi]
0x0000000000401a47 : jmp rax
0x0000000000419482 : jmp rbx
0x0000000000427731 : jmp rcx
0x0000000000419b1e : jmp rdi
0x0000000000401a87 : jmp rdx
0x00000000004274c3 : jmp rsi
0x00000000004108cf : jmp rsp
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x0000000000409816 : jne 0x4097e9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040ef32 : jne 0x40ef2a ; mov rax, rdx ; pop rbp ; ret
0x000000000041b036 : jne 0x41b03f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000421021 : jne 0x421019 ; mov rax, rdx ; pop rbp ; ret
0x000000000042a275 : jne 0x42a25f ; call 0x4019e8
0x000000000042df41 : jno 0x42df42 ; jmp qword ptr [rsi]
0x0000000000422fa1 : jnp 0x422f92 ; std ; inc edi ; in al, dx ; int1 ; ret
0x000000000042ce22 : jns 0x42ce27 ; push rax ; ret
0x000000000042ce21 : jns 0x42ce28 ; push rax ; ret
0x000000000040528e : jo 0x4052ef ; ret
0x0000000000408148 : jo 0x4081a9 ; ret
0x0000000000408b31 : jo 0x408b92 ; ret
0x000000000040f7f7 : jo 0x40f858 ; ret
0x000000000041b251 : jo 0x41b2b2 ; ret
0x000000000041b374 : jo 0x41b3d5 ; ret
0x000000000041b4ae : jo 0x41b50f ; ret
0x000000000041f0cc : jo 0x41f12d ; ret
0x000000000042a7f4 : jo 0x42a855 ; ret
0x000000000041a3a6 : js 0x41a3ba ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042b01c : js 0x42afc4 ; ret
0x000000000042b063 : js 0x42b00b ; ret
0x000000000042b09d : js 0x42b045 ; ret
0x000000000040ca8e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea033032
0x000000000040ca8d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea033033
0x000000000042e081 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rdx]
0x000000000040cb24 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004201b9 : loop 0x42020b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004202a1 : loop 0x4202f3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000407edd : loopne 0x407f30 ; add esp, 0x550 ; pop rbp ; ret
0x000000000040ab97 : loopne 0x40aba0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040be30 : loopne 0x40be39 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040be50 : loopne 0x40be9e ; mov edi, dword ptr [rcx] ; call rax
0x000000000040be4f : loopne 0x40be9f ; mov edi, dword ptr [rcx] ; call rax
0x000000000040bf1c : loopne 0x40bf25 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040bfb4 : loopne 0x40bfbd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041237e : loopne 0x412387 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bd87 : loopne 0x41bd8f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d33f : loopne 0x41d392 ; add esp, 0x2d0 ; pop rbp ; ret
0x000000000041ee10 : loopne 0x41ee19 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f21c : loopne 0x41f26c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041f21b : loopne 0x41f26d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041f64f : loopne 0x41f69f ; add esp, 0x40 ; pop rbp ; ret
0x000000000041f64e : loopne 0x41f6a0 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401e80 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404945 : mov ah, 0x4f ; ret
0x000000000042dfa0 : mov al, -0x5f ; std ; call qword ptr [rsi]
0x0000000000411afd : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040e9d8 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004221aa : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a665 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f2e2 : mov al, 0 ; call 0x401948
0x000000000042a0c3 : mov al, 0x2d ; ret 0xa414
0x000000000041253b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042ad6d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042af1d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b719 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b191 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042035f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000042035e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004202df : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004202e3 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042e181 : mov bh, -3 ; call rax
0x000000000042f0c1 : mov bl, -1 ; call qword ptr [rsi]
0x0000000000401569 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408181 : mov byte ptr [0x630360], al ; pop rbp ; ret
0x0000000000424a41 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000419ef8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004247c9 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000401aa3 : mov byte ptr [rip + 0x22e88e], 1 ; ret
0x000000000040eead : mov dh, -0x39 ; pop rbp ; ret
0x000000000040f09d : mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409393 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000403de6 : mov dh, -0x40 ; add rsp, 0x28 ; pop rbp ; ret
0x0000000000408c69 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405289 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000426cc1 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040adaa : mov dh, -0x40 ; pop rbp ; ret
0x000000000042e161 : mov dh, -3 ; jmp rsi
0x000000000042b845 : mov dl, -0x47 ; ret
0x000000000041cf10 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406370 : mov dl, dl ; ret
0x000000000040815d : mov dword ptr [0x630358], edi ; pop rbp ; ret
0x00000000004121f7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411fbb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041212f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040dc39 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000040ddab : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000404ea3 : mov dword ptr [rbp - 0x2c], eax ; jmp 0x40506b
0x0000000000401e7e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409761 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000040a5af : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000401cd7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004123ad : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004281ec : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040a7aa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040eab0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004230ee : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000042d8c0 : mov eax, 0xf0000009 ; ret
0x0000000000411eaf : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041f15b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f41d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408903 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405059 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbp ; ret
0x000000000042a4d8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040371e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040879c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041f25e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420982 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040df97 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ece0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040f7f1 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408fcf : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042c46d : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f21a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f765 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411da4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411eac : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411fb5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041f53f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040981c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000412131 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041b24b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a94a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a2b1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004208d0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a7ee : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408c8d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408cad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408ccd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042017e : mov eax, edi ; pop rbp ; ret
0x000000000040ad81 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ef35 : mov eax, edx ; pop rbp ; ret
0x00000000004202e0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x00000000004201f3 : mov eax, esi ; pop rbp ; ret
0x0000000000411bdf : mov ebp, 0xc7fffef9 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x000000000040b81d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000411fb8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b785 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040be4e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042021d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004201ed : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401ac5 : mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6302c8 ; jmp rax
0x0000000000401a82 : mov edi, 0x6302c8 ; jmp rdx
0x000000000040eaac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000408c89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408ca9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408cc9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b821 : mov edi, dword ptr [rcx] ; call rax
0x00000000004230e8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042ca17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042ca16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042a274 : mov esi, dword ptr [rbp - 0x20] ; call 0x4019e9
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6302c8 ; jmp rdx
0x0000000000409819 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000426cc4 : mov esp, ebp ; pop rbp ; ret
0x0000000000401aa5 : mov gs, eax ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040815c : mov qword ptr [0x630358], rdi ; pop rbp ; ret
0x00000000004123ac : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004281eb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040eaaf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004230ed : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401e7f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404944 : mov r12b, 0x4f ; ret
0x000000000042a0c2 : mov r8b, 0x2d ; ret 0xa414
0x000000000041f15a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f41c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408902 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042a4d7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040371d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040879b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041f25d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420981 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040df96 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ecdf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040f7f0 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408fce : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041f219 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f764 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411da3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411eab : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040981b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041b24a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a2b0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c8c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408cac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408ccc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042017d : mov rax, rdi ; pop rbp ; ret
0x000000000040ad80 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ef34 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x000000000040b81c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b784 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040be4d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040eaab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000408c88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408ca8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408cc8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b820 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6302c8 ; jmp rdx
0x0000000000409818 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000426cc3 : mov rsp, rbp ; pop rbp ; ret
0x000000000041b03a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041b03b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040766a : mov word ptr [rdx], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041878c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000042babe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041ddbc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x41e336
0x000000000042b01d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040662c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe4af
0x000000000042e001 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x0000000000409392 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000403de5 : movzx eax, al ; add rsp, 0x28 ; pop rbp ; ret
0x0000000000408c68 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405288 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000426cc0 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ada9 : movzx eax, al ; pop rbp ; ret
0x00000000004202e2 : movzx eax, ax ; pop rbp ; ret
0x000000000040eeac : movzx eax, bh ; pop rbp ; ret
0x000000000040eeab : movzx eax, dil ; pop rbp ; ret
0x000000000040f09c : movzx eax, dl ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b192 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b193 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042ed40 : nop ; adc al, -1 ; jmp qword ptr [rdi]
0x000000000042e160 : nop ; mov dh, -3 ; jmp rsi
0x000000000042e000 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x000000000042ca38 : nop dword ptr [rax + rax] ; ret
0x000000000041a3a7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ca8b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea033035
0x0000000000403bd3 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403c42 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403c9d : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042d8c1 : or dword ptr [rax], eax ; add al, dh ; ret
0x000000000041d467 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000404dfc : or dword ptr [rdi - 0x3b], edx ; ret 0x558b
0x0000000000404c65 : or dword ptr [rdi - 0x3b], edx ; ret 0x8589
0x000000000041b431 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042eca1 : or edi, edi ; call qword ptr [rbx]
0x000000000042017b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004201f1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040ca8a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea033036
0x000000000042017a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000411867 : out -0x47, eax ; ret 0x614e
0x0000000000422fa2 : out -3, eax ; inc edi ; in al, dx ; int1 ; ret
0x000000000040eea9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000042af1f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ad6f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004201f0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000409439 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040cf63 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042ca2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042ca2e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a6d2 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042ca30 : pop r14 ; pop r15 ; ret
0x000000000041a6d4 : pop r15 ; pop rbp ; ret
0x000000000042ca32 : pop r15 ; ret
0x000000000042b598 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000408160 : pop rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x22e88e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6302c8 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6302c8 ; jmp rdx
0x000000000042ca2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042ca2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x000000000041a6d1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a3aa : pop rbx ; pop rbp ; ret
0x000000000042b844 : pop rcx ; mov dl, -0x47 ; ret
0x000000000041a6d5 : pop rdi ; pop rbp ; ret
0x000000000042ca33 : pop rdi ; ret
0x000000000042bc8b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000422b8b : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000041a6d3 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042ca31 : pop rsi ; pop r15 ; ret
0x0000000000406ce1 : pop rsi ; xor ecx, ebp ; call qword ptr [rcx]
0x000000000042ca2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004145e2 : pop rsp ; ret
0x0000000000409450 : pop rsp ; ret 0xf66
0x000000000042b659 : popfq ; ret 0xd284
0x0000000000419dcf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000406cde : push qword ptr [rsi + rdi + 0x5e] ; xor ecx, ebp ; call qword ptr [rcx]
0x0000000000401e84 : push rax ; pop rbp ; ret
0x000000000042ce24 : push rax ; ret
0x000000000041e71b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041f023 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000428338 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042324e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000425205 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040b393 : push rbp ; fsubr st(1) ; ret 0
0x0000000000417f08 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004180ee : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000418194 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004181c2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000418290 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000418426 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000424a40 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000401ac4 : push rbp ; mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x000000000040f08a : push rbp ; ret
0x000000000040cb1e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000422413 : pushfq ; ret 0x8445
0x0000000000406e29 : pushfq ; ret 0xd284
0x00000000004201ee : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042021e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401571 : ret
0x000000000040b396 : ret 0
0x0000000000409e7f : ret 0x10
0x0000000000425b6f : ret 0x110a
0x0000000000423252 : ret 0x18
0x0000000000419560 : ret 0x1ae8
0x000000000041d327 : ret 0x1ce9
0x000000000042b74b : ret 0x2030
0x00000000004234f2 : ret 0x2106
0x0000000000401912 : ret 0x22e8
0x0000000000401712 : ret 0x22e9
0x000000000041d204 : ret 0x26e8
0x000000000040943a : ret 0x280f
0x00000000004178e7 : ret 0x2a
0x000000000041ac06 : ret 0x2c1
0x000000000041484a : ret 0x43fa
0x0000000000428cc6 : ret 0x44e8
0x0000000000404b02 : ret 0x4589
0x000000000040a264 : ret 0x50e9
0x0000000000404e82 : ret 0x558a
0x0000000000404dff : ret 0x558b
0x0000000000428fb0 : ret 0x5ae8
0x000000000042aaf3 : ret 0x5e5
0x000000000041160f : ret 0x614e
0x0000000000405e14 : ret 0x63db
0x0000000000404d78 : ret 0x712
0x000000000041c162 : ret 0x7961
0x000000000041ccae : ret 0x7ce8
0x000000000041d222 : ret 0x7d81
0x0000000000403202 : ret 0x7fb9
0x000000000041175b : ret 0x8148
0x000000000040f09e : ret 0x8348
0x0000000000402c90 : ret 0x8445
0x00000000004022f1 : ret 0x8589
0x00000000004146e0 : ret 0x891a
0x000000000042b0fc : ret 0x8934
0x0000000000404153 : ret 0x8948
0x000000000040c78c : ret 0x897f
0x0000000000421061 : ret 0x89b6
0x000000000042b0d8 : ret 0x8b34
0x0000000000404e42 : ret 0x8b48
0x00000000004117e8 : ret 0x8ce9
0x0000000000429c6d : ret 0x9de8
0x0000000000426146 : ret 0xa
0x0000000000409dea : ret 0xa3b9
0x000000000042a0c5 : ret 0xa414
0x000000000040cac9 : ret 0xa6e9
0x00000000004185b5 : ret 0xa9b9
0x0000000000414032 : ret 0xade6
0x0000000000403194 : ret 0xb0
0x0000000000417d20 : ret 0xb91a
0x000000000040b3c6 : ret 0xb948
0x000000000042131b : ret 0xb9b6
0x000000000040521f : ret 0xbe8
0x00000000004108d3 : ret 0xbe9
0x0000000000422e4e : ret 0xc
0x0000000000401a65 : ret 0xc148
0x00000000004031ba : ret 0xd284
0x0000000000419dd3 : ret 0xd4e9
0x0000000000410ed7 : ret 0xd549
0x000000000040ca92 : ret 0xdde9
0x000000000041169a : ret 0xdf
0x0000000000403bdc : ret 0xe280
0x0000000000405bad : ret 0xe4af
0x000000000040cb27 : ret 0xe97f
0x000000000041a3ec : ret 0xee8
0x000000000040a1c5 : ret 0xefe9
0x0000000000408c4a : ret 0xf280
0x0000000000418795 : ret 0xf41
0x0000000000409451 : ret 0xf66
0x00000000004075c4 : ret 0xf7ba
0x0000000000407a31 : ret 0xf9e8
0x0000000000427f80 : ret 0xfae8
0x000000000041115c : ret 0xfb94
0x000000000041f2ea : ret 0xfe22
0x000000000040b076 : ret 0xff3
0x0000000000417f0b : ret 0xff9f
0x00000000004198ae : ret 0xffa5
0x00000000004180f1 : ret 0xffbf
0x0000000000418b5b : ret 0xffc4
0x0000000000418197 : ret 0xffc5
0x00000000004181c5 : ret 0xffd5
0x0000000000418293 : ret 0xffd8
0x0000000000418c01 : ret 0xffd9
0x0000000000418429 : ret 0xffe0
0x00000000004174fe : ret 0xfffa
0x000000000042e701 : ret 0xfffe
0x0000000000425209 : ret 0xffff
0x0000000000400718 : ret 1
0x0000000000418a60 : ret 2
0x0000000000419ee7 : ret 4
0x000000000041d498 : ret 5
0x000000000040cf31 : ret 7
0x000000000041a5d0 : ret 8
0x0000000000426d75 : ret 9
0x00000000004031b3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ab12 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ad37 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d343 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a7a7 : rol byte ptr [rdx], cl ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000411fb6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x0000000000426cc2 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040528a : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4052f3 ; ret
0x0000000000408144 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4081ad ; ret
0x0000000000404a18 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cc6b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041bd83 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x41bd93 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411fb7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000042eca0 : ror byte ptr [rcx], -1 ; call qword ptr [rbx]
0x000000000041f020 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000042ae9c : sahf ; ret 0xd284
0x0000000000401a3e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; enter 0x6302, 0 ; jmp rax
0x00000000004217de : salc ; ret
0x0000000000411864 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x000000000040f090 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x000000000042d8bd : sar ebp, -1 ; mov eax, 0xf0000009 ; ret
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x000000000042eea1 : sbb bh, bh ; jmp rbx
0x000000000041b069 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041ec03 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004185ae : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040ada4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c6a5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ada6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040946f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000042021f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004201b8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004201ef : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000420178 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042ed3d : sldt word ptr [rax] ; nop ; adc al, -1 ; jmp qword ptr [rdi]
0x000000000042d7ce : std ; call qword ptr [rax]
0x000000000042e082 : std ; call qword ptr [rdx]
0x000000000042dfa2 : std ; call qword ptr [rsi]
0x000000000042e182 : std ; call rax
0x0000000000422fa3 : std ; inc edi ; in al, dx ; int1 ; ret
0x000000000042df42 : std ; jmp qword ptr [rsi]
0x000000000042d7d6 : std ; jmp rax
0x000000000042e162 : std ; jmp rsi
0x0000000000405a5c : stosb byte ptr [rdi], al ; ret
0x0000000000403928 : stosd dword ptr [rdi], eax ; ret
0x00000000004155f7 : sub al, 0x38 ; ret 0x8589
0x00000000004185b3 : sub al, 0x38 ; ret 0xa9b9
0x00000000004278b8 : sub al, 0x61 ; ret
0x000000000042ca91 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042ca90 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000422b21 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000041e73b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000427629 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000411a46 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422558 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c694 : test al, 0x2d ; call 0xffffffff8a032c3a
0x000000000040c693 : test al, 0x2d ; call 0xffffffff8a032c3b
0x000000000040c6d9 : test al, 0x2d ; jmp 0xffffffff8a032c7f
0x000000000040c6d8 : test al, 0x2d ; jmp 0xffffffff8a032c80
0x000000000040c97c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000040c788 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000042506d : test al, 0x45 ; jmp 0x4254c9
0x000000000041b24d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000409f9b : test al, 0x70 ; ret 0x4589
0x000000000040a262 : test al, 0x70 ; ret 0x50e9
0x000000000040a1c3 : test al, 0x70 ; ret 0xefe9
0x000000000041e618 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042ca3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042df3c : test byte ptr [rcx], al ; add byte ptr [rax], al ; xor byte ptr [rcx - 3], dh ; jmp qword ptr [rsi]
0x000000000042ed3c : test byte ptr [rdi], cl ; add byte ptr [rax], al ; nop ; adc al, -1 ; jmp qword ptr [rdi]
0x000000000041d465 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000427c21 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000411be4 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000041184a : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000041e720 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041e488 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000426cfc : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x00000000004274ea : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041d31f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x41d2ed ; ret 0x1ce9
0x000000000042772d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004274bf : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004287ee : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000406776 : test dword ptr [rsi + rdi*8 - 0x54d20001], ebx ; ret
0x0000000000405a56 : test dword ptr [rsi + rdi*8 - 0x55d20001], ebx ; ret
0x0000000000406626 : test dword ptr [rsi + rdi*8 - 0x5bd20001], ebx ; ret 0xe4af
0x0000000000405ba6 : test dword ptr [rsi + rdi*8 - 0x5cd20001], ebx ; ret 0xe4af
0x0000000000411390 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x0000000000411320 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x00000000004125e1 : xchg eax, ebp ; ret
0x0000000000411b04 : xchg eax, ebp ; ret 0x8445
0x00000000004031b9 : xchg eax, ebp ; ret 0xd284
0x0000000000403bdb : xchg eax, ebp ; ret 0xe280
0x0000000000408c49 : xchg eax, ebp ; ret 0xf280
0x000000000042c6a6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004051e3 : xchg eax, ebx ; ret 0xd284
0x00000000004155db : xchg eax, ecx ; ret
0x0000000000421f91 : xchg eax, edi ; ret 0xd284
0x000000000042325f : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041572b : xchg eax, edx ; ret
0x000000000041e61e : xchg eax, edx ; ret 0xd284
0x000000000041af62 : xchg eax, esi ; ret
0x000000000042007e : xchg eax, esi ; ret 0xd284
0x00000000004080b9 : xchg eax, esp ; ret
0x0000000000402c8f : xchg eax, esp ; ret 0x8445
0x0000000000406cfb : xchg eax, esp ; ret 0xd284
0x0000000000403c4a : xchg eax, esp ; ret 0xe280
0x000000000040ada5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000406290 : xchg edx, edx ; ret
0x000000000042017c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000428348 : xor al, 0x41 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c97e : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000040cb25 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000042df40 : xor byte ptr [rcx - 3], dh ; jmp qword ptr [rsi]
0x00000000004281bc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d7d4 : xor byte ptr [rdx - 3], al ; jmp rax
0x000000000040c78a : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000041b567 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406ce2 : xor ecx, ebp ; call qword ptr [rcx]
0x000000000041212d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
