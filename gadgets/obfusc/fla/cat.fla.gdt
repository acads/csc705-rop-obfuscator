0x000000000042604c : adc byte ptr [rbx - 1], bl ; jmp rax
0x0000000000425d9c : adc dh, ah ; std ; jmp qword ptr [rax]
0x0000000000426409 : adc dh, bh ; call rdx
0x000000000041714b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412f19 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416574 : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4259
0x0000000000425d99 : add al, 0 ; add byte ptr [rax], dl ; out -3, al ; jmp qword ptr [rax]
0x000000000041b123 : add al, 0 ; add cl, ch ; ret 1
0x0000000000425fdb : add al, ah ; sbb al, -1 ; jmp qword ptr [rax]
0x000000000042600b : add al, al ; sub edi, edi ; jmp rax
0x0000000000426407 : add al, bh ; adc dh, bh ; call rdx
0x0000000000426405 : add al, byte ptr [rax] ; add al, bh ; adc dh, bh ; call rdx
0x0000000000406cd9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416a43 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004042c8 : add al, ch ; ret 0xffd5
0x0000000000403c98 : add al, ch ; ret 0xffdd
0x0000000000425e9b : add al, dh ; fdivr st(6) ; jmp qword ptr [rax]
0x0000000000425e8b : add al, dl ; sar esi, 1 ; jmp rax
0x000000000041b576 : add bh, al ; in al, dx ; int1 ; ret
0x0000000000416e3e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416ba6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041fae8 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041fd2b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041fabd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004061a0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000042503f : add bl, dh ; ret
0x0000000000420949 : add byte ptr [r8], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a3d : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000416576 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4259
0x0000000000420935 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041b84b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042604a : add byte ptr [rax], al ; adc byte ptr [rbx - 1], bl ; jmp rax
0x0000000000425d9a : add byte ptr [rax], al ; adc dh, ah ; std ; jmp qword ptr [rax]
0x00000000004042c6 : add byte ptr [rax], al ; add al, ch ; ret 0xffd5
0x0000000000416e3c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416ba4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041fae6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041fd29 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000042503d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000420933 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041b849 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042503b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403cb5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000403e54 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042503c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004244a4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000412c5e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000423b99 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000423b15 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004069be : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000404934 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7678b], cl ; ret 0xb0
0x000000000041b02e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x000000000041aa0e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040a08f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000411b11 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000406141 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004039af : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000423498 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040ab6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403c36 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cdcb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000407716 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000416d3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040ab4f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004048be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042345d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000426402 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add al, bh ; adc dh, bh ; call rdx
0x0000000000412f1b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412980 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004075c5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041714d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004069ef : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040164b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000426406 : add byte ptr [rax], al ; clc ; adc dh, bh ; call rdx
0x00000000004267a6 : add byte ptr [rax], al ; cwde ; sar esi, 1 ; jmp qword ptr [rax]
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x0000000000423459 : add byte ptr [rax], al ; jmp 0x423468
0x00000000004240c9 : add byte ptr [rax], al ; jmp 0x4240d8
0x000000000042453f : add byte ptr [rax], al ; jmp 0x42464f
0x00000000004263a6 : add byte ptr [rax], al ; mov byte ptr [rsi + rdi*8], cl ; call qword ptr [rsi]
0x00000000004242d7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407339 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a439 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042611a : add byte ptr [rax], al ; nop ; loop 0x426123 ; jmp qword ptr [rax]
0x0000000000425e0a : add byte ptr [rax], al ; nop ; sbb bh, dh ; jmp rax
0x0000000000406cdb : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406853 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412938 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042503e : add byte ptr [rax], al ; ret
0x000000000042600a : add byte ptr [rax], al ; shr byte ptr [rcx], -1 ; jmp rax
0x0000000000425fca : add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], bl ; jmp rax
0x0000000000426a47 : add byte ptr [rax], bl ; or bh, bh ; call rdx
0x0000000000425e1b : add byte ptr [rax], dh ; and dh, bh ; jmp qword ptr [rax]
0x0000000000425fcb : add byte ptr [rax], dh ; sbb al, -1 ; jmp rax
0x0000000000425d9b : add byte ptr [rax], dl ; out -3, al ; jmp qword ptr [rax]
0x0000000000425f9b : add byte ptr [rax], dl ; sbb bh, bh ; jmp qword ptr [rax]
0x00000000004244a6 : add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000406854 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412939 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415722 : add byte ptr [rbx + 0x5e8c47d], cl ; ret
0x0000000000405cef : add byte ptr [rbx - 0x31f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004039e3 : add byte ptr [rbx - 0x43b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040430e : add byte ptr [rbx - 0x46f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000423b9b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000423b17 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000415699 : add byte ptr [rbx - 0x71173b83], cl ; ret
0x00000000004069c0 : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000404936 : add byte ptr [rbx - 0x76b7678b], cl ; ret 0xb0
0x000000000041b18e : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000041b030 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000426118 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; nop ; loop 0x426125 ; jmp qword ptr [rax]
0x000000000041aa10 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040a091 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403a40 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000416e8e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x0000000000406143 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004039b1 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042349a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040ab6f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403c38 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cdcd : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000407718 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000416d3c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040ab51 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004048c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000426403 : add byte ptr [rdx + rax], cl ; add al, bh ; adc dh, bh ; call rdx
0x000000000042252d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415b89 : add cl, ch ; ret
0x00000000004044ad : add cl, ch ; ret 0
0x0000000000417b51 : add cl, ch ; ret 1
0x00000000004044aa : add dword ptr [r8], r8d ; add cl, ch ; ret 0
0x0000000000404017 : add dword ptr [rax - 0x7a3878bb], ecx ; sar dh, -1 ; jmp rsi
0x000000000041b574 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x0000000000412ed5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004135fa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b18c : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x00000000004044ab : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000420223 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000419617 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404960 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f2bf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423371 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bc4 : add eax, 0x22678e ; add ebx, esi ; ret
0x000000000041feb1 : add eax, 0x458b0000 ; call 0xffffffffc3a32af1
0x0000000000406852 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415720 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5e8c47d], cl ; ret
0x0000000000415697 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x71173b83], cl ; ret
0x0000000000417b4f : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x00000000004207e9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x000000000041b6eb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041fdf5 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004049c0 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401e4b : add esp, 0x10 ; pop rbp ; ret
0x0000000000416e8c : add esp, 0x100 ; pop rbp ; ret
0x00000000004135f7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004216d5 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000041b6a6 : add esp, 0x120 ; pop rbp ; ret
0x00000000004207ba : add esp, 0x130 ; pop rbp ; ret
0x000000000041946d : add esp, 0x160 ; pop rbp ; ret
0x00000000004046f0 : add esp, 0x18 ; pop rbp ; ret
0x0000000000416ffc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040a202 : add esp, 0x1f0 ; pop rbp ; ret
0x00000000004074ed : add esp, 0x20 ; pop rbp ; ret
0x000000000042252b : add esp, 0x200 ; pop rbp ; ret
0x0000000000415a61 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004075c8 : add esp, 0x30 ; pop rbp ; ret
0x000000000040936c : add esp, 0x360 ; pop rbp ; ret
0x00000000004074a7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401df9 : add esp, 0x50 ; pop rbp ; ret
0x000000000041dab9 : add esp, 0x520 ; pop rbp ; ret
0x0000000000407026 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404965 : add esp, 0x70 ; pop rbp ; ret
0x0000000000413e4c : add esp, 0x80 ; pop rbp ; ret
0x0000000000414180 : add esp, 0x90 ; pop rbp ; ret
0x0000000000407b8e : add esp, 0xa0 ; pop rbp ; ret
0x00000000004229ba : add esp, 0xc0 ; pop rbp ; ret
0x0000000000412934 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040164e : add esp, 8 ; ret
0x0000000000426404 : add r8b, byte ptr [rax] ; add al, bh ; adc dh, bh ; call rdx
0x000000000041571f : add r8d, dword ptr [rax] ; add byte ptr [rbx + 0x5e8c47d], cl ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x00000000004207e8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041b6ea : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004049bf : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401e4a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000416e8b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004135f6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004216d4 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000041b6a5 : add rsp, 0x120 ; pop rbp ; ret
0x00000000004207b9 : add rsp, 0x130 ; pop rbp ; ret
0x000000000041946c : add rsp, 0x160 ; pop rbp ; ret
0x00000000004046ef : add rsp, 0x18 ; pop rbp ; ret
0x0000000000416ffb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040a201 : add rsp, 0x1f0 ; pop rbp ; ret
0x00000000004074ec : add rsp, 0x20 ; pop rbp ; ret
0x000000000042252a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000415a60 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004075c7 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040936b : add rsp, 0x360 ; pop rbp ; ret
0x00000000004074a6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401df8 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041dab8 : add rsp, 0x520 ; pop rbp ; ret
0x0000000000407025 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404964 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000413e4b : add rsp, 0x80 ; pop rbp ; ret
0x000000000041417f : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407b8d : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004229b9 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000412933 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040164d : add rsp, 8 ; ret
0x000000000041f2be : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423370 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401bc6 : and al, byte ptr [eax] ; add ebx, esi ; ret
0x0000000000401bc7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041b6a8 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425e1d : and dh, bh ; jmp qword ptr [rax]
0x0000000000403cb3 : and dword ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000403e52 : and dword ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406d01 : and dword ptr [rdx], 0x5d ; ret
0x0000000000406cff : and eax, 0x628370 ; pop rbp ; ret
0x0000000000406d23 : and eax, 0x628378 ; pop rbp ; ret
0x00000000004020a9 : call 0x401769
0x000000000041b5a0 : call 0x401829
0x000000000040208d : call 0x401a19
0x0000000000415882 : call 0x401af2
0x0000000000422877 : call 0x401b06
0x0000000000420581 : call 0x4182c9
0x00000000004025aa : call 0xffffffff89aee865
0x000000000041feb6 : call 0xffffffffc3a32aec
0x000000000041feb5 : call 0xffffffffc3a32aed
0x000000000041fef8 : call 0xffffffffc3a32c2e
0x000000000041fef7 : call 0xffffffffc3a32c2f
0x0000000000412979 : call 0xffffffffe903b2c9
0x0000000000412978 : call 0xffffffffe903b2ca
0x000000000040e3bd : call 0xfffffffff7396954
0x000000000041e843 : call 0xfffffffffee66e15
0x000000000041e842 : call 0xfffffffffee66e16
0x000000000041a7d5 : call 0xffffffffff462daa
0x0000000000410ee9 : call 0xffffffffff5594bb
0x0000000000410ee8 : call 0xffffffffff5594bc
0x0000000000410ee9 : call 0xffffffffff5594bd
0x0000000000410ee8 : call 0xffffffffff5594be
0x0000000000409dd8 : call 0xffffffffffad23aa
0x0000000000409dd7 : call 0xffffffffffad23ab
0x000000000041f2fa : call 0xffffffffffbe78cc
0x000000000041f2f9 : call 0xffffffffffbe78cd
0x0000000000425019 : call qword ptr [r12 + rbx*8]
0x00000000004030fa : call qword ptr [rax]
0x000000000041e8e1 : call qword ptr [rbx]
0x0000000000411f05 : call qword ptr [rcx]
0x00000000004023da : call qword ptr [rdi]
0x0000000000403b09 : call qword ptr [rdx]
0x0000000000406650 : call qword ptr [rsi]
0x000000000042501a : call qword ptr [rsp + rbx*8]
0x0000000000401bed : call rax
0x0000000000409dde : call rbx
0x000000000041faee : call rcx
0x0000000000406197 : call rdi
0x000000000042640b : call rdx
0x0000000000416e44 : call rsi
0x000000000041c016 : cdq ; jbe 0x41c03a ; ret
0x000000000041d93d : cdq ; jbe 0x41d961 ; ret
0x0000000000423b1c : cdq ; ret
0x0000000000426408 : clc ; adc dh, bh ; call rdx
0x0000000000425d98 : clc ; add al, 0 ; add byte ptr [rax], dl ; out -3, al ; jmp qword ptr [rax]
0x00000000004189a2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422df0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041417e : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x00000000004216d3 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000410b3d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004191ac : cmp al, -0x17 ; ret
0x0000000000419ddd : cmp al, -0x2a ; ret
0x0000000000402094 : cmp al, 0x25 ; ret
0x0000000000416579 : cmp al, 0x25 ; ret 0x4259
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x0000000000417b4e : cmp eax, 0xe9000003 ; ret 1
0x0000000000412e14 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041bfc2 : cwde ; jbe 0x41bfe6 ; ret
0x0000000000406cd6 : cwde ; jns 0x406cca ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042361b : cwde ; js 0x4235c5 ; ret
0x0000000000423662 : cwde ; js 0x42360c ; ret
0x000000000042369c : cwde ; js 0x423646 ; ret
0x0000000000402504 : cwde ; ret
0x00000000004267a8 : cwde ; sar esi, 1 ; jmp qword ptr [rax]
0x00000000004091d5 : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000004040f9 : dec dword ptr [rax - 0x4606b] ; dec dword ptr [rax - 0x77] ; ret 0x8a44
0x0000000000402091 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000041d802 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000415921 : dec dword ptr [rax - 0x77] ; ret 0x16e8
0x000000000042057d : dec dword ptr [rax - 0x77] ; ret 0x3ae8
0x00000000004153cb : dec dword ptr [rax - 0x77] ; ret 0x6ce8
0x00000000004040ff : dec dword ptr [rax - 0x77] ; ret 0x8a44
0x000000000041d838 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004039e9 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410ce2 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000410fed : dec dword ptr [rax - 0x7f] ; ret 2
0x00000000004124f4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000041b11f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000415b83 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000417b4b : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffd], bh ; ret 1
0x000000000042021f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000410028 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041d6a4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000415a43 : dec ebx ; je 0x415a09 ; ret 0x1ce9
0x0000000000417d52 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a58b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000407a2d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418414 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413e29 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ec73 : fcmovbe st(0), st(5) ; jmp 0x41f2d1
0x00000000004260dd : fcos ; jmp qword ptr [rax]
0x0000000000425e9d : fdivr st(6) ; jmp qword ptr [rax]
0x0000000000417744 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000420939 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041b84f : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000041d806 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000042501c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401e49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422f4c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x628320 ; jmp rax
0x00000000004020ab : idiv bh ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004164de : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000041fcd6 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000040462d : in al, -0x17 ; ret 0
0x0000000000410499 : in al, -0x7f ; ret 0xff9f
0x000000000041067f : in al, -0x7f ; ret 0xffbf
0x0000000000410725 : in al, -0x7f ; ret 0xffc5
0x0000000000410753 : in al, -0x7f ; ret 0xffd5
0x0000000000410821 : in al, -0x7f ; ret 0xffd8
0x00000000004109b7 : in al, -0x7f ; ret 0xffe0
0x0000000000424a6f : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x000000000041870f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041b579 : in al, dx ; int1 ; ret
0x000000000040a54a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041f2c5 : in al, dx ; pop rbp ; ret
0x0000000000423d1b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411b0f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000405f91 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ce40 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004126ba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425e97 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add al, dh ; fdivr st(6) ; jmp qword ptr [rax]
0x000000000040341b : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004211b2 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000041b48b : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000425e87 : inc eax ; or byte ptr [rax], al ; add al, dl ; sar esi, 1 ; jmp rax
0x0000000000426047 : inc eax ; sldt word ptr [rax] ; adc byte ptr [rbx - 1], bl ; jmp rax
0x000000000041b5a4 : inc edi ; in al, dx ; int1 ; ret
0x00000000004135c8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040a172 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000409e62 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000040664a : inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rsi]
0x000000000040cc6f : insd dword ptr [rdi], dx ; ret 0x891a
0x00000000004102af : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000041b193 : int1 ; ret
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x000000000041bfc3 : jbe 0x41bfe5 ; ret
0x000000000041c017 : jbe 0x41c039 ; ret
0x000000000041d93e : jbe 0x41d960 ; ret
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x628320 ; jmp rax
0x0000000000414c72 : je 0x414c34 ; ret 0x8589
0x0000000000414d52 : je 0x414d14 ; ret 0x8589
0x0000000000415940 : je 0x415902 ; ret 0x7d81
0x0000000000415a45 : je 0x415a07 ; ret 0x1ce9
0x0000000000415ff8 : jge 0x41600f ; ret
0x00000000004164e3 : jge 0x4164fa ; ret
0x000000000041c68a : jge 0x41c703 ; ret
0x0000000000424289 : jge 0x424283 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000415ecc : jl 0x415ee3 ; ret
0x000000000041c6de : jle 0x41c757 ; ret
0x000000000041d30c : jle 0x41d385 ; ret
0x00000000004039a9 : jmp 0x3daefc64
0x000000000040182b : jmp 0x401667
0x000000000040a1a2 : jmp 0x40a210
0x000000000040fc5d : jmp 0x412943
0x00000000004126f1 : jmp 0x412945
0x00000000004164dd : jmp 0x416a55
0x0000000000416572 : jmp 0x416a56
0x000000000041b572 : jmp 0x41b6b7
0x000000000041d66f : jmp 0x41dac7
0x000000000041d66e : jmp 0x41dac8
0x000000000041ec75 : jmp 0x41f2cf
0x000000000041fa83 : jmp 0x41fe1a
0x000000000042345b : jmp 0x423466
0x00000000004240cb : jmp 0x4240d6
0x0000000000424541 : jmp 0x42464d
0x0000000000403302 : jmp 0xffffffff89aef5bd
0x000000000041965e : jmp 0xffffffffb7039a2a
0x000000000042361a : jmp 0xffffffffc3e6aebb
0x00000000004039fa : jmp 0xffffffffe9aefcb5
0x000000000040fd7d : jmp qword ptr [rax]
0x0000000000410eef : jmp qword ptr [rbx]
0x00000000004128c0 : jmp qword ptr [rcx]
0x00000000004213e7 : jmp qword ptr [rdi]
0x0000000000412e15 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040e3c6 : jmp qword ptr [rdx]
0x0000000000410e7f : jmp qword ptr [rsi]
0x0000000000401b67 : jmp rax
0x0000000000411a12 : jmp rbx
0x000000000041fd31 : jmp rcx
0x00000000004120ae : jmp rdi
0x0000000000401ba7 : jmp rdx
0x0000000000404020 : jmp rsi
0x0000000000408e5f : jmp rsp
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x00000000004042d6 : jne 0x404322 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a170 : jne 0x40a179 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004135c6 : jne 0x4135cf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000422875 : jne 0x42285f ; call 0x401b08
0x0000000000406cd7 : jns 0x406cc9 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404967 : jo 0x4049c8 ; ret
0x00000000004077e6 : jo 0x407847 ; ret
0x0000000000407d87 : jo 0x407de8 ; ret
0x00000000004137e1 : jo 0x413842 ; ret
0x0000000000413904 : jo 0x413965 ; ret
0x0000000000413a3e : jo 0x413a9f ; ret
0x00000000004177ec : jo 0x41784d ; ret
0x0000000000422df4 : jo 0x422e55 ; ret
0x0000000000412936 : js 0x41294a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042361c : js 0x4235c4 ; ret
0x0000000000423663 : js 0x42360b ; ret
0x000000000042369d : js 0x423645 ; ret
0x000000000042611d : loop 0x426120 ; jmp qword ptr [rax]
0x00000000004048bc : loopne 0x4048c5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004074eb : loopne 0x40753b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004074ea : loopne 0x40753c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004077e2 : loopne 0x407832 ; add esp, 0x70 ; pop rbp ; ret
0x00000000004077e1 : loopne 0x407833 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040a90e : loopne 0x40a917 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415a5f : loopne 0x415ab2 ; add esp, 0x2d0 ; pop rbp ; ret
0x0000000000417530 : loopne 0x417539 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041793c : loopne 0x41798c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041793b : loopne 0x41798d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041818f : loopne 0x4181df ; add esp, 0x40 ; pop rbp ; ret
0x000000000041818e : loopne 0x4181e0 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000419431 : loopne 0x41943a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041946b : loopne 0x4194be ; add esp, 0x160 ; pop rbp ; ret
0x0000000000401ff0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a08d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000409f99 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a7aa : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004226c3 : mov al, 0x2d ; ret 0xa414
0x000000000040aacb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042336d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042351d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423d19 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406d21 : mov byte ptr [0x628378], al ; pop rbp ; ret
0x000000000041d041 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000412488 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cdc9 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000401bc3 : mov byte ptr [rip + 0x22678e], 1 ; ret
0x00000000004263a8 : mov byte ptr [rsi + rdi*8], cl ; call qword ptr [rsi]
0x0000000000419619 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404962 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f2c1 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423373 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000423e45 : mov dl, -0x47 ; ret
0x0000000000415630 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406cfd : mov dword ptr [0x628370], edi ; pop rbp ; ret
0x000000000040a787 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a54b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a6bf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004074e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041587c : mov dword ptr [rbp - 0x2b0], eax ; call 0x401af8
0x0000000000401fee : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a93d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004207ec : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000041b6ee : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000401df4 : mov eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a43f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041787b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422ad8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041755f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040733c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041797e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417250 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407d81 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a78a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000424a6d : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041793a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004077e0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004182a5 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a334 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a43c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a545 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041807f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004046ec : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040a6c1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004137db : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000422f4a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004189a0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422dee : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004049c3 : mov eax, esi ; pop rbp ; ret
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x000000000040619d : mov ebx, 0xc7000006 ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040a548 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401be5 : mov edi, 0x627e20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x628320 ; jmp rax
0x0000000000401ba2 : mov edi, 0x628320 ; jmp rdx
0x000000000041b6e8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000425017 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000425016 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403ca2 : mov esi, 0xa4f659b9 ; ret
0x0000000000422874 : mov esi, dword ptr [rbp - 0x20] ; call 0x401b09
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x628320 ; jmp rdx
0x000000000041f2c4 : mov esp, ebp ; pop rbp ; ret
0x0000000000401bc5 : mov fs, word ptr [rdi + 0x22] ; add byte ptr [rcx], al ; ret
0x0000000000406cfc : mov qword ptr [0x628370], rdi ; pop rbp ; ret
0x000000000041587b : mov qword ptr [rbp - 0x2b0], rax ; call 0x401af9
0x000000000040a93c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004207eb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041b6ed : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401fef : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004226c2 : mov r8b, 0x2d ; ret 0xa414
0x000000000041787a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422ad7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041755e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040733b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041797d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041724f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407d80 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000417939 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004077df : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004182a4 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a333 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a43b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004046eb : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004137da : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004049c2 : mov rax, rsi ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x628320 ; jmp rdx
0x000000000041f2c3 : mov rsp, rbp ; pop rbp ; ret
0x00000000004135ca : mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004135cb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000410d1c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000040666b : movabs al, byte ptr [0x81b955b60f5e00c6] ; ret 0x40
0x00000000004240be : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004164dc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x416a56
0x0000000000402a44 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000419618 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404961 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f2c0 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423372 : movzx eax, al ; pop rbp ; ret
0x000000000042611c : nop ; loop 0x426121 ; jmp qword ptr [rax]
0x0000000000425e0c : nop ; sbb bh, dh ; jmp rax
0x0000000000425038 : nop dword ptr [rax + rax] ; ret
0x0000000000412937 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004263a9 : or al, 0xfffffffffffffffe ; call qword ptr [rsi]
0x0000000000426a49 : or bh, bh ; call rdx
0x0000000000425e89 : or byte ptr [rax], al ; add al, dl ; sar esi, 1 ; jmp rax
0x0000000000426a45 : or byte ptr [rax], al ; add byte ptr [rax], bl ; or bh, bh ; call rdx
0x0000000000425e99 : or dword ptr [rax], eax ; add al, dh ; fdivr st(6) ; jmp qword ptr [rax]
0x0000000000415b87 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040a16f : or eax, 0xc7ffff75 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004139c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426349 : or esi, edi ; call qword ptr [rsi]
0x0000000000409df7 : out -0x47, eax ; ret 0x614e
0x0000000000425f4d : out -2, eax ; jmp rax
0x0000000000425d9d : out -3, al ; jmp qword ptr [rax]
0x000000000042351f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042336f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404352 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042502c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404354 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042502e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404356 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425030 : pop r14 ; pop r15 ; ret
0x0000000000404358 : pop r15 ; pop rbp ; ret
0x0000000000425032 : pop r15 ; ret
0x0000000000423b98 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x22678e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x628320 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x628320 ; jmp rdx
0x000000000042502b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404355 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042502f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b55 : pop rbp ; ret
0x0000000000406855 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041293a : pop rbx ; pop rbp ; ret
0x0000000000423e44 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000404359 : pop rdi ; pop rbp ; ret
0x0000000000425033 : pop rdi ; ret
0x000000000042428b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041b18b : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000404357 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000425031 : pop rsi ; pop r15 ; ret
0x0000000000404353 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042502d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040cb72 : pop rsp ; ret
0x0000000000406145 : popfq ; ret 0xd284
0x000000000041235f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401dfb : push rax ; pop rbp ; ret
0x0000000000416e3b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000417743 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000420938 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041b84e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000041d805 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000410498 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041067e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000410724 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000410752 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000410820 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004109b6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000041d040 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000401be4 : push rbp ; mov edi, 0x627e20 ; mov rbp, rsp ; call rax
0x000000000041aa13 : pushfq ; ret 0x8445
0x00000000004039b3 : pushfq ; ret 0xd284
0x0000000000401651 : ret
0x00000000004044af : ret 0
0x0000000000419bb9 : ret 0x10
0x000000000041e16f : ret 0x110a
0x0000000000415924 : ret 0x16e8
0x000000000041b852 : ret 0x18
0x0000000000415a47 : ret 0x1ce9
0x0000000000423d4b : ret 0x2030
0x000000000041baf2 : ret 0x2106
0x0000000000401a32 : ret 0x2267
0x0000000000401832 : ret 0x2268
0x00000000004212c6 : ret 0x24e8
0x000000000040fe77 : ret 0x2a
0x0000000000413196 : ret 0x2c1
0x0000000000414481 : ret 0x31e9
0x0000000000420580 : ret 0x3ae8
0x00000000004039ab : ret 0x3d6e
0x0000000000406558 : ret 0x40
0x000000000041657b : ret 0x4259
0x000000000040cdda : ret 0x43fa
0x00000000004142d8 : ret 0x4589
0x0000000000413dba : ret 0x46
0x00000000004230f3 : ret 0x5e5
0x0000000000409b9f : ret 0x614e
0x00000000004153ce : ret 0x6ce8
0x0000000000414882 : ret 0x7961
0x0000000000415942 : ret 0x7d81
0x000000000042226d : ret 0x7de8
0x0000000000409ceb : ret 0x8148
0x000000000040341f : ret 0x8445
0x00000000004083c0 : ret 0x8589
0x000000000040cc70 : ret 0x891a
0x00000000004236fc : ret 0x8934
0x00000000004091d8 : ret 0x8948
0x00000000004025ac : ret 0x896e
0x0000000000419661 : ret 0x89b6
0x0000000000404102 : ret 0x8a44
0x00000000004236d8 : ret 0x8b34
0x0000000000403e93 : ret 0x8b48
0x0000000000409d78 : ret 0x8ce9
0x000000000041e746 : ret 0xa
0x00000000004226c5 : ret 0xa414
0x0000000000410b45 : ret 0xa9b9
0x000000000040c5c2 : ret 0xade6
0x00000000004039ec : ret 0xb0
0x00000000004102b0 : ret 0xb91a
0x000000000041991b : ret 0xb9b6
0x0000000000408e63 : ret 0xbe9
0x000000000041b44e : ret 0xc
0x0000000000401b85 : ret 0xc148
0x0000000000411af0 : ret 0xcae8
0x00000000004039b4 : ret 0xd284
0x0000000000412363 : ret 0xd4e9
0x0000000000409467 : ret 0xd549
0x00000000004143d5 : ret 0xdde9
0x00000000004039fc : ret 0xe96e
0x000000000041297c : ret 0xee8
0x0000000000410d25 : ret 0xf41
0x00000000004096ec : ret 0xfb94
0x000000000040feca : ret 0xff18
0x000000000041049b : ret 0xff9f
0x0000000000411e3e : ret 0xffa5
0x0000000000410681 : ret 0xffbf
0x00000000004110eb : ret 0xffc4
0x0000000000410727 : ret 0xffc5
0x00000000004042ca : ret 0xffd5
0x0000000000410823 : ret 0xffd8
0x0000000000411191 : ret 0xffd9
0x0000000000403c9a : ret 0xffdd
0x00000000004109b9 : ret 0xffe0
0x000000000040fa8e : ret 0xfffa
0x0000000000425d95 : ret 0xfffd
0x0000000000415884 : ret 0xfffe
0x000000000041d809 : ret 0xffff
0x0000000000404281 : ret 1
0x0000000000410ff0 : ret 2
0x0000000000412477 : ret 4
0x0000000000415bb8 : ret 5
0x0000000000412b60 : ret 8
0x000000000041f375 : ret 9
0x000000000040777a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415a63 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425dc8 : rol byte ptr [rip + 0xf900000], -2 ; jmp rax
0x000000000040a546 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x000000000041f2c2 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000404963 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4049cc ; ret
0x000000000041961a : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000425e88 : ror byte ptr [rax], 0 ; add al, dl ; sar esi, 1 ; jmp rax
0x000000000040a547 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000425fc8 : ror byte ptr [rip + 0x1c300000], -1 ; jmp rax
0x0000000000426008 : ror byte ptr [rsi], 0 ; add al, al ; sub edi, edi ; jmp rax
0x0000000000417740 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000042349c : sahf ; ret 0xd284
0x0000000000416573 : salc ; add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4259
0x0000000000419dde : salc ; ret
0x0000000000403b06 : sar dh, -1 ; call qword ptr [rdx]
0x000000000040401d : sar dh, -1 ; jmp rsi
0x00000000004268c9 : sar dh, cl ; jmp qword ptr [rdx]
0x0000000000409df4 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x00000000004267a9 : sar esi, 1 ; jmp qword ptr [rax]
0x0000000000425e8d : sar esi, 1 ; jmp rax
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x0000000000425fdd : sbb al, -1 ; jmp qword ptr [rax]
0x0000000000425fcd : sbb al, -1 ; jmp rax
0x0000000000404211 : sbb al, byte ptr [rcx + 0x3d] ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000425f9d : sbb bh, bh ; jmp qword ptr [rax]
0x0000000000425e0d : sbb bh, dh ; jmp rax
0x00000000004135f9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000417323 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040610a : sbb dword ptr [rsi - 0x7e6baa75], ecx ; ret 1
0x0000000000410b3e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000424ca5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424ca7 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042600c : shr byte ptr [rcx], -1 ; jmp rax
0x0000000000426049 : sldt word ptr [rax] ; adc byte ptr [rbx - 1], bl ; jmp rax
0x0000000000403a3c : stc ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000425d9e : std ; jmp qword ptr [rax]
0x000000000040db87 : sub al, 0x38 ; ret 0x8589
0x0000000000410b43 : sub al, 0x38 ; ret 0xa9b9
0x000000000041feb8 : sub al, 0x61 ; ret
0x00000000004049bd : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004024cb : sub edi, dword ptr [rdx] ; ret
0x000000000042600d : sub edi, edi ; jmp rax
0x0000000000425081 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000425080 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041b121 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000416e5b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041fc29 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000409fd6 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ab58 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041d66d : test al, 0x45 ; jmp 0x41dac9
0x00000000004137dd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000416d38 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042503a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415b85 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000417b4d : test byte ptr [rip - 0x16fffffd], bh ; ret 1
0x0000000000420221 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004025a4 : test dword ptr [rax + 0x2dfffffe], ebx ; call 0xffffffff89aee86b
0x00000000004032fc : test dword ptr [rax + 0x2dfffffe], ebx ; jmp 0xffffffff89aef5c3
0x000000000040a174 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000409dda : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000416e40 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416ba8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041f2fc : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000041faea : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000415a3f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x415a0d ; ret 0x1ce9
0x000000000041fd2d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041fabf : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004061a2 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040664c : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rsi]
0x0000000000405d81 : test dword ptr [rdi + rdi*8 - 1], esi ; call rax
0x0000000000406193 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x0000000000420dee : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000409920 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x00000000004098b0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000406cd5 : xchg eax, ebp ; cwde ; jns 0x406ccb ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ab71 : xchg eax, ebp ; ret
0x000000000040341e : xchg eax, ebp ; ret 0x8445
0x0000000000403c3a : xchg eax, ebp ; ret 0xd284
0x0000000000424ca6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041cdcf : xchg eax, ebx ; ret 0xd284
0x000000000040db6b : xchg eax, ecx ; ret
0x000000000040771a : xchg eax, edi ; ret 0xd284
0x000000000041b85f : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dcbb : xchg eax, edx ; ret
0x0000000000416d3e : xchg eax, edx ; ret 0xd284
0x00000000004134f2 : xchg eax, esi ; ret
0x000000000040ab53 : xchg eax, esp ; ret
0x0000000000403a43 : xchg eax, esp ; ret 0x8445
0x00000000004048c2 : xchg eax, esp ; ret 0xd284
0x0000000000420948 : xor al, 0x41 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004207bc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425fcc : xor byte ptr [rdi + rdi*8], bl ; jmp rax
0x0000000000413af7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a6bd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
