0x0000000000422cf0 : adc al, -0x76 ; push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000460a0d : adc al, 0 ; add al, al ; ret
0x0000000000455768 : adc al, 0x5c ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000046086d : adc al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp ch, bh ; jmp qword ptr [rdi]
0x000000000045f9f0 : adc al, dh ; sti ; call rbx
0x0000000000423f65 : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000044dae0 : adc byte ptr [rax - 0x75], cl ; jge 0x44daa2 ; call rax
0x000000000044dadf : adc byte ptr [rax - 0x75], cl ; jge 0x44daa3 ; call rax
0x000000000044ddb9 : adc byte ptr [rax - 0x75], cl ; jge 0x44dd7b ; call rax
0x000000000044ddb8 : adc byte ptr [rax - 0x75], cl ; jge 0x44dd7c ; call rax
0x0000000000460870 : adc byte ptr [rax], bh ; std ; jmp qword ptr [rdi]
0x000000000045ebfc : adc byte ptr [rbx + rdi*8 + 0xeb8ff], bh ; add byte ptr [rax], al ; ret 0xfffb
0x000000000040c139 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045fb70 : adc byte ptr [rdi], dl ; cld ; jmp qword ptr [rax]
0x0000000000458d0d : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044831b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041e8ae : adc dword ptr [rdx + 0x3d], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000460b6d : adc eax, 0xcc700000 ; std ; jmp qword ptr [rax]
0x000000000041d62c : adc eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000043cdb9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045fe8b : add ah, ah ; or byte ptr [rax], al ; add byte ptr [rax], ah ; cld ; call qword ptr [rax]
0x000000000045ff8b : add ah, ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rcx]
0x000000000046086b : add ah, al ; adc al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp ch, bh ; jmp qword ptr [rdi]
0x0000000000460b6b : add ah, al ; adc eax, 0xcc700000 ; std ; jmp qword ptr [rax]
0x000000000045fa6b : add ah, al ; add al, 0 ; add al, dh ; cld ; sti ; call qword ptr [rcx]
0x000000000045fb6b : add ah, al ; add eax, 0x17100000 ; cld ; jmp qword ptr [rax]
0x000000000045fa6d : add al, 0 ; add al, dh ; cld ; sti ; call qword ptr [rcx]
0x000000000045f9ad : add al, 0 ; add byte ptr [rax - 0x53], dl ; sti ; jmp rbx
0x000000000044ff43 : add al, 0 ; add cl, ch ; ret 1
0x0000000000460fac : add al, 0x1a ; add byte ptr [rax], al ; loopne 0x460fa1 ; std ; call qword ptr [rdx]
0x00000000004614ac : add al, 0x1f ; add byte ptr [rax], al ; nop ; jns 0x4614b8 ; call qword ptr [rbx]
0x0000000000428142 : add al, 0x25 ; push 0x5d006639 ; ret
0x000000000042bb97 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ad65 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000045f9ac : add al, 4 ; add byte ptr [rax], al ; push rax ; lodsd eax, dword ptr [rsi] ; sti ; jmp rbx
0x000000000045fdac : add al, 8 ; add byte ptr [rax], al ; sub byte ptr [rdi], -4 ; call qword ptr [rbx]
0x000000000045f92f : add al, ah ; pushfq ; sti ; jmp qword ptr [rcx]
0x0000000000460a0f : add al, al ; ret
0x0000000000447b43 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042f234 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000422bdb : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040636f : add al, ch ; jmp 0x406339
0x00000000004063eb : add al, ch ; outsd dx, dword ptr [rsi] ; ret
0x000000000040673d : add al, ch ; pop rbp ; ret 0xffff
0x0000000000422bd7 : add al, ch ; ret
0x0000000000450218 : add al, ch ; ret 0xfb21
0x0000000000406a98 : add al, ch ; ret 0xffbc
0x0000000000416516 : add al, ch ; ret 0xfffe
0x000000000040659f : add al, ch ; sti ; ret
0x000000000045fa6f : add al, dh ; cld ; sti ; call qword ptr [rcx]
0x000000000045f303 : add al, dh ; ret
0x000000000045fd2f : add al, dh ; sub edi, esp ; jmp rcx
0x00000000004603ef : add al, dl ; mov dh, -4 ; jmp rsi
0x0000000000460d6f : add al, dl ; out -3, al ; jmp qword ptr [rsi]
0x000000000041a6e3 : add bh, al ; in al, 0x31 ; ret
0x0000000000450396 : add bh, al ; in al, dx ; int1 ; ret
0x000000000042edf1 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000442f1f : add bh, al ; test dword ptr [rax - 0x2c000002], ecx ; ret 0x39aa
0x0000000000421a6f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x0000000000447f3e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000447ca6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000454908 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000454b4b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004548dd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000044491f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000444ef6 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000045b93f : add bl, dh ; ret
0x000000000042eefa : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000045eafb : add byte ptr [rax + 0x36], al ; cli ; call rax
0x000000000046000f : add byte ptr [rax + 0x7c], dl ; cld ; call qword ptr [rsi]
0x000000000041dc3f : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x0000000000424006 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x0000000000423fbe : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000045fdab : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; sub byte ptr [rdi], -4 ; call qword ptr [rbx]
0x0000000000460ecf : add byte ptr [rax - 0x18], ah ; std ; jmp qword ptr [rdi]
0x0000000000460b6f : add byte ptr [rax - 0x34], dh ; std ; jmp qword ptr [rax]
0x000000000045f9af : add byte ptr [rax - 0x53], dl ; sti ; jmp rbx
0x000000000046030f : add byte ptr [rax - 0x54], al ; cld ; call qword ptr [rdx]
0x0000000000417d46 : add byte ptr [rax - 0x6bf10000], ah ; ret 0xd284
0x000000000042239d : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000044dec1 : add byte ptr [rax - 0x75], cl ; jge 0x44de7b ; call rax
0x0000000000455755 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045066b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043f8fd : add byte ptr [rax - 0x77], cl ; jge 0x43f900 ; pop rbp ; ret
0x00000000004062d9 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000426db3 : add byte ptr [rax - 0x77], cl ; ret 0xf4e8
0x00000000004600ef : add byte ptr [rax - 0x79], dh ; cld ; jmp rbx
0x000000000045fe8f : add byte ptr [rax], ah ; cld ; call qword ptr [rax]
0x000000000045f4fb : add byte ptr [rax], ah ; ret 0xffff
0x000000000045fc4f : add byte ptr [rax], ah ; sub ah, bh ; jmp qword ptr [rdi]
0x0000000000460a0a : add byte ptr [rax], al ; adc al, 0 ; add al, al ; ret
0x000000000045f9ee : add byte ptr [rax], al ; adc al, dh ; sti ; call rbx
0x000000000046086e : add byte ptr [rax], al ; adc byte ptr [rax], bh ; std ; jmp qword ptr [rdi]
0x000000000045fb6e : add byte ptr [rax], al ; adc byte ptr [rdi], dl ; cld ; jmp qword ptr [rax]
0x0000000000460faa : add byte ptr [rax], al ; add al, 0x1a ; add byte ptr [rax], al ; loopne 0x460fa3 ; std ; call qword ptr [rdx]
0x00000000004614aa : add byte ptr [rax], al ; add al, 0x1f ; add byte ptr [rax], al ; nop ; jns 0x4614ba ; call qword ptr [rbx]
0x000000000045f9aa : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; push rax ; lodsd eax, dword ptr [rsi] ; sti ; jmp rbx
0x000000000045fdaa : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; sub byte ptr [rdi], -4 ; call qword ptr [rbx]
0x000000000040673b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret 0xffff
0x0000000000422bd5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040659d : add byte ptr [rax], al ; add al, ch ; sti ; ret
0x000000000042eefb : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000447f3c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000447ca4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000454906 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000454b49 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000444ef4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000045b93d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000424004 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x0000000000423fbc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042239b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000455753 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000450669 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043f8fb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x43f902 ; pop rbp ; ret
0x00000000004062d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000426db1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf4e8
0x000000000045b93b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004007b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004007ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000459789 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040606a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405f59 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406df8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f8fa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000045b93c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004007bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000419b4b : add byte ptr [rax], al ; add byte ptr [rbx + 0x212dbc45], cl ; push rcx ; ret 0x8983
0x000000000045ada4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000041eb52 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2b2ddc45], cl ; ret
0x000000000041a622 : add byte ptr [rax], al ; add byte ptr [rbx + 0x312de045], cl ; ret
0x000000000043cafe : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419d79 : add byte ptr [rax], al ; add byte ptr [rbx + 0x482dbc45], cl ; ret
0x0000000000418a40 : add byte ptr [rax], al ; add byte ptr [rbx + 0x482dd445], cl ; ret
0x000000000042bc01 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000040b85b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045951e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x000000000042b88f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000045a199 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000045a115 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000448fcf : add byte ptr [rax], al ; add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x000000000042acc2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000041eaac : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x000000000044fe4e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000412603 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x000000000044da56 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040a1dc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043b9b1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000046132e : add byte ptr [rax], al ; add byte ptr [rcx - 2], dh ; call rdx
0x000000000044906d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000045ff8e : add byte ptr [rax], al ; add byte ptr [rdi - 4], ch ; call qword ptr [rcx]
0x000000000045a255 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041a45b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040861c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000434a0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040606c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422d13 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000429b45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004241a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004240c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000447e3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ad67 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405f5b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004093d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045fcce : add byte ptr [rax], al ; add byte ptr [rdx], ch ; cld ; jmp rsi
0x000000000045feee : add byte ptr [rax], al ; add byte ptr [rsi - 4], dl ; call qword ptr [rbx]
0x0000000000460a09 : add byte ptr [rax], al ; add byte ptr [rsp + rdx], ah ; add al, al ; ret
0x0000000000443210 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000429d7f : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000045eaf6 : add byte ptr [rax], al ; add qword ptr [r8], r8 ; add byte ptr [rax + 0x36], al ; cli ; call rax
0x0000000000406dfa : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041eac6 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000429475 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044831d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004227a9 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429a2c : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402123 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000460fca : add byte ptr [rax], al ; and al, 0x1a ; add byte ptr [rax], al ; loopne 0x460fc3 ; std ; call qword ptr [rdx]
0x000000000045fcca : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; cld ; jmp rsi
0x000000000045fc4e : add byte ptr [rax], al ; and byte ptr [rax], ch ; cld ; jmp qword ptr [rdi]
0x000000000045fe8e : add byte ptr [rax], al ; and byte ptr [rdi - 4], cl ; call qword ptr [rax]
0x00000000004498dd : add byte ptr [rax], al ; call 0x402188
0x00000000004066d1 : add byte ptr [rax], al ; call 0x4029a4
0x000000000045eafa : add byte ptr [rax], al ; cli ; call rax
0x0000000000460c8a : add byte ptr [rax], al ; in al, 0x16 ; add byte ptr [rax], al ; or ch, 0xfd ; jmp qword ptr [rdx]
0x000000000046168a : add byte ptr [rax], al ; in al, 0x20 ; add byte ptr [rax], al ; nop ; mov ch, -2 ; jmp qword ptr [rdi]
0x000000000045fe8a : add byte ptr [rax], al ; in al, 8 ; add byte ptr [rax], al ; and byte ptr [rdi - 4], cl ; call qword ptr [rax]
0x000000000045ff8a : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; add byte ptr [rdi - 4], ch ; call qword ptr [rcx]
0x0000000000402159 : add byte ptr [rax], al ; jmp 0x402139
0x0000000000429d7b : add byte ptr [rax], al ; jmp 0x429d8a
0x0000000000459a59 : add byte ptr [rax], al ; jmp 0x459a68
0x000000000045a6c9 : add byte ptr [rax], al ; jmp 0x45a6d8
0x000000000045ae3f : add byte ptr [rax], al ; jmp 0x45af4f
0x000000000046132f : add byte ptr [rax], al ; jno 0x461335 ; call rdx
0x00000000004600ee : add byte ptr [rax], al ; jo 0x46007e ; cld ; jmp rbx
0x0000000000460b6e : add byte ptr [rax], al ; jo 0x460b43 ; std ; jmp qword ptr [rax]
0x000000000046030e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rdx]
0x000000000045f92e : add byte ptr [rax], al ; loopne 0x45f8d3 ; sti ; jmp qword ptr [rcx]
0x0000000000460fae : add byte ptr [rax], al ; loopne 0x460f9f ; std ; call qword ptr [rdx]
0x0000000000460fce : add byte ptr [rax], al ; loopne 0x460fbf ; std ; call qword ptr [rdx]
0x0000000000460fee : add byte ptr [rax], al ; loopne 0x460fdf ; std ; call qword ptr [rdx]
0x000000000046012e : add byte ptr [rax], al ; mov al, -0x74 ; cld ; call qword ptr [rsi]
0x000000000044cdac : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000044cd2d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000045a8d7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043f55a : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000043f58a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f6bd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f819 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042248d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f631 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043f8fc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004290e9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042b29c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004342d9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044a04c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042239c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000046184a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rax], dl ; sar dh, 1 ; jmp rax
0x000000000046034a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0xac400000 ; cld ; call qword ptr [rdx]
0x0000000000461c2e : add byte ptr [rax], al ; nop ; cmp bh, -1 ; ret 0
0x00000000004614ae : add byte ptr [rax], al ; nop ; jns 0x4614b6 ; call qword ptr [rbx]
0x000000000046168e : add byte ptr [rax], al ; nop ; mov ch, -2 ; jmp qword ptr [rdi]
0x000000000046000a : add byte ptr [rax], al ; or al, byte ptr fs:[rax] ; add byte ptr [rax + 0x7c], dl ; cld ; call qword ptr [rsi]
0x0000000000460c8e : add byte ptr [rax], al ; or ch, 0xfd ; jmp qword ptr [rdx]
0x000000000045f54a : add byte ptr [rax], al ; or dh, 0xff ; call qword ptr [rax]
0x000000000045feea : add byte ptr [rax], al ; or dword ptr [rax], r8d ; add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rbx]
0x000000000046030a : add byte ptr [rax], al ; or eax, 0xac400000 ; cld ; call qword ptr [rdx]
0x00000000004600ea : add byte ptr [rax], al ; or r8d, dword ptr [rax] ; add byte ptr [rax - 0x79], dh ; cld ; jmp rbx
0x000000000045ff8f : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rcx]
0x0000000000402d2b : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043caff : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041acd7 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b85c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046000e : add byte ptr [rax], al ; push rax ; jl 0x460014 ; call qword ptr [rsi]
0x000000000045f9ae : add byte ptr [rax], al ; push rax ; lodsd eax, dword ptr [rsi] ; sti ; jmp rbx
0x000000000045ee4a : add byte ptr [rax], al ; push rax ; ret 0xfffc
0x000000000045f502 : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000045feef : add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rbx]
0x000000000045b93e : add byte ptr [rax], al ; ret
0x000000000045ec03 : add byte ptr [rax], al ; ret 0xfffb
0x00000000004007be : add byte ptr [rax], al ; ret 2
0x000000000045fa0e : add byte ptr [rax], al ; sal al, 1 ; sti ; call qword ptr [rbx]
0x0000000000460d6e : add byte ptr [rax], al ; shl dh, 1 ; std ; jmp qword ptr [rsi]
0x000000000045fccf : add byte ptr [rax], al ; sub bh, ah ; jmp rsi
0x000000000045fdae : add byte ptr [rax], al ; sub byte ptr [rdi], -4 ; call qword ptr [rbx]
0x000000000045f92a : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; loopne 0x45f8d7 ; sti ; jmp qword ptr [rcx]
0x000000000046012a : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax], al ; mov al, -0x74 ; cld ; call qword ptr [rsi]
0x000000000045ff2a : add byte ptr [rax], al ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; xor byte ptr [rdx - 4], bl ; call qword ptr [rax]
0x000000000046032a : add byte ptr [rax], al ; test byte ptr [rip - 0x53c00000], cl ; cld ; call qword ptr [rdx]
0x00000000004601af : add byte ptr [rax], al ; xchg eax, edx ; cld ; call rdx
0x0000000000460e6e : add byte ptr [rax], al ; xor al, ch ; std ; jmp qword ptr [rdi]
0x000000000045ff2e : add byte ptr [rax], al ; xor byte ptr [rdx - 4], bl ; call qword ptr [rax]
0x000000000045ff2f : add byte ptr [rax], dh ; pop rdx ; cld ; call qword ptr [rax]
0x000000000046086f : add byte ptr [rax], dl ; cmp ch, bh ; jmp qword ptr [rdi]
0x000000000046184f : add byte ptr [rax], dl ; sar dh, 1 ; jmp rax
0x000000000046034b : add byte ptr [rbp + rcx - 0x53c00000], ah ; cld ; call qword ptr [rdx]
0x000000000046032b : add byte ptr [rbp + rcx - 0x53c00000], al ; cld ; call qword ptr [rdx]
0x000000000046030b : add byte ptr [rbp + rcx], ah ; add byte ptr [rax - 0x54], al ; cld ; call qword ptr [rdx]
0x000000000042c265 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042c2a7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000419b4d : add byte ptr [rbx + 0x212dbc45], cl ; push rcx ; ret 0x8983
0x000000000045ada6 : add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000041eb54 : add byte ptr [rbx + 0x2b2ddc45], cl ; ret
0x0000000000440fdf : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x440fc7 ; ret
0x000000000041a624 : add byte ptr [rbx + 0x312de045], cl ; ret
0x000000000042a1ba : add byte ptr [rbx + 0x352dec45], cl ; sub al, -0x4c ; ret
0x000000000042a1e6 : add byte ptr [rbx + 0x362dec45], cl ; sub al, -0x4c ; ret
0x000000000043cb00 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041acd8 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000419d30 : add byte ptr [rbx + 0x472dbc45], cl ; ret
0x0000000000419d7b : add byte ptr [rbx + 0x482dbc45], cl ; ret
0x0000000000418a42 : add byte ptr [rbx + 0x482dd445], cl ; ret
0x000000000042bc03 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000448fe7 : add byte ptr [rbx + 0x5d2dd045], cl ; test al, -2 ; ret 0x4589
0x000000000040b85d : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459520 : add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x000000000042b891 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000045f92b : add byte ptr [rbx + rax - 0x63200000], al ; sti ; jmp qword ptr [rcx]
0x000000000046012b : add byte ptr [rbx + rcx - 0x73500000], al ; cld ; call qword ptr [rsi]
0x00000000004600eb : add byte ptr [rbx + rcx], al ; add byte ptr [rax - 0x79], dh ; cld ; jmp rbx
0x000000000045a19b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000045a117 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000042206f : add byte ptr [rbx - 0x6bd243bb], cl ; sbb ch, bh ; ret 0x8589
0x0000000000448fd1 : add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x000000000042acc4 : add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000041eaae : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x000000000044ffae : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000044fe50 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x000000000042126a : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000412605 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x00000000004093cf : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000417d43 : add byte ptr [rcx + 0xa000ff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044da58 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040a1de : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041dc42 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000043b9b3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045ff2b : add byte ptr [rcx + rcx + 0x5a300000], al ; cld ; call qword ptr [rax]
0x000000000045feeb : add byte ptr [rcx + rcx], al ; add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rbx]
0x0000000000425f62 : add byte ptr [rcx - 0xe76b], cl ; dec dword ptr [rax - 0x77] ; ret 0x8d89
0x0000000000461330 : add byte ptr [rcx - 2], dh ; call rdx
0x000000000042e2ef : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402968 : add byte ptr [rcx], al ; ret
0x000000000044906f : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000444cb7 : add byte ptr [rdi + 0x3d], bh ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045eaf7 : add byte ptr [rdi + 1], cl ; add byte ptr [rax], al ; cli ; call rax
0x000000000045fd2b : add byte ptr [rdi + rax + 0x2bf00000], al ; cld ; jmp rcx
0x000000000045fccb : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; cld ; jmp rsi
0x00000000004614ab : add byte ptr [rdi + rbx], al ; add byte ptr [rax], al ; nop ; jns 0x4614b9 ; call qword ptr [rbx]
0x000000000045ff90 : add byte ptr [rdi - 4], ch ; call qword ptr [rcx]
0x000000000043f84a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045a257 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041a45d : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040861e : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000434a0f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040606e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422d15 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000429b47 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004241aa : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004240c6 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000447e3c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ad69 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405f5d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004093d5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000460fcb : add byte ptr [rdx + rbx], ah ; add byte ptr [rax], al ; loopne 0x460fc2 ; std ; call qword ptr [rdx]
0x0000000000460fab : add byte ptr [rdx + rbx], al ; add byte ptr [rax], al ; loopne 0x460fa2 ; std ; call qword ptr [rdx]
0x000000000046004b : add byte ptr [rdx + rcx - 0x7f400000], ah ; cld ; call qword ptr [rsi]
0x000000000046000b : add byte ptr [rdx + rcx], ah ; add byte ptr [rax + 0x7c], dl ; cld ; call qword ptr [rsi]
0x000000000042980d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045fcd0 : add byte ptr [rdx], ch ; cld ; jmp rsi
0x000000000042b71d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045fc4b : add byte ptr [rsi + rax + 0x28200000], ah ; cld ; jmp qword ptr [rdi]
0x00000000004603eb : add byte ptr [rsi + rcx], al ; add al, dl ; mov dh, -4 ; jmp rsi
0x000000000045fef0 : add byte ptr [rsi - 4], dl ; call qword ptr [rbx]
0x000000000045f9ab : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; push rax ; lodsd eax, dword ptr [rsi] ; sti ; jmp rbx
0x0000000000460a4b : add byte ptr [rsp + rdx - 0x35600000], ah ; std ; jmp qword ptr [rdx]
0x0000000000460a0b : add byte ptr [rsp + rdx], ah ; add al, al ; ret
0x000000000044c826 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000461c2d : add byte ptr es:[rax], al ; nop ; cmp bh, -1 ; ret 0
0x0000000000402967 : add byte ptr es:[rcx], al ; ret
0x0000000000426f05 : add cl, ch ; ret
0x0000000000443212 : add cl, ch ; ret 0
0x00000000004071e8 : add cl, ch ; ret 1
0x0000000000429d81 : add cl, ch ; ret 2
0x0000000000426e1b : add dh, 0 ; xor bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000043117a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000450394 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x000000000042edef : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000421a6d : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x000000000045eaf9 : add dword ptr [rax], eax ; add byte ptr [rax + 0x36], al ; cli ; call rax
0x000000000043cd75 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004066cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x4029a6
0x000000000041acd6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000043d49a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044ffac : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000044c598 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000455043 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000422dc5 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000429358 : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043136b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422d1b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x000000000042258b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421e5b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000042b661 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000448250 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041676f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004226b9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000449097 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429b67 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040aba8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041699e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000417c55 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000045fb6d : add eax, 0x17100000 ; cld ; jmp qword ptr [rax]
0x0000000000402964 : add eax, 0x260b6e ; add ebx, esi ; ret
0x0000000000454cd1 : add eax, 0x458b0000 ; call 0xffffffffc3a67911
0x00000000004597ae : add eax, 0xb8000001 ; pop rdi ; pop rdx ; ret
0x000000000045f92d : add eax, dword ptr [rax] ; add al, ah ; pushfq ; sti ; jmp qword ptr [rcx]
0x000000000042126b : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000419d2e : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x472dbc45], cl ; ret
0x0000000000426f03 : add eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000040bc3f : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000458e86 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bb99 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040292b : add eax, edx ; sar rax, 1 ; jne 0x40293c ; pop rbp ; ret
0x0000000000455609 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000420caa : add ebp, ecx ; ret
0x0000000000402969 : add ebx, esi ; ret
0x000000000041a6bc : add edi, eax ; in al, 0x31 ; ret
0x000000000045050b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000454c15 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000041fe10 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d7b : add esp, 0x10 ; pop rbp ; ret
0x000000000042e2ed : add esp, 0x100 ; pop rbp ; ret
0x000000000040c137 : add esp, 0x110 ; pop rbp ; ret
0x000000000043d497 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000044cb47 : add esp, 0x11a0 ; pop rbp ; ret
0x00000000004241f8 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000043014f : add esp, 0x120 ; pop rbp ; ret
0x00000000004077f0 : add esp, 0x130 ; pop rbp ; ret
0x0000000000424d9a : add esp, 0x150 ; pop rbp ; ret
0x0000000000430d3e : add esp, 0x160 ; pop rbp ; ret
0x000000000041a514 : add esp, 0x170 ; pop rbp ; ret
0x000000000041fcb0 : add esp, 0x18 ; pop rbp ; ret
0x000000000045b9db : add esp, 0x18 ; ret
0x000000000041f724 : add esp, 0x190 ; pop rbp ; ret
0x000000000042fa5c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000043f21c : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000426e7b : add esp, 0x1d0 ; pop rbp ; ret
0x000000000043e4e5 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000433f42 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000041683f : add esp, 0x20 ; pop rbp ; ret
0x000000000042980b : add esp, 0x200 ; pop rbp ; ret
0x0000000000458d0b : add esp, 0x210 ; pop rbp ; ret
0x0000000000446b5d : add esp, 0x260 ; pop rbp ; ret
0x0000000000440f41 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000449c0a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000416774 : add esp, 0x30 ; pop rbp ; ret
0x00000000004330ac : add esp, 0x360 ; pop rbp ; ret
0x000000000041ebe9 : add esp, 0x40 ; pop rbp ; ret
0x0000000000444f8c : add esp, 0x410 ; pop rbp ; ret
0x000000000041882b : add esp, 0x440 ; pop rbp ; ret
0x00000000004432d2 : add esp, 0x4a0 ; pop rbp ; ret
0x0000000000402f52 : add esp, 0x50 ; pop rbp ; ret
0x00000000004528d9 : add esp, 0x520 ; pop rbp ; ret
0x000000000044df6f : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000419727 : add esp, 0x60 ; pop rbp ; ret
0x0000000000406c9b : add esp, 0x6e0 ; pop rbp ; ret
0x0000000000422910 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402d27 : add esp, 0x80 ; pop rbp ; ret
0x00000000004094a9 : add esp, 0x90 ; pop rbp ; ret
0x000000000041e9f1 : add esp, 0x958 ; pop rbx ; pop rbp ; ret
0x000000000040b858 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004257f6 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004222d8 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000418d32 : add esp, 0xc0 ; pop rbp ; ret
0x000000000043c7d4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000042ac42 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000419438 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000425355 : add esp, 0xf0 ; pop rbp ; ret
0x000000000042a4a6 : add esp, 8 ; pop rbp ; ret
0x0000000000402126 : add esp, 8 ; ret
0x000000000045eaf8 : add qword ptr [r8], r8 ; add byte ptr [rax + 0x36], al ; cli ; call rax
0x0000000000426f02 : add r8, qword ptr [rax] ; add cl, ch ; ret
0x0000000000455316 : add r8b, r13b ; ret
0x0000000000450217 : add r8b, r13b ; ret 0xfb21
0x0000000000458e85 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bb98 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040292a : add rax, rdx ; sar rax, 1 ; jne 0x40293d ; pop rbp ; ret
0x0000000000455608 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000045050a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041fe0f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d7a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042e2ec : add rsp, 0x100 ; pop rbp ; ret
0x000000000040c136 : add rsp, 0x110 ; pop rbp ; ret
0x000000000043d496 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000044cb46 : add rsp, 0x11a0 ; pop rbp ; ret
0x00000000004241f7 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000043014e : add rsp, 0x120 ; pop rbp ; ret
0x00000000004077ef : add rsp, 0x130 ; pop rbp ; ret
0x0000000000424d99 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000430d3d : add rsp, 0x160 ; pop rbp ; ret
0x000000000041a513 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041fcaf : add rsp, 0x18 ; pop rbp ; ret
0x000000000045b9da : add rsp, 0x18 ; ret
0x000000000041f723 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042fa5b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000043f21b : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000426e7a : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000043e4e4 : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000433f41 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000041683e : add rsp, 0x20 ; pop rbp ; ret
0x000000000042980a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000458d0a : add rsp, 0x210 ; pop rbp ; ret
0x0000000000446b5c : add rsp, 0x260 ; pop rbp ; ret
0x0000000000440f40 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000449c09 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000416773 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004330ab : add rsp, 0x360 ; pop rbp ; ret
0x000000000041ebe8 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000444f8b : add rsp, 0x410 ; pop rbp ; ret
0x000000000041882a : add rsp, 0x440 ; pop rbp ; ret
0x00000000004432d1 : add rsp, 0x4a0 ; pop rbp ; ret
0x0000000000402f51 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004528d8 : add rsp, 0x520 ; pop rbp ; ret
0x000000000044df6e : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000419726 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406c9a : add rsp, 0x6e0 ; pop rbp ; ret
0x000000000042290f : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402d26 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004094a8 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041e9f0 : add rsp, 0x958 ; pop rbx ; pop rbp ; ret
0x000000000040b857 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004257f5 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004222d7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000418d31 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000043c7d3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000042ac41 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000419437 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000425354 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000042a4a5 : add rsp, 8 ; pop rbp ; ret
0x0000000000402125 : add rsp, 8 ; ret
0x0000000000460fcc : and al, 0x1a ; add byte ptr [rax], al ; loopne 0x460fc1 ; std ; call qword ptr [rdx]
0x000000000040aba7 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041699d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045fccc : and al, 7 ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; cld ; jmp rsi
0x000000000046184d : and al, byte ptr [rax] ; add byte ptr [rax], dl ; sar dh, 1 ; jmp rax
0x0000000000431178 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004503c2 : and bl, bh ; inc edi ; in al, dx ; int1 ; ret
0x000000000045fc50 : and byte ptr [rax], ch ; cld ; jmp qword ptr [rdi]
0x0000000000430151 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045fe90 : and byte ptr [rdi - 4], cl ; call qword ptr [rax]
0x0000000000421e59 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000431177 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000422d19 : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x000000000042ca75 : and eax, 0x45e3f0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000427c6f : and eax, 0x663958 ; pop rbp ; ret
0x000000000042811f : and eax, 0x663960 ; pop rbp ; ret
0x0000000000428143 : and eax, 0x663968 ; pop rbp ; ret
0x000000000041612f : call 0x22416134
0x00000000004498df : call 0x402186
0x00000000004498ac : call 0x402246
0x00000000004503c0 : call 0x4023e9
0x000000000044f7f4 : call 0x402679
0x000000000041f599 : call 0x402696
0x000000000040654a : call 0x402762
0x0000000000457aa7 : call 0x4028a6
0x00000000004066d3 : call 0x4029a2
0x000000000041e53b : call 0x41f767
0x0000000000416460 : call 0x4226d2
0x000000000041f3d0 : call 0x434086
0x00000000004553a1 : call 0x44aee9
0x000000000042e966 : call 0xffffffff8a054f08
0x0000000000454cd6 : call 0xffffffffc3a6790c
0x0000000000454cd5 : call 0xffffffffc3a6790d
0x0000000000454d18 : call 0xffffffffc3a67a4e
0x0000000000454d17 : call 0xffffffffc3a67a4f
0x000000000043c819 : call 0xffffffffe9065169
0x000000000043c818 : call 0xffffffffe906516a
0x000000000044c5e5 : call 0xfffffffff0114bb7
0x000000000044c5e4 : call 0xfffffffff0114bb8
0x000000000044c81f : call 0xfffffffff01585ab
0x000000000043825d : call 0xfffffffff73c07f4
0x0000000000415b50 : call 0xfffffffffb0de122
0x0000000000415b4f : call 0xfffffffffb0de123
0x0000000000453663 : call 0xfffffffffee9bc35
0x0000000000453662 : call 0xfffffffffee9bc36
0x000000000044f5f5 : call 0xffffffffff497bca
0x000000000043ad89 : call 0xffffffffff58335b
0x000000000043ad88 : call 0xffffffffff58335c
0x000000000043ad89 : call 0xffffffffff58335d
0x000000000043ad88 : call 0xffffffffff58335e
0x000000000042da57 : call 0xffffffffff7c65a8
0x000000000042da56 : call 0xffffffffff7c65a9
0x0000000000433b18 : call 0xffffffffffafc0ea
0x0000000000433b17 : call 0xffffffffffafc0eb
0x000000000045411a : call 0xffffffffffc1c6ec
0x0000000000454119 : call 0xffffffffffc1c6ed
0x000000000045b919 : call qword ptr [r12 + rbx*8]
0x000000000041e2cc : call qword ptr [rax]
0x000000000041f662 : call qword ptr [rbp - 0x1d]
0x00000000004063f6 : call qword ptr [rbx]
0x0000000000403b1e : call qword ptr [rcx]
0x0000000000453839 : call qword ptr [rdi]
0x0000000000439d43 : call qword ptr [rdx]
0x000000000042d981 : call qword ptr [rsi]
0x000000000045b91a : call qword ptr [rsp + rbx*8]
0x000000000044da44 : call r8
0x000000000042daf3 : call rax
0x0000000000414831 : call rbx
0x00000000004068fe : call rcx
0x0000000000432c1c : call rdi
0x000000000040b315 : call rdx
0x0000000000447f44 : call rsi
0x0000000000415b28 : call rsp
0x0000000000450e36 : cdq ; jbe 0x450e5a ; ret
0x000000000045275d : cdq ; jbe 0x452781 ; ret
0x000000000045a11c : cdq ; ret
0x000000000043f6c0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044aec6 : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000042c583 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044bb8d : clc ; add rsp, 0x200 ; pop rbp ; ret
0x0000000000458d09 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x00000000004559b7 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421c95 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044e202 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000459380 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000425b61 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042c1d3 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000042c931 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000425353 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040292f : clc ; jne 0x402938 ; pop rbp ; ret
0x000000000041f767 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000458d2b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000430d7e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407807 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042af5b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042af7b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042af9b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043f89b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043f8db : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f8bb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040780b : clc ; pop rbp ; ret
0x0000000000409187 : clc ; pop rbx ; pop rbp ; ret
0x0000000000402da7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000456903 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x000000000045fe92 : cld ; call qword ptr [rax]
0x000000000045fdb2 : cld ; call qword ptr [rbx]
0x000000000045ff92 : cld ; call qword ptr [rcx]
0x0000000000460312 : cld ; call qword ptr [rdx]
0x0000000000460012 : cld ; call qword ptr [rsi]
0x0000000000460412 : cld ; call rax
0x00000000004601b2 : cld ; call rdx
0x0000000000433eb1 : cld ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000045fb72 : cld ; jmp qword ptr [rax]
0x000000000045fc52 : cld ; jmp qword ptr [rdi]
0x00000000004600f2 : cld ; jmp rbx
0x000000000045fd32 : cld ; jmp rcx
0x000000000045fcd2 : cld ; jmp rsi
0x000000000043a9dd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000045fa71 : cld ; sti ; call qword ptr [rcx]
0x000000000041dc3e : cli ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x00000000004292f4 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045eafe : cli ; call rax
0x000000000045f7d2 : cli ; call rsp
0x000000000045f712 : cli ; jmp qword ptr [rsi]
0x000000000044ebfd : cmp al, -0x2a ; ret
0x0000000000461951 : cmp al, -1 ; jmp qword ptr [rcx]
0x0000000000427c6e : cmp al, 0x25 ; pop rax ; cmp dword ptr [rsi], esp ; pop rbp ; ret
0x0000000000402bcc : cmp al, 0x25 ; ret 0x45
0x0000000000461c31 : cmp bh, -1 ; ret 0
0x0000000000460871 : cmp ch, bh ; jmp qword ptr [rdi]
0x0000000000427803 : cmp ch, byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x00000000004277af : cmp dword ptr [rdi], ebp ; outsb dx, byte ptr [rsi] ; ret
0x0000000000427c71 : cmp dword ptr [rsi], esp ; pop rbp ; ret
0x00000000004028ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402900 ; pop rbp ; ret
0x00000000004429f1 : cmp ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000043ccb4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000040b85a : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041e53a : cwde ; call 0x41f768
0x0000000000450de2 : cwde ; jbe 0x450e06 ; ret
0x0000000000417dfa : cwde ; jmp 0x41883a
0x000000000041f281 : cwde ; jmp 0x41f733
0x000000000041f280 : cwde ; jmp 0x41f734
0x0000000000459c1b : cwde ; js 0x459bc5 ; ret
0x0000000000459c62 : cwde ; js 0x459c0c ; ret
0x0000000000459c9c : cwde ; js 0x459c46 ; ret
0x0000000000427b0a : cwde ; ret 0x45e9
0x0000000000427778 : cwde ; ret 0x8589
0x0000000000427aa0 : cwde ; ret 0xafe9
0x000000000045f4f8 : cwde ; xor al, byte ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x000000000041543c : dec dword ptr [rax + 0x39] ; ret 0xf40
0x0000000000432f15 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000402bc9 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x45
0x000000000044f7f8 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000452622 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000045539d : dec dword ptr [rax - 0x77] ; ret 0x3ae8
0x0000000000440e01 : dec dword ptr [rax - 0x77] ; ret 0x46e8
0x0000000000452658 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000425f68 : dec dword ptr [rax - 0x77] ; ret 0x8d89
0x00000000004408ab : dec dword ptr [rax - 0x77] ; ret 0x9ce8
0x00000000004156a2 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043ab82 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000043ae8d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000041569c : dec dword ptr [rbx - 0x14c34b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a801 : dec dword ptr [rbx - 0x1cb73] ; jmp qword ptr [rcx]
0x000000000041612c : dec dword ptr [rbx - 0x2174b] ; jmp qword ptr [rcx]
0x000000000043c394 : dec dword ptr [rdi] ; ret 0x8589
0x000000000044ff3f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000040bc3b : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004584e4 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000446c83 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000045503f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041f4a5 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000044de67 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x00000000004251fa : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004524c4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000044c7fe : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x0000000000412737 : dec dword ptr [rsi] ; jge 0x412758 ; ret
0x0000000000412737 : dec dword ptr [rsi] ; jge 0x41275a ; ret
0x000000000044b801 : dec eax ; ret 0xd592
0x0000000000440f23 : dec ebx ; je 0x440ee9 ; ret 0x1ce9
0x0000000000422c10 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000422c0f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000044debe : enter -0x74b8, 0 ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000044dadc : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x44daa6 ; call rax
0x000000000044ddb5 : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x44dd7f ; call rax
0x000000000044df2e : enter -0x74b8, 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x44def0 ; call rax
0x000000000042bae7 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042bb9a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x00000000004073d4 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044f3ab : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042858b : enter 0x292d, -0x4c ; ret
0x000000000043f539 : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x0000000000422cdc : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004067c2 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044b034 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040861a : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043dcc9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000453a93 : fcmovbe st(0), st(5) ; jmp 0x4540f1
0x000000000045ee48 : fcom dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; ret 0xfffc
0x000000000044c546 : fcomp dword ptr [rdi + rdi*8 - 0x6bf00001] ; ret 0xd284
0x0000000000429355 : fild word ptr [rax - 0x49f0fe1e] ; ret 0x8348
0x0000000000448914 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000455759 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045066f : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000452626 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000426c24 : fmul dword ptr [rax - 0x7f] ; ret 2
0x000000000045b91c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041f756 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041f757 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000418b71 : fsubr st(1) ; ret
0x000000000042d664 : fsubr st(1) ; ret 0
0x000000000042e12c : fucompi st(1) ; ret
0x0000000000402d79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426e79 : hlt ; add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000449d6c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000427423 : hlt ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406c99 : hlt ; add rsp, 0x6e0 ; pop rbp ; ret
0x0000000000445778 : hlt ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000422bd2 : hlt ; jmp 0x422bea
0x0000000000422bd1 : hlt ; jmp 0x422beb
0x000000000041f76a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402900 : hlt ; pop rbp ; mov edi, 0x663468 ; jmp rax
0x000000000044bed3 : imul ch ; ret
0x0000000000402121 : imul eax, dword ptr [rax + rax], 0 ; add rsp, 8 ; ret
0x00000000004475de : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000044bf27 : imul ebp ; ret
0x0000000000454af6 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000045b9d7 : imul edi, edx, -1 ; add rsp, 0x18 ; ret
0x000000000042a688 : in al, -0x17 ; ret
0x000000000041fbed : in al, -0x17 ; ret 0
0x000000000043a339 : in al, -0x7f ; ret 0xff9f
0x000000000043a51f : in al, -0x7f ; ret 0xffbf
0x000000000043a5c5 : in al, -0x7f ; ret 0xffc5
0x000000000043a5f3 : in al, -0x7f ; ret 0xffd5
0x000000000043a6c1 : in al, -0x7f ; ret 0xffd8
0x000000000043a857 : in al, -0x7f ; ret 0xffe0
0x0000000000460c8c : in al, 0x16 ; add byte ptr [rax], al ; or ch, 0xfd ; jmp qword ptr [rdx]
0x000000000046168c : in al, 0x20 ; add byte ptr [rax], al ; nop ; mov ch, -2 ; jmp qword ptr [rdi]
0x0000000000420ca8 : in al, 0x30 ; add ebp, ecx ; ret
0x000000000041a6bf : in al, 0x31 ; ret
0x000000000041ebe7 : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004432d0 : in al, 0x48 ; add esp, 0x4a0 ; pop rbp ; ret
0x000000000041ffeb : in al, 0x56 ; ret
0x000000000042868e : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000045fe8c : in al, 8 ; add byte ptr [rax], al ; and byte ptr [rdi - 4], cl ; call qword ptr [rax]
0x000000000045ff8c : in al, 9 ; add byte ptr [rax], al ; add byte ptr [rdi - 4], ch ; call qword ptr [rcx]
0x00000000004241a6 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004240c2 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042fa5a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000446b5b : in al, dx ; add rsp, 0x260 ; pop rbp ; ret
0x0000000000444f8a : in al, dx ; add rsp, 0x410 ; pop rbp ; ret
0x000000000044a2da : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000450399 : in al, dx ; int1 ; ret
0x00000000004343ea : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040abae : in al, dx ; pop rbp ; ret
0x0000000000422dc3 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000043f5a3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042003f : in eax, 0x56 ; ret
0x000000000045a31b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044bed4 : in eax, dx ; ret
0x000000000041a158 : inc byte ptr [r8 + 0x4d8801e1] ; ret
0x000000000041a159 : inc byte ptr [rax + 0x4d8801e1] ; ret
0x00000000004314bd : inc dword ptr [rax + 0x4d8801e1] ; ret
0x000000000041a1a5 : inc dword ptr [rax + 0x4d8801e1] ; ret 0x6be9
0x0000000000422cf3 : inc dword ptr [rax + 0x558801e2] ; ret
0x00000000004292f2 : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000044da54 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000043b9af : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041d205 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004062ab : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000451c60 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041643a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004054ef : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004563e2 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000004502ab : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000044da92 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x000000000040a7d4 : inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040a608 : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000413963 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044320e : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041d735 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041863f : inc eax ; ret 0x9e1d
0x00000000004503c4 : inc edi ; in al, dx ; int1 ; ret
0x000000000043d468 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000433eb2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000433ba2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x00000000004314bc : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x000000000041a1a4 : inc qword ptr [r8 + 0x4d8801e1] ; ret 0x6be9
0x0000000000436b0f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000043a14f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000415739 : insd dword ptr [rdi], dx ; sub byte ptr [rbp - 0x17], dh ; ret 0xe
0x000000000044ffb3 : int1 ; ret
0x00000000004028f3 : ja 0x4028fa ; pop rbp ; ret
0x0000000000427777 : ja 0x427714 ; ret 0x8589
0x0000000000430d81 : ja 0x430dce ; pop rbp ; ret
0x000000000044f7f5 : ja 0x44f82d ; sti ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000450de3 : jbe 0x450e05 ; ret
0x0000000000450e37 : jbe 0x450e59 ; ret
0x000000000045275e : jbe 0x452780 ; ret
0x00000000004028ff : je 0x4028fd ; pop rbp ; mov edi, 0x663468 ; jmp rax
0x0000000000440152 : je 0x440114 ; ret 0x8589
0x0000000000440232 : je 0x4401f4 ; ret 0x8589
0x0000000000440e20 : je 0x440de2 ; ret 0x7d81
0x0000000000440f25 : je 0x440ee7 ; ret 0x1ce9
0x0000000000407806 : jge 0x407807 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dc27 : jge 0x40dc44 ; ret
0x000000000040dc7b : jge 0x40dc98 ; ret
0x00000000004124b0 : jge 0x4124cd ; ret
0x00000000004124e6 : jge 0x412503 ; ret
0x0000000000412739 : jge 0x412756 ; ret
0x0000000000412739 : jge 0x412758 ; ret
0x00000000004240c1 : jge 0x4240b7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004241a5 : jge 0x42419b ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042af5a : jge 0x42af5b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042af7a : jge 0x42af7b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042af9a : jge 0x42af9b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000430d7d : jge 0x430d7e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000043f5a6 : jge 0x43f5a3 ; pop rbp ; ret
0x000000000043f89a : jge 0x43f89b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043f8ba : jge 0x43f8bb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043f8da : jge 0x43f8db ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f900 : jge 0x43f8fd ; pop rbp ; ret
0x00000000004470f8 : jge 0x44710f ; ret
0x00000000004475e3 : jge 0x4475fa ; ret
0x000000000044dae3 : jge 0x44da9f ; call rax
0x000000000044ddbc : jge 0x44dd78 ; call rax
0x000000000044dec4 : jge 0x44de78 ; call rax
0x000000000044df35 : jge 0x44dee9 ; call rax
0x00000000004514aa : jge 0x451523 ; ret
0x0000000000458d2a : jge 0x458d2d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000045a889 : jge 0x45a883 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004292ef : jl 0x429284 ; push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000440f95 : jl 0x440f71 ; ret
0x0000000000440fe5 : jl 0x440fc1 ; ret
0x0000000000446fcc : jl 0x446fe3 ; ret
0x0000000000460011 : jl 0x460011 ; call qword ptr [rsi]
0x0000000000422db4 : jle 0x422dcd ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004514fe : jle 0x451577 ; ret
0x000000000045212c : jle 0x4521a5 ; ret
0x000000000040215b : jmp 0x402137
0x0000000000406371 : jmp 0x406337
0x0000000000405836 : jmp 0x406ca9
0x00000000004160a1 : jmp 0x4160a6
0x000000000041693a : jmp 0x4169aa
0x0000000000417dfb : jmp 0x418839
0x000000000041900d : jmp 0x4190ba
0x000000000041aa94 : jmp 0x41ace4
0x000000000041e55c : jmp 0x41ea01
0x000000000041d721 : jmp 0x41ea02
0x000000000041f282 : jmp 0x41f732
0x0000000000422bd3 : jmp 0x422be9
0x000000000042867d : jmp 0x4287a7
0x0000000000429d7d : jmp 0x429d88
0x000000000042b9e2 : jmp 0x42bab7
0x0000000000433ee2 : jmp 0x433f50
0x0000000000439afd : jmp 0x43c7e3
0x000000000043c591 : jmp 0x43c7e5
0x00000000004475dd : jmp 0x447b55
0x0000000000450392 : jmp 0x4504d7
0x000000000045248f : jmp 0x4528e7
0x000000000045248e : jmp 0x4528e8
0x0000000000453a95 : jmp 0x4540ef
0x00000000004548a3 : jmp 0x454c3a
0x0000000000458c0a : jmp 0x458d1b
0x00000000004597ad : jmp 0x4598bf
0x00000000004597ac : jmp 0x4598c0
0x0000000000459a5b : jmp 0x459a66
0x000000000045a6cb : jmp 0x45a6d6
0x000000000045ae41 : jmp 0x45af4d
0x000000000042f761 : jmp 0x490580b1
0x000000000042f7dc : jmp 0x4905812c
0x0000000000430b35 : jmp 0x49059485
0x0000000000430bb0 : jmp 0x49059500
0x000000000042e9ab : jmp 0xffffffff8a054f4d
0x000000000044e47e : jmp 0xffffffffb706e84a
0x0000000000459c1a : jmp 0xffffffffc3ea14bb
0x0000000000455315 : jmp 0xffffffffc42d5363
0x000000000042ed5f : jmp 0xffffffffea055301
0x0000000000426bec : jmp 0xffffffffffeb25b7
0x0000000000426beb : jmp 0xffffffffffeb25b8
0x0000000000439c1d : jmp qword ptr [rax]
0x00000000004080c5 : jmp qword ptr [rbp - 0x3d]
0x0000000000415500 : jmp qword ptr [rbx]
0x000000000040a60e : jmp qword ptr [rcx]
0x000000000041e4c0 : jmp qword ptr [rdi - 0x2b]
0x000000000041772d : jmp qword ptr [rdi]
0x000000000043ccb5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000041399a : jmp qword ptr [rdx]
0x0000000000416521 : jmp qword ptr [rsi]
0x0000000000402907 : jmp rax
0x000000000041be69 : jmp rbx
0x000000000041369f : jmp rcx
0x000000000040a52e : jmp rdi
0x0000000000402947 : jmp rdx
0x0000000000412df1 : jmp rsi
0x0000000000413177 : jmp rsp
0x0000000000402930 : jne 0x402937 ; pop rbp ; ret
0x000000000041573b : jne 0x415728 ; ret 0xe
0x000000000041f769 : jne 0x41f766 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000422c11 : jne 0x422c09 ; mov rax, rdx ; pop rbp ; ret
0x000000000042bae6 : jne 0x42bab9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000431202 : jne 0x4311fa ; mov rax, rdx ; pop rbp ; ret
0x000000000043d466 : jne 0x43d46f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000443301 : jne 0x4432f9 ; mov rax, rdx ; pop rbp ; ret
0x000000000044e441 : jne 0x44e439 ; mov rax, rdx ; pop rbp ; ret
0x0000000000457aa5 : jne 0x457a8f ; call 0x4028a8
0x0000000000461331 : jno 0x461333 ; call rdx
0x00000000004614b1 : jns 0x4614b3 ; call qword ptr [rbx]
0x000000000041a516 : jo 0x41a51e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041acd5 : jo 0x41ace0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421b92 : jo 0x421b9d ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000422912 : jo 0x422973 ; ret
0x0000000000422af9 : jo 0x422b5a ; ret
0x000000000042594c : jo 0x4259ad ; ret
0x0000000000429a31 : jo 0x429a92 ; ret
0x000000000042a74e : jo 0x42a7af ; ret
0x000000000042af46 : jo 0x42afa7 ; ret
0x0000000000431ac7 : jo 0x431b28 ; ret
0x000000000043d681 : jo 0x43d6e2 ; ret
0x000000000043d7a4 : jo 0x43d805 ; ret
0x000000000043d8de : jo 0x43d93f ; ret
0x000000000043f3f1 : jo 0x43f452 ; ret
0x000000000043f8bf : jo 0x43f920 ; ret
0x000000000043f8be : jo 0x43f921 ; ret
0x00000000004489bc : jo 0x448a1d ; ret
0x000000000044c7f3 : jo 0x44c7b2 ; imul ebp ; ret
0x0000000000459384 : jo 0x4593e5 ; ret
0x000000000045ad03 : jo 0x45ad64 ; ret
0x00000000004600f0 : jo 0x46007c ; cld ; jmp rbx
0x0000000000460b70 : jo 0x460b41 ; std ; jmp qword ptr [rax]
0x000000000044d227 : jp 0x44d252 ; ret
0x000000000044d27b : jp 0x44d2a6 ; ret
0x000000000044de1f : jp 0x44de4a ; ret
0x000000000041f664 : jrcxz 0x41f651 ; ret 0
0x00000000004277cb : js 0x427768 ; ret 0x8589
0x0000000000427a9f : js 0x427a3c ; ret 0xafe9
0x0000000000427b09 : js 0x427aa6 ; ret 0x45e9
0x000000000043c7d6 : js 0x43c7ea ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000459c1c : js 0x459bc4 ; ret
0x0000000000459c63 : js 0x459c0b ; ret
0x0000000000459c9d : js 0x459c45 ; ret
0x000000000045f4f7 : lcall ptr [rax + 0x20000032] ; ret 0xffff
0x0000000000415737 : lcall ptr [rbx - 0x168ad793] ; ret 0xe
0x00000000004165fb : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409185 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004165fa : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409184 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000458c09 : leave ; jmp 0x458d1c
0x000000000041842a : ljmp ptr [rbx + 0x1d] ; ret 0xe962
0x000000000045067f : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f3cf : lodsb al, byte ptr [rsi] ; call 0x434087
0x0000000000460311 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rdx]
0x000000000042ed5e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea055302
0x000000000042ed5d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea055303
0x000000000042edf4 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000045f9b1 : lodsd eax, dword ptr [rsi] ; sti ; jmp rbx
0x0000000000422d1a : loop 0x422d21 ; movzx eax, dl ; pop rbp ; ret
0x0000000000422d1a : loop 0x422d23 ; movzx eax, dl ; pop rbp ; ret
0x0000000000433eb0 : loop 0x433eb6 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000044cc09 : loop 0x44cc5b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000044ccf1 : loop 0x44cd43 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000421e5a : loope 0x421e63 ; movzx eax, cl ; pop rbp ; ret
0x0000000000406c9d : loopne 0x406caa ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406c9d : loopne 0x406cad ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004168e7 : loopne 0x416918 ; ret
0x00000000004168e6 : loopne 0x416919 ; ret
0x000000000041943a : loopne 0x419441 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041eb08 : loopne 0x41eb37 ; ret
0x000000000041eb07 : loopne 0x41eb38 ; ret
0x000000000042522c : loopne 0x425235 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004256a3 : loopne 0x4256ac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042939b : loopne 0x4293eb ; add esp, 0x20 ; pop rbp ; ret
0x000000000042939a : loopne 0x4293ec ; add esp, 0x20 ; pop rbp ; ret
0x000000000042ac40 : loopne 0x42ac93 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000042af42 : loopne 0x42af92 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042af41 : loopne 0x42af93 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042ce67 : loopne 0x42ce70 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e100 : loopne 0x42e109 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e120 : loopne 0x42e16e ; mov edi, dword ptr [rcx] ; call rax
0x000000000042e11f : loopne 0x42e16f ; mov edi, dword ptr [rcx] ; call rax
0x000000000042e1ec : loopne 0x42e1f5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e284 : loopne 0x42e28d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004347ae : loopne 0x4347b7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043e4e7 : loopne 0x43e4ef ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000440f3f : loopne 0x440f92 ; add esp, 0x2d0 ; pop rbp ; ret
0x00000000004444de : loopne 0x4444e7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000444f38 : loopne 0x444f41 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448700 : loopne 0x448709 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448b0c : loopne 0x448b5c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000448b0b : loopne 0x448b5d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000448e2f : loopne 0x448e7f ; add esp, 0x40 ; pop rbp ; ret
0x0000000000448e2e : loopne 0x448e80 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000449c0c : loopne 0x449c15 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044b74d : loopne 0x44b756 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045f930 : loopne 0x45f8d1 ; sti ; jmp qword ptr [rcx]
0x0000000000460fb0 : loopne 0x460f9d ; std ; call qword ptr [rdx]
0x0000000000460fd0 : loopne 0x460fbd ; std ; call qword ptr [rdx]
0x0000000000460ff0 : loopne 0x460fdd ; std ; call qword ptr [rdx]
0x0000000000402f50 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000460130 : mov al, -0x74 ; cld ; call qword ptr [rsi]
0x0000000000433dcd : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000430ca8 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044f5ca : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004222da : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004498aa : mov al, 0 ; call 0x402248
0x0000000000406548 : mov al, 0 ; call 0x402764
0x00000000004578f3 : mov al, 0x2d ; ret 0xa414
0x000000000042290e : mov al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000043496b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000422dc4 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042245d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000459b1d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a319 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fda5 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041699a : mov al, byte ptr [rbp - 0x1a] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a6f0 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004195fd : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044cdaf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000044cdae : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000044cd2f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000043f84c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044cd33 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000460411 : mov bh, -4 ; call rax
0x0000000000428141 : mov byte ptr [0x663968], al ; pop rbp ; ret
0x000000000042ab72 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000451e61 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x000000000043c328 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416657 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000451be9 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000402963 : mov byte ptr [rip + 0x260b6e], 1 ; ret
0x0000000000461691 : mov ch, -2 ; jmp qword ptr [rdi]
0x000000000043117d : mov dh, -0x39 ; pop rbp ; ret
0x000000000042935a : mov dh, -0x3e ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043136d : mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422d1d : mov dh, -0x3e ; pop rbp ; ret
0x000000000042258d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421e5d : mov dh, -0x3f ; pop rbp ; ret
0x000000000042b663 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000448252 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416771 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004226bb : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000449099 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429b69 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409182 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040abaa : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004169a0 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000418b81 : mov dh, -0x46 ; mov edx, 0x60aa37ba ; ret
0x00000000004603f1 : mov dh, -4 ; jmp rsi
0x000000000045a445 : mov dl, -0x47 ; ret
0x0000000000440b10 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427c6d : mov dword ptr [0x663958], edi ; pop rbp ; ret
0x000000000042811d : mov dword ptr [0x663960], edi ; pop rbp ; ret
0x0000000000434627 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004343eb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043455f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042ff09 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000043007b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x000000000041f76c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x0000000000429399 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f755 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402f4e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000419723 : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044da3e : mov dword ptr [rbp - 0x5d8], eax ; call r8
0x000000000044dbd8 : mov dword ptr [rbp - 0x5e4], ecx ; call rdx
0x000000000044dcff : mov dword ptr [rbp - 0x5ec], ecx ; call rdx
0x000000000041f27f : mov dword ptr [rbp - 0x68], eax ; jmp 0x41f735
0x000000000042ba31 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000042c87f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000402d77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422bd0 : mov dword ptr [rbp - 0xc], eax ; jmp 0x422bec
0x000000000041f768 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402da5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407805 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043f5a5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004347dd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b645 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b695 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045560c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000042ca7a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000430d80 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000458d2c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000422db3 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045050e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000044bece : mov eax, 0x2dffffef ; imul ch ; ret
0x000000000044bf22 : mov eax, 0x2dffffef ; imul ebp ; ret
0x000000000044be96 : mov eax, 0x2dffffef ; ret
0x000000000045f500 : mov eax, 0x50000032 ; ret 0xffff
0x000000000045ec00 : mov eax, 0xe ; ret 0xfffb
0x000000000045f300 : mov eax, 0xf000002a ; ret
0x000000000044dade : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000044df30 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000044dec0 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004342df : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000448a4b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429253 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000457d08 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044872f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422af3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043f921 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004290ec : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000448b4e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428852 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000430267 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430fb0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000431ac1 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b29f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041ebe5 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448b0a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042af40 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a812 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448f45 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004341d4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004342dc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044a04f : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004343e5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000448d1f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041fcac : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042baec : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000434561 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043f55c : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042290c : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043d67b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000449d6a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000427421 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042c581 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004559b5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421c93 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044e200 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045937e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407809 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042af5d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042af7d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042af9d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043f89d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043f8dd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f8bd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043f58c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f6bf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044cbce : mov eax, edi ; pop rbp ; ret
0x000000000042d051 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f91d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422c14 : mov eax, edx ; pop rbp ; ret
0x000000000042248f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f633 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044cd30 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041fe13 : mov eax, esi ; pop rbp ; ret
0x000000000040298b : mov ebp, esp ; call rax
0x00000000004028f1 : mov ebp, esp ; ja 0x4028fc ; pop rbp ; ret
0x000000000043f5a2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000412f4d : mov ecx, 0x61d375b9 ; ret
0x000000000042daed : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004343e8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042da55 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042e11e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000416513 : mov ecx, eax ; mov al, 0 ; call 0x402766
0x000000000044cc6d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044cc3d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000444cb8 : mov edi, 0x3d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402985 : mov edi, 0x662e20 ; mov rbp, rsp ; call rax
0x0000000000402902 : mov edi, 0x663468 ; jmp rax
0x0000000000402942 : mov edi, 0x663468 ; jmp rdx
0x0000000000412cda : mov edi, 0xb9f26e27 ; ret 0xe32a
0x00000000004066ce : mov edi, 1 ; call 0x4029a7
0x000000000044dae2 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000044dec3 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x0000000000430d7c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042af59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042af79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042af99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043f899 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043f8d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f8b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042daf1 : mov edi, dword ptr [rcx] ; call rax
0x0000000000450508 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000045b917 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045b916 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041a458 : mov edx, 0x3d ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000418b84 : mov edx, 0x60aa37ba ; ret
0x000000000041f596 : mov edx, dword ptr [rbp - 0x48] ; call 0x402699
0x000000000041f3cd : mov edx, dword ptr [rbp - 0x54] ; call 0x434089
0x000000000043f925 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406546 : mov edx, eax ; mov al, 0 ; call 0x402766
0x000000000041645a : mov esi, dword ptr [rbp - 0x178] ; call 0x4226d8
0x0000000000457aa4 : mov esi, dword ptr [rbp - 0x20] ; call 0x4028a9
0x0000000000402940 : mov esi, eax ; mov edi, 0x663468 ; jmp rdx
0x000000000042bae9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000406543 : mov esi, ecx ; mov rdx, rax ; mov al, 0 ; call 0x402769
0x0000000000419c42 : mov esp, 0x43f952d ; ret 0x4589
0x0000000000419c84 : mov esp, 0x43f962d ; ret 0x8589
0x0000000000407079 : mov esp, 0xa2073a2d ; ret 0x8589
0x0000000000407141 : mov esp, 0xa2073b2d ; ret 0x8589
0x0000000000422120 : mov esp, 0xb8000001 ; xchg eax, esp ; sbb ch, bh ; ret 0x34b9
0x0000000000422072 : mov esp, 0xfd18942d ; ret 0x8589
0x0000000000460131 : mov esp, dr1 ; call qword ptr [rsi]
0x000000000040abad : mov esp, ebp ; pop rbp ; ret
0x0000000000427c6c : mov qword ptr [0x663958], rdi ; pop rbp ; ret
0x000000000042811c : mov qword ptr [0x663960], rdi ; pop rbp ; ret
0x000000000041f76b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000407804 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043f5a4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004347dc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b644 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b694 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045560b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000430d7f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000045050d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402f4f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000419c41 : mov r12d, 0x43f952d ; ret 0x4589
0x0000000000419c83 : mov r12d, 0x43f962d ; ret 0x8589
0x0000000000407078 : mov r12d, 0xa2073a2d ; ret 0x8589
0x0000000000407140 : mov r12d, 0xa2073b2d ; ret 0x8589
0x0000000000422071 : mov r12d, 0xfd18942d ; ret 0x8589
0x00000000004578f2 : mov r8b, 0x2d ; ret 0xa414
0x000000000042290d : mov r8b, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000044dadd : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000044df2f : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000044debf : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000448a4a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429252 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000457d07 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044872e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422af2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043f920 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004290eb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000448b4d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428851 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000430266 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430faf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000431ac0 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b29e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000448b09 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042af3f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a811 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448f44 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004341d3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004342db : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044a04e : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041fcab : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042baeb : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042290b : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043d67a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042c580 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407808 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042af5c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042af7c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042af9c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043f89c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043f8dc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f8bc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000044cbcd : mov rax, rdi ; pop rbp ; ret
0x000000000042d050 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f91c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422c13 : mov rax, rdx ; pop rbp ; ret
0x000000000041fe12 : mov rax, rsi ; pop rbp ; ret
0x000000000040298a : mov rbp, rsp ; call rax
0x00000000004028f0 : mov rbp, rsp ; ja 0x4028fd ; pop rbp ; ret
0x000000000043f5a1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042daec : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042da54 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042e11d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000416512 : mov rcx, rax ; mov al, 0 ; call 0x402767
0x000000000044dae1 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000044dec2 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000430d7b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042af58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042af78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042af98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043f898 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043f8d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f8b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042daf0 : mov rdi, qword ptr [rcx] ; call rax
0x000000000043f924 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406545 : mov rdx, rax ; mov al, 0 ; call 0x402767
0x0000000000416459 : mov rsi, qword ptr [rbp - 0x178] ; call 0x4226d9
0x000000000040293f : mov rsi, rax ; mov edi, 0x663468 ; jmp rdx
0x000000000042bae8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040abac : mov rsp, rbp ; pop rbp ; ret
0x000000000043d46a : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000427b07 : mov word ptr [r8 - 0x68], dr1 ; ret 0x45e9
0x0000000000427a9d : mov word ptr [r8 - 0x68], dr1 ; ret 0xafe9
0x000000000043d46b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000427b08 : mov word ptr [rax - 0x68], dr1 ; ret 0x45e9
0x0000000000427a9e : mov word ptr [rax - 0x68], dr1 ; ret 0xafe9
0x000000000043abbc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000045a6be : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000409650 : movabs byte ptr [0x840ffffffdec8589], al ; ret 0x11
0x000000000041830f : movabs dword ptr [0x1d6bb80000051ee9], eax ; ret 0xb962
0x000000000043ecfc : movabs dword ptr [0x814890558b48749f], eax ; ret 0x13
0x00000000004283c5 : movabs dword ptr [0xda4966ec45c7fffd], eax ; ret
0x000000000040d03d : movabs eax, dword ptr [0x840ffffff8808589] ; ret
0x000000000046184c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rax], dl ; sar dh, 1 ; jmp rax
0x00000000004475dc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x447b56
0x000000000046034c : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0xac400000 ; cld ; call qword ptr [rdx]
0x0000000000459c1d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a4a1 : movsx eax, byte ptr [rbp - 5] ; add rsp, 8 ; pop rbp ; ret
0x000000000042b662 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000448251 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416770 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004226ba : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000449098 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429b68 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409181 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040aba9 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041699f : movzx eax, al ; pop rbp ; ret
0x000000000044cd32 : movzx eax, ax ; pop rbp ; ret
0x000000000043117c : movzx eax, bh ; pop rbp ; ret
0x000000000042258c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421e5c : movzx eax, cl ; pop rbp ; ret
0x000000000043f84b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043117b : movzx eax, dil ; pop rbp ; ret
0x0000000000429359 : movzx eax, dl ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043136c : movzx eax, dl ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422d1c : movzx eax, dl ; pop rbp ; ret
0x00000000004195fe : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004195ff : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000461c30 : nop ; cmp bh, -1 ; ret 0
0x00000000004614b0 : nop ; jns 0x4614b4 ; call qword ptr [rbx]
0x0000000000461690 : nop ; mov ch, -2 ; jmp qword ptr [rdi]
0x000000000045b938 : nop dword ptr [rax + rax] ; ret
0x00000000004601ad : or al, 0 ; add byte ptr [rax], al ; xchg eax, edx ; cld ; call rdx
0x000000000043c7d7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455312 : or al, 0x25 ; pop rdx ; jmp 0xffffffffc42d5366
0x000000000046000d : or al, byte ptr [rax] ; add byte ptr [rax + 0x7c], dl ; cld ; call qword ptr [rsi]
0x000000000046000c : or al, byte ptr fs:[rax] ; add byte ptr [rax + 0x7c], dl ; cld ; call qword ptr [rsi]
0x000000000042ed5b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea055305
0x000000000043f53c : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x0000000000422cdf : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x000000000045fe8d : or byte ptr [rax], al ; add byte ptr [rax], ah ; cld ; call qword ptr [rax]
0x0000000000426a7c : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042933c : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043f53d : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x0000000000422ce0 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000460c90 : or ch, 0xfd ; jmp qword ptr [rdx]
0x000000000045f54c : or dh, 0xff ; call qword ptr [rax]
0x000000000045ff8d : or dword ptr [rax], eax ; add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rcx]
0x000000000045feed : or dword ptr [rax], eax ; add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rbx]
0x000000000045ff2d : or dword ptr [rax], eax ; add byte ptr [rax], dh ; pop rdx ; cld ; call qword ptr [rax]
0x000000000041e9f4 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000446c87 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000045feec : or dword ptr [rax], r8d ; add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rbx]
0x000000000046030d : or eax, 0xac400000 ; cld ; call qword ptr [rdx]
0x000000000044c7ff : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x00000000004600ed : or eax, dword ptr [rax] ; add byte ptr [rax - 0x79], dh ; cld ; jmp rbx
0x000000000043d861 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044cbcb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000044cc41 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402966 : or esp, dword ptr [rsi] ; add byte ptr [rcx], al ; ret
0x000000000042ed5a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea055306
0x00000000004600ec : or r8d, dword ptr [rax] ; add byte ptr [rax - 0x79], dh ; cld ; jmp rbx
0x000000000044cbca : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000433b37 : out -0x47, eax ; ret 0x614e
0x0000000000460d71 : out -3, al ; jmp qword ptr [rsi]
0x000000000041699c : out 0x24, al ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416938 : out 1, al ; jmp 0x4169ac
0x0000000000416937 : out 1, al ; jmp 0x4169ad
0x0000000000431179 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000459b1f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042245f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044cc40 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402965 : outsb dx, byte ptr [rsi] ; or esp, dword ptr [rsi] ; add byte ptr [rcx], al ; ret
0x00000000004277b1 : outsb dx, byte ptr [rsi] ; ret
0x000000000042b709 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042f233 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045ff91 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rcx]
0x00000000004063ed : outsd dx, dword ptr [rsi] ; ret
0x000000000045b92c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045b92e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043cb02 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045b930 : pop r14 ; pop r15 ; ret
0x00000000004165ff : pop r14 ; pop rbp ; ret
0x000000000043cb04 : pop r15 ; pop rbp ; ret
0x000000000045b932 : pop r15 ; ret
0x000000000045a198 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000427c70 : pop rax ; cmp dword ptr [rsi], esp ; pop rbp ; ret
0x000000000041e9f3 : pop rax ; or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402962 : pop rbp ; mov byte ptr [rip + 0x260b6e], 1 ; ret
0x0000000000402901 : pop rbp ; mov edi, 0x663468 ; jmp rax
0x000000000040293e : pop rbp ; mov rsi, rax ; mov edi, 0x663468 ; jmp rdx
0x000000000045b92b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045b92f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004028f5 : pop rbp ; ret
0x000000000040fd67 : pop rbp ; ret 0x891b
0x0000000000413a22 : pop rbp ; ret 0xb91b
0x000000000040673f : pop rbp ; ret 0xffff
0x0000000000448fec : pop rbp ; test al, -2 ; ret 0x4589
0x000000000044901a : pop rbp ; test al, -2 ; ret 0x8eb9
0x000000000043cb01 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004165fe : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409188 : pop rbx ; pop rbp ; ret
0x000000000045a444 : pop rcx ; mov dl, -0x47 ; ret
0x000000000043f198 : pop rcx ; ret 0x28b9
0x000000000043e94b : pop rcx ; ret 0x8589
0x0000000000422bda : pop rdi ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044c84d : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043cb05 : pop rdi ; pop rbp ; ret
0x0000000000459525 : pop rdi ; pop rdx ; ret
0x000000000045b933 : pop rdi ; ret
0x000000000045a88b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000045ff31 : pop rdx ; cld ; call qword ptr [rax]
0x0000000000455314 : pop rdx ; jmp 0xffffffffc42d5364
0x0000000000459526 : pop rdx ; ret
0x000000000044ffab : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000043cb03 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045b931 : pop rsi ; pop r15 ; ret
0x0000000000416600 : pop rsi ; pop rbp ; ret
0x000000000041c70d : pop rsi ; ret
0x0000000000455769 : pop rsp ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045b92d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000436a12 : pop rsp ; ret
0x000000000042b720 : pop rsp ; ret 0xf66
0x0000000000444ef3 : popfq ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000433eaf : popfq ; loop 0x433eb7 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000445f11 : popfq ; ret 0xb657
0x000000000045a259 : popfq ; ret 0xd284
0x000000000041df32 : push -0x17 ; ret 0xa
0x0000000000405837 : push -0x47ffffec ; ret
0x000000000041709d : push 0x1d ; ret 0x8962
0x000000000041f8c4 : push 0x48fffe2b ; add esp, 0x10 ; pop rbp ; ret
0x0000000000428144 : push 0x5d006639 ; ret
0x000000000043c1ff : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000043f89e : push r8 ; pop rbp ; ret
0x0000000000460010 : push rax ; jl 0x460012 ; call qword ptr [rsi]
0x000000000045f9b0 : push rax ; lodsd eax, dword ptr [rsi] ; sti ; jmp rbx
0x0000000000402f54 : push rax ; pop rbp ; ret
0x000000000045ee4c : push rax ; ret 0xfffc
0x000000000045f504 : push rax ; ret 0xffff
0x0000000000447f3b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000043f926 : push rbp ; clc ; pop rbp ; ret
0x000000000041e539 : push rbp ; cwde ; call 0x41f769
0x0000000000429354 : push rbp ; fild word ptr [rax - 0x49f0fe1e] ; ret 0x8348
0x0000000000448913 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000455758 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045066e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000452625 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000426c23 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x000000000042d663 : push rbp ; fsubr st(1) ; ret 0
0x000000000043a338 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000043a51e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000043a5c4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000043a5f2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000043a6c0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000043a856 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000422cf2 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x00000000004292f1 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000041f663 : push rbp ; jrcxz 0x41f652 ; ret 0
0x000000000041f3ce : push rbp ; lodsb al, byte ptr [rsi] ; call 0x434088
0x000000000042ab71 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000451e60 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000402984 : push rbp ; mov edi, 0x662e20 ; mov rbp, rsp ; call rax
0x000000000043f5a0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041a170 : push rbp ; ret
0x000000000042edee : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000419b53 : push rcx ; ret 0x8983
0x000000000041a16c : push rcx ; ret 0x8a83
0x0000000000423f64 : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000045fef1 : push rsi ; cld ; call qword ptr [rbx]
0x000000000041ffec : push rsi ; ret
0x000000000044da5b : pushfq ; ret 0x8445
0x000000000041a45f : pushfq ; ret 0xd284
0x000000000045f931 : pushfq ; sti ; jmp qword ptr [rcx]
0x000000000044cc3e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044cc6e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002da : ret
0x0000000000416462 : ret 0
0x000000000042c14f : ret 0x10
0x0000000000409659 : ret 0x11
0x000000000041f172 : ret 0x1103
0x0000000000452f8f : ret 0x110a
0x000000000041a1b7 : ret 0x124
0x000000000042691c : ret 0x13
0x0000000000450672 : ret 0x18
0x0000000000440f27 : ret 0x1ce9
0x000000000044d392 : ret 0x1f85
0x000000000045a34b : ret 0x2030
0x0000000000450912 : ret 0x2106
0x0000000000402762 : ret 0x260b
0x0000000000402562 : ret 0x260c
0x0000000000402362 : ret 0x260d
0x0000000000402162 : ret 0x260e
0x000000000042b70a : ret 0x280f
0x000000000043f199 : ret 0x28b9
0x00000000004258d5 : ret 0x29b9
0x0000000000413b3d : ret 0x2a
0x00000000004040b2 : ret 0x2ba1
0x000000000043d036 : ret 0x2c1
0x0000000000445120 : ret 0x2e42
0x000000000041e4c4 : ret 0x30e9
0x000000000043dff1 : ret 0x31e9
0x00000000004076bf : ret 0x33e9
0x000000000041f208 : ret 0x344c
0x0000000000422128 : ret 0x34b9
0x0000000000403072 : ret 0x39
0x0000000000423a31 : ret 0x3948
0x000000000044131d : ret 0x39aa
0x00000000004553a0 : ret 0x3ae8
0x0000000000410cee : ret 0x3bcc
0x00000000004035fb : ret 0x3cc2
0x000000000041273d : ret 0x3e
0x000000000042acca : ret 0x42ab
0x0000000000417eca : ret 0x43a
0x0000000000436c7a : ret 0x43fa
0x0000000000402bcf : ret 0x45
0x0000000000419c47 : ret 0x4589
0x0000000000427b0c : ret 0x45e9
0x0000000000440e04 : ret 0x46e8
0x0000000000414591 : ret 0x48e0
0x000000000040b4ce : ret 0x48f9
0x0000000000424009 : ret 0x4a8b
0x000000000043b990 : ret 0x4ae8
0x00000000004076a7 : ret 0x4be9
0x000000000045749d : ret 0x4de8
0x000000000040df26 : ret 0x4e
0x000000000042c534 : ret 0x50e9
0x000000000041a1f8 : ret 0x51ba
0x000000000044aba9 : ret 0x558a
0x0000000000407799 : ret 0x59e9
0x0000000000402a07 : ret 0x5b71
0x000000000044a123 : ret 0x5e5
0x00000000004338df : ret 0x614e
0x000000000040768f : ret 0x63e9
0x000000000041a1ab : ret 0x6be9
0x000000000041a963 : ret 0x70bc
0x0000000000426b94 : ret 0x71b9
0x000000000041e47b : ret 0x71be
0x000000000043e6fd : ret 0x7256
0x0000000000425a5a : ret 0x7406
0x000000000040ebd6 : ret 0x78
0x000000000043fd62 : ret 0x7961
0x0000000000407677 : ret 0x7be9
0x0000000000440e22 : ret 0x7d81
0x000000000042767b : ret 0x7dbc
0x0000000000433a2b : ret 0x8148
0x000000000042935b : ret 0x8348
0x00000000004054f3 : ret 0x8445
0x0000000000409f7d : ret 0x84d5
0x000000000040707e : ret 0x8589
0x0000000000418c65 : ret 0x85e8
0x0000000000436b10 : ret 0x891a
0x000000000040fd68 : ret 0x891b
0x0000000000402a35 : ret 0x8933
0x0000000000459cfc : ret 0x8934
0x000000000041de9b : ret 0x8948
0x000000000041b7db : ret 0x894b
0x000000000041df91 : ret 0x894d
0x00000000004033b0 : ret 0x8960
0x000000000041709f : ret 0x8962
0x000000000042ea5c : ret 0x897f
0x0000000000419b54 : ret 0x8983
0x000000000044e481 : ret 0x89b6
0x000000000040ad7f : ret 0x89f9
0x000000000041a16d : ret 0x8a83
0x0000000000459cd8 : ret 0x8b34
0x000000000041e1d0 : ret 0x8b48
0x00000000004055c3 : ret 0x8b60
0x0000000000433ab8 : ret 0x8ce9
0x0000000000414e6d : ret 0x8d88
0x0000000000425f6b : ret 0x8d89
0x000000000044901d : ret 0x8eb9
0x000000000041ef4c : ret 0x907e
0x000000000041e503 : ret 0x97e8
0x000000000041f48f : ret 0x97e9
0x0000000000409a21 : ret 0x986
0x00000000004408ae : ret 0x9ce8
0x0000000000416b5e : ret 0x9e1d
0x000000000041df34 : ret 0xa
0x000000000042c0ba : ret 0xa3b9
0x00000000004578f5 : ret 0xa414
0x00000000004494eb : ret 0xa4be
0x000000000042ed99 : ret 0xa6e9
0x000000000044b22e : ret 0xa80b
0x000000000043a9e5 : ret 0xa9b9
0x00000000004254a0 : ret 0xaae8
0x0000000000436462 : ret 0xade6
0x00000000004567e0 : ret 0xae8
0x0000000000427aa2 : ret 0xafe9
0x00000000004062dc : ret 0xb0
0x000000000041e6e7 : ret 0xb3e8
0x0000000000445f12 : ret 0xb657
0x000000000043a150 : ret 0xb91a
0x0000000000413a23 : ret 0xb91b
0x0000000000402a63 : ret 0xb933
0x000000000042d696 : ret 0xb948
0x000000000041cf65 : ret 0xb94b
0x0000000000418318 : ret 0xb962
0x000000000044e73b : ret 0xb9b6
0x0000000000448fd7 : ret 0xba03
0x0000000000432ba3 : ret 0xbe9
0x000000000041cc59 : ret 0xc
0x0000000000415666 : ret 0xc084
0x0000000000402925 : ret 0xc148
0x0000000000422d1e : ret 0xc35d
0x0000000000407eb2 : ret 0xcabe
0x0000000000405f60 : ret 0xd284
0x000000000043c203 : ret 0xd4e9
0x00000000004331a7 : ret 0xd549
0x000000000044b2f2 : ret 0xd592
0x000000000044bfec : ret 0xd957
0x000000000042ed62 : ret 0xdde9
0x000000000041573d : ret 0xe
0x00000000004093d8 : ret 0xe280
0x000000000040b484 : ret 0xe2be
0x000000000040ceea : ret 0xe32a
0x000000000041f271 : ret 0xe4b9
0x0000000000404c66 : ret 0xe5b0
0x0000000000418b03 : ret 0xe7e8
0x000000000041a185 : ret 0xe900
0x000000000041842d : ret 0xe962
0x000000000042edf7 : ret 0xe97f
0x000000000040b57f : ret 0xe9f9
0x0000000000407707 : ret 0xebe9
0x000000000043c81c : ret 0xee8
0x000000000042c495 : ret 0xefe9
0x0000000000409621 : ret 0xf
0x0000000000429b4a : ret 0xf280
0x000000000041543f : ret 0xf40
0x000000000043abc5 : ret 0xf41
0x0000000000426db6 : ret 0xf4e8
0x00000000004160a5 : ret 0xf5e8
0x000000000042b721 : ret 0xf66
0x000000000045021a : ret 0xfb21
0x000000000043342c : ret 0xfb94
0x000000000044788a : ret 0xfbaa
0x00000000004076e3 : ret 0xfe9
0x00000000004425ea : ret 0xfedc
0x000000000042d346 : ret 0xff3
0x000000000043a33b : ret 0xff9f
0x000000000043bcde : ret 0xffa5
0x0000000000406a9a : ret 0xffbc
0x000000000043a521 : ret 0xffbf
0x000000000043af8b : ret 0xffc4
0x000000000043a5c7 : ret 0xffc5
0x000000000043a5f5 : ret 0xffd5
0x000000000043a6c3 : ret 0xffd8
0x000000000043b031 : ret 0xffd9
0x000000000043a859 : ret 0xffe0
0x000000000043992e : ret 0xfffa
0x000000000042592a : ret 0xfffb
0x000000000045ee4d : ret 0xfffc
0x0000000000416519 : ret 0xfffe
0x000000000040654c : ret 0xffff
0x00000000004071ea : ret 1
0x00000000004007c0 : ret 2
0x0000000000406f09 : ret 3
0x000000000042693b : ret 4
0x0000000000446cb8 : ret 5
0x0000000000457e8e : ret 6
0x000000000042f201 : ret 7
0x00000000004203cb : ret 8
0x0000000000454195 : ret 9
0x00000000004286ba : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004077d1 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042aeda : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042ac44 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426e7d : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000440f43 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421e58 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000412608 : rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x00000000004343e6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040292c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40293b ; pop rbp ; ret
0x0000000000409183 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040abab : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000419651 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x00000000004226bc : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000044909a : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040c135 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ef3b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a512 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41a522 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419436 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x419445 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e4e3 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x43e4f3 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004222d6 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004343e7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000448910 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041e9fb : sahf ; ret
0x000000000041260b : sahf ; ret 0x8445
0x0000000000445f65 : sahf ; ret 0xb657
0x0000000000408620 : sahf ; ret 0xd284
0x000000000045fa10 : sal al, 1 ; sti ; call qword ptr [rbx]
0x000000000044ebfe : salc ; ret
0x00000000004147ac : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000461851 : sar dh, 1 ; jmp rax
0x0000000000433b34 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x0000000000422d10 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x000000000040292e : sar eax, 1 ; jne 0x402939 ; pop rbp ; ret
0x000000000045ee45 : sar esp, -1 ; fcom dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; ret 0xfffc
0x000000000040292d : sar rax, 1 ; jne 0x40293a ; pop rbp ; ret
0x0000000000460a08 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0 ; add al, al ; ret
0x000000000044df32 : sbb byte ptr [rax - 0x75], cl ; jge 0x44deec ; call rax
0x000000000044df31 : sbb byte ptr [rax - 0x75], cl ; jge 0x44deed ; call rax
0x000000000043d499 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000422126 : sbb ch, bh ; ret 0x34b9
0x0000000000422075 : sbb ch, bh ; ret 0x8589
0x0000000000460ecd : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x18], ah ; std ; jmp qword ptr [rdi]
0x00000000004484f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043a9de : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004503c1 : sbb esp, dword ptr [rax] ; sti ; inc edi ; in al, dx ; int1 ; ret
0x0000000000422d3e : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d074 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045b5a5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422d16 : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x000000000042d076 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000460d70 : shl dh, 1 ; std ; jmp qword ptr [rsi]
0x000000000042b73f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000044cc6f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044cc08 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000044cc3f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044cbc8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004093d1 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000460fb2 : std ; call qword ptr [rdx]
0x0000000000460b72 : std ; jmp qword ptr [rax]
0x0000000000460872 : std ; jmp qword ptr [rdi]
0x0000000000460a52 : std ; jmp qword ptr [rdx]
0x0000000000460d72 : std ; jmp qword ptr [rsi]
0x0000000000422127 : std ; ret 0x34b9
0x0000000000422076 : std ; ret 0x8589
0x000000000042a4a4 : sti ; add rsp, 8 ; pop rbp ; ret
0x000000000045fa12 : sti ; call qword ptr [rbx]
0x000000000045fa72 : sti ; call qword ptr [rcx]
0x000000000045f9f2 : sti ; call rbx
0x000000000044f7f7 : sti ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x00000000004503c3 : sti ; inc edi ; in al, dx ; int1 ; ret
0x000000000045f932 : sti ; jmp qword ptr [rcx]
0x000000000045f9b2 : sti ; jmp rbx
0x00000000004065a1 : sti ; ret
0x000000000045fc51 : sub ah, bh ; jmp qword ptr [rdi]
0x000000000042a1c0 : sub al, -0x4c ; ret
0x0000000000437a27 : sub al, 0x38 ; ret 0x8589
0x000000000043a9e3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000454cd8 : sub al, 0x61 ; ret
0x000000000042b71b : sub al, 3 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045f301 : sub al, byte ptr [rax] ; add al, dh ; ret
0x000000000045fcd1 : sub bh, ah ; jmp rsi
0x000000000041573a : sub byte ptr [rbp - 0x17], dh ; ret 0xe
0x000000000045fdb0 : sub byte ptr [rdi], -4 ; call qword ptr [rbx]
0x000000000041a457 : sub byte ptr [rdx + 0x3d], bh ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041fe0d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000045fd31 : sub edi, esp ; jmp rcx
0x000000000045b9e1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000045b9e0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044ff41 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000447f5b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000454a49 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000448fed : test al, -2 ; ret 0x4589
0x000000000044901b : test al, -2 ; ret 0x8eb9
0x000000000041e740 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044f978 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e964 : test al, 0x2d ; call 0xffffffff8a054f0a
0x000000000042e963 : test al, 0x2d ; call 0xffffffff8a054f0b
0x000000000042e9a9 : test al, 0x2d ; jmp 0xffffffff8a054f4f
0x000000000042e9a8 : test al, 0x2d ; jmp 0xffffffff8a054f50
0x000000000042ec4c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042ea58 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000045248d : test al, 0x45 ; jmp 0x4528e9
0x0000000000419725 : test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000043d67d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042c26b : test al, 0x70 ; ret 0x4589
0x000000000042c532 : test al, 0x70 ; ret 0x50e9
0x000000000042c493 : test al, 0x70 ; ret 0xefe9
0x0000000000447e38 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000045b93a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000426f01 : test byte ptr [rbx + rax], cl ; add cl, ch ; ret
0x000000000045f92c : test byte ptr [rbx], al ; add byte ptr [rax], al ; loopne 0x45f8d5 ; sti ; jmp qword ptr [rcx]
0x000000000046012c : test byte ptr [rbx], cl ; add byte ptr [rax], al ; mov al, -0x74 ; cld ; call qword ptr [rsi]
0x000000000045ff2c : test byte ptr [rcx], cl ; add byte ptr [rax], al ; xor byte ptr [rdx - 4], bl ; call qword ptr [rax]
0x000000000040bc3d : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004584e6 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000446c85 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000046032c : test byte ptr [rip - 0x53c00000], cl ; cld ; call qword ptr [rdx]
0x0000000000461c2c : test byte ptr [rsi], ah ; add byte ptr [rax], al ; nop ; cmp bh, -1 ; ret 0
0x0000000000455041 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000044becd : test dword ptr [rax + 0x2dffffef], edi ; imul ch ; ret
0x000000000044bf21 : test dword ptr [rax + 0x2dffffef], edi ; imul ebp ; ret
0x000000000044be95 : test dword ptr [rax + 0x2dffffef], edi ; ret
0x000000000040e224 : test dword ptr [rax + 0x2dfffffa], ecx ; call qword ptr [rcx]
0x000000000040cc28 : test dword ptr [rax + 0x2dfffffa], ecx ; ret
0x0000000000410ce8 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x3bcc
0x000000000040cee4 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0xe32a
0x0000000000403b18 : test dword ptr [rax + 0x2dfffffe], esi ; call qword ptr [rcx]
0x00000000004045b4 : test dword ptr [rax + 0x2dfffffe], esi ; ret
0x00000000004040ac : test dword ptr [rax + 0x2dfffffe], esi ; ret 0x2ba1
0x0000000000404c60 : test dword ptr [rax + 0x2dfffffe], esi ; ret 0xe5b0
0x000000000041cc52 : test dword ptr [rax + rdi*8 - 0x7bf00001], ebp ; ret 0xc
0x0000000000442f21 : test dword ptr [rax - 0x2c000002], ecx ; ret 0x39aa
0x0000000000433eb4 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000421a71 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x0000000000433b1a : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000043ee77 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdi
0x0000000000447f40 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000447ca8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000045411c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000045490a : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000440f1f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x440eed ; ret 0x1ce9
0x0000000000454b4d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004548df : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000426dcf : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000045601e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000433660 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x00000000004335f0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000444921 : test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000444ef8 : test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000441d31 : test dword ptr [rsp + rdi*8 - 0x7bf00001], esi ; ret
0x0000000000415738 : wait ; insd dword ptr [rdi], dx ; sub byte ptr [rbp - 0x17], dh ; ret 0xe
0x0000000000434a11 : xchg eax, ebp ; ret
0x00000000004054f2 : xchg eax, ebp ; ret 0x8445
0x0000000000406070 : xchg eax, ebp ; ret 0xd284
0x0000000000422d17 : xchg eax, ebp ; ret 0xe280
0x0000000000429b49 : xchg eax, ebp ; ret 0xf280
0x000000000045b5a6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044921b : xchg eax, ebx ; ret
0x00000000004241ac : xchg eax, ebx ; ret 0xd284
0x0000000000437a0b : xchg eax, ecx ; ret
0x0000000000420ca7 : xchg eax, edi ; in al, 0x30 ; add ebp, ecx ; ret
0x00000000004240c8 : xchg eax, edi ; ret 0xd284
0x000000000043f53f : xchg eax, edi ; ret 0xe280
0x00000000004601b1 : xchg eax, edx ; cld ; call rdx
0x0000000000406ca4 : xchg eax, edx ; ret
0x0000000000447e3e : xchg eax, edx ; ret 0xd284
0x0000000000421e57 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000043d392 : xchg eax, esi ; ret
0x0000000000423bb7 : xchg eax, esi ; ret 0x8445
0x0000000000424cde : xchg eax, esi ; ret 0xd284
0x000000000041ad6b : xchg eax, esp ; ret
0x000000000043b9b6 : xchg eax, esp ; ret 0x8445
0x0000000000405f5f : xchg eax, esp ; ret 0xd284
0x00000000004093d7 : xchg eax, esp ; ret 0xe280
0x0000000000422125 : xchg eax, esp ; sbb ch, bh ; ret 0x34b9
0x0000000000422074 : xchg eax, esp ; sbb ch, bh ; ret 0x8589
0x000000000042d075 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004600f1 : xchg esp, edi ; jmp rbx
0x000000000044cbcc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000044f7fb : xor al, 0x25 ; ret
0x0000000000406068 : xor al, 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405f57 : xor al, 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045f4f9 : xor al, byte ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000460e70 : xor al, ch ; std ; jmp qword ptr [rdi]
0x0000000000426e1e : xor bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000042ec4e : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042edf5 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004077f2 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045ff30 : xor byte ptr [rdx - 4], bl ; call qword ptr [rax]
0x000000000042b71a : xor ch, byte ptr [rbx + rax] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042ea5a : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000043d997 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043455d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041683b : xor esp, dword ptr [rsi] ; add rsp, 0x20 ; pop rbp ; ret
