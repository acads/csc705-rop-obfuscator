0x0000000000404ccd : adc al, 0x25 ; ret
0x0000000000404c56 : adc al, 0x25 ; ret 0x61a2
0x0000000000404878 : adc byte ptr [rcx - 0x70f057bb], cl ; ret 1
0x0000000000401d80 : adc ch, byte ptr [rdx - 0x77] ; or byte ptr [r15], 0x8f ; ret 6
0x000000000041208b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404876 : adc dword ptr [rax], ecx ; adc byte ptr [rcx - 0x70f057bb], cl ; ret 1
0x000000000040fa39 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004187db : add ah, ah ; add dword ptr [rax], eax ; add al, dh ; sar esi, 1 ; call rdx
0x0000000000402799 : add al, 0 ; add dh, al ; add al, 0x25 ; ret
0x0000000000402785 : add al, 0 ; add dh, al ; add al, 0x25 ; ret 0x61a2
0x0000000000401bf6 : add al, 0x25 ; ret
0x0000000000401bee : add al, 0x25 ; ret 0x61a2
0x0000000000418cfc : add al, 7 ; add byte ptr [rax], al ; nop ; jns 0x418d09 ; jmp qword ptr [rdx]
0x000000000041839b : add al, bl ; jg 0x4183a2 ; call rax
0x000000000041855b : add al, bl ; out -1, al ; call rax
0x0000000000411983 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040498d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041375b : add al, ch ; mov edi, 0xbafffedb ; ret
0x00000000004163f8 : add al, ch ; ret 0xfeae
0x000000000041836b : add al, cl ; ja 0x418372 ; call qword ptr [rax]
0x00000000004187df : add al, dh ; sar esi, 1 ; call rdx
0x0000000000411d7e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411ae6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000404608 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041763f : add bl, dh ; ret
0x00000000004163f5 : add byte ptr [r8], al ; add al, ch ; ret 0xfeae
0x0000000000402866 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000418cfa : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; nop ; jns 0x418d0b ; jmp qword ptr [rdx]
0x00000000004163f6 : add byte ptr [rax], al ; add al, ch ; ret 0xfeae
0x0000000000411d7c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411ae4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041763d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402864 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041763b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004027ef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041763c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x417d
0x0000000000402350 : add byte ptr [rax], al ; add byte ptr [rbx + 0x22dc045], cl ; ret 0x3e6e
0x000000000040f77e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040477c : add byte ptr [rax], al ; add byte ptr [rbx + 0x582ddc45], cl ; ret
0x0000000000401f04 : add byte ptr [rax], al ; add byte ptr [rbx - 0x27d23fbb], cl ; ret 0xb55e
0x0000000000416d29 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000416ca5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000412aa3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000415a5e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404405 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040e631 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000416de5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000403a0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004041a3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040768d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004027f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004155dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411c7a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040766f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402831 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004165ed : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004060c0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f4a0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a95 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041208d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f9f7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401273 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041378d : add byte ptr [rax], al ; call 0x4012c8
0x000000000041859a : add byte ptr [rax], al ; call 0xffffffffd1418596
0x00000000004182da : add byte ptr [rax], al ; fdiv st(6), st(0) ; call rax
0x000000000041839a : add byte ptr [rax], al ; fdivr dword ptr [rdi - 1] ; call rax
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x00000000004165e9 : add byte ptr [rax], al ; jmp 0x4165f8
0x0000000000417259 : add byte ptr [rax], al ; jmp 0x417268
0x0000000000417467 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405809 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406f59 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418cfe : add byte ptr [rax], al ; nop ; jns 0x418d07 ; jmp qword ptr [rdx]
0x000000000041877e : add byte ptr [rax], al ; or ch, 0xfe ; call qword ptr [rsi]
0x00000000004182ea : add byte ptr [rax], al ; pop rax ; fdivp st(6) ; call qword ptr [rax]
0x0000000000402ba2 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f77f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f458 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041887e : add byte ptr [rax], al ; push rax ; fdivr st(6) ; jmp qword ptr [rbx]
0x0000000000418d5e : add byte ptr [rax], al ; push rax ; jl 0x418d67 ; jmp rdx
0x000000000041763e : add byte ptr [rax], al ; ret
0x0000000000417e1e : add byte ptr [rax], al ; ret 0x417d
0x000000000041877a : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; or ch, 0xfe ; call qword ptr [rsi]
0x000000000041887a : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; push rax ; fdivr st(6) ; jmp qword ptr [rbx]
0x0000000000417e17 : add byte ptr [rbp + rdi*2 + 0x41], bh ; add byte ptr [rax], al ; ret 0x417d
0x0000000000402307 : add byte ptr [rbx + 0x12dc045], cl ; ret 0x3e6e
0x0000000000402352 : add byte ptr [rbx + 0x22dc045], cl ; ret 0x3e6e
0x000000000040f780 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040477e : add byte ptr [rbx + 0x582ddc45], cl ; ret
0x000000000040f459 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401f06 : add byte ptr [rbx - 0x27d23fbb], cl ; ret 0xb55e
0x0000000000401ebb : add byte ptr [rbx - 0x28d23fbb], cl ; ret 0xb55e
0x0000000000416d2b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000416ca7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000412aa5 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000415a60 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404407 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040e633 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000405005 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411dce : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016c8 : add byte ptr [rcx], al ; ret
0x0000000000418cfb : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; nop ; jns 0x418d0a ; jmp qword ptr [rdx]
0x0000000000416de7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000403a10 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004041a5 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040768f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004027f3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004155df : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411c7c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000407671 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402833 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401f1a : add cl, ch ; ret
0x00000000004165ef : add cl, ch ; ret 0
0x000000000040498f : add cl, ch ; ret 1
0x000000000040478f : add cl, ch ; ret 3
0x000000000040279b : add dh, al ; add al, 0x25 ; ret
0x0000000000402787 : add dh, al ; add al, 0x25 ; ret 0x61a2
0x00000000004187dd : add dword ptr [rax], eax ; add al, dh ; sar esi, 1 ; call rdx
0x0000000000404606 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000040f9f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402305 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x12dc045], cl ; ret 0x3e6e
0x000000000041011a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406056 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416501 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016c4 : add eax, 0x218bee ; add ebx, esi ; ret
0x000000000040168b : add eax, edx ; sar rax, 1 ; jne 0x40169c ; pop rbp ; ret
0x00000000004016c9 : add ebx, esi ; ret
0x0000000000404285 : add edi, eax ; test dword ptr [rsi + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000401bf4 : add esi, eax ; add al, 0x25 ; ret
0x0000000000401bec : add esi, eax ; add al, 0x25 ; ret 0x61a2
0x00000000004019ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000411dcc : add esp, 0x100 ; pop rbp ; ret
0x0000000000410117 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000411f3c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402b9e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004059bd : add esp, 0x20 ; pop rbp ; ret
0x0000000000415d63 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000413aba : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000405a98 : add esp, 0x30 ; pop rbp ; ret
0x0000000000404728 : add esp, 0x3e0 ; pop rbp ; ret
0x0000000000405977 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401b52 : add esp, 0x50 ; pop rbp ; ret
0x0000000000401959 : add esp, 0x60 ; pop rbp ; ret
0x00000000004102ff : add esp, 0x70 ; pop rbp ; ret
0x00000000004051a9 : add esp, 0x80 ; pop rbp ; ret
0x0000000000414a82 : add esp, 0x90 ; pop rbp ; ret
0x0000000000406d1e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000405e7f : add esp, 0xb0 ; pop rbp ; ret
0x000000000040696b : add esp, 0xc0 ; pop rbp ; ret
0x000000000040f454 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004065e6 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000404dbd : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401276 : add esp, 8 ; ret
0x000000000040168a : add rax, rdx ; sar rax, 1 ; jne 0x40169d ; pop rbp ; ret
0x00000000004019aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000411dcb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000410116 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000411f3b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402b9d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004059bc : add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d62 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000413ab9 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000405a97 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404727 : add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000405976 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b51 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401958 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004102fe : add rsp, 0x70 ; pop rbp ; ret
0x00000000004051a8 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000414a81 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406d1d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000405e7e : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040696a : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040f453 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004065e5 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000404dbc : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401275 : add rsp, 8 ; ret
0x0000000000416500 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401be7 : and eax, 0x61a2c1 ; add esi, eax ; add al, 0x25 ; ret 0x61a2
0x0000000000401bef : and eax, 0x61a2c2 ; add esi, eax ; add al, 0x25 ; ret
0x00000000004051cf : and eax, 0x61a2d8 ; pop rbp ; ret
0x00000000004051f3 : and eax, 0x61a2e0 ; pop rbp ; ret
0x0000000000406533 : call 0x1028d23
0x000000000041378f : call 0x4012c6
0x000000000041375c : call 0x401326
0x0000000000405156 : call 0x4013a2
0x0000000000404d16 : call 0x401459
0x0000000000406534 : call 0x412762
0x000000000041859c : call 0xffffffffd1418594
0x000000000040f499 : call 0xffffffffe9037de9
0x000000000040f498 : call 0xffffffffe9037dea
0x000000000040aedd : call 0xfffffffff7393474
0x0000000000415825 : call 0xffffffffff45ddfa
0x000000000040da09 : call 0xffffffffff555fdb
0x000000000040da08 : call 0xffffffffff555fdc
0x000000000040da09 : call 0xffffffffff555fdd
0x000000000040da08 : call 0xffffffffff555fde
0x0000000000417619 : call qword ptr [r12 + rbx*8]
0x000000000040cd96 : call qword ptr [rax]
0x000000000040460e : call qword ptr [rbx]
0x000000000040ea25 : call qword ptr [rcx]
0x000000000040c9c3 : call qword ptr [rdx]
0x000000000040c95f : call qword ptr [rsi]
0x000000000041761a : call qword ptr [rsp + rbx*8]
0x00000000004016ed : call rax
0x000000000040b17a : call rbx
0x00000000004187e3 : call rdx
0x0000000000411d84 : call rsi
0x0000000000416cac : cdq ; ret
0x0000000000402b9c : clc ; add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000414672 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412f50 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004162ad : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040168f : clc ; jne 0x401698 ; pop rbp ; ret
0x000000000040d65d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000405150 : cmove eax, ecx ; mov dword ptr [rbp - 0x80], eax ; call 0x4013a8
0x0000000000414e2d : cmp al, -0x2a ; ret
0x000000000040164d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401660 ; pop rbp ; ret
0x000000000040f934 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004167ab : cwde ; js 0x416755 ; ret
0x00000000004167f2 : cwde ; js 0x41679c ; ret
0x000000000041682c : cwde ; js 0x4167d6 ; ret
0x00000000004040ca : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411147 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040d802 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040db0d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040f014 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000410ac3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000404989 : dec dword ptr [rdi] ; test byte ptr [rsi], dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040cb48 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004155db : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000406bbd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004140e4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410949 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004182dd : fdiv st(6), st(0) ; call rax
0x00000000004182ed : fdivp st(6) ; call qword ptr [rax]
0x000000000041839c : fdivr dword ptr [rdi - 1] ; call rax
0x0000000000418881 : fdivr st(6) ; jmp qword ptr [rbx]
0x0000000000412684 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041761c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004129a7 : fsubr st(0) ; ret
0x0000000000402796 : fucompi st(1) ; or al, byte ptr [rax + rax] ; add dh, al ; add al, 0x25 ; ret
0x00000000004019a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413c1c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401660 : hlt ; pop rbp ; mov edi, 0x61a250 ; jmp rax
0x000000000041141e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040cfb9 : in al, -0x7f ; ret 0xff9f
0x000000000040d19f : in al, -0x7f ; ret 0xffbf
0x000000000040d245 : in al, -0x7f ; ret 0xffc5
0x000000000040d273 : in al, -0x7f ; ret 0xffd5
0x000000000040d341 : in al, -0x7f ; ret 0xffd8
0x000000000040d4d7 : in al, -0x7f ; ret 0xffe0
0x000000000041643d : in al, dx ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413f7a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040706a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000416eab : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404403 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040e62f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004041a1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403dcc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040414a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402523 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000403a0c : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404d1a : inc edi ; loopne 0x404d7c ; ret
0x00000000004100e8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040978f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040cdcf : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401653 : ja 0x40165a ; pop rbp ; ret
0x000000000041836d : ja 0x418370 ; call qword ptr [rax]
0x000000000041835d : jb 0x418360 ; call rax
0x0000000000418ac1 : jbe 0x418ac4 ; jmp qword ptr [rdx]
0x000000000040165f : je 0x40165d ; pop rbp ; mov edi, 0x61a250 ; jmp rax
0x000000000041839d : jg 0x4183a0 ; call rax
0x000000000040652e : jge 0x406508 ; mov rsi, qword ptr [rbp - 0x18] ; call 0x412768
0x0000000000410f38 : jge 0x410f4f ; ret
0x0000000000411423 : jge 0x41143a ; ret
0x0000000000417419 : jge 0x417413 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000410e0c : jl 0x410e23 ; ret
0x0000000000418d61 : jl 0x418d64 ; jmp rdx
0x0000000000404d31 : jle 0x404cf5 ; xchg byte ptr ss:[rbx + 0x25148a56], bl ; ret 0x61a2
0x000000000040140b : jmp 0x401287
0x0000000000402797 : jmp 0x402bae
0x00000000004054f1 : jmp 0x4054b9
0x000000000040c77d : jmp 0x40f463
0x000000000040f211 : jmp 0x40f465
0x000000000041141d : jmp 0x411995
0x00000000004163f4 : jmp 0x41644a
0x00000000004165eb : jmp 0x4165f6
0x000000000041725b : jmp 0x417266
0x00000000004146ae : jmp 0xffffffffb7034a7a
0x00000000004167aa : jmp 0xffffffffc3e5e04b
0x000000000040c89d : jmp qword ptr [rax]
0x000000000040da0f : jmp qword ptr [rbx]
0x000000000040f3e0 : jmp qword ptr [rcx]
0x000000000040f935 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040aee6 : jmp qword ptr [rdx]
0x000000000040428b : jmp qword ptr [rsi]
0x0000000000401667 : jmp rax
0x000000000040e532 : jmp rbx
0x000000000040ebce : jmp rdi
0x00000000004016a7 : jmp rdx
0x0000000000418703 : jmp rsi
0x000000000040e5c9 : jmp rsp
0x0000000000401690 : jne 0x401697 ; pop rbp ; ret
0x0000000000406532 : jne 0x406520 ; call 0x412764
0x00000000004100e6 : jne 0x4100ef ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000418d01 : jns 0x418d04 ; jmp qword ptr [rdx]
0x0000000000410301 : jo 0x410362 ; ret
0x0000000000410424 : jo 0x410485 ; ret
0x000000000041055e : jo 0x4105bf ; ret
0x000000000041272c : jo 0x41278d ; ret
0x0000000000412f54 : jo 0x412fb5 ; ret
0x0000000000415f55 : jo 0x415fb6 ; ret
0x0000000000416441 : jo 0x4164a2 ; ret
0x0000000000404ccb : js 0x404c5b ; adc al, 0x25 ; ret
0x000000000040f456 : js 0x40f46a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004167ac : js 0x416754 ; ret
0x00000000004167f3 : js 0x41679b ; ret
0x000000000041682d : js 0x4167d5 ; ret
0x0000000000418be1 : js 0x418be4 ; jmp qword ptr [rax]
0x0000000000406969 : lodsb al, byte ptr [rsi] ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000402ba0 : loopne 0x402ba8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040472a : loopne 0x404734 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404d1d : loopne 0x404d79 ; ret
0x0000000000404d1c : loopne 0x404d7a ; ret
0x00000000004059bb : loopne 0x405a0b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004059ba : loopne 0x405a0c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040742e : loopne 0x407437 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412470 : loopne 0x412479 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041287c : loopne 0x4128cc ; add esp, 0x40 ; pop rbp ; ret
0x000000000041287b : loopne 0x4128cd ; add esp, 0x40 ; pop rbp ; ret
0x0000000000413abc : loopne 0x413ac5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041852d : loopne 0x418530 ; call qword ptr [rax]
0x0000000000401b50 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404c4f : mov al, -0x47 ; pop rbp ; xor eax, 0x25148a55 ; ret 0x61a2
0x00000000004157fa : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405e81 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041375a : mov al, 0 ; call 0x401328
0x0000000000418598 : mov al, 0x10 ; add byte ptr [rax], al ; call 0xffffffffd1418598
0x00000000004075eb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004182d8 : mov al, 5 ; add byte ptr [rax], al ; fdiv st(6), st(0) ; call rax
0x0000000000418398 : mov al, 8 ; add byte ptr [rax], al ; fdivr dword ptr [rdi - 1] ; call rax
0x00000000004164fd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004166ad : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416ea9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004051f1 : mov byte ptr [0x61a2e0], al ; pop rbp ; ret
0x000000000040efa8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004016c3 : mov byte ptr [rip + 0x218bee], 1 ; ret
0x0000000000406058 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416503 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000416fd5 : mov dl, -0x47 ; ret
0x00000000004051cd : mov dword ptr [0x61a2d8], edi ; pop rbp ; ret
0x00000000004072a7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040706b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004071df : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004059b9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004163f1 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x41644d
0x0000000000401b4e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405153 : mov dword ptr [rbp - 0x80], eax ; call 0x4013a5
0x00000000004019a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040745d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406f5f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004127bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405973 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041249f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040580c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041643b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004128be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412190 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004072aa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041287a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406e54 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406f5c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412a61 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407065 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000415f4f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004071e1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004102fb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413c1a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414670 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412f4e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016eb : mov ebp, esp ; call rax
0x0000000000401651 : mov ebp, esp ; ja 0x40165c ; pop rbp ; ret
0x0000000000407068 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016e5 : mov edi, 0x619e20 ; mov rbp, rsp ; call rax
0x0000000000401662 : mov edi, 0x61a250 ; jmp rax
0x00000000004016a2 : mov edi, 0x61a250 ; jmp rdx
0x000000000041375d : mov edi, 0xbafffedb ; ret
0x000000000040652d : mov edi, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rbp - 0x18] ; call 0x412769
0x0000000000417617 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000417616 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406531 : mov esi, dword ptr [rbp - 0x18] ; call 0x412765
0x00000000004016a0 : mov esi, eax ; mov edi, 0x61a250 ; jmp rdx
0x00000000004016c6 : mov esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x00000000004051cc : mov qword ptr [0x61a2d8], rdi ; pop rbp ; ret
0x000000000040745c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b4f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004127ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405972 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041249e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040580b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004128bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041218f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412879 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406e53 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406f5b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004102fa : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016ea : mov rbp, rsp ; call rax
0x0000000000401650 : mov rbp, rsp ; ja 0x40165d ; pop rbp ; ret
0x0000000000406530 : mov rsi, qword ptr [rbp - 0x18] ; call 0x412766
0x000000000040169f : mov rsi, rax ; mov edi, 0x61a250 ; jmp rdx
0x00000000004100ea : mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004100eb : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040d83c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041724e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000405003 : movabs byte ptr [0x940f000000010061], al ; ret 0xd284
0x00000000004027ed : movabs byte ptr [0x950f000000000061], al ; ret 0xd284
0x000000000041141c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x411996
0x00000000004167ad : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406057 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416502 : movzx eax, al ; pop rbp ; ret
0x0000000000418d00 : nop ; jns 0x418d05 ; jmp qword ptr [rdx]
0x0000000000417638 : nop dword ptr [rax + rax] ; ret
0x000000000040f457 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402798 : or al, byte ptr [rax + rax] ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d83 : or byte ptr [r15], 0x8f ; ret 6
0x00000000004040cd : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000404cca : or byte ptr [rax - 0x76], bh ; adc al, 0x25 ; ret
0x0000000000418399 : or byte ptr [rax], al ; add al, bl ; jg 0x4183a4 ; call rax
0x0000000000401d84 : or byte ptr [rdi], 0x8f ; ret 6
0x00000000004040ce : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000418780 : or ch, 0xfe ; call qword ptr [rsi]
0x0000000000410ac7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004104e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041855d : out -1, al ; call rax
0x00000000004166af : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c5 : out dx, al ; mov esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x00000000004164ff : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041762c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041762e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f782 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417630 : pop r14 ; pop r15 ; ret
0x000000000040f784 : pop r15 ; pop rbp ; ret
0x0000000000417632 : pop r15 ; ret
0x0000000000416d28 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004182ec : pop rax ; fdivp st(6) ; call qword ptr [rax]
0x0000000000404783 : pop rax ; ret
0x00000000004016c2 : pop rbp ; mov byte ptr [rip + 0x218bee], 1 ; ret
0x0000000000401661 : pop rbp ; mov edi, 0x61a250 ; jmp rax
0x000000000040169e : pop rbp ; mov rsi, rax ; mov edi, 0x61a250 ; jmp rdx
0x000000000041762b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041762f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401655 : pop rbp ; ret
0x0000000000404c52 : pop rbp ; xor eax, 0x25148a55 ; ret 0x61a2
0x000000000040f781 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f45a : pop rbx ; pop rbp ; ret
0x0000000000416fd4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040f785 : pop rdi ; pop rbp ; ret
0x0000000000417633 : pop rdi ; ret
0x000000000041741b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040f783 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417631 : pop rsi ; pop r15 ; ret
0x000000000041762d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409692 : pop rsp ; ret
0x0000000000416de9 : popfq ; ret 0xd284
0x0000000000401d81 : push -0x77 ; or byte ptr [r15], 0x8f ; ret 6
0x0000000000401954 : push 0x48fffffc ; add esp, 0x60 ; pop rbp ; ret
0x00000000004182d7 : push qword ptr [rax + 0x48000005] ; fdiv st(6), st(0) ; call rax
0x0000000000418357 : push qword ptr [rax + 0x68000007] ; jb 0x418366 ; call rax
0x0000000000418417 : push qword ptr [rax + 0x7800000a] ; test bh, bh ; call rax
0x0000000000418557 : push qword ptr [rax - 0x27fffff1] ; out -1, al ; call rax
0x0000000000418397 : push qword ptr [rax - 0x27fffff8] ; jg 0x4183a6 ; call rax
0x000000000040ee7f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000418880 : push rax ; fdivr st(6) ; jmp qword ptr [rbx]
0x0000000000418d60 : push rax ; jl 0x418d65 ; jmp rdx
0x0000000000401b54 : push rax ; pop rbp ; ret
0x0000000000411d7b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412683 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040cfb8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040d19e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040d244 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040d272 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040d340 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040d4d6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004016e4 : push rbp ; mov edi, 0x619e20 ; mov rbp, rsp ; call rax
0x0000000000415a63 : pushfq ; ret 0x8445
0x0000000000403a12 : pushfq ; ret 0xd284
0x0000000000401279 : ret
0x0000000000406536 : ret 0
0x0000000000414c09 : ret 0x10
0x0000000000416edb : ret 0x2030
0x0000000000401412 : ret 0x218c
0x000000000040c997 : ret 0x2a
0x000000000040fcb6 : ret 0x2c1
0x000000000040230d : ret 0x3e6e
0x0000000000417e20 : ret 0x417d
0x00000000004098fa : ret 0x43fa
0x0000000000404473 : ret 0x57e8
0x0000000000413dc3 : ret 0x5e5
0x0000000000401bf0 : ret 0x61a2
0x0000000000404556 : ret 0x74e8
0x000000000040e610 : ret 0x7ae8
0x0000000000402527 : ret 0x8445
0x000000000040a6a9 : ret 0x8589
0x0000000000409790 : ret 0x891a
0x000000000041688c : ret 0x8934
0x0000000000412687 : ret 0x8948
0x00000000004146b1 : ret 0x89b6
0x0000000000416868 : ret 0x8b34
0x000000000040e5f5 : ret 0x8b48
0x0000000000412c23 : ret 0x8b4c
0x000000000041339b : ret 0xa4be
0x000000000040d665 : ret 0xa9b9
0x00000000004090e2 : ret 0xade6
0x0000000000402869 : ret 0xb0
0x0000000000401ec1 : ret 0xb55e
0x000000000040cdd0 : ret 0xb91a
0x000000000041496b : ret 0xb9b6
0x0000000000401685 : ret 0xc148
0x00000000004027f6 : ret 0xd284
0x000000000040ee83 : ret 0xd4e9
0x0000000000402bff : ret 0xda1b
0x00000000004040d1 : ret 0xe280
0x000000000040f49c : ret 0xee8
0x0000000000402de7 : ret 0xf
0x000000000040d845 : ret 0xf41
0x00000000004163fa : ret 0xfeae
0x00000000004118da : ret 0xfefa
0x000000000040cfbb : ret 0xff9f
0x000000000040e95e : ret 0xffa5
0x000000000040d1a1 : ret 0xffbf
0x000000000040dc0b : ret 0xffc4
0x000000000040d247 : ret 0xffc5
0x000000000040d275 : ret 0xffd5
0x000000000040d343 : ret 0xffd8
0x000000000040dcb1 : ret 0xffd9
0x000000000040d4d9 : ret 0xffe0
0x000000000040c5ae : ret 0xfffa
0x0000000000405158 : ret 0xffff
0x000000000040487e : ret 1
0x00000000004022cd : ret 2
0x0000000000404791 : ret 3
0x000000000040ef97 : ret 4
0x0000000000410af8 : ret 5
0x0000000000401d87 : ret 6
0x000000000040f680 : ret 8
0x0000000000405d5a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000415754 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004065e8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415d65 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407066 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040168c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40169b ; pop rbp ; ret
0x000000000040652f : ror byte ptr [rax - 0x75], 1 ; jne 0x406523 ; call 0x412767
0x00000000004118d1 : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x17000003], edx ; ret 0xfefa
0x0000000000407067 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000412680 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004041a7 : sahf ; ret 0xd284
0x0000000000414e2e : salc ; ret
0x000000000040168e : sar eax, 1 ; jne 0x401699 ; pop rbp ; ret
0x00000000004187e1 : sar esi, 1 ; call rdx
0x000000000040168d : sar rax, 1 ; jne 0x40169a ; pop rbp ; ret
0x0000000000410119 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000412263 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d65e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040a6a7 : sub al, 0x38 ; ret 0x8589
0x000000000040d663 : sub al, 0x38 ; ret 0xa9b9
0x0000000000405155 : sub al, 0x45 ; ret 0xffff
0x0000000000401271 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041766d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405154 : sub r8b, 0x45 ; ret 0xffff
0x000000000041766c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000411d9b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415ba8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004102fd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000411c78 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041841d : test bh, bh ; call rax
0x000000000041763a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040478b : test byte ptr [rbp - 0x16fffffb], bl ; ret 3
0x000000000041877c : test byte ptr [rcx], al ; add byte ptr [rax], al ; or ch, 0xfe ; call qword ptr [rsi]
0x000000000041887c : test byte ptr [rdx], al ; add byte ptr [rax], al ; push rax ; fdivr st(6) ; jmp qword ptr [rbx]
0x0000000000410ac5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040498b : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004118d4 : test dword ptr [rax - 0x17000003], edx ; ret 0xfefa
0x0000000000411d80 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411ae8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000040460a : test dword ptr [rsi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000404287 : test dword ptr [rsi + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000404d34 : xchg byte ptr [rbx + 0x25148a56], bl ; ret 0x61a2
0x0000000000404d33 : xchg byte ptr ss:[rbx + 0x25148a56], bl ; ret 0x61a2
0x0000000000407691 : xchg eax, ebp ; ret
0x0000000000402526 : xchg eax, ebp ; ret 0x8445
0x00000000004027f5 : xchg eax, ebp ; ret 0xd284
0x00000000004040d0 : xchg eax, ebp ; ret 0xe280
0x00000000004130cb : xchg eax, ebx ; ret
0x000000000040a68b : xchg eax, ecx ; ret
0x00000000004155e1 : xchg eax, edi ; ret 0xd284
0x000000000040a7db : xchg eax, edx ; ret
0x0000000000411c7e : xchg eax, edx ; ret 0xd284
0x0000000000410012 : xchg eax, esi ; ret
0x0000000000407673 : xchg eax, esp ; ret
0x000000000040e636 : xchg eax, esp ; ret 0x8445
0x0000000000402835 : xchg eax, esp ; ret 0xd284
0x000000000041842d : xchg edi, edi ; call qword ptr [rax]
0x0000000000401ec0 : xlatb ; ret 0xb55e
0x0000000000401d7e : xor cl, al ; adc ch, byte ptr [rdx - 0x77] ; or byte ptr [r15], 0x8f ; ret 6
0x0000000000404c53 : xor eax, 0x25148a55 ; ret 0x61a2
0x0000000000410617 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404d17 : xor eax, 0xc7ffffc7 ; loopne 0x404d7f ; ret
0x00000000004071dd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
