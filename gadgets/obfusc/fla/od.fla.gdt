0x0000000000448958 : adc al, -0x5b ; cld ; call rsp
0x0000000000448c15 : adc al, 0 ; add byte ptr [rsp + rbp*8 - 3], al ; call rsp
0x0000000000408ba2 : adc al, 0x25 ; clc ; mov bl, 0x64 ; add byte ptr [rax - 0x7f], cl ; ret 8
0x00000000004489ac : adc al, 0xb ; add byte ptr [rax], al ; ret
0x0000000000448b95 : adc al, byte ptr [rax] ; add byte ptr [rdx + rbx*4 - 3], dl ; call rsp
0x0000000000445a36 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000445a27 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000040774e : adc byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000445a26 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000407ea9 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc3e : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000042138b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448b55 : adc dword ptr [rax], eax ; add byte ptr [rbx + rdx*4 - 3], dh ; call rsp
0x00000000004454fd : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000041ed69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000448bd5 : adc eax, dword ptr [rax] ; add byte ptr [rcx + rcx*8 - 3], dl ; call rsp
0x0000000000449213 : add ah, ah ; add al, 0 ; add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000448a57 : add ah, ah ; insb byte ptr [rdi], dx ; std ; call rsp
0x0000000000448998 : add al, -0x43 ; cld ; call rsp
0x0000000000449215 : add al, 0 ; add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000449834 : add al, 0xb ; add byte ptr [rax], al ; js 0x4498a5 ; std ; jmp rdx
0x0000000000448e34 : add al, 1 ; add byte ptr [rax], al ; mov al, dh ; sti ; call qword ptr [rax]
0x0000000000446491 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000040eb21 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x447a
0x0000000000420c83 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407ffc : add al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004495b7 : add al, ch ; pop rsi ; std ; jmp qword ptr [rdx]
0x0000000000406117 : add al, ch ; ret
0x0000000000406718 : add al, ch ; ret 0x1bf
0x0000000000406606 : add al, r13b ; ret
0x0000000000412433 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000042107e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000420de6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000040537d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rax]
0x000000000040527a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000406b08 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000444359 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004464ef : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000445304 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004463b5 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000044596d : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000044474c : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000446aef : add bl, dh ; ret
0x0000000000449837 : add byte ptr [rax + 0x64], bh ; std ; jmp rdx
0x000000000040747e : add byte ptr [rax + 1], cl ; ret 0x8b44
0x00000000004489d7 : add byte ptr [rax + rbx*8 - 4], al ; call rsp
0x00000000004495b3 : add byte ptr [rax + rcx + 0x5ee80000], al ; std ; jmp qword ptr [rdx]
0x0000000000449cd7 : add byte ptr [rax - 0x29], ch ; std ; call qword ptr [rdi]
0x0000000000449397 : add byte ptr [rax - 0x42], bh ; cld ; call qword ptr [rsi]
0x0000000000449b37 : add byte ptr [rax - 0x54], ch ; std ; jmp qword ptr [rbx]
0x000000000040eb23 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x447a
0x000000000040cded : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040c271 : add byte ptr [rax - 0x75], cl ; jge 0x40c25b ; call rax
0x000000000041292c : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040a965 : add byte ptr [rax - 0x77], cl ; iretd ; call rax
0x000000000043482b : add byte ptr [rax - 0x77], cl ; ret 0xace8
0x00000000004061b9 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004348cc : add byte ptr [rax - 0x77], cl ; ret 0xbe8
0x0000000000408ba7 : add byte ptr [rax - 0x7f], cl ; ret 8
0x0000000000448956 : add byte ptr [rax], al ; adc al, -0x5b ; cld ; call rsp
0x0000000000448996 : add byte ptr [rax], al ; add al, -0x43 ; cld ; call rsp
0x0000000000449832 : add byte ptr [rax], al ; add al, 0xb ; add byte ptr [rax], al ; js 0x4498a7 ; std ; jmp rdx
0x0000000000448e32 : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; mov al, dh ; sti ; call qword ptr [rax]
0x000000000040c425 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000412431 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000042107c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000420de4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000405278 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000444357 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000446421 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000044596b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004459b5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000446aed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040747c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b44
0x000000000040cdeb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041292a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040a963 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; iretd ; call rax
0x00000000004068fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000446aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409453 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004068ce : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004060c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004005c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407b40 : add byte ptr [rax], al ; add byte ptr [rbx + 0x12db845], cl ; ret 0x479d
0x000000000040791a : add byte ptr [rax], al ; add byte ptr [rbx + 0x2db845], cl ; ret 0x479d
0x00000000004117b5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2d9845], cl ; ret 0x4095
0x0000000000438f03 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000041eaae : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000410b77 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5b2da045], cl ; ret 0x966b
0x0000000000410bb9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5c2da045], cl ; ret 0x966b
0x0000000000409b74 : add byte ptr [rax], al ; add byte ptr [rbx + 0x722da045], cl ; ret
0x0000000000408ad1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x792df445], cl ; ret
0x0000000000408b29 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7d2df445], cl ; ret 0x7a36
0x0000000000422417 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x0000000000415350 : add byte ptr [rax], al ; add byte ptr [rbx - 0x45d257bb], cl ; ret
0x00000000004152c6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x46d257bb], cl ; ret
0x0000000000439979 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004398f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040cbd2 : add byte ptr [rax], al ; add byte ptr [rbx - 0xdd213bb], cl ; ret 0x3d4b
0x0000000000415ba5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000414fb3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000405fc7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d961 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004070db : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000437c14 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040736e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000412c65 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004169bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040728b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004068d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041062d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004051a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000041699f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004060c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000437fc6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043923d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000449272 : add byte ptr [rax], al ; add eax, 0xac080000 ; cld ; call qword ptr [rbx]
0x000000000041ed6b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e7d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088af : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042138d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ed27 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401533 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004488d6 : add byte ptr [rax], al ; and al, 0x43 ; cld ; call rsp
0x0000000000448f52 : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cld ; jmp rsi
0x00000000004495b6 : add byte ptr [rax], al ; call 0x23449320
0x0000000000449dd6 : add byte ptr [rax], al ; enter -0x10a, -1 ; ret 0
0x00000000004489d6 : add byte ptr [rax], al ; fdivr st(4) ; call rsp
0x0000000000448a56 : add byte ptr [rax], al ; in al, 0x6c ; std ; call rsp
0x0000000000449912 : add byte ptr [rax], al ; in al, 0xb ; add byte ptr [rax], al ; mov byte ptr [rbx - 3], bh ; call rdx
0x0000000000448c16 : add byte ptr [rax], al ; in al, dx ; std ; call rsp
0x0000000000448856 : add byte ptr [rax], al ; je 0x4487f6 ; sti ; call rsp
0x0000000000448916 : add byte ptr [rax], al ; je 0x4488a5 ; cld ; call rsp
0x0000000000448b56 : add byte ptr [rax], al ; je 0x448af2 ; std ; call rsp
0x0000000000401749 : add byte ptr [rax], al ; jmp 0x401549
0x00000000004093ef : add byte ptr [rax], al ; jmp 0x40985a
0x0000000000439239 : add byte ptr [rax], al ; jmp 0x439248
0x0000000000439ea9 : add byte ptr [rax], al ; jmp 0x439eb8
0x0000000000449396 : add byte ptr [rax], al ; js 0x44935d ; cld ; call qword ptr [rsi]
0x0000000000449836 : add byte ptr [rax], al ; js 0x4498a3 ; std ; jmp rdx
0x0000000000448e36 : add byte ptr [rax], al ; mov al, dh ; sti ; call qword ptr [rax]
0x0000000000449916 : add byte ptr [rax], al ; mov byte ptr [rbx - 3], bh ; call rdx
0x0000000000448ef6 : add byte ptr [rax], al ; mov dh, bh ; sti ; call rsi
0x0000000000427451 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004248b7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000043a0b7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043a666 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414b49 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000416289 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043a31d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000040cdec : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a964 : add byte ptr [rax], al ; mov rdi, rcx ; call rax
0x00000000004492d2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xb2280000 ; cld ; call qword ptr [rsi]
0x0000000000448ad6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x448add ; call rsp
0x0000000000407750 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041eaaf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c472 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041e788 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000448bd6 : add byte ptr [rax], al ; push rsp ; leave ; std ; call rsp
0x00000000004005c6 : add byte ptr [rax], al ; ret
0x0000000000448f56 : add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cld ; jmp rsi
0x0000000000449cb6 : add byte ptr [rax], al ; test al, -0x3c ; std ; jmp rax
0x00000000004495b2 : add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x23449324
0x0000000000448a16 : add byte ptr [rax], al ; test byte ptr [rdi - 3], bl ; call rsp
0x0000000000449cb2 : add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rax], al ; test al, -0x3c ; std ; jmp rax
0x00000000004492b2 : add byte ptr [rax], al ; test byte ptr [rip - 0x4fc80000], al ; cld ; call qword ptr [rax]
0x0000000000448a96 : add byte ptr [rax], al ; xchg eax, esp ; outsd dx, dword ptr [rsi] ; std ; call rsp
0x00000000004492b7 : add byte ptr [rax], bh ; mov al, -4 ; call qword ptr [rax]
0x00000000004492d7 : add byte ptr [rax], ch ; mov dl, -4 ; call qword ptr [rsi]
0x0000000000449217 : add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000449277 : add byte ptr [rax], cl ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rbx]
0x0000000000449337 : add byte ptr [rax], cl ; mov ch, -4 ; call qword ptr [rsi]
0x00000000004492d3 : add byte ptr [rbp + rax - 0x4dd80000], ah ; cld ; call qword ptr [rsi]
0x00000000004492b3 : add byte ptr [rbp + rax - 0x4fc80000], al ; cld ; call qword ptr [rax]
0x0000000000448897 : add byte ptr [rbp + rax - 4], ah ; call rsp
0x0000000000449273 : add byte ptr [rbp + rax], al ; add byte ptr [rax], cl ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rbx]
0x0000000000448c57 : add byte ptr [rbp + rcx - 1], dl ; call rsp
0x0000000000407b42 : add byte ptr [rbx + 0x12db845], cl ; ret 0x479d
0x000000000040791c : add byte ptr [rbx + 0x2db845], cl ; ret 0x479d
0x00000000004117b7 : add byte ptr [rbx + 0x3e2d9845], cl ; ret 0x4095
0x0000000000438f05 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000041eab0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c473 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b965 : add byte ptr [rbx + 0x422db845], cl ; call 0x45ca7c1c
0x000000000040b9ec : add byte ptr [rbx + 0x432db845], cl ; call 0xffffffff85ca7ca3
0x0000000000410b79 : add byte ptr [rbx + 0x5b2da045], cl ; ret 0x966b
0x0000000000410bbb : add byte ptr [rbx + 0x5c2da045], cl ; ret 0x966b
0x000000000041e789 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000409b2b : add byte ptr [rbx + 0x712da045], cl ; ret
0x0000000000409b76 : add byte ptr [rbx + 0x722da045], cl ; ret
0x0000000000408ad3 : add byte ptr [rbx + 0x792df445], cl ; ret
0x00000000004089f7 : add byte ptr [rbx + 0x7c2df445], cl ; ret 0x7a36
0x0000000000408b2b : add byte ptr [rbx + 0x7d2df445], cl ; ret 0x7a36
0x00000000004488d7 : add byte ptr [rbx + rax*2], ah ; cld ; call rsp
0x0000000000449833 : add byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; js 0x4498a6 ; std ; jmp rdx
0x0000000000448b57 : add byte ptr [rbx + rdx*4 - 3], dh ; call rsp
0x0000000000422419 : add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x0000000000405f56 : add byte ptr [rbx - 0x41f0ff9c], dh ; or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x0000000000415352 : add byte ptr [rbx - 0x45d257bb], cl ; ret
0x00000000004152c8 : add byte ptr [rbx - 0x46d257bb], cl ; ret
0x000000000043997b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004398f7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040c71e : add byte ptr [rbx - 0x76b7778b], cl ; ret 0xb0
0x00000000004061b6 : add byte ptr [rbx - 0x76b7ff9c], dh ; ret 0xb0
0x000000000040770f : add byte ptr [rbx - 0x80f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040cbd4 : add byte ptr [rbx - 0xdd213bb], cl ; ret 0x3d4b
0x0000000000415ba7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000414fb5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000405fc9 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000431540 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000041d963 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000448e33 : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; mov al, dh ; sti ; call qword ptr [rax]
0x00000000004496d3 : add byte ptr [rcx + rcx + 0x60b80000], ah ; std ; jmp qword ptr [rax]
0x0000000000448bd7 : add byte ptr [rcx + rcx*8 - 3], dl ; call rsp
0x00000000004210ce : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x0000000000449cd3 : add byte ptr [rdi + rcx - 0x28980000], ah ; std ; call qword ptr [rdi]
0x0000000000449cb3 : add byte ptr [rdi + rcx - 0x3b580000], al ; std ; jmp rax
0x0000000000448c97 : add byte ptr [rdi + rdx - 1], ah ; call rsp
0x0000000000448857 : add byte ptr [rdi + rdx*4 - 5], dh ; call rsp
0x00000000004070dd : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000415611 : add byte ptr [rdi], cl ; les r8d, ptr cs:[r9 + 0xf] ; xchg eax, edi ; ret 0x8445
0x0000000000437c16 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407370 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000412c67 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004169bf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040728d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004068d2 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041062f : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004051aa : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004169a1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004060c6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000437fc8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000448f53 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cld ; jmp rsi
0x0000000000448b97 : add byte ptr [rdx + rbx*4 - 3], dl ; call rsp
0x0000000000448917 : add byte ptr [rsi + rax*4 - 4], dh ; call rsp
0x0000000000449393 : add byte ptr [rsi + rax], ah ; add byte ptr [rax - 0x42], bh ; cld ; call qword ptr [rsi]
0x0000000000448c17 : add byte ptr [rsp + rbp*8 - 3], al ; call rsp
0x000000000040c270 : add byte ptr fs:[rax - 0x75], cl ; jge 0x40c25c ; call rax
0x00000000004061b8 : add byte ptr fs:[rax - 0x77], cl ; ret 0xb0
0x0000000000408ba6 : add byte ptr fs:[rax - 0x7f], cl ; ret 8
0x0000000000409452 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004068cd : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004060c1 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c71d : add byte ptr fs:[rbx - 0x76b7778b], cl ; ret 0xb0
0x0000000000407ffe : add cl, ch ; ret
0x000000000043923f : add cl, ch ; ret 0
0x000000000040a341 : add cl, ch ; ret 1
0x0000000000408b86 : add dword ptr [rax + 0x45c7ff45], ecx ; clc ; jns 0x408bce ; ret
0x0000000000408d4c : add dword ptr [rax + 0x45c7ff45], ecx ; clc ; jns 0x408d94 ; ret
0x000000000041ed25 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a962 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rcx ; call rax
0x000000000040c471 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041f44a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004089f5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x7c2df445], cl ; ret 0x7a36
0x000000000040cccc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438f7b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410324 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x2498ce ; add ebx, esi ; ret
0x000000000042419f : add eax, 0x53b80000 ; jrcxz 0x42420f ; ret 0x8fb9
0x000000000043a664 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x00000000004248b5 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000448855 : add eax, 0x97740000 ; sti ; call rsp
0x0000000000449275 : add eax, 0xac080000 ; cld ; call qword ptr [rbx]
0x00000000004492b5 : add eax, 0xb0380000 ; cld ; call qword ptr [rax]
0x00000000004492d5 : add eax, 0xb2280000 ; cld ; call qword ptr [rsi]
0x0000000000444356 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000401dab : add esp, 0x10 ; pop rbp ; ret
0x00000000004210cc : add esp, 0x100 ; pop rbp ; ret
0x0000000000407ea7 : add esp, 0x110 ; pop rbp ; ret
0x000000000041f447 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000415c6d : add esp, 0x120 ; pop rbp ; ret
0x00000000004129c0 : add esp, 0x130 ; pop rbp ; ret
0x000000000040b859 : add esp, 0x160 ; pop rbp ; ret
0x0000000000421dd9 : add esp, 0x190 ; pop rbp ; ret
0x000000000042123c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041e7d3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000409849 : add esp, 0x21b0 ; pop rbp ; ret
0x000000000040ad71 : add esp, 0x270 ; pop rbp ; ret
0x0000000000427433 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004088b2 : add esp, 0x30 ; pop rbp ; ret
0x0000000000424785 : add esp, 0x380 ; pop rbp ; ret
0x0000000000414cb7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401f82 : add esp, 0x50 ; pop rbp ; ret
0x0000000000410117 : add esp, 0x580 ; pop rbp ; ret
0x0000000000414836 : add esp, 0x60 ; pop rbp ; ret
0x0000000000401d64 : add esp, 0x70 ; pop rbp ; ret
0x000000000043e313 : add esp, 0x7f8 ; pop rbp ; ret
0x0000000000408d65 : add esp, 0x80 ; pop rbp ; ret
0x000000000040774c : add esp, 0x810 ; pop rbp ; ret
0x00000000004257dc : add esp, 0x890 ; pop rbp ; ret
0x00000000004087db : add esp, 0x90 ; pop rbp ; ret
0x0000000000414186 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004083bb : add esp, 0xb0 ; pop rbp ; ret
0x00000000004106fd : add esp, 0xc0 ; pop rbp ; ret
0x000000000041e784 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000446a6e : add esp, 0xd70 ; pop rbp ; ret
0x000000000041212b : add esp, 0xe0 ; pop rbp ; ret
0x0000000000412571 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401536 : add esp, 8 ; ret
0x00000000004089f4 : add qword ptr [rax], rax ; add byte ptr [rbx + 0x7c2df445], cl ; ret 0x7a36
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000401daa : add rsp, 0x10 ; pop rbp ; ret
0x00000000004210cb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000407ea6 : add rsp, 0x110 ; pop rbp ; ret
0x000000000041f446 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000415c6c : add rsp, 0x120 ; pop rbp ; ret
0x00000000004129bf : add rsp, 0x130 ; pop rbp ; ret
0x000000000040b858 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000421dd8 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042123b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041e7d2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000409848 : add rsp, 0x21b0 ; pop rbp ; ret
0x000000000040ad70 : add rsp, 0x270 ; pop rbp ; ret
0x0000000000427432 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004088b1 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000424784 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000414cb6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401f81 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000410116 : add rsp, 0x580 ; pop rbp ; ret
0x0000000000414835 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000401d63 : add rsp, 0x70 ; pop rbp ; ret
0x000000000043e312 : add rsp, 0x7f8 ; pop rbp ; ret
0x0000000000408d64 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040774b : add rsp, 0x810 ; pop rbp ; ret
0x00000000004257db : add rsp, 0x890 ; pop rbp ; ret
0x00000000004087da : add rsp, 0x90 ; pop rbp ; ret
0x0000000000414185 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004083ba : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004106fc : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041e783 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000446a6d : add rsp, 0xd70 ; pop rbp ; ret
0x000000000041212a : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000412570 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401535 : add rsp, 8 ; ret
0x0000000000401a47 : and al, 0 ; add ebx, esi ; ret
0x00000000004488d8 : and al, 0x43 ; cld ; call rsp
0x0000000000422dcb : and al, 0xffffffffffffffac ; ret 0x89cc
0x0000000000424364 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000410323 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000448f54 : and al, 2 ; add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cld ; jmp rsi
0x000000000042744f : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000415c6f : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c470 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c26d : and eax, 0x64b3b0 ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000041450f : and eax, 0x64b430 ; pop rbp ; ret
0x0000000000414533 : and eax, 0x64b438 ; pop rbp ; ret
0x000000000040537b : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rax]
0x000000000044474a : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000408b97 : and esp, dword ptr [rbp + 0x7db9aeda] ; ret 0x7a36
0x00000000004495b8 : call 0x2344931e
0x000000000040bbbe : call 0x242a7e69
0x000000000040bbbd : call 0x242a7e6a
0x000000000040bcbc : call 0x262a7f67
0x000000000040bcbb : call 0x262a7f68
0x000000000040fc96 : call 0x401607
0x0000000000415b88 : call 0x4016c6
0x000000000042566a : call 0x401952
0x000000000040b96b : call 0x45ca7c16
0x000000000040b96a : call 0x45ca7c17
0x000000000040b9f2 : call 0xffffffff85ca7c9d
0x000000000040b9f1 : call 0xffffffff85ca7c9e
0x000000000043cbcd : call 0xffffffffc2838549
0x0000000000425358 : call 0xffffffffd1425357
0x0000000000408827 : call 0xffffffffd7804aba
0x0000000000408826 : call 0xffffffffd7804abb
0x000000000040953b : call 0xffffffffdf7d1b0d
0x000000000040953a : call 0xffffffffdf7d1b0e
0x000000000041e7c9 : call 0xffffffffe9047119
0x000000000041e7c8 : call 0xffffffffe904711a
0x000000000041a20d : call 0xfffffffff73a27a4
0x0000000000425669 : call 0xfffffffffe053859
0x0000000000425668 : call 0xfffffffffe05385a
0x0000000000426ef5 : call 0xffffffffff46f4ca
0x000000000041cd39 : call 0xffffffffff56530b
0x000000000041cd38 : call 0xffffffffff56530c
0x000000000041cd39 : call 0xffffffffff56530d
0x000000000041cd38 : call 0xffffffffff56530e
0x0000000000446ac9 : call qword ptr [r12 + rbx*8]
0x0000000000405383 : call qword ptr [rax]
0x000000000040eb52 : call qword ptr [rbp + rbx*2 - 0x3c16ffd1]
0x0000000000445ef3 : call qword ptr [rbx]
0x0000000000405398 : call qword ptr [rcx]
0x0000000000431b35 : call qword ptr [rdi]
0x0000000000412439 : call qword ptr [rdx]
0x000000000041bc8f : call qword ptr [rsi]
0x0000000000446aca : call qword ptr [rsp + rbx*8]
0x000000000040c358 : call r10
0x0000000000401a6d : call rax
0x0000000000409541 : call rbx
0x00000000004327b8 : call rcx
0x000000000040b7c8 : call rdx
0x0000000000421084 : call rsi
0x0000000000409649 : call rsp
0x000000000040f050 : cdq ; cmp r10b, byte ptr [rdi - 0x47] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004398fc : cdq ; ret
0x0000000000425d42 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000424ca0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004144f1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000413ce3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x0000000000408b8c : clc ; jns 0x408bc8 ; ret
0x0000000000408b8b : clc ; jns 0x408bc9 ; ret
0x0000000000408d52 : clc ; jns 0x408d8e ; ret
0x0000000000408d51 : clc ; jns 0x408d8f ; ret
0x0000000000408ba4 : clc ; mov bl, 0x64 ; add byte ptr [rax - 0x7f], cl ; ret 8
0x0000000000407eca : clc ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040cdf1 : clc ; pop rbp ; ret
0x0000000000401dd7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044921a : cld ; call qword ptr [rax]
0x000000000044927a : cld ; call qword ptr [rbx]
0x00000000004492da : cld ; call qword ptr [rsi]
0x000000000044889a : cld ; call rsp
0x0000000000448f5a : cld ; jmp rsi
0x0000000000448912 : cld ; push qword ptr [rax + rcx - 0x798c0000] ; cld ; call rsp
0x00000000004489d2 : cld ; push qword ptr [rbx + rcx - 0x27bc0000] ; cld ; call rsp
0x0000000000448952 : cld ; push qword ptr [rcx + rcx - 0x5aec0000] ; cld ; call rsp
0x00000000004488d2 : cld ; push qword ptr [rdi + rax + 0x43240000] ; cld ; call rsp
0x0000000000448992 : cld ; push qword ptr [rdx + rcx - 0x42fc0000] ; cld ; call rsp
0x0000000000448892 : cld ; push qword ptr [rsi + rax + 0x5640000] ; cld ; call rsp
0x0000000000448a12 : cld ; push qword ptr [rsp + rcx + 0x5f840000] ; std ; call rsp
0x000000000041c98d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000408887 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040edcc : cli ; xor eax, 0x4b9b9e8 ; ret 0x3386
0x000000000040b5a7 : cmc ; shr al, 1 ; ret 2
0x00000000004264fd : cmp al, -0x2a ; ret
0x000000000042c6b4 : cmp al, -0x2e ; ret
0x0000000000406602 : cmp al, 0x25 ; test dword ptr [rax + 0x44], edi ; add al, ch ; ret
0x00000000004458d8 : cmp dh, -1 ; call qword ptr [rax]
0x00000000004450a3 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000040f052 : cmp dl, byte ptr [rdi - 0x47] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000445a35 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x000000000043ff0e : cmp esi, dword ptr [rdi] ; ret 0x8589
0x00000000004448d4 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000040f051 : cmp r10b, byte ptr [rdi - 0x47] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042c707 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x0000000000403f3b : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; ret
0x000000000041ec64 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000401a46 : cwde ; and al, 0 ; add ebx, esi ; ret
0x00000000004393fb : cwde ; js 0x4393a5 ; ret
0x0000000000439442 : cwde ; js 0x4393ec ; ret
0x000000000043947c : cwde ; js 0x439426 ; ret
0x000000000043c76d : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000425665 : dec dword ptr [rax - 0x75] ; call 0xfffffffffe05385d
0x0000000000438e98 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043369a : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407715 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f2a6 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000431444 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000443387 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000041cb32 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041ce3d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000043d705 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000044594c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004450a6 : dec dword ptr [rcx] ; ret 0x9589
0x000000000041e344 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040bea7 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffb], ch ; ret 1
0x0000000000413126 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffb], dh ; ret 1
0x000000000042bfd8 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x000000000041fdc3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000428084 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x0000000000427ccc : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x000000000044655e : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x00000000004315a5 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000413b8a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000449dd8 : enter -0x10a, -1 ; ret 0
0x0000000000426cab : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040bc4c : enter 0xf41, -0x6c ; ret 0x8445
0x0000000000415eed : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004252c4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415b41 : fadd dword ptr [rcx + 0xf] ; xchg eax, edi ; ret 0x8445
0x000000000041fc79 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004489d9 : fdivr st(4) ; call rsp
0x00000000004254d3 : fild qword ptr [rbx + 0x68] ; ret 0x8589
0x0000000000425606 : fild qword ptr [rbx + 0x68] ; ret 0x89b9
0x000000000042547f : fisubr word ptr [rbx + 0x68] ; ret 0x8589
0x000000000040bc3a : fmul dword ptr [r8 - 0x75] ; adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000421984 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000425354 : fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x000000000040bc3b : fmul dword ptr [rax - 0x75] ; adc dword ptr [rax + 1], ecx ; ret 0x8948
0x00000000004331e0 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x0000000000415992 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x0000000000446acc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401da9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409978 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424dfc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004257da : hlt ; add rsp, 0x890 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x64b2c0 ; jmp rax
0x0000000000437f2d : idiv bh ; call qword ptr [rcx]
0x0000000000431b33 : idiv bh ; call qword ptr [rdi]
0x000000000043233b : idiv bh ; call qword ptr [rdx]
0x00000000004327b6 : idiv bh ; call rcx
0x0000000000437c10 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000437d46 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000437f46 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434fd2 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434e60 : idiv bh ; jmp qword ptr [rax]
0x00000000004380b1 : idiv bh ; jmp qword ptr [rcx]
0x0000000000433b4c : idiv bh ; jmp qword ptr [rdi]
0x00000000004345e7 : idiv bh ; jmp qword ptr [rsi]
0x00000000004338e1 : idiv bh ; jmp rbx
0x000000000043280f : idiv bh ; jmp rdi
0x0000000000431476 : idiv bh ; jmp rdx
0x000000000043508a : idiv bh ; jmp rsp
0x0000000000425359 : idiv edi ; call rax
0x0000000000425663 : idiv edi ; dec dword ptr [rax - 0x75] ; call 0xfffffffffe05385f
0x0000000000433698 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407713 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000433086 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433d57 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000433877 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043433f : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042567f : idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000042a7a3 : imul al ; ret 0x893f
0x000000000043838c : imul eax ; ret 0x483f
0x000000000042feeb : imul eax ; ret 0x893f
0x000000000042071e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000041c2e9 : in al, -0x7f ; ret 0xff9f
0x000000000041c4cf : in al, -0x7f ; ret 0xffbf
0x000000000041c575 : in al, -0x7f ; ret 0xffc5
0x000000000041c5a3 : in al, -0x7f ; ret 0xffd5
0x000000000041c671 : in al, -0x7f ; ret 0xffd8
0x000000000041c807 : in al, -0x7f ; ret 0xffe0
0x0000000000421f28 : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000448a58 : in al, 0x6c ; std ; call rsp
0x0000000000449914 : in al, 0xb ; add byte ptr [rax], al ; mov byte ptr [rbx - 3], bh ; call rdx
0x000000000042498f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042515a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041639a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004248bb : in al, dx ; pop rbp ; ret
0x0000000000448c19 : in al, dx ; std ; call rsp
0x0000000000439afb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403ee8 : in eax, dx ; ret
0x0000000000408885 : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000415ba3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041d95f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000437c12 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000433088 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004100bd : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431812 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f864 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004096aa : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000425681 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000405367 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000408824 : inc edi ; call 0xffffffffd7804abd
0x0000000000408b89 : inc edi ; clc ; jns 0x408bcb ; ret
0x0000000000408d4f : inc edi ; clc ; jns 0x408d91 ; ret
0x000000000041f418 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000443c93 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000446172 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000445282 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000443471 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x00000000004444d3 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000408823 : inc r15 ; call 0xffffffffd7804abe
0x0000000000408b88 : inc r15d ; clc ; jns 0x408bcc ; ret
0x0000000000408d4e : inc r15d ; clc ; jns 0x408d92 ; ret
0x0000000000448a59 : insb byte ptr [rdi], dx ; std ; call rsp
0x0000000000418abf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041c0ff : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000040a968 : iretd ; call rax
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x64b2c0 ; jmp rax
0x000000000040b5a6 : je 0x40b5a1 ; shr al, 1 ; ret 2
0x0000000000448858 : je 0x4487f4 ; sti ; call rsp
0x0000000000448918 : je 0x4488a3 ; cld ; call rsp
0x0000000000448b58 : je 0x448af0 ; std ; call rsp
0x000000000042577f : jg 0x425793 ; xchg eax, edi ; ret 0xd284
0x000000000043809a : jg 0x4380ae ; xchg eax, esp ; ret 0xd284
0x000000000043a613 : jg 0x43a61a ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407ec9 : jge 0x407ec9 ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040c274 : jge 0x40c258 ; call rax
0x0000000000420238 : jge 0x42024f ; ret
0x0000000000420723 : jge 0x42073a ; ret
0x000000000043a069 : jge 0x43a063 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042010c : jl 0x420123 ; ret
0x000000000040174b : jmp 0x401547
0x0000000000405645 : jmp 0x40775a
0x00000000004093f1 : jmp 0x409858
0x000000000040bb76 : jmp 0x40bcf1
0x0000000000411608 : jmp 0x40d6d84c
0x000000000041351e : jmp 0x41373f
0x0000000000415bb9 : jmp 0x415ca5
0x000000000041baad : jmp 0x41e793
0x000000000041e541 : jmp 0x41e795
0x000000000042071d : jmp 0x420c95
0x0000000000424481 : jmp 0x424793
0x0000000000436025 : jmp 0x438ea4
0x0000000000431c81 : jmp 0x438ea5
0x0000000000433fdb : jmp 0x438ea6
0x000000000043923b : jmp 0x439246
0x0000000000439eab : jmp 0x439eb6
0x000000000043cac3 : jmp 0x43e321
0x000000000044589f : jmp 0x446a7c
0x0000000000445ff5 : jmp 0x446a7d
0x00000000004463c0 : jmp 0x446a7e
0x000000000043ddf1 : jmp 0xffffffff8cfda242
0x0000000000425d7e : jmp 0xffffffffb704614a
0x00000000004393fa : jmp 0xffffffffc3e80c9b
0x0000000000408832 : jmp 0xffffffffd7804ac5
0x0000000000405280 : jmp qword ptr [rax]
0x000000000041cd3f : jmp qword ptr [rbx]
0x000000000041e710 : jmp qword ptr [rcx]
0x0000000000433b4e : jmp qword ptr [rdi]
0x000000000041ec65 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000406b0e : jmp qword ptr [rdx]
0x000000000041cccf : jmp qword ptr [rsi]
0x00000000004019e7 : jmp rax
0x000000000041d862 : jmp rbx
0x00000000004128ca : jmp rcx
0x000000000041defe : jmp rdi
0x0000000000401a27 : jmp rdx
0x0000000000444752 : jmp rsi
0x000000000041d8f9 : jmp rsp
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x000000000041f416 : jne 0x41f41f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000448ad9 : jno 0x448ada ; call rsp
0x0000000000449919 : jnp 0x44991a ; call rdx
0x0000000000408ad8 : jns 0x408b12 ; ret
0x0000000000408b8d : jns 0x408bc7 ; ret
0x0000000000408d53 : jns 0x408d8d ; ret
0x0000000000401d66 : jo 0x401dc7 ; ret
0x000000000040ad73 : jo 0x40ad7c ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cb2a : jo 0x40cb8b ; ret
0x00000000004142dc : jo 0x41433d ; ret
0x000000000041f631 : jo 0x41f692 ; ret
0x000000000041f754 : jo 0x41f7b5 ; ret
0x000000000041f88e : jo 0x41f8ef ; ret
0x0000000000421a2c : jo 0x421a8d ; ret
0x0000000000424ca4 : jo 0x424d05 ; ret
0x0000000000446a70 : jo 0x446a84 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422c98 : jrcxz 0x422cfe ; ret 0x8589
0x0000000000422cec : jrcxz 0x422d52 ; ret 0x8589
0x00000000004241a4 : jrcxz 0x42420a ; ret 0x8fb9
0x00000000004243cf : jrcxz 0x424435 ; ret 0x8fb9
0x0000000000406605 : js 0x40664f ; add al, ch ; ret
0x000000000041e786 : js 0x41e79a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004393fc : js 0x4393a4 ; ret
0x0000000000439443 : js 0x4393eb ; ret
0x000000000043947d : js 0x439425 ; ret
0x0000000000449398 : js 0x44935b ; cld ; call qword ptr [rsi]
0x0000000000449838 : js 0x4498a1 ; std ; jmp rdx
0x0000000000403724 : lahf ; ret 0x896e
0x00000000004069ca : lahf ; ret 0xb96e
0x00000000004070df : lahf ; ret 0xd284
0x00000000004448d2 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000448bd9 : leave ; std ; call rsp
0x0000000000415614 : les r8d, ptr [r9 + 0xf] ; xchg eax, edi ; ret 0x8445
0x0000000000415613 : les r8d, ptr cs:[r9 + 0xf] ; xchg eax, edi ; ret 0x8445
0x0000000000449279 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rbx]
0x00000000004409c6 : lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000040a33e : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000422d78 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x0000000000424365 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000449b39 : lodsb al, byte ptr [rsi] ; std ; jmp qword ptr [rbx]
0x0000000000405392 : loopne 0x405361 ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rcx]
0x0000000000405391 : loopne 0x405362 ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rcx]
0x000000000040ca44 : loopne 0x40ca4d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041212d : loopne 0x412134 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413bbc : loopne 0x413bc5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414033 : loopne 0x41403c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041675e : loopne 0x416767 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421770 : loopne 0x421779 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421b7c : loopne 0x421bcc ; add esp, 0x40 ; pop rbp ; ret
0x0000000000421b7b : loopne 0x421bcd ; add esp, 0x40 ; pop rbp ; ret
0x00000000004450a0 : loopne 0x445035 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000040a8a1 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000448b54 : mov ah, 0x11 ; add byte ptr [rax], al ; je 0x448af4 ; std ; call rsp
0x0000000000448bd4 : mov ah, 0x13 ; add byte ptr [rax], al ; push rsp ; leave ; std ; call rsp
0x0000000000448c14 : mov ah, 0x14 ; add byte ptr [rax], al ; in al, dx ; std ; call rsp
0x000000000042c59c : mov ah, 0x47 ; ret 0x8589
0x0000000000431f74 : mov ah, 0x47 ; ret 0x88b9
0x0000000000401f80 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004156f9 : mov ah, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000409451 : mov ah, 0x64 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408cc4 : mov ah, 0x64 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c71c : mov ah, 0x64 ; add byte ptr [rbx - 0x76b7778b], cl ; ret 0xb0
0x0000000000448994 : mov ah, 0xa ; add byte ptr [rax], al ; add al, -0x43 ; cld ; call rsp
0x00000000004489d4 : mov ah, 0xb ; add byte ptr [rax], al ; fdivr st(4) ; call rsp
0x0000000000448a14 : mov ah, 0xc ; add byte ptr [rax], al ; test byte ptr [rdi - 3], bl ; call rsp
0x0000000000448a54 : mov ah, 0xd ; add byte ptr [rax], al ; in al, 0x6c ; std ; call rsp
0x0000000000448a94 : mov ah, 0xe ; add byte ptr [rax], al ; xchg eax, esp ; outsd dx, dword ptr [rsi] ; std ; call rsp
0x0000000000448ad4 : mov ah, 0xf ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x448adf ; call rsp
0x0000000000448854 : mov ah, 5 ; add byte ptr [rax], al ; je 0x4487f8 ; sti ; call rsp
0x00000000004488d4 : mov ah, 7 ; add byte ptr [rax], al ; and al, 0x43 ; cld ; call rsp
0x0000000000448914 : mov ah, 8 ; add byte ptr [rax], al ; je 0x4488a7 ; cld ; call rsp
0x0000000000448954 : mov ah, 9 ; add byte ptr [rax], al ; adc al, -0x5b ; cld ; call rsp
0x000000000040a8b0 : mov al, -0x17 ; ret
0x0000000000444ca9 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000040c26e : mov al, -0x4d ; add byte ptr fs:[rax - 0x75], cl ; jge 0x40c25e ; call rax
0x000000000041250f : mov al, -0x77 ; ret 0xc189
0x00000000004492b9 : mov al, -4 ; call qword ptr [rax]
0x0000000000407289 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426eca : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004083bd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040984b : mov al, 0x21 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041691b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041062b : mov al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000410da0 : mov al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004114e0 : mov al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043914d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004392fd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000439af9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410320 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000448e38 : mov al, dh ; sti ; call qword ptr [rax]
0x0000000000415b86 : mov al, dl ; call 0x4016c8
0x0000000000415b85 : mov al, r10b ; call 0x4016c9
0x0000000000406115 : mov bl, 0x64 ; add al, ch ; ret
0x0000000000406716 : mov bl, 0x64 ; add al, ch ; ret 0x1bf
0x000000000040c26f : mov bl, 0x64 ; add byte ptr [rax - 0x75], cl ; jge 0x40c25d ; call rax
0x00000000004061b7 : mov bl, 0x64 ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000408ba5 : mov bl, 0x64 ; add byte ptr [rax - 0x7f], cl ; ret 8
0x00000000004068cc : mov bl, 0x64 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004060c0 : mov bl, 0x64 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414531 : mov byte ptr [0x64b438], al ; pop rbp ; ret
0x000000000040c721 : mov byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041e2d8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407ecb : mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x0000000000449918 : mov byte ptr [rbx - 3], bh ; call rdx
0x0000000000401a43 : mov byte ptr [rip + 0x2498ce], 1 ; ret
0x0000000000407711 : mov ch, -0x10 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040654f : mov ch, -0x17 ; call qword ptr [rcx]
0x0000000000449339 : mov ch, -4 ; call qword ptr [rsi]
0x000000000040ccce : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438f7d : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410326 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000448ef8 : mov dh, bh ; sti ; call rsi
0x0000000000439c25 : mov dl, -0x47 ; ret
0x00000000004492d9 : mov dl, -4 ; call qword ptr [rsi]
0x000000000041450d : mov dword ptr [0x64b430], edi ; pop rbp ; ret
0x00000000004165d7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041639b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041650f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040c352 : mov dword ptr [rbp - 0x118], eax ; call r10
0x000000000040b7c2 : mov dword ptr [rbp - 0x160], ecx ; call rdx
0x0000000000401f7e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041351b : mov dword ptr [rbp - 0x60], eax ; jmp 0x413742
0x000000000040cb24 : mov dword ptr [rbp - 0x70], eax ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042447e : mov dword ptr [rbp - 0x7c], eax ; jmp 0x424796
0x0000000000401da7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401dd5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ec8 : mov dword ptr [rbp - 8], edi ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000041678d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427453 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040b968 : mov eax, 0xa4e8422d ; ret 0x4589
0x000000000040b9ef : mov eax, 0xa4e8432d ; ret 0x8589
0x000000000041628f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000421abb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414cb3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042179f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004142d6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414b4c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042498d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004248b9 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000421bbe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421490 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004165da : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000421f26 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421b7a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004221ea : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416184 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041628c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416395 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000416511 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043a320 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041f62b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409976 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424dfa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425d40 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000424c9e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040cdef : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cd2d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000433fdd : mov ebp, 0xb800004e ; push rcx ; ret
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x0000000000416398 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000425667 : mov ecx, dword ptr [rbp - 0x18] ; call 0x401955
0x000000000043c8f1 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000401a65 : mov edi, 0x64ae20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x64b2c0 ; jmp rax
0x0000000000401a22 : mov edi, 0x64b2c0 ; jmp rdx
0x000000000040c273 : mov edi, dword ptr [rbp - 0x20] ; call rax
0x0000000000448b19 : mov edi, ebp ; call rsp
0x000000000040a967 : mov edi, ecx ; call rax
0x0000000000446ac7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000446ac6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000043c641 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x0000000000401a20 : mov esi, eax ; mov edi, 0x64b2c0 ; jmp rdx
0x000000000043c76e : mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000043c697 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x0000000000438e9a : mov esp, ebp ; pop rbp ; ret
0x000000000041450c : mov qword ptr [0x64b430], rdi ; pop rbp ; ret
0x0000000000407ec7 : mov qword ptr [rbp - 8], rdi ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000041678c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401f7f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a8af : mov r8b, -0x17 ; ret
0x0000000000444ca8 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000041250e : mov r8b, -0x77 ; ret 0xc189
0x000000000040b967 : mov r8d, 0xa4e8422d ; ret 0x4589
0x000000000040b9ee : mov r8d, 0xa4e8432d ; ret 0x8589
0x0000000000421aba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414cb2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042179e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004142d5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414b4b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000421bbd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042148f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421b79 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416183 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041628b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043a31f : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041f62a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040cdee : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cd2c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000425666 : mov rcx, qword ptr [rbp - 0x18] ; call 0x401956
0x000000000040c272 : mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000040a966 : mov rdi, rcx ; call rax
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x64b2c0 ; jmp rdx
0x0000000000438e99 : mov rsp, rbp ; pop rbp ; ret
0x000000000041f41a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041f41b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000405fc5 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004069c4 : mov word ptr [rip + 0x51b80000], cs ; lahf ; ret 0xb96e
0x000000000041cb6c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000439e9e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004492d4 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xb2280000 ; cld ; call qword ptr [rsi]
0x000000000042071c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x420c96
0x0000000000448ad8 : movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x448adb ; call rsp
0x000000000040e11c : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040bbbf : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x23e9
0x000000000040bcbd : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x25e9
0x000000000040b96c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4589
0x000000000040b9f3 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8589
0x0000000000449219 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000448959 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rsp
0x000000000042c6b3 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x0000000000403ee7 : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; ret
0x000000000042c67d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000439089 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cccd : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438f7c : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410325 : movzx eax, al ; pop rbp ; ret
0x000000000040cb26 : nop ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000446ae8 : nop dword ptr [rax + rax] ; ret
0x0000000000406b06 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000041e787 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004061b4 : or al, 0x25 ; add byte ptr [rbx - 0x76b7ff9c], dh ; ret 0xb0
0x000000000040eb26 : or al, 0x25 ; ret 0x447a
0x0000000000406d0f : or al, byte ptr [r8] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000406d10 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004495b5 : or byte ptr [rax], al ; add al, ch ; pop rsi ; std ; jmp qword ptr [rdx]
0x0000000000448915 : or byte ptr [rax], al ; add byte ptr [rsi + rax*4 - 4], dh ; call rsp
0x000000000043c8f2 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x0000000000405f5c : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x0000000000406e35 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000409b29 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x712da045], cl ; ret
0x000000000041fdc7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040a33f : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042744e : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004069c5 : or eax, 0x51b80000 ; lahf ; ret 0xb96e
0x0000000000448a55 : or eax, 0x6ce40000 ; std ; call rsp
0x0000000000406e43 : or eax, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000449835 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x64], bh ; std ; jmp rdx
0x00000000004489d5 : or eax, dword ptr [rax] ; add byte ptr [rax + rbx*8 - 4], al ; call rsp
0x000000000041f811 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438f25 : out -0x47, al ; ret 0x48e7
0x000000000042c59b : out -0x4c, al ; ret 0x8589
0x000000000042c5ef : out -0x4c, eax ; ret 0x8589
0x0000000000431f73 : out -0x4c, eax ; ret 0x88b9
0x00000000004392ff : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043914f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000448a99 : outsd dx, dword ptr [rsi] ; std ; call rsp
0x0000000000446adc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000446ade : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041eab2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000446ae0 : pop r14 ; pop r15 ; ret
0x000000000040c475 : pop r14 ; pop rbp ; ret
0x000000000041eab4 : pop r15 ; pop rbp ; ret
0x0000000000446ae2 : pop r15 ; ret
0x0000000000439978 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x2498ce], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x64b2c0 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x64b2c0 ; jmp rdx
0x0000000000446adb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000446adf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x000000000041eab1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c474 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041e78a : pop rbx ; pop rbp ; ret
0x0000000000441349 : pop rbx ; ret 0x1dd
0x0000000000410b7e : pop rbx ; ret 0x966b
0x0000000000439c24 : pop rcx ; mov dl, -0x47 ; ret
0x000000000042b208 : pop rcx ; ret 0x891f
0x0000000000431657 : pop rcx ; ret 0xba1f
0x000000000041eab5 : pop rdi ; pop rbp ; ret
0x00000000004275a7 : pop rdi ; ret
0x0000000000448a19 : pop rdi ; std ; call rsp
0x000000000043a06b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004412f5 : pop rdx ; ret 0x1dd
0x000000000040654e : pop rsi ; mov ch, -0x17 ; call qword ptr [rcx]
0x000000000041eab3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000446ae1 : pop rsi ; pop r15 ; ret
0x000000000040c476 : pop rsi ; pop rbp ; ret
0x00000000004495b9 : pop rsi ; std ; jmp qword ptr [rdx]
0x0000000000446add : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004189c2 : pop rsp ; ret
0x0000000000410bc0 : pop rsp ; ret 0x966b
0x0000000000437c18 : popfq ; ret 0xd284
0x0000000000427194 : push -0x17000003 ; ret
0x0000000000438387 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x0000000000448913 : push qword ptr [rax + rcx - 0x798c0000] ; cld ; call rsp
0x0000000000448b13 : push qword ptr [rax + rdx - 0x747c0000] ; std ; call rsp
0x0000000000448853 : push qword ptr [rbp + rax - 0x688c0000] ; sti ; call rsp
0x0000000000448a53 : push qword ptr [rbp + rcx + 0x6ce40000] ; std ; call rsp
0x00000000004489d3 : push qword ptr [rbx + rcx - 0x27bc0000] ; cld ; call rsp
0x0000000000448bd3 : push qword ptr [rbx + rdx - 0x36ac0000] ; std ; call rsp
0x0000000000448953 : push qword ptr [rcx + rcx - 0x5aec0000] ; cld ; call rsp
0x0000000000448b53 : push qword ptr [rcx + rdx - 0x6c8c0000] ; std ; call rsp
0x00000000004488d3 : push qword ptr [rdi + rax + 0x43240000] ; cld ; call rsp
0x0000000000448ad3 : push qword ptr [rdi + rcx + 0x71a40000] ; std ; call rsp
0x000000000041e1af : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000448993 : push qword ptr [rdx + rcx - 0x42fc0000] ; cld ; call rsp
0x0000000000448b93 : push qword ptr [rdx + rdx - 0x65ac0000] ; std ; call rsp
0x0000000000448893 : push qword ptr [rsi + rax + 0x5640000] ; cld ; call rsp
0x0000000000448a93 : push qword ptr [rsi + rcx + 0x6f940000] ; std ; call rsp
0x0000000000448a13 : push qword ptr [rsp + rcx + 0x5f840000] ; std ; call rsp
0x0000000000448c13 : push qword ptr [rsp + rdx - 0x13bc0000] ; std ; call rsp
0x0000000000403723 : push rax ; lahf ; ret 0x896e
0x0000000000401f84 : push rax ; pop rbp ; ret
0x000000000042b827 : push rax ; ret
0x000000000042107b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000421983 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000425353 : push rbp ; fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x000000000041c2e8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041c4ce : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000041c574 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000041c5a2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000041c670 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000041c806 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000408884 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401a64 : push rbp ; mov edi, 0x64ae20 ; mov rbp, rsp ; call rax
0x000000000041292f : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x0000000000422ceb : push rbx ; jrcxz 0x422d53 ; ret 0x8589
0x00000000004241a3 : push rbx ; jrcxz 0x42420b ; ret 0x8fb9
0x00000000004243ce : push rbx ; jrcxz 0x424436 ; ret 0x8fb9
0x000000000042911b : push rbx ; ret 0xaf58
0x0000000000405013 : push rcx ; lahf ; ret 0x896e
0x00000000004069c9 : push rcx ; lahf ; ret 0xb96e
0x000000000042ee67 : push rcx ; ret
0x0000000000422c97 : push rdx ; jrcxz 0x422cff ; ret 0x8589
0x00000000004290c7 : push rdx ; ret 0xaf58
0x0000000000448bd8 : push rsp ; leave ; std ; call rsp
0x00000000004151db : pushfq ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000415baa : pushfq ; ret 0x8445
0x0000000000407372 : pushfq ; ret 0xd284
0x00000000004005c8 : ret
0x000000000041206d : ret 0
0x000000000040c2fc : ret 0x10
0x0000000000407785 : ret 0x19
0x0000000000422907 : ret 0x1a
0x000000000040671a : ret 0x1bf
0x000000000040598e : ret 0x1d
0x00000000004412f6 : ret 0x1dd
0x000000000041303c : ret 0x1f3e
0x0000000000431447 : ret 0x20
0x0000000000439b2b : ret 0x2030
0x000000000040548e : ret 0x22
0x000000000040bbc0 : ret 0x23e9
0x0000000000401952 : ret 0x2498
0x0000000000401752 : ret 0x2499
0x0000000000401542 : ret 0x249a
0x000000000040bcbe : ret 0x25e9
0x0000000000414265 : ret 0x29b9
0x000000000041bcc7 : ret 0x2a
0x000000000041d940 : ret 0x2ae8
0x000000000041efe6 : ret 0x2c1
0x0000000000402fbf : ret 0x2f
0x0000000000407d2a : ret 0x30
0x000000000040d93c : ret 0x323d
0x000000000040da39 : ret 0x3386
0x000000000043e8f5 : ret 0x3617
0x00000000004227c7 : ret 0x3bef
0x000000000040cbda : ret 0x3d4b
0x0000000000434dd8 : ret 0x40
0x000000000041160a : ret 0x4095
0x0000000000418c2a : ret 0x43fa
0x000000000040eb28 : ret 0x447a
0x000000000040b96d : ret 0x4589
0x0000000000411601 : ret 0x458b
0x0000000000407922 : ret 0x479d
0x0000000000412933 : ret 0x4810
0x000000000043838e : ret 0x483f
0x0000000000438f0b : ret 0x48e7
0x000000000040d451 : ret 0x4eac
0x0000000000446576 : ret 0x4eb9
0x000000000040994c : ret 0x5589
0x0000000000424fa3 : ret 0x5e5
0x0000000000431173 : ret 0x6d
0x000000000043a8c9 : ret 0x6f69
0x000000000040ad02 : ret 0x71e9
0x000000000042ce13 : ret 0x73
0x00000000004143ea : ret 0x7406
0x0000000000429528 : ret 0x791e
0x00000000004274a1 : ret 0x79e8
0x000000000042c243 : ret 0x7a
0x00000000004089fd : ret 0x7a36
0x0000000000434fff : ret 0x7b9
0x000000000040c74a : ret 0x7d89
0x0000000000430d07 : ret 0x7f76
0x000000000042e597 : ret 0x80
0x0000000000414fb9 : ret 0x8041
0x0000000000407ca2 : ret 0x8148
0x000000000040536b : ret 0x8445
0x00000000004425fd : ret 0x848e
0x0000000000409f34 : ret 0x8589
0x0000000000431f76 : ret 0x88b9
0x000000000043f1ee : ret 0x8916
0x0000000000418ac0 : ret 0x891a
0x000000000042b209 : ret 0x891f
0x00000000004394dc : ret 0x8934
0x000000000042a7a5 : ret 0x893f
0x000000000040bc41 : ret 0x8948
0x0000000000403725 : ret 0x896e
0x0000000000407f5a : ret 0x8971
0x0000000000425d81 : ret 0x89b6
0x0000000000425609 : ret 0x89b9
0x000000000040df5e : ret 0x89cc
0x000000000042d429 : ret 0x89e8
0x0000000000422420 : ret 0x89ec
0x0000000000441217 : ret 0x89fc
0x000000000041267f : ret 0x89fd
0x00000000004394b8 : ret 0x8b34
0x0000000000407481 : ret 0x8b44
0x0000000000407327 : ret 0x8b48
0x0000000000424366 : ret 0x8bcc
0x0000000000436032 : ret 0x8be8
0x0000000000422552 : ret 0x8bec
0x000000000040c33e : ret 0x8d89
0x00000000004241a6 : ret 0x8fb9
0x00000000004450a8 : ret 0x9589
0x0000000000410b7f : ret 0x966b
0x00000000004448d6 : ret 0x9ae9
0x000000000041578a : ret 0x9e31
0x0000000000411945 : ret 0x9e9
0x000000000041c995 : ret 0xa9b9
0x000000000043482e : ret 0xace8
0x0000000000418412 : ret 0xade6
0x00000000004290c8 : ret 0xaf58
0x0000000000405f5f : ret 0xb0
0x000000000042bfcf : ret 0xb846
0x000000000041c100 : ret 0xb91a
0x0000000000428957 : ret 0xb957
0x00000000004069cb : ret 0xb96e
0x000000000042603b : ret 0xb9b6
0x0000000000431658 : ret 0xba1f
0x00000000004348cf : ret 0xbe8
0x0000000000401a05 : ret 0xc148
0x00000000004120ce : ret 0xc189
0x0000000000406cce : ret 0xc8b
0x0000000000413e30 : ret 0xcae8
0x00000000004051ad : ret 0xd284
0x000000000041e1b3 : ret 0xd4e9
0x0000000000408829 : ret 0xd73f
0x00000000004020b7 : ret 0xdfcc
0x000000000040688e : ret 0xe
0x0000000000441119 : ret 0xe0a5
0x0000000000437fcb : ret 0xe280
0x0000000000408232 : ret 0xe971
0x000000000040f697 : ret 0xe9cc
0x0000000000444eee : ret 0xe9fc
0x000000000043b9bd : ret 0xec0b
0x000000000041e7cc : ret 0xee8
0x00000000004331e3 : ret 0xf40
0x00000000004151c3 : ret 0xf41
0x000000000040745e : ret 0xf748
0x000000000043485f : ret 0xf9b9
0x0000000000428557 : ret 0xfa
0x0000000000407680 : ret 0xfa81
0x0000000000403e08 : ret 0xfa89
0x000000000040a979 : ret 0xfae9
0x00000000004221ca : ret 0xfdf4
0x00000000004209ca : ret 0xfe0c
0x000000000044365a : ret 0xff6b
0x0000000000445626 : ret 0xff9b
0x000000000041c2eb : ret 0xff9f
0x000000000041dc8e : ret 0xffa5
0x000000000044580c : ret 0xffbb
0x000000000041c4d1 : ret 0xffbf
0x000000000041cf3b : ret 0xffc4
0x000000000041c577 : ret 0xffc5
0x000000000041c5a5 : ret 0xffd5
0x000000000041c673 : ret 0xffd8
0x000000000041cfe1 : ret 0xffd9
0x000000000041c809 : ret 0xffe0
0x0000000000434a55 : ret 0xfff7
0x0000000000434a86 : ret 0xfff9
0x000000000041b8de : ret 0xfffa
0x00000000004142ba : ret 0xfffb
0x000000000042566c : ret 0xfffd
0x000000000042257d : ret 0xfffe
0x0000000000407ca5 : ret 0xffff
0x0000000000406b4b : ret 1
0x0000000000406dff : ret 2
0x000000000041e2c7 : ret 4
0x000000000041fdf8 : ret 5
0x0000000000409c9a : ret 6
0x0000000000408baa : ret 8
0x0000000000426e24 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427435 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004463b2 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000040c744 : rol dword ptr [rsi - 0x76bbffbc], 1 ; ret 0x7d89
0x0000000000416396 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040bc47 : ror byte ptr [r8 + 0x3b], 0x45 ; enter 0xf41, -0x6c ; ret 0x8445
0x0000000000412c04 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000040bc48 : ror byte ptr [rax + 0x3b], 0x45 ; enter 0xf41, -0x6c ; ret 0x8445
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x0000000000412c01 : ror byte ptr [rax - 0x75], 0x45 ; ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000412c05 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x000000000040534a : ror byte ptr [rax - 0x77], 1 ; shr eax, 0x1d ; ret
0x0000000000438f7e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000412930 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040ad6f : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40ad80 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004083b9 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409847 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0x21 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416397 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000421980 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000414ef1 : ror dword ptr [rdi], -0x69 ; ret 0xd284
0x0000000000414ef0 : ror dword ptr cs:[rdi], -0x69 ; ret 0xd284
0x0000000000412c69 : sahf ; ret 0xd284
0x000000000040537a : salc ; and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rax]
0x00000000004264fe : salc ; ret
0x00000000004489a9 : sar ah, -1 ; adc al, 0xb ; add byte ptr [rax], al ; ret
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x0000000000444443 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000041f449 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000440d45 : sbb dl, dh ; ret
0x0000000000421563 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c98e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000440d99 : sbb edx, esi ; ret
0x0000000000444442 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000041534f : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x45d257bb], cl ; ret
0x0000000000403e07 : scasd eax, dword ptr [rdi] ; ret 0xfa89
0x00000000004443b2 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000040767e : shl dword ptr [rcx], 1 ; ret 0xfa81
0x000000000040b5a8 : shr al, 1 ; ret 2
0x0000000000407f58 : shr dword ptr [rcx], cl ; ret 0x8971
0x000000000040534d : shr eax, 0x1d ; ret
0x0000000000448ad5 : sldt word ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x448ade ; call rsp
0x0000000000449cb5 : sldt word ptr [rax] ; test al, -0x3c ; std ; jmp rax
0x0000000000449cda : std ; call qword ptr [rdi]
0x000000000044991a : std ; call rdx
0x0000000000448a1a : std ; call rsp
0x00000000004496da : std ; jmp qword ptr [rax]
0x0000000000449b3a : std ; jmp qword ptr [rbx]
0x00000000004495ba : std ; jmp qword ptr [rdx]
0x0000000000449cba : std ; jmp rax
0x000000000044983a : std ; jmp rdx
0x0000000000448b12 : std ; push qword ptr [rax + rdx - 0x747c0000] ; std ; call rsp
0x0000000000448a52 : std ; push qword ptr [rbp + rcx + 0x6ce40000] ; std ; call rsp
0x0000000000448bd2 : std ; push qword ptr [rbx + rdx - 0x36ac0000] ; std ; call rsp
0x0000000000448b52 : std ; push qword ptr [rcx + rdx - 0x6c8c0000] ; std ; call rsp
0x0000000000448ad2 : std ; push qword ptr [rdi + rcx + 0x71a40000] ; std ; call rsp
0x0000000000448b92 : std ; push qword ptr [rdx + rdx - 0x65ac0000] ; std ; call rsp
0x0000000000448a92 : std ; push qword ptr [rsi + rcx + 0x6f940000] ; std ; call rsp
0x0000000000448c12 : std ; push qword ptr [rsp + rdx - 0x13bc0000] ; std ; call rsp
0x0000000000448e3a : sti ; call qword ptr [rax]
0x0000000000448efa : sti ; call rsi
0x000000000044885a : sti ; call rsp
0x0000000000448852 : sti ; push qword ptr [rbp + rax - 0x688c0000] ; sti ; call rsp
0x00000000004199d7 : sub al, 0x38 ; ret 0x8589
0x000000000041c993 : sub al, 0x38 ; ret 0xa9b9
0x0000000000448f58 : sub byte ptr [rsi], bl ; cld ; jmp rsi
0x000000000040a960 : sub ecx, 1 ; mov rdi, rcx ; call rax
0x0000000000446b31 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000446b30 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000043cac9 : sysenter
0x00000000004124a1 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000042109b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000444c7f : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000449cb8 : test al, -0x3c ; std ; jmp rax
0x0000000000427278 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f62d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000420f78 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411876 : test al, 8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000446aea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004495b4 : test byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x23449322
0x000000000040bea9 : test byte ptr [rbx - 0x16fffffb], ch ; ret 1
0x0000000000413128 : test byte ptr [rbx - 0x16fffffb], dh ; ret 1
0x000000000042bfda : test byte ptr [rbx], ah ; ret 0
0x0000000000448a18 : test byte ptr [rdi - 3], bl ; call rsp
0x0000000000449cb4 : test byte ptr [rdi], cl ; add byte ptr [rax], al ; test al, -0x3c ; std ; jmp rax
0x0000000000407ffa : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add cl, ch ; ret
0x000000000041fdc5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004492b4 : test byte ptr [rip - 0x4fc80000], al ; cld ; call qword ptr [rax]
0x00000000004242c4 : test ch, cl ; ret
0x0000000000428086 : test cl, dh ; ret 0
0x0000000000427cce : test dl, bl ; ret 0
0x000000000042e590 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x0000000000406604 : test dword ptr [rax + 0x44], edi ; add al, ch ; ret
0x000000000042bfd4 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x0000000000434dd2 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x000000000042c60b : test dword ptr [rcx + 1], ebp ; ret
0x0000000000412435 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000421080 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000420de8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004128c6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rcx
0x000000000040537f : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rax]
0x0000000000405394 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rcx]
0x000000000040527c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000406b0a : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000428748 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x000000000044435b : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000444c81 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000443c95 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000446174 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000446493 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000445284 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000044538a : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x0000000000443473 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x00000000004463b7 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000444445 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000044474e : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x00000000004448ce : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000425357 : test ebp, eax ; idiv edi ; call rax
0x0000000000433696 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042567d : test esi, eax ; idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x00000000004242c3 : test r13b, r9b ; ret
0x00000000004331e2 : wait ; ret 0xf40
0x0000000000448919 : xchg ah, bh ; call rsp
0x0000000000441215 : xchg ax, dx ; ret 0x89fc
0x000000000042c65f : xchg byte ptr [rcx + 1], ch ; ret
0x00000000004450a2 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x00000000004169c1 : xchg eax, ebp ; ret
0x0000000000414fb8 : xchg eax, ebp ; ret 0x8041
0x0000000000405fcc : xchg eax, ebp ; ret 0x8445
0x000000000040728f : xchg eax, ebp ; ret 0xd284
0x0000000000446560 : xchg eax, ebx ; ret 0xd284
0x0000000000448b59 : xchg eax, ebx ; std ; call rsp
0x00000000004199bb : xchg eax, ecx ; ret
0x00000000004102b5 : xchg eax, edi ; ret 0x8445
0x00000000004068d4 : xchg eax, edi ; ret 0xd284
0x0000000000448859 : xchg eax, edi ; sti ; call rsp
0x0000000000419b0b : xchg eax, edx ; ret
0x0000000000425684 : xchg eax, edx ; ret 0x8445
0x0000000000441216 : xchg eax, edx ; ret 0x89fc
0x0000000000410631 : xchg eax, edx ; ret 0xd284
0x0000000000444eed : xchg eax, edx ; ret 0xe9fc
0x000000000041f342 : xchg eax, esi ; ret
0x00000000004051ac : xchg eax, esi ; ret 0xd284
0x0000000000448a98 : xchg eax, esp ; outsd dx, dword ptr [rsi] ; std ; call rsp
0x00000000004169a3 : xchg eax, esp ; ret
0x000000000040536a : xchg eax, esp ; ret 0x8445
0x00000000004060c8 : xchg eax, esp ; ret 0xd284
0x0000000000437fca : xchg eax, esp ; ret 0xe280
0x00000000004151c2 : xchg eax, esp ; ret 0xf41
0x000000000040cb25 : xchg eax, r8d ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000449cd9 : xlatb ; std ; call qword ptr [rdi]
0x00000000004129c2 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433fda : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x000000000041f947 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040edcd : xor eax, 0x4b9b9e8 ; ret 0x3386
0x000000000041650d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
