0x00000000004246b4 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004245f3 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000436d45 : adc byte ptr [rax], al ; add al, ch ; xor al, 0xffffffffffffffff ; jmp rsi
0x000000000041babc : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041609b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413919 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000436183 : add ah, ah ; add al, 0 ; add al, cl ; fdivp st(5) ; jmp qword ptr [rdx]
0x0000000000436c83 : add ah, ah ; sldt word ptr [rax] ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000436c63 : add ah, al ; sldt word ptr [rax] ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000435b47 : add ah, bh ; ret 0xffff
0x0000000000436185 : add al, 0 ; add al, cl ; fdivp st(5) ; jmp qword ptr [rdx]
0x000000000041a653 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000436ca4 : add al, 0x10 ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x000000000042202a : add al, 0x15 ; ret
0x000000000042a307 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000435ea4 : add al, 2 ; add byte ptr [rax], al ; call 0x17435bf1
0x00000000004362a4 : add al, 6 ; add byte ptr [rax], al ; cwde ; loopne 0x4362af ; jmp qword ptr [rax]
0x0000000000435f05 : add al, byte ptr [rax] ; add al, cl ; std ; call qword ptr [rsi]
0x000000000041a849 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000415993 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041cb30 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000435f04 : add al, byte ptr fs:[rax] ; add al, cl ; std ; call qword ptr [rsi]
0x0000000000436be7 : add al, ch ; and bh, bh ; jmp qword ptr [rcx]
0x000000000041574d : add al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xfffe
0x00000000004156ae : add al, ch ; ret
0x000000000041547f : add al, ch ; sti ; ret 0xfffe
0x0000000000436d47 : add al, ch ; xor al, 0xffffffffffffffff ; jmp rsi
0x0000000000436187 : add al, cl ; fdivp st(5) ; jmp qword ptr [rdx]
0x0000000000435f07 : add al, cl ; std ; call qword ptr [rsi]
0x0000000000401dc6 : add bh, al ; hlt ; push rcx ; ret
0x000000000042d561 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041a34d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000041a84b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x000000000041a655 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000041a74b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000415d8e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000415af6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043408f : add bl, dh ; ret
0x000000000042d66a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000436ca3 : add byte ptr [rax + rdx], al ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000403883 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000436ca2 : add byte ptr [rax], al ; add al, 0x10 ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000435ea2 : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; call 0x17435bf3
0x00000000004362a2 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; cwde ; loopne 0x4362b1 ; jmp qword ptr [rax]
0x0000000000435f02 : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add al, cl ; std ; call qword ptr [rsi]
0x0000000000401f69 : add byte ptr [rax], al ; add bh, al ; hlt ; push rcx ; ret
0x000000000042d66b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000415d8c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000415af4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043408d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403881 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043408b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403a02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040400a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043408c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041de22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041e15b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000041365e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428fd7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472de045], cl ; ret
0x000000000042a371 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000401d3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x512df045], cl ; ret
0x000000000041d8aa : add byte ptr [rax], al ; add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000425ed3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000426007 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de045], cl ; ret
0x0000000000429fff : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000041b0e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x000000000041dbe3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000433779 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004336f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041c59f : add byte ptr [rax], al ; add byte ptr [rbx - 0x69172783], cl ; ret
0x0000000000420f85 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c6b845], cl ; ret
0x00000000004310fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041c2ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041b923 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004257f2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403f03 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000433835 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000420ed6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041824d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040b56d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403a04 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a433 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041a8ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000415c8a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b54f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403833 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004246b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004245f7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040a68e : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043303d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041391b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413380 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b15d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041609d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000427b3a : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbp ; ret
0x00000000004138d7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004363c2 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; test al, -0x1f ; std ; jmp qword ptr [rdx]
0x0000000000435ea6 : add byte ptr [rax], al ; call 0x17435bef
0x0000000000436be6 : add byte ptr [rax], al ; call 0x22436b14
0x000000000041547e : add byte ptr [rax], al ; call 0x401784
0x000000000043243d : add byte ptr [rax], al ; call 0x401798
0x0000000000436d46 : add byte ptr [rax], al ; call 0xffffffffe7436c86
0x0000000000435b46 : add byte ptr [rax], al ; cld ; ret 0xffff
0x0000000000436426 : add byte ptr [rax], al ; cwde ; in eax, -3 ; jmp rdx
0x00000000004362a6 : add byte ptr [rax], al ; cwde ; loopne 0x4362ad ; jmp qword ptr [rax]
0x0000000000437066 : add byte ptr [rax], al ; cwde ; mov bh, bh ; call qword ptr [rbx]
0x0000000000437086 : add byte ptr [rax], al ; cwde ; mov edi, edi ; call qword ptr [rsi]
0x0000000000437082 : add byte ptr [rax], al ; in al, 0x13 ; add byte ptr [rax], al ; cwde ; mov edi, edi ; call qword ptr [rsi]
0x0000000000436c82 : add byte ptr [rax], al ; in al, 0xf ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x000000000040a68a : add byte ptr [rax], al ; jmp 0x40a699
0x0000000000433039 : add byte ptr [rax], al ; jmp 0x433048
0x0000000000433ca9 : add byte ptr [rax], al ; jmp 0x433cb8
0x0000000000432e4c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000432dcd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000418f77 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000433eb7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000427fbd : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040a2d9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000429a0c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ae39 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436d42 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rax], al ; add al, ch ; xor al, 0xffffffffffffffff ; jmp rsi
0x0000000000436c66 : add byte ptr [rax], al ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000403ce7 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041365f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413338 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043408e : add byte ptr [rax], al ; ret
0x0000000000436be2 : add byte ptr [rax], al ; sldt word ptr [rax] ; call 0x22436b18
0x00000000004363c6 : add byte ptr [rax], al ; test al, -0x1f ; std ; jmp qword ptr [rdx]
0x0000000000436506 : add byte ptr [rax], al ; test al, -4 ; std ; call rdx
0x0000000000436422 : add byte ptr [rax], al ; test byte ptr [rdi], al ; add byte ptr [rax], al ; cwde ; in eax, -3 ; jmp rdx
0x0000000000436a07 : add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rsi]
0x0000000000436a03 : add byte ptr [rbp + rcx], ah ; add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rsi]
0x000000000041de24 : add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041e84c : add byte ptr [rbx + 0x182d8445], cl ; ret
0x000000000042a9d5 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042aa17 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000043182f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x431817 ; ret
0x000000000041e15d : add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000041e513 : add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x0000000000413660 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041d861 : add byte ptr [rbx + 0x42d8445], cl ; ret 0xa43c
0x0000000000426e92 : add byte ptr [rbx + 0x4589cc7d], cl ; test ch, al ; ret 0xfdac
0x0000000000428fd9 : add byte ptr [rbx + 0x472de045], cl ; ret
0x000000000042a373 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000401d3f : add byte ptr [rbx + 0x512df045], cl ; ret
0x000000000041d8ac : add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000425ed5 : add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000426009 : add byte ptr [rbx + 0x562de045], cl ; ret
0x0000000000413339 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042a001 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000041b0e8 : add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x0000000000420295 : add byte ptr [rbx - 0x20d24fbb], cl ; push rbx ; ret 0x8589
0x0000000000420253 : add byte ptr [rbx - 0x21d24fbb], cl ; push rbx ; ret 0x4589
0x000000000041ea8b : add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000041dbe5 : add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x000000000043377b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004336f7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041c5a1 : add byte ptr [rbx - 0x69172783], cl ; ret
0x0000000000404698 : add byte ptr [rbx - 0xc34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404765 : add byte ptr [rbx - 0xc74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000420f87 : add byte ptr [rcx + 0x45c6b845], cl ; ret
0x000000000041a42f : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000431100 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041c2ec : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000418dee : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004257f4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403f05 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000420e22 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415dde : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401ca8 : add byte ptr [rcx], al ; ret
0x0000000000436423 : add byte ptr [rdi + rax - 0x1a680000], al ; std ; jmp rdx
0x00000000004363c3 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; test al, -0x1f ; std ; jmp qword ptr [rdx]
0x0000000000436be3 : add byte ptr [rdi + rcx], al ; add al, ch ; and bh, bh ; jmp qword ptr [rcx]
0x0000000000433837 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000420ed8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041824f : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040b56f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403a06 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a435 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041a8bc : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000415c8c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b551 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403835 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004246ba : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004245f9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000435f03 : add byte ptr [rdx + rax], ah ; add al, cl ; std ; call qword ptr [rsi]
0x0000000000435ea3 : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; call 0x17435bf2
0x00000000004212ce : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429e8d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004362a3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; cwde ; loopne 0x4362b0 ; jmp qword ptr [rax]
0x000000000041b94b : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000401f68 : add byte ptr fs:[rax], al ; add bh, al ; hlt ; push rcx ; ret
0x000000000040a690 : add cl, ch ; ret
0x000000000043303f : add cl, ch ; ret 0
0x000000000041cb32 : add cl, ch ; ret 1
0x000000000042f8ea : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000401dc4 : add dword ptr [rax], eax ; add bh, al ; hlt ; push rcx ; ret
0x000000000042d55f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004138d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000413ffa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404132 : add dword ptr [rax], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429325 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000429dd1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041c399 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041aea2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416d8f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004284b0 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000404251 : add dword ptr es:[rax], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401ca4 : add eax, 0x23668e ; add ebx, esi ; ret
0x0000000000418f75 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000041885f : add eax, 0xb6b80000 ; ret 0x979f
0x000000000042478a : add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000041547d : add eax, 0xfbe80000 ; ret 0xfffe
0x000000000041ea89 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000042a309 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c6b : add eax, edx ; sar rax, 1 ; jne 0x401c7c ; pop rbp ; ret
0x0000000000401ca9 : add ebx, esi ; ret
0x0000000000436a09 : add edi, edi ; jmp qword ptr [rsi]
0x0000000000401fcb : add esp, 0x10 ; pop rbp ; ret
0x0000000000415ddc : add esp, 0x100 ; pop rbp ; ret
0x000000000041baba : add esp, 0x110 ; pop rbp ; ret
0x0000000000413ff7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042e8bf : add esp, 0x120 ; pop rbp ; ret
0x000000000041d0d7 : add esp, 0x140 ; pop rbp ; ret
0x000000000042f4ae : add esp, 0x160 ; pop rbp ; ret
0x0000000000429dd6 : add esp, 0x18 ; pop rbp ; ret
0x0000000000415f4c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004087bf : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040a48e : add esp, 0x20 ; pop rbp ; ret
0x00000000004212cc : add esp, 0x200 ; pop rbp ; ret
0x00000000004099b9 : add esp, 0x2c0 ; pop rbp ; ret
0x0000000000431403 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041aaec : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000419051 : add esp, 0x30 ; pop rbp ; ret
0x0000000000418e45 : add esp, 0x380 ; pop rbp ; ret
0x0000000000403ce3 : add esp, 0x3b0 ; pop rbp ; ret
0x000000000040a447 : add esp, 0x40 ; pop rbp ; ret
0x0000000000427b3d : add esp, 0x48 ; pop rbp ; ret
0x0000000000420136 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000402172 : add esp, 0x50 ; pop rbp ; ret
0x0000000000424df7 : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000401f81 : add esp, 0x60 ; pop rbp ; ret
0x0000000000407c9e : add esp, 0x670 ; pop rbp ; ret
0x0000000000404135 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403fab : add esp, 0x80 ; pop rbp ; ret
0x000000000042619e : add esp, 0x90 ; pop rbp ; ret
0x000000000040abfe : add esp, 0xa0 ; pop rbp ; ret
0x000000000042b0a3 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000413334 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040478f : add esp, 0xd0 ; pop rbp ; ret
0x00000000004259ad : add esp, 0xe0 ; pop rbp ; ret
0x00000000004283ac : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x000000000042a308 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c6a : add rax, rdx ; sar rax, 1 ; jne 0x401c7d ; pop rbp ; ret
0x0000000000401fca : add rsp, 0x10 ; pop rbp ; ret
0x0000000000415ddb : add rsp, 0x100 ; pop rbp ; ret
0x000000000041bab9 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000413ff6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042e8be : add rsp, 0x120 ; pop rbp ; ret
0x000000000041d0d6 : add rsp, 0x140 ; pop rbp ; ret
0x000000000042f4ad : add rsp, 0x160 ; pop rbp ; ret
0x0000000000429dd5 : add rsp, 0x18 ; pop rbp ; ret
0x0000000000415f4b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004087be : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040a48d : add rsp, 0x20 ; pop rbp ; ret
0x00000000004212cb : add rsp, 0x200 ; pop rbp ; ret
0x00000000004099b8 : add rsp, 0x2c0 ; pop rbp ; ret
0x0000000000431402 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041aaeb : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000419050 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000418e44 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000403ce2 : add rsp, 0x3b0 ; pop rbp ; ret
0x000000000040a446 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000427b3c : add rsp, 0x48 ; pop rbp ; ret
0x0000000000420135 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000402171 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000424df6 : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000401f80 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407c9d : add rsp, 0x670 ; pop rbp ; ret
0x0000000000404134 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403faa : add rsp, 0x80 ; pop rbp ; ret
0x000000000042619d : add rsp, 0x90 ; pop rbp ; ret
0x000000000040abfd : add rsp, 0xa0 ; pop rbp ; ret
0x000000000042b0a2 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000413333 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040478e : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004259ac : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004283ab : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x000000000041574a : and al, 0x10 ; mov al, 0 ; call 0x401a06
0x00000000004157f6 : and al, 0x18 ; mov al, 0 ; call 0x401a06
0x0000000000416d8e : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004363c4 : and al, 7 ; add byte ptr [rax], al ; test al, -0x1f ; std ; jmp qword ptr [rdx]
0x0000000000420498 : and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000401ca6 : and ax, word ptr [rax] ; add ebx, esi ; ret
0x000000000042f8e8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000436be9 : and bh, bh ; jmp qword ptr [rcx]
0x00000000004070e4 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x0000000000426912 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426a6c : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e8c1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004070e5 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000429323 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000042f8e7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000403a00 : and dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409ca1 : and dword ptr [rbx], 0x5d ; ret
0x000000000042b1e5 : and eax, 0x4355c0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000409c9f : and eax, 0x638358 ; pop rbp ; ret
0x0000000000409cc3 : and eax, 0x638360 ; pop rbp ; ret
0x0000000000401ca7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000435ea8 : call 0x17435bed
0x0000000000436be8 : call 0x22436b12
0x0000000000415480 : call 0x401782
0x000000000043243f : call 0x401796
0x000000000043240c : call 0x401806
0x00000000004155d0 : call 0x4018c2
0x000000000041f142 : call 0x401979
0x000000000041574e : call 0x401a02
0x0000000000401dc2 : call 0x401f99
0x0000000000401f67 : call 0x401fd9
0x000000000041eeba : call 0x41b172
0x0000000000420f48 : call 0x42fa26
0x000000000042d0d6 : call 0xffffffff8a053678
0x0000000000436d48 : call 0xffffffffe7436c84
0x0000000000413379 : call 0xffffffffe903bcc9
0x0000000000413378 : call 0xffffffffe903bcca
0x000000000040edbd : call 0xfffffffff7397354
0x0000000000430ec5 : call 0xffffffffff47949a
0x00000000004118e9 : call 0xffffffffff559ebb
0x00000000004118e8 : call 0xffffffffff559ebc
0x00000000004118e9 : call 0xffffffffff559ebd
0x00000000004118e8 : call 0xffffffffff559ebe
0x000000000042c1c7 : call 0xffffffffff7c4d18
0x000000000042c1c6 : call 0xffffffffff7c4d19
0x0000000000434069 : call qword ptr [r12 + rbx*8]
0x0000000000410c76 : call qword ptr [rax]
0x000000000043706b : call qword ptr [rbx]
0x0000000000412905 : call qword ptr [rcx]
0x00000000004367eb : call qword ptr [rdi]
0x00000000004108a3 : call qword ptr [rdx]
0x0000000000405686 : call qword ptr [rsi]
0x000000000043406a : call qword ptr [rsp + rbx*8]
0x000000000042c263 : call rax
0x000000000040f05a : call rbx
0x00000000004221b3 : call rcx
0x0000000000409940 : call rdi
0x0000000000403ac8 : call rdx
0x0000000000415d94 : call rsi
0x00000000004336fc : cdq ; ret
0x00000000004087bd : clc ; add rsp, 0x1d0 ; pop rbp ; ret
0x000000000042acf3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004318ec : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004263e3 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000431c00 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a943 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000042b0a1 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401c6f : clc ; jne 0x401c78 ; pop rbp ; ret
0x000000000042fa08 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000428ee7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042f4ee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004296cb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004296eb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042970b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000404017 : clc ; pop rbp ; ret
0x0000000000435b48 : cld ; ret 0xffff
0x000000000041153d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000436509 : cld ; std ; call rdx
0x0000000000403e79 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041b94a : cli ; add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000426082 : cli ; mov dh, -3 ; inc edi ; in al, 0x56 ; ret
0x0000000000420495 : cmc ; movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000041c069 : cmovs ecx, dword ptr [rbx - 0x7eb737ab] ; ret 0xffff
0x00000000004304cd : cmp al, -0x2a ; ret
0x000000000041e518 : cmp al, -0x6a ; ret
0x0000000000409c9e : cmp al, 0x25 ; pop rax ; and dword ptr [rbx], 0x5d ; ret
0x00000000004070e1 : cmp byte ptr [r11], 0x41 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004070e2 : cmp byte ptr [rbx], 0x41 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000426c1d : cmp byte ptr [rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000426c1c : cmp byte ptr ds:[rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000401c2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c40 ; pop rbp ; ret
0x0000000000413814 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000421112 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000436428 : cwde ; in eax, -3 ; jmp rdx
0x000000000041f421 : cwde ; jmp 0x420146
0x000000000041f420 : cwde ; jmp 0x420147
0x00000000004331fb : cwde ; js 0x4331a5 ; ret
0x0000000000433242 : cwde ; js 0x4331ec ; ret
0x000000000043327c : cwde ; js 0x433226 ; ret
0x00000000004362a8 : cwde ; loopne 0x4362ab ; jmp qword ptr [rax]
0x0000000000437068 : cwde ; mov bh, bh ; call qword ptr [rbx]
0x0000000000437088 : cwde ; mov edi, edi ; call qword ptr [rsi]
0x0000000000402954 : cwde ; ret
0x000000000040469e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004116e2 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004119ed : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000412ef4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000423711 : dec dword ptr [rdi] ; ret 0xc609
0x000000000041cb2c : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000414ad3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040455f : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000406e17 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000427ff0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000427fef : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041eeb5 : enter -0x74b8, 0x75 ; shr al, -0x4f ; ret 0xffff
0x000000000041ef5d : enter -0x74b8, 0x75 ; shr al, 9 ; ret 0xffff
0x000000000042a257 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004265ee : enter -0x79d3, -0xa ; ret 0x89c8
0x00000000004265a3 : enter -0x7ad3, -0xa ; ret 0x89c8
0x000000000042a30a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000042591a : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000421097 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430c7b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004268c3 : enter 0x612d, 1 ; ret 0x897e
0x000000000040aa9d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428634 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414829 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000429262 : fcomp qword ptr [rbp - 0x75b54151] ; ret 0x8423
0x0000000000436189 : fdivp st(5) ; jmp qword ptr [rdx]
0x0000000000420258 : ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042029a : fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000042049b : fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000416694 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041aed3 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000041aed7 : fmul dword ptr [rax - 0x7f] ; ret 0x110
0x00000000004251ae : fmul dword ptr [rax - 0x7f] ; ret 0x60
0x000000000043406c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041d067 : fsubr st(0) ; ret
0x000000000041c5a4 : fsubr st(0) ; xchg eax, esi ; ret
0x000000000042bdd4 : fsubr st(1) ; ret 0
0x000000000042c89c : fucompi st(1) ; ret
0x0000000000401fc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004328cc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042fa04 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c40 : hlt ; pop rbp ; mov edi, 0x6382e0 ; jmp rax
0x0000000000401dc9 : hlt ; push rcx ; ret
0x000000000041ea88 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000041542e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000410e99 : in al, -0x7f ; ret 0xff9f
0x000000000041107f : in al, -0x7f ; ret 0xffbf
0x0000000000411125 : in al, -0x7f ; ret 0xffc5
0x0000000000411153 : in al, -0x7f ; ret 0xffd5
0x0000000000411221 : in al, -0x7f ; ret 0xffd8
0x00000000004113b7 : in al, -0x7f ; ret 0xffe0
0x0000000000426910 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426a6a : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000437084 : in al, 0x13 ; add byte ptr [rax], al ; cwde ; mov edi, edi ; call qword ptr [rsi]
0x000000000041d0d5 : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x0000000000426088 : in al, 0x56 ; ret
0x000000000042fb57 : in al, 0x5d ; ret
0x0000000000436c84 : in al, 0xf ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x000000000042632a : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042634b : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042636c : in al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042638d : in al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e1ca : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004212ca : in al, dx ; add rsp, 0x200 ; pop rbp ; ret
0x000000000041904f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042fd09 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403fa9 : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040af4a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000418f7b : in al, dx ; pop rbp ; ret
0x0000000000408e12 : in eax, -0x57 ; ret 0x89f0
0x0000000000420ef5 : in eax, -0x76 ; push rbp ; ret
0x0000000000436429 : in eax, -3 ; jmp rdx
0x0000000000404013 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004338fb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a43e : inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000420e0f : inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000403e77 : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000041250f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000423bb2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004094c3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004247df : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004130ba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403213 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000426085 : inc edi ; in al, 0x56 ; ret
0x0000000000413fc8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041aab4 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000406bde : inc edi ; test dword ptr [rsi + rdi*8 + 0x11b0ffff], edi ; ret
0x000000000040d66f : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000410caf : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401c33 : ja 0x401c3a ; pop rbp ; ret
0x000000000042f4f1 : ja 0x42f53e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401c3f : je 0x401c3d ; pop rbp ; mov edi, 0x6382e0 ; jmp rax
0x0000000000402223 : jge 0x402210 ; ret
0x0000000000402222 : jge 0x402211 ; ret
0x0000000000402c9b : jge 0x402c88 ; ret
0x0000000000402c9a : jge 0x402c89 ; ret
0x0000000000403800 : jge 0x4037ed ; ret
0x00000000004037ff : jge 0x4037ee ; ret
0x0000000000404016 : jge 0x404013 ; pop rbp ; ret
0x0000000000414f48 : jge 0x414f5f ; ret
0x0000000000415433 : jge 0x41544a ; ret
0x000000000041eeb4 : jge 0x41ee86 ; mov rsi, qword ptr [rbp - 0x40] ; call 0x41b178
0x000000000041ef5c : jge 0x41ef2e ; mov rsi, qword ptr [rbp - 0x40] ; call 0x41b178
0x00000000004296ca : jge 0x4296cb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004296ea : jge 0x4296eb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042970a : jge 0x42970b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042f4ed : jge 0x42f4ee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000433e69 : jge 0x433e63 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004002db : jl 0x400321 ; ret
0x0000000000414e1c : jl 0x414e33 ; ret
0x00000000004317e5 : jl 0x4317c1 ; ret
0x0000000000431835 : jl 0x431811 ; ret
0x000000000040194b : jmp 0x401747
0x0000000000406e73 : jmp 0x407cac
0x0000000000406b71 : jmp 0x407cae
0x0000000000409fc1 : jmp 0x40a043
0x000000000040a68c : jmp 0x40a697
0x000000000041065d : jmp 0x413343
0x00000000004130f1 : jmp 0x413345
0x00000000004155d1 : jmp 0x415596
0x000000000041542d : jmp 0x4159a5
0x000000000041b95c : jmp 0x41bac8
0x000000000041f05b : jmp 0x420144
0x000000000041f422 : jmp 0x420145
0x00000000004241c3 : jmp 0x424e05
0x00000000004241c2 : jmp 0x424e06
0x00000000004291b2 : jmp 0x429302
0x000000000042a152 : jmp 0x42a227
0x000000000043303b : jmp 0x433046
0x0000000000433cab : jmp 0x433cb6
0x000000000042ded1 : jmp 0x49056821
0x000000000042df4c : jmp 0x4905689c
0x000000000042f2a5 : jmp 0x49057bf5
0x000000000042f320 : jmp 0x49057c70
0x0000000000426415 : jmp 0x7f04657d
0x000000000042d11b : jmp 0xffffffff8a0536bd
0x000000000042fd4e : jmp 0xffffffffb705011a
0x00000000004331fa : jmp 0xffffffffc3e7aa9b
0x000000000042d4cf : jmp 0xffffffffea053a71
0x000000000041077d : jmp qword ptr [rax]
0x00000000004118ef : jmp qword ptr [rbx]
0x00000000004132c0 : jmp qword ptr [rcx]
0x000000000043726b : jmp qword ptr [rdi]
0x0000000000413815 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000403c61 : jmp qword ptr [rdx]
0x000000000041187f : jmp qword ptr [rsi]
0x0000000000401c47 : jmp rax
0x0000000000412412 : jmp rbx
0x00000000004095b4 : jmp rcx
0x0000000000412aae : jmp rdi
0x0000000000401c87 : jmp rdx
0x0000000000403893 : jmp rsi
0x00000000004124a9 : jmp rsp
0x0000000000401c70 : jne 0x401c77 ; pop rbp ; ret
0x0000000000413fc6 : jne 0x413fcf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041eeb8 : jne 0x41ee7e ; call 0x41b174
0x000000000041ef60 : jne 0x41ef26 ; call 0x41b174
0x0000000000420ef0 : jne 0x420eb3 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000426cf9 : jne 0x426cdc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000427ff1 : jne 0x427fe9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004283e2 : jne 0x4283da ; mov rax, rdx ; pop rbp ; ret
0x000000000042a256 : jne 0x42a229 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000404137 : jo 0x404198 ; ret
0x0000000000404257 : jo 0x4042b8 ; ret
0x0000000000407ca0 : jo 0x407cad ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004141e1 : jo 0x414242 ; ret
0x0000000000414304 : jo 0x414365 ; ret
0x000000000041443e : jo 0x41449f ; ret
0x000000000041673c : jo 0x41679d ; ret
0x000000000041a774 : jo 0x41a743 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000041a773 : jo 0x41a744 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000041aea9 : jo 0x41af0a ; ret
0x0000000000424787 : jo 0x424713 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000428c03 : jo 0x428c64 ; ret
0x0000000000431c04 : jo 0x431c65 ; ret
0x0000000000413336 : js 0x41334a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004331fc : js 0x4331a4 ; ret
0x0000000000433243 : js 0x4331eb ; ret
0x000000000043327d : js 0x433225 ; ret
0x0000000000435b43 : lcall ptr [rbx + rbx] ; add ah, bh ; ret 0xffff
0x0000000000401dc3 : leave ; add dword ptr [rax], eax ; add bh, al ; hlt ; push rcx ; ret
0x000000000042d4ce : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea053a72
0x000000000042d4cd : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea053a73
0x000000000042d564 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041574f : lodsd eax, dword ptr [rsi] ; ret 0xfffe
0x0000000000416d8d : loop 0x416dba ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416d8c : loop 0x416dbb ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000432ca9 : loop 0x432cfb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000432d91 : loop 0x432de3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000428c2b : loope 0x428bc5 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429324 : loope 0x42932d ; movzx eax, cl ; pop rbp ; ret
0x00000000004363c9 : loope 0x4363ca ; jmp qword ptr [rdx]
0x0000000000409c72 : loopne 0x409cc5 ; add esp, 0x80 ; pop rbp ; ret
0x000000000040a852 : loopne 0x40a8a2 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a851 : loopne 0x40a8a3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b30e : loopne 0x40b317 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416480 : loopne 0x416489 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041688c : loopne 0x4168dc ; add esp, 0x40 ; pop rbp ; ret
0x000000000041688b : loopne 0x4168dd ; add esp, 0x40 ; pop rbp ; ret
0x000000000041aaee : loopne 0x41aaf7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c0f1 : loopne 0x41c144 ; add esp, 0x100 ; pop rbp ; ret
0x000000000042578f : loopne 0x425798 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004257f0 : loopne 0x4257fa ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004259af : loopne 0x4259b6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425ed8 : loopne 0x425f0b ; push rbp ; ret
0x0000000000425ed7 : loopne 0x425f0c ; push rbp ; ret
0x000000000042600c : loopne 0x42603f ; push rsi ; ret
0x000000000042600b : loopne 0x426040 ; push rsi ; ret
0x0000000000427e77 : loopne 0x427e7e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428fdc : loopne 0x42900f ; ret
0x0000000000428fdb : loopne 0x429010 ; ret
0x000000000042b5d7 : loopne 0x42b5e0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c870 : loopne 0x42c879 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c890 : loopne 0x42c8de ; mov edi, dword ptr [rcx] ; call rax
0x000000000042c88f : loopne 0x42c8df ; mov edi, dword ptr [rcx] ; call rax
0x000000000042c95c : loopne 0x42c965 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c9f4 : loopne 0x42c9fd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043276c : loopne 0x432775 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004362a9 : loopne 0x4362aa ; jmp qword ptr [rax]
0x0000000000402170 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042f418 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430e9a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b0a5 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043240a : mov al, 0 ; call 0x401808
0x000000000041574c : mov al, 0 ; call 0x401a04
0x00000000004063a4 : mov al, 0x11 ; ret
0x0000000000420256 : mov al, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000420298 : mov al, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000040b4cb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000403ce5 : mov al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432f4d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004330fd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004338f9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416d8b : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004284cf : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042bbd1 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042fa2c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432e4f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000432e4e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000432dcf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000432dd3 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000437069 : mov bh, bh ; call qword ptr [rbx]
0x0000000000409cc1 : mov byte ptr [0x638360], al ; pop rbp ; ret
0x000000000042fb51 : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x0000000000412e88 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401ca3 : mov byte ptr [rip + 0x23668e], 1 ; ret
0x000000000042f8ed : mov dh, -0x39 ; pop rbp ; ret
0x0000000000429327 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000429dd3 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041c39b : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041aea4 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416d91 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000426083 : mov dh, -3 ; inc edi ; in al, 0x56 ; ret
0x0000000000429e8b : mov dh, 0 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000433a25 : mov dl, -0x47 ; ret
0x0000000000409c9d : mov dword ptr [0x638358], edi ; pop rbp ; ret
0x000000000040b187 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040af4b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b0bf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042e679 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042e7eb : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x00000000004155ca : mov dword ptr [rbp - 0x1d8], eax ; call 0x4018c8
0x0000000000415641 : mov dword ptr [rbp - 0x1f0], eax ; call 0x4018c8
0x000000000041b959 : mov dword ptr [rbp - 0x38], eax ; jmp 0x41bacb
0x000000000040216e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a1a1 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000042afef : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000401fc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404015 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042fa09 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004275de : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b33d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004253df : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b1ea : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000428ee8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000404007 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000042f4f0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000415748 : mov dword ptr [rsp + 0x10], edx ; mov al, 0 ; call 0x401a08
0x00000000004157f4 : mov dword ptr [rsp + 0x18], ebx ; mov al, 0 ; call 0x401a08
0x000000000040ae3f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004167cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a443 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004164af : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428bfd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a2dc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041904d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042fd07 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418f79 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004168ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004161a0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f720 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b18a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042fb55 : mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000040a850 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041688a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ad34 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426cff : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040ae3c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040af45 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000427fbf : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000042a25c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x000000000040b0c1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004141db : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004328ca : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042acf1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004318ea : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004263e1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000431bfe : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004296cd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004296ed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042970d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000432c6e : mov eax, edi ; pop rbp ; ret
0x000000000042b7c1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427ff4 : mov eax, edx ; pop rbp ; ret
0x0000000000432dd0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000432ce3 : mov eax, esi ; pop rbp ; ret
0x0000000000401ccb : mov ebp, esp ; call rax
0x0000000000401c31 : mov ebp, esp ; ja 0x401c3c ; pop rbp ; ret
0x0000000000404012 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000426c1b : mov ebx, 0xb95f383e ; xchg dh, dh ; ret 0x3dc8
0x000000000041aab1 : mov ebx, 0xc7fffe6c ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000042c25d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040af48 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c1c5 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042c88e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042fa06 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000432d0d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000432cdd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401cc5 : mov edi, 0x637e20 ; mov rbp, rsp ; call rax
0x0000000000401c42 : mov edi, 0x6382e0 ; jmp rax
0x0000000000401c82 : mov edi, 0x6382e0 ; jmp rdx
0x000000000041eeb3 : mov edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x41b179
0x000000000042f4ec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004296c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004296e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429709 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042c261 : mov edi, dword ptr [rcx] ; call rax
0x0000000000420f46 : mov edi, eax ; call 0x42fa28
0x0000000000434067 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000437089 : mov edi, edi ; call qword ptr [rsi]
0x0000000000434066 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041eeb7 : mov esi, dword ptr [rbp - 0x40] ; call 0x41b175
0x0000000000401c80 : mov esi, eax ; mov edi, 0x6382e0 ; jmp rdx
0x0000000000426cfc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042a259 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000427703 : mov esp, 0x61cfa42d ; ret
0x0000000000427745 : mov esp, 0x61cfa52d ; ret
0x0000000000401ca5 : mov fs, word ptr [rsi + 0x23] ; add byte ptr [rcx], al ; ret
0x0000000000409c9c : mov qword ptr [0x638358], rdi ; pop rbp ; ret
0x00000000004155c9 : mov qword ptr [rbp - 0x1d8], rax ; call 0x4018c9
0x0000000000415640 : mov qword ptr [rbp - 0x1f0], rax ; call 0x4018c9
0x0000000000404014 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040b33c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004253de : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404006 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000042f4ef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415747 : mov qword ptr [rsp + 0x10], r10 ; mov al, 0 ; call 0x401a09
0x00000000004157f3 : mov qword ptr [rsp + 0x18], r11 ; mov al, 0 ; call 0x401a09
0x000000000040216f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000427702 : mov r12d, 0x61cfa42d ; ret
0x0000000000427744 : mov r12d, 0x61cfa52d ; ret
0x0000000000420255 : mov r8b, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000420297 : mov r8b, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x00000000004167ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a442 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004164ae : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a2db : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004168cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041619f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f71f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000429a0e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a84f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416889 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ad33 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426cfe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040ae3b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042a25b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004141da : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042acf0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004296cc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004296ec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042970c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000432c6d : mov rax, rdi ; pop rbp ; ret
0x000000000042b7c0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427ff3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cca : mov rbp, rsp ; call rax
0x0000000000401c30 : mov rbp, rsp ; ja 0x401c3d ; pop rbp ; ret
0x0000000000404011 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042c25c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042c1c4 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042c88d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042fa05 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042f4eb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004296c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004296e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429708 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042c260 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000420f45 : mov rdi, rax ; call 0x42fa29
0x000000000041eeb6 : mov rsi, qword ptr [rbp - 0x40] ; call 0x41b176
0x0000000000401c7f : mov rsi, rax ; mov edi, 0x6382e0 ; jmp rdx
0x0000000000426cfb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042a258 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000413fca : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000413fcb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000404250 : mov word ptr [rsi], fs ; add dword ptr [rax], eax ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041171c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000433c9e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040320e : movabs al, byte ptr [0x950f41ffffffff3d] ; ret 0x8445
0x000000000040981d : movabs al, byte ptr [0xffff2c85c7000001] ; jmp rcx
0x0000000000436d44 : movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rax], al ; add al, ch ; xor al, 0xffffffffffffffff ; jmp rsi
0x000000000041542c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x4159a6
0x00000000004331fd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420496 : movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000429dd2 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041c39a : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041aea3 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416d90 : movzx eax, al ; pop rbp ; ret
0x0000000000432dd2 : movzx eax, ax ; pop rbp ; ret
0x000000000042f8ec : movzx eax, bh ; pop rbp ; ret
0x0000000000429326 : movzx eax, cl ; pop rbp ; ret
0x000000000042f8eb : movzx eax, dil ; pop rbp ; ret
0x000000000042bbd2 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042bbd3 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000434088 : nop dword ptr [rax + rax] ; ret
0x00000000004241c5 : or al, 0 ; add al, ch ; ret
0x0000000000413337 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042d4cb : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea053a75
0x000000000041e511 : or byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x000000000041a749 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000414ad7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041f424 : or eax, 0x9db80000 ; ret
0x00000000004143c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432c6b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000432ce1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042d4ca : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea053a76
0x0000000000432c6a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000408e66 : out -0x57, al ; ret 0x89f0
0x0000000000409349 : out -0x57, al ; ret 0xb9f0
0x000000000042f8e9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004330ff : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432f4f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432ce0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000429e79 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042d9a3 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043407c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043407e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413662 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000434080 : pop r14 ; pop r15 ; ret
0x0000000000413664 : pop r15 ; pop rbp ; ret
0x0000000000434082 : pop r15 ; ret
0x0000000000433778 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000409ca0 : pop rax ; and dword ptr [rbx], 0x5d ; ret
0x0000000000436c68 : pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000401ca2 : pop rbp ; mov byte ptr [rip + 0x23668e], 1 ; ret
0x0000000000401c41 : pop rbp ; mov edi, 0x6382e0 ; jmp rax
0x0000000000401c7e : pop rbp ; mov rsi, rax ; mov edi, 0x6382e0 ; jmp rdx
0x000000000043407b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043407f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c35 : pop rbp ; ret
0x0000000000413661 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041333a : pop rbx ; pop rbp ; ret
0x0000000000433a24 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000413665 : pop rdi ; pop rbp ; ret
0x0000000000434083 : pop rdi ; ret
0x0000000000433e6b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000413663 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000434081 : pop rsi ; pop r15 ; ret
0x00000000004157f5 : pop rsp ; and al, 0x18 ; mov al, 0 ; call 0x401a07
0x000000000043407d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d572 : pop rsp ; ret
0x0000000000429e90 : pop rsp ; ret 0xf66
0x0000000000435b44 : pop rsp ; sbb eax, dword ptr [rax] ; add ah, bh ; ret 0xffff
0x000000000041ea90 : popfq ; ret
0x0000000000433839 : popfq ; ret 0xd284
0x0000000000412d5f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000402221 : push qword ptr [rsi] ; jge 0x402212 ; ret
0x00000000004037fe : push qword ptr [rsi] ; jge 0x4037ef ; ret
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000402174 : push rax ; pop rbp ; ret
0x0000000000415d8b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416693 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041aed2 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000041aed6 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x00000000004251ad : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x60
0x000000000042bdd3 : push rbp ; fsubr st(1) ; ret 0
0x0000000000410e98 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041107e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000411124 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000411152 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000411220 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004113b6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000041a43d : push rbp ; inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004284c2 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000403e76 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401cc4 : push rbp ; mov edi, 0x637e20 ; mov rbp, rsp ; call rax
0x0000000000404010 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000420e14 : push rbp ; ret
0x0000000000421d6e : push rbp ; ret 0x893c
0x000000000042d55e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000420259 : push rbx ; ret 0x4589
0x000000000042029b : push rbx ; ret 0x8589
0x000000000042049c : push rbx ; ret 0x8948
0x0000000000401d44 : push rcx ; ret
0x000000000042600e : push rsi ; ret
0x0000000000415749 : push rsp ; and al, 0x10 ; mov al, 0 ; call 0x401a07
0x000000000041dbea : pushfq ; ret
0x0000000000431103 : pushfq ; ret 0x8445
0x0000000000420eda : pushfq ; ret 0xd284
0x000000000042b1e6 : rcl byte ptr [rbp + 0x43], 0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000432cde : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000432d0e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041da8c : rcr eax, cl ; ret
0x00000000004002dd : ret
0x0000000000413819 : ret 0
0x000000000042a8bf : ret 0x10
0x000000000041a6ed : ret 0x108
0x000000000041aeda : ret 0x110
0x000000000041d665 : ret 0x18
0x000000000043392b : ret 0x2030
0x0000000000424ab9 : ret 0x21b9
0x0000000000401b52 : ret 0x2366
0x0000000000401952 : ret 0x2367
0x0000000000401742 : ret 0x2368
0x0000000000429e7a : ret 0x280f
0x000000000041b932 : ret 0x294c
0x0000000000410877 : ret 0x2a
0x0000000000413b96 : ret 0x2c1
0x00000000004173e3 : ret 0x2c22
0x000000000040a7c1 : ret 0x30
0x0000000000426c22 : ret 0x3dc8
0x00000000004257d9 : ret 0x4172
0x000000000040d7da : ret 0x43fa
0x000000000042025b : ret 0x4589
0x0000000000426abd : ret 0x487e
0x000000000041b43f : ret 0x4cb1
0x000000000042aca4 : ret 0x50e9
0x000000000040636c : ret 0x520c
0x000000000041c416 : ret 0x5589
0x0000000000425252 : ret 0x56ad
0x0000000000432a73 : ret 0x5e5
0x00000000004251b1 : ret 0x60
0x000000000041b0ee : ret 0x709b
0x000000000040228b : ret 0x7612
0x0000000000406efa : ret 0x78
0x000000000040a7cf : ret 0x8148
0x000000000042ded4 : ret 0x8348
0x0000000000424a76 : ret 0x83e9
0x0000000000429268 : ret 0x8423
0x0000000000403217 : ret 0x8445
0x000000000040e589 : ret 0x8589
0x000000000040d670 : ret 0x891a
0x000000000040808a : ret 0x8923
0x00000000004332dc : ret 0x8934
0x0000000000421d6f : ret 0x893c
0x0000000000403ca0 : ret 0x8948
0x000000000042558c : ret 0x8972
0x0000000000426418 : ret 0x897e
0x000000000042d1cc : ret 0x897f
0x000000000041d7a0 : ret 0x8999
0x000000000042fd51 : ret 0x89b6
0x00000000004265a7 : ret 0x89c8
0x0000000000408e14 : ret 0x89f0
0x00000000004332b8 : ret 0x8b34
0x00000000004124d5 : ret 0x8b48
0x000000000041709c : ret 0x979f
0x000000000042a82a : ret 0xa3b9
0x000000000041f10d : ret 0xa43c
0x000000000043204b : ret 0xa4be
0x000000000042d509 : ret 0xa6e9
0x0000000000411545 : ret 0xa9b9
0x000000000040cfc2 : ret 0xade6
0x0000000000403886 : ret 0xb0
0x0000000000410cb0 : ret 0xb91a
0x00000000004083d9 : ret 0xb923
0x000000000042be06 : ret 0xb948
0x000000000043000b : ret 0xb9b6
0x000000000040934b : ret 0xb9f0
0x0000000000401c65 : ret 0xc148
0x0000000000423714 : ret 0xc609
0x0000000000403838 : ret 0xd284
0x0000000000412d63 : ret 0xd4e9
0x000000000042d4d2 : ret 0xdde9
0x00000000004070e8 : ret 0xe280
0x00000000004292d2 : ret 0xe923
0x000000000042d567 : ret 0xe97f
0x000000000041f5df : ret 0xe999
0x00000000004124f0 : ret 0xeae8
0x000000000041337c : ret 0xee8
0x000000000042ac05 : ret 0xefe9
0x00000000004245fc : ret 0xf280
0x0000000000411725 : ret 0xf41
0x0000000000429e91 : ret 0xf66
0x0000000000426e9a : ret 0xfdac
0x000000000042bab6 : ret 0xff3
0x0000000000410e9b : ret 0xff9f
0x000000000041283e : ret 0xffa5
0x0000000000411081 : ret 0xffbf
0x0000000000411aeb : ret 0xffc4
0x0000000000411127 : ret 0xffc5
0x0000000000411155 : ret 0xffd5
0x0000000000411223 : ret 0xffd8
0x0000000000411b91 : ret 0xffd9
0x00000000004113b9 : ret 0xffe0
0x000000000041048e : ret 0xfffa
0x0000000000435d09 : ret 0xfffc
0x000000000040760c : ret 0xfffd
0x0000000000415482 : ret 0xfffe
0x000000000040a7d2 : ret 0xffff
0x0000000000403b25 : ret 1
0x00000000004119f0 : ret 2
0x0000000000412e77 : ret 4
0x0000000000414b08 : ret 5
0x0000000000407ef0 : ret 6
0x000000000042d971 : ret 7
0x0000000000413560 : ret 8
0x0000000000422ce5 : ret 9
0x0000000000420138 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000042a142 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b552 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404791 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403855 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004087c1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431405 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042503f : rol dh, 1 ; ret
0x0000000000429322 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000042503e : rol r14b, 1 ; ret
0x000000000040af46 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401c6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c7b ; pop rbp ; ret
0x000000000041aea5 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41af0e ; ret
0x000000000042d6ab : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407c9c : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x407cb1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004259ab : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x4259ba ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427e73 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x427e82 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040478d : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040af47 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416690 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041a652 : sahf ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000418251 : sahf ; ret 0xd284
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000420eef : sal byte ptr [rbp - 0x47], 1 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x00000000004304ce : salc ; ret
0x0000000000421113 : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000401c6e : sar eax, 1 ; jne 0x401c79 ; pop rbp ; ret
0x0000000000435b41 : sar edi, -1 ; pop rsp ; sbb eax, dword ptr [rax] ; add ah, bh ; ret 0xffff
0x0000000000401c6d : sar rax, 1 ; jne 0x401c7a ; pop rbp ; ret
0x000000000042fb53 : sbb al, 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000042fa2e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413ff9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c4ea : sbb cl, bl ; xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x0000000000416273 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041153e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041547c : sbb eax, 0xe8000005 ; sti ; ret 0xfffe
0x0000000000435b45 : sbb eax, dword ptr [rax] ; add ah, bh ; ret 0xffff
0x000000000041c4ed : sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000042802a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042802c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000429eaf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000432d0f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000432ca8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041eeb9 : shr al, -0x4f ; ret 0xffff
0x000000000041ef61 : shr al, 9 ; ret 0xffff
0x0000000000432cdf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000432c68 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000436be5 : sldt word ptr [rax] ; call 0x22436b15
0x0000000000436be4 : sldt word ptr [rax] ; call 0x22436b16
0x0000000000436c65 : sldt word ptr [rax] ; pop rax ; sub bh, bh ; call qword ptr [rdx]
0x0000000000424789 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000435eaa : std ; call qword ptr [rsi]
0x000000000043650a : std ; call rdx
0x0000000000426084 : std ; inc edi ; in al, 0x56 ; ret
0x00000000004362aa : std ; jmp qword ptr [rax]
0x000000000043618a : std ; jmp qword ptr [rdx]
0x000000000043642a : std ; jmp rdx
0x0000000000415481 : sti ; ret 0xfffe
0x000000000040e587 : sub al, 0x38 ; ret 0x8589
0x0000000000411543 : sub al, 0x38 ; ret 0xa9b9
0x000000000042619c : sub al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000436c69 : sub bh, bh ; call qword ptr [rdx]
0x0000000000434109 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000434108 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004363c8 : test al, -0x1f ; std ; jmp qword ptr [rdx]
0x0000000000415dab : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000436508 : test al, -4 ; std ; call rdx
0x000000000041a71c : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431248 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b15b : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042d0d4 : test al, 0x2d ; call 0xffffffff8a05367a
0x000000000042d0d3 : test al, 0x2d ; call 0xffffffff8a05367b
0x000000000042d119 : test al, 0x2d ; jmp 0xffffffff8a0536bf
0x000000000042d118 : test al, 0x2d ; jmp 0xffffffff8a0536c0
0x000000000042d3bc : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042d1c8 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x00000000004141dd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000421d6d : test al, 0x55 ; ret 0x893c
0x000000000042a9db : test al, 0x70 ; ret 0x4589
0x000000000042aca2 : test al, 0x70 ; ret 0x50e9
0x000000000042ac03 : test al, 0x70 ; ret 0xefe9
0x0000000000415c88 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041cb2e : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041bab8 : test byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043408a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000436424 : test byte ptr [rdi], al ; add byte ptr [rax], al ; cwde ; in eax, -3 ; jmp rdx
0x0000000000414ad5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000426e98 : test ch, al ; ret 0xfdac
0x0000000000418984 : test ch, cl ; ret
0x000000000041a34f : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000041a84d : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x000000000041a440 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000041a657 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000041a74d : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000415d90 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000415af8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000406be0 : test dword ptr [rsi + rdi*8 + 0x11b0ffff], edi ; ret
0x00000000004265a5 : test esi, esi ; ret 0x89c8
0x0000000000426e97 : test r13b, r8b ; ret 0xfdac
0x0000000000418983 : test r13b, r9b ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000426c20 : xchg dh, dh ; ret 0x3dc8
0x00000000004265f0 : xchg dh, dh ; ret 0x89c8
0x000000000040b571 : xchg eax, ebp ; ret
0x0000000000403216 : xchg eax, ebp ; ret 0x8445
0x0000000000403a08 : xchg eax, ebp ; ret 0xd284
0x000000000041a437 : xchg eax, ebp ; ret 0xe280
0x0000000000431d7b : xchg eax, ebx ; ret
0x000000000042dfe9 : xchg eax, ebx ; ret 0xd284
0x0000000000402953 : xchg eax, ecx ; cwde ; ret
0x000000000040e56b : xchg eax, ecx ; ret
0x0000000000415525 : xchg eax, edi ; ret
0x000000000041a8be : xchg eax, edi ; ret 0xd284
0x0000000000429e8a : xchg eax, edx ; mov dh, 0 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040e6bb : xchg eax, edx ; ret
0x0000000000415c8e : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000413ef2 : xchg eax, esi ; ret
0x000000000040b553 : xchg eax, esp ; ret
0x0000000000403f08 : xchg eax, esp ; ret 0x8445
0x0000000000403837 : xchg eax, esp ; ret 0xd284
0x00000000004070e7 : xchg eax, esp ; ret 0xe280
0x00000000004245fb : xchg eax, esp ; ret 0xf280
0x0000000000429321 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041c4ec : xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000042802b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000432c6c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000436d49 : xor al, 0xffffffffffffffff ; jmp rsi
0x000000000042d3be : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042d565 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000420ef2 : xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000420ef3 : xor byte ptr [rbx], dh ; in eax, -0x76 ; push rbp ; ret
0x000000000042d1ca : xor dword ptr [rsi], ebx ; ret 0x897f
0x00000000004144f7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b0bd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
