0x000000000042eeb7 : adc al, -0x7f ; ret 0x76c
0x000000000043e24d : adc al, byte ptr [rax] ; add byte ptr [rax], dh ; ret 0xffff
0x000000000043d450 : adc byte ptr [rcx - 3], al ; jmp rsi
0x00000000004318db : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e9dd : adc eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rsi]
0x000000000041038f : adc eax, 0x85c7ffff ; sar dh, -1 ; call qword ptr [rax]
0x0000000000407e02 : adc eax, dword ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000041e969 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e24b : add ah, ah ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; ret 0xffff
0x000000000043d44b : add ah, ah ; add al, 0 ; add byte ptr [rax], dl ; std ; jmp rsi
0x000000000043d44d : add al, 0 ; add byte ptr [rax], dl ; std ; jmp rsi
0x0000000000407e03 : add al, 0 ; add cl, ch ; ret 1
0x0000000000411481 : add al, 0x37 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043d46c : add al, 5 ; add byte ptr [rax], al ; loopne 0x43d4c1 ; std ; jmp rcx
0x000000000043d46f : add al, ah ; std ; jmp rcx
0x000000000040c972 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004311d3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409289 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043742e : add al, ch ; mov esp, 0xb9fffca1 ; ret
0x00000000004055a5 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000407758 : add al, ch ; ret 0xff9f
0x0000000000405a88 : add al, ch ; ret 0xffbe
0x000000000040cf28 : add al, ch ; ret 7
0x000000000040d033 : add bh, al ; call 0xffffffffba631bfc
0x000000000040b327 : add bh, al ; fadd dword ptr [r8] ; ret 0xe986
0x000000000040bc15 : add bh, al ; in al, dx ; push rsi ; ret
0x000000000040d5c6 : add bh, al ; loopne 0x40d61c ; xor eax, edx ; ret 0x9e9
0x000000000040d667 : add bh, al ; loopne 0x40d6bd ; xor eax, edx ; ret 0x68e9
0x00000000004315ce : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000431336 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042ca0c : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x000000000042bee6 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042ba3c : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042bc77 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000042f89c : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rcx
0x0000000000429d3d : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000042bd8d : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000042f5c2 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042bdd2 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000042fa98 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004296e0 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000429ac2 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000042c533 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042d872 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdx
0x000000000042c7a4 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000043abff : add bl, dh ; ret
0x000000000042b1a3 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043d46b : add byte ptr [rax + 0x48e00000], al ; std ; jmp rcx
0x000000000043d48b : add byte ptr [rax + 0x4cb00000], ah ; std ; call qword ptr [rax]
0x000000000043d5cf : add byte ptr [rax + 0x68], dh ; std ; call rdx
0x00000000004052fc : add byte ptr [rax - 0x75], cl ; jge 0x4052c8 ; call 0x4015c7
0x000000000041f91d : add byte ptr [rax - 0x77], cl ; jge 0x41f920 ; pop rbp ; ret
0x000000000040d4bc : add byte ptr [rax - 0x77], cl ; push rbp ; call 0xffffffffff7a92dc
0x000000000041153c : add byte ptr [rax - 0x77], cl ; push rbp ; call 0xffffffffff7ad35c
0x000000000040523e : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040519d : add byte ptr [rax - 0x77], cl ; ret 0xeae8
0x000000000043d44e : add byte ptr [rax], al ; adc byte ptr [rcx - 3], al ; jmp rsi
0x000000000043e249 : add byte ptr [rax], al ; add ah, ah ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; ret 0xffff
0x000000000043d46a : add byte ptr [rax], al ; add al, 5 ; add byte ptr [rax], al ; loopne 0x43d4c3 ; std ; jmp rcx
0x000000000040bc13 : add byte ptr [rax], al ; add bh, al ; in al, dx ; push rsi ; ret
0x000000000040d665 : add byte ptr [rax], al ; add bh, al ; loopne 0x40d6bf ; xor eax, edx ; ret 0x68e9
0x00000000004315cc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000431334 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042bee4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042ceb8 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000042f5c0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x00000000004296de : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000043abfd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041f91b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x41f922 ; pop rbp ; ret
0x000000000040523c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040519b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xeae8
0x000000000043abfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000043c16a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43bf
0x00000000004004ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000406054 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000405210 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040513e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d953 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f91a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043abfc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043c16c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43bf
0x000000000043c51c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43c4
0x00000000004004bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040a1d0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2dd045], cl ; ret 0x8986
0x000000000041e6ae : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b6c5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de845], cl ; ret
0x0000000000434367 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x000000000043256d : add byte ptr [rax], al ; add byte ptr [rbx - 0x29d27bbb], cl ; ret
0x0000000000432acc : add byte ptr [rax], al ; add byte ptr [rbx - 0x53d27bbb], cl ; scasb al, byte ptr [rdi] ; ret 0x89e6
0x000000000043a2e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000043a265 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000433778 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c79c45], cl ; xchg eax, esp ; ret 0x987b
0x00000000004396fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040550c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d561 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000406056 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041551a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004057a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405534 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004165bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405212 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b0e6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000407414 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004314ca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041659f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405140 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439bad : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041e96b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414630 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411550 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041440b : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c472 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d955 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401593 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043d48a : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; mov al, 0x4c ; std ; call qword ptr [rax]
0x000000000043d50e : add byte ptr [rax], al ; and byte ptr [rcx - 3], ah ; call qword ptr [rsi]
0x000000000043d2ee : add byte ptr [rax], al ; and dh, bh ; cld ; call rcx
0x000000000043742d : add byte ptr [rax], al ; call 0x4015f8
0x000000000043dc4a : add byte ptr [rax], al ; in al, 0xc ; add byte ptr [rax], al ; push rax ; and al, 0xffffffffffffffff ; call rsi
0x000000000043d44a : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; adc byte ptr [rcx - 3], al ; jmp rsi
0x00000000004016e9 : add byte ptr [rax], al ; jmp 0x4015a9
0x0000000000430021 : add byte ptr [rax], al ; jmp 0x430099
0x000000000043331a : add byte ptr [rax], al ; jmp 0x433e92
0x0000000000439ba9 : add byte ptr [rax], al ; jmp 0x439bb8
0x000000000043a819 : add byte ptr [rax], al ; jmp 0x43a828
0x000000000043d5ce : add byte ptr [rax], al ; jo 0x43d63f ; std ; call rdx
0x000000000043d46e : add byte ptr [rax], al ; loopne 0x43d4bf ; std ; jmp rcx
0x000000000043d48e : add byte ptr [rax], al ; mov al, 0x4c ; std ; call qword ptr [rax]
0x000000000040bf3d : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000434069 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000043aa27 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004301bf : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000040d4bb : add byte ptr [rax], al ; mov qword ptr [rbp - 0x18], rdx ; movsx edi, byte ptr [rcx] ; call rax
0x000000000041f91c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000413c79 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000415e89 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004052fb : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4015c8
0x000000000043d50a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x61200000 ; std ; call qword ptr [rsi]
0x000000000043dc2e : add byte ptr [rax], al ; nop ; and edi, edi ; call rsi
0x000000000043daaa : add byte ptr [rax], al ; or r8d, dword ptr [rax] ; add byte ptr [rax], dl ; sbb edi, esi ; jmp qword ptr [rdx]
0x000000000040637a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e6af : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041e388 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043dc4e : add byte ptr [rax], al ; push rax ; and al, 0xffffffffffffffff ; call rsi
0x000000000043abfe : add byte ptr [rax], al ; ret
0x000000000043c16e : add byte ptr [rax], al ; ret 0x43bf
0x000000000043c51e : add byte ptr [rax], al ; ret 0x43c4
0x00000000004004be : add byte ptr [rax], al ; ret 1
0x000000000043d98f : add byte ptr [rax], al ; sbb bh, dh ; jmp qword ptr [rax]
0x000000000043d56f : add byte ptr [rax], al ; std ; call qword ptr [rsi]
0x000000000043d2ea : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; and dh, bh ; cld ; call rcx
0x000000000043e24f : add byte ptr [rax], dh ; ret 0xffff
0x000000000043d86f : add byte ptr [rax], dh ; sbb dh, bh ; jmp qword ptr [rdx]
0x000000000043daaf : add byte ptr [rax], dl ; sbb edi, esi ; jmp qword ptr [rdx]
0x000000000043d44f : add byte ptr [rax], dl ; std ; jmp rsi
0x000000000043d50b : add byte ptr [rbp + rax + 0x61200000], ah ; std ; call qword ptr [rsi]
0x000000000040a1d2 : add byte ptr [rbx + 0x2dd045], cl ; ret 0x8986
0x000000000040efb2 : add byte ptr [rbx + 0x382dc045], cl ; or al, bh ; ret
0x000000000040f255 : add byte ptr [rbx + 0x392dc045], cl ; or al, bh ; ret
0x000000000041e6b0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d268 : add byte ptr [rbx + 0x492ddc45], cl ; xor eax, edx ; ret 0x4589
0x000000000040d2aa : add byte ptr [rbx + 0x4a2ddc45], cl ; xor eax, edx ; ret 0x4589
0x000000000040b6c7 : add byte ptr [rbx + 0x562de845], cl ; ret
0x000000000041e389 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415500 : add byte ptr [rbx + 0x77e8ac7d], cl ; ret
0x0000000000414a62 : add byte ptr [rbx + 0xc2d9045], cl ; test al, 0x58 ; ret 0x8589
0x000000000040a529 : add byte ptr [rbx + 0xc2dd045], cl ; insb byte ptr [rdi], dx ; ret
0x0000000000414aad : add byte ptr [rbx + 0xd2d9045], cl ; test al, 0x58 ; ret 0x8589
0x000000000040a574 : add byte ptr [rbx + 0xd2dd045], cl ; insb byte ptr [rdi], dx ; ret
0x000000000043d2eb : add byte ptr [rbx + rax - 0x1e00000], al ; cld ; call rcx
0x000000000043daab : add byte ptr [rbx + rcx], al ; add byte ptr [rax], dl ; sbb edi, esi ; jmp qword ptr [rdx]
0x0000000000434369 : add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x0000000000429be9 : add byte ptr [rbx - 0x2436b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x0000000000433127 : add byte ptr [rbx - 0x28d27bbb], cl ; ret
0x000000000043256f : add byte ptr [rbx - 0x29d27bbb], cl ; ret
0x0000000000432ace : add byte ptr [rbx - 0x53d27bbb], cl ; scasb al, byte ptr [rdi] ; ret 0x89e6
0x0000000000432a83 : add byte ptr [rbx - 0x54d27bbb], cl ; scasb al, byte ptr [rdi] ; ret 0x89e6
0x000000000043a2eb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000043a267 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040631d : add byte ptr [rbx - 0x7134b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a190 : add byte ptr [rbx - 0xd22fbb], cl ; ret 0x8986
0x000000000043c167 : add byte ptr [rbx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43bf
0x000000000043377a : add byte ptr [rcx + 0x45c79c45], cl ; xchg eax, esp ; ret 0x987b
0x0000000000439700 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040550e : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d563 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042efd0 : add byte ptr [rcx - 0x7a383fbb], cl ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000042eb7e : add byte ptr [rcx - 0x7a3847bb], cl ; push rsp ; idiv edi ; call rdx
0x0000000000408153 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000409748 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000407412 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040ea1b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406aa1 : add byte ptr [rcx], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ab8 : add byte ptr [rcx], al ; ret
0x0000000000406058 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041551c : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004057a7 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405536 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004165bf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405214 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b0e8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000407416 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004314cc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004165a1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405142 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043d5cb : add byte ptr [rsi + rax], ah ; add byte ptr [rax + 0x68], dh ; std ; call rdx
0x000000000043c517 : add byte ptr [rsp + rax*8 + 0x43], bh ; add byte ptr [rax], al ; ret 0x43c4
0x000000000043331b : add cl, ch ; push -0x47fffff5 ; xlatb ; ret
0x00000000004086f5 : add cl, ch ; ret
0x0000000000439baf : add cl, ch ; ret 0
0x0000000000407e05 : add cl, ch ; ret 1
0x0000000000410607 : add cl, ch ; ret 7
0x000000000040cf26 : add dword ptr [rax], eax ; add al, ch ; ret 7
0x000000000040d5c4 : add dword ptr [rax], eax ; add bh, al ; loopne 0x40d61e ; xor eax, edx ; ret 0x9e9
0x000000000041e925 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004301bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000041f04a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000433125 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x28d27bbb], cl ; ret
0x000000000040473d : add dword ptr [rcx - 0x47], eax ; ret
0x0000000000412e70 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439ac1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401ab4 : add eax, 0x23d8be ; add ebx, esi ; ret
0x000000000040c96f : add eax, 0x2e9b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411031 : add eax, 0x458b48e0 ; call 0x4903998b
0x0000000000411177 : add eax, 0x458b48e0 ; call 0x49039ad1
0x000000000043d46d : add eax, 0x48e00000 ; std ; jmp rcx
0x000000000043d48d : add eax, 0x4cb00000 ; std ; call qword ptr [rax]
0x00000000004360ef : add eax, 0x53b80000 ; jrcxz 0x43615f ; ret 0x8fb9
0x000000000043d50d : add eax, 0x61200000 ; std ; call qword ptr [rsi]
0x000000000042fa96 : add eax, 0x85c70000 ; push rsp ; idiv edi ; jmp qword ptr [rdx]
0x0000000000434067 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000433747 : add eax, 0xb9fc5a78 ; ret 0x987b
0x000000000043742c : add eax, dword ptr [rax] ; add al, ch ; mov esp, 0xb9fffca1 ; ret
0x00000000004154fe : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x77e8ac7d], cl ; ret
0x000000000040e4fa : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401a7b : add eax, edx ; sar rax, 1 ; jne 0x401a8c ; pop rbp ; ret
0x0000000000401ab9 : add ebx, esi ; ret
0x000000000042be20 : add edi, eax ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000406e01 : add esp, 0x10 ; pop rbp ; ret
0x000000000040ea19 : add esp, 0x100 ; pop rbp ; ret
0x000000000041f047 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004097d9 : add esp, 0x120 ; pop rbp ; ret
0x0000000000412b7d : add esp, 0x150 ; pop rbp ; ret
0x000000000040857c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041052c : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000413e2d : add esp, 0x20 ; pop rbp ; ret
0x000000000042ffad : add esp, 0x2068 ; pop rbx ; pop rbp ; ret
0x000000000041589a : add esp, 0x250 ; pop rbp ; ret
0x000000000040b683 : add esp, 0x260 ; pop rbp ; ret
0x000000000041000d : add esp, 0x270 ; pop rbp ; ret
0x0000000000439a03 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000043775a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000411484 : add esp, 0x30 ; pop rbp ; ret
0x0000000000433e81 : add esp, 0x340 ; pop rbp ; ret
0x00000000004366d5 : add esp, 0x380 ; pop rbp ; ret
0x0000000000408ecf : add esp, 0x40 ; pop rbp ; ret
0x0000000000406aa4 : add esp, 0x50 ; pop rbp ; ret
0x000000000040d958 : add esp, 0x60 ; pop rbp ; ret
0x0000000000407134 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406376 : add esp, 0x720 ; pop rbp ; ret
0x000000000040c276 : add esp, 0x80 ; pop rbp ; ret
0x000000000040a12b : add esp, 0x88 ; pop rbp ; ret
0x0000000000406d96 : add esp, 0x90 ; pop rbp ; ret
0x0000000000415c4e : add esp, 0xa0 ; pop rbp ; ret
0x000000000040e1bf : add esp, 0xb0 ; pop rbp ; ret
0x000000000040bc61 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041e384 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004068ef : add esp, 0xd0 ; pop rbp ; ret
0x0000000000408d27 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401596 : add esp, 8 ; ret
0x000000000042f449 : add esp, dword ptr [rdi*8 + 0x5485c7ff] ; idiv edi ; jmp rax
0x0000000000411030 : add rax, 0x458b48e0 ; call 0x4903998c
0x0000000000411176 : add rax, 0x458b48e0 ; call 0x49039ad2
0x0000000000401a7a : add rax, rdx ; sar rax, 1 ; jne 0x401a8d ; pop rbp ; ret
0x0000000000406e00 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea18 : add rsp, 0x100 ; pop rbp ; ret
0x000000000041f046 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004097d8 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000412b7c : add rsp, 0x150 ; pop rbp ; ret
0x000000000040857b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041052b : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000413e2c : add rsp, 0x20 ; pop rbp ; ret
0x000000000042ffac : add rsp, 0x2068 ; pop rbx ; pop rbp ; ret
0x0000000000415899 : add rsp, 0x250 ; pop rbp ; ret
0x000000000040b682 : add rsp, 0x260 ; pop rbp ; ret
0x000000000041000c : add rsp, 0x270 ; pop rbp ; ret
0x0000000000439a02 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000437759 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000411483 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000433e80 : add rsp, 0x340 ; pop rbp ; ret
0x00000000004366d4 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000408ece : add rsp, 0x40 ; pop rbp ; ret
0x0000000000406aa3 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040d957 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407133 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406375 : add rsp, 0x720 ; pop rbp ; ret
0x000000000040c275 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a12a : add rsp, 0x88 ; pop rbp ; ret
0x0000000000406d95 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000415c4d : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e1be : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040bc60 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041e383 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004068ee : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000408d26 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401595 : add rsp, 8 ; ret
0x000000000042db92 : and al, 0 ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x0000000000434d1b : and al, 0xffffffffffffffac ; ret 0x89cc
0x00000000004362b4 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x000000000042f44a : and al, 0xfffffffffffffffd ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000043dc51 : and al, 0xffffffffffffffff ; call rsi
0x0000000000439ac0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043d48c : and al, 5 ; add byte ptr [rax], al ; mov al, 0x4c ; std ; call qword ptr [rax]
0x000000000042ffb0 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043d510 : and byte ptr [rcx - 3], ah ; call qword ptr [rsi]
0x00000000004097db : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406378 : and byte ptr [rdi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043d2f0 : and dh, bh ; cld ; call rcx
0x000000000040d778 : and dl, ch ; ret
0x000000000042db91 : and dword ptr [rax + rax], esp ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000040d5b4 : and eax, 0x63f264 ; call rax
0x000000000040dc4e : and eax, 0x63f424 ; pop rbp ; ret
0x000000000041363f : and eax, 0x63f470 ; pop rbp ; ret
0x0000000000413663 : and eax, 0x63f478 ; pop rbp ; ret
0x0000000000433b14 : and eax, 0xb9b916df ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000429568 : and eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x0000000000401ab7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000043dc31 : and edi, edi ; call rsi
0x000000000040d7ba : and edx, ebp ; ret
0x0000000000406374 : call 0x2104e4ca
0x0000000000405301 : call 0x4015c2
0x000000000043742f : call 0x4015f6
0x00000000004373fc : call 0x401676
0x0000000000405718 : call 0x401952
0x0000000000415702 : call 0x4019f2
0x0000000000407710 : call 0x413972
0x000000000042f72b : call 0x47fcb9b9
0x0000000000411036 : call 0x49039986
0x0000000000411035 : call 0x49039987
0x0000000000411036 : call 0x49039989
0x0000000000411035 : call 0x4903998a
0x000000000041117c : call 0x49039acc
0x000000000041117b : call 0x49039acd
0x000000000041117c : call 0x49039acf
0x000000000041117b : call 0x49039ad0
0x000000000040d4b2 : call 0x490b5e05
0x000000000040d4b1 : call 0x490b5e06
0x0000000000411532 : call 0x490b9e85
0x0000000000411531 : call 0x490b9e86
0x00000000004249b8 : call 0xffffffff85cc0c46
0x0000000000425c18 : call 0xffffffff85cc1ea6
0x000000000040d036 : call 0xffffffffba631bf9
0x000000000040d035 : call 0xffffffffba631bfa
0x000000000040bd8f : call 0xffffffffc3a0c8c5
0x000000000040bd8e : call 0xffffffffc3a0c8c6
0x000000000041e3c9 : call 0xffffffffe9046d19
0x000000000041e3c8 : call 0xffffffffe9046d1a
0x0000000000419e0d : call 0xfffffffff73a23a4
0x00000000004394c5 : call 0xffffffffff481a9a
0x000000000041c939 : call 0xffffffffff564f0b
0x000000000041c938 : call 0xffffffffff564f0c
0x000000000041c939 : call 0xffffffffff564f0d
0x000000000041c938 : call 0xffffffffff564f0e
0x000000000040d4c0 : call 0xffffffffff7a92d8
0x0000000000411540 : call 0xffffffffff7ad358
0x000000000043abd9 : call qword ptr [r12 + rbx*8]
0x000000000042ee80 : call qword ptr [rax - 0x163dcb52]
0x0000000000408c63 : call qword ptr [rax]
0x000000000041d955 : call qword ptr [rcx]
0x000000000042be26 : call qword ptr [rdi]
0x000000000041b8f3 : call qword ptr [rdx]
0x000000000041b88f : call qword ptr [rsi]
0x000000000043abda : call qword ptr [rsp + rbx*8]
0x0000000000401add : call rax
0x00000000004051e6 : call rbx
0x000000000042f8a2 : call rcx
0x000000000042af72 : call rdi
0x000000000040b091 : call rdx
0x000000000042d324 : call rsi
0x0000000000429d43 : call rsp
0x000000000042f088 : cdq ; or ebp, dword ptr [rdi - 0x5bc746ce] ; ret
0x000000000043a26c : cdq ; ret
0x000000000043008a : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438312 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000436bf0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401a7f : clc ; jne 0x401a88 ; pop rbp ; ret
0x0000000000412146 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000406e17 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f8bb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041f8fb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041f8db : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406e1b : clc ; pop rbp ; ret
0x000000000040efb9 : clc ; ret
0x00000000004075b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043d2f2 : cld ; call rcx
0x000000000041c58d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000438acd : cmp al, -0x2a ; ret
0x000000000043dd91 : cmp al, -1 ; call rdx
0x000000000042c531 : cmp al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042c7a2 : cmp byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000040efb7 : cmp byte ptr [rax], cl ; clc ; ret
0x000000000040c59b : cmp cl, byte ptr [rcx - 0x7bf043bb] ; ret 0
0x000000000040f25a : cmp dword ptr [rax], ecx ; clc ; ret
0x0000000000401a3d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a50 ; pop rbp ; ret
0x000000000041e864 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000439d6b : cwde ; js 0x439d15 ; ret
0x0000000000439db2 : cwde ; js 0x439d5c ; ret
0x0000000000439dec : cwde ; js 0x439d96 ; ret
0x0000000000429856 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000406323 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042bf5c : dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000041c732 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041ca3d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000408497 : dec dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000401bb1 : dec dword ptr [rcx + 0x58e981c1] ; ret
0x000000000042efaa : dec dword ptr [rcx - 0x7a3843bb] ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000042eb58 : dec dword ptr [rcx - 0x7a384bbb] ; push rsp ; idiv edi ; call rdx
0x000000000042dae7 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041df44 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000414be7 : dec dword ptr [rdi] ; test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000040e4f6 : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffd], cl ; ret 1
0x000000000041187d : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffe], ah ; ret 1
0x0000000000407dff : dec dword ptr [rdi] ; test byte ptr [rbx], dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000409285 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffe], bh ; ret 1
0x000000000040ac8a : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000430313 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040c237 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000412783 : enter -0x53d3, -0x39 ; ret
0x00000000004122b0 : enter -0x54d3, -0x39 ; ret
0x000000000042f1ad : enter -0x7a39, 0x54 ; idiv edi ; jmp rdi
0x000000000043927b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040b329 : fadd dword ptr [r8] ; ret 0xe986
0x0000000000406765 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000437d84 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b32a : fadd dword ptr [rax] ; ret 0xe986
0x0000000000411293 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004129a5 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f879 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409714 : fcomp qword ptr [r15 - 0x1639f9e7] ; ret 0
0x0000000000409715 : fcomp qword ptr [rdi - 0x1639f9e7] ; ret 0
0x000000000042ba72 : ficomp dword ptr [rbp - 3] ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000431ed4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000043abdc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ab6 : fsub dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x000000000040e858 : fsub st(1), st(0) ; ret
0x000000000040b5c3 : fsubr st(1) ; ret 0
0x0000000000433124 : hlt ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x28d27bbb], cl ; ret
0x0000000000407589 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004378bc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a50 : hlt ; pop rbp ; mov edi, 0x63f310 ; jmp rax
0x000000000042e94a : idiv bh ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042ee7e : idiv edi ; call qword ptr [rax - 0x163dcb52]
0x000000000042f8d8 : idiv edi ; call qword ptr [rax]
0x000000000042ca10 : idiv edi ; call qword ptr [rcx]
0x000000000042be24 : idiv edi ; call qword ptr [rdi]
0x0000000000429d85 : idiv edi ; call qword ptr [rdx]
0x000000000042ba40 : idiv edi ; call qword ptr [rsi]
0x000000000042bc7b : idiv edi ; call rbx
0x000000000042f8a0 : idiv edi ; call rcx
0x000000000042af70 : idiv edi ; call rdi
0x000000000042eb5f : idiv edi ; call rdx
0x000000000042d322 : idiv edi ; call rsi
0x0000000000429d41 : idiv edi ; call rsp
0x000000000042e158 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e834 : idiv edi ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042fab6 : idiv edi ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042bd91 : idiv edi ; jmp qword ptr [rax]
0x000000000042f5ac : idiv edi ; jmp qword ptr [rcx]
0x000000000042bdd6 : idiv edi ; jmp qword ptr [rdi]
0x000000000042fa9c : idiv edi ; jmp qword ptr [rdx]
0x00000000004296e4 : idiv edi ; jmp qword ptr [rsi]
0x0000000000429ac6 : idiv edi ; jmp rax
0x000000000042c537 : idiv edi ; jmp rcx
0x000000000042f1b1 : idiv edi ; jmp rdi
0x000000000042d876 : idiv edi ; jmp rdx
0x000000000042c7a8 : idiv edi ; jmp rsp
0x0000000000430c6e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000041bee9 : in al, -0x7f ; ret 0xff9f
0x000000000041c0cf : in al, -0x7f ; ret 0xffbf
0x000000000041c175 : in al, -0x7f ; ret 0xffc5
0x000000000041c1a3 : in al, -0x7f ; ret 0xffd5
0x000000000041c271 : in al, -0x7f ; ret 0xffd8
0x000000000041c407 : in al, -0x7f ; ret 0xffe0
0x000000000040db7e : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424a28 : in al, 0x16 ; ret 0x8589
0x000000000042a21c : in al, 0x16 ; ret 0x8bb9
0x000000000042d801 : in al, 0x16 ; ret 0xade9
0x000000000040d776 : in al, 0x2d ; and dl, ch ; ret
0x000000000040d7b8 : in al, 0x2d ; and edx, ebp ; ret
0x000000000040cc50 : in al, 0x2d ; jmp rcx
0x000000000040fd78 : in al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043dc4c : in al, 0xc ; add byte ptr [rax], al ; push rax ; and al, 0xffffffffffffffff ; call rsi
0x00000000004101b9 : in al, 1 ; ret 0x5589
0x0000000000411016 : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043d44c : in al, 4 ; add byte ptr [rax], al ; adc byte ptr [rcx - 3], al ; jmp rsi
0x0000000000415898 : in al, dx ; add rsp, 0x250 ; pop rbp ; ret
0x000000000043413f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000437c1a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040d8a0 : in al, dx ; and edx, ebp ; ret
0x000000000040be84 : in al, dx ; jmp 0x40bf4d
0x0000000000415f9a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043406d : in al, dx ; pop rbp ; ret
0x000000000040bc01 : in al, dx ; push rsi ; ret
0x000000000043a46b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040802b : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041d55f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004295a8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042b6c3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041bb21 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b0e4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041e10a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410420 : inc dword ptr [rcx + 0xf] ; lahf ; ret 0x8445
0x000000000040474d : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000429bef : inc dword ptr [rcx] ; ret 0x9589
0x000000000040d89d : inc edi ; in al, dx ; and edx, ebp ; ret
0x000000000041f018 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000429d81 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdx]
0x000000000042ba75 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042ca69 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000042af6c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdi
0x000000000042d31e : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsi
0x000000000042f5a8 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042ff95 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000042f44c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000042e94c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042c7c9 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000040a530 : insb byte ptr [rdi], dx ; ret
0x00000000004249b7 : insd dword ptr [rdi], dx ; call 0xffffffff85cc0c47
0x00000000004186bf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041bcff : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401a43 : ja 0x401a4a ; pop rbp ; ret
0x00000000004338a2 : jb 0x433861 ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000433acd : jb 0x433a8c ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000401a4f : je 0x401a4d ; pop rbp ; mov edi, 0x63f310 ; jmp rax
0x000000000040555b : jg 0x40556f ; lahf ; ret 0xd284
0x00000000004056cd : jg 0x4056e1 ; lahf ; ret 0xd284
0x00000000004057cc : jg 0x4057e0 ; lahf ; ret 0xd284
0x0000000000405a3e : jg 0x405a52 ; lahf ; ret 0xd284
0x0000000000405b79 : jg 0x405b8d ; lahf ; ret 0xd284
0x0000000000406a3f : jg 0x406a53 ; sahf ; ret 0xd284
0x0000000000406d21 : jg 0x406d35 ; lahf ; ret 0xd284
0x00000000004155db : jg 0x4155ef ; xchg eax, esp ; ret 0xd284
0x000000000041574e : jg 0x415762 ; xchg eax, esp ; ret 0xd284
0x0000000000415806 : jg 0x41581a ; xchg eax, esp ; ret 0xd284
0x00000000004052ff : jge 0x4052c5 ; call 0x4015c4
0x0000000000406e16 : jge 0x406e17 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f8ba : jge 0x41f8bb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041f8da : jge 0x41f8db ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041f8fa : jge 0x41f8fb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041f920 : jge 0x41f91d ; pop rbp ; ret
0x0000000000430788 : jge 0x43079f ; ret
0x0000000000430c73 : jge 0x430c8a ; ret
0x000000000043a9d9 : jge 0x43a9d3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043065c : jl 0x430673 ; ret
0x00000000004016eb : jmp 0x4015a7
0x0000000000404cf0 : jmp 0x406384
0x0000000000404b88 : jmp 0x406386
0x000000000040b2f2 : jmp 0x40b693
0x000000000040be85 : jmp 0x40bf4c
0x000000000040cf24 : jmp 0x40d108
0x0000000000411c79 : jmp 0x411d47
0x0000000000415468 : jmp 0x4158a8
0x000000000041b6ad : jmp 0x41e393
0x000000000041e141 : jmp 0x41e395
0x0000000000425533 : jmp 0x4254f9
0x0000000000429594 : jmp 0x42955a
0x000000000042aa7b : jmp 0x42ffbc
0x000000000042a3ee : jmp 0x42ffbd
0x000000000042d0e5 : jmp 0x42ffbe
0x0000000000430023 : jmp 0x430097
0x0000000000430c6d : jmp 0x4311e5
0x0000000000433a9f : jmp 0x433e8f
0x000000000043331c : jmp 0x433e90
0x00000000004363d1 : jmp 0x4366e3
0x0000000000439bab : jmp 0x439bb6
0x000000000043a81b : jmp 0x43a826
0x000000000040dc86 : jmp 0x7002f0e9
0x0000000000424a27 : jmp 0xffffffff8a046113
0x000000000043834e : jmp 0xffffffffb705871a
0x0000000000439d6a : jmp 0xffffffffc3e8160b
0x000000000041b7cd : jmp qword ptr [rax]
0x000000000040a195 : jmp qword ptr [rbp - 0x3e]
0x000000000041c93f : jmp qword ptr [rbx]
0x000000000041e310 : jmp qword ptr [rcx]
0x0000000000406088 : jmp qword ptr [rdi]
0x000000000041e865 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000419e16 : jmp qword ptr [rdx]
0x000000000041c8cf : jmp qword ptr [rsi]
0x0000000000401a57 : jmp rax
0x000000000041d462 : jmp rbx
0x000000000040cc52 : jmp rcx
0x000000000041dafe : jmp rdi
0x0000000000401a97 : jmp rdx
0x000000000043d453 : jmp rsi
0x000000000040614b : jmp rsp
0x0000000000401a80 : jne 0x401a87 ; pop rbp ; ret
0x000000000041f016 : jne 0x41f01f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000404434 : jno 0x404470 ; ret 0x8963
0x0000000000405106 : jno 0x405142 ; ret 0xb963
0x0000000000401e24 : jo 0x401e60 ; ret 0x8963
0x0000000000407136 : jo 0x407197 ; ret
0x000000000041000f : jo 0x410018 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f231 : jo 0x41f292 ; ret
0x000000000041f354 : jo 0x41f3b5 ; ret
0x000000000041f48e : jo 0x41f4ef ; ret
0x000000000041f8df : jo 0x41f940 ; ret
0x000000000041f8de : jo 0x41f941 ; ret
0x0000000000431f7c : jo 0x431fdd ; ret
0x0000000000436bf4 : jo 0x436c55 ; ret
0x000000000043d5d0 : jo 0x43d63d ; std ; call rdx
0x0000000000433911 : jrcxz 0x4338d0 ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000433bab : jrcxz 0x433b6a ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000434be8 : jrcxz 0x434c4e ; ret 0x8589
0x0000000000434c3c : jrcxz 0x434ca2 ; ret 0x8589
0x00000000004360f4 : jrcxz 0x43615a ; ret 0x8fb9
0x000000000043631f : jrcxz 0x436385 ; ret 0x8fb9
0x000000000041e386 : js 0x41e39a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000439d6c : js 0x439d14 ; ret
0x0000000000439db3 : js 0x439d5b ; ret
0x0000000000439ded : js 0x439d95 ; ret
0x0000000000410423 : lahf ; ret 0x8445
0x000000000040555d : lahf ; ret 0xd284
0x000000000042f5d9 : leave ; ret 0x48c4
0x00000000004248d8 : leave ; ret 0x89c4
0x000000000042be66 : ljmp ptr [rip + 0xf000000] ; xchg eax, ebp ; ret 0xd284
0x0000000000434cc8 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x00000000004362b5 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000432ad3 : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x89e6
0x000000000043387f : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000425c33 : loop 0x425bdc ; xlatb ; ret 0x8589
0x000000000042c558 : loop 0x42c501 ; xlatb ; ret 0x8d48
0x000000000042499b : loope 0x424944 ; xlatb ; ret 0x8589
0x0000000000409712 : loopne 0x4096e4 ; fcomp qword ptr [r15 - 0x1639f9e7] ; ret 0
0x000000000040d5c9 : loopne 0x40d619 ; xor eax, edx ; ret 0x9e9
0x000000000040d5c8 : loopne 0x40d61a ; xor eax, edx ; ret 0x9e9
0x000000000040d66a : loopne 0x40d6ba ; xor eax, edx ; ret 0x68e9
0x000000000040d669 : loopne 0x40d6bb ; xor eax, edx ; ret 0x68e9
0x000000000040db8d : loopne 0x40db7a ; ret 0
0x000000000040db8c : loopne 0x40db7b ; ret 0
0x0000000000413e2b : loopne 0x413e7b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000413e2a : loopne 0x413e7c ; add esp, 0x20 ; pop rbp ; ret
0x000000000041635e : loopne 0x416367 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043000f : loopne 0x430040 ; ret
0x000000000043000e : loopne 0x430041 ; ret
0x0000000000431cc0 : loopne 0x431cc9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004320cc : loopne 0x43211c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004320cb : loopne 0x43211d ; add esp, 0x40 ; pop rbp ; ret
0x000000000043775c : loopne 0x437765 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043d470 : loopne 0x43d4bd ; std ; jmp rcx
0x000000000042eb5b : mov ah, -0x39 ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x0000000000407760 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000410601 : mov ah, 0xf ; test byte ptr [rbp - 0x16fffff8], dh ; ret 7
0x000000000043949a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e1c1 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004373fa : mov al, 0 ; call 0x401678
0x0000000000405716 : mov al, 0 ; call 0x401954
0x000000000041651b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043d490 : mov al, 0x4c ; std ; call qword ptr [rax]
0x000000000041052e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439abd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000439c6d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043a469 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004134e5 : mov bh, -0x47 ; ret
0x0000000000424980 : mov bl, 0x5a ; ret
0x0000000000413661 : mov byte ptr [0x63f478], al ; pop rbp ; ret
0x0000000000405a15 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041ded8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a12d : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412147 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000411480 : mov byte ptr [rdi + rsi], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401ab3 : mov byte ptr [rip + 0x23d8be], 1 ; ret
0x00000000004030bc : mov cl, 0x14 ; ret
0x0000000000412e72 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439ac3 : mov dh, -0x40 ; pop rbp ; ret
0x000000000043a595 : mov dl, -0x47 ; ret
0x0000000000403110 : mov dl, 0x14 ; ret
0x000000000040dc4c : mov dword ptr [0x63f424], ecx ; pop rbp ; ret
0x000000000041363d : mov dword ptr [0x63f470], edi ; pop rbp ; ret
0x00000000004161d7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000415f9b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041610f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000406dfd : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cf21 : mov dword ptr [rbp - 0x18], eax ; jmp 0x40d10b
0x000000000040d4be : mov dword ptr [rbp - 0x18], edx ; movsx edi, byte ptr [rcx] ; call rax
0x0000000000413e29 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004156fc : mov dword ptr [rbp - 0x248], eax ; call 0x4019f8
0x00000000004157b5 : mov dword ptr [rbp - 0x250], ecx ; call 0x4019f8
0x000000000040b08b : mov dword ptr [rbp - 0x254], ecx ; call rdx
0x000000000040770d : mov dword ptr [rbp - 0x38], eax ; call 0x413975
0x0000000000407748 : mov dword ptr [rbp - 0x48], eax ; call 0x413975
0x000000000040775e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415465 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4158ab
0x0000000000433a9c : mov dword ptr [rbp - 0x6c], eax ; jmp 0x433e92
0x00000000004363ce : mov dword ptr [rbp - 0x7c], eax ; jmp 0x4366e6
0x000000000040d5f3 : mov dword ptr [rbp - 0xb0], ecx ; call rdx
0x0000000000407587 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004075b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406e15 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f91f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041638d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004102f0 : mov eax, 0x2dfffffe ; ret 0x7959
0x0000000000407753 : mov eax, 0xb0c68948 ; add al, ch ; ret 0xff9f
0x0000000000433c3c : mov eax, 0xb9fb8d9d ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x000000000042c0fa : mov eax, 0xc700003e ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000040d037 : mov eax, 0xe9ba224b ; ret 0
0x0000000000415e8f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043200b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413de3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000431cef : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f941 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bf3f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043413d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043406b : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000043210e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004319e0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004161da : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004320ca : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415d84 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415e8c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000415f95 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000416111 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041f22b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004378ba : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430088 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438310 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000436bee : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406e19 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f8bd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041f8fd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041f8dd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004301c1 : mov eax, esi ; pop rbp ; ret
0x000000000043397d : mov ebp, 0xb93081f2 ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x000000000042c206 : mov ebp, 0xfffffdef ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401adb : mov ebp, esp ; call rax
0x0000000000401a41 : mov ebp, esp ; ja 0x401a4c ; pop rbp ; ret
0x000000000042fc56 : mov ebx, 0x43b9d064 ; ret
0x0000000000409288 : mov ecx, 0xe9000002 ; ret 1
0x0000000000415f98 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405714 : mov ecx, eax ; mov al, 0 ; call 0x401956
0x0000000000401ad5 : mov edi, 0x63ee20 ; mov rbp, rsp ; call rax
0x0000000000401a52 : mov edi, 0x63f310 ; jmp rax
0x0000000000401a92 : mov edi, 0x63f310 ; jmp rdx
0x00000000004052fe : mov edi, dword ptr [rbp - 0x40] ; call 0x4015c5
0x000000000041f8b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041f8f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041f8d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043abd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043abd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041f945 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401ab5 : mov esi, 0x10023d8 ; ret
0x0000000000433a13 : mov esi, 0xaeacb9ee ; ret 0x8be6
0x0000000000401a90 : mov esi, eax ; mov edi, 0x63f310 ; jmp rdx
0x0000000000429bec : mov esp, 0x1fffffd ; ret 0x9589
0x0000000000437430 : mov esp, 0xb9fffca1 ; ret
0x000000000042e833 : mov esp, 0xc7fffff7 ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000041363c : mov qword ptr [0x63f470], rdi ; pop rbp ; ret
0x0000000000406dfc : mov qword ptr [rbp - 0x10], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4bd : mov qword ptr [rbp - 0x18], rdx ; movsx edi, byte ptr [rcx] ; call rax
0x00000000004156fb : mov qword ptr [rbp - 0x248], rax ; call 0x4019f9
0x00000000004157b4 : mov qword ptr [rbp - 0x250], rcx ; call 0x4019f9
0x000000000040770c : mov qword ptr [rbp - 0x38], rax ; call 0x413976
0x0000000000407747 : mov qword ptr [rbp - 0x48], rax ; call 0x413976
0x0000000000406e14 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f91e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041638c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042eb5a : mov r12b, -0x39 ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x000000000040775f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000410600 : mov r12b, 0xf ; test byte ptr [rbp - 0x16fffff8], dh ; ret 7
0x000000000043200a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413de2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000431cee : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f940 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000413c7b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043210d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004319df : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004320c9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415d83 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415e8b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041f22a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000430087 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e18 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f8bc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041f8fc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041f8dc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401ada : mov rbp, rsp ; call rax
0x0000000000401a40 : mov rbp, rsp ; ja 0x401a4d ; pop rbp ; ret
0x0000000000405713 : mov rcx, rax ; mov al, 0 ; call 0x401957
0x00000000004052fd : mov rdi, qword ptr [rbp - 0x40] ; call 0x4015c6
0x000000000041f8b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041f8f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041f8d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041f944 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a8f : mov rsi, rax ; mov edi, 0x63f310 ; jmp rdx
0x000000000041f01a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041f01b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000041c76c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043a80e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000042533e : movabs dword ptr [0x840fffffe9c48589], eax ; ret
0x00000000004154fd : movabs eax, dword ptr [0x77e8ac7d8b000003] ; ret
0x000000000043d50c : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x61200000 ; std ; call qword ptr [rsi]
0x0000000000430c6c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x4311e6
0x0000000000422450 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042499c : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; ret 0x8589
0x000000000042c559 : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; ret 0x8d48
0x00000000004338a1 : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x433862 ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000433acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x433a8d ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x00000000004055a7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040d5b1 : movsx edi, byte ptr [0x63f264] ; call rax
0x000000000040d4c1 : movsx edi, byte ptr [rcx] ; call rax
0x0000000000412e71 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439ac2 : movzx eax, al ; pop rbp ; ret
0x000000000041214a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000043dc30 : nop ; and edi, edi ; call rsi
0x000000000043abf8 : nop dword ptr [rax + rax] ; ret
0x000000000042f41a : or al, 0 ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000041e387 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a18e : or al, 0 ; add byte ptr [rbx - 0xd22fbb], cl ; ret 0x8986
0x000000000040a52e : or al, 0x44 ; insb byte ptr [rdi], dx ; ret
0x0000000000429b42 : or al, 0xf ; lahf ; ret 0xd284
0x0000000000429b69 : or al, 0xf ; xchg eax, esp ; ret 0xd284
0x0000000000414a67 : or al, 0xffffffffffffffa8 ; pop rax ; ret 0x8589
0x000000000040efb8 : or al, bh ; ret
0x000000000043d98d : or al, byte ptr [rax] ; add byte ptr [rax], al ; sbb bh, dh ; jmp qword ptr [rax]
0x000000000041fa04 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000432a81 : or byte ptr [rax], al ; add byte ptr [rbx - 0x54d27bbb], cl ; scasb al, byte ptr [rdi] ; ret 0x89e6
0x0000000000414beb : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000410605 : or byte ptr [rax], al ; add cl, ch ; ret 7
0x000000000043d86d : or dword ptr [rax], eax ; add byte ptr [rax], dh ; sbb dh, bh ; jmp qword ptr [rdx]
0x0000000000430317 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040ac8e : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041f411 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043daad : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; sbb edi, esi ; jmp qword ptr [rdx]
0x000000000042f089 : or ebp, dword ptr [rdi - 0x5bc746ce] ; ret
0x000000000043daac : or r8d, dword ptr [rax] ; add byte ptr [rax], dl ; sbb edi, esi ; jmp qword ptr [rdx]
0x000000000042c556 : out -0x47, al ; loop 0x42c503 ; xlatb ; ret 0x8d48
0x0000000000433a11 : out -0x6a, al ; mov esi, 0xaeacb9ee ; ret 0x8be6
0x00000000004301bc : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000439c6f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000439abf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f72a : outsb dx, byte ptr [rsi] ; call 0x47fcb9ba
0x0000000000425c17 : outsb dx, byte ptr [rsi] ; call 0xffffffff85cc1ea7
0x000000000043abec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043abee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041e6b2 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043abf0 : pop r14 ; pop r15 ; ret
0x000000000041e6b4 : pop r15 ; pop rbp ; ret
0x000000000043abf2 : pop r15 ; ret
0x000000000043a2e8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401bb6 : pop rax ; ret
0x000000000041550c : pop rax ; ret 0x3bb9
0x0000000000414a69 : pop rax ; ret 0x8589
0x0000000000401ab2 : pop rbp ; mov byte ptr [rip + 0x23d8be], 1 ; ret
0x0000000000401a51 : pop rbp ; mov edi, 0x63f310 ; jmp rax
0x0000000000401a8e : pop rbp ; mov rsi, rax ; mov edi, 0x63f310 ; jmp rdx
0x000000000043abeb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043abef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a45 : pop rbp ; ret
0x000000000042ba73 : pop rbp ; std ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000041e6b1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041e38a : pop rbx ; pop rbp ; ret
0x0000000000407711 : pop rbx ; ret 0
0x000000000043a594 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000404664 : pop rcx ; ret
0x000000000042c5d8 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e6b5 : pop rdi ; pop rbp ; ret
0x000000000043abf3 : pop rdi ; ret
0x000000000043a9db : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000424981 : pop rdx ; ret
0x000000000042d099 : pop rdx ; ret 0x78b9
0x00000000004249d5 : pop rdx ; ret 0x8589
0x000000000041e6b3 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043abf1 : pop rsi ; pop r15 ; ret
0x000000000043abed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004185c2 : pop rsp ; ret
0x000000000042e949 : popfq ; idiv bh ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000041551e : popfq ; ret 0xd284
0x000000000043331d : push -0x47fffff5 ; xlatb ; ret
0x000000000042ffaf : push 0x5b000020 ; pop rbp ; ret
0x000000000042be3f : push qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ddaf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000041f8be : push r8 ; pop rbp ; ret
0x000000000042eeb6 : push rax ; adc al, -0x7f ; ret 0x76c
0x000000000043dc50 : push rax ; and al, 0xffffffffffffffff ; call rsi
0x0000000000406aa6 : push rax ; pop rbp ; ret
0x000000000042d8f3 : push rax ; sbb al, -0x7f ; ret 1
0x00000000004315cb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040d4bf : push rbp ; call 0xffffffffff7a92d9
0x000000000041153f : push rbp ; call 0xffffffffff7ad359
0x000000000041f946 : push rbp ; clc ; pop rbp ; ret
0x0000000000431ed3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041bee8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041c0ce : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000041c174 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000041c1a2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000041c270 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000041c406 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004101b8 : push rbp ; in al, 1 ; ret 0x5589
0x0000000000401ad4 : push rbp ; mov edi, 0x63ee20 ; mov rbp, rsp ; call rax
0x0000000000422d64 : push rbp ; ret
0x0000000000434c3b : push rbx ; jrcxz 0x434ca3 ; ret 0x8589
0x00000000004360f3 : push rbx ; jrcxz 0x43615b ; ret 0x8fb9
0x000000000043631e : push rbx ; jrcxz 0x436386 ; ret 0x8fb9
0x0000000000434be7 : push rdx ; jrcxz 0x434c4f ; ret 0x8589
0x000000000040b6cc : push rsi ; ret
0x000000000042ee7d : push rsp ; idiv edi ; call qword ptr [rax - 0x163dcb52]
0x000000000042ca0f : push rsp ; idiv edi ; call qword ptr [rcx]
0x000000000042be23 : push rsp ; idiv edi ; call qword ptr [rdi]
0x0000000000429d84 : push rsp ; idiv edi ; call qword ptr [rdx]
0x000000000042ba3f : push rsp ; idiv edi ; call qword ptr [rsi]
0x000000000042bc7a : push rsp ; idiv edi ; call rbx
0x000000000042f89f : push rsp ; idiv edi ; call rcx
0x000000000042af6f : push rsp ; idiv edi ; call rdi
0x000000000042eb5e : push rsp ; idiv edi ; call rdx
0x000000000042d321 : push rsp ; idiv edi ; call rsi
0x0000000000429d40 : push rsp ; idiv edi ; call rsp
0x000000000042bd90 : push rsp ; idiv edi ; jmp qword ptr [rax]
0x000000000042f5ab : push rsp ; idiv edi ; jmp qword ptr [rcx]
0x000000000042bdd5 : push rsp ; idiv edi ; jmp qword ptr [rdi]
0x000000000042fa9b : push rsp ; idiv edi ; jmp qword ptr [rdx]
0x00000000004296e3 : push rsp ; idiv edi ; jmp qword ptr [rsi]
0x0000000000429ac5 : push rsp ; idiv edi ; jmp rax
0x000000000042c536 : push rsp ; idiv edi ; jmp rcx
0x000000000042f1b0 : push rsp ; idiv edi ; jmp rdi
0x000000000042d875 : push rsp ; idiv edi ; jmp rdx
0x000000000042c7a7 : push rsp ; idiv edi ; jmp rsp
0x000000000041261a : pushfq ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000439703 : pushfq ; ret 0x8445
0x00000000004057a9 : pushfq ; ret 0xd284
0x0000000000401599 : ret
0x0000000000407712 : ret 0
0x00000000004388a9 : ret 0x10
0x0000000000402150 : ret 0x140
0x000000000042bf5f : ret 0x17
0x0000000000434857 : ret 0x1a
0x000000000041169e : ret 0x1db
0x000000000043a49b : ret 0x2030
0x00000000004018f2 : ret 0x23d8
0x00000000004016f2 : ret 0x23d9
0x000000000041b8c7 : ret 0x2a
0x000000000041ebe6 : ret 0x2c1
0x000000000042ee84 : ret 0x2ce9
0x000000000042458f : ret 0x2e1e
0x000000000042c03b : ret 0x30
0x000000000042a901 : ret 0x30b9
0x000000000041104d : ret 0x34e9
0x000000000041550d : ret 0x3bb9
0x0000000000434717 : ret 0x3bef
0x000000000043c170 : ret 0x43bf
0x000000000043c520 : ret 0x43c4
0x000000000041882a : ret 0x43fa
0x000000000040d270 : ret 0x4589
0x000000000042f72d : ret 0x47b9
0x000000000042f5da : ret 0x48c4
0x000000000042b2f0 : ret 0x4c
0x00000000004101bb : ret 0x5589
0x0000000000428e83 : ret 0x5739
0x0000000000437a63 : ret 0x5e5
0x000000000042545f : ret 0x5f
0x000000000040d66e : ret 0x68e9
0x000000000040304c : ret 0x6dd5
0x0000000000433019 : ret 0x743c
0x00000000004153b5 : ret 0x75e8
0x000000000042eeb9 : ret 0x76c
0x000000000042d09a : ret 0x78b9
0x00000000004102f5 : ret 0x7959
0x0000000000411039 : ret 0x8148
0x0000000000404751 : ret 0x8445
0x0000000000410926 : ret 0x8589
0x000000000042342d : ret 0x8909
0x00000000004186c0 : ret 0x891a
0x0000000000439e4c : ret 0x8934
0x0000000000429859 : ret 0x8948
0x0000000000401e26 : ret 0x8963
0x000000000040dc89 : ret 0x896f
0x000000000040a197 : ret 0x8986
0x0000000000438351 : ret 0x89b6
0x00000000004248d9 : ret 0x89c4
0x0000000000434cc9 : ret 0x89cc
0x0000000000432a8a : ret 0x89e6
0x0000000000434370 : ret 0x89ec
0x000000000040b2ff : ret 0x8a86
0x0000000000439e28 : ret 0x8b34
0x0000000000409784 : ret 0x8b48
0x000000000042a21e : ret 0x8bb9
0x00000000004362b6 : ret 0x8bcc
0x0000000000433881 : ret 0x8be6
0x00000000004344a2 : ret 0x8bec
0x000000000042c55b : ret 0x8d48
0x00000000004360f6 : ret 0x8fb9
0x0000000000429bf1 : ret 0x9589
0x0000000000432399 : ret 0x987b
0x000000000040d5cd : ret 0x9e9
0x0000000000401bf4 : ret 0xa18f
0x000000000043703b : ret 0xa4be
0x000000000041c595 : ret 0xa9b9
0x0000000000418012 : ret 0xade6
0x000000000042d803 : ret 0xade9
0x0000000000405241 : ret 0xb0
0x000000000041bd00 : ret 0xb91a
0x0000000000405108 : ret 0xb963
0x000000000040e098 : ret 0xb96f
0x000000000043860b : ret 0xb9b6
0x0000000000403325 : ret 0xbde6
0x00000000004056b8 : ret 0xc
0x0000000000401a75 : ret 0xc148
0x0000000000421e2f : ret 0xc4ef
0x00000000004031d4 : ret 0xc93
0x0000000000405145 : ret 0xd284
0x000000000041ddb3 : ret 0xd4e9
0x0000000000424e4f : ret 0xd867
0x000000000043298e : ret 0xd930
0x0000000000426cef : ret 0xd9ee
0x000000000040b0eb : ret 0xe280
0x0000000000422b4f : ret 0xe8f4
0x0000000000429d46 : ret 0xe909
0x000000000040b32d : ret 0xe986
0x00000000004051a0 : ret 0xeae8
0x000000000041e3cc : ret 0xee8
0x000000000042ec0e : ret 0xf40
0x000000000041c775 : ret 0xf41
0x0000000000402931 : ret 0xf4a0
0x000000000042819b : ret 0xf727
0x0000000000414c5b : ret 0xf9b5
0x0000000000412ebf : ret 0xfa11
0x000000000040775a : ret 0xff9f
0x000000000041d88e : ret 0xffa5
0x0000000000405a8a : ret 0xffbe
0x00000000004152ab : ret 0xffbf
0x000000000041cb3b : ret 0xffc4
0x000000000041c177 : ret 0xffc5
0x000000000041c1a5 : ret 0xffd5
0x000000000041c273 : ret 0xffd8
0x000000000041cbe1 : ret 0xffd9
0x00000000004152fb : ret 0xffdb
0x0000000000415326 : ret 0xffe0
0x000000000041b4de : ret 0xfffa
0x0000000000415704 : ret 0xfffe
0x0000000000405303 : ret 0xffff
0x00000000004004c0 : ret 1
0x000000000041ca40 : ret 2
0x0000000000405fb8 : ret 3
0x00000000004122bb : ret 4
0x00000000004106f6 : ret 5
0x000000000040cf2a : ret 7
0x000000000041e5b0 : ret 8
0x000000000042efd3 : rol bh, -0x7b ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000042f1d2 : rol bh, 1 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x00000000004141ca : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000406cfb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004393f4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004068f1 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439a05 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042efd2 : rol r15b, -0x7b ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000042f1d1 : rol r15b, 1 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x0000000000415f96 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401a7c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a8b ; pop rbp ; ret
0x00000000004153b2 : ror byte ptr [rax - 0x77], 1 ; ret 0x75e8
0x0000000000411d37 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004097d7 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041000b : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41001c ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004068ed : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415f97 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000431ed0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000042342c : sahf ; ret 0x8909
0x0000000000405538 : sahf ; ret 0xd284
0x0000000000429d45 : sahf ; ret 0xe909
0x000000000042e9dc : salc ; adc eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rsi]
0x0000000000432574 : salc ; ret
0x000000000042bf59 : sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000410394 : sar dh, -1 ; call qword ptr [rax]
0x0000000000401a7e : sar eax, 1 ; jne 0x401a89 ; pop rbp ; ret
0x0000000000401a7d : sar rax, 1 ; jne 0x401a8a ; pop rbp ; ret
0x000000000042d8f4 : sbb al, -0x7f ; ret 1
0x000000000043d991 : sbb bh, dh ; jmp qword ptr [rax]
0x000000000041f049 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043d871 : sbb dh, bh ; jmp qword ptr [rdx]
0x0000000000431ab3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c58e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000042fa95 : sbb eax, 0xc7000005 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000043389f : sbb ecx, ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x433864 ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x0000000000433aca : sbb ecx, ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x433a8f ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; ret 0x8be6
0x000000000043dab1 : sbb edi, esi ; jmp qword ptr [rdx]
0x0000000000432a89 : scasb al, byte ptr [rdi] ; ret 0x89e6
0x0000000000433880 : scasb al, byte ptr [rdi] ; ret 0x8be6
0x000000000040473c : scasd eax, dword ptr [rdi] ; add dword ptr [rcx - 0x47], eax ; ret
0x0000000000405300 : shr al, -0x46 ; ret 0xffff
0x000000000043d492 : std ; call qword ptr [rax]
0x000000000043d512 : std ; call qword ptr [rsi]
0x000000000043d5d2 : std ; call rdx
0x000000000042ba74 : std ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042f44b : std ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000043d472 : std ; jmp rcx
0x000000000043d452 : std ; jmp rsi
0x0000000000432a88 : stosd dword ptr [rdi], eax ; scasb al, byte ptr [rdi] ; ret 0x89e6
0x00000000004195d7 : sub al, 0x38 ; ret 0x8589
0x000000000041c593 : sub al, 0x38 ; ret 0xa9b9
0x00000000004101b2 : sub byte ptr [r11 + 0x558be845], cl ; in al, 1 ; ret 0x5589
0x00000000004101b3 : sub byte ptr [rbx + 0x558be845], cl ; in al, 1 ; ret 0x5589
0x000000000042bd8a : sub byte ptr [rdx], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000042d23c : sub eax, 0x85c70000 ; push rsp ; idiv edi ; jmp qword ptr [rsi]
0x000000000042be67 : sub eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x00000000004301bb : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x000000000043ac41 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043ac40 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004315eb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000425456 : test al, -0x77 ; test dword ptr [rcx + rbp*8 - 0x7bf00001], ebx ; ret 0x5f
0x0000000000439848 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f22d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041550b : test al, 0x58 ; ret 0x3bb9
0x0000000000414a68 : test al, 0x58 ; ret 0x8589
0x00000000004314c8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000414be9 : test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000040e4f8 : test byte ptr [rax - 0x16fffffd], cl ; ret 1
0x000000000041187f : test byte ptr [rax - 0x16fffffe], ah ; ret 1
0x000000000043abfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410603 : test byte ptr [rbp - 0x16fffff8], dh ; ret 7
0x000000000043d2ec : test byte ptr [rbx], al ; add byte ptr [rax], al ; and dh, bh ; cld ; call rcx
0x0000000000407e01 : test byte ptr [rbx], dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000409287 : test byte ptr [rcx - 0x16fffffe], bh ; ret 1
0x000000000040ac8c : test byte ptr [rdx], bl ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000430315 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000436214 : test ch, cl ; ret
0x00000000004102ef : test dword ptr [rax + 0x2dfffffe], edi ; ret 0x7959
0x0000000000425458 : test dword ptr [rcx + rbp*8 - 0x7bf00001], ebx ; ret 0x5f
0x00000000004315d0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000431338 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042ee7c : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rax - 0x163dcb52]
0x000000000042ca0e : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x000000000042be22 : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000429d83 : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdx]
0x000000000042ba3e : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042bc79 : test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000042f89e : test dword ptr [rdi + rsi*8 - 1], edx ; call rcx
0x000000000042af6e : test dword ptr [rdi + rsi*8 - 1], edx ; call rdi
0x000000000042eb5d : test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x000000000042d320 : test dword ptr [rdi + rsi*8 - 1], edx ; call rsi
0x0000000000429d3f : test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000042bd8f : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000042f5aa : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042bdd4 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000042fa9a : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004296e2 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000429ac4 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000042c535 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042f1af : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x000000000042d874 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdx
0x000000000042c7a6 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000042ca09 : test eax, 0xc7000035 ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x00000000004051e0 : test edi, 0xffff7885 ; call rbx
0x0000000000436213 : test r13b, r9b ; ret
0x000000000040d841 : xchg dword ptr [rbp - 0x15de4611], esi ; ret
0x0000000000429beb : xchg eax, ebp ; mov esp, 0x1fffffd ; ret 0x9589
0x00000000004165c1 : xchg eax, ebp ; ret
0x0000000000405511 : xchg eax, ebp ; ret 0x8445
0x0000000000405216 : xchg eax, ebp ; ret 0xd284
0x000000000040b0ea : xchg eax, ebp ; ret 0xe280
0x000000000042bf58 : xchg eax, ebp ; sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x00000000004134e3 : xchg eax, ebx ; mov bh, -0x47 ; ret
0x00000000004280d7 : xchg eax, ebx ; ret
0x00000000004195bb : xchg eax, ecx ; ret
0x0000000000407418 : xchg eax, edi ; ret 0xd284
0x000000000040473b : xchg eax, edi ; scasd eax, dword ptr [rdi] ; add dword ptr [rcx - 0x47], eax ; ret
0x000000000041970b : xchg eax, edx ; ret
0x00000000004314ce : xchg eax, edx ; ret 0xd284
0x0000000000433a12 : xchg eax, esi ; mov esi, 0xaeacb9ee ; ret 0x8be6
0x000000000041ef42 : xchg eax, esi ; ret
0x0000000000415467 : xchg eax, esp ; jmp 0x4158a9
0x0000000000433a9e : xchg eax, esp ; jmp 0x433e90
0x00000000004165a3 : xchg eax, esp ; ret
0x0000000000404750 : xchg eax, esp ; ret 0x8445
0x0000000000433780 : xchg eax, esp ; ret 0x987b
0x0000000000405144 : xchg eax, esp ; ret 0xd284
0x0000000000415466 : xchg eax, r12d ; jmp 0x4158aa
0x0000000000433a9d : xchg eax, r12d ; jmp 0x433e91
0x000000000043377f : xchg eax, r12d ; ret 0x987b
0x000000000043df91 : xchg edi, edi ; jmp qword ptr [rbx]
0x00000000004134e2 : xchg r8d, ebx ; mov bh, -0x47 ; ret
0x000000000043312c : xlatb ; ret
0x000000000042499d : xlatb ; ret 0x8589
0x000000000042c55a : xlatb ; ret 0x8d48
0x000000000040a129 : xor al, 0x48 ; add esp, 0x88 ; pop rbp ; ret
0x000000000040bbfe : xor bh, al ; in al, dx ; push rsi ; ret
0x000000000040bc11 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add bh, al ; in al, dx ; push rsi ; ret
0x000000000040b10b : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041f547 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000042ca0a : xor eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rcx]
0x000000000042ca85 : xor eax, 0x85c70000 ; push rsp ; idiv edi ; call rbx
0x0000000000415469 : xor eax, 0xb8000004 ; ret
0x000000000040d26e : xor eax, edx ; ret 0x4589
0x000000000040d66c : xor eax, edx ; ret 0x68e9
0x000000000040d5cb : xor eax, edx ; ret 0x9e9
0x000000000041610d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040bbfd : xor r15b, al ; in al, dx ; push rsi ; ret
0x000000000040d26d : xor r8, rdx ; ret 0x4589
0x000000000040d2af : xor rax, rdx ; ret 0x4589
0x000000000040d66b : xor rax, rdx ; ret 0x68e9
0x000000000040d5ca : xor rax, rdx ; ret 0x9e9
