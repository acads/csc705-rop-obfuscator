0x0000000000414436 : adc al, -9 ; pop rbp ; ret
0x0000000000427dfd : adc byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 2], bh ; call rsp
0x0000000000424e2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041968b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041542a : adc eax, 0xb8000003 ; in al, 0x7f ; ret
0x00000000004130d4 : adc eax, dword ptr [rax + rax] ; add cl, ch ; ret 1
0x0000000000411ed9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427ebd : adc eax, dword ptr [rax] ; add byte ptr [rbx + rbx - 1], cl ; call rsp
0x0000000000401689 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042846b : add ah, al ; add al, byte ptr [rax] ; add al, dl ; int1 ; std ; call qword ptr [rsi]
0x0000000000427bff : add ah, cl ; idiv ebp ; call rsp
0x0000000000427c7f : add ah, cl ; sbb esi, edi ; call rsp
0x00000000004052be : add al, -0x17 ; ret
0x000000000040537f : add al, -0x36 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004130d5 : add al, 0 ; add cl, ch ; ret 1
0x00000000004296ac : add al, 0x15 ; add byte ptr [rax], al ; add bl, -1 ; jmp qword ptr [rdi]
0x00000000004052bc : add al, 0x39 ; add al, -0x17 ; ret
0x000000000041e127 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042972f : add al, ah ; ret
0x000000000042970f : add al, al ; ret
0x000000000042840d : add al, byte ptr [rax] ; add al, dh ; out dx, al ; std ; call qword ptr [rsi]
0x000000000042846d : add al, byte ptr [rax] ; add al, dl ; int1 ; std ; call qword ptr [rsi]
0x0000000000418f83 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004217c4 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042840c : add al, byte ptr fs:[rax] ; add al, dh ; out dx, al ; std ; call qword ptr [rsi]
0x000000000040561d : add al, ch ; pop rbp ; ret 0xffff
0x000000000042840f : add al, dh ; out dx, al ; std ; call qword ptr [rsi]
0x000000000042846f : add al, dl ; int1 ; std ; call qword ptr [rsi]
0x0000000000421381 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041937e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004190e6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004296b0 : add bl, -1 ; jmp qword ptr [rdi]
0x0000000000400283 : add bl, al ; cmc ; ret
0x0000000000426dff : add bl, dh ; ret
0x0000000000406560 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042148a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000416a8f : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000041871b : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4276
0x0000000000403feb : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004284cf : add byte ptr [rax - 0xa], al ; std ; call rdx
0x00000000004296aa : add byte ptr [rax], al ; add al, 0x15 ; add byte ptr [rax], al ; add bl, -1 ; jmp qword ptr [rdi]
0x000000000042840a : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add al, dh ; out dx, al ; std ; call qword ptr [rsi]
0x000000000040561b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret 0xffff
0x000000000042148b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041937c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004190e4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004296ae : add byte ptr [rax], al ; add bl, -1 ; jmp qword ptr [rdi]
0x0000000000426dfd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000416a8d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000403fe9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000426dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000427614 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4275
0x0000000000429709 : add byte ptr [rax], al ; add byte ptr [rbp + rdx], ah ; add al, al ; ret
0x0000000000411c1e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041e191 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041de1f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000413be7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1ed25bbb], cl ; ret 0x611c
0x0000000000413831 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1fd25bbb], cl ; ret 0x611c
0x0000000000416086 : add byte ptr [rax], al ; add byte ptr [rbx - 0x49d217bb], cl ; ret 0x4314
0x00000000004264e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000426465 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000424afe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404071 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000415a25 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004042ef : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040027d : add byte ptr [rax], al ; add byte ptr [rdi + 0x4e], al ; push rbp ; add bl, al ; cmc ; ret
0x00000000004265a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041d3ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041b42d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000409b2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040401b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004041be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403fb0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042467d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041927a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409b0f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404471 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404207 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000425dad : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000407132 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407173 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407bd5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415897 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411e97 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415acc : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040168b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004296ca : add byte ptr [rax], al ; and al, 0x15 ; add byte ptr [rax], al ; nop ; ret
0x00000000004284ca : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; idiv bpl ; call rdx
0x000000000042566d : add byte ptr [rax], al ; call 0x4016e8
0x000000000040561c : add byte ptr [rax], al ; call 0x401884
0x0000000000427b7e : add byte ptr [rax], al ; cmp al, -0x5d ; std ; call rsp
0x00000000004284ce : add byte ptr [rax], al ; idiv bpl ; call rdx
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x0000000000425da9 : add byte ptr [rax], al ; jmp 0x425db8
0x0000000000426a19 : add byte ptr [rax], al ; jmp 0x426a28
0x0000000000427ffe : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x428007 ; call rsp
0x0000000000425bbc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000425b3d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041c157 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000426c27 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405617 : add byte ptr [rax], al ; mov edx, 1 ; call 0x401889
0x0000000000407949 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041d82c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004093f9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004296ce : add byte ptr [rax], al ; nop ; ret
0x0000000000405100 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411c1f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004118f8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000427bbe : add byte ptr [rax], al ; pop rsp ; in eax, dx ; std ; call rsp
0x0000000000428f4e : add byte ptr [rax], al ; push rax ; or bh, bh ; call rdx
0x000000000040027e : add byte ptr [rax], al ; push rbp ; add bl, al ; cmc ; ret
0x00000000004004ae : add byte ptr [rax], al ; ret
0x0000000000427616 : add byte ptr [rax], al ; ret 0x4275
0x000000000042846e : add byte ptr [rax], al ; sal cl, 1 ; std ; call qword ptr [rsi]
0x0000000000427ebe : add byte ptr [rax], al ; sbb r15, rdi ; call rsp
0x0000000000427bbf : add byte ptr [rbp + rbp*8 - 3], bl ; call rsp
0x000000000042970b : add byte ptr [rbp + rdx], ah ; add al, al ; ret
0x000000000041e7f5 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000041e837 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000411c20 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041e193 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x00000000004118f9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041de21 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x00000000004284cb : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; idiv bpl ; call rdx
0x0000000000427ebf : add byte ptr [rbx + rbx - 1], cl ; call rsp
0x0000000000427f3f : add byte ptr [rbx + rcx*2 - 1], bl ; call rsp
0x00000000004065e3 : add byte ptr [rbx - 0x1ab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000413be9 : add byte ptr [rbx - 0x1ed25bbb], cl ; ret 0x611c
0x0000000000413833 : add byte ptr [rbx - 0x1fd25bbb], cl ; ret 0x611c
0x0000000000416088 : add byte ptr [rbx - 0x49d217bb], cl ; ret 0x4314
0x0000000000404d3c : add byte ptr [rbx - 0x54f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004050ce : add byte ptr [rbx - 0x5574b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004264eb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000426467 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040599a : add byte ptr [rbx - 0xc74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000427cbf : add byte ptr [rbx - 2], bl ; call rsp
0x0000000000427b7f : add byte ptr [rbx], bh ; std ; call rsp
0x0000000000424b00 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404073 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000415a27 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004042f1 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000427dff : add byte ptr [rcx + rcx*8 - 2], bh ; call rsp
0x000000000040569f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000040027f : add byte ptr [rdi + 0x4e], al ; push rbp ; add bl, al ; cmc ; ret
0x00000000004265a7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000416a5f : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041b42f : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000409b2f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040401d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004041c0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403fb2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000413d5e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042467f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041927c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409b11 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404473 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404209 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000405618 : add byte ptr [rdx + 1], bh ; call 0x401888
0x000000000042840b : add byte ptr [rdx + rax], ah ; add al, dh ; out dx, al ; std ; call qword ptr [rsi]
0x0000000000413d5c : add byte ptr [rdx], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041dcad : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004180c9 : add cl, ch ; ret
0x0000000000425daf : add cl, ch ; ret 0
0x0000000000408117 : add cl, ch ; ret 1
0x0000000000407092 : add dword ptr [rax + 0x3b], ecx ; enter 0xf41, -0x6b ; ret 0x8445
0x000000000042370a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000042137f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000407171 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411e95 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040561a : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x401886
0x00000000004125ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416a5d : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000427b54 : add dword ptr [rbx], ebx ; add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000000000041dbf1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000408857 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004072e7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c04 : add eax, 0x22872e ; add ebx, esi ; ret
0x000000000041c155 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000041ba3f : add eax, 0xb6b80000 ; ret 0x979f
0x00000000004284cd : add eax, dword ptr [rax] ; add byte ptr [rax - 0xa], al ; std ; call rdx
0x0000000000408115 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041e129 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000427b56 : add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000427e81 : add edi, edi ; call rsp
0x0000000000428571 : add edi, esi ; jmp qword ptr [rbx]
0x0000000000401e8b : add esp, 0x10 ; pop rbp ; ret
0x000000000040569d : add esp, 0x100 ; pop rbp ; ret
0x00000000004125b7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004226df : add esp, 0x120 ; pop rbp ; ret
0x0000000000414016 : add esp, 0x140 ; pop rbp ; ret
0x00000000004086ad : add esp, 0x160 ; pop rbp ; ret
0x000000000041dbf6 : add esp, 0x18 ; pop rbp ; ret
0x000000000041953c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000406681 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000417ccf : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000407176 : add esp, 0x20 ; pop rbp ; ret
0x000000000041573b : add esp, 0x230 ; pop rbp ; ret
0x0000000000424e03 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000042599a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000407bd8 : add esp, 0x30 ; pop rbp ; ret
0x000000000041c025 : add esp, 0x380 ; pop rbp ; ret
0x0000000000407ab7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401e44 : add esp, 0x50 ; pop rbp ; ret
0x00000000004050fc : add esp, 0x560 ; pop rbp ; ret
0x0000000000407636 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405382 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406acb : add esp, 0x80 ; pop rbp ; ret
0x00000000004068a2 : add esp, 0x90 ; pop rbp ; ret
0x00000000004091be : add esp, 0xa0 ; pop rbp ; ret
0x00000000004143dc : add esp, 0xb0 ; pop rbp ; ret
0x00000000004118f4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000405b91 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004134fc : add esp, 0xf0 ; pop rbp ; ret
0x000000000040168e : add esp, 8 ; ret
0x000000000041e128 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401e8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040569c : add rsp, 0x100 ; pop rbp ; ret
0x00000000004125b6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004226de : add rsp, 0x120 ; pop rbp ; ret
0x0000000000414015 : add rsp, 0x140 ; pop rbp ; ret
0x00000000004086ac : add rsp, 0x160 ; pop rbp ; ret
0x000000000041dbf5 : add rsp, 0x18 ; pop rbp ; ret
0x000000000041953b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000406680 : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000417cce : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000407175 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041573a : add rsp, 0x230 ; pop rbp ; ret
0x0000000000424e02 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000425999 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000407bd7 : add rsp, 0x30 ; pop rbp ; ret
0x000000000041c024 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000407ab6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401e43 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004050fb : add rsp, 0x560 ; pop rbp ; ret
0x0000000000407635 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405381 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406aca : add rsp, 0x80 ; pop rbp ; ret
0x00000000004068a1 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004091bd : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004143db : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004118f3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000405b90 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004134fb : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040168d : add rsp, 8 ; ret
0x00000000004296cc : and al, 0x15 ; add byte ptr [rax], al ; nop ; ret
0x00000000004072e6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004284cc : and al, 3 ; add byte ptr [rax], al ; idiv bpl ; call rdx
0x0000000000401c07 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000423708 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004226e1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427b58 : and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000423707 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041f005 : and eax, 0x427b10 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040730f : and eax, 0x62a340 ; pop rbp ; ret
0x0000000000407333 : and eax, 0x62a348 ; pop rbp ; ret
0x0000000000416885 : and edi, dword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000427f01 : and edi, edi ; call rsp
0x0000000000416884 : and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x000000000041608b : call 0x150416c0
0x000000000041608a : call 0x150416c1
0x000000000042566f : call 0x4016e6
0x000000000042563c : call 0x401776
0x00000000004155db : call 0x401802
0x000000000040561e : call 0x401882
0x0000000000415714 : call 0x4019b2
0x00000000004156df : call 0x4019d2
0x0000000000417c2a : call 0x401a56
0x0000000000420ef6 : call 0xffffffff8a047498
0x0000000000411939 : call 0xffffffffe903a289
0x0000000000411938 : call 0xffffffffe903a28a
0x000000000040d37d : call 0xfffffffff7395914
0x00000000004248c5 : call 0xffffffffff46ce9a
0x000000000040fea9 : call 0xffffffffff55847b
0x000000000040fea8 : call 0xffffffffff55847c
0x000000000040fea9 : call 0xffffffffff55847d
0x000000000040fea8 : call 0xffffffffff55847e
0x000000000041ffe7 : call 0xffffffffff7b8b38
0x000000000041ffe6 : call 0xffffffffff7b8b39
0x00000000004055dd : call 0xffffffffff8cdbaf
0x00000000004055dc : call 0xffffffffff8cdbb0
0x0000000000426dd9 : call qword ptr [r12 + rbx*8]
0x0000000000404001 : call qword ptr [rax]
0x0000000000428b33 : call qword ptr [rbx]
0x0000000000410ec5 : call qword ptr [rcx]
0x000000000040ee63 : call qword ptr [rdx]
0x00000000004062bf : call qword ptr [rsi]
0x0000000000426dda : call qword ptr [rsp + rbx*8]
0x0000000000420083 : call rax
0x000000000040d61a : call rbx
0x000000000041dfc7 : call rdx
0x0000000000419384 : call rsi
0x0000000000427b83 : call rsp
0x000000000042646c : cdq ; ret
0x000000000041eb13 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d0f2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041c540 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041e763 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000041eec1 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004134fa : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000416883 : clc ; and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x0000000000415783 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000042330e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415763 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414433 : clc ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000041d4eb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041d50b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041d52b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412f9b : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000412f97 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000413522 : clc ; pop rbp ; ret
0x000000000041351b : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000401eb7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406cdf : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406ac9 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004068a0 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040fafd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000400285 : cmc ; ret
0x00000000004083ec : cmp al, -0x17 ; ret
0x0000000000423ecd : cmp al, -0x2a ; ret
0x0000000000427b80 : cmp al, -0x5d ; std ; call rsp
0x000000000041871e : cmp al, 0x25 ; ret 0x4276
0x00000000004049a0 : cmp al, 0x4e ; xor al, 0xffffffffffffffb9 ; pop rcx ; ret 0x48e7
0x00000000004052bd : cmp dword ptr [rcx + rbp*8], eax ; ret
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000411dd4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000425f6b : cwde ; js 0x425f15 ; ret
0x0000000000425fb2 : cwde ; js 0x425f5c ; ret
0x0000000000425fec : cwde ; js 0x425f96 ; ret
0x0000000000404214 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xe280
0x0000000000404d42 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040fca2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040ffad : dec dword ptr [rax - 0x7f] ; ret 2
0x00000000004114b4 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004130d1 : dec dword ptr [rdi] ; test byte ptr [rbx], dl ; add al, 0 ; add cl, ch ; ret 1
0x00000000004180c3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004049af : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000040efe8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000414480 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041447f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041e077 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000412f78 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x00000000004059c4 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042467b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000407096 : enter 0xf41, -0x6b ; ret 0x8445
0x000000000040905d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cb64 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413d5a : fadd dword ptr [rax] ; add byte ptr [rdx], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000412de9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000419c84 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000416509 : fmul dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000426ddc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041fbf4 : fsubr st(1) ; ret 0
0x00000000004206bc : fucompi st(1) ; ret
0x0000000000401e89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004135b0 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c69c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x62a2e0 ; jmp rax
0x00000000004284d0 : idiv bpl ; call rdx
0x00000000004284d1 : idiv ch ; call rdx
0x0000000000427c01 : idiv ebp ; call rsp
0x0000000000418a1e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040f459 : in al, -0x7f ; ret 0xff9f
0x000000000040f63f : in al, -0x7f ; ret 0xffbf
0x000000000040f6e5 : in al, -0x7f ; ret 0xffc5
0x000000000040f713 : in al, -0x7f ; ret 0xffd5
0x000000000040f7e1 : in al, -0x7f ; ret 0xffd8
0x000000000040f977 : in al, -0x7f ; ret 0xffe0
0x0000000000428101 : in al, -1 ; call rsp
0x0000000000414f03 : in al, 0x7f ; ret
0x0000000000421fea : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041c22f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041c9fa : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040950a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041c15b : in al, dx ; pop rbp ; ret
0x00000000004156e0 : in al, dx ; ret 0xfffe
0x000000000042666b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402d67 : in eax, dx ; ret
0x0000000000427bc1 : in eax, dx ; std ; call rsp
0x00000000004042ed : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000404019 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004041bc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403fae : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000404ebe : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404205 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403c81 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004043a2 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404856 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412588 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040637f : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x00000000004065f3 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rax
0x000000000040bc2f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040f26f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000428471 : int1 ; std ; call qword ptr [rsi]
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000415766 : ja 0x415773 ; pop rbp ; ret
0x0000000000415786 : ja 0x41579b ; pop rbp ; ret
0x0000000000423311 : ja 0x42335e ; pop rbp ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x62a2e0 ; jmp rax
0x0000000000412f9a : jge 0x412f9a ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000414432 : jge 0x414433 ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000415762 : jge 0x415763 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000415782 : jge 0x415783 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000416886 : jge 0x41687e ; mov rax, rdi ; pop rbp ; ret
0x0000000000418538 : jge 0x41854f ; ret
0x0000000000418a23 : jge 0x418a3a ; ret
0x000000000041d4ea : jge 0x41d4eb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041d50a : jge 0x41d50b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041d52a : jge 0x41d52b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042330d : jge 0x42330e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000426bd9 : jge 0x426bd3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000407130 : jl 0x4070f9 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041840c : jl 0x418423 ; ret
0x0000000000428001 : jle 0x428004 ; call rsp
0x00000000004017eb : jmp 0x4016a7
0x00000000004062f3 : jmp 0x406690
0x000000000040ec1d : jmp 0x411903
0x00000000004116b1 : jmp 0x411905
0x0000000000415429 : jmp 0x41574b
0x0000000000418a1d : jmp 0x418f95
0x0000000000418717 : jmp 0x418f96
0x000000000041df72 : jmp 0x41e047
0x0000000000425dab : jmp 0x425db6
0x0000000000426a1b : jmp 0x426a26
0x0000000000421cf1 : jmp 0x4904a641
0x0000000000421d6c : jmp 0x4904a6bc
0x00000000004230c5 : jmp 0x4904ba15
0x0000000000423140 : jmp 0x4904ba90
0x0000000000420f3b : jmp 0xffffffff8a0474dd
0x000000000042374e : jmp 0xffffffffb7043b1a
0x0000000000425f6a : jmp 0xffffffffc3e6d80b
0x00000000004212ef : jmp 0xffffffffea047891
0x0000000000404efc : jmp qword ptr [rax]
0x000000000040feaf : jmp qword ptr [rbx]
0x0000000000411880 : jmp qword ptr [rcx]
0x00000000004296b3 : jmp qword ptr [rdi]
0x0000000000411dd5 : jmp qword ptr [rdx + 0xc2e968]
0x00000000004055e3 : jmp qword ptr [rdx]
0x000000000040fe3f : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x00000000004109d2 : jmp rbx
0x000000000041106e : jmp rdi
0x0000000000401be7 : jmp rdx
0x00000000004292d3 : jmp rsi
0x0000000000410a69 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x0000000000412586 : jne 0x41258f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000414481 : jne 0x414479 ; mov rax, rdx ; pop rbp ; ret
0x000000000041685c : jne 0x416834 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000417c28 : jne 0x417c02 ; call 0x401a58
0x000000000041e076 : jne 0x41e049 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000414093 : jns 0x41404d ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405384 : jo 0x4053e5 ; ret
0x0000000000406ce3 : jo 0x406d44 ; ret
0x0000000000406ed9 : jo 0x406f3a ; ret
0x00000000004070fd : jo 0x40715e ; ret
0x00000000004127a1 : jo 0x412802 ; ret
0x00000000004128c4 : jo 0x412925 ; ret
0x00000000004129fe : jo 0x412a5f ; ret
0x0000000000415ad1 : jo 0x415b32 ; ret
0x0000000000419d2c : jo 0x419d8d ; ret
0x000000000041c544 : jo 0x41c5a5 ; ret
0x0000000000415abe : jp 0x415ad2 ; call rax
0x0000000000414d43 : jrcxz 0x414dc6 ; ret
0x0000000000427e41 : jrcxz 0x427e43 ; call rsp
0x00000000004118f6 : js 0x41190a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000425f6c : js 0x425f14 ; ret
0x0000000000425fb3 : js 0x425f5b ; ret
0x0000000000425fed : js 0x425f95 ; ret
0x0000000000428000 : lodsb al, byte ptr [rsi] ; jle 0x428005 ; call rsp
0x00000000004212ee : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea047892
0x00000000004212ed : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea047893
0x0000000000421384 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000402d66 : lodsd eax, dword ptr [rsi] ; in eax, dx ; ret
0x0000000000425a19 : loop 0x425a6b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000425b01 : loop 0x425b53 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000407afb : loopne 0x407b4b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407afa : loopne 0x407b4c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408671 : loopne 0x40867a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004086ab : loopne 0x4086fe ; add esp, 0x160 ; pop rbp ; ret
0x00000000004098ce : loopne 0x4098d7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415a23 : loopne 0x415a2d ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000416ac4 : loopne 0x416a56 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000416ac3 : loopne 0x416a57 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000416d27 : loopne 0x416cb9 ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000416d26 : loopne 0x416cba ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000416e5f : loopne 0x416df1 ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000416e5e : loopne 0x416df2 ; push rbp ; mov al, -0x7f ; ret 3
0x00000000004170c2 : loopne 0x417054 ; push rbp ; mov al, -0x7f ; ret 2
0x00000000004170c1 : loopne 0x417055 ; push rbp ; mov al, -0x7f ; ret 2
0x0000000000419a70 : loopne 0x419a79 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419e7c : loopne 0x419ecc ; add esp, 0x40 ; pop rbp ; ret
0x0000000000419e7b : loopne 0x419ecd ; add esp, 0x40 ; pop rbp ; ret
0x000000000041f3f7 : loopne 0x41f400 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420690 : loopne 0x420699 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004206b0 : loopne 0x4206fe ; mov edi, dword ptr [rcx] ; call rax
0x00000000004206af : loopne 0x4206ff ; mov edi, dword ptr [rcx] ; call rax
0x000000000042077c : loopne 0x420785 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420814 : loopne 0x42081d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042599c : loopne 0x4259a5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416a89 : mov ah, -0x7f ; ret 1
0x0000000000416aa8 : mov ah, -0x7f ; ret 2
0x0000000000416ac7 : mov ah, -0x7f ; ret 3
0x0000000000416ae6 : mov ah, -0x7f ; ret 4
0x0000000000416b05 : mov ah, -0x7f ; ret 5
0x0000000000416b24 : mov ah, -0x7f ; ret 6
0x0000000000416b43 : mov ah, -0x7f ; ret 7
0x00000000004065f1 : mov ah, -1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rax
0x0000000000416a5b : mov ah, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000427ebc : mov ah, 0x13 ; add byte ptr [rax], al ; sbb r15, rdi ; call rsp
0x0000000000427ffc : mov ah, 0x18 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x428009 ; call rsp
0x0000000000402060 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000427b7c : mov ah, 6 ; add byte ptr [rax], al ; cmp al, -0x5d ; std ; call rsp
0x0000000000427bbc : mov ah, 7 ; add byte ptr [rax], al ; pop rsp ; in eax, dx ; std ; call rsp
0x0000000000416e24 : mov al, -0x7f ; ret 1
0x0000000000416e43 : mov al, -0x7f ; ret 2
0x0000000000416e62 : mov al, -0x7f ; ret 3
0x0000000000416e81 : mov al, -0x7f ; ret 4
0x0000000000416ea0 : mov al, -0x7f ; ret 5
0x0000000000416ebf : mov al, -0x7f ; ret 6
0x0000000000416ede : mov al, -0x7f ; ret 7
0x0000000000423238 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042489a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004143de : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416df6 : mov al, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042563a : mov al, 0 ; call 0x401778
0x0000000000409a8b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000406683 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425cbd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425e6d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426669 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004072e3 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f9f1 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425bbf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000425bbe : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000425b3f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000425b43 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000427d81 : mov bl, -2 ; call rsp
0x000000000040637c : mov bpl, -1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000407331 : mov byte ptr [0x62a348], al ; pop rbp ; ret
0x00000000004044eb : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401c03 : mov byte ptr [rip + 0x22872e], 1 ; ret
0x000000000040637d : mov ch, -1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042370d : mov dh, -0x39 ; pop rbp ; ret
0x000000000041dbf3 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000408859 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004072e9 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000426795 : mov dl, -0x47 ; ret
0x000000000040730d : mov dword ptr [0x62a340], edi ; pop rbp ; ret
0x0000000000409747 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040950b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040967f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000422499 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042260b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000407af9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040205e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041dfc1 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000041ee0f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x00000000004155d5 : mov dword ptr [rbp - 0xc0], eax ; call 0x401808
0x0000000000401e87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004156d9 : mov dword ptr [rbp - 0xd0], eax ; call 0x4019d8
0x0000000000401eb5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004098fd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404068 : mov dword ptr [rcx - 0x47], eax ; rol ebx, 1 ; ret 0x3d
0x000000000041f00a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000415785 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x0000000000423310 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000415765 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x0000000000414435 : mov dword ptr [rdi + rsi*8], edx ; pop rbp ; ret
0x000000000040537e : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041713a : mov eax, 0x81b0558b ; ret 7
0x0000000000416d9f : mov eax, 0x81b4558b ; ret 7
0x00000000004093ff : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412e66 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ab3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419a9f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040794c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041c22d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041c159 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004149be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419790 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423540 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040974a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000419e7a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413603 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415ffb : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004092f4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004093fc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409505 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000412f76 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e07c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000409681 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041279b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004135ae : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c69a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406cdd : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041eb11 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d0f0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041c53e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041d4ed : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041d50d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041d52d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412f9d : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x000000000041685f : mov eax, dword ptr [rsi] ; pop rbp ; ret
0x0000000000413521 : mov eax, edi ; pop rbp ; ret
0x000000000041f5e1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414484 : mov eax, edx ; pop rbp ; ret
0x0000000000425b40 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000425a53 : mov eax, esi ; pop rbp ; ret
0x0000000000401e3f : mov ebp, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x000000000042007d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000409508 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041ffe5 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004206ae : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000425a7d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000425a4d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x62a2e0 ; jmp rax
0x0000000000401be2 : mov edi, 0x62a2e0 ; jmp rdx
0x0000000000415781 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000042330c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415761 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414431 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000041d4e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041d509 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041d529 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412f99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000420081 : mov edi, dword ptr [rcx] ; call rax
0x0000000000415abd : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000426dd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000426dd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405619 : mov edx, 1 ; call 0x401887
0x0000000000415ab9 : mov edx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000041570e : mov edx, dword ptr [rbp - 0x230] ; call 0x4019b8
0x0000000000417c27 : mov esi, dword ptr [rbp - 0x30] ; call 0x401a59
0x000000000041685b : mov esi, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000401be0 : mov esi, eax ; mov edi, 0x62a2e0 ; jmp rdx
0x000000000041e079 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040730c : mov qword ptr [0x62a340], rdi ; pop rbp ; ret
0x00000000004155d4 : mov qword ptr [rbp - 0xc0], rax ; call 0x401809
0x00000000004156d8 : mov qword ptr [rbp - 0xd0], rax ; call 0x4019d9
0x00000000004098fc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415784 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000042330f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415764 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414434 : mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000040537d : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040205f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000417139 : mov r8d, 0x81b0558b ; ret 7
0x0000000000416d9e : mov r8d, 0x81b4558b ; ret 7
0x0000000000412e65 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ab2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419a9e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040794b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004149bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041978f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042353f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041d82e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000419e79 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413602 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004092f3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004093fb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412f75 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e07b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041279a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041eb10 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d4ec : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041d50c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041d52c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412f9c : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041685e : mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000413520 : mov rax, rdi ; pop rbp ; ret
0x000000000041f5e0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414483 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x000000000042007c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041ffe4 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004206ad : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000415780 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000042330b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415760 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414430 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000041d4e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041d508 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041d528 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412f98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000420080 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000415abc : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000415ab8 : mov rdx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000041570d : mov rdx, qword ptr [rbp - 0x230] ; call 0x4019b9
0x000000000041685a : mov rsi, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x62a2e0 ; jmp rdx
0x000000000041e078 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041258a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041258b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040fcdc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000426a0e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000418a1c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x418f96
0x0000000000425f6d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041dbf2 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000408858 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004072e8 : movzx eax, al ; pop rbp ; ret
0x0000000000425b42 : movzx eax, ax ; pop rbp ; ret
0x000000000042370c : movzx eax, bh ; pop rbp ; ret
0x000000000042370b : movzx eax, dil ; pop rbp ; ret
0x000000000041f9f2 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041f9f3 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004296d0 : nop ; ret
0x0000000000426df8 : nop dword ptr [rax + rax] ; ret
0x00000000004118f7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000427c7d : or al, byte ptr [rax] ; add ah, cl ; sbb esi, edi ; call rsp
0x00000000004212eb : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea047895
0x0000000000428f51 : or bh, bh ; call rdx
0x0000000000406c7b : or byte ptr [r9 + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041351f : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x0000000000427bfd : or byte ptr [rax], al ; add ah, cl ; idiv ebp ; call rsp
0x0000000000418719 : or byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4276
0x0000000000406c7c : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000416505 : or dword ptr [rax - 0x75], 0x8148d855 ; ret 0x20
0x00000000004180c7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000417d01 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412981 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427cbd : or eax, dword ptr [rax] ; add byte ptr [rbx - 2], bl ; call rsp
0x00000000004259db : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000425a51 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004212ea : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea047896
0x00000000004259da : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000423709 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041351e : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x0000000000425e6f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000428411 : out dx, al ; std ; call qword ptr [rsi]
0x0000000000425cbf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425a50 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041dc99 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004217c3 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000426dec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426dee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411c22 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426df0 : pop r14 ; pop r15 ; ret
0x0000000000411c24 : pop r15 ; pop rbp ; ret
0x0000000000426df2 : pop r15 ; ret
0x00000000004264e8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004031c5 : pop rax ; ret 0x89e7
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x22872e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x62a2e0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x62a2e0 ; jmp rdx
0x0000000000426deb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426def : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x000000000040561f : pop rbp ; ret 0xffff
0x0000000000411c21 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004118fa : pop rbx ; pop rbp ; ret
0x0000000000426794 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004049a4 : pop rcx ; ret 0x48e7
0x0000000000403465 : pop rcx ; ret 0x89e7
0x000000000040497f : pop rcx ; ret 0xb8e7
0x0000000000411c25 : pop rdi ; pop rbp ; ret
0x0000000000426df3 : pop rdi ; ret
0x0000000000426bdb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000411c23 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426df1 : pop rsi ; pop r15 ; ret
0x0000000000427bc0 : pop rsp ; in eax, dx ; std ; call rsp
0x0000000000426ded : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bb32 : pop rsp ; ret
0x000000000041dcb0 : pop rsp ; ret 0xf66
0x00000000004265a9 : popfq ; ret 0xd284
0x0000000000416503 : push -0x4b ; or dword ptr [rax - 0x75], 0x8148d855 ; ret 0x20
0x0000000000427bfb : push qword ptr [rax + rcx - 0x8340000] ; std ; call rsp
0x0000000000427bbb : push qword ptr [rdi + rax - 0x12a40000] ; std ; call rsp
0x000000000041131f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000427b7b : push qword ptr [rsi + rax - 0x5cc40000] ; std ; call rsp
0x0000000000428f50 : push rax ; or bh, bh ; call rdx
0x0000000000401e46 : push rax ; pop rbp ; ret
0x0000000000400282 : push rbp ; add bl, al ; cmc ; ret
0x000000000041937b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000419c83 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000416508 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x20
0x000000000041fbf3 : push rbp ; fsubr st(1) ; ret 0
0x000000000040f458 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040f63e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040f6e4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040f712 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040f7e0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040f976 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000416a88 : push rbp ; mov ah, -0x7f ; ret 1
0x0000000000416aa7 : push rbp ; mov ah, -0x7f ; ret 2
0x0000000000416ac6 : push rbp ; mov ah, -0x7f ; ret 3
0x0000000000416ae5 : push rbp ; mov ah, -0x7f ; ret 4
0x0000000000416b04 : push rbp ; mov ah, -0x7f ; ret 5
0x0000000000416b23 : push rbp ; mov ah, -0x7f ; ret 6
0x0000000000416b42 : push rbp ; mov ah, -0x7f ; ret 7
0x0000000000416e23 : push rbp ; mov al, -0x7f ; ret 1
0x0000000000416e42 : push rbp ; mov al, -0x7f ; ret 2
0x0000000000416e61 : push rbp ; mov al, -0x7f ; ret 3
0x0000000000416e80 : push rbp ; mov al, -0x7f ; ret 4
0x0000000000416e9f : push rbp ; mov al, -0x7f ; ret 5
0x0000000000416ebe : push rbp ; mov al, -0x7f ; ret 6
0x0000000000416edd : push rbp ; mov al, -0x7f ; ret 7
0x0000000000401c24 : push rbp ; mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x000000000042137e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004065f0 : pushfq ; mov ah, -1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rax
0x0000000000424b03 : pushfq ; ret 0x8445
0x0000000000416a61 : pushfq ; ret 0xd284
0x0000000000425a4e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000425a7e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000400284 : ret
0x0000000000406c20 : ret 0
0x000000000041e6df : ret 0x10
0x000000000041650c : ret 0x20
0x000000000042669b : ret 0x2030
0x00000000004019f2 : ret 0x2287
0x00000000004017f2 : ret 0x2288
0x0000000000405267 : ret 0x24b9
0x000000000041dc9a : ret 0x280f
0x000000000040ee37 : ret 0x2a
0x0000000000412156 : ret 0x2c1
0x000000000041a5c3 : ret 0x2c22
0x000000000040406e : ret 0x3d
0x0000000000427618 : ret 0x4275
0x0000000000418720 : ret 0x4276
0x0000000000416028 : ret 0x4314
0x000000000040bd9a : ret 0x43fa
0x00000000004051e1 : ret 0x4589
0x000000000041563e : ret 0x484e
0x00000000004049a6 : ret 0x48e7
0x000000000041eac4 : ret 0x50e9
0x0000000000410ab0 : ret 0x5ae8
0x000000000041c843 : ret 0x5e5
0x0000000000413839 : ret 0x611c
0x0000000000421cf4 : ret 0x8348
0x0000000000403c85 : ret 0x8445
0x0000000000402d30 : ret 0x8589
0x000000000040bc30 : ret 0x891a
0x000000000042604c : ret 0x8934
0x0000000000419c87 : ret 0x8948
0x0000000000414bf5 : ret 0x894e
0x0000000000420fec : ret 0x897f
0x0000000000423751 : ret 0x89b6
0x00000000004031c7 : ret 0x89e7
0x0000000000426028 : ret 0x8b34
0x0000000000410a95 : ret 0x8b48
0x000000000041a27c : ret 0x979f
0x0000000000405236 : ret 0x9abc
0x000000000041dcaa : ret 0x9d
0x000000000041e64a : ret 0xa3b9
0x000000000042527b : ret 0xa4be
0x000000000041733c : ret 0xa51c
0x0000000000421329 : ret 0xa6e9
0x000000000040fb05 : ret 0xa9b9
0x000000000040b582 : ret 0xade6
0x0000000000403fee : ret 0xb0
0x0000000000404981 : ret 0xb8e7
0x000000000040f270 : ret 0xb91a
0x000000000041fc26 : ret 0xb948
0x0000000000423a0b : ret 0xb9b6
0x0000000000417683 : ret 0xbe10
0x0000000000401bc5 : ret 0xc148
0x0000000000404020 : ret 0xd284
0x0000000000411323 : ret 0xd4e9
0x00000000004212f2 : ret 0xdde9
0x00000000004041c3 : ret 0xe280
0x0000000000415733 : ret 0xe94e
0x0000000000421387 : ret 0xe97f
0x000000000041193c : ret 0xee8
0x000000000041ea25 : ret 0xefe9
0x0000000000403fb5 : ret 0xf280
0x000000000040fce5 : ret 0xf41
0x000000000041dcb1 : ret 0xf66
0x000000000041f8d6 : ret 0xff3
0x000000000040f45b : ret 0xff9f
0x0000000000410dfe : ret 0xffa5
0x000000000040f641 : ret 0xffbf
0x00000000004100ab : ret 0xffc4
0x000000000040f6e7 : ret 0xffc5
0x000000000040f715 : ret 0xffd5
0x000000000040f7e3 : ret 0xffd8
0x0000000000410151 : ret 0xffd9
0x000000000040f979 : ret 0xffe0
0x000000000040ea4e : ret 0xfffa
0x00000000004155dd : ret 0xfffe
0x0000000000405620 : ret 0xffff
0x0000000000405a1c : ret 1
0x000000000040ffb0 : ret 2
0x0000000000416ac9 : ret 3
0x0000000000411437 : ret 4
0x0000000000416b07 : ret 5
0x0000000000416b26 : ret 6
0x0000000000416b45 : ret 7
0x0000000000411b20 : ret 8
0x00000000004161ab : rol bh, 1 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000041d3aa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004147b4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f372 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405b93 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424e05 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040406c : rol ebx, 1 ; ret 0x3d
0x0000000000402d2e : rol ebx, 1 ; ret 0x8589
0x00000000004161aa : rol r15b, 1 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000409506 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000406c77 : ror byte ptr [r8 + 0x3b], 1 ; or byte ptr [r9 + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000406c78 : ror byte ptr [rax + 0x3b], 1 ; or byte ptr [r9 + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x0000000000416859 : ror byte ptr [rax - 0x75], 1 ; jne 0x416837 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000040885a : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004214cb : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409507 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000419c80 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000416ac0 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x416a5a ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000416e5b : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x416df5 ; push rbp ; mov al, -0x7f ; ret 3
0x000000000041b431 : sahf ; ret 0xd284
0x0000000000428470 : sal cl, 1 ; std ; call qword ptr [rsi]
0x0000000000423ece : salc ; ret
0x0000000000428081 : sar bh, cl ; call rsp
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x00000000004296c8 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x15 ; add byte ptr [rax], al ; nop ; ret
0x00000000004125b9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000419863 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fafe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000427ec1 : sbb edi, edi ; call rsp
0x0000000000427c81 : sbb esi, edi ; call rsp
0x0000000000427ec0 : sbb r15, rdi ; call rsp
0x0000000000414094 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004144ba : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004144bc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041dccf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041351d : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000425a7f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000425a18 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041351c : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000425a4f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004259d8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000428412 : std ; call qword ptr [rsi]
0x00000000004284d2 : std ; call rdx
0x0000000000427b82 : std ; call rsp
0x0000000000427bfa : std ; push qword ptr [rax + rcx - 0x8340000] ; std ; call rsp
0x0000000000427bba : std ; push qword ptr [rdi + rax - 0x12a40000] ; std ; call rsp
0x0000000000427b7a : std ; push qword ptr [rsi + rax - 0x5cc40000] ; std ; call rsp
0x000000000040cb47 : sub al, 0x38 ; ret 0x8589
0x000000000040fb03 : sub al, 0x38 ; ret 0xa9b9
0x0000000000415638 : sub eax, 0xbeb920d6 ; ret 0x484e
0x0000000000426e41 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000426e40 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041939b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000424c48 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420ef4 : test al, 0x2d ; call 0xffffffff8a04749a
0x0000000000420ef3 : test al, 0x2d ; call 0xffffffff8a04749b
0x0000000000420f39 : test al, 0x2d ; jmp 0xffffffff8a0474df
0x0000000000420f38 : test al, 0x2d ; jmp 0xffffffff8a0474e0
0x00000000004211dc : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000420fe8 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000041279d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000405b8f : test al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000041e7fb : test al, 0x70 ; ret 0x4589
0x000000000041eac2 : test al, 0x70 ; ret 0x50e9
0x000000000041ea23 : test al, 0x70 ; ret 0xefe9
0x0000000000419278 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000426dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004130d3 : test byte ptr [rbx], dl ; add al, 0 ; add cl, ch ; ret 1
0x00000000004180c5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041bb64 : test ch, cl ; ret
0x00000000004062bb : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x00000000004065f5 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rax
0x0000000000419380 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004053b0 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004161ad : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x00000000004055df : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041bb63 : test r13b, r9b ; ret
0x0000000000415611 : wait ; ret
0x0000000000401c06 : xchg dword ptr [rdx], esp ; add byte ptr [rcx], al ; ret
0x0000000000401c05 : xchg dword ptr cs:[rdx], esp ; add byte ptr [rcx], al ; ret
0x0000000000409b31 : xchg eax, ebp ; ret
0x0000000000403c84 : xchg eax, ebp ; ret 0x8445
0x000000000040401f : xchg eax, ebp ; ret 0xd284
0x00000000004041c2 : xchg eax, ebp ; ret 0xe280
0x0000000000403fb4 : xchg eax, ebp ; ret 0xf280
0x0000000000424fab : xchg eax, ebx ; ret
0x0000000000413d60 : xchg eax, ebx ; ret 0xd284
0x000000000040cb2b : xchg eax, ecx ; ret
0x0000000000424681 : xchg eax, edi ; ret 0xd284
0x0000000000415715 : xchg eax, edi ; ret 0xfffe
0x000000000040cc7b : xchg eax, edx ; ret
0x000000000041927e : xchg eax, edx ; ret 0xd284
0x0000000000413be6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x1ed25bbb], cl ; ret 0x611c
0x00000000004124b2 : xchg eax, esi ; ret
0x00000000004041f7 : xchg eax, esi ; ret 0xe280
0x0000000000409b13 : xchg eax, esp ; ret
0x00000000004042f4 : xchg eax, esp ; ret 0x8445
0x0000000000404475 : xchg eax, esp ; ret 0xd284
0x000000000040420b : xchg eax, esp ; ret 0xe280
0x00000000004144bb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004259dc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x00000000004049a1 : xor al, 0xffffffb9 ; pop rcx ; ret 0x48e7
0x00000000004049a2 : xor al, 0xffffffffffffffb9 ; pop rcx ; ret 0x48e7
0x00000000004211de : xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000421385 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004052bb : xor byte ptr [rcx + rdi], al ; add al, -0x17 ; ret
0x000000000041573d : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420fea : xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000412ab7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040967d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
