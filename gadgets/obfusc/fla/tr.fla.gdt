0x0000000000424780 : adc ah, -3 ; call qword ptr [rdi]
0x00000000004044fe : adc al, 0x25 ; ret
0x0000000000403d08 : adc al, 0x25 ; ret 0x6262
0x0000000000408e98 : adc byte ptr [rax], al ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x000000000040a6ae : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c48b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403bef : adc dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret
0x0000000000403bd8 : adc dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x6262
0x0000000000419b39 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424821 : adc esi, edi ; call rdi
0x00000000004244ef : add ah, ch ; movsxd rdi, edi ; call rsp
0x000000000042436f : add ah, cl ; mov esi, edi ; call rsp
0x00000000004242af : add ah, cl ; xlatb ; std ; call rsp
0x00000000004242ad : add al, 0 ; add ah, cl ; xlatb ; std ; call rsp
0x0000000000408c7c : add al, 0 ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x000000000040516e : add al, 0 ; add cl, ch ; ret 1
0x000000000040cb39 : add al, 0x10 ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000403bf3 : add al, 0x25 ; ret
0x0000000000403bdc : add al, 0x25 ; ret 0x6262
0x00000000004248df : add al, ah ; cmp dh, bh ; call qword ptr [rax]
0x00000000004248dd : add al, byte ptr [rax] ; add al, ah ; cmp dh, bh ; call qword ptr [rax]
0x000000000041bd83 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408d8a : add al, byte ptr [rax] ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x0000000000405407 : add al, ch ; push rbx ; ret 0xffff
0x000000000042555f : add al, dl ; ret
0x000000000041c17e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041bee6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004227df : add bl, dh ; ret
0x000000000042477b : add byte ptr [rax + rax - 0x2b800000], ah ; std ; call qword ptr [rdi]
0x00000000004246f3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp ah, cl ; std ; call rax
0x000000000040cb3b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040f80d : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x000000000040537a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042553f : add byte ptr [rax], ah ; ret
0x000000000042477e : add byte ptr [rax], al ; adc ah, -3 ; call qword ptr [rdi]
0x000000000042481e : add byte ptr [rax], al ; adc esi, edi ; call rdi
0x000000000041c17c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041bee4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004227dd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040f80b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x0000000000405378 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004227db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404d60 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004227dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a12a : add byte ptr [rax], al ; add byte ptr [rbx + 0x222dd445], cl ; ret
0x000000000040a2ec : add byte ptr [rax], al ; add byte ptr [rbx + 0x232dd445], cl ; ret
0x000000000041987e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000421ec9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000421e45 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000406504 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x0000000000406ac3 : add byte ptr [rax], al ; add byte ptr [rbx - 0xed23fbb], cl ; ret
0x0000000000408c46 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x0000000000420b0e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040f85c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040d938 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040f837 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000421f85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000420858 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040c96d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041178d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004049f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040628e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041c07a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041176f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403d7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000424d39 : add byte ptr [rax], al ; add byte ptr [rsi + rax], ah ; add byte ptr [rax], dh ; ret
0x0000000000425539 : add byte ptr [rax], al ; add byte ptr [rsi + rcx], ah ; add byte ptr [rax], ah ; ret
0x00000000004098b7 : add byte ptr [rax], al ; add cl, ch ; and eax, 0xb8000005 ; ret 0x9042
0x000000000042178d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000424a3a : add byte ptr [rax], al ; add eax, dword ptr fs:[rax] ; add byte ptr [rax], dh ; jno 0x424a4a ; call rdx
0x0000000000404d62 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004195a0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f8b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004090ca : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419af7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040594b : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401323 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000424bfa : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; nop ; mov ch, -2 ; call qword ptr [rsi]
0x00000000004246f6 : add byte ptr [rax], al ; cmp ah, cl ; std ; call rax
0x00000000004244ee : add byte ptr [rax], al ; in al, dx ; movsxd rdi, edi ; call rsp
0x0000000000401359 : add byte ptr [rax], al ; jmp 0x401339
0x00000000004098b8 : add byte ptr [rax], al ; jmp 0x409dec
0x000000000040d500 : add byte ptr [rax], al ; jmp 0x40db66
0x0000000000421789 : add byte ptr [rax], al ; jmp 0x421798
0x00000000004223f9 : add byte ptr [rax], al ; jmp 0x422408
0x00000000004242ee : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and bh, dh ; call rsp
0x000000000041ef57 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000422607 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004107d9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411059 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405379 : add byte ptr [rax], al ; mov rdx, rax ; mov al, 0 ; call 0x401669
0x000000000042446e : add byte ptr [rax], al ; mov word ptr [rax - 1], ds ; call rsp
0x0000000000424bfe : add byte ptr [rax], al ; nop ; mov ch, -2 ; call qword ptr [rsi]
0x0000000000404d0e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041987f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cc38 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000424d1e : add byte ptr [rax], al ; push rax ; ret 0xfffe
0x00000000004227de : add byte ptr [rax], al ; ret
0x00000000004243ee : add byte ptr [rax], al ; ret 0xfffe
0x00000000004246f2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp ah, cl ; std ; call rax
0x0000000000424a3e : add byte ptr [rax], al ; xor byte ptr [rcx - 2], dh ; call rdx
0x0000000000424a3f : add byte ptr [rax], dh ; jno 0x424a45 ; call rdx
0x0000000000424d3f : add byte ptr [rax], dh ; ret
0x000000000040ea2e : add byte ptr [rbx + 0x212db445], cl ; call rdx
0x000000000040ea60 : add byte ptr [rbx + 0x222db445], cl ; call rdx
0x000000000040a12c : add byte ptr [rbx + 0x222dd445], cl ; ret
0x000000000040a2ee : add byte ptr [rbx + 0x232dd445], cl ; ret
0x0000000000419880 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cc39 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e6aa : add byte ptr [rbx + 0x652db445], cl ; add dl, byte ptr [rax] ; ret
0x000000000040e6f5 : add byte ptr [rbx + 0x662db445], cl ; add dl, byte ptr [rax] ; ret
0x000000000040ffa5 : add byte ptr [rbx + 0x662ddc45], cl ; test al, 0x3c ; ret 0x4589
0x000000000040fffd : add byte ptr [rbx + 0x672ddc45], cl ; test al, 0x3c ; ret 0x4589
0x0000000000424a3b : add byte ptr [rbx + rax], ah ; add byte ptr [rax], dh ; jno 0x424a49 ; call rdx
0x000000000040630f : add byte ptr [rbx - 0x1574b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004083f0 : add byte ptr [rbx - 0x26d217bb], cl ; push rbp ; jmp 0x4083c3
0x00000000004083ae : add byte ptr [rbx - 0x27d217bb], cl ; push rbp ; jmp 0x408381
0x0000000000404239 : add byte ptr [rbx - 0x54f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404c18 : add byte ptr [rbx - 0x5634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404cdc : add byte ptr [rbx - 0x5674b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000421ecb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000421e47 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000406506 : add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x0000000000406ac5 : add byte ptr [rbx - 0xed23fbb], cl ; ret
0x0000000000408c48 : add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x0000000000420b10 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040f85e : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040d93a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040f839 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041c1ce : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004017b8 : add byte ptr [rcx], al ; ret
0x0000000000421f87 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004043e8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040c96f : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041178f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004049fb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406290 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004058ee : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411771 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403d7f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004243ef : add byte ptr [rdx + rax*8 - 2], cl ; call rsp
0x000000000040db58 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424d3b : add byte ptr [rsi + rax], ah ; add byte ptr [rax], dh ; ret
0x000000000042432f : add byte ptr [rsi + rcx*2 - 2], bl ; call rsp
0x000000000042553b : add byte ptr [rsi + rcx], ah ; add byte ptr [rax], ah ; ret
0x00000000004098b9 : add cl, ch ; and eax, 0xb8000005 ; ret 0x9042
0x0000000000408401 : add cl, ch ; ret
0x000000000042178f : add cl, ch ; ret 0
0x0000000000405170 : add cl, ch ; ret 1
0x0000000000403bf1 : add dh, al ; add al, 0x25 ; ret
0x0000000000403bda : add dh, al ; add al, 0x25 ; ret 0x6262
0x000000000040e6b0 : add dl, byte ptr [rax] ; ret
0x000000000040e6af : add dl, byte ptr gs:[rax] ; ret
0x000000000040ea2b : add dword ptr [r8], r8d ; add byte ptr [rbx + 0x212db445], cl ; call rdx
0x0000000000407622 : add dword ptr [rax + rax], eax ; add cl, ch ; ret 1
0x0000000000419af5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ea2c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x212db445], cl ; call rdx
0x000000000040ea5e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x222db445], cl ; call rdx
0x000000000040cc37 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408e62 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x00000000004043e6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004058ec : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405e07 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000404e3f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e1d4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ba2e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004017b4 : add eax, 0x224afe ; add ebx, esi ; ret
0x000000000041e83f : add eax, 0x53b80000 ; jrcxz 0x41e8af ; ret 0x8fb9
0x000000000041ef55 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000424a3d : add eax, dword ptr [rax] ; add byte ptr [rax], dh ; jno 0x424a47 ; call rdx
0x0000000000424a3c : add eax, dword ptr fs:[rax] ; add byte ptr [rax], dh ; jno 0x424a48 ; call rdx
0x000000000040177b : add eax, edx ; sar rax, 1 ; jne 0x40178c ; pop rbp ; ret
0x00000000004017b9 : add ebx, esi ; ret
0x0000000000401a4b : add esp, 0x10 ; pop rbp ; ret
0x000000000041c1cc : add esp, 0x100 ; pop rbp ; ret
0x000000000040a6ac : add esp, 0x110 ; pop rbp ; ret
0x000000000041a217 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040f992 : add esp, 0x120 ; pop rbp ; ret
0x000000000040bb61 : add esp, 0x130 ; pop rbp ; ret
0x000000000040642a : add esp, 0x160 ; pop rbp ; ret
0x0000000000408ecf : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000409ddc : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040b9fe : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040cc34 : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x000000000041098d : add esp, 0x20 ; pop rbp ; ret
0x000000000040db56 : add esp, 0x200 ; pop rbp ; ret
0x0000000000408053 : add esp, 0x280 ; pop rbp ; ret
0x0000000000420e13 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000408f8e : add esp, 0x30 ; pop rbp ; ret
0x000000000041ee25 : add esp, 0x380 ; pop rbp ; ret
0x0000000000406525 : add esp, 0x40 ; pop rbp ; ret
0x00000000004019ff : add esp, 0x50 ; pop rbp ; ret
0x0000000000404d0a : add esp, 0x570 ; pop rbp ; ret
0x0000000000404e44 : add esp, 0x60 ; pop rbp ; ret
0x000000000040594e : add esp, 0x70 ; pop rbp ; ret
0x000000000040fc60 : add esp, 0x80 ; pop rbp ; ret
0x000000000040e50c : add esp, 0x90 ; pop rbp ; ret
0x0000000000410e1e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406a18 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000419554 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004056d1 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401326 : add esp, 8 ; ret
0x000000000040177a : add rax, rdx ; sar rax, 1 ; jne 0x40178d ; pop rbp ; ret
0x0000000000401a4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041c1cb : add rsp, 0x100 ; pop rbp ; ret
0x000000000040a6ab : add rsp, 0x110 ; pop rbp ; ret
0x000000000041a216 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040f991 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040bb60 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406429 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000408ece : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000409ddb : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040b9fd : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040cc33 : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x000000000041098c : add rsp, 0x20 ; pop rbp ; ret
0x000000000040db55 : add rsp, 0x200 ; pop rbp ; ret
0x0000000000408052 : add rsp, 0x280 ; pop rbp ; ret
0x0000000000420e12 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000408f8d : add rsp, 0x30 ; pop rbp ; ret
0x000000000041ee24 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000406524 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004019fe : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404d09 : add rsp, 0x570 ; pop rbp ; ret
0x0000000000404e43 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040594d : add rsp, 0x70 ; pop rbp ; ret
0x000000000040fc5f : add rsp, 0x80 ; pop rbp ; ret
0x000000000040e50b : add rsp, 0x90 ; pop rbp ; ret
0x0000000000410e1d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406a17 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000419553 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004056d0 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401325 : add rsp, 8 ; ret
0x000000000041d46b : and al, 0xffffffffffffffac ; ret 0x89cc
0x000000000041ea04 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000402da9 : and al, 0xffffffffffffffca ; ret
0x000000000040ba2d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424bfc : and al, 5 ; add byte ptr [rax], al ; nop ; mov ch, -2 ; call qword ptr [rsi]
0x00000000004017b7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004242f1 : and bh, dh ; call rsp
0x0000000000408e2c : and byte ptr [rax], al ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x000000000040f994 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041019f : and eax, 0x6285d0 ; pop rbp ; ret
0x00000000004101c3 : and eax, 0x6285d8 ; pop rbp ; ret
0x00000000004098bb : and eax, 0xb8000005 ; ret 0x9042
0x0000000000405380 : call 0x401662
0x0000000000419599 : call 0xffffffffe9041ee9
0x0000000000419598 : call 0xffffffffe9041eea
0x0000000000414fdd : call 0xfffffffff739d574
0x00000000004208d5 : call 0xffffffffff468eaa
0x0000000000417b09 : call 0xffffffffff5600db
0x0000000000417b08 : call 0xffffffffff5600dc
0x0000000000417b09 : call 0xffffffffff5600dd
0x0000000000417b08 : call 0xffffffffff5600de
0x00000000004227b9 : call qword ptr [r12 + rbx*8]
0x0000000000416e96 : call qword ptr [rax]
0x0000000000424a63 : call qword ptr [rbx]
0x0000000000418b25 : call qword ptr [rcx]
0x0000000000424783 : call qword ptr [rdi]
0x0000000000416ac3 : call qword ptr [rdx]
0x0000000000416a5f : call qword ptr [rsi]
0x00000000004227ba : call qword ptr [rsp + rbx*8]
0x00000000004017dd : call rax
0x000000000041527a : call rbx
0x00000000004040f6 : call rcx
0x0000000000424823 : call rdi
0x000000000040601c : call rdx
0x000000000041c184 : call rsi
0x00000000004242b3 : call rsp
0x0000000000421e4c : cdq ; ret
0x000000000041f722 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421120 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041ad9e : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000406a16 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040177f : clc ; jne 0x401788 ; pop rbp ; ret
0x00000000004081c6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000410176 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041775d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004246f8 : cmp ah, cl ; std ; call rax
0x000000000041fedd : cmp al, -0x2a ; ret
0x00000000004248e1 : cmp dh, bh ; call qword ptr [rax]
0x000000000040c83f : cmp eax, 0x81f4558b ; ret 0xffd0
0x0000000000403e76 : cmp eax, 0xb9e22708 ; ret
0x000000000040173d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401750 ; pop rbp ; ret
0x0000000000419a34 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000042194b : cwde ; js 0x4218f5 ; ret
0x0000000000421992 : cwde ; js 0x42193c ; ret
0x00000000004219cc : cwde ; js 0x421976 ; ret
0x0000000000403d43 : dec byte ptr [rdi] ; sahf ; ret 0xe280
0x0000000000403d15 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xe280
0x00000000004017b5 : dec byte ptr [rdx + 0x22] ; add byte ptr [rcx], al ; ret
0x0000000000403e4b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417902 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000417c0d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000419114 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040761f : dec dword ptr [rdi] ; test byte ptr [rcx], al ; add al, 0 ; add cl, ch ; ret 1
0x000000000040d334 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff9], bl ; ret 1
0x000000000041aec3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000405e03 : dec dword ptr [rdi] ; test dh, al ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000409a51 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000040b987 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000404567 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000409cca : enter -0x74b8, 0x51 ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040b983 : enter -2, -1 ; dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000042068b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000407c6f : enter 0x100, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000407b3e : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f194 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004058ea : fadd dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b6cf : fadd qword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041aa49 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004083b3 : fcom dword ptr [rbp - 0x15] ; ret 0x4589
0x0000000000404074 : fldcw word ptr [rsi + 0x250c8a5c] ; ret 0x6262
0x000000000041ca84 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040cb3f : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040ca3a : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040d514 : fmul dword ptr [rax - 0x7f] ; ret 2
0x0000000000403d55 : fmul dword ptr [rbx + 0x753be075] ; fmul qword ptr [rdi] ; pushfq ; ret 0xd284
0x00000000004227bc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403d5b : fmul qword ptr [rdi] ; pushfq ; ret 0xd284
0x00000000004083f5 : fst dword ptr [rbp - 0x15] ; ret 0x4589
0x0000000000408b6a : fst dword ptr [rbp - 0x15] ; ret 0xd6b9
0x000000000040a3eb : fsubr st(1) ; ret
0x0000000000401a49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042127c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404d08 : hlt ; add rsp, 0x570 ; pop rbp ; ret
0x0000000000401750 : hlt ; pop rbp ; mov edi, 0x626270 ; jmp rax
0x000000000041b81e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004170b9 : in al, -0x7f ; ret 0xff9f
0x000000000041729f : in al, -0x7f ; ret 0xffbf
0x0000000000417345 : in al, -0x7f ; ret 0xffc5
0x0000000000417373 : in al, -0x7f ; ret 0xffd5
0x0000000000417441 : in al, -0x7f ; ret 0xffd8
0x00000000004175d7 : in al, -0x7f ; ret 0xffe0
0x000000000040f990 : in al, dx ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000408051 : in al, dx ; add rsp, 0x280 ; pop rbp ; ret
0x000000000041f02f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041f48f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041116a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004244f0 : in al, dx ; movsxd rdi, edi ; call rsp
0x000000000041ef5b : in al, dx ; pop rbp ; ret
0x0000000000408c4e : in al, dx ; ret
0x000000000042204b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041872f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000416cf1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040484b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004043e4 : inc dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000403979 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000404709 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004049f7 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a1e8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041388f : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000416ecf : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000406aca : int1 ; ret
0x0000000000401743 : ja 0x40174a ; pop rbp ; ret
0x0000000000425241 : jae 0x425244 ; call rdx
0x000000000040174f : je 0x40174d ; pop rbp ; mov edi, 0x626270 ; jmp rax
0x0000000000406348 : jg 0x40635c ; xchg eax, ebp ; ret 0xd284
0x000000000041b338 : jge 0x41b34f ; ret
0x000000000041b823 : jge 0x41b83a ; ret
0x00000000004225b9 : jge 0x4225b3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041b20c : jl 0x41b223 ; ret
0x000000000040135b : jmp 0x401337
0x0000000000403bed : jmp 0x404d1a
0x0000000000407c17 : jmp 0x408064
0x00000000004083b5 : jmp 0x40837a
0x00000000004083f7 : jmp 0x4083bc
0x0000000000408b6c : jmp 0x408b31
0x00000000004098ba : jmp 0x409dea
0x000000000040a4ce : jmp 0x40a6bb
0x000000000040cb56 : jmp 0x40cc45
0x000000000040d502 : jmp 0x40db64
0x000000000041687d : jmp 0x419563
0x0000000000419311 : jmp 0x419565
0x000000000041b81d : jmp 0x41bd95
0x000000000041eb21 : jmp 0x41ee33
0x000000000042178b : jmp 0x421796
0x00000000004223fb : jmp 0x422406
0x000000000041f75e : jmp 0xffffffffb703fb2a
0x000000000042194a : jmp 0xffffffffc3e691eb
0x0000000000402174 : jmp qword ptr [rax]
0x0000000000417b0f : jmp qword ptr [rbx]
0x00000000004194e0 : jmp qword ptr [rcx]
0x000000000040490f : jmp qword ptr [rdi]
0x0000000000419a35 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000414fe6 : jmp qword ptr [rdx]
0x0000000000404a92 : jmp qword ptr [rsi]
0x0000000000401757 : jmp rax
0x0000000000418632 : jmp rbx
0x0000000000418cce : jmp rdi
0x0000000000401797 : jmp rdx
0x00000000004186c9 : jmp rsp
0x0000000000401780 : jne 0x401787 ; pop rbp ; ret
0x000000000041a1e6 : jne 0x41a1ef ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000424a41 : jno 0x424a43 ; call rdx
0x0000000000404d0c : jo 0x404d18 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405950 : jo 0x4059b1 ; ret
0x000000000040e1db : jo 0x40e23c ; ret
0x000000000040f204 : jo 0x40f265 ; ret
0x000000000041a401 : jo 0x41a462 ; ret
0x000000000041a524 : jo 0x41a585 ; ret
0x000000000041a65e : jo 0x41a6bf ; ret
0x000000000041cb2c : jo 0x41cb8d ; ret
0x0000000000421124 : jo 0x421185 ; ret
0x000000000041d338 : jrcxz 0x41d39e ; ret 0x8589
0x000000000041d38c : jrcxz 0x41d3f2 ; ret 0x8589
0x000000000041e844 : jrcxz 0x41e8aa ; ret 0x8fb9
0x000000000041ea6f : jrcxz 0x41ead5 ; ret 0x8fb9
0x0000000000419556 : js 0x41956a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042194c : js 0x4218f4 ; ret
0x0000000000421993 : js 0x42193b ; ret
0x00000000004219cd : js 0x421975 ; ret
0x0000000000405e06 : lock add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004242f0 : lodsb al, byte ptr [rsi] ; and bh, dh ; call rsp
0x000000000041d418 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x000000000041ea05 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x000000000040ac77 : lodsd eax, dword ptr [rsi] ; sub dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x0000000000403e79 : loop 0x403e36 ; ret
0x0000000000403d7b : loopne 0x403d84 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403fb2 : loopne 0x403fbd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040409a : loopne 0x4040a4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040412d : loopne 0x404137 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004042c5 : loopne 0x4042d0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406523 : loopne 0x406573 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000406522 : loopne 0x406574 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004069ea : loopne 0x4069f3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ef93 : loopne 0x40efe6 ; add esp, 0x160 ; pop rbp ; ret
0x000000000041098b : loopne 0x4109db ; add esp, 0x20 ; pop rbp ; ret
0x000000000041098a : loopne 0x4109dc ; add esp, 0x20 ; pop rbp ; ret
0x000000000041152e : loopne 0x411537 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041c870 : loopne 0x41c879 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cc7c : loopne 0x41cccc ; add esp, 0x40 ; pop rbp ; ret
0x000000000041cc7b : loopne 0x41cccd ; add esp, 0x40 ; pop rbp ; ret
0x000000000040d936 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040990d : mov ah, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040e6f8 : mov ah, 0x2d ; add dl, byte ptr [rax] ; ret
0x000000000040e6ad : mov ah, 0x2d ; add dl, byte ptr gs:[rax] ; ret
0x0000000000401bf0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042446c : mov ah, 0xb ; add byte ptr [rax], al ; mov word ptr [rax - 1], ds ; call rsp
0x00000000004244ec : mov ah, 0xd ; add byte ptr [rax], al ; in al, dx ; movsxd rdi, edi ; call rsp
0x00000000004242ec : mov ah, 5 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and bh, dh ; call rsp
0x00000000004243ec : mov ah, 9 ; add byte ptr [rax], al ; ret 0xfffe
0x00000000004208aa : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040537e : mov al, 0 ; call 0x401664
0x00000000004116eb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042169d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042184d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422049 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040dc73 : mov al, byte ptr [rbp - 0x29] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040df6e : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004245b1 : mov bh, bh ; call rsp
0x00000000004101c1 : mov byte ptr [0x6285d8], al ; pop rbp ; ret
0x00000000004190a8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004081c7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004017b3 : mov byte ptr [rip + 0x224afe], 1 ; ret
0x000000000040ac76 : mov ch, -0x53 ; sub dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x0000000000424c01 : mov ch, -2 ; call qword ptr [rsi]
0x0000000000404e41 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e1d6 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ba30 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000422175 : mov dl, -0x47 ; ret
0x000000000041019d : mov dword ptr [0x6285d0], edi ; pop rbp ; ret
0x0000000000408081 : mov dword ptr [rax + 0x10], 0xffffffff ; pop rbp ; ret
0x00000000004113a7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041116b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004112df : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000406016 : mov dword ptr [rbp - 0x154], ecx ; call rdx
0x0000000000410989 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bee : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eb1e : mov dword ptr [rbp - 0x7c], eax ; jmp 0x41ee36
0x0000000000401a47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041155d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040aabc : mov dword ptr [rcx + 8], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bce3 : mov eax, 0xd3900d2d ; ret 0x4589
0x000000000040bd28 : mov eax, 0xd3900e2d ; ret 0x8589
0x000000000041105f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041cbbb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff2e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c89f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004107dc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041f02d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ef59 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041ccbe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004081ac : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004113aa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406521 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410f54 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041105c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411165 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004112e1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041a3fb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042127a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410174 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f720 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042111e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017db : mov ebp, esp ; call rax
0x0000000000401741 : mov ebp, esp ; ja 0x40174c ; pop rbp ; ret
0x000000000040db91 : mov ebx, 0x48ffff37 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000411168 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004017d5 : mov edi, 0x625e20 ; mov rbp, rsp ; call rax
0x0000000000401752 : mov edi, 0x626270 ; jmp rax
0x0000000000401792 : mov edi, 0x626270 ; jmp rdx
0x00000000004243e9 : mov edi, 0x9b4fffe ; add byte ptr [rax], al ; ret 0xfffe
0x00000000004227b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004227b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040537c : mov edx, eax ; mov al, 0 ; call 0x401666
0x0000000000401790 : mov esi, eax ; mov edi, 0x626270 ; jmp rdx
0x0000000000424371 : mov esi, edi ; call rsp
0x0000000000402da8 : mov fs, word ptr [rdx + rcx*8] ; ret
0x000000000041019c : mov qword ptr [0x6285d0], rdi ; pop rbp ; ret
0x0000000000408080 : mov qword ptr [rax + 0x10], -1 ; pop rbp ; ret
0x000000000041155c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040aabb : mov qword ptr [rcx + 8], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e6f7 : mov r12b, 0x2d ; add dl, byte ptr [rax] ; ret
0x000000000040e6ac : mov r12b, 0x2d ; add dl, byte ptr gs:[rax] ; ret
0x0000000000401bef : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040bce2 : mov r8d, 0xd3900d2d ; ret 0x4589
0x000000000040bd27 : mov r8d, 0xd3900e2d ; ret 0x8589
0x000000000041cbba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff2d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c89e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004107db : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041ccbd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004081ab : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406520 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410f53 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041105b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041a3fa : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017da : mov rbp, rsp ; call rax
0x0000000000401740 : mov rbp, rsp ; ja 0x40174d ; pop rbp ; ret
0x000000000040537b : mov rdx, rax ; mov al, 0 ; call 0x401667
0x000000000040178f : mov rsi, rax ; mov edi, 0x626270 ; jmp rdx
0x000000000041a1ea : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041a1eb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000424470 : mov word ptr [rax - 1], ds ; call rsp
0x000000000041793c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004223ee : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041b81c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x41bd96
0x000000000042194d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004244f1 : movsxd rdi, edi ; call rsp
0x0000000000404e40 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e1d5 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ba2f : movzx eax, al ; pop rbp ; ret
0x00000000004081ca : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000424c00 : nop ; mov ch, -2 ; call qword ptr [rsi]
0x00000000004227d8 : nop dword ptr [rax + rax] ; ret
0x0000000000419557 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404078 : or al, 0x25 ; ret 0x6262
0x000000000040ac7a : or byte ptr [r15], 0x8f ; ret 6
0x0000000000408d1e : or byte ptr [rax], al ; add byte ptr [rcx + 0x45c7f055], cl ; in al, dx ; ret
0x000000000040fb53 : or byte ptr [rcx + 0x48ce89cf], 0x89 ; ret 0x8b48
0x000000000040ac7b : or byte ptr [rdi], 0x8f ; ret 6
0x0000000000403e77 : or byte ptr [rdi], ah ; loop 0x403e38 ; ret
0x00000000004243ed : or dword ptr [rax], eax ; add byte ptr [rdx + rax*8 - 2], cl ; call rsp
0x000000000041aec7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040a7b8 : or dword ptr [rcx - 0x7bf043bb], ecx ; ret
0x000000000041a5e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042184f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042169f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004227cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004227ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419882 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004227d0 : pop r14 ; pop r15 ; ret
0x0000000000419884 : pop r15 ; pop rbp ; ret
0x00000000004227d2 : pop r15 ; ret
0x0000000000421ec8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004017b2 : pop rbp ; mov byte ptr [rip + 0x224afe], 1 ; ret
0x0000000000401751 : pop rbp ; mov edi, 0x626270 ; jmp rax
0x000000000040178e : pop rbp ; mov rsi, rax ; mov edi, 0x626270 ; jmp rdx
0x00000000004227cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004227cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401745 : pop rbp ; ret
0x0000000000419881 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cc3a : pop rbx ; pop rbp ; ret
0x0000000000422174 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000419885 : pop rdi ; pop rbp ; ret
0x00000000004227d3 : pop rdi ; ret
0x00000000004225bb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000419883 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004227d1 : pop rsi ; pop r15 ; ret
0x00000000004227cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413792 : pop rsp ; ret
0x0000000000403bec : popfq ; jmp 0x404d1b
0x0000000000421f89 : popfq ; ret 0xd284
0x000000000040550f : popfq ; xor byte ptr [rbx], 0x8a ; adc al, 0x25 ; ret
0x0000000000418f7f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004242ab : push qword ptr [rsp + rax - 0x28340000] ; std ; call rsp
0x0000000000401a01 : push rax ; pop rbp ; ret
0x0000000000424d20 : push rax ; ret 0xfffe
0x000000000041c17b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041ca83 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040cb3e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040ca39 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040d513 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x00000000004170b8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041729e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000417344 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000417372 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000417440 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004175d6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004083b4 : push rbp ; jmp 0x40837b
0x00000000004083f6 : push rbp ; jmp 0x4083bd
0x0000000000408b6b : push rbp ; jmp 0x408b32
0x00000000004017d4 : push rbp ; mov edi, 0x625e20 ; mov rbp, rsp ; call rax
0x000000000041d38b : push rbx ; jrcxz 0x41d3f3 ; ret 0x8589
0x000000000041e843 : push rbx ; jrcxz 0x41e8ab ; ret 0x8fb9
0x000000000041ea6e : push rbx ; jrcxz 0x41ead6 ; ret 0x8fb9
0x0000000000405409 : push rbx ; ret 0xffff
0x0000000000409ccd : push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041d337 : push rdx ; jrcxz 0x41d39f ; ret 0x8589
0x0000000000420b13 : pushfq ; ret 0x8445
0x0000000000403d5d : pushfq ; ret 0xd284
0x0000000000401329 : ret
0x00000000004052cb : ret 0
0x000000000041fcb9 : ret 0x10
0x0000000000403834 : ret 0x13
0x000000000040fa05 : ret 0x1702
0x000000000041cfa7 : ret 0x1a
0x000000000042207b : ret 0x2030
0x0000000000401562 : ret 0x224b
0x0000000000401362 : ret 0x224c
0x0000000000416a97 : ret 0x2a
0x0000000000418710 : ret 0x2ae8
0x0000000000419db6 : ret 0x2c1
0x000000000040f849 : ret 0x31e8
0x000000000040c289 : ret 0x374d
0x000000000041ce67 : ret 0x3bef
0x000000000040df32 : ret 0x40e9
0x00000000004139fa : ret 0x43fa
0x00000000004083b6 : ret 0x4589
0x0000000000410090 : ret 0x558b
0x0000000000421423 : ret 0x5e5
0x00000000004081f8 : ret 0x615
0x0000000000403bde : ret 0x6262
0x000000000040cb99 : ret 0x8148
0x000000000040397d : ret 0x8445
0x000000000040bd2d : ret 0x8589
0x0000000000413890 : ret 0x891a
0x0000000000421a2c : ret 0x8934
0x0000000000409cd1 : ret 0x8948
0x000000000041f761 : ret 0x89b6
0x000000000041d419 : ret 0x89cc
0x000000000040c114 : ret 0x89f0
0x0000000000421a08 : ret 0x8b34
0x000000000040d89d : ret 0x8b48
0x000000000041ea06 : ret 0x8bcc
0x000000000040cac0 : ret 0x8d8b
0x000000000041e846 : ret 0x8fb9
0x00000000004097c5 : ret 0x9042
0x0000000000402264 : ret 0xa0ec
0x0000000000417765 : ret 0xa9b9
0x00000000004131e2 : ret 0xade6
0x000000000040df68 : ret 0xae9
0x0000000000403dab : ret 0xb0
0x0000000000416ed0 : ret 0xb91a
0x000000000041fa1b : ret 0xb9b6
0x000000000040c7ca : ret 0xb9f0
0x0000000000401775 : ret 0xc148
0x0000000000403f4c : ret 0xd
0x0000000000403d5e : ret 0xd284
0x0000000000418f83 : ret 0xd4e9
0x0000000000408b6d : ret 0xd6b9
0x000000000040ce30 : ret 0xd8c9
0x000000000040c5c5 : ret 0xdeb9
0x0000000000403d18 : ret 0xe280
0x000000000041959c : ret 0xee8
0x0000000000417945 : ret 0xf41
0x0000000000410c9a : ret 0xff06
0x00000000004170bb : ret 0xff9f
0x0000000000418a5e : ret 0xffa5
0x00000000004172a1 : ret 0xffbf
0x0000000000417d0b : ret 0xffc4
0x0000000000417347 : ret 0xffc5
0x000000000040c844 : ret 0xffd0
0x0000000000417375 : ret 0xffd5
0x0000000000417443 : ret 0xffd8
0x0000000000417db1 : ret 0xffd9
0x00000000004175d9 : ret 0xffe0
0x00000000004166ae : ret 0xfffa
0x00000000004019fa : ret 0xfffc
0x00000000004243f1 : ret 0xfffe
0x0000000000405382 : ret 0xffff
0x0000000000405172 : ret 1
0x000000000040d517 : ret 2
0x000000000040d431 : ret 4
0x000000000041aef8 : ret 5
0x000000000040ac7e : ret 6
0x0000000000419780 : ret 8
0x00000000004062db : rol byte ptr [r9 + 0xf], -0x6b ; ret 0x8445
0x0000000000420804 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004062dc : rol byte ptr [rcx + 0xf], -0x6b ; ret 0x8445
0x000000000040ba00 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420e15 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411166 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040cb95 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000040177c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40178b ; pop rbp ; ret
0x000000000040cb96 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x000000000040e1d7 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40e240 ; ret
0x000000000040f200 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40f269 ; ret
0x000000000040db54 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411167 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000041ca80 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040c971 : sahf ; ret 0xd284
0x0000000000403d45 : sahf ; ret 0xe280
0x000000000041fede : salc ; ret
0x000000000040177e : sar eax, 1 ; jne 0x401789 ; pop rbp ; ret
0x000000000040177d : sar rax, 1 ; jne 0x40178a ; pop rbp ; ret
0x00000000004246f4 : sbb al, 0 ; add byte ptr [rax], al ; cmp ah, cl ; std ; call rax
0x0000000000409cce : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041a219 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004054f7 : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040ac75 : sbb dh, byte ptr [rbp + 0x458929ad] ; or byte ptr [rdi], 0x8f ; ret 6
0x000000000041c663 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041775e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040ba2a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ba2c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000424782 : std ; call qword ptr [rdi]
0x00000000004246fa : std ; call rax
0x00000000004242b2 : std ; call rsp
0x00000000004242aa : std ; push qword ptr [rsp + rax - 0x28340000] ; std ; call rsp
0x00000000004147a7 : sub al, 0x38 ; ret 0x8589
0x0000000000417763 : sub al, 0x38 ; ret 0xa9b9
0x000000000040ac78 : sub dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x000000000040550e : sub eax, 0x8a33809d ; adc al, 0x25 ; ret
0x000000000042280d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042280c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041c19b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000420c58 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ffab : test al, 0x3c ; ret 0x4589
0x000000000041008e : test al, 0x3c ; ret 0x558b
0x000000000041a3fd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041c078 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004227da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407621 : test byte ptr [rcx], al ; add al, 0 ; add cl, ch ; ret 1
0x000000000040d336 : test byte ptr [rdi - 0x16fffff9], bl ; ret 1
0x000000000041aec5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041e964 : test ch, cl ; ret
0x0000000000405e05 : test dh, al ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041c180 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041bee8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004101a1 : test dword ptr [rdx], esp ; pop rbp ; ret
0x000000000041e963 : test r13b, r9b ; ret
0x0000000000411791 : xchg eax, ebp ; ret
0x000000000040397c : xchg eax, ebp ; ret 0x8445
0x00000000004049fd : xchg eax, ebp ; ret 0xd284
0x000000000041478b : xchg eax, ecx ; ret
0x00000000004054f9 : xchg eax, edi ; ret 0xd284
0x00000000004148db : xchg eax, edx ; ret
0x00000000004058f0 : xchg eax, edx ; ret 0xd284
0x000000000041a112 : xchg eax, esi ; ret
0x000000000040b989 : xchg eax, esi ; ret 0xd284
0x000000000040d93d : xchg eax, esp ; ret
0x000000000040f83c : xchg eax, esp ; ret 0x8445
0x0000000000403d81 : xchg eax, esp ; ret 0xd284
0x0000000000403d17 : xchg eax, esp ; ret 0xe280
0x000000000040ba2b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040dc75 : xlatb ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004242b1 : xlatb ; std ; call rsp
0x0000000000405510 : xor byte ptr [rbx], 0x8a ; adc al, 0x25 ; ret
0x0000000000424a40 : xor byte ptr [rcx - 2], dh ; call rdx
0x000000000040bb63 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a717 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004112dd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
