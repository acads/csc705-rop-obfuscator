0x000000000040e65b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c039 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402297 : add al, 0 ; add dh, al ; ret
0x000000000041340f : add al, ah ; idiv dh ; call qword ptr [rsi]
0x0000000000402798 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040df53 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e34e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040e0b6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004126ef : add bl, dh ; ret
0x000000000040cecc : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x412b
0x0000000000402611 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040e34c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040e0b4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004126ed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ceca : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x412b
0x000000000040260f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004126eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004126ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040bd7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411dd9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000411d55 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000410a1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040ac31 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000411e95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000410768 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004116d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403c8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004031bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041059d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e24a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403c6f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a6eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041169d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041340a : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, ah ; idiv dh ; call qword ptr [rsi]
0x000000000040c03b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040baa0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411258 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e65d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bff7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000411699 : add byte ptr [rax], al ; jmp 0x4116a8
0x0000000000412309 : add byte ptr [rax], al ; jmp 0x412318
0x0000000000412517 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402df9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403559 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004026f3 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bd7f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ba58 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004126ee : add byte ptr [rax], al ; ret
0x000000000040bd80 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ba59 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411ddb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000411d57 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000410a20 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040ac33 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041340b : add byte ptr [rcx + rax], al ; add al, ah ; idiv dh ; call qword ptr [rsi]
0x000000000040e39e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x0000000000411e97 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041076a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004116da : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403c8f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004031c1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041059f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e24c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403c71 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a6ed : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401bb2 : add cl, ch ; ret
0x000000000041169f : add cl, ch ; ret 0
0x0000000000401fb3 : add cl, ch ; ret 1
0x0000000000402299 : add dh, al ; ret
0x000000000041340d : add dword ptr [rax], eax ; add al, ah ; idiv dh ; call qword ptr [rsi]
0x000000000040bff5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c71a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041340c : add dword ptr [rax], r8d ; add al, ah ; idiv dh ; call qword ptr [rsi]
0x00000000004115b1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x213d3e ; add ebx, esi ; ret
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x000000000040178b : add esp, 0x10 ; pop rbp ; ret
0x000000000040e39c : add esp, 0x100 ; pop rbp ; ret
0x000000000040c717 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040e50c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004026ef : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040baa3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000410d23 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041125b : add esp, 0x30 ; pop rbp ; ret
0x0000000000401741 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401932 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402ae6 : add esp, 0x60 ; pop rbp ; ret
0x000000000040c8ff : add esp, 0x70 ; pop rbp ; ret
0x000000000040cf6c : add esp, 0x80 ; pop rbp ; ret
0x000000000040fa42 : add esp, 0x90 ; pop rbp ; ret
0x000000000040331e : add esp, 0xa0 ; pop rbp ; ret
0x000000000040ba54 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x000000000040178a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040e39b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040c716 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040e50b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004026ee : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040baa2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000410d22 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041125a : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401740 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401931 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402ae5 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040c8fe : add rsp, 0x70 ; pop rbp ; ret
0x000000000040cf6b : add rsp, 0x80 ; pop rbp ; ret
0x000000000040fa41 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040331d : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040ba53 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x00000000004115b0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004027bf : and eax, 0x6152a0 ; pop rbp ; ret
0x00000000004027e3 : and eax, 0x6152a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040e530 : call 0x401279
0x0000000000402309 : call 0x401468
0x000000000040ba99 : call 0xffffffffe90343e9
0x000000000040ba98 : call 0xffffffffe90343ea
0x00000000004074dd : call 0xfffffffff738fa74
0x00000000004107e5 : call 0xffffffffff458dba
0x000000000040a009 : call 0xffffffffff5525db
0x000000000040a008 : call 0xffffffffff5525dc
0x000000000040a009 : call 0xffffffffff5525dd
0x000000000040a008 : call 0xffffffffff5525de
0x00000000004126c9 : call qword ptr [r12 + rbx*8]
0x0000000000409396 : call qword ptr [rax]
0x000000000040b025 : call qword ptr [rcx]
0x0000000000408fc3 : call qword ptr [rdx]
0x0000000000408f5f : call qword ptr [rsi]
0x00000000004126ca : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x000000000040777a : call rbx
0x0000000000413993 : call rdx
0x000000000040e354 : call rsi
0x0000000000411d5c : cdq ; ret
0x000000000040f632 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411030 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x0000000000409c5d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040fded : cmp al, -0x2a ; ret
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x0000000000401556 : cmp eax, 0xf3010021 ; ret
0x000000000040e531 : cmp ebp, dword ptr [rip - 0x72b70001] ; xor al, 0x25 ; ret 0x412e
0x000000000040cec9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x412b
0x000000000040bf34 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041185b : cwde ; js 0x411805 ; ret
0x00000000004118a2 : cwde ; js 0x41184c ; ret
0x00000000004118dc : cwde ; js 0x411886 ; ret
0x000000000040e534 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x412e
0x000000000040d717 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409e02 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a10d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040b614 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000401bac : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffff6], ah ; ret
0x000000000040d093 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000409148 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041059b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004031bd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f0a4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040cf49 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ec54 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000402615 : fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004126cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401789 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026ed : hlt ; add rsp, 0x1d0 ; pop rbp ; ret
0x000000000041118c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x615228 ; jmp rax
0x0000000000413411 : idiv dh ; call qword ptr [rsi]
0x000000000040d9ee : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004095b9 : in al, -0x7f ; ret 0xff9f
0x000000000040979f : in al, -0x7f ; ret 0xffbf
0x0000000000409845 : in al, -0x7f ; ret 0xffc5
0x0000000000409873 : in al, -0x7f ; ret 0xffd5
0x0000000000409941 : in al, -0x7f ; ret 0xffd8
0x0000000000409ad7 : in al, -0x7f ; ret 0xffe0
0x000000000040f39f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040366a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411f5b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ac2f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004091f1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b7da : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004021bb : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040c6e8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000405d8f : insd dword ptr [rdi], dx ; ret 0x891a
0x00000000004093cf : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x615228 ; jmp rax
0x000000000040d508 : jge 0x40d51f ; ret
0x000000000040d9f3 : jge 0x40da0a ; ret
0x00000000004124c9 : jge 0x4124c3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040d3dc : jl 0x40d3f3 ; ret
0x000000000040132b : jmp 0x401167
0x0000000000402295 : jmp 0x4026fe
0x0000000000408d7d : jmp 0x40ba63
0x000000000040b811 : jmp 0x40ba65
0x000000000040cec8 : jmp 0x40cf7d
0x000000000040d9ed : jmp 0x40df65
0x000000000041169b : jmp 0x4116a6
0x000000000041230b : jmp 0x412316
0x000000000040f66e : jmp 0xffffffffb702fa3a
0x000000000041185a : jmp 0xffffffffc3e590fb
0x0000000000408e9d : jmp qword ptr [rax]
0x000000000040a00f : jmp qword ptr [rbx]
0x000000000040b9e0 : jmp qword ptr [rcx]
0x000000000040bf35 : jmp qword ptr [rdx + 0xc2e968]
0x00000000004074e6 : jmp qword ptr [rdx]
0x0000000000409f9f : jmp qword ptr [rsi]
0x00000000004014f7 : jmp rax
0x000000000040ab32 : jmp rbx
0x000000000040b1ce : jmp rdi
0x0000000000401537 : jmp rdx
0x000000000040abc9 : jmp rsp
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x000000000040c6e6 : jne 0x40c6ef ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040c901 : jo 0x40c962 ; ret
0x000000000040ca24 : jo 0x40ca85 ; ret
0x000000000040cb5e : jo 0x40cbbf ; ret
0x000000000040ecfc : jo 0x40ed5d ; ret
0x0000000000411034 : jo 0x411095 ; ret
0x000000000040ba56 : js 0x40ba6a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041185c : js 0x411804 ; ret
0x00000000004118a3 : js 0x41184b ; ret
0x00000000004118dd : js 0x411885 ; ret
0x0000000000403a2e : loopne 0x403a37 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ea40 : loopne 0x40ea49 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ee4c : loopne 0x40ee9c ; add esp, 0x40 ; pop rbp ; ret
0x000000000040ee4b : loopne 0x40ee9d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000402294 : mov ah, -0x17 ; pop rbp ; add al, 0 ; add dh, al ; ret
0x0000000000401930 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004107ba : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403beb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004115ad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041175d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411f59 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004027e1 : mov byte ptr [0x6152a8], al ; pop rbp ; ret
0x000000000040b5a8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401553 : mov byte ptr [rip + 0x213d3e], 1 ; ret
0x00000000004115b3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000412085 : mov dl, -0x47 ; ret
0x00000000004027bd : mov dword ptr [0x6152a0], edi ; pop rbp ; ret
0x00000000004038a7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040366b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004037df : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040192e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401787 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a5d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040355f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ed8b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402f63 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ea6f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402dfc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ee8e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e760 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004038aa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ee4a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403454 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040355c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403665 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004037e1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040c8fb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041118a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f630 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041102e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x0000000000403668 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401575 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x615228 ; jmp rax
0x0000000000401532 : mov edi, 0x615228 ; jmp rdx
0x00000000004126c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004126c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401530 : mov esi, eax ; mov edi, 0x615228 ; jmp rdx
0x00000000004027bc : mov qword ptr [0x6152a0], rdi ; pop rbp ; ret
0x0000000000403a5c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402293 : mov r12b, -0x17 ; pop rbp ; add al, 0 ; add dh, al ; ret
0x000000000040192f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040ed8a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402f62 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ea6e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402dfb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ee8d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e75f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ee49 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403453 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040355b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c8fa : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x000000000040152f : mov rsi, rax ; mov edi, 0x615228 ; jmp rdx
0x000000000040c6ea : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040c6eb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000409e3c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004122fe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040d9ec : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x40df66
0x000000000041185d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004115b2 : movzx eax, al ; pop rbp ; ret
0x00000000004126e8 : nop dword ptr [rax + rax] ; ret
0x000000000040ba57 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401bb0 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000040d097 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040cae1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041175f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004115af : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004126dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004126de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bd82 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004126e0 : pop r14 ; pop r15 ; ret
0x000000000040bd84 : pop r15 ; pop rbp ; ret
0x00000000004126e2 : pop r15 ; ret
0x0000000000411dd8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000402296 : pop rbp ; add al, 0 ; add dh, al ; ret
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x213d3e], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x615228 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x615228 ; jmp rdx
0x00000000004126db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004126df : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014e5 : pop rbp ; ret
0x000000000040bd81 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ba5a : pop rbx ; pop rbp ; ret
0x0000000000412084 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040bd85 : pop rdi ; pop rbp ; ret
0x00000000004126e3 : pop rdi ; ret
0x00000000004124cb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bd83 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004126e1 : pop rsi ; pop r15 ; ret
0x00000000004126dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c92 : pop rsp ; ret
0x0000000000411e99 : popfq ; ret 0xd284
0x000000000040b47f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401934 : push rax ; pop rbp ; ret
0x000000000040e34b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040ec53 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000402614 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004095b8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040979e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000409844 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000409872 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000409940 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000409ad6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401574 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000410a23 : pushfq ; ret 0x8445
0x000000000041076c : pushfq ; ret 0xd284
0x0000000000401151 : ret
0x000000000040bf39 : ret 0
0x000000000040fbc9 : ret 0x10
0x0000000000411f8b : ret 0x2030
0x0000000000401332 : ret 0x213d
0x0000000000408f97 : ret 0x2a
0x0000000000401dfb : ret 0x2a07
0x000000000040c2b6 : ret 0x2c1
0x000000000040ac10 : ret 0x3ae8
0x000000000040ced1 : ret 0x412b
0x000000000040e539 : ret 0x412e
0x0000000000405efa : ret 0x43fa
0x0000000000411333 : ret 0x5e5
0x00000000004021bf : ret 0x8445
0x0000000000406ca9 : ret 0x8589
0x0000000000405d90 : ret 0x891a
0x000000000041193c : ret 0x8934
0x000000000040ec57 : ret 0x8948
0x000000000040f671 : ret 0x89b6
0x0000000000401d1c : ret 0x89c0
0x0000000000411918 : ret 0x8b34
0x000000000040abf5 : ret 0x8b48
0x0000000000409c65 : ret 0xa9b9
0x00000000004056e2 : ret 0xade6
0x00000000004023b9 : ret 0xb0
0x00000000004093d0 : ret 0xb91a
0x000000000040f92b : ret 0xb9b6
0x000000000040222e : ret 0xb9c0
0x0000000000401515 : ret 0xc148
0x00000000004031c4 : ret 0xd284
0x000000000040b483 : ret 0xd4e9
0x00000000004026bf : ret 0xe280
0x000000000040ba9c : ret 0xee8
0x0000000000409e45 : ret 0xf41
0x000000000040deaa : ret 0xff33
0x00000000004095bb : ret 0xff9f
0x000000000040af5e : ret 0xffa5
0x00000000004097a1 : ret 0xffbf
0x000000000040a20b : ret 0xffc4
0x0000000000409847 : ret 0xffc5
0x0000000000409875 : ret 0xffd5
0x0000000000409943 : ret 0xffd8
0x000000000040a2b1 : ret 0xffd9
0x0000000000409ad9 : ret 0xffe0
0x0000000000408bae : ret 0xfffa
0x0000000000401fb5 : ret 1
0x000000000040a110 : ret 2
0x000000000040b597 : ret 4
0x000000000040d0c8 : ret 5
0x0000000000401a6a : ret 6
0x000000000040bc80 : ret 8
0x0000000000410714 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004026f1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410d25 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403666 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x000000000040dea1 : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x17000003], edx ; ret 0xff33
0x0000000000403667 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040ec50 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004116dc : sahf ; ret 0xd284
0x000000000040fdee : salc ; ret
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x000000000040c719 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e833 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409c5e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000406ca7 : sub al, 0x38 ; ret 0x8589
0x0000000000409c63 : sub al, 0x38 ; ret 0xa9b9
0x000000000040e532 : sub eax, 0x8d48ffff ; xor al, 0x25 ; ret 0x412e
0x000000000041271d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041271c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040e36b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000410b68 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c8fd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040e248 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004126ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401bae : test byte ptr [rdx - 0x16fffff6], ah ; ret
0x000000000040d095 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040dea4 : test dword ptr [rax - 0x17000003], edx ; ret 0xff33
0x000000000040e350 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040e0b8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000403c91 : xchg eax, ebp ; ret
0x00000000004021be : xchg eax, ebp ; ret 0x8445
0x00000000004031c3 : xchg eax, ebp ; ret 0xd284
0x0000000000406c8b : xchg eax, ecx ; ret
0x00000000004105a1 : xchg eax, edi ; ret 0xd284
0x0000000000406ddb : xchg eax, edx ; ret
0x000000000040e24e : xchg eax, edx ; ret 0xd284
0x000000000040c612 : xchg eax, esi ; ret
0x0000000000403c73 : xchg eax, esp ; ret
0x000000000040ac36 : xchg eax, esp ; ret 0x8445
0x000000000040914a : xchg eax, esp ; ret 0xd284
0x00000000004026be : xchg eax, esp ; ret 0xe280
0x000000000040cecf : xor al, 0x25 ; ret 0x412b
0x000000000040e537 : xor al, 0x25 ; ret 0x412e
0x00000000004023ad : xor al, byte ptr [rdx + rcx*4 + 0x45] ; ret
0x000000000040cc17 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004037dd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
