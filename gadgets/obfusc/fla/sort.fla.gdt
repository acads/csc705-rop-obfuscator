0x000000000042bed4 : adc al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000045db35 : adc al, 0 ; add byte ptr [rbp + rdi*2 - 4], al ; call rsp
0x00000000004092a7 : adc al, 0x66 ; add byte ptr [rax + 0xf000000], al ; xchg eax, ebp ; ret 0xd284
0x000000000040f241 : adc al, 0x66 ; add byte ptr [rax + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x0000000000418bb8 : adc al, 0x66 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040c987 : adc al, 0x66 ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004312b9 : adc al, 0x7a ; ret 0x8589
0x000000000040f421 : adc byte ptr [rax - 0x7f], cl ; ret 1
0x000000000040f1b8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423dfc : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422fcf : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004297c6 : adc cl, byte ptr [rax - 0x77] ; push rbp ; call 0xe05191e
0x000000000040f40b : adc cl, byte ptr [rax - 0x7f] ; ret 1
0x00000000004571b5 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000045f3b5 : adc dword ptr [rax], eax ; add al, bh ; std ; call rax
0x000000000045010b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045f395 : adc dword ptr [rax], eax ; add byte ptr [rax], ch ; std ; jmp rsi
0x000000000045da75 : adc dword ptr [rax], eax ; add byte ptr [rbx + rsi - 4], dh ; call rsp
0x000000000041f109 : adc dword ptr [rbx - 0x1b4680fa], ebx ; ret 0xfdb
0x00000000004175c8 : adc dword ptr [rsi], ebp ; ret
0x000000000041f205 : adc eax, 0x33e80066 ; ret
0x000000000045db75 : adc eax, 0x99840000 ; cld ; call rsp
0x000000000044846a : adc eax, 0xb8000003 ; in al, 0x7f ; ret
0x00000000004465c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045daf5 : adc eax, dword ptr [rax] ; add byte ptr [rbx + rbp*2 - 4], dl ; call rsp
0x000000000041b508 : adc ebp, dword ptr [rbp + 0x1c] ; ret 0x8589
0x000000000045d937 : add ah, ah ; add ebx, edi ; call rsp
0x000000000045e753 : add ah, al ; add al, 0 ; add al, cl ; push -5 ; jmp qword ptr [rax]
0x000000000045dcb7 : add ah, dh ; std ; call rsp
0x000000000045dcf7 : add ah, dl ; js 0x45dcfc ; call rsp
0x000000000045df77 : add ah, dl ; mov bh, -2 ; call rsp
0x000000000045dbb7 : add ah, dl ; sar esp, 1 ; call rsp
0x000000000040d73d : add al, -0x36 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000439dbd : add al, -0x36 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045e755 : add al, 0 ; add al, cl ; push -5 ; jmp qword ptr [rax]
0x000000000045e715 : add al, 0 ; add byte ptr [rax], cl ; sti ; jmp qword ptr [rcx]
0x000000000044cddd : add al, 0 ; add cl, ch ; ret 1
0x000000000045f394 : add al, 0x11 ; add byte ptr [rax], al ; sub byte ptr [rsi - 3], cl ; jmp rsi
0x0000000000460494 : add al, 0x22 ; add byte ptr [rax], al ; enter -0x97, -1 ; ret
0x000000000042b842 : add al, 0x25 ; nop ; sbb esp, dword ptr [rsi] ; pop rbp ; ret
0x0000000000447427 : add al, 0x25 ; ret 0x45d2
0x0000000000434297 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045dc78 : add al, 0x56 ; std ; call rsp
0x000000000045e394 : add al, 1 ; add byte ptr [rax], al ; ret 0xfffa
0x000000000045e494 : add al, 2 ; add byte ptr [rax], al ; fcomp st(6) ; cli ; jmp qword ptr [rcx]
0x000000000041623b : add al, 5 ; ret 0x89bf
0x000000000045f3b7 : add al, bh ; std ; call rax
0x000000000045e497 : add al, bl ; fdivp st(2) ; jmp qword ptr [rcx]
0x000000000045e495 : add al, byte ptr [rax] ; add al, bl ; fdivp st(2) ; jmp qword ptr [rcx]
0x0000000000417fe2 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdi
0x000000000042f6ee : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x000000000040a5c8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e4d5 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x45e4db ; call rbx
0x000000000044fa03 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bb25 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x582dd445], cl ; ret
0x0000000000411edd : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040d022 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041e92f : add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fb89 : add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412e97 : add al, ch ; ret
0x00000000004344f8 : add al, ch ; ret 0xfcde
0x000000000045e757 : add al, cl ; push -5 ; jmp qword ptr [rax]
0x00000000004602f7 : add al, cl ; sub al, -1 ; jmp qword ptr [rbx]
0x000000000040f8d4 : add bh, al ; add byte ptr [r8 - 0x77], r9b ; ret 0x80e8
0x00000000004374f1 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043c829 : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041dd08 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rdx]
0x000000000041e510 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; inc dword ptr [rbx] ; insd dword ptr [rdi], dx ; ret 0xe963
0x000000000041d7cc : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rcx
0x000000000041e3a3 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rdi
0x000000000041dc27 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rsi
0x0000000000417fe4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdi
0x0000000000415844 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rbx]
0x000000000044fdfe : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044fb66 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042f6f0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x000000000043cbdf : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x000000000045b0cf : add bl, dh ; ret
0x000000000040f8d6 : add byte ptr [r8 - 0x77], r9b ; ret 0x80e8
0x00000000004375fa : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000040fb46 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rbx ; ret
0x000000000045f177 : add byte ptr [rax + 0x17], cl ; std ; call qword ptr [rsi]
0x000000000045eab7 : add byte ptr [rax + 0x27], bl ; cld ; call qword ptr [rcx]
0x0000000000449acf : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000045ed37 : add byte ptr [rax + 0x68], ch ; cld ; jmp qword ptr [rax]
0x000000000045e837 : add byte ptr [rax + 0x78], bh ; sti ; call qword ptr [rbx]
0x00000000004092a9 : add byte ptr [rax + 0xf000000], al ; xchg eax, ebp ; ret 0xd284
0x000000000040f243 : add byte ptr [rax + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x000000000042fe78 : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x000000000042bd9a : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000045dfb7 : add byte ptr [rax + rbx*8 - 2], dl ; call rsp
0x000000000045fab3 : add byte ptr [rax + rbx], ah ; add byte ptr [rax], al ; jb 0x45fac1 ; jmp qword ptr [rdx]
0x000000000045f2b3 : add byte ptr [rax + rdx], ah ; add byte ptr [rax], al ; cwde ; std ; call qword ptr [rdx]
0x000000000045f0b7 : add byte ptr [rax - 0x35], bh ; cld ; call qword ptr [rsi]
0x000000000045e397 : add byte ptr [rax - 0x3e], cl ; cli ; call qword ptr [rax]
0x0000000000447424 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x45d2
0x0000000000409de3 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; cli ; ret 0x45
0x0000000000412e58 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; outsd dx, dword ptr [rsi] ; ret
0x000000000040a4f5 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rbx ; ret
0x0000000000409983 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004097b4 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x45
0x0000000000416033 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ebp ; ret
0x00000000004307f4 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x1c
0x000000000040f8d7 : add byte ptr [rax - 0x77], cl ; ret 0x80e8
0x0000000000408b28 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004307ff : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000041ff78 : add byte ptr [rax - 0x7f], cl ; ret 2
0x00000000004092aa : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f244 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004602f3 : add byte ptr [rax], ah ; add al, cl ; sub al, -1 ; jmp qword ptr [rbx]
0x000000000045f392 : add byte ptr [rax], al ; add al, 0x11 ; add byte ptr [rax], al ; sub byte ptr [rsi - 3], cl ; jmp rsi
0x000000000045dc76 : add byte ptr [rax], al ; add al, 0x56 ; std ; call rsp
0x000000000045e392 : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; ret 0xfffa
0x000000000045e492 : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; fcomp st(6) ; cli ; jmp qword ptr [rcx]
0x00000000004344f6 : add byte ptr [rax], al ; add al, ch ; ret 0xfcde
0x00000000004375fb : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000044fdfc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044fb64 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043cbdd : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x000000000045b0cd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000449acd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000042bd98 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000447422 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x45d2
0x0000000000412e56 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; outsd dx, dword ptr [rsi] ; ret
0x000000000040a4f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rbx ; ret
0x0000000000416031 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ebp ; ret
0x00000000004307f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x1c
0x0000000000408b26 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004307fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000041ff76 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 2
0x000000000045b0cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400640 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000045cda9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x45
0x0000000000426315 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x402618
0x0000000000400642 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045cdaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x0000000000400d7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000042524d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040896e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409eee : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045cdab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x45
0x00000000004211fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042a9f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c482 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426317 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x402616
0x000000000042bba0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d2f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; ret
0x0000000000400644 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045cdac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x0000000000400d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000429a11 : add byte ptr [rax], al ; add byte ptr [rbx + 0x14e8f87d], cl ; ret 0xfffe
0x000000000042a395 : add byte ptr [rax], al ; add byte ptr [rbx + 0x152de045], cl ; ret 0x3d50
0x0000000000418aaf : add byte ptr [rax], al ; add byte ptr [rbx + 0x1b2d9445], cl ; ret
0x000000000044630e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000434301 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000043bf0c : add byte ptr [rax], al ; add byte ptr [rbx + 0x562d9445], cl ; ret
0x000000000043c54c : add byte ptr [rax], al ; add byte ptr [rbx + 0x572d9445], cl ; ret
0x000000000040b869 : add byte ptr [rax], al ; add byte ptr [rbx + 0x572dd445], cl ; ret
0x00000000004030b8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x572de445], cl ; ret
0x0000000000439cda : add byte ptr [rax], al ; add byte ptr [rbx + 0x612dc445], cl ; stosb byte ptr [rdi], al ; ret
0x0000000000433f8f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000042a3f9 : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2de045], cl ; salc ; ret
0x00000000004533d7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x000000000041f05a : add byte ptr [rax], al ; add byte ptr [rbx - 0x1bd227bb], cl ; ret 0x89db
0x000000000044b165 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d27bbb], cl ; ret
0x0000000000458be8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x29d257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000044a3ba : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ad24fbb], cl ; ret
0x0000000000458ba6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ad257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x00000000004490c6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x49d217bb], cl ; ret 0x4314
0x0000000000457d69 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000044b7b7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d25bbb], cl ; ret 0x5fb0
0x0000000000457ce5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000450b23 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000420b60 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b73f8b], cl ; ret 0xb0
0x00000000004216a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8041
0x0000000000428950 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8445
0x0000000000431c02 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x00000000004247bc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000042524f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408c9e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000448a65 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004156e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045e391 : add byte ptr [rax], al ; add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; ret 0xfffa
0x000000000043c8e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000043baea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000424fa2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433310 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043e21d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040754c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004083f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411ccc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004305e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040a115 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004073cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411b77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000044d284 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000411c7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x000000000043e1ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408af0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417f92 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045cdad : add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x45
0x000000000042545c : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000431efa : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000045e4d2 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x45e4de ; call rbx
0x000000000040c4f9 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415c1b : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c35b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c484 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421be0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a7d3 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbp ; ret
0x000000000040df34 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a8b0 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402353 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045f2b2 : add byte ptr [rax], al ; and al, 0x10 ; add byte ptr [rax], al ; cwde ; std ; call qword ptr [rdx]
0x000000000045f3b2 : add byte ptr [rax], al ; and al, 0x11 ; add byte ptr [rax], al ; clc ; std ; call rax
0x000000000045fab2 : add byte ptr [rax], al ; and al, 0x18 ; add byte ptr [rax], al ; jb 0x45fac2 ; jmp qword ptr [rdx]
0x000000000045efb2 : add byte ptr [rax], al ; and al, 0xd ; add byte ptr [rax], al ; fadd st(1) ; cld ; call qword ptr [rbx]
0x000000000045f0b2 : add byte ptr [rax], al ; and al, 0xe ; add byte ptr [rax], al ; js 0x45f08e ; cld ; call qword ptr [rsi]
0x000000000045d8f6 : add byte ptr [rax], al ; and al, 0xffffffffffffffdc ; cli ; call rsp
0x00000000004602f2 : add byte ptr [rax], al ; and byte ptr fs:[rax], al ; add al, cl ; sub al, -1 ; jmp qword ptr [rbx]
0x000000000045649d : add byte ptr [rax], al ; call 0x4023d8
0x0000000000426319 : add byte ptr [rax], al ; call 0x402614
0x000000000045f3b6 : add byte ptr [rax], al ; clc ; std ; call rax
0x000000000045e4d6 : add byte ptr [rax], al ; cmp al, ah ; cli ; call rbx
0x000000000045ff76 : add byte ptr [rax], al ; cwde ; mov ch, -2 ; jmp qword ptr [rdx]
0x000000000045f2b6 : add byte ptr [rax], al ; cwde ; std ; call qword ptr [rdx]
0x0000000000460496 : add byte ptr [rax], al ; enter -0x97, -1 ; ret
0x000000000045efb6 : add byte ptr [rax], al ; fadd st(1) ; cld ; call qword ptr [rbx]
0x000000000045e496 : add byte ptr [rax], al ; fcomp st(6) ; cli ; jmp qword ptr [rcx]
0x000000000045dcb6 : add byte ptr [rax], al ; hlt ; std ; call rsp
0x000000000045ff72 : add byte ptr [rax], al ; in al, 0x1c ; add byte ptr [rax], al ; cwde ; mov ch, -2 ; jmp qword ptr [rdx]
0x000000000045dc36 : add byte ptr [rax], al ; in al, 0x2f ; std ; call rsp
0x000000000045d936 : add byte ptr [rax], al ; in al, 1 ; sti ; call rsp
0x000000000045e572 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; test al, -9 ; cli ; jmp qword ptr [rcx]
0x000000000045fab6 : add byte ptr [rax], al ; jb 0x45fabe ; jmp qword ptr [rdx]
0x000000000045d976 : add byte ptr [rax], al ; je 0x45d9c5 ; sti ; call rsp
0x000000000045da76 : add byte ptr [rax], al ; je 0x45dab2 ; cld ; call rsp
0x000000000045db36 : add byte ptr [rax], al ; jge 0x45db3c ; call rsp
0x0000000000402529 : add byte ptr [rax], al ; jmp 0x402369
0x0000000000425458 : add byte ptr [rax], al ; jmp 0x425467
0x000000000043a9fa : add byte ptr [rax], al ; jmp 0x43aa09
0x000000000044b2c4 : add byte ptr [rax], al ; jmp 0x44b513
0x0000000000457629 : add byte ptr [rax], al ; jmp 0x457638
0x0000000000458299 : add byte ptr [rax], al ; jmp 0x4582a8
0x000000000045e836 : add byte ptr [rax], al ; js 0x45e8b7 ; sti ; call qword ptr [rbx]
0x000000000045f0b6 : add byte ptr [rax], al ; js 0x45f08a ; cld ; call qword ptr [rsi]
0x000000000045dab6 : add byte ptr [rax], al ; mov ah, 0x44 ; cld ; call rsp
0x000000000045743c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004573bd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004530d7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004584a7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045b00b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000045ae68 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000423f46 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000429a12 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 8] ; call 0x415c37
0x0000000000430bc9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043399c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043dae9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042a8ee : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000045e832 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x78780000 ; sti ; call qword ptr [rbx]
0x000000000045dff6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and edi, edi ; call rsp
0x000000000045d9b6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x45d9bb ; call rsp
0x000000000045ed32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax + 0x68], ch ; cld ; jmp qword ptr [rax]
0x000000000045ddae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045e716 : add byte ptr [rax], al ; or byte ptr [rdi - 5], ah ; jmp qword ptr [rcx]
0x000000000043d46c : add byte ptr [rax], al ; or byte ptr [rdi], 0x9c ; ret 0xd284
0x000000000045f136 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; std ; call qword ptr [rdi]
0x000000000045eff6 : add byte ptr [rax], al ; or dh, al ; cld ; call qword ptr [rax]
0x000000000045eff2 : add byte ptr [rax], al ; or eax, 0xc6080000 ; cld ; call qword ptr [rax]
0x0000000000460856 : add byte ptr [rax], al ; pop rax ; mov bh, bh ; jmp rax
0x0000000000402fb5 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000044630f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411ede : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045d8b6 : add byte ptr [rax], al ; pop rcx ; cli ; call rsp
0x000000000045d2f6 : add byte ptr [rax], al ; pop rcx ; ret
0x000000000045dfb6 : add byte ptr [rax], al ; push rsp ; fdivr st(6) ; call rsp
0x000000000045d9f6 : add byte ptr [rax], al ; push rsp ; mov ebx, edi ; call rsp
0x0000000000400646 : add byte ptr [rax], al ; ret
0x000000000045cdae : add byte ptr [rax], al ; ret 0x45
0x000000000045e396 : add byte ptr [rax], al ; ret 0xfffa
0x000000000045dda6 : add byte ptr [rax], al ; ret 0xfffd
0x0000000000400d7e : add byte ptr [rax], al ; ret 1
0x00000000004005e6 : add byte ptr [rax], al ; ret 2
0x000000000045fcf2 : add byte ptr [rax], al ; sbb al, byte ptr fs:[rax] ; add byte ptr [rax], ch ; jne 0x45fd02 ; jmp qword ptr [rdx]
0x000000000045fbd2 : add byte ptr [rax], al ; sbb dword ptr [rax], r8d ; add byte ptr [rax], bl ; je 0x45fbe2 ; jmp qword ptr [rax]
0x000000000045fcf6 : add byte ptr [rax], al ; sub byte ptr [rbp - 2], dh ; jmp qword ptr [rdx]
0x000000000045f396 : add byte ptr [rax], al ; sub byte ptr [rsi - 3], cl ; jmp rsi
0x000000000045e576 : add byte ptr [rax], al ; test al, -9 ; cli ; jmp qword ptr [rcx]
0x000000000045e712 : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add byte ptr [rax], cl ; sti ; jmp qword ptr [rcx]
0x000000000045f012 : add byte ptr [rax], al ; test byte ptr [rip - 0x38080000], cl ; cld ; call qword ptr [rsi]
0x000000000045ddf6 : add byte ptr [rax], al ; test dh, cl ; std ; call rsp
0x000000000045de36 : add byte ptr [rax], al ; xchg eax, esp ; add edi, esi ; call rsp
0x000000000045e4d7 : add byte ptr [rax], bh ; loopne 0x45e4d9 ; call rbx
0x000000000045e3b7 : add byte ptr [rax], bh ; ret 0xfffa
0x000000000045fbd7 : add byte ptr [rax], bl ; je 0x45fbdd ; jmp qword ptr [rax]
0x000000000045fcf7 : add byte ptr [rax], ch ; jne 0x45fcfd ; jmp qword ptr [rdx]
0x000000000045f397 : add byte ptr [rax], ch ; std ; jmp rsi
0x0000000000460117 : add byte ptr [rax], cl ; add edi, edi ; call rdx
0x000000000045e717 : add byte ptr [rax], cl ; sti ; jmp qword ptr [rcx]
0x000000000045e833 : add byte ptr [rbp + rax + 0x78780000], ah ; sti ; call qword ptr [rbx]
0x000000000045ddb7 : add byte ptr [rbp + rax*8 - 3], dl ; call rsp
0x000000000045f013 : add byte ptr [rbp + rcx - 0x38080000], al ; cld ; call qword ptr [rsi]
0x000000000045db37 : add byte ptr [rbp + rdi*2 - 4], al ; call rsp
0x000000000042a34c : add byte ptr [rbx + 0x142de045], cl ; ret 0x3d50
0x0000000000429a13 : add byte ptr [rbx + 0x14e8f87d], cl ; ret 0xfffe
0x000000000042a397 : add byte ptr [rbx + 0x152de045], cl ; ret 0x3d50
0x0000000000418ab1 : add byte ptr [rbx + 0x1b2d9445], cl ; ret
0x0000000000434965 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x00000000004349a7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000040b0bc : add byte ptr [rbx + 0x1e2dc045], cl ; in al, 0x1c ; ret
0x000000000044e95f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x44e947 ; ret
0x0000000000446310 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000434303 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041ea6d : add byte ptr [rbx + 0x542d8445], cl ; je 0x41ea94 ; ret 0x8589
0x000000000041eab8 : add byte ptr [rbx + 0x552d8445], cl ; je 0x41eadf ; ret 0x8589
0x000000000043bf0e : add byte ptr [rbx + 0x562d9445], cl ; ret
0x000000000043c54e : add byte ptr [rbx + 0x572d9445], cl ; ret
0x000000000040b86b : add byte ptr [rbx + 0x572dd445], cl ; ret
0x00000000004030ba : add byte ptr [rbx + 0x572de445], cl ; ret
0x000000000040bb27 : add byte ptr [rbx + 0x582dd445], cl ; ret
0x0000000000411edf : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000439cdc : add byte ptr [rbx + 0x612dc445], cl ; stosb byte ptr [rdi], al ; ret
0x0000000000433f91 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000416c7a : add byte ptr [rbx + 0x6b2db445], cl ; ret
0x0000000000416cbc : add byte ptr [rbx + 0x6c2db445], cl ; ret
0x000000000043b032 : add byte ptr [rbx + 0xc2d9045], cl ; test al, 0x58 ; ret 0x8589
0x000000000043b07d : add byte ptr [rbx + 0xd2d9045], cl ; test al, 0x58 ; ret 0x8589
0x000000000042a3b0 : add byte ptr [rbx + 0xe2de045], cl ; salc ; ret
0x000000000042a3fb : add byte ptr [rbx + 0xf2de045], cl ; salc ; ret
0x000000000045daf7 : add byte ptr [rbx + rbp*2 - 4], dl ; call rsp
0x000000000045da77 : add byte ptr [rbx + rsi - 4], dh ; call rsp
0x00000000004533d9 : add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x000000000041f05c : add byte ptr [rbx - 0x1bd227bb], cl ; ret 0x89db
0x000000000044b167 : add byte ptr [rbx - 0x1d27bbb], cl ; ret
0x0000000000458bea : add byte ptr [rbx - 0x29d257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000044a3bc : add byte ptr [rbx - 0x2ad24fbb], cl ; ret
0x0000000000458ba8 : add byte ptr [rbx - 0x2ad257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000044a37a : add byte ptr [rbx - 0x2bd24fbb], cl ; ret
0x00000000004490c8 : add byte ptr [rbx - 0x49d217bb], cl ; ret 0x4314
0x000000000044ce2f : add byte ptr [rbx - 0x64d25bbb], cl ; ret 0x5fb0
0x0000000000457d6b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000044b7b9 : add byte ptr [rbx - 0x65d25bbb], cl ; ret 0x5fb0
0x0000000000457ce7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000450b25 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000420b62 : add byte ptr [rbx - 0x76b73f8b], cl ; ret 0xb0
0x0000000000415f4b : add byte ptr [rbx - 0x934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000429eef : add byte ptr [rbx - 0xc74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004216ab : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8041
0x0000000000428952 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8445
0x0000000000431c04 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000044d280 : add byte ptr [rcx + 0x9f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004247be : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000425251 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408ca0 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000448a67 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004156e4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045e393 : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; ret 0xfffa
0x000000000045d8b7 : add byte ptr [rcx + rbx*2 - 6], ah ; call rsp
0x000000000045fbd3 : add byte ptr [rcx + rbx], al ; add byte ptr [rax], bl ; je 0x45fbe1 ; jmp qword ptr [rax]
0x000000000045d9f7 : add byte ptr [rcx + rcx*4 - 5], dl ; call rsp
0x000000000045f3b3 : add byte ptr [rcx + rdx], ah ; add byte ptr [rax], al ; clc ; std ; call rax
0x000000000045f393 : add byte ptr [rcx + rdx], al ; add byte ptr [rax], al ; sub byte ptr [rsi - 3], cl ; jmp rsi
0x000000000045efb3 : add byte ptr [rcx - 0x3e280000], ah ; cld ; call qword ptr [rbx]
0x00000000004369ef : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402bd8 : add byte ptr [rcx], al ; ret
0x000000000042a563 : add byte ptr [rdi + rax*8 + 0x45], ah ; in al, 0x15 ; ret 0x3d50
0x000000000045e177 : add byte ptr [rdi + rbx*4 - 1], dl ; call rsp
0x000000000043c8e2 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000043baec : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000424fa4 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433312 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043e21f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040754e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004083fb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411cce : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004305e4 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040a117 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004073cf : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411b79 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000044d286 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000411c7f : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x000000000043e201 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408af2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417f94 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045e493 : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; fcomp st(6) ; cli ; jmp qword ptr [rcx]
0x000000000045e4d3 : add byte ptr [rdx + rax], al ; add byte ptr [rax], bh ; loopne 0x45e4dd ; call rbx
0x000000000045fcf3 : add byte ptr [rdx + rbx], ah ; add byte ptr [rax], ch ; jne 0x45fd01 ; jmp qword ptr [rdx]
0x000000000045ed33 : add byte ptr [rdx + rcx + 0x68680000], ah ; cld ; jmp qword ptr [rax]
0x000000000042a77f : add byte ptr [rdx - 0x39], dh ; in al, 0xf ; salc ; ret
0x000000000040c989 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000460493 : add byte ptr [rdx], al ; add byte ptr [rax], al ; enter -0x97, -1 ; ret
0x00000000004182ae : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433e1d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045d977 : add byte ptr [rsi + rax*2 - 5], dh ; call rsp
0x000000000045f133 : add byte ptr [rsi + rcx + 0xf080000], ah ; std ; call qword ptr [rdi]
0x000000000045f0b3 : add byte ptr [rsi + rcx], ah ; add byte ptr [rax], al ; js 0x45f08d ; cld ; call qword ptr [rsi]
0x000000000045dc77 : add byte ptr [rsi + rdx*2], al ; std ; call rsp
0x000000000045deb7 : add byte ptr [rsi + rdx*4 - 2], ah ; call rsp
0x000000000045cdaf : add byte ptr [rsi], bh ; ret 0x45
0x0000000000418bb7 : add byte ptr [rsi], dl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000045e713 : add byte ptr [rsp + rax + 0x67080000], al ; sti ; jmp qword ptr [rcx]
0x000000000045d8f7 : add byte ptr [rsp + rbx*8], ah ; cli ; call rsp
0x00000000004151e5 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rbx ; ret
0x000000000045dfb5 : add byte ptr es:[rax], al ; push rsp ; fdivr st(6) ; call rsp
0x000000000043c54b : add byte ptr fs:[rax], al ; add byte ptr [rbx + 0x572d9445], cl ; ret
0x000000000041c74c : add ch, dh ; ret
0x00000000004192ed : add cl, ch ; ret
0x0000000000431efc : add cl, ch ; ret 0
0x000000000040bb9f : add cl, ch ; ret 1
0x000000000043987a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000044b0b5 : add dword ptr [rax - 0x49f0fe1e], eax ; ret 0x8148
0x00000000004374ef : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043c827 : add dword ptr [rax], eax ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045e395 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3e], cl ; cli ; call qword ptr [rax]
0x0000000000446585 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045e3b5 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; ret 0xfffa
0x000000000042a34a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x142de045], cl ; ret 0x3d50
0x0000000000446caa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042a3ae : add dword ptr [rax], eax ; add byte ptr [rbx + 0xe2de045], cl ; salc ; ret
0x000000000044a378 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x2bd24fbb], cl ; ret
0x000000000044ce2d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x64d25bbb], cl ; ret 0x5fb0
0x0000000000449a9d : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a930 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411c85 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8341
0x000000000042558f : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000433d61 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004161b4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dd07 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419f1a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402bd4 : add eax, 0x25e9de ; add ebx, esi ; ret
0x000000000045515f : add eax, 0x53b80000 ; jrcxz 0x4551cf ; ret 0x8fb9
0x000000000045e835 : add eax, 0x78780000 ; sti ; call qword ptr [rbx]
0x0000000000423f44 : add eax, 0x8b000000 ; hlt ; pop rbp ; ret
0x00000000004530d5 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004529bf : add eax, 0xb6b80000 ; ret 0x979f
0x000000000041e3a1 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rdi
0x0000000000418901 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041d317 : add eax, ebp ; ret
0x0000000000434299 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b9b : add eax, edx ; sar rax, 1 ; jne 0x402bac ; pop rbp ; ret
0x000000000045d939 : add ebx, edi ; call rsp
0x0000000000402bd9 : add ebx, esi ; ret
0x000000000040dc49 : add ecx, ebp ; ret 0
0x0000000000418041 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdi
0x0000000000460119 : add edi, edi ; call rdx
0x000000000045de39 : add edi, esi ; call rsp
0x0000000000402ffb : add esp, 0x10 ; pop rbp ; ret
0x00000000004369ed : add esp, 0x100 ; pop rbp ; ret
0x0000000000423dfa : add esp, 0x110 ; pop rbp ; ret
0x000000000040c2cd : add esp, 0x118 ; pop rbp ; ret
0x0000000000446ca7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000041595b : add esp, 0x120 ; pop rbp ; ret
0x000000000040ae3c : add esp, 0x130 ; pop rbp ; ret
0x000000000044b0bd : add esp, 0x140 ; pop rbp ; ret
0x0000000000420a78 : add esp, 0x1460 ; pop rbp ; ret
0x000000000040d631 : add esp, 0x160 ; pop rbp ; ret
0x000000000041e776 : add esp, 0x1630 ; pop rbp ; ret
0x0000000000433d66 : add esp, 0x18 ; pop rbp ; ret
0x000000000043002d : add esp, 0x180 ; pop rbp ; ret
0x000000000043c9eb : add esp, 0x190 ; pop rbp ; ret
0x000000000043815c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000418f6c : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000413af2 : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040ad42 : add esp, 0x20 ; pop rbp ; ret
0x00000000004182ac : add esp, 0x200 ; pop rbp ; ret
0x0000000000422fcd : add esp, 0x210 ; pop rbp ; ret
0x000000000041079d : add esp, 0x220 ; pop rbp ; ret
0x000000000044877b : add esp, 0x230 ; pop rbp ; ret
0x00000000004248a2 : add esp, 0x250 ; pop rbp ; ret
0x0000000000412d27 : add esp, 0x260 ; pop rbp ; ret
0x00000000004250a7 : add esp, 0x2a0 ; pop rbp ; ret
0x0000000000411eda : add esp, 0x2b8 ; pop rbx ; pop rbp ; ret
0x000000000045a583 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004567ca : add esp, 0x2e0 ; pop rbp ; ret
0x000000000040c35e : add esp, 0x30 ; pop rbp ; ret
0x0000000000452fa5 : add esp, 0x380 ; pop rbp ; ret
0x000000000042958d : add esp, 0x3b0 ; pop rbp ; ret
0x000000000040f9da : add esp, 0x3d0 ; pop rbp ; ret
0x000000000040c487 : add esp, 0x40 ; pop rbp ; ret
0x000000000042f98e : add esp, 0x440 ; pop rbp ; ret
0x000000000044df41 : add esp, 0x490 ; pop rbp ; ret
0x00000000004031d2 : add esp, 0x50 ; pop rbp ; ret
0x000000000042a7d6 : add esp, 0x58 ; pop rbp ; ret
0x000000000040dd0c : add esp, 0x60 ; pop rbp ; ret
0x0000000000412ea8 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402fb1 : add esp, 0x80 ; pop rbp ; ret
0x000000000041520f : add esp, 0x90 ; pop rbp ; ret
0x000000000044e8bf : add esp, 0x98 ; pop rbp ; ret
0x0000000000416098 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004243bd : add esp, 0xb0 ; pop rbp ; ret
0x00000000004308ab : add esp, 0xc0 ; pop rbp ; ret
0x0000000000445fe4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000417073 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040a521 : add esp, 0xd90 ; pop rbp ; ret
0x000000000040b484 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040acfd : add esp, 0xf0 ; pop rbp ; ret
0x0000000000402356 : add esp, 8 ; ret
0x000000000045e4d4 : add r8b, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x45e4dc ; call rbx
0x0000000000434298 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b9a : add rax, rdx ; sar rax, 1 ; jne 0x402bad ; pop rbp ; ret
0x0000000000402ffa : add rsp, 0x10 ; pop rbp ; ret
0x00000000004369ec : add rsp, 0x100 ; pop rbp ; ret
0x0000000000423df9 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040c2cc : add rsp, 0x118 ; pop rbp ; ret
0x0000000000446ca6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000041595a : add rsp, 0x120 ; pop rbp ; ret
0x000000000040ae3b : add rsp, 0x130 ; pop rbp ; ret
0x000000000044b0bc : add rsp, 0x140 ; pop rbp ; ret
0x0000000000420a77 : add rsp, 0x1460 ; pop rbp ; ret
0x000000000040d630 : add rsp, 0x160 ; pop rbp ; ret
0x000000000041e775 : add rsp, 0x1630 ; pop rbp ; ret
0x0000000000433d65 : add rsp, 0x18 ; pop rbp ; ret
0x000000000043002c : add rsp, 0x180 ; pop rbp ; ret
0x000000000043c9ea : add rsp, 0x190 ; pop rbp ; ret
0x000000000043815b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000418f6b : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000413af1 : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040ad41 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004182ab : add rsp, 0x200 ; pop rbp ; ret
0x0000000000422fcc : add rsp, 0x210 ; pop rbp ; ret
0x000000000041079c : add rsp, 0x220 ; pop rbp ; ret
0x000000000044877a : add rsp, 0x230 ; pop rbp ; ret
0x00000000004248a1 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000412d26 : add rsp, 0x260 ; pop rbp ; ret
0x00000000004250a6 : add rsp, 0x2a0 ; pop rbp ; ret
0x0000000000411ed9 : add rsp, 0x2b8 ; pop rbx ; pop rbp ; ret
0x000000000045a582 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004567c9 : add rsp, 0x2e0 ; pop rbp ; ret
0x000000000040c35d : add rsp, 0x30 ; pop rbp ; ret
0x0000000000452fa4 : add rsp, 0x380 ; pop rbp ; ret
0x000000000042958c : add rsp, 0x3b0 ; pop rbp ; ret
0x000000000040f9d9 : add rsp, 0x3d0 ; pop rbp ; ret
0x000000000040c486 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042f98d : add rsp, 0x440 ; pop rbp ; ret
0x000000000044df40 : add rsp, 0x490 ; pop rbp ; ret
0x00000000004031d1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042a7d5 : add rsp, 0x58 ; pop rbp ; ret
0x000000000040dd0b : add rsp, 0x60 ; pop rbp ; ret
0x0000000000412ea7 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402fb0 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041520e : add rsp, 0x90 ; pop rbp ; ret
0x000000000044e8be : add rsp, 0x98 ; pop rbp ; ret
0x0000000000416097 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004243bc : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004308aa : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000445fe3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000417072 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040a520 : add rsp, 0xd90 ; pop rbp ; ret
0x000000000040b483 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040acfc : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000402355 : add rsp, 8 ; ret
0x000000000045b04c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000045b04b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000045f2b4 : and al, 0x10 ; add byte ptr [rax], al ; cwde ; std ; call qword ptr [rdx]
0x000000000045f3b4 : and al, 0x11 ; add byte ptr [rax], al ; clc ; std ; call rax
0x000000000045fab4 : and al, 0x18 ; add byte ptr [rax], al ; jb 0x45fac0 ; jmp qword ptr [rdx]
0x000000000045efb4 : and al, 0xd ; add byte ptr [rax], al ; fadd st(1) ; cld ; call qword ptr [rbx]
0x000000000045f0b4 : and al, 0xe ; add byte ptr [rax], al ; js 0x45f08c ; cld ; call qword ptr [rsi]
0x0000000000453d8b : and al, 0xffffffffffffffac ; ret 0x89cc
0x0000000000455324 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x000000000045d8f8 : and al, 0xffffffffffffffdc ; cli ; call rsp
0x0000000000419f19 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045deb5 : and al, byte ptr [rax] ; add byte ptr [rsi + rdx*4 - 2], ah ; call rsp
0x0000000000439878 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004602f5 : and byte ptr [rax], al ; add al, cl ; sub al, -1 ; jmp qword ptr [rbx]
0x000000000041595d : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041079f : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004602f4 : and byte ptr fs:[rax], al ; add al, cl ; sub al, -1 ; jmp qword ptr [rbx]
0x000000000042cac0 : and ch, bl ; ret
0x000000000042558d : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000439877 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004263c1 : and eax, 0x45c548 ; call 0x402647
0x0000000000435175 : and eax, 0x45d220 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000042b81f : and eax, 0x661b88 ; pop rbp ; ret
0x000000000042b843 : and eax, 0x661b90 ; pop rbp ; ret
0x000000000044a649 : and eax, 0x8b48c06a ; push rbp ; call 0xffffffffc90727a5
0x0000000000408000 : and eax, 0xb8000025 ; ret 0xfd23
0x00000000004498c5 : and edi, dword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x000000000045dff9 : and edi, edi ; call rsp
0x00000000004498c4 : and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x000000000041e92d : bswap esp ; add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004490cb : call 0x15074700
0x00000000004490ca : call 0x15074701
0x00000000004461bb : call 0x4023d2
0x000000000045649f : call 0x4023d6
0x0000000000431bef : call 0x4023f6
0x000000000040313f : call 0x4023f7
0x000000000045646c : call 0x4024a6
0x0000000000426354 : call 0x4025a2
0x000000000042631b : call 0x402612
0x00000000004263c6 : call 0x402642
0x000000000043ce10 : call 0x402a18
0x0000000000409dbe : call 0x40c4a6
0x0000000000429a17 : call 0x415c32
0x000000000042382d : call 0x490cc180
0x000000000042382c : call 0x490cc181
0x000000000044a5ac : call 0x710726fc
0x000000000044b3e0 : call 0x71073530
0x00000000004297ca : call 0xe05191a
0x000000000041eea9 : call 0xffffffff850489c0
0x000000000041eedb : call 0xffffffff850489f2
0x0000000000437066 : call 0xffffffff8a05d608
0x000000000044a64f : call 0xffffffffc907279f
0x000000000044b46e : call 0xffffffffc90735be
0x0000000000446029 : call 0xffffffffe906e979
0x0000000000446028 : call 0xffffffffe906e97a
0x000000000042095b : call 0xffffffffee3a8f2d
0x000000000042095a : call 0xffffffffee3a8f2e
0x0000000000441a6d : call 0xfffffffff73ca004
0x0000000000411dd5 : call 0xffffffffff1da3a8
0x0000000000411dd4 : call 0xffffffffff1da3a9
0x000000000045a045 : call 0xffffffffff4a261a
0x0000000000444599 : call 0xffffffffff58cb6b
0x0000000000444598 : call 0xffffffffff58cb6c
0x0000000000444599 : call 0xffffffffff58cb6d
0x0000000000444598 : call 0xffffffffff58cb6e
0x0000000000436157 : call 0xffffffffff7ceca8
0x0000000000436156 : call 0xffffffffff7ceca9
0x0000000000423b3f : call 0xffffffffff9ec111
0x0000000000423b3e : call 0xffffffffff9ec112
0x000000000045b0a9 : call qword ptr [r12 + rbx*8]
0x000000000041d97b : call qword ptr [rax]
0x000000000041584a : call qword ptr [rbx]
0x00000000004455b5 : call qword ptr [rcx]
0x000000000040f918 : call qword ptr [rdi]
0x000000000041dd0e : call qword ptr [rdx]
0x000000000045ddab : call qword ptr [rsi + rbx - 0x3c5c0000]
0x000000000040f1f1 : call qword ptr [rsi]
0x000000000045b0aa : call qword ptr [rsp + rbx*8]
0x00000000004361f3 : call rax
0x0000000000441d0a : call rbx
0x0000000000409316 : call rcx
0x000000000040f469 : call rdx
0x000000000044fe04 : call rsi
0x00000000004118d9 : call rsp
0x000000000045db79 : cdq ; cld ; call rsp
0x00000000004225b8 : cdq ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000457cec : cdq ; ret
0x000000000040ae83 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434c83 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004250a5 : clc ; add rsp, 0x2a0 ; pop rbp ; ret
0x000000000044ea1c : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433082 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000458b32 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000455c60 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b801 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004348d3 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000045aacd : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000435031 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000042aff3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004498c3 : clc ; and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000429a16 : clc ; call 0x415c33
0x0000000000402b9f : clc ; jne 0x402ba8 ; pop rbp ; ret
0x000000000040a5e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042bb9c : clc ; mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000040a5c4 : clc ; mov esi, 0x2e95d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bc3e : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000439a9c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004487c3 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000043947e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004487a3 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000043365b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000043367b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000043369b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004498ca : clc ; pop rbp ; ret
0x000000000045f3b8 : clc ; std ; call rax
0x0000000000403027 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000450eec : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a525 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000045ef5a : cld ; call qword ptr [rax]
0x000000000045efba : cld ; call qword ptr [rbx]
0x000000000045eaba : cld ; call qword ptr [rcx]
0x000000000045f01a : cld ; call qword ptr [rsi]
0x000000000045da7a : cld ; call rsp
0x000000000045ed3a : cld ; jmp qword ptr [rax]
0x000000000045db72 : cld ; push qword ptr [rbp + rdx - 0x667c0000] ; cld ; call rsp
0x000000000045daf2 : cld ; push qword ptr [rbx + rdx + 0x6b540000] ; cld ; call rsp
0x000000000045da72 : cld ; push qword ptr [rcx + rdx + 0x33740000] ; cld ; call rsp
0x000000000045dbf2 : cld ; push qword ptr [rdi + rdx - 0x202c0000] ; cld ; call rsp
0x000000000045dab2 : cld ; push qword ptr [rdx + rdx + 0x44b40000] ; cld ; call rsp
0x000000000045dbb2 : cld ; push qword ptr [rsi + rdx - 0x2e2c0000] ; cld ; call rsp
0x000000000045db32 : cld ; push qword ptr [rsp + rdx + 0x7d440000] ; cld ; call rsp
0x00000000004441ed : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000045e39a : cli ; call qword ptr [rax]
0x000000000045e4da : cli ; call rbx
0x000000000045d8ba : cli ; call rsp
0x000000000045e49a : cli ; jmp qword ptr [rcx]
0x000000000045d8f2 : cli ; push qword ptr [rbx + rcx - 0x23dc0000] ; cli ; call rsp
0x000000000045d8b2 : cli ; push qword ptr [rdx + rcx + 0x59640000] ; cli ; call rsp
0x000000000045d932 : cli ; push qword ptr [rsp + rcx + 0x1e40000] ; sti ; call rsp
0x0000000000409de8 : cli ; ret 0x45
0x000000000041c74d : cmc ; ret
0x0000000000414f32 : cmc ; ret 0x4589
0x00000000004150f7 : cmc ; ret 0xbfb9
0x000000000045964d : cmp al, -0x2a ; ret
0x0000000000439d30 : cmp al, -0x36 ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x000000000040e391 : cmp al, -0x4c ; ret
0x0000000000409de6 : cmp al, 0x25 ; cli ; ret 0x45
0x0000000000412e5b : cmp al, 0x25 ; outsd dx, dword ptr [rsi] ; ret
0x000000000040a4f8 : cmp al, 0x25 ; pop rbx ; ret
0x0000000000409986 : cmp al, 0x25 ; ret
0x00000000004096ec : cmp al, 0x25 ; ret 0x45
0x0000000000416036 : cmp al, 0x25 ; xchg eax, ebp ; ret
0x000000000045e4d8 : cmp al, ah ; cli ; call rbx
0x0000000000424fc7 : cmp al, ch ; ret
0x0000000000424361 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402b70 ; pop rbp ; ret
0x00000000004464c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000431bee : cwde ; call 0x4023f7
0x00000000004577eb : cwde ; js 0x457795 ; ret
0x0000000000457832 : cwde ; js 0x4577dc ; ret
0x000000000045786c : cwde ; js 0x457816 ; ret
0x000000000045ff78 : cwde ; mov ch, -2 ; jmp qword ptr [rdx]
0x000000000043ccf3 : cwde ; push rsp ; ret
0x000000000045f2b8 : cwde ; std ; call qword ptr [rdx]
0x0000000000413a2c : dec dword ptr [rax + 0x39] ; ret 0xf41
0x00000000004096e9 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x45
0x0000000000430578 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x1c
0x000000000041284d : dec dword ptr [rax - 0x77] ; ret 0x3ae8
0x000000000040f8f6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000409618 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041047e : dec dword ptr [rax - 0x77] ; ret 0xc9e8
0x000000000042063e : dec dword ptr [rax - 0x7f] ; ret 0x9c
0x0000000000410319 : dec dword ptr [rax - 0x7f] ; ret 0xffe0
0x0000000000412913 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000044469d : dec dword ptr [rax - 0x7f] ; ret 2
0x00000000004255e1 : dec dword ptr [rax - 0x7f] ; ret 8
0x000000000040a36a : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004317c6 : dec dword ptr [rbx - 0x1cb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000043182e : dec dword ptr [rbx - 0x1d76b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000431896 : dec dword ptr [rbx - 0x1e36b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004318fe : dec dword ptr [rbx - 0x1ef6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004073cb : dec dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043cc5c : dec dword ptr [rcx - 0x68167e3f] ; push rsp ; ret
0x00000000004317cc : dec dword ptr [rdi] ; ret 0x4589
0x0000000000445ba4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000043b1b7 : dec dword ptr [rdi] ; test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000041eb8e : dec dword ptr [rdi] ; test byte ptr [rax], bh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004327c2 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffd], dh ; ret 1
0x000000000040d01e : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffe], ah ; ret 1
0x000000000044e33c : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffe], dh ; ret 1
0x00000000004225b5 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff7], bl ; ret 1
0x00000000004196e8 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffd], dh ; ret 1
0x000000000044eb43 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000411db5 : dec dword ptr [rdi] ; xchg eax, edx ; ret
0x000000000040765f : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000425551 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000425550 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000044ac4c : enter -0x74b8, 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000044b3dc : enter -0x74b8, 0x55 ; call 0x71073534
0x00000000004341e7 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004153b8 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000043429a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000423df8 : enter -0x7eb8, -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419e08 : enter -0x7eb8, -0x3c ; loopne 0x419e18 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000418f6a : enter -0x7eb8, -0x3c ; mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000460498 : enter -0x97, -1 ; ret
0x00000000004129f3 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043c7d1 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004161ee : enter 0x45c7, -0x6c ; ret 0xef27
0x000000000040b3db : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430731 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040d9ea : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439d05 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004298d9 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040c0ba : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c110 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004474d9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c0db : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045efb8 : fadd st(1) ; cld ; call qword ptr [rbx]
0x000000000040f209 : fcomp dword ptr [rsi - 0x4bc346d3] ; ret
0x000000000045e498 : fcomp st(6) ; cli ; jmp qword ptr [rcx]
0x000000000045d8f9 : fdiv st(2), st(0) ; call rsp
0x000000000045e499 : fdivp st(2) ; jmp qword ptr [rcx]
0x000000000045dfb9 : fdivr st(6) ; call rsp
0x0000000000450704 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415383 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000426417 : fmul dword ptr [rax - 0x77] ; ret 0x90e8
0x0000000000449549 : fmul dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000415387 : fmul dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004237e7 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000041ee6f : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x000000000041edfd : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x0000000000412e91 : fmul qword ptr [rax - 0x75] ; loopne 0x412e4f ; add al, ch ; ret
0x000000000045b0ac : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042621b : fsub st(1), st(0) ; ret
0x0000000000435d64 : fsubr st(1) ; ret 0
0x0000000000413287 : ftst ; ret 0x896b
0x000000000043682c : fucompi st(1) ; ret
0x0000000000402ff9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043002b : hlt ; add rsp, 0x180 ; pop rbp ; ret
0x0000000000421108 : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044e8bd : hlt ; add rsp, 0x98 ; pop rbp ; ret
0x0000000000457214 : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000042bc41 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402b70 : hlt ; pop rbp ; mov edi, 0x661560 ; jmp rax
0x0000000000423f4a : hlt ; pop rbp ; ret
0x000000000041c6f9 : hlt ; ret
0x000000000045dcb8 : hlt ; std ; call rsp
0x000000000045e579 : idiv edx ; jmp qword ptr [rcx]
0x0000000000418900 : imul eax, dword ptr [rbx], 0 ; add cl, ch ; ret 1
0x000000000044f49e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000443b49 : in al, -0x7f ; ret 0xff9f
0x0000000000443d2f : in al, -0x7f ; ret 0xffbf
0x0000000000443dd5 : in al, -0x7f ; ret 0xffc5
0x0000000000443e03 : in al, -0x7f ; ret 0xffd5
0x0000000000443ed1 : in al, -0x7f ; ret 0xffd8
0x0000000000444067 : in al, -0x7f ; ret 0xffe0
0x0000000000429de2 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042a567 : in al, 0x15 ; ret 0x3d50
0x000000000045ff74 : in al, 0x1c ; add byte ptr [rax], al ; cwde ; mov ch, -2 ; jmp qword ptr [rdx]
0x000000000040b0c2 : in al, 0x1c ; ret
0x00000000004030bd : in al, 0x2d ; push rdi ; ret
0x000000000045dc38 : in al, 0x2f ; std ; call rsp
0x000000000041ef7d : in al, 0x48 ; add esp, 0x120 ; pop rbp ; ret
0x000000000041f061 : in al, 0x48 ; ret 0x89db
0x000000000041f10e : in al, 0x48 ; ret 0xfdb
0x0000000000447f43 : in al, 0x7f ; ret
0x000000000042a783 : in al, 0xf ; salc ; ret
0x000000000043c86d : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045d938 : in al, 1 ; sti ; call rsp
0x000000000045e574 : in al, 2 ; add byte ptr [rax], al ; test al, -9 ; cli ; jmp qword ptr [rcx]
0x000000000043815a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000432e67 : in al, dx ; add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040ad40 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043be68 : in al, dx ; add rsp, 0x250 ; pop rbp ; ret
0x00000000004531af : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044df3f : in al, dx ; add rsp, 0x490 ; pop rbp ; ret
0x000000000045ac5d : in al, dx ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000456c8a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000416096 : in al, dx ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000043dbfa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004530db : in al, dx ; pop rbp ; ret
0x000000000041a652 : in al, dx ; sbb edx, ecx ; ret
0x0000000000415237 : in eax, dx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000457eeb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004208c1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004451bf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004076a3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004083f7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411cca : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042ffaf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000409fb2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e516 : inc dword ptr [rbx] ; insd dword ptr [rdi], dx ; ret 0xe963
0x0000000000410340 : inc dword ptr [rcx + 0x39] ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x00000000004147ff : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000411612 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x000000000040783c : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000040a113 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411b75 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000411c7b : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x000000000041a7ea : inc edi ; in al, dx ; sbb edx, ecx ; ret
0x0000000000446c78 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041ddbc : inc edi ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rdx]
0x000000000041e5c1 : inc edi ; test dword ptr [rdi + rbp*8 - 1], ecx ; inc dword ptr [rbx] ; insd dword ptr [rdi], dx ; ret 0xe963
0x000000000041d526 : inc edi ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rcx
0x000000000042f950 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042f669 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x000000000042e49c : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000042e962 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000044adf2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000416030 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ebp ; ret
0x000000000042cabf : insb byte ptr [rdi], dx ; and ch, bl ; ret
0x0000000000405ee7 : insb byte ptr [rdi], dx ; lahf ; ret 0x8925
0x0000000000416cc1 : insb byte ptr [rdi], dx ; ret
0x000000000042cb13 : insd dword ptr [rdi], dx ; and ch, bl ; ret
0x0000000000405f3b : insd dword ptr [rdi], dx ; lahf ; ret 0x8925
0x000000000040989a : insd dword ptr [rdi], dx ; lahf ; ret 0xb925
0x000000000041eed8 : insd dword ptr [rdi], dx ; mov al, -0x21 ; call 0xffffffff850489f5
0x000000000044031f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041ca79 : insd dword ptr [rdi], dx ; ret 0x8963
0x000000000044395f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000041e518 : insd dword ptr [rdi], dx ; ret 0xe963
0x000000000040f6ca : int 0x80
0x000000000045ddf9 : int1 ; std ; call rsp
0x0000000000417fe1 : iretd ; add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdi
0x0000000000402b63 : ja 0x402b6a ; pop rbp ; ret
0x00000000004262b9 : ja 0x42631f ; stosb byte ptr [rdi], al ; jmp 0x4263ed
0x0000000000439481 : ja 0x4394ce ; pop rbp ; ret
0x00000000004487a6 : ja 0x4487b3 ; pop rbp ; ret
0x00000000004487c6 : ja 0x4487db ; pop rbp ; ret
0x0000000000433e1b : jae 0x433e25 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042a780 : jb 0x42a74f ; in al, 0xf ; salc ; ret
0x000000000045fab9 : jb 0x45fabb ; jmp qword ptr [rdx]
0x000000000045fab8 : jb 0x45fabc ; jmp qword ptr [rdx]
0x0000000000402b6f : je 0x402b6d ; pop rbp ; mov edi, 0x661560 ; jmp rax
0x000000000041ea73 : je 0x41ea8e ; ret 0x8589
0x000000000041eabe : je 0x41ead9 ; ret 0x8589
0x000000000041ee9d : je 0x41eeb8 ; ret 0xa1b9
0x000000000045d978 : je 0x45d9c3 ; sti ; call rsp
0x000000000045da78 : je 0x45dab0 ; cld ; call rsp
0x000000000045dda4 : je 0x45ddc9 ; add byte ptr [rax], al ; ret 0xfffd
0x000000000045fbd9 : je 0x45fbdb ; jmp qword ptr [rax]
0x000000000041a7e8 : jg 0x41a7f1 ; inc edi ; in al, dx ; sbb edx, ecx ; ret
0x000000000041f10c : jg 0x41f0cb ; in al, 0x48 ; ret 0xfdb
0x000000000043bbab : jg 0x43bbbf ; xchg eax, esp ; ret 0xd284
0x000000000043bd1e : jg 0x43bd32 ; xchg eax, esp ; ret 0xd284
0x000000000043bdd6 : jg 0x43bdea ; xchg eax, esp ; ret 0xd284
0x000000000043d4a4 : jg 0x43d4b8 ; pushfq ; ret 0xd284
0x000000000040313d : jge 0x403138 ; call 0x4023f9
0x000000000041342c : jge 0x4133cd ; ret
0x0000000000413480 : jge 0x413421 ; ret
0x000000000041385b : jge 0x4137fc ; ret
0x0000000000414e39 : jge 0x414e32 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000429a15 : jge 0x429a13 ; call 0x415c34
0x000000000042bc3d : jge 0x42bc3f ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004305df : jge 0x4305c1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000043063b : jge 0x43061d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043365a : jge 0x43365b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000043367a : jge 0x43367b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000043369a : jge 0x43369b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043947d : jge 0x43947e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000439a9b : jge 0x439a9c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004487a2 : jge 0x4487a3 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004487c2 : jge 0x4487c3 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x00000000004498c6 : jge 0x4498be ; mov rax, rdi ; pop rbp ; ret
0x000000000044efb8 : jge 0x44efcf ; ret
0x000000000044f4a3 : jge 0x44f4ba ; ret
0x0000000000458459 : jge 0x458453 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000045db39 : jge 0x45db39 ; call rsp
0x000000000045db38 : jge 0x45db3a ; call rsp
0x000000000044e915 : jl 0x44e8f1 ; ret
0x000000000044e965 : jl 0x44e941 ; ret
0x000000000044ee8c : jl 0x44eea3 ; ret
0x000000000040252b : jmp 0x402367
0x0000000000407fff : jmp 0x40a52f
0x000000000040997f : jmp 0x40a532
0x000000000040c275 : jmp 0x40c2de
0x000000000041274f : jmp 0x412d35
0x0000000000417f07 : jmp 0x4182bb
0x000000000041e4ca : jmp 0x41e786
0x000000000042545a : jmp 0x425465
0x00000000004262bc : jmp 0x4263ea
0x000000000042cac1 : jmp 0x42ca87
0x000000000042cb15 : jmp 0x42cadb
0x000000000042eaa9 : jmp 0x42ea6f
0x0000000000432d26 : jmp 0x432e79
0x00000000004340e2 : jmp 0x4341b7
0x00000000004344f4 : jmp 0x434581
0x000000000043a9fc : jmp 0x43aa07
0x000000000043ba38 : jmp 0x43be78
0x000000000043c825 : jmp 0x43c9fb
0x000000000044330d : jmp 0x445ff3
0x0000000000445da1 : jmp 0x445ff5
0x0000000000447420 : jmp 0x44750d
0x0000000000448469 : jmp 0x44878b
0x000000000044a539 : jmp 0x44a6f6
0x000000000044accd : jmp 0x44b0cb
0x000000000044b2c6 : jmp 0x44b511
0x000000000044d261 : jmp 0x44df51
0x000000000044f49d : jmp 0x44fa15
0x0000000000455441 : jmp 0x455753
0x000000000045762b : jmp 0x457636
0x000000000045829b : jmp 0x4582a6
0x0000000000437e61 : jmp 0x490607b1
0x0000000000437edc : jmp 0x4906082c
0x0000000000439235 : jmp 0x49061b85
0x00000000004392b0 : jmp 0x49061c00
0x000000000041e990 : jmp 0x7503f5c6
0x00000000004087d7 : jmp 0x76035398
0x000000000040d671 : jmp 0xffffffff830330b9
0x00000000004370ab : jmp 0xffffffff8a05d64d
0x0000000000458ece : jmp 0xffffffffb707929a
0x00000000004577ea : jmp 0xffffffffc3e9f08b
0x000000000043745f : jmp 0xffffffffea05da01
0x0000000000405026 : jmp 0xfffffffff864d5bd
0x0000000000426c15 : jmp qword ptr [rax]
0x0000000000428f49 : jmp qword ptr [rbx]
0x0000000000411d2d : jmp qword ptr [rcx]
0x0000000000409a88 : jmp qword ptr [rdi]
0x00000000004464c5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040a050 : jmp qword ptr [rdx]
0x0000000000412d17 : jmp qword ptr [rsi]
0x0000000000402b77 : jmp rax
0x000000000041461d : jmp rbx
0x000000000041d52c : jmp rcx
0x0000000000409235 : jmp rdi
0x0000000000402bb7 : jmp rdx
0x000000000041dc2d : jmp rsi
0x000000000040f5dc : jmp rsp
0x0000000000402ba0 : jne 0x402ba7 ; pop rbp ; ret
0x0000000000425552 : jne 0x42554a ; mov rax, rdx ; pop rbp ; ret
0x000000000042bc40 : jne 0x42bc3b ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004341e6 : jne 0x4341b9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000439a9f : jne 0x439a94 ; pop rbp ; ret
0x0000000000439d34 : jne 0x439d08 ; call rax
0x0000000000446c76 : jne 0x446c7f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000044989c : jne 0x449874 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000045fcf9 : jne 0x45fcfb ; jmp qword ptr [rdx]
0x000000000044adf0 : jnp 0x44adf5 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000041274d : jns 0x4127ae ; jmp 0x412d37
0x000000000044c150 : jns 0x44c1cf ; ret 0x89e4
0x000000000045d9b9 : jns 0x45d9b8 ; call rsp
0x0000000000412eaa : jo 0x412f0b ; ret
0x000000000041a8b5 : jo 0x41a916 ; ret
0x000000000041f228 : jo 0x41f289 ; ret
0x0000000000426548 : jo 0x4265a9 ; ret
0x000000000042b5ec : jo 0x42b64d ; ret
0x0000000000446e91 : jo 0x446ef2 ; ret
0x0000000000446fb4 : jo 0x447015 ; ret
0x00000000004470ee : jo 0x44714f ; ret
0x0000000000448b11 : jo 0x448b72 ; ret
0x00000000004507ac : jo 0x45080d ; ret
0x0000000000455c64 : jo 0x455cc5 ; ret
0x000000000045a775 : jo 0x45a7d6 ; ret
0x000000000045ac61 : jo 0x45acc2 ; ret
0x0000000000430e9d : jp 0x430ee9 ; ret 0x458b
0x00000000004312ba : jp 0x431306 ; ret 0x8589
0x00000000004313d2 : jp 0x43141e ; ret 0x8589
0x0000000000448afe : jp 0x448b12 ; call rax
0x000000000044c19b : jp 0x44c21a ; ret 0x89e4
0x000000000044d78c : jp 0x44d80b ; ret 0xe9e4
0x0000000000447d83 : jrcxz 0x447e06 ; ret
0x0000000000453c58 : jrcxz 0x453cbe ; ret 0x8589
0x0000000000453cac : jrcxz 0x453d12 ; ret 0x8589
0x0000000000455164 : jrcxz 0x4551ca ; ret 0x8fb9
0x000000000045538f : jrcxz 0x4553f5 ; ret 0x8fb9
0x00000000004087d5 : js 0x4087f1 ; jmp 0x7603539a
0x00000000004087d4 : js 0x4087f2 ; jmp 0x7603539b
0x0000000000445fe6 : js 0x445ffa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004577ec : js 0x457794 ; ret
0x0000000000457833 : js 0x4577db ; ret
0x000000000045786d : js 0x457815 ; ret
0x000000000045dcf9 : js 0x45dcfa ; call rsp
0x000000000045e839 : js 0x45e838 ; call qword ptr [rbx]
0x000000000045e838 : js 0x45e8b5 ; sti ; call qword ptr [rbx]
0x000000000045f0b8 : js 0x45f088 ; cld ; call qword ptr [rsi]
0x0000000000427887 : lahf ; pop rcx ; ret 0x89c7
0x0000000000405ee8 : lahf ; ret 0x8925
0x000000000040989b : lahf ; ret 0xb925
0x000000000043c8e4 : lahf ; ret 0xd284
0x00000000004263c2 : lds rax, ptr [rbp] ; call 0x402646
0x00000000004263bf : lea ecx, dword ptr [0x45c548] ; call 0x402649
0x000000000043c826 : leave ; add dword ptr [rax], eax ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042eaa6 : ljmp ptr [rbp + 0x22] ; jmp 0x42ea72
0x000000000043745e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05da02
0x000000000043745d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05da03
0x0000000000453d38 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x0000000000455325 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x00000000004374f4 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000458bae : lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000458cc1 : lodsd eax, dword ptr [rsi] ; ret 0xb9a2
0x000000000044accb : loop 0x44acb4 ; jmp 0x44b0cd
0x0000000000457299 : loop 0x4572eb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000457381 : loop 0x4573d3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042558e : loope 0x425597 ; movzx eax, cl ; pop rbp ; ret
0x000000000040b486 : loopne 0x40b48d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040eccc : loopne 0x40ecd5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412e95 : loopne 0x412e4b ; add al, ch ; ret
0x0000000000412e94 : loopne 0x412e4c ; add al, ch ; ret
0x0000000000412f80 : loopne 0x412fd0 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000412f7f : loopne 0x412fd1 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000413af4 : loopne 0x413afc ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419e0c : loopne 0x419e14 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a529 : loopne 0x41a530 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421a9c : loopne 0x421aec ; add esp, 0x20 ; pop rbp ; ret
0x0000000000421a9b : loopne 0x421aed ; add esp, 0x20 ; pop rbp ; ret
0x0000000000423b19 : loopne 0x423ae8 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x0000000000423b18 : loopne 0x423ae9 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x00000000004247ba : loopne 0x4247c4 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004263da : loopne 0x42642d ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000429940 : loopne 0x429949 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042aecc : loopne 0x42aed5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b343 : loopne 0x42b34c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430d7b : loopne 0x430dcb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000430d7a : loopne 0x430dcc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000435567 : loopne 0x435570 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436800 : loopne 0x436809 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436820 : loopne 0x43686e ; mov edi, dword ptr [rcx] ; call rax
0x000000000043681f : loopne 0x43686f ; mov edi, dword ptr [rcx] ; call rax
0x00000000004368ec : loopne 0x4368f5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436984 : loopne 0x43698d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043abc2 : loopne 0x43ac12 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043abc1 : loopne 0x43ac13 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043d0fe : loopne 0x43d107 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000043dfbe : loopne 0x43dfc7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448a63 : loopne 0x448a6d ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000449b04 : loopne 0x449a96 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000449b03 : loopne 0x449a97 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000449d67 : loopne 0x449cf9 ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000449d66 : loopne 0x449cfa ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000449e9f : loopne 0x449e31 ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000449e9e : loopne 0x449e32 ; push rbp ; mov al, -0x7f ; ret 3
0x000000000044a102 : loopne 0x44a094 ; push rbp ; mov al, -0x7f ; ret 2
0x000000000044a101 : loopne 0x44a095 ; push rbp ; mov al, -0x7f ; ret 2
0x00000000004504f0 : loopne 0x4504f9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004508fc : loopne 0x45094c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004508fb : loopne 0x45094d ; add esp, 0x40 ; pop rbp ; ret
0x00000000004567cc : loopne 0x4567d5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000457196 : loopne 0x45719f ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045afb3 : loopne 0x45afbc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045e4d9 : loopne 0x45e4d7 ; call rbx
0x0000000000449ac9 : mov ah, -0x7f ; ret 1
0x0000000000449ae8 : mov ah, -0x7f ; ret 2
0x0000000000449b07 : mov ah, -0x7f ; ret 3
0x0000000000449b26 : mov ah, -0x7f ; ret 4
0x0000000000449b45 : mov ah, -0x7f ; ret 5
0x0000000000449b64 : mov ah, -0x7f ; ret 6
0x0000000000449b83 : mov ah, -0x7f ; ret 7
0x0000000000432d37 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000449a9b : mov ah, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045da74 : mov ah, 0x11 ; add byte ptr [rax], al ; je 0x45dab4 ; cld ; call rsp
0x000000000045dab4 : mov ah, 0x12 ; add byte ptr [rax], al ; mov ah, 0x44 ; cld ; call rsp
0x000000000045db34 : mov ah, 0x14 ; add byte ptr [rax], al ; jge 0x45db3e ; call rsp
0x000000000045dc34 : mov ah, 0x18 ; add byte ptr [rax], al ; in al, 0x2f ; std ; call rsp
0x000000000045dc74 : mov ah, 0x19 ; add byte ptr [rax], al ; add al, 0x56 ; std ; call rsp
0x000000000045dcb4 : mov ah, 0x1a ; add byte ptr [rax], al ; hlt ; std ; call rsp
0x000000000045ddf4 : mov ah, 0x1f ; add byte ptr [rax], al ; test dh, cl ; std ; call rsp
0x000000000045de34 : mov ah, 0x20 ; add byte ptr [rax], al ; xchg eax, esp ; add edi, esi ; call rsp
0x000000000045dfb4 : mov ah, 0x26 ; add byte ptr [rax], al ; push rsp ; fdivr st(6) ; call rsp
0x000000000045dff4 : mov ah, 0x27 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and edi, edi ; call rsp
0x0000000000416cbf : mov ah, 0x2d ; insb byte ptr [rdi], dx ; ret
0x000000000045dab8 : mov ah, 0x44 ; cld ; call rsp
0x00000000004031d0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000045d8b4 : mov ah, 0xa ; add byte ptr [rax], al ; pop rcx ; cli ; call rsp
0x000000000045d8f4 : mov ah, 0xb ; add byte ptr [rax], al ; and al, 0xffffffffffffffdc ; cli ; call rsp
0x000000000045d934 : mov ah, 0xc ; add byte ptr [rax], al ; in al, 1 ; sti ; call rsp
0x000000000045d974 : mov ah, 0xd ; add byte ptr [rax], al ; je 0x45d9c7 ; sti ; call rsp
0x000000000045d9b4 : mov ah, 0xe ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x45d9bd ; call rsp
0x000000000045d9f4 : mov ah, 0xf ; add byte ptr [rax], al ; push rsp ; mov ebx, edi ; call rsp
0x000000000041eed9 : mov al, -0x21 ; call 0xffffffff850489f4
0x0000000000449e64 : mov al, -0x7f ; ret 1
0x0000000000449e83 : mov al, -0x7f ; ret 2
0x0000000000449ea2 : mov al, -0x7f ; ret 3
0x0000000000449ec1 : mov al, -0x7f ; ret 4
0x0000000000449ee0 : mov al, -0x7f ; ret 5
0x0000000000449eff : mov al, -0x7f ; ret 6
0x0000000000449f1e : mov al, -0x7f ; ret 7
0x000000000043c99d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000419a8c : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045a01a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004243bf : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000449e36 : mov al, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045646a : mov al, 0 ; call 0x4024a8
0x000000000043e17b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000044b679 : mov al, 0x78 ; ret
0x000000000043c92e : mov al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418f6e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042958f : mov al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045753d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004576ed : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000457ee9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419f16 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435b61 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045743f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000045743e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004573bf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004573c3 : mov bh, -0x40 ; pop rbp ; ret
0x000000000045df79 : mov bh, -2 ; call rsp
0x0000000000460859 : mov bh, bh ; jmp rax
0x000000000042b841 : mov byte ptr [0x661b90], al ; pop rbp ; ret
0x0000000000431ef5 : mov byte ptr [r15], r9b ; test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041316d : mov byte ptr [rax + 0x30], 0 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a7d2 : mov byte ptr [rax], 0 ; add rsp, 0x58 ; pop rbp ; ret
0x0000000000428a9b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a5e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000431ef6 : mov byte ptr [rdi], cl ; test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000402bd3 : mov byte ptr [rip + 0x25e9de], 1 ; ret
0x0000000000404588 : mov ch, -0x50 ; ret
0x000000000045ff79 : mov ch, -2 ; jmp qword ptr [rdx]
0x000000000040fb87 : mov ch, 4 ; add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044cf79 : mov cl, 0x78 ; ret
0x000000000043987d : mov dh, -0x39 ; pop rbp ; ret
0x0000000000425591 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000433d63 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004161b6 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dd09 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419f1c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000458015 : mov dl, -0x47 ; ret
0x000000000042b81d : mov dword ptr [0x661b88], edi ; pop rbp ; ret
0x000000000043de37 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043dbfb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043dd6f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000414e38 : mov dword ptr [rbp - 0x10], edi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000439a9e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x0000000000438609 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000043877b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x000000000040ad3e : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004152a8 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421a9a : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004344f1 : mov dword ptr [rbp - 0x24], eax ; jmp 0x434584
0x00000000004031ce : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004461b8 : mov dword ptr [rbp - 0x50], eax ; call 0x4023d5
0x000000000043ba35 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x43be7b
0x000000000043a115 : mov dword ptr [rbp - 0x78], eax ; mov dword ptr [rbp - 0x7c], ecx ; call rdx
0x000000000045543e : mov dword ptr [rbp - 0x7c], eax ; jmp 0x455756
0x000000000043a118 : mov dword ptr [rbp - 0x7c], ecx ; call rdx
0x000000000043a172 : mov dword ptr [rbp - 0x80], eax ; mov dword ptr [rbp - 0x84], ecx ; call rdx
0x000000000043a175 : mov dword ptr [rbp - 0x84], ecx ; call rdx
0x0000000000434131 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000042634e : mov dword ptr [rbp - 0x90], esi ; call 0x4025a8
0x0000000000434f7f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000402ff7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403025 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000439a9a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000043dfed : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043517a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004487c5 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000042bb9d : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x0000000000439480 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004487a5 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x000000000042bc42 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040d73c : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000439dbc : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411edc : mov eax, 0x5b000002 ; pop rbp ; ret
0x0000000000426544 : mov eax, 0x70c48348 ; pop rbp ; ret
0x000000000044a17a : mov eax, 0x81b0558b ; ret 7
0x0000000000449ddf : mov eax, 0x81b4558b ; ret 7
0x000000000043daef : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000045083b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bc21 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421cef : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000430d33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000439f1d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045051f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b5e6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045ac95 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414e3c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004531ad : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045ac5b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004530d9 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004479fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a62a : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438967 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004396b0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043399f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043abc0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412f7e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f222 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044903b : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420bd7 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000439a76 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043daec : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000450ae1 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045b00d : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000043dbf5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042a8f1 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000045a76f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004341ec : mov eax, dword ptr [rbp - 0x38] ; call rax
0x000000000043dd71 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045ae6a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000426542 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000446e8b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004461b4 : mov eax, dword ptr [rbp - 0x78] ; mov qword ptr [rbp - 0x50], rax ; call 0x4023d9
0x0000000000421106 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423f48 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000450eea : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ae81 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434c81 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044ea1a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433080 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000458b30 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000455c5e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043365d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000043367d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000043369d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044989f : mov eax, dword ptr [rsi] ; pop rbp ; ret
0x00000000004153b7 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004498c9 : mov eax, edi ; pop rbp ; ret
0x0000000000435751 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425555 : mov eax, edx ; pop rbp ; ret
0x00000000004573c0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x00000000004572d3 : mov eax, esi ; pop rbp ; ret
0x00000000004076e6 : mov ebp, 0xfffffefb ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402bfb : mov ebp, esp ; call rax
0x0000000000402b61 : mov ebp, esp ; ja 0x402b6c ; pop rbp ; ret
0x000000000042bb41 : mov ebx, 0x48fffd68 ; add esp, 0x60 ; pop rbp ; ret
0x000000000045d9f9 : mov ebx, edi ; call rsp
0x00000000004361ed : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043dbf8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000436155 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043681e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004572fd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004572cd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402bf5 : mov edi, 0x660e10 ; mov rbp, rsp ; call rax
0x0000000000402b72 : mov edi, 0x661560 ; jmp rax
0x0000000000402bb2 : mov edi, 0x661560 ; jmp rdx
0x00000000004096e7 : mov edi, dr1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x45
0x0000000000429a14 : mov edi, dword ptr [rbp - 8] ; call 0x415c35
0x000000000042bc3c : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004487c1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000043947c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004487a1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000433659 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000433679 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000433699 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004361f1 : mov edi, dword ptr [rcx] ; call rax
0x0000000000448afd : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000439d2f : mov edi, dword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x000000000045b0a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045b0a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042bdf2 : mov edx, 0x48fffffd ; add esp, 0x50 ; pop rbp ; ret
0x0000000000448af9 : mov edx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000431bec : mov edx, dword ptr [rbp - 0x68] ; call 0x4023f9
0x000000000045ac99 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a5c5 : mov esi, 0x2e95d ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439d33 : mov esi, dword ptr [rbp - 0x30] ; call rax
0x000000000044989b : mov esi, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000042bc3f : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402bb0 : mov esi, eax ; mov edi, 0x661560 ; jmp rdx
0x00000000004341e9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042b81c : mov qword ptr [0x661b88], rdi ; pop rbp ; ret
0x0000000000414e37 : mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000439a9d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004461b7 : mov qword ptr [rbp - 0x50], rax ; call 0x4023d6
0x0000000000439a99 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000043dfec : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004487c4 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000043947f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004487a4 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040d73b : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000439dbb : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416cbe : mov r12b, 0x2d ; insb byte ptr [rdi], dx ; ret
0x00000000004031cf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000426543 : mov r8d, 0x70c48348 ; pop rbp ; ret
0x000000000044a179 : mov r8d, 0x81b0558b ; ret 7
0x0000000000449dde : mov r8d, 0x81b4558b ; ret 7
0x000000000045083a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bc20 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421cee : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000430d32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000439f1c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045051e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b5e5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045ac94 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414e3b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004479fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a629 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000438966 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004396af : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043399e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043abbf : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412f7d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420bd6 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000439a75 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043daeb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042a8f0 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x00000000004341eb : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000426541 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000446e8a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ae80 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434c80 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043365c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000043367c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000043369c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044989e : mov rax, qword ptr [rsi] ; pop rbp ; ret
0x00000000004153b6 : mov rax, rcx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004498c8 : mov rax, rdi ; pop rbp ; ret
0x0000000000435750 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425554 : mov rax, rdx ; pop rbp ; ret
0x0000000000402bfa : mov rbp, rsp ; call rax
0x0000000000402b60 : mov rbp, rsp ; ja 0x402b6d ; pop rbp ; ret
0x00000000004361ec : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000436154 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043681d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004487c0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000043947b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004487a0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000433658 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000433678 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000433698 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004361f0 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000448afc : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000439d2e : mov rdi, qword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x0000000000448af8 : mov rdx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000045ac98 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000439d32 : mov rsi, qword ptr [rbp - 0x30] ; call rax
0x000000000044989a : mov rsi, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000402baf : mov rsi, rax ; mov edi, 0x661560 ; jmp rdx
0x00000000004341e8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000446c7a : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000446c7b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000431c6b : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004443cc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000045828e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041ee30 : movabs al, byte ptr [0x970fd8dde9dfc9d9] ; ret 0xd284
0x000000000041ee69 : movabs al, byte ptr [0x9b0fd8dde9dfc9d9] ; ret 0xf40
0x0000000000420397 : movabs al, byte ptr [0xffedf885c7ffffef] ; jmp rsp
0x000000000041831c : movabs dword ptr [0x1ae981c189ac458b], eax ; ret
0x000000000045b04f : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000045e834 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x78780000 ; sti ; call qword ptr [rbx]
0x000000000045dff8 : movsb byte ptr [rdi], byte ptr [rsi] ; and edi, edi ; call rsp
0x000000000044f49c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x44fa16
0x000000000045d9b8 : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x45d9b9 ; call rsp
0x000000000045ed34 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax + 0x68], ch ; cld ; jmp qword ptr [rax]
0x000000000043c82c : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000416978 : movsb byte ptr [rdi], byte ptr [rsi] ; sub ch, cl ; ret
0x000000000042f6ed : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x0000000000409980 : movsd dword ptr [rdi], dword ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000433d62 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004161b5 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dd08 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419f1b : movzx eax, al ; pop rbp ; ret
0x00000000004573c2 : movzx eax, ax ; pop rbp ; ret
0x000000000043987c : movzx eax, bh ; pop rbp ; ret
0x000000000040a5ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000425590 : movzx eax, cl ; pop rbp ; ret
0x000000000043987b : movzx eax, dil ; pop rbp ; ret
0x0000000000435b62 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000435b63 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000425fb9 : nop ; add rsp, 0x110 ; pop rbp ; ret
0x000000000042b844 : nop ; sbb esp, dword ptr [rsi] ; pop rbp ; ret
0x000000000045b0c8 : nop dword ptr [rax + rax] ; ret
0x000000000045d935 : or al, 0 ; add ah, ah ; add ebx, edi ; call rsp
0x0000000000445fe7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418bb5 : or al, 0x25 ; add byte ptr [rsi], dl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004263c0 : or al, 0x25 ; lds rax, ptr [rbp] ; call 0x402648
0x000000000043222e : or al, 0x2d ; ret
0x000000000042f98c : or al, 0x48 ; add esp, 0x440 ; pop rbp ; ret
0x000000000043b037 : or al, 0xffffffffffffffa8 ; pop rax ; ret 0x8589
0x000000000041dd06 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rdx]
0x000000000045ed35 : or al, byte ptr [rax] ; add byte ptr [rax + 0x68], ch ; cld ; jmp qword ptr [rax]
0x000000000045d8b5 : or al, byte ptr [rax] ; add byte ptr [rcx + rbx*2 - 6], ah ; call rsp
0x000000000043745b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05da05
0x000000000043a173 : or byte ptr [r9 - 0x8373], 0xff ; call rdx
0x000000000045eab5 : or byte ptr [rax], al ; add byte ptr [rax + 0x27], bl ; cld ; call qword ptr [rcx]
0x000000000043b1bb : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000417f8e : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409471 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043a174 : or byte ptr [rcx - 0x8373], 0xff ; call rdx
0x000000000045e718 : or byte ptr [rdi - 5], ah ; jmp qword ptr [rcx]
0x000000000043d46e : or byte ptr [rdi], 0x9c ; ret 0xd284
0x000000000045f138 : or byte ptr [rdi], cl ; std ; call qword ptr [rdi]
0x000000000045eff8 : or dh, al ; cld ; call qword ptr [rax]
0x0000000000449545 : or dword ptr [rax - 0x75], 0x8148d855 ; ret 0x20
0x000000000044eb47 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004225b9 : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040abf5 : or dword ptr [rcx + 0x7a], 0x19c9ba80 ; ret 0x48fc
0x000000000045d975 : or eax, 0x46740000 ; sti ; call rsp
0x000000000042aa3f : or eax, 0x48fffd7d ; add esp, 0x20 ; pop rbp ; ret
0x00000000004097b2 : or eax, 0x8d480000 ; cmp al, 0x25 ; ret 0x45
0x000000000045efb5 : or eax, 0xc1d80000 ; cld ; call qword ptr [rbx]
0x000000000045eff5 : or eax, 0xc6080000 ; cld ; call qword ptr [rax]
0x000000000045f015 : or eax, 0xc7f80000 ; cld ; call qword ptr [rsi]
0x000000000041dc25 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rsi
0x0000000000409981 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000447071 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045d8f5 : or eax, dword ptr [rax] ; add byte ptr [rsp + rbx*8], ah ; cli ; call rsp
0x000000000045725b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004572d1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000043745a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05da06
0x000000000045725a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000439879 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004576ef : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042290a : out dx, al ; sbb bh, byte ptr [rbx + rdi*4 - 0x17] ; ret 6
0x000000000045753f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004572d0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040454f : out dx, eax ; stc ; ret 0x8589
0x0000000000433e09 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000437933 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043d0fd : outsd dx, dword ptr [rsi] ; loopne 0x43d108 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000412e5d : outsd dx, dword ptr [rsi] ; ret
0x000000000045b0bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045b0be : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000446312 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045b0c0 : pop r14 ; pop r15 ; ret
0x0000000000446314 : pop r15 ; pop rbp ; ret
0x000000000045b0c2 : pop r15 ; ret
0x0000000000457d68 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000460858 : pop rax ; mov bh, bh ; jmp rax
0x000000000042a7d8 : pop rax ; pop rbp ; ret
0x000000000040bb2c : pop rax ; ret
0x000000000043badc : pop rax ; ret 0x3bb9
0x000000000043b039 : pop rax ; ret 0x8589
0x0000000000402bd2 : pop rbp ; mov byte ptr [rip + 0x25e9de], 1 ; ret
0x0000000000402b71 : pop rbp ; mov edi, 0x661560 ; jmp rax
0x0000000000402bae : pop rbp ; mov rsi, rax ; mov edi, 0x661560 ; jmp rdx
0x000000000045b0bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045b0bf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402b65 : pop rbp ; ret
0x0000000000446311 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411ee0 : pop rbx ; pop rbp ; ret
0x000000000040a4fa : pop rbx ; ret
0x00000000004262ba : pop rbx ; stosb byte ptr [rdi], al ; jmp 0x4263ec
0x000000000045d8b9 : pop rcx ; cli ; call rsp
0x0000000000458014 : pop rcx ; mov dl, -0x47 ; ret
0x000000000045d2f8 : pop rcx ; ret
0x0000000000427888 : pop rcx ; ret 0x89c7
0x000000000042849d : pop rcx ; ret 0xb9c7
0x0000000000446315 : pop rdi ; pop rbp ; ret
0x000000000045b0c3 : pop rdi ; ret
0x000000000045845b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040d673 : pop rdx ; ret 0x8982
0x000000000040d6ba : pop rdx ; ret 0xb982
0x0000000000446313 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045b0c1 : pop rsi ; pop r15 ; ret
0x000000000042c740 : pop rsi ; ret
0x0000000000425d9c : pop rsi ; shl dword ptr [rsi + 0xf], 1 ; ret 0xf40
0x000000000045b0bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000440222 : pop rsp ; ret
0x0000000000433e20 : pop rsp ; ret 0xf66
0x000000000041342d : popfq ; ret
0x000000000043baee : popfq ; ret 0xd284
0x000000000041ddb9 : push -0x38000001 ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rdx]
0x0000000000449543 : push -0x4b ; or dword ptr [rax - 0x75], 0x8148d855 ; ret 0x20
0x000000000045e759 : push -5 ; jmp qword ptr [rax]
0x00000000004312b4 : push 0x2dffffff ; adc al, 0x7a ; ret 0x8589
0x000000000043ccee : push 0x2dffffff ; cwde ; push rsp ; ret
0x0000000000430ec4 : push 0x2dffffff ; ret 0x6b1d
0x000000000041274c : push 0x79 ; push rdi ; jmp 0x412d38
0x000000000045dc33 : push qword ptr [rax + rbx + 0x2fe40000] ; std ; call rsp
0x000000000045da33 : push qword ptr [rax + rdx - 0x333c0000] ; sti ; call rsp
0x000000000045dd73 : push qword ptr [rbp + rbx - 0x442c0000] ; std ; call rsp
0x000000000045d973 : push qword ptr [rbp + rcx + 0x46740000] ; sti ; call rsp
0x000000000045db73 : push qword ptr [rbp + rdx - 0x667c0000] ; cld ; call rsp
0x000000000045dcf3 : push qword ptr [rbx + rbx + 0x78d40000] ; std ; call rsp
0x000000000045d8f3 : push qword ptr [rbx + rcx - 0x23dc0000] ; cli ; call rsp
0x000000000045daf3 : push qword ptr [rbx + rdx + 0x6b540000] ; cld ; call rsp
0x000000000045dc73 : push qword ptr [rcx + rbx + 0x56040000] ; std ; call rsp
0x000000000045da73 : push qword ptr [rcx + rdx + 0x33740000] ; cld ; call rsp
0x000000000045ddf3 : push qword ptr [rdi + rbx - 0xe7c0000] ; std ; call rsp
0x000000000045d9f3 : push qword ptr [rdi + rcx - 0x76ac0000] ; sti ; call rsp
0x000000000045dbf3 : push qword ptr [rdi + rdx - 0x202c0000] ; cld ; call rsp
0x000000000045dcb3 : push qword ptr [rdx + rbx + 0x64f40000] ; std ; call rsp
0x0000000000445a0f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000045d8b3 : push qword ptr [rdx + rcx + 0x59640000] ; cli ; call rsp
0x000000000045dab3 : push qword ptr [rdx + rdx + 0x44b40000] ; cld ; call rsp
0x000000000045ddb3 : push qword ptr [rsi + rbx - 0x3aac0000] ; std ; call rsp
0x000000000045d9b3 : push qword ptr [rsi + rcx + 0x79a40000] ; sti ; call rsp
0x000000000045dbb3 : push qword ptr [rsi + rdx - 0x2e2c0000] ; cld ; call rsp
0x000000000045dd33 : push qword ptr [rsp + rbx - 0x6e7c0000] ; std ; call rsp
0x000000000045d933 : push qword ptr [rsp + rcx + 0x1e40000] ; sti ; call rsp
0x000000000045db33 : push qword ptr [rsp + rdx + 0x7d440000] ; cld ; call rsp
0x00000000004031d4 : push rax ; pop rbp ; ret
0x0000000000409ff8 : push rax ; stc ; ret 0x27e9
0x000000000044fdfb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044a5ab : push rbp ; call 0x710726fd
0x000000000044b3df : push rbp ; call 0x71073531
0x00000000004297c9 : push rbp ; call 0xe05191b
0x000000000044a64e : push rbp ; call 0xffffffffc90727a0
0x000000000044b46d : push rbp ; call 0xffffffffc90735bf
0x000000000045ac9a : push rbp ; clc ; pop rbp ; ret
0x0000000000431bed : push rbp ; cwde ; call 0x4023f8
0x000000000044ac4b : push rbp ; enter -0x74b8, 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000044b3db : push rbp ; enter -0x74b8, 0x55 ; call 0x71073535
0x0000000000450703 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000449548 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000415386 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004237e6 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000435d63 : push rbp ; fsubr st(1) ; ret 0
0x0000000000443b48 : push rbp ; in al, -0x7f ; ret 0xff9f
0x0000000000443d2e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000443dd4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000443e02 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000443ed0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000444066 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000041eabd : push rbp ; je 0x41eada ; ret 0x8589
0x000000000041ee9c : push rbp ; je 0x41eeb9 ; ret 0xa1b9
0x0000000000449ac8 : push rbp ; mov ah, -0x7f ; ret 1
0x0000000000449ae7 : push rbp ; mov ah, -0x7f ; ret 2
0x0000000000449b06 : push rbp ; mov ah, -0x7f ; ret 3
0x0000000000449b25 : push rbp ; mov ah, -0x7f ; ret 4
0x0000000000449b44 : push rbp ; mov ah, -0x7f ; ret 5
0x0000000000449b63 : push rbp ; mov ah, -0x7f ; ret 6
0x0000000000449b82 : push rbp ; mov ah, -0x7f ; ret 7
0x0000000000449e63 : push rbp ; mov al, -0x7f ; ret 1
0x0000000000449e82 : push rbp ; mov al, -0x7f ; ret 2
0x0000000000449ea1 : push rbp ; mov al, -0x7f ; ret 3
0x0000000000449ec0 : push rbp ; mov al, -0x7f ; ret 4
0x0000000000449edf : push rbp ; mov al, -0x7f ; ret 5
0x0000000000449efe : push rbp ; mov al, -0x7f ; ret 6
0x0000000000449f1d : push rbp ; mov al, -0x7f ; ret 7
0x0000000000402bf4 : push rbp ; mov edi, 0x660e10 ; mov rbp, rsp ; call rax
0x000000000042c793 : push rbp ; pop rsi ; ret
0x000000000044aced : push rbp ; ror byte ptr [rax - 0x75], 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000043057b : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x1c
0x00000000004374ee : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000453cab : push rbx ; jrcxz 0x453d13 ; ret 0x8589
0x0000000000455163 : push rbx ; jrcxz 0x4551cb ; ret 0x8fb9
0x000000000045538e : push rbx ; jrcxz 0x4553f6 ; ret 0x8fb9
0x0000000000422fb0 : push rcx ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000422fc3 : push rcx ; xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041274e : push rdi ; jmp 0x412d36
0x00000000004030bf : push rdi ; ret
0x000000000040f420 : push rdx ; adc byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000433e1a : push rdx ; jae 0x433e26 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000453c57 : push rdx ; jrcxz 0x453cbf ; ret 0x8589
0x000000000044ac4f : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000044adbf : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 8
0x000000000041dc24 : push rsi ; or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rsi
0x0000000000403090 : push rsi ; ret
0x000000000045dc79 : push rsi ; std ; call rsp
0x0000000000412e55 : push rsp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045dfb8 : push rsp ; fdivr st(6) ; call rsp
0x000000000041ea72 : push rsp ; je 0x41ea8f ; ret 0x8589
0x000000000045d9f8 : push rsp ; mov ebx, edi ; call rsp
0x000000000042c73f : push rsp ; pop rsi ; ret
0x000000000041c6f8 : push rsp ; ret
0x0000000000422909 : pushfq ; out dx, al ; sbb bh, byte ptr [rbx + rdi*4 - 0x17] ; ret 6
0x00000000004216b1 : pushfq ; ret 0x8041
0x00000000004247c1 : pushfq ; ret 0x8445
0x0000000000424fa6 : pushfq ; ret 0xd284
0x00000000004572ce : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004572fe : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000400648 : ret
0x000000000040dc4b : ret 0
0x000000000042087b : ret 0x10
0x000000000042bdba : ret 0x10e8
0x000000000040aee1 : ret 0x12fb
0x000000000043b985 : ret 0x15e8
0x000000000044abe9 : ret 0x18
0x00000000004538c7 : ret 0x1a
0x000000000042b140 : ret 0x1ae8
0x000000000042bd96 : ret 0x1c
0x000000000042ff13 : ret 0x1ce9
0x000000000044954c : ret 0x20
0x0000000000457f1b : ret 0x2030
0x000000000043d41a : ret 0x20b9
0x000000000041e910 : ret 0x21e9
0x0000000000402932 : ret 0x25e9
0x0000000000402732 : ret 0x25ea
0x0000000000402532 : ret 0x25eb
0x0000000000409ffc : ret 0x27e9
0x000000000044a8d1 : ret 0x2802
0x0000000000433e0a : ret 0x280f
0x000000000042b575 : ret 0x29b9
0x0000000000443527 : ret 0x2a
0x00000000004158ca : ret 0x2b48
0x0000000000446846 : ret 0x2c1
0x0000000000451543 : ret 0x2c22
0x000000000042c4f3 : ret 0x2f8
0x000000000043a49e : ret 0x30
0x0000000000407363 : ret 0x31
0x000000000040502f : ret 0x37
0x000000000041adf8 : ret 0x38
0x0000000000412850 : ret 0x3ae8
0x000000000043badd : ret 0x3bb9
0x0000000000453787 : ret 0x3bef
0x000000000042a352 : ret 0x3d50
0x0000000000430802 : ret 0x40
0x00000000004285ba : ret 0x40e8
0x000000000042a8d3 : ret 0x4240
0x0000000000449068 : ret 0x4314
0x000000000044048a : ret 0x43fa
0x00000000004095b6 : ret 0x45
0x0000000000414f33 : ret 0x4589
0x00000000004083c1 : ret 0x458a
0x0000000000430e9f : ret 0x458b
0x0000000000447429 : ret 0x45d2
0x000000000044867e : ret 0x484e
0x000000000041397e : ret 0x486b
0x0000000000420435 : ret 0x48e2
0x0000000000458d81 : ret 0x48f2
0x000000000040abfc : ret 0x48fc
0x00000000004119ec : ret 0x4ee8
0x0000000000434c34 : ret 0x50e9
0x00000000004056eb : ret 0x5c66
0x0000000000406c40 : ret 0x5d6c
0x0000000000456ad3 : ret 0x5e5
0x000000000044b7bf : ret 0x5fb0
0x000000000044c745 : ret 0x61ee
0x0000000000406497 : ret 0x65a2
0x000000000041e8c7 : ret 0x6ae9
0x0000000000430ec9 : ret 0x6b1d
0x000000000041230d : ret 0x6e3a
0x000000000044a5af : ret 0x70
0x0000000000415ef9 : ret 0x71e8
0x000000000042b6fa : ret 0x7406
0x000000000041538a : ret 0x80
0x00000000004216b2 : ret 0x8041
0x000000000040f8da : ret 0x80e8
0x000000000044b0bb : ret 0x8148
0x0000000000411c89 : ret 0x8341
0x0000000000437e64 : ret 0x8348
0x0000000000407840 : ret 0x8445
0x000000000040451a : ret 0x8589
0x0000000000405ac1 : ret 0x8914
0x0000000000440320 : ret 0x891a
0x000000000041a5af : ret 0x8920
0x0000000000405ee9 : ret 0x8925
0x00000000004578cc : ret 0x8934
0x000000000041f2b3 : ret 0x8948
0x0000000000447c35 : ret 0x894e
0x000000000041ca7a : ret 0x8963
0x0000000000413289 : ret 0x896b
0x000000000041e993 : ret 0x8974
0x000000000043715c : ret 0x897f
0x000000000040d674 : ret 0x8982
0x00000000004174b1 : ret 0x899e
0x0000000000458baf : ret 0x89a2
0x0000000000458ed1 : ret 0x89b6
0x000000000040e3e7 : ret 0x89bd
0x000000000041623d : ret 0x89bf
0x0000000000427889 : ret 0x89c7
0x0000000000453d39 : ret 0x89cc
0x000000000041f063 : ret 0x89db
0x000000000041fa51 : ret 0x89e2
0x000000000044c152 : ret 0x89e4
0x00000000004533e0 : ret 0x89ec
0x00000000004051c9 : ret 0x89f1
0x000000000040a708 : ret 0x89fc
0x00000000004578a8 : ret 0x8b34
0x000000000040f03e : ret 0x8b48
0x0000000000450ca3 : ret 0x8b4c
0x0000000000416a8e : ret 0x8bbf
0x0000000000455326 : ret 0x8bcc
0x0000000000453512 : ret 0x8bec
0x0000000000455166 : ret 0x8fb9
0x000000000042641a : ret 0x90e8
0x000000000040837e : ret 0x958a
0x00000000004511fc : ret 0x979f
0x000000000044a242 : ret 0x98e8
0x0000000000420641 : ret 0x9c
0x000000000041ee9f : ret 0xa1b9
0x00000000004347ba : ret 0xa3b9
0x00000000004560ab : ret 0xa4be
0x0000000000437499 : ret 0xa6e9
0x00000000004441f5 : ret 0xa9b9
0x000000000044bdcc : ret 0xaa45
0x000000000043c0a3 : ret 0xaccb
0x000000000043fc72 : ret 0xade6
0x0000000000408b2b : ret 0xb0
0x0000000000443960 : ret 0xb91a
0x000000000041a5c7 : ret 0xb920
0x000000000040989c : ret 0xb925
0x000000000040d474 : ret 0xb948
0x000000000040d6bb : ret 0xb982
0x00000000004180c6 : ret 0xb99e
0x0000000000458cc2 : ret 0xb9a2
0x000000000045918b : ret 0xb9b6
0x000000000042849e : ret 0xb9c7
0x000000000043d44b : ret 0xb9e9
0x0000000000408a47 : ret 0xb9f1
0x000000000040976e : ret 0xba14
0x000000000040f7a4 : ret 0xbabd
0x00000000004150f8 : ret 0xbfb9
0x00000000004288cf : ret 0xc
0x0000000000402b95 : ret 0xc148
0x0000000000416a67 : ret 0xc7bf
0x000000000044a652 : ret 0xc8
0x000000000044b9fd : ret 0xc8db
0x0000000000410481 : ret 0xc9e8
0x00000000004047b8 : ret 0xcae0
0x000000000040559b : ret 0xcc06
0x0000000000430023 : ret 0xce9
0x00000000004297cd : ret 0xd
0x00000000004073d2 : ret 0xd284
0x0000000000445a13 : ret 0xd4e9
0x00000000004260ae : ret 0xdc0a
0x00000000004254de : ret 0xdce8
0x0000000000437462 : ret 0xdde9
0x00000000004083fe : ret 0xe280
0x00000000004253d4 : ret 0xe6e8
0x0000000000448773 : ret 0xe94e
0x000000000041e519 : ret 0xe963
0x000000000041edac : ret 0xe974
0x00000000004374f7 : ret 0xe97f
0x000000000044d78e : ret 0xe9e4
0x0000000000413fed : ret 0xeca9
0x000000000044602c : ret 0xee8
0x00000000004161f3 : ret 0xef27
0x0000000000434b95 : ret 0xefe9
0x0000000000410d7e : ret 0xf17d
0x0000000000411c82 : ret 0xf280
0x000000000041e524 : ret 0xf2b9
0x0000000000405238 : ret 0xf375
0x000000000040ded1 : ret 0xf40
0x0000000000413a2f : ret 0xf41
0x0000000000433e21 : ret 0xf66
0x000000000043b22b : ret 0xf9b5
0x00000000004451a0 : ret 0xfae8
0x00000000004344fa : ret 0xfcde
0x0000000000403fbb : ret 0xfd23
0x000000000041f110 : ret 0xfdb
0x000000000042047a : ret 0xfe22
0x0000000000435a46 : ret 0xff3
0x0000000000407f1c : ret 0xff9a
0x000000000043b850 : ret 0xff9f
0x00000000004454ee : ret 0xffa5
0x000000000043b87b : ret 0xffbf
0x000000000044479b : ret 0xffc4
0x0000000000443dd7 : ret 0xffc5
0x0000000000443e05 : ret 0xffd5
0x0000000000443ed3 : ret 0xffd8
0x0000000000444841 : ret 0xffd9
0x000000000043b8cb : ret 0xffdb
0x000000000041031c : ret 0xffe0
0x000000000044313e : ret 0xfffa
0x000000000042b5ca : ret 0xfffb
0x000000000042631d : ret 0xfffd
0x0000000000429a19 : ret 0xfffe
0x0000000000408c91 : ret 0xffff
0x0000000000400d80 : ret 1
0x00000000004005e8 : ret 2
0x000000000040a864 : ret 3
0x000000000040cca9 : ret 4
0x00000000004222b1 : ret 5
0x0000000000421f78 : ret 6
0x0000000000437901 : ret 7
0x000000000040e755 : ret 8
0x0000000000439d31 : retf -0x74b8 ; jne 0x439d0b ; call rax
0x000000000045f0b9 : retf ; cld ; call qword ptr [rsi]
0x00000000004491eb : rol bh, 1 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000041702f : rol byte ptr [r9 + 0xf], 1 ; xchg eax, ebp ; ret 0x8445
0x000000000043333a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000428a37 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004354e2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417075 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d2f1 : rol byte ptr [rbp], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; ret
0x0000000000435177 : rol byte ptr [rbp], cl ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040f9dc : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ff74 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 2
0x0000000000417030 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x8445
0x000000000045a585 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042558c : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000410343 : rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x00000000004216ae : rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8041
0x0000000000428955 : rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8445
0x0000000000431c07 : rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x00000000004491ea : rol r15b, 1 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000043dbf6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000402b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402bab ; pop rbp ; ret
0x000000000044acee : ror byte ptr [rax - 0x75], 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000044a64b : ror byte ptr [rax - 0x75], 0x55 ; call 0xffffffffc90727a3
0x0000000000449899 : ror byte ptr [rax - 0x75], 1 ; jne 0x449877 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x00000000004153b5 : ror byte ptr [rax - 0x77], -0x38 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043b982 : ror byte ptr [rax - 0x77], 1 ; ret 0x15e8
0x00000000004161b7 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000043763b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041079b : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043057c : ror byte ptr [rax - 0x7f], 1 ; ret 0x1c
0x000000000043dbf7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000450700 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000449b00 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x449a9a ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000449e9b : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x449e35 ; push rbp ; mov al, -0x7f ; ret 3
0x000000000040dc42 : ror dword ptr [rcx + 0x45c6e445], -0x1d ; add ecx, ebp ; ret 0
0x0000000000410d0f : ror dword ptr [rsi], 1 ; ret
0x0000000000424ef7 : sahf ; ret
0x0000000000410346 : sahf ; ret 0x8445
0x0000000000433314 : sahf ; ret 0xd284
0x000000000045b04a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000458bef : salc ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000458cc0 : salc ; lodsd eax, dword ptr [rsi] ; ret 0xb9a2
0x000000000042a3b6 : salc ; ret
0x0000000000402b9e : sar eax, 1 ; jne 0x402ba9 ; pop rbp ; ret
0x000000000045dbb9 : sar esp, 1 ; call rsp
0x0000000000402b9d : sar rax, 1 ; jne 0x402baa ; pop rbp ; ret
0x000000000045e390 : sbb al, 0 ; add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; ret 0xfffa
0x000000000045dcb5 : sbb al, byte ptr [rax] ; add ah, dh ; std ; call rsp
0x000000000045fcf5 : sbb al, byte ptr [rax] ; add byte ptr [rax], ch ; jne 0x45fcff ; jmp qword ptr [rdx]
0x000000000045fcf4 : sbb al, byte ptr fs:[rax] ; add byte ptr [rax], ch ; jne 0x45fd00 ; jmp qword ptr [rdx]
0x000000000042290b : sbb bh, byte ptr [rbx + rdi*4 - 0x17] ; ret 6
0x000000000044b46a : sbb byte ptr [rax - 0x75], cl ; push rbp ; call 0xffffffffc90735c2
0x000000000044ac50 : sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000044adc0 : sbb byte ptr [rax - 0x7f], cl ; ret 8
0x000000000040c2cf : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000446ca9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004502e3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045fbd5 : sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; je 0x45fbdf ; jmp qword ptr [rax]
0x000000000045dc75 : sbb dword ptr [rax], eax ; add byte ptr [rsi + rdx*2], al ; std ; call rsp
0x000000000045fbd4 : sbb dword ptr [rax], r8d ; add byte ptr [rax], bl ; je 0x45fbe0 ; jmp qword ptr [rax]
0x00000000004441ee : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000429a10 : sbb eax, 0x8b000000 ; jge 0x429a18 ; call 0x415c39
0x000000000045dd75 : sbb eax, 0xbbd40000 ; std ; call rsp
0x000000000045dcf5 : sbb eax, dword ptr [rax] ; add ah, dl ; js 0x45dcfe ; call rsp
0x000000000045f1d9 : sbb edi, ebp ; call rdx
0x000000000041a653 : sbb edx, ecx ; ret
0x000000000042b821 : sbb esp, dword ptr [rsi] ; pop rbp ; ret
0x0000000000435774 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435776 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000433e3f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000425d9d : shl dword ptr [rsi + 0xf], 1 ; ret 0xf40
0x00000000004572ff : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000457298 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004572cf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000457258 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000045d9f5 : sldt word ptr [rax] ; push rsp ; mov ebx, edi ; call rsp
0x0000000000409ffb : stc ; ret 0x27e9
0x0000000000409faa : stc ; ret 0x8148
0x0000000000404551 : stc ; ret 0x8589
0x0000000000417f90 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000045f6da : std ; call qword ptr [rbx]
0x000000000045f13a : std ; call qword ptr [rdi]
0x000000000045f2ba : std ; call qword ptr [rdx]
0x000000000045ddaa : std ; call qword ptr [rsi + rbx - 0x3c5c0000]
0x000000000045f17a : std ; call qword ptr [rsi]
0x000000000045f3ba : std ; call rax
0x000000000045f1da : std ; call rdx
0x000000000045dc3a : std ; call rsp
0x000000000045f6fa : std ; jmp qword ptr [rdi]
0x000000000045f39a : std ; jmp rsi
0x000000000045dc32 : std ; push qword ptr [rax + rbx + 0x2fe40000] ; std ; call rsp
0x000000000045dd72 : std ; push qword ptr [rbp + rbx - 0x442c0000] ; std ; call rsp
0x000000000045dcf2 : std ; push qword ptr [rbx + rbx + 0x78d40000] ; std ; call rsp
0x000000000045dc72 : std ; push qword ptr [rcx + rbx + 0x56040000] ; std ; call rsp
0x000000000045ddf2 : std ; push qword ptr [rdi + rbx - 0xe7c0000] ; std ; call rsp
0x000000000045dcb2 : std ; push qword ptr [rdx + rbx + 0x64f40000] ; std ; call rsp
0x000000000045ddb2 : std ; push qword ptr [rsi + rbx - 0x3aac0000] ; std ; call rsp
0x000000000045dd32 : std ; push qword ptr [rsp + rbx - 0x6e7c0000] ; std ; call rsp
0x000000000045e83a : sti ; call qword ptr [rbx]
0x000000000045d93a : sti ; call rsp
0x000000000044adf1 : sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000045e75a : sti ; jmp qword ptr [rax]
0x000000000045e71a : sti ; jmp qword ptr [rcx]
0x000000000045da32 : sti ; push qword ptr [rax + rdx - 0x333c0000] ; sti ; call rsp
0x000000000045d972 : sti ; push qword ptr [rbp + rcx + 0x46740000] ; sti ; call rsp
0x000000000045d9f2 : sti ; push qword ptr [rdi + rcx - 0x76ac0000] ; sti ; call rsp
0x000000000045d9b2 : sti ; push qword ptr [rsi + rcx + 0x79a40000] ; sti ; call rsp
0x00000000004262bb : stosb byte ptr [rdi], al ; jmp 0x4263eb
0x0000000000439c5b : stosb byte ptr [rdi], al ; ret
0x0000000000427817 : sub al, -0x27 ; ret
0x000000000045e039 : sub al, -1 ; call rsp
0x00000000004602f9 : sub al, -1 ; jmp qword ptr [rbx]
0x0000000000441237 : sub al, 0x38 ; ret 0x8589
0x00000000004441f3 : sub al, 0x38 ; ret 0xa9b9
0x000000000042a74e : sub al, byte ptr [rdi - 0x29f04612] ; ret
0x0000000000422fb1 : sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000045fcf8 : sub byte ptr [rbp - 2], dh ; jmp qword ptr [rdx]
0x000000000045f398 : sub byte ptr [rsi - 3], cl ; jmp rsi
0x0000000000416979 : sub ch, cl ; ret
0x000000000045b050 : sub cl, al ; pop rbp ; ret
0x0000000000448678 : sub eax, 0xbeb920d6 ; ret 0x484e
0x000000000044adef : sub eax, 0xc7fffb7b ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000417f91 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000045b121 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000045b120 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044fe1b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000416976 : test al, -0x3b ; movsb byte ptr [rdi], byte ptr [rsi] ; sub ch, cl ; ret
0x000000000042ff10 : test al, -0x5d ; ret 0x1ce9
0x000000000042fdc2 : test al, -0x5d ; ret 0x6ae9
0x000000000042fc05 : test al, -0x5d ; ret 0x8589
0x0000000000430020 : test al, -0x5d ; ret 0xce9
0x000000000045e1b9 : test al, -1 ; call rsp
0x000000000045e578 : test al, -9 ; cli ; jmp qword ptr [rcx]
0x000000000045a3c8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e3e5 : test al, 0x29 ; ret 0x89bd
0x0000000000437064 : test al, 0x2d ; call 0xffffffff8a05d60a
0x0000000000437063 : test al, 0x2d ; call 0xffffffff8a05d60b
0x00000000004370a9 : test al, 0x2d ; jmp 0xffffffff8a05d64f
0x00000000004370a8 : test al, 0x2d ; jmp 0xffffffff8a05d650
0x0000000000458bed : test al, 0x2d ; salc ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000043734c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000437158 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000446e8d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000043badb : test al, 0x58 ; ret 0x3bb9
0x000000000043b038 : test al, 0x58 ; ret 0x8589
0x000000000043496b : test al, 0x70 ; ret 0x4589
0x0000000000434c32 : test al, 0x70 ; ret 0x50e9
0x0000000000434b93 : test al, 0x70 ; ret 0xefe9
0x000000000044fcf8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042ef62 : test al, bh ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x000000000042e740 : test al, bh ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdx
0x000000000043b1b9 : test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000045e714 : test byte ptr [rax + rax], al ; add byte ptr [rax], cl ; sti ; jmp qword ptr [rcx]
0x000000000045b0ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041eb90 : test byte ptr [rax], bh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004327c4 : test byte ptr [rbx - 0x16fffffd], dh ; ret 1
0x000000000040d020 : test byte ptr [rbx - 0x16fffffe], ah ; ret 1
0x000000000044e33e : test byte ptr [rbx - 0x16fffffe], dh ; ret 1
0x00000000004225b7 : test byte ptr [rcx - 0x16fffff7], bl ; ret 1
0x00000000004196ea : test byte ptr [rdx - 0x16fffffd], dh ; ret 1
0x000000000044eb45 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000045f014 : test byte ptr [rip - 0x38080000], cl ; cld ; call qword ptr [rsi]
0x000000000044dc39 : test byte ptr [rsi + rbp*8 - 0x47], bh ; wait ; ret 0x5fb0
0x0000000000452ae4 : test ch, cl ; ret
0x0000000000431ef8 : test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000045ddf8 : test dh, cl ; std ; call rsp
0x000000000040e74e : test dword ptr [rbp + rdi*8 - 0x7bf00001], eax ; ret 8
0x000000000041d977 : test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x000000000041dd0a : test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rdx]
0x000000000041e512 : test dword ptr [rdi + rbp*8 - 1], ecx ; inc dword ptr [rbx] ; insd dword ptr [rdi], dx ; ret 0xe963
0x000000000041d528 : test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rcx
0x000000000041e3a5 : test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rdi
0x000000000041dc29 : test dword ptr [rdi + rbp*8 - 1], ecx ; jmp rsi
0x0000000000417fe6 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdi
0x0000000000423b1b : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x0000000000415846 : test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rbx]
0x000000000044fe00 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044fb68 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004491ed : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000042ef64 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x000000000042bed6 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042f66b : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x000000000042e742 : test dword ptr [rdi + rdi*8 - 1], edx ; call rdx
0x000000000042e49e : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000042e964 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042eaa2 : test dword ptr [rdi + rdi*8 - 1], edx ; ljmp ptr [rbp + 0x22] ; jmp 0x42ea76
0x000000000044adf4 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000043cbbb : test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x0000000000403f50 : test dword ptr [rdx + rdi*8 - 0x7bf00001], ecx ; ret
0x0000000000410d5c : test dword ptr [rsi + rdi*8 - 0x71d20001], esp ; ror dword ptr [rsi], 1 ; ret
0x0000000000410d08 : test dword ptr [rsi + rdi*8 - 0x72d20001], esp ; ror dword ptr [rsi], 1 ; ret
0x000000000044bb92 : test dword ptr [rsi + rdi*8 - 0x7bf00001], ebp ; call qword ptr [rdi]
0x00000000004222aa : test dword ptr [rsi + rdi*8 - 0x7bf00001], esi ; ret 5
0x00000000004083b9 : test dword ptr [rsp + rdi*8 + 0x3eebffff], ecx ; ret 0x458a
0x0000000000409ff4 : test dword ptr [rsp + rdi*8 + 0x4df0ffff], ecx ; stc ; ret 0x27e9
0x000000000043c7c6 : test eax, 0x57b94f6a ; ret
0x0000000000452ae3 : test r13b, r9b ; ret
0x000000000042ef61 : test r8b, r15b ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x000000000042e73f : test r8b, r15b ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdx
0x000000000044ce34 : wait ; ret 0x5fb0
0x000000000041eeab : wait ; ret 0xd284
0x000000000041ee71 : wait ; ret 0xf40
0x0000000000413978 : xbegin 0xffffffffe51bf343 ; ret 0x486b
0x000000000041eed6 : xchg bl, bl ; insd dword ptr [rdi], dx ; mov al, -0x21 ; call 0xffffffff850489f7
0x0000000000416038 : xchg eax, ebp ; ret
0x0000000000408ca3 : xchg eax, ebp ; ret 0x8445
0x0000000000407550 : xchg eax, ebp ; ret 0xd284
0x00000000004083fd : xchg eax, ebp ; ret 0xe280
0x0000000000411cd0 : xchg eax, ebp ; ret 0xf280
0x0000000000455ddb : xchg eax, ebx ; ret
0x00000000004305e6 : xchg eax, ebx ; ret 0xd284
0x000000000044121b : xchg eax, ecx ; ret
0x000000000045dd39 : xchg eax, ecx ; std ; call rsp
0x000000000043cc61 : xchg eax, edi ; push rsp ; ret
0x000000000040a119 : xchg eax, edi ; ret 0xd284
0x0000000000411615 : xchg eax, edx ; ret
0x00000000004073d1 : xchg eax, edx ; ret 0xd284
0x0000000000423f31 : xchg eax, edx ; ret 0xe280
0x0000000000446ba2 : xchg eax, esi ; ret
0x0000000000411b7b : xchg eax, esi ; ret 0xd284
0x000000000044d288 : xchg eax, esi ; ret 0xe280
0x0000000000411c81 : xchg eax, esi ; ret 0xf280
0x000000000045d2f0 : xchg eax, esi ; rol byte ptr [rbp], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; ret
0x000000000045de38 : xchg eax, esp ; add edi, esi ; call rsp
0x000000000041e774 : xchg eax, esp ; add rsp, 0x1630 ; pop rbp ; ret
0x000000000043ba37 : xchg eax, esp ; jmp 0x43be79
0x000000000043e203 : xchg eax, esp ; ret
0x000000000040783f : xchg eax, esp ; ret 0x8445
0x0000000000407661 : xchg eax, esp ; ret 0xd284
0x0000000000417f96 : xchg eax, esp ; ret 0xe280
0x00000000004161f1 : xchg eax, esp ; ret 0xef27
0x000000000042558b : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000435775 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416975 : xchg eax, esp ; test al, -0x3b ; movsb byte ptr [rdi], byte ptr [rsi] ; sub ch, cl ; ret
0x000000000043ba36 : xchg eax, r12d ; jmp 0x43be7a
0x00000000004161f0 : xchg eax, r12d ; ret 0xef27
0x0000000000416974 : xchg eax, r12d ; test al, -0x3b ; movsb byte ptr [rdi], byte ptr [rsi] ; sub ch, cl ; ret
0x000000000045725c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000040f8d2 : xor al, 0x25 ; add bh, al ; add byte ptr [r8 - 0x77], r9b ; ret 0x80e8
0x000000000043734e : xor bl, byte ptr [rsi] ; ret 0x897f
0x00000000004374f5 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000422fc4 : xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041316f : xor byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041702b : xor byte ptr [rbx + 0x48], 0x3b ; rol byte ptr [r9 + 0xf], 1 ; xchg eax, ebp ; ret 0x8445
0x000000000040ae3e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044877d : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e778 : xor byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043715a : xor dword ptr [rsi], ebx ; ret 0x897f
0x00000000004471a7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043ba39 : xor eax, 0xb8000004 ; ret
0x000000000045e079 : xor edi, edi ; call rsp
0x000000000043dd6d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045da79 : xor edi, esp ; call rsp
