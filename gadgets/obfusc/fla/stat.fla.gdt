0x0000000000430c57 : adc al, -0x7f ; ret 0x76c
0x0000000000459106 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004590f7 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x00000000004590f6 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000040a77a : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c0ee : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d04b : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d6a0 : adc dl, -3 ; call rdx
0x000000000045c600 : adc dl, ch ; cli ; jmp qword ptr [rbx]
0x000000000045d49d : adc dword ptr [rax], eax ; add byte ptr [rax], ah ; xchg eax, ecx ; std ; jmp rax
0x000000000043364b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000458bcd : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000043077d : adc eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rsi]
0x00000000004106ec : adc eax, 0xe9000015 ; ret
0x000000000045d61d : adc eax, dword ptr [rax] ; add al, dl ; ret 0xfffd
0x00000000004200b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045d61c : adc eax, dword ptr fs:[rax] ; add al, dl ; ret 0xfffd
0x0000000000413928 : adc esi, eax ; ret
0x000000000045d49b : add ah, ah ; adc dword ptr [rax], eax ; add byte ptr [rax], ah ; xchg eax, ecx ; std ; jmp rax
0x000000000045c49b : add ah, ah ; add dword ptr [rax], eax ; add al, dl ; ret 0xfffa
0x000000000045cf9b : add ah, ah ; or al, 0 ; add al, dl ; cld ; call qword ptr [rdx]
0x000000000045cb9b : add ah, ah ; or byte ptr [rax], al ; add byte ptr [rax + 0x3f], al ; cld ; jmp qword ptr [rax]
0x000000000045ce9b : add ah, ah ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x46], dl ; cld ; jmp qword ptr [rdi]
0x000000000045c77b : add ah, al ; add al, 0 ; add al, dh ; xchg bl, bh ; jmp rbx
0x000000000045cf7b : add ah, al ; or al, 0 ; add al, dl ; cld ; call qword ptr [rdx]
0x000000000040b5a1 : add al, -0x47 ; call rdi
0x000000000045c77d : add al, 0 ; add al, dh ; xchg bl, bh ; jmp rbx
0x00000000004130da : add al, 0x25 ; ret
0x00000000004031ca : add al, 0x25 ; ret 0x45ac
0x000000000045ccbc : add al, 0xa ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x000000000045cfbc : add al, 0xd ; add byte ptr [rax], al ; rol byte ptr [rsi - 4], 1 ; call qword ptr [rdx]
0x0000000000459b61 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000432c73 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x45b9
0x000000000045c4dd : add al, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x000000000045c4bd : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000432f43 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000434988 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000405843 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x0000000000432697 : add al, ch ; ret
0x000000000043a2d8 : add al, ch ; ret 0xfc76
0x0000000000438dd8 : add al, ch ; ret 0xfc8b
0x0000000000415f28 : add al, ch ; ret 0xfebb
0x000000000045c77f : add al, dh ; xchg bl, bh ; jmp rbx
0x000000000045cf7f : add al, dl ; cld ; call qword ptr [rdx]
0x000000000045c49f : add al, dl ; ret 0xfffa
0x000000000045d61f : add al, dl ; ret 0xfffd
0x000000000045c5e0 : add bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000043333e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004330a6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042e7ac : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x000000000042dc86 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042d7dc : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042da17 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000043163c : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rcx
0x000000000042badd : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000042db2d : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000431362 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042db72 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x0000000000431838 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000042b480 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000042b862 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000042e2d3 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042f612 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdx
0x000000000042e544 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x0000000000457a29 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000459bbf : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004589d4 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000459a85 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000045903d : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000457e1c : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000045a1bf : add bl, dh ; ret
0x000000000042cf43 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045ca7f : add byte ptr [rax + 0x3d], dh ; cld ; jmp qword ptr [rdx]
0x000000000045cb9f : add byte ptr [rax + 0x3f], al ; cld ; jmp qword ptr [rax]
0x000000000045ccbf : add byte ptr [rax + 0x40], dl ; cld ; jmp qword ptr [rdx]
0x000000000045ce9f : add byte ptr [rax + 0x46], dl ; cld ; jmp qword ptr [rdi]
0x000000000045d0df : add byte ptr [rax + 0x4d], ah ; std ; call rsi
0x000000000045d11f : add byte ptr [rax + 0x4e], dl ; std ; jmp rdx
0x000000000045d1ff : add byte ptr [rax + 0x65], ah ; std ; call rdx
0x0000000000407b27 : add byte ptr [rax + 0xf410000], ah ; xchg eax, esp ; ret 0x8445
0x000000000044cbe0 : add byte ptr [rax - 0x3f], cl ; jmp 0xffffffffcece13f1
0x00000000004130d7 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000432c75 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x45b9
0x000000000045c7bb : add byte ptr [rax - 0x73d00000], al ; sti ; call qword ptr [rsi]
0x00000000004216bd : add byte ptr [rax - 0x77], cl ; jge 0x4216c0 ; pop rbp ; ret
0x000000000040503b : add byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x000000000044932b : add byte ptr [rax - 0x77], cl ; ret 0x5ce8
0x00000000004493cc : add byte ptr [rax - 0x77], cl ; ret 0xbbe8
0x000000000045c63f : add byte ptr [rax - 0xf], ah ; cli ; call qword ptr [rax]
0x000000000045ce3f : add byte ptr [rax], ah ; cld ; jmp qword ptr [rdi]
0x000000000045c4df : add byte ptr [rax], ah ; ret
0x000000000045d49f : add byte ptr [rax], ah ; xchg eax, ecx ; std ; jmp rax
0x000000000045d69e : add byte ptr [rax], al ; adc dl, -3 ; call rdx
0x000000000045c5fe : add byte ptr [rax], al ; adc dl, ch ; cli ; jmp qword ptr [rbx]
0x000000000045d61a : add byte ptr [rax], al ; adc eax, dword ptr fs:[rax] ; add al, dl ; ret 0xfffd
0x000000000045c499 : add byte ptr [rax], al ; add ah, ah ; add dword ptr [rax], eax ; add al, dl ; ret 0xfffa
0x000000000045ccba : add byte ptr [rax], al ; add al, 0xa ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x000000000045cfba : add byte ptr [rax], al ; add al, 0xd ; add byte ptr [rax], al ; rol byte ptr [rsi - 4], 1 ; call qword ptr [rdx]
0x0000000000438dd6 : add byte ptr [rax], al ; add al, ch ; ret 0xfc8b
0x000000000045c5de : add byte ptr [rax], al ; add bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000043333c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004330a4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042dc84 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042ec58 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x0000000000431360 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042b47e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000457a27 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000459af1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000045903b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000459085 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000045a1bd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004216bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x4216c2 ; pop rbp ; ret
0x0000000000405039 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x000000000045a1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004009e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004216ba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004009e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e654 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2dd845], cl ; ret 0x4577
0x000000000044da03 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000041fdfe : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e9d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x732dd845], cl ; ret 0xc5d3
0x000000000045d619 : add byte ptr [rax], al ; add byte ptr [rbx + rdx], ah ; add al, dl ; ret 0xfffd
0x000000000040fe28 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1bd227bb], cl ; ret
0x000000000043b3d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000043b355 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000415b63 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d23bbb], cl ; ret
0x0000000000413d60 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041ecb1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000043b495 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040531f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000438a15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000417d0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040327c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004354a6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004381bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043323a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417cef : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041e76b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004363f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000416e2e : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043ac9d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041629f : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040a0b6 : add byte ptr [rax], al ; add cl, ch ; ret 6
0x00000000004087eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fb20 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004217a6 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043364d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420077 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416c69 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040192b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045c5da : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; add bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000045ce3e : add byte ptr [rax], al ; and byte ptr [rsi - 4], al ; jmp qword ptr [rdi]
0x000000000043a11d : add byte ptr [rax], al ; call 0x4019a8
0x000000000045d69a : add byte ptr [rax], al ; in al, 0x13 ; add byte ptr [rax], al ; adc dl, -3 ; call rdx
0x000000000045ce9a : add byte ptr [rax], al ; in al, 0xb ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdi]
0x000000000045cf9a : add byte ptr [rax], al ; in al, 0xc ; add byte ptr [rax], al ; rol byte ptr [rsi - 4], 1 ; call qword ptr [rdx]
0x0000000000401b49 : add byte ptr [rax], al ; jmp 0x401949
0x0000000000413c82 : add byte ptr [rax], al ; jmp 0x41426f
0x000000000041629b : add byte ptr [rax], al ; jmp 0x4162aa
0x0000000000416e2a : add byte ptr [rax], al ; jmp 0x416e39
0x0000000000431dc1 : add byte ptr [rax], al ; jmp 0x431e39
0x000000000043ac99 : add byte ptr [rax], al ; jmp 0x43aca8
0x000000000043b909 : add byte ptr [rax], al ; jmp 0x43b918
0x000000000045ca7e : add byte ptr [rax], al ; jo 0x45cac4 ; cld ; jmp qword ptr [rdx]
0x000000000043bb17 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044dd36 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042134a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042147d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004215d9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004213f1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000431f5f : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x00000000004216bc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004156f9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004175d9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043bdad : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000045c5df : add byte ptr [rax], al ; out -6, eax ; jmp qword ptr [rbx]
0x000000000040340a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041fdff : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fad8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045ce9e : add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdi]
0x000000000045ccbe : add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x000000000045d11e : add byte ptr [rax], al ; push rax ; std ; jmp rdx
0x00000000004009e6 : add byte ptr [rax], al ; ret
0x000000000045c43e : add byte ptr [rax], al ; ret 0xfffa
0x000000000045cf7e : add byte ptr [rax], al ; rol byte ptr [rsi - 4], 1 ; call qword ptr [rdx]
0x000000000045ce3a : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax], al ; and byte ptr [rsi - 4], al ; jmp qword ptr [rdi]
0x000000000045c43a : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; ret 0xfffa
0x000000000045c7bf : add byte ptr [rax], dh ; mov ebx, dr1 ; call qword ptr [rsi]
0x00000000004389af : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x438997 ; ret
0x00000000004166da : add byte ptr [rbx + 0x352dec45], cl ; sub al, -0x4c ; ret
0x0000000000416706 : add byte ptr [rbx + 0x362dec45], cl ; sub al, -0x4c ; ret
0x000000000040e656 : add byte ptr [rbx + 0x3b2dd845], cl ; ret 0x4577
0x000000000041062c : add byte ptr [rbx + 0x3c2dd845], cl ; ret 0x4577
0x000000000044da05 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000041fe00 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041fad9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e98f : add byte ptr [rbx + 0x722dd845], cl ; ret 0xc5d3
0x000000000040e9da : add byte ptr [rbx + 0x732dd845], cl ; ret 0xc5d3
0x000000000045c63b : add byte ptr [rbx + rax - 0xea00000], al ; cli ; call qword ptr [rax]
0x000000000045c5db : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; add bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000045ce3b : add byte ptr [rbx + rcx + 0x46200000], al ; cld ; jmp qword ptr [rdi]
0x000000000045d61b : add byte ptr [rbx + rdx], ah ; add al, dl ; ret 0xfffd
0x0000000000403f17 : add byte ptr [rbx - 0x1474b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040fe2a : add byte ptr [rbx - 0x1bd227bb], cl ; ret
0x000000000040fddf : add byte ptr [rbx - 0x1cd227bb], cl ; ret
0x000000000042b989 : add byte ptr [rbx - 0x2436b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x0000000000413ccf : add byte ptr [rbx - 0x2634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000414202 : add byte ptr [rbx - 0x2bb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043b3db : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000043b357 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000415b65 : add byte ptr [rbx - 0x68d23bbb], cl ; ret
0x000000000045cfbb : add byte ptr [rcx + 0x46d00000], al ; cld ; call qword ptr [rdx]
0x0000000000413d62 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000446040 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000407b2a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000430d70 : add byte ptr [rcx - 0x7a383fbb], cl ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000043091e : add byte ptr [rcx - 0x7a3847bb], cl ; push rsp ; idiv edi ; call rdx
0x0000000000416092 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401f58 : add byte ptr [rcx], al ; ret
0x000000000045d1fb : add byte ptr [rdi + rcx], al ; add byte ptr [rax + 0x65], ah ; std ; call rdx
0x000000000042160a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043b497 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405321 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000438a17 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000417d0f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040327e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004354a8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004381bf : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043323c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417cf1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041e76d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004363f7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045ccbb : add byte ptr [rdx + rcx], al ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x000000000043724d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d11b : add byte ptr [rsi + rcx], ah ; add byte ptr [rax + 0x4e], dl ; std ; jmp rdx
0x000000000040866f : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004087ea : add byte ptr gs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c3ea : add cl, ch ; ret
0x000000000043ac9f : add cl, ch ; ret 0
0x000000000040f1f0 : add cl, ch ; ret 0x1a
0x000000000040d8f0 : add cl, ch ; ret 0x33
0x0000000000410af0 : add cl, ch ; ret 1
0x00000000004162a1 : add cl, ch ; ret 2
0x000000000040a0b8 : add cl, ch ; ret 6
0x000000000043a2d6 : add dword ptr [rax], eax ; add al, ch ; ret 0xfc76
0x000000000045c49d : add dword ptr [rax], eax ; add al, dl ; ret 0xfffa
0x0000000000420075 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000431f5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000042079a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044da7b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043abb1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401f54 : add eax, 0x25c43e ; add ebx, esi ; ret
0x0000000000431836 : add eax, 0x85c70000 ; push rsp ; idiv edi ; jmp qword ptr [rdx]
0x000000000044dd34 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x000000000045c7bd : add eax, 0x8c300000 ; sti ; call qword ptr [rsi]
0x00000000004130d5 : add eax, 0x8d480000 ; add al, 0x25 ; ret
0x0000000000457a26 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000045c63d : add eax, dword ptr [rax] ; add byte ptr [rax - 0xf], ah ; cli ; call qword ptr [rax]
0x000000000045c5dd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; out -6, eax ; jmp qword ptr [rbx]
0x0000000000435326 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f1b : add eax, edx ; sar rax, 1 ; jne 0x401f2c ; pop rbp ; ret
0x0000000000401f59 : add ebx, esi ; ret
0x000000000042dbc0 : add edi, eax ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000040228b : add esp, 0x10 ; pop rbp ; ret
0x0000000000416090 : add esp, 0x100 ; pop rbp ; ret
0x000000000040c0ec : add esp, 0x110 ; pop rbp ; ret
0x0000000000420797 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000408e2e : add esp, 0x120 ; pop rbp ; ret
0x0000000000414a6a : add esp, 0x150 ; pop rbp ; ret
0x0000000000404118 : add esp, 0x160 ; pop rbp ; ret
0x00000000004395d3 : add esp, 0x170 ; pop rbp ; ret
0x00000000004341aa : add esp, 0x190 ; pop rbp ; ret
0x00000000004334fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403406 : add esp, 0x1f0 ; pop rbp ; ret
0x00000000004086c7 : add esp, 0x20 ; pop rbp ; ret
0x000000000043724b : add esp, 0x200 ; pop rbp ; ret
0x0000000000431d4d : add esp, 0x2068 ; pop rbx ; pop rbp ; ret
0x000000000040d049 : add esp, 0x210 ; pop rbp ; ret
0x000000000040595e : add esp, 0x2c0 ; pop rbp ; ret
0x0000000000438943 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000043a44a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000414e66 : add esp, 0x30 ; pop rbp ; ret
0x000000000040a778 : add esp, 0x310 ; pop rbp ; ret
0x0000000000408ec4 : add esp, 0x40 ; pop rbp ; ret
0x0000000000402462 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402246 : add esp, 0x60 ; pop rbp ; ret
0x000000000040866d : add esp, 0x600 ; pop rbp ; ret
0x0000000000416c6c : add esp, 0x70 ; pop rbp ; ret
0x00000000004519e3 : add esp, 0x7f8 ; pop rbp ; ret
0x0000000000415146 : add esp, 0x80 ; pop rbp ; ret
0x000000000040aff6 : add esp, 0x90 ; pop rbp ; ret
0x000000000041369d : add esp, 0x9e0 ; pop rbp ; ret
0x0000000000403882 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041fad4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040ac81 : add esp, 0xd0 ; pop rbp ; ret
0x000000000045a13e : add esp, 0xd70 ; pop rbp ; ret
0x0000000000403b1a : add esp, 0xe0 ; pop rbp ; ret
0x00000000004169c6 : add esp, 8 ; pop rbp ; ret
0x000000000040192e : add esp, 8 ; ret
0x0000000000405842 : add r8b, r13b ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x0000000000415f27 : add r8b, r13b ; ret 0xfebb
0x0000000000435325 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f1a : add rax, rdx ; sar rax, 1 ; jne 0x401f2d ; pop rbp ; ret
0x000000000040228a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041608f : add rsp, 0x100 ; pop rbp ; ret
0x000000000040c0eb : add rsp, 0x110 ; pop rbp ; ret
0x0000000000420796 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000408e2d : add rsp, 0x120 ; pop rbp ; ret
0x0000000000414a69 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000404117 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004395d2 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004341a9 : add rsp, 0x190 ; pop rbp ; ret
0x00000000004334fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403405 : add rsp, 0x1f0 ; pop rbp ; ret
0x00000000004086c6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000043724a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000431d4c : add rsp, 0x2068 ; pop rbx ; pop rbp ; ret
0x000000000040d048 : add rsp, 0x210 ; pop rbp ; ret
0x000000000040595d : add rsp, 0x2c0 ; pop rbp ; ret
0x0000000000438942 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000043a449 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000414e65 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040a777 : add rsp, 0x310 ; pop rbp ; ret
0x0000000000408ec3 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402461 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402245 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040866c : add rsp, 0x600 ; pop rbp ; ret
0x0000000000416c6b : add rsp, 0x70 ; pop rbp ; ret
0x00000000004519e2 : add rsp, 0x7f8 ; pop rbp ; ret
0x0000000000415145 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040aff5 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041369c : add rsp, 0x9e0 ; pop rbp ; ret
0x0000000000403881 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041fad3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040ac80 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000045a13d : add rsp, 0xd70 ; pop rbp ; ret
0x0000000000403b19 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004169c5 : add rsp, 8 ; pop rbp ; ret
0x000000000040192d : add rsp, 8 ; ret
0x000000000042f932 : and al, 0 ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000043abb0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045c5dc : and al, 3 ; add byte ptr [rax], al ; add bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000040b59f : and bh, bh ; add al, -0x47 ; call rdi
0x0000000000431d50 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408e30 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045ce40 : and byte ptr [rsi - 4], al ; jmp qword ptr [rdi]
0x000000000042f931 : and dword ptr [rax + rax], esp ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000040583f : and eax, 0x45adf9 ; call 0x401af7
0x0000000000405942 : and eax, 0x65e350 ; call 0x401c17
0x0000000000414a8f : and eax, 0x65e430 ; pop rbp ; ret
0x0000000000414ab3 : and eax, 0x65e438 ; pop rbp ; ret
0x000000000042b308 : and eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x0000000000457e1a : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000040e98d : and eax, dword ptr [rax] ; add byte ptr [rbx + 0x722dd845], cl ; ret 0xc5d3
0x000000000043a11f : call 0x4019a6
0x000000000043a0ec : call 0x401a36
0x0000000000405844 : call 0x401af2
0x0000000000405947 : call 0x401c12
0x0000000000402122 : call 0x401c19
0x00000000004314cb : call 0x47fcd759
0x0000000000426758 : call 0xffffffff85cc29e6
0x00000000004279b8 : call 0xffffffff85cc3c46
0x000000000045029d : call 0xffffffffc284bc19
0x000000000043661c : call 0xffffffffc2c18352
0x000000000043661b : call 0xffffffffc2c18353
0x000000000041fb19 : call 0xffffffffe9048469
0x000000000041fb18 : call 0xffffffffe904846a
0x000000000041b55d : call 0xfffffffff73a3af4
0x0000000000438405 : call 0xffffffffff4809da
0x000000000041e089 : call 0xffffffffff56665b
0x000000000041e088 : call 0xffffffffff56665c
0x000000000041e089 : call 0xffffffffff56665d
0x000000000041e088 : call 0xffffffffff56665e
0x000000000045a199 : call qword ptr [r12 + rbx*8]
0x0000000000430c20 : call qword ptr [rax - 0x163dcb52]
0x000000000041d416 : call qword ptr [rax]
0x0000000000403f31 : call qword ptr [rbx]
0x0000000000407f3e : call qword ptr [rcx]
0x00000000004137a0 : call qword ptr [rdi]
0x000000000041d043 : call qword ptr [rdx]
0x000000000041cfdf : call qword ptr [rsi]
0x000000000045a19a : call qword ptr [rsp + rbx*8]
0x0000000000401f7d : call rax
0x0000000000404782 : call rbx
0x0000000000431642 : call rcx
0x0000000000407bd2 : call rdi
0x0000000000430901 : call rdx
0x0000000000413e85 : call rsi
0x000000000040a26a : call rsp
0x0000000000430e28 : cdq ; or ebp, dword ptr [rdi - 0x5bc746ce] ; ret
0x000000000043b35c : cdq ; ret
0x0000000000421480 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004351a9 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x0000000000421157 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408ec2 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436ec2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004398e0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000438e30 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401f1f : clc ; jne 0x401f28 ; pop rbp ; ret
0x000000000040b7a6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004351cb : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042165b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042169b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042167b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000421367 : clc ; pop rbp ; ret
0x00000000004022b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045cf82 : cld ; call qword ptr [rdx]
0x000000000045cba2 : cld ; jmp qword ptr [rax]
0x000000000045ce42 : cld ; jmp qword ptr [rdi]
0x000000000045ca82 : cld ; jmp qword ptr [rdx]
0x000000000041dcdd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000045c642 : cli ; call qword ptr [rax]
0x000000000045c5e2 : cli ; jmp qword ptr [rbx]
0x0000000000411811 : cmp ah, ah ; sub al, -0x47 ; ret
0x0000000000437a0d : cmp al, -0x2a ; ret
0x00000000004411b4 : cmp al, -0x2e ; ret
0x0000000000415f23 : cmp al, 0x25 ; mov cl, -0x4a ; add r8b, r13b ; ret 0xfebb
0x0000000000402129 : cmp al, 0x25 ; ret
0x0000000000432c78 : cmp al, 0x25 ; ret 0x45b9
0x000000000040583e : cmp al, 0x25 ; stc ; lodsd eax, dword ptr [rsi] ; add r8b, r13b ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x000000000042e2d1 : cmp al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042e542 : cmp byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x0000000000458fa8 : cmp dh, -1 ; call qword ptr [rax]
0x0000000000458773 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000459105 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000401edd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ef0 ; pop rbp ; ret
0x0000000000403caa : cmp ecx, dword ptr [rbx] ; ret 0x8589
0x0000000000404048 : cmp ecx, dword ptr [rbx] ; ret 0xd0e9
0x0000000000403f42 : cmp ecx, dword ptr [rbx] ; ret 0xd6e9
0x00000000004535de : cmp esi, dword ptr [rdi] ; ret 0x8589
0x0000000000457fa4 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000441207 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x000000000041ffb4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000405845 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x000000000043ae5b : cwde ; js 0x43ae05 ; ret
0x000000000043aea2 : cwde ; js 0x43ae4c ; ret
0x000000000043aedc : cwde ; js 0x43ae86 ; ret
0x000000000044fe3d : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000042b5f6 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000402126 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000044d998 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004365ad : dec dword ptr [rax - 0x77] ; jge 0x4365b0 ; pop rbp ; ret
0x0000000000408544 : dec dword ptr [rax - 0x77] ; ret 0x33e8
0x0000000000407d28 : dec dword ptr [rax - 0x77] ; ret 0x4fe8
0x0000000000407c23 : dec dword ptr [rax - 0x77] ; ret 0x54e8
0x0000000000407b01 : dec dword ptr [rax - 0x77] ; ret 0x76e8
0x000000000040a1dc : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040c0bf : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000403774 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040cea6 : dec dword ptr [rax - 0x77] ; ret 0xd1e8
0x000000000040846a : dec dword ptr [rax - 0x77] ; ret 0xde8
0x0000000000407d94 : dec dword ptr [rax - 0x77] ; ret 0xe3e8
0x0000000000408390 : dec dword ptr [rax - 0x77] ; ret 0xe7e8
0x000000000040827a : dec dword ptr [rax - 0x77] ; ret 0xfde8
0x0000000000445f99 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042dcfc : dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000445f44 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000456a57 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000041de82 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041e18d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000450dd5 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000045901c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407c6f : dec dword ptr [rbx + 0x26] ; ret 0x895c
0x0000000000407ac8 : dec dword ptr [rbx + 0x26] ; ret 0xe95c
0x0000000000430d4a : dec dword ptr [rcx - 0x7a3843bb] ; push rsp ; idiv edi ; call qword ptr [rdi]
0x00000000004308f8 : dec dword ptr [rcx - 0x7a384bbb] ; push rsp ; idiv edi ; call rdx
0x000000000040a346 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000458776 : dec dword ptr [rcx] ; ret 0x9589
0x000000000041f694 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000435bd9 : dec dword ptr [rdi] ; test ah, ah ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040c3e4 : dec dword ptr [rdi] ; test byte ptr [rbx + rcx], ch ; add cl, ch ; ret
0x0000000000440ad8 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x000000000040f1ea : dec dword ptr [rdi] ; test byte ptr [rdi], ah ; xor al, byte ptr [rax] ; add cl, ch ; ret 0x1a
0x0000000000434984 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000432083 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004106e9 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16ffffeb], dl ; ret
0x000000000043cb84 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x000000000043c7cc : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x0000000000459c2e : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x00000000004460a5 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000041d1c8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000430f4d : enter -0x7a39, 0x54 ; idiv edi ; jmp rdi
0x0000000000434dff : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004381bb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041723d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000435674 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420fc9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406425 : fcmovu st(0), st(2) ; ret 0x8589
0x0000000000407384 : fcmovu st(0), st(2) ; ret 0xdbb9
0x0000000000401f77 : fisub word ptr [rbp] ; mov rbp, rsp ; call rax
0x000000000040af39 : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000433c44 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040af3a : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000413cfa : fmul dword ptr [rcx + rdi*4 + 0x5d] ; call qword ptr [rdi]
0x0000000000447ce0 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x0000000000447cb5 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000045a19c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004129dc : fsub st(1), st(0) ; ret
0x00000000004119dd : fsub st(1), st(0) ; ret 0x1c
0x0000000000402289 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043a5ac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043aae6 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401ef0 : hlt ; pop rbp ; mov edi, 0x65e340 ; jmp rax
0x000000000044ca2d : idiv bh ; call qword ptr [rcx]
0x0000000000446633 : idiv bh ; call qword ptr [rdi]
0x0000000000446e3b : idiv bh ; call qword ptr [rdx]
0x00000000004472b6 : idiv bh ; call rcx
0x000000000044c710 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000044c846 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044ca46 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000449ad2 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004306ea : idiv bh ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x0000000000449960 : idiv bh ; jmp qword ptr [rax]
0x000000000044cbb1 : idiv bh ; jmp qword ptr [rcx]
0x000000000044864c : idiv bh ; jmp qword ptr [rdi]
0x00000000004490e7 : idiv bh ; jmp qword ptr [rsi]
0x00000000004483e1 : idiv bh ; jmp rbx
0x000000000044730f : idiv bh ; jmp rdi
0x0000000000445f76 : idiv bh ; jmp rdx
0x0000000000449b8a : idiv bh ; jmp rsp
0x0000000000430c1e : idiv edi ; call qword ptr [rax - 0x163dcb52]
0x0000000000431678 : idiv edi ; call qword ptr [rax]
0x000000000042e7b0 : idiv edi ; call qword ptr [rcx]
0x000000000042dbc4 : idiv edi ; call qword ptr [rdi]
0x000000000042bb25 : idiv edi ; call qword ptr [rdx]
0x000000000042d7e0 : idiv edi ; call qword ptr [rsi]
0x000000000042da1b : idiv edi ; call rbx
0x0000000000431640 : idiv edi ; call rcx
0x000000000042cd10 : idiv edi ; call rdi
0x00000000004308ff : idiv edi ; call rdx
0x000000000042f0c2 : idiv edi ; call rsi
0x000000000042bae1 : idiv edi ; call rsp
0x0000000000448198 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000447b86 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042fef8 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448377 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000448e3f : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004305d4 : idiv edi ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000431856 : idiv edi ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042db31 : idiv edi ; jmp qword ptr [rax]
0x000000000043134c : idiv edi ; jmp qword ptr [rcx]
0x000000000042db76 : idiv edi ; jmp qword ptr [rdi]
0x000000000043183c : idiv edi ; jmp qword ptr [rdx]
0x000000000042b484 : idiv edi ; jmp qword ptr [rsi]
0x000000000042b866 : idiv edi ; jmp rax
0x000000000042e2d7 : idiv edi ; jmp rcx
0x0000000000430f51 : idiv edi ; jmp rdi
0x000000000042f616 : idiv edi ; jmp rdx
0x000000000042e548 : idiv edi ; jmp rsp
0x000000000043f2a3 : imul al ; ret 0x893f
0x000000000044ce8c : imul eax ; ret 0x483f
0x00000000004449eb : imul eax ; ret 0x893f
0x00000000004329de : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000416ba8 : in al, -0x17 ; ret
0x000000000041d639 : in al, -0x7f ; ret 0xff9f
0x000000000041d81f : in al, -0x7f ; ret 0xffbf
0x000000000041d8c5 : in al, -0x7f ; ret 0xffc5
0x000000000041d8f3 : in al, -0x7f ; ret 0xffd5
0x000000000041d9c1 : in al, -0x7f ; ret 0xffd8
0x000000000041db57 : in al, -0x7f ; ret 0xffe0
0x000000000045d69c : in al, 0x13 ; add byte ptr [rax], al ; adc dl, -3 ; call rdx
0x00000000004267c8 : in al, 0x16 ; ret 0x8589
0x000000000042bfbc : in al, 0x16 ; ret 0x8bb9
0x000000000042f5a1 : in al, 0x16 ; ret 0xade9
0x00000000004086c5 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004087e9 : in al, 0x65 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045ce9c : in al, 0xb ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdi]
0x000000000045cf9c : in al, 0xc ; add byte ptr [rax], al ; rol byte ptr [rsi - 4], 1 ; call qword ptr [rdx]
0x000000000043692f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004176ea : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000414264 : in al, dx ; pop rbp ; ret
0x0000000000421363 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000043b55b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406424 : in eax, dx ; fcmovu st(0), st(2) ; ret 0x8589
0x000000000041ecaf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000044c712 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042b348 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042d463 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403fd0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439246 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041f85a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a0b4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 6
0x000000000040531d : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000402f13 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040b5a0 : inc dword ptr [rcx + rdi*4] ; call rdi
0x000000000042b98f : inc dword ptr [rcx] ; ret 0x9589
0x0000000000404046 : inc ebp ; cmp ecx, dword ptr [rbx] ; ret 0xd0e9
0x0000000000403f40 : inc ebp ; cmp ecx, dword ptr [rbx] ; ret 0xd6e9
0x0000000000420768 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042bb21 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdx]
0x000000000042d815 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042e809 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000042cd0c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdi
0x000000000042f0be : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsi
0x0000000000431348 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000431d35 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004311ec : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x00000000004306ec : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000042e569 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x0000000000457363 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000459842 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000458952 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000456b41 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000457ba3 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000040c3e7 : insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000426757 : insd dword ptr [rdi], dx ; call 0xffffffff85cc29e7
0x0000000000419e0f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041d44f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000045c641 : int1 ; cli ; call qword ptr [rax]
0x0000000000401ee3 : ja 0x401eea ; pop rbp ; ret
0x0000000000401eef : je 0x401eed ; pop rbp ; mov edi, 0x65e340 ; jmp rax
0x0000000000415fd0 : jg 0x415fbd ; ret 0
0x00000000004393d6 : jg 0x4393ea ; xchg eax, edi ; ret 0xd284
0x000000000043aa8c : jg 0x43aaa0 ; xchg eax, edi ; ret 0xd284
0x000000000044cb9a : jg 0x44cbae ; xchg eax, esp ; ret 0xd284
0x000000000044dce3 : jg 0x44dcea ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000421366 : jge 0x421363 ; pop rbp ; ret
0x000000000042165a : jge 0x42165b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042167a : jge 0x42167b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042169a : jge 0x42169b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004216c0 : jge 0x4216bd ; pop rbp ; ret
0x00000000004324f8 : jge 0x43250f ; ret
0x00000000004329e3 : jge 0x4329fa ; ret
0x00000000004351ca : jge 0x4351cd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004365b0 : jge 0x4365ad ; pop rbp ; ret
0x000000000043bac9 : jge 0x43bac3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004323cc : jl 0x4323e3 ; ret
0x0000000000438965 : jl 0x438941 ; ret
0x00000000004389b5 : jl 0x438991 ; ret
0x0000000000401b4b : jmp 0x401947
0x00000000004078f5 : jmp 0x40867c
0x000000000040750d : jmp 0x40867d
0x0000000000412968 : jmp 0x4136ab
0x0000000000411c9c : jmp 0x4136ac
0x0000000000411573 : jmp 0x4136ad
0x00000000004130d3 : jmp 0x4136ae
0x0000000000413c84 : jmp 0x41426d
0x000000000041629d : jmp 0x4162a8
0x0000000000416e2c : jmp 0x416e37
0x000000000041cdfd : jmp 0x41fae3
0x000000000041f891 : jmp 0x41fae5
0x00000000004272d3 : jmp 0x427299
0x000000000042b334 : jmp 0x42b2fa
0x000000000042c81b : jmp 0x431d5c
0x000000000042c18e : jmp 0x431d5d
0x000000000042ee85 : jmp 0x431d5e
0x0000000000431dc3 : jmp 0x431e37
0x00000000004329dd : jmp 0x432f55
0x0000000000432c71 : jmp 0x432f56
0x00000000004350aa : jmp 0x4351bb
0x0000000000438dd4 : jmp 0x438e40
0x000000000043a2d4 : jmp 0x43a458
0x000000000043ac9b : jmp 0x43aca6
0x000000000043b90b : jmp 0x43b916
0x000000000044ab25 : jmp 0x44d9a4
0x0000000000446781 : jmp 0x44d9a5
0x0000000000448adb : jmp 0x44d9a6
0x0000000000450193 : jmp 0x4519f1
0x0000000000458f6f : jmp 0x45a14c
0x00000000004596c5 : jmp 0x45a14d
0x0000000000459a90 : jmp 0x45a14e
0x0000000000402123 : jmp 0x4940212a
0x00000000004267c7 : jmp 0xffffffff8a047eb3
0x00000000004514c1 : jmp 0xffffffff8cfed912
0x000000000043728e : jmp 0xffffffffb705765a
0x000000000043ae5a : jmp 0xffffffffc3e826fb
0x000000000044cbe3 : jmp 0xffffffffcece13ee
0x000000000040a373 : jmp qword ptr [rax]
0x000000000041e08f : jmp qword ptr [rbx]
0x0000000000414882 : jmp qword ptr [rcx]
0x000000000042db78 : jmp qword ptr [rdi]
0x000000000041ffb5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000041b566 : jmp qword ptr [rdx]
0x0000000000408234 : jmp qword ptr [rsi]
0x0000000000401ef7 : jmp rax
0x00000000004140c9 : jmp rbx
0x000000000042e2d9 : jmp rcx
0x0000000000413fcf : jmp rdi
0x0000000000401f37 : jmp rdx
0x0000000000457e22 : jmp rsi
0x0000000000407c3d : jmp rsp
0x0000000000401f20 : jne 0x401f27 ; pop rbp ; ret
0x0000000000420766 : jne 0x42076f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000416c6e : jo 0x416ccf ; ret
0x0000000000420981 : jo 0x4209e2 ; ret
0x0000000000420aa4 : jo 0x420b05 ; ret
0x0000000000420bde : jo 0x420c3f ; ret
0x000000000042167f : jo 0x4216e0 ; ret
0x000000000042167e : jo 0x4216e1 ; ret
0x0000000000433cec : jo 0x433d4d ; ret
0x0000000000436c03 : jo 0x436c64 ; ret
0x00000000004395d5 : jo 0x4395dd ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004398e4 : jo 0x439945 ; ret
0x000000000043aaea : jo 0x43ab4b ; ret
0x000000000045a140 : jo 0x45a154 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045ca80 : jo 0x45cac2 ; cld ; jmp qword ptr [rdx]
0x000000000042d812 : jp 0x42d861 ; std ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000041fad6 : js 0x41faea ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043ae5c : js 0x43ae04 ; ret
0x000000000043aea3 : js 0x43ae4b ; ret
0x000000000043aedd : js 0x43ae85 ; ret
0x000000000042b8e4 : lahf ; ret 0xd284
0x0000000000457fa2 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000040583d : lea edi, dword ptr [0x45adf9] ; call 0x401af9
0x00000000004350a9 : leave ; jmp 0x4351bc
0x000000000040661c : leave ; ret
0x0000000000431379 : leave ; ret 0x48c4
0x0000000000426678 : leave ; ret 0x89c4
0x000000000042dc06 : ljmp ptr [rip + 0xf000000] ; xchg eax, ebp ; ret 0xd284
0x0000000000454096 : lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000405841 : lodsd eax, dword ptr [rsi] ; add r8b, r13b ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x00000000004279d3 : loop 0x42797c ; xlatb ; ret 0x8589
0x000000000042e2f8 : loop 0x42e2a1 ; xlatb ; ret 0x8d48
0x000000000042673b : loope 0x4266e4 ; xlatb ; ret 0x8589
0x0000000000403404 : loopne 0x403457 ; add esp, 0x1f0 ; pop rbp ; ret
0x0000000000403b1c : loopne 0x403b23 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041369f : loopne 0x4136af ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041608e : loopne 0x4160e1 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000416ff2 : loopne 0x417042 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000416ff1 : loopne 0x417043 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000417aae : loopne 0x417ab7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431daf : loopne 0x431de0 ; ret
0x0000000000431dae : loopne 0x431de1 ; ret
0x0000000000433a30 : loopne 0x433a39 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000433e3c : loopne 0x433e8c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000433e3b : loopne 0x433e8d ; add esp, 0x40 ; pop rbp ; ret
0x000000000043a44c : loopne 0x43a455 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000458770 : loopne 0x458705 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x00000000004308fb : mov ah, -0x39 ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x000000000040ab21 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044109c : mov ah, 0x47 ; ret 0x8589
0x0000000000446a74 : mov ah, 0x47 ; ret 0x88b9
0x0000000000402460 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000458379 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004383da : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043a0ea : mov al, 0 ; call 0x401a38
0x0000000000417c6b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043abad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043ad5d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043b559 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042160c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426720 : mov bl, 0x5a ; ret
0x0000000000414ab1 : mov byte ptr [0x65e438], al ; pop rbp ; ret
0x000000000041f628 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b7a7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401f53 : mov byte ptr [rip + 0x25c43e], 1 ; ret
0x0000000000415f25 : mov cl, -0x4a ; add r8b, r13b ; ret 0xfebb
0x000000000044da7d : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043abb3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415f26 : mov dh, 0x45 ; add al, ch ; ret 0xfebb
0x000000000043b685 : mov dl, -0x47 ; ret
0x0000000000414a8d : mov dword ptr [0x65e430], edi ; pop rbp ; ret
0x0000000000417927 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004176eb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041785f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004086c3 : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412965 : mov dword ptr [rbp - 0x24], eax ; jmp 0x4136ae
0x0000000000438dd1 : mov dword ptr [rbp - 0x34], ecx ; jmp 0x438e43
0x000000000040245e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402287 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004022b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421365 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000417add : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004351cc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042de9a : mov eax, 0xc700003e ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x00000000004175df : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000433d7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043403d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415863 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040900d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433a5f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000436bfd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004216e1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041425f : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004156fc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000433e7e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414e62 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000433750 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041792a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000416ff0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000433e3a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004174d4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004175dc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004176e5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000417861 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043bdb0 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042097b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043a5aa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043aae4 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000421155 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004352ec : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436ec0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004398de : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044dd38 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042165d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042169d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042167d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042134c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042147f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004215db : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004213f3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000431f61 : mov eax, esi ; pop rbp ; ret
0x0000000000448add : mov ebp, 0xb800004e ; push rcx ; ret
0x000000000042dfa6 : mov ebp, 0xfffffdef ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401f7b : mov ebp, esp ; call rax
0x0000000000401ee1 : mov ebp, esp ; ja 0x401eec ; pop rbp ; ret
0x0000000000421362 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000446152 : mov ebx, 0x29b9fffb ; pop rcx ; ret 0xba1f
0x00000000004319f6 : mov ebx, 0x43b9d064 ; ret
0x000000000045c7c1 : mov ebx, dr1 ; call qword ptr [rsi]
0x00000000004176e8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004051e9 : mov ecx, dword ptr [rbp - 0x298] ; call rax
0x000000000044ffc1 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000401f75 : mov edi, 0x65de20 ; mov rbp, rsp ; call rax
0x0000000000401ef2 : mov edi, 0x65e340 ; jmp rax
0x0000000000401f32 : mov edi, 0x65e340 ; jmp rdx
0x0000000000421659 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000421699 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000421679 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045a197 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045a196 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040a8ad : mov edx, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408ec0 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004216e5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044fd11 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x0000000000405940 : mov esi, dword ptr [0x65e350] ; call 0x401c19
0x0000000000401f30 : mov esi, eax ; mov edi, 0x65e340 ; jmp rdx
0x00000000004051e7 : mov esi, ecx ; mov ecx, dword ptr [rbp - 0x298] ; call rax
0x000000000042b98c : mov esp, 0x1fffffd ; ret 0x9589
0x000000000044fe3e : mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000044fd67 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x00000000004305d3 : mov esp, 0xc7fffff7 ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000415fcd : mov esp, 0xe97f79ce ; ret 0
0x0000000000414263 : mov esp, ebp ; pop rbp ; ret
0x0000000000414a8c : mov qword ptr [0x65e430], rdi ; pop rbp ; ret
0x0000000000421364 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000417adc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004308fa : mov r12b, -0x39 ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x000000000040245f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000458378 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000433d7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043403c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415862 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040900c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433a5e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004216e0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041425e : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004156fb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000433e7d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414e61 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043374f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416fef : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000433e39 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004174d3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004175db : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043bdaf : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042097a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000431e27 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042165c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042169c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042167c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401f7a : mov rbp, rsp ; call rax
0x0000000000401ee0 : mov rbp, rsp ; ja 0x401eed ; pop rbp ; ret
0x0000000000421361 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000421658 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000421698 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000421678 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040a8ac : mov rdx, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408ebf : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004216e4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401f2f : mov rsi, rax ; mov edi, 0x65e340 ; jmp rdx
0x00000000004051e6 : mov rsi, rcx ; mov ecx, dword ptr [rbp - 0x298] ; call rax
0x0000000000414262 : mov rsp, rbp ; pop rbp ; ret
0x000000000042076a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042076b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000041debc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043b8fe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004270de : movabs dword ptr [0x840fffffe9c48589], eax ; ret
0x000000000040d9ac : movabs dword ptr [0x840ffffffe548589], eax ; ret
0x00000000004311e9 : movabs dword ptr [0xfff75485c7fffd0a], eax ; jmp rax
0x00000000004140c0 : movabs dword ptr [0xfffe7085c7000001], eax ; jmp rbx
0x00000000004329dc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x432f56
0x00000000004241f0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042673c : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; ret 0x8589
0x000000000042e2f9 : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; ret 0x8d48
0x00000000004411b3 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x000000000044117d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004169c1 : movsx eax, byte ptr [rbp - 5] ; add rsp, 8 ; pop rbp ; ret
0x000000000044db89 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044da7c : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043abb2 : movzx eax, al ; pop rbp ; ret
0x000000000040b7aa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042160b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045a1b8 : nop dword ptr [rax + rax] ; ret
0x000000000045cf7d : or al, 0 ; add al, dl ; cld ; call qword ptr [rdx]
0x00000000004311ba : or al, 0 ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000041fad7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406f30 : or al, 0x59 ; ret
0x000000000042b8e2 : or al, 0xf ; lahf ; ret 0xd284
0x000000000042b909 : or al, 0xf ; xchg eax, esp ; ret 0xd284
0x000000000045ccbd : or al, byte ptr [rax] ; add byte ptr [rax + 0x40], dl ; cld ; jmp qword ptr [rdx]
0x00000000004311ea : or bh, ch ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000040af36 : or byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000045cb9d : or byte ptr [rax], al ; add byte ptr [rax + 0x3f], al ; cld ; jmp qword ptr [rax]
0x00000000004217a4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000435bdd : or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000044ffc2 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x0000000000413ff0 : or byte ptr [rsi - 0x39ee5546], dl ; ret
0x0000000000432087 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000045cfbd : or eax, 0x46d00000 ; cld ; call qword ptr [rdx]
0x00000000004078f7 : or eax, 0xcab80000 ; ret
0x000000000045ce9d : or eax, dword ptr [rax] ; add byte ptr [rax + 0x46], dl ; cld ; jmp qword ptr [rdi]
0x000000000045ce3d : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; cld ; jmp qword ptr [rdi]
0x0000000000420b61 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c3e8 : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000430e29 : or ebp, dword ptr [rdi - 0x5bc746ce] ; ret
0x000000000042e2f6 : out -0x47, al ; loop 0x42e2a3 ; xlatb ; ret 0x8d48
0x000000000044da25 : out -0x47, al ; ret 0x48e7
0x000000000044109b : out -0x4c, al ; ret 0x8589
0x00000000004410ef : out -0x4c, eax ; ret 0x8589
0x0000000000446a73 : out -0x4c, eax ; ret 0x88b9
0x000000000045c5e1 : out -6, eax ; jmp qword ptr [rbx]
0x0000000000431f5c : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000043ad5f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406478 : out dx, al ; fcmovu st(0), st(2) ; ret 0x8589
0x0000000000407383 : out dx, al ; fcmovu st(0), st(2) ; ret 0xdbb9
0x000000000043abaf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004314ca : outsb dx, byte ptr [rsi] ; call 0x47fcd75a
0x00000000004279b7 : outsb dx, byte ptr [rsi] ; call 0xffffffff85cc3c47
0x000000000045a1ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045a1ae : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041fe02 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045a1b0 : pop r14 ; pop r15 ; ret
0x000000000041fe04 : pop r15 ; pop rbp ; ret
0x000000000045a1b2 : pop r15 ; ret
0x000000000043b3d8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000413bff : pop rbp ; call qword ptr [rdi]
0x0000000000401f52 : pop rbp ; mov byte ptr [rip + 0x25c43e], 1 ; ret
0x0000000000401ef1 : pop rbp ; mov edi, 0x65e340 ; jmp rax
0x0000000000401f2e : pop rbp ; mov rsi, rax ; mov edi, 0x65e340 ; jmp rdx
0x000000000045a1ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045a1af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401ee5 : pop rbp ; ret
0x000000000041fe01 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fada : pop rbx ; pop rbp ; ret
0x0000000000454a19 : pop rbx ; ret 0x1dd
0x000000000043b684 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000405db1 : pop rcx ; ret
0x000000000043fd08 : pop rcx ; ret 0x891f
0x0000000000446157 : pop rcx ; ret 0xba1f
0x000000000042e378 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041fe05 : pop rdi ; pop rbp ; ret
0x000000000043c0a7 : pop rdi ; ret
0x000000000043bacb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000426721 : pop rdx ; ret
0x00000000004549c5 : pop rdx ; ret 0x1dd
0x000000000042ee39 : pop rdx ; ret 0x78b9
0x0000000000426775 : pop rdx ; ret 0x8589
0x000000000041fe03 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045a1b1 : pop rsi ; pop r15 ; ret
0x000000000041379f : pop rsp ; call qword ptr [rdi]
0x000000000045a1ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419d12 : pop rsp ; ret
0x0000000000413104 : popfq ; add eax, 0x8d480000 ; add al, 0x25 ; ret
0x00000000004306e9 : popfq ; idiv bh ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000043b499 : popfq ; ret 0xd284
0x000000000044ce87 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x0000000000431d4f : push 0x5b000020 ; pop rbp ; ret
0x000000000042dbdf : push qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f4ff : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000042165e : push r8 ; pop rbp ; ret
0x0000000000430c56 : push rax ; adc al, -0x7f ; ret 0x76c
0x000000000045cea0 : push rax ; cld ; jmp qword ptr [rdi]
0x000000000045ccc0 : push rax ; cld ; jmp qword ptr [rdx]
0x0000000000402464 : push rax ; pop rbp ; ret
0x0000000000440327 : push rax ; ret
0x000000000042f693 : push rax ; sbb al, -0x7f ; ret 1
0x000000000045d120 : push rax ; std ; jmp rdx
0x000000000043333b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000408ec1 : push rbp ; clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004216e6 : push rbp ; clc ; pop rbp ; ret
0x0000000000433c43 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041d638 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041d81e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000041d8c4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000041d8f2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000041d9c0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000041db56 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401f74 : push rbp ; mov edi, 0x65de20 ; mov rbp, rsp ; call rax
0x0000000000421360 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000424b04 : push rbp ; ret
0x0000000000438d45 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000043dc1b : push rbx ; ret 0xaf58
0x0000000000443967 : push rcx ; ret
0x000000000043dbc7 : push rdx ; ret 0xaf58
0x0000000000430c1d : push rsp ; idiv edi ; call qword ptr [rax - 0x163dcb52]
0x000000000042e7af : push rsp ; idiv edi ; call qword ptr [rcx]
0x000000000042dbc3 : push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000042bb24 : push rsp ; idiv edi ; call qword ptr [rdx]
0x000000000042d7df : push rsp ; idiv edi ; call qword ptr [rsi]
0x000000000042da1a : push rsp ; idiv edi ; call rbx
0x000000000043163f : push rsp ; idiv edi ; call rcx
0x000000000042cd0f : push rsp ; idiv edi ; call rdi
0x00000000004308fe : push rsp ; idiv edi ; call rdx
0x000000000042f0c1 : push rsp ; idiv edi ; call rsi
0x000000000042bae0 : push rsp ; idiv edi ; call rsp
0x000000000042db30 : push rsp ; idiv edi ; jmp qword ptr [rax]
0x000000000043134b : push rsp ; idiv edi ; jmp qword ptr [rcx]
0x000000000042db75 : push rsp ; idiv edi ; jmp qword ptr [rdi]
0x000000000043183b : push rsp ; idiv edi ; jmp qword ptr [rdx]
0x000000000042b483 : push rsp ; idiv edi ; jmp qword ptr [rsi]
0x000000000042b865 : push rsp ; idiv edi ; jmp rax
0x000000000042e2d6 : push rsp ; idiv edi ; jmp rcx
0x0000000000430f50 : push rsp ; idiv edi ; jmp rdi
0x000000000042f615 : push rsp ; idiv edi ; jmp rdx
0x000000000042e547 : push rsp ; idiv edi ; jmp rsp
0x0000000000413d65 : pushfq ; ret 0x8445
0x0000000000405323 : pushfq ; ret 0xd284
0x00000000004009e8 : ret
0x0000000000415fd2 : ret 0
0x00000000004377e9 : ret 0x10
0x0000000000406094 : ret 0x12
0x00000000004060cc : ret 0x16
0x000000000042dcff : ret 0x17
0x000000000040f1f2 : ret 0x1a
0x00000000004119df : ret 0x1c
0x00000000004549c6 : ret 0x1dd
0x000000000040e667 : ret 0x1f
0x0000000000445f47 : ret 0x20
0x000000000043b58b : ret 0x2030
0x0000000000410ac8 : ret 0x2295
0x0000000000401d52 : ret 0x25c4
0x0000000000401b52 : ret 0x25c5
0x0000000000401942 : ret 0x25c6
0x000000000041d017 : ret 0x2a
0x0000000000420336 : ret 0x2c1
0x00000000004086ae : ret 0x2ce8
0x0000000000430c24 : ret 0x2ce9
0x000000000042632f : ret 0x2e1e
0x0000000000416f60 : ret 0x30
0x000000000042c6a1 : ret 0x30b9
0x000000000040d8f2 : ret 0x33
0x0000000000408547 : ret 0x33e8
0x0000000000451fc5 : ret 0x3617
0x000000000040879e : ret 0x3ce8
0x00000000004498d8 : ret 0x40
0x000000000040e499 : ret 0x41ed
0x0000000000415abb : ret 0x421d
0x0000000000419f7a : ret 0x43fa
0x000000000040e65c : ret 0x4577
0x000000000040b994 : ret 0x4589
0x00000000004031cc : ret 0x45ac
0x0000000000432c7a : ret 0x45b9
0x00000000004314cd : ret 0x47b9
0x0000000000450edf : ret 0x4810
0x000000000044ce8e : ret 0x483f
0x000000000043137a : ret 0x48c4
0x000000000044da0b : ret 0x48e7
0x000000000043bfa1 : ret 0x49e8
0x000000000042d090 : ret 0x4c
0x000000000040503e : ret 0x4ce8
0x0000000000459c46 : ret 0x4eb9
0x0000000000407d2b : ret 0x4fe8
0x0000000000407c26 : ret 0x54e8
0x000000000043aad4 : ret 0x5589
0x000000000042ac23 : ret 0x5739
0x000000000044932e : ret 0x5ce8
0x000000000043a753 : ret 0x5e5
0x00000000004271ff : ret 0x5f
0x0000000000408e6e : ret 0x6ce8
0x0000000000445c73 : ret 0x6d
0x000000000044df99 : ret 0x6f69
0x0000000000441913 : ret 0x73
0x0000000000430c59 : ret 0x76c
0x0000000000407b04 : ret 0x76e8
0x000000000042ee3a : ret 0x78b9
0x000000000043e028 : ret 0x791e
0x0000000000440d43 : ret 0x7a
0x0000000000449aff : ret 0x7b9
0x000000000040e70a : ret 0x7ba9
0x0000000000445807 : ret 0x7f76
0x0000000000443097 : ret 0x80
0x000000000040a1df : ret 0x8148
0x0000000000402f17 : ret 0x8445
0x0000000000455ccd : ret 0x848e
0x0000000000403cac : ret 0x8589
0x0000000000446a76 : ret 0x88b9
0x0000000000436620 : ret 0x8900
0x00000000004251cd : ret 0x8909
0x00000000004528be : ret 0x8916
0x0000000000419e10 : ret 0x891a
0x000000000040fe4a : ret 0x891b
0x000000000043fd09 : ret 0x891f
0x000000000043af3c : ret 0x8934
0x000000000043f2a5 : ret 0x893f
0x000000000040a036 : ret 0x8948
0x0000000000405d42 : ret 0x895c
0x0000000000437291 : ret 0x89b6
0x0000000000426679 : ret 0x89c4
0x0000000000441f29 : ret 0x89e8
0x00000000004548e7 : ret 0x89fc
0x000000000041ec90 : ret 0x8ae8
0x000000000043af18 : ret 0x8b34
0x0000000000407fbd : ret 0x8b48
0x000000000042bfbe : ret 0x8bb9
0x000000000044ab32 : ret 0x8be8
0x000000000040874e : ret 0x8ce8
0x000000000042e2fb : ret 0x8d48
0x000000000040c0c2 : ret 0x8d8b
0x000000000042b991 : ret 0x9589
0x0000000000457fa6 : ret 0x9ae9
0x0000000000439d2b : ret 0xa4be
0x000000000041dce5 : ret 0xa9b9
0x0000000000419762 : ret 0xade6
0x000000000042f5a3 : ret 0xade9
0x000000000043dbc8 : ret 0xaf58
0x000000000040325b : ret 0xb0
0x00000000004082d4 : ret 0xb6e8
0x0000000000440acf : ret 0xb846
0x000000000043664e : ret 0xb900
0x000000000041d450 : ret 0xb91a
0x0000000000410efd : ret 0xb91b
0x000000000043d457 : ret 0xb957
0x000000000043754b : ret 0xb9b6
0x0000000000446158 : ret 0xba1f
0x00000000004493cf : ret 0xbbe8
0x000000000040910a : ret 0xc02e
0x0000000000401f15 : ret 0xc148
0x0000000000423bcf : ret 0xc4ef
0x0000000000413943 : ret 0xc5aa
0x000000000040e995 : ret 0xc5d3
0x000000000040404a : ret 0xd0e9
0x000000000040cea9 : ret 0xd1e8
0x0000000000403281 : ret 0xd284
0x000000000041f503 : ret 0xd4e9
0x0000000000403f44 : ret 0xd6e9
0x0000000000426bef : ret 0xd867
0x0000000000428a8f : ret 0xd9ee
0x0000000000407386 : ret 0xdbb9
0x00000000004086fe : ret 0xdce8
0x000000000040846d : ret 0xde8
0x00000000004547e9 : ret 0xe0a5
0x00000000004354ab : ret 0xe280
0x00000000004109ce : ret 0xe2ab
0x0000000000407d97 : ret 0xe3e8
0x000000000040bebf : ret 0xe7b9
0x0000000000408393 : ret 0xe7e8
0x00000000004248ef : ret 0xe8f4
0x000000000042bae6 : ret 0xe909
0x0000000000407acb : ret 0xe95c
0x00000000004585be : ret 0xe9fc
0x000000000044f08d : ret 0xec0b
0x000000000041fb1c : ret 0xee8
0x000000000040a061 : ret 0xf40
0x000000000041dec5 : ret 0xf41
0x0000000000429f3b : ret 0xf727
0x000000000044935f : ret 0xf9b9
0x000000000043d057 : ret 0xfa
0x00000000004033b6 : ret 0xfa81
0x000000000043a2da : ret 0xfc76
0x0000000000438dda : ret 0xfc8b
0x00000000004310ba : ret 0xfd0a
0x000000000040827d : ret 0xfde8
0x0000000000415f2a : ret 0xfebb
0x0000000000458cf6 : ret 0xff9b
0x000000000041d63b : ret 0xff9f
0x000000000041efde : ret 0xffa5
0x0000000000458edc : ret 0xffbb
0x000000000041d821 : ret 0xffbf
0x000000000041e28b : ret 0xffc4
0x000000000041d8c7 : ret 0xffc5
0x000000000041d8f5 : ret 0xffd5
0x000000000041d9c3 : ret 0xffd8
0x000000000041e331 : ret 0xffd9
0x000000000041db59 : ret 0xffe0
0x0000000000449555 : ret 0xfff7
0x0000000000449586 : ret 0xfff9
0x000000000041cc2e : ret 0xfffa
0x000000000045d621 : ret 0xfffd
0x0000000000405846 : ret 0xffff
0x0000000000405676 : ret 1
0x00000000004162a3 : ret 2
0x000000000040c8fb : ret 3
0x000000000041f617 : ret 4
0x00000000004320b8 : ret 5
0x000000000040a0ba : ret 6
0x0000000000406cd4 : ret 7
0x000000000041fd00 : ret 8
0x0000000000430d73 : rol bh, -0x7b ; push rsp ; idiv edi ; call qword ptr [rdi]
0x0000000000430f72 : rol bh, 1 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x0000000000438334 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ac83 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000438945 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045cf80 : rol byte ptr [rsi - 4], 1 ; call qword ptr [rdx]
0x0000000000459a82 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000430d72 : rol r15b, -0x7b ; push rsp ; idiv edi ; call qword ptr [rdi]
0x0000000000430f71 : rol r15b, 1 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x00000000004176e6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401f1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401f2b ; pop rbp ; ret
0x000000000044da7e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040d047 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040866b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408e2c : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403b18 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x403b27 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ac7f : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000438d46 : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004176e7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040af34 : ror byte ptr [rdx + 0x458b4808], 1 ; fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000433c40 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004251cc : sahf ; ret 0x8909
0x0000000000438a19 : sahf ; ret 0xd284
0x000000000042bae5 : sahf ; ret 0xe909
0x000000000043077c : salc ; adc eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rsi]
0x0000000000405b9c : salc ; ret
0x000000000042dcf9 : sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000045d6a1 : sar ch, cl ; call rdx
0x0000000000401f1e : sar eax, 1 ; jne 0x401f29 ; pop rbp ; ret
0x0000000000401f1d : sar rax, 1 ; jne 0x401f2a ; pop rbp ; ret
0x000000000042f694 : sbb al, -0x7f ; ret 1
0x000000000045d618 : sbb al, 0 ; add byte ptr [rax], al ; adc eax, dword ptr fs:[rax] ; add al, dl ; ret 0xfffd
0x000000000045c438 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; ret 0xfffa
0x0000000000457b13 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000420799 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000454415 : sbb dl, dh ; ret
0x0000000000433823 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041dcde : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000431835 : sbb eax, 0xc7000005 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000040d8ed : sbb ecx, dword ptr [rax] ; add cl, ch ; ret 0x33
0x0000000000454469 : sbb edx, esi ; ret
0x0000000000457b12 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000457a82 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000040b59e : shl dword ptr [rax], 1 ; inc dword ptr [rcx + rdi*4] ; call rdi
0x00000000004033b4 : shl dword ptr [rcx], 1 ; ret 0xfa81
0x0000000000436c2b : shr dword ptr [rax + rax], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b26 : stc ; add byte ptr [rax + 0xf410000], ah ; xchg eax, esp ; ret 0x8445
0x0000000000405840 : stc ; lodsd eax, dword ptr [rsi] ; add r8b, r13b ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x000000000045d202 : std ; call rdx
0x000000000045d0c2 : std ; call rsi
0x000000000042d814 : std ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x00000000004311eb : std ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000045d4a2 : std ; jmp rax
0x000000000045d122 : std ; jmp rdx
0x00000000004169c4 : sti ; add rsp, 8 ; pop rbp ; ret
0x000000000045c702 : sti ; call qword ptr [rsi]
0x000000000045c782 : sti ; jmp rbx
0x000000000041397b : stosb byte ptr [rdi], al ; adc esi, eax ; ret
0x00000000004028b7 : stosb byte ptr [rdi], al ; ret
0x0000000000411813 : sub al, -0x47 ; ret
0x00000000004166e0 : sub al, -0x4c ; ret
0x000000000041ad27 : sub al, 0x38 ; ret 0x8589
0x000000000041dce3 : sub al, 0x38 ; ret 0xa9b9
0x000000000042db2a : sub byte ptr [rdx], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000410aed : sub dword ptr [r8], r8d ; add cl, ch ; ret 1
0x0000000000410aee : sub dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042efdc : sub eax, 0x85c70000 ; push rsp ; idiv edi ; jmp qword ptr [rsi]
0x000000000042dc07 : sub eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x0000000000431f5b : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x000000000045a221 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000045a220 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000450199 : sysenter
0x0000000000435bdb : test ah, ah ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000043335b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000045834f : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004271f6 : test al, -0x77 ; test dword ptr [rcx + rbp*8 - 0x7bf00001], ebx ; ret 0x5f
0x0000000000438788 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004395d1 : test al, 0x48 ; add esp, 0x170 ; pop rbp ; ret
0x000000000042097d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000433238 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000045a1ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c3e6 : test byte ptr [rbx + rcx], ch ; add cl, ch ; ret
0x0000000000440ada : test byte ptr [rbx], ah ; ret 0
0x000000000045ce3c : test byte ptr [rbx], cl ; add byte ptr [rax], al ; and byte ptr [rsi - 4], al ; jmp qword ptr [rdi]
0x000000000045c43c : test byte ptr [rcx], al ; add byte ptr [rax], al ; ret 0xfffa
0x000000000040f1ec : test byte ptr [rdi], ah ; xor al, byte ptr [rax] ; add cl, ch ; ret 0x1a
0x0000000000434986 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000432085 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004106eb : test byte ptr [rip - 0x16ffffeb], dl ; ret
0x000000000043cb86 : test cl, dh ; ret 0
0x000000000043c7ce : test dl, bl ; ret 0
0x0000000000443090 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x000000000040b2a5 : test dword ptr [rax + 0x2dfffffe], esi ; call rdi
0x0000000000440ad4 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x00000000004498d2 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x000000000044110b : test dword ptr [rcx + 1], ebp ; ret
0x00000000004271f8 : test dword ptr [rcx + rbp*8 - 0x7bf00001], ebx ; ret 0x5f
0x0000000000433340 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004330a8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000430c1c : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rax - 0x163dcb52]
0x000000000042e7ae : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x000000000042dbc2 : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000042bb23 : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdx]
0x000000000042d7de : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042da19 : test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000043163e : test dword ptr [rdi + rsi*8 - 1], edx ; call rcx
0x000000000042cd0e : test dword ptr [rdi + rsi*8 - 1], edx ; call rdi
0x00000000004308fd : test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x000000000042f0c0 : test dword ptr [rdi + rsi*8 - 1], edx ; call rsi
0x000000000042badf : test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000042db2f : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000043134a : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042db74 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000043183a : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000042b482 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000042b864 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000042e2d5 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x0000000000430f4f : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x000000000042f614 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdx
0x000000000042e546 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000043d248 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x0000000000405d3a : test dword ptr [rsi + rdi*8 + 0x4a2dffff], ebp ; ret 0x895c
0x0000000000406f9a : test dword ptr [rsi + rdi*8 + 0x4b2dffff], ebp ; ret 0x895c
0x0000000000405daa : test dword ptr [rsi + rdi*8 + 0xb2dffff], ebp ; pop rcx ; ret
0x0000000000406f2a : test dword ptr [rsi + rdi*8 + 0xc2dffff], ebp ; pop rcx ; ret
0x0000000000406472 : test dword ptr [rsi + rdi*8 - 0x11d20001], ebp ; fcmovu st(0), st(2) ; ret 0x8589
0x000000000040641e : test dword ptr [rsi + rdi*8 - 0x12d20001], ebp ; fcmovu st(0), st(2) ; ret 0x8589
0x0000000000405bea : test dword ptr [rsi + rdi*8 - 0x28d20001], ebp ; ret
0x0000000000405b96 : test dword ptr [rsi + rdi*8 - 0x29d20001], ebp ; ret
0x000000000040666a : test dword ptr [rsi + rdi*8 - 0x35d20001], ebp ; ret
0x0000000000406616 : test dword ptr [rsi + rdi*8 - 0x36d20001], ebp ; ret
0x0000000000457a2b : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000458351 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000457365 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000459844 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000459b63 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000458954 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000458a5a : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x0000000000456b43 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000459a87 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000457b15 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000457e1e : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000457f9e : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000042e7a9 : test eax, 0xc7000035 ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x0000000000448196 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000446151 : wait ; mov ebx, 0x29b9fffb ; pop rcx ; ret 0xba1f
0x0000000000447ce2 : wait ; ret 0xf40
0x00000000004548e5 : xchg ax, dx ; ret 0x89fc
0x000000000045c781 : xchg bl, bh ; jmp rbx
0x000000000044115f : xchg byte ptr [rcx + 1], ch ; ret
0x0000000000458772 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000042b98b : xchg eax, ebp ; mov esp, 0x1fffffd ; ret 0x9589
0x0000000000417d11 : xchg eax, ebp ; ret
0x0000000000402f16 : xchg eax, ebp ; ret 0x8445
0x0000000000403280 : xchg eax, ebp ; ret 0xd284
0x00000000004354aa : xchg eax, ebp ; ret 0xe280
0x000000000042dcf8 : xchg eax, ebp ; sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000429e77 : xchg eax, ebx ; ret
0x0000000000459c30 : xchg eax, ebx ; ret 0xd284
0x000000000041ad0b : xchg eax, ecx ; ret
0x000000000045d4a1 : xchg eax, ecx ; std ; jmp rax
0x0000000000415b6a : xchg eax, edi ; ret
0x00000000004381c1 : xchg eax, edi ; ret 0xd284
0x000000000041ae5b : xchg eax, edx ; ret
0x0000000000446043 : xchg eax, edx ; ret 0x8445
0x00000000004548e6 : xchg eax, edx ; ret 0x89fc
0x000000000043323e : xchg eax, edx ; ret 0xd284
0x00000000004585bd : xchg eax, edx ; ret 0xe9fc
0x0000000000420692 : xchg eax, esi ; ret
0x00000000004149ae : xchg eax, esi ; ret 0xd284
0x0000000000413fef : xchg eax, esp ; or byte ptr [rsi - 0x39ee5546], dl ; ret
0x0000000000417cf3 : xchg eax, esp ; ret
0x0000000000407b2d : xchg eax, esp ; ret 0x8445
0x000000000041d1ca : xchg eax, esp ; ret 0xd284
0x00000000004363f9 : xchg eax, esp ; ret 0xe280
0x0000000000432c72 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x45b9
0x0000000000405bf0 : xlatb ; ret
0x000000000042673d : xlatb ; ret 0x8589
0x000000000042e2fa : xlatb ; ret 0x8d48
0x000000000040f1ee : xor al, byte ptr [rax] ; add cl, ch ; ret 0x1a
0x0000000000448ada : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x0000000000420c97 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000042e7aa : xor eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rcx]
0x000000000042e825 : xor eax, 0x85c70000 ; push rsp ; idiv edi ; call rbx
0x000000000041785d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
