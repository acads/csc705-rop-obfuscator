0x0000000000410c2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e609 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004168cb : add al, ah ; mov edi, edi ; call rax
0x0000000000416a1b : add al, al ; out -1, eax ; call qword ptr [rax]
0x000000000041688b : add al, al ; xchg edi, edi ; call rax
0x0000000000411dff : add al, byte ptr [rax] ; add bh, al ; mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x00000000004119be : add al, byte ptr [rax] ; add byte ptr [rbx + 0x3b2db045], cl ; ret
0x0000000000410523 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402cdb : add al, ch ; call qword ptr [rsi]
0x0000000000405075 : add al, ch ; cmc ; ret 0xffff
0x0000000000405002 : add al, ch ; ret
0x000000000041694b : add al, dh ; test al, -1 ; call rax
0x00000000004169db : add al, dl ; fdivp st(7) ; call qword ptr [rax]
0x0000000000411e01 : add bh, al ; mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x000000000041091e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000410686 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415b7f : add bl, dh ; ret
0x000000000041689b : add byte ptr [rax], ah ; mov bh, bh ; call qword ptr [rax]
0x0000000000405000 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000041091c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000410684 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415b7d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000415b7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400320 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000402b5e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000404940 : add byte ptr [rax], al ; add byte ptr [rbx + 0x102d9845], cl ; ret
0x0000000000411a09 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2db045], cl ; ret
0x000000000040e34e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412275 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2dd445], cl ; ret 0xdd89
0x00000000004048dc : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2d9845], cl ; ret
0x0000000000415269 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004151e5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000413eae : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040d201 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000415325 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000402e0a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004039f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040625d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402b0f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413a2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041081a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040623f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403a7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414b2d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040e60b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e070 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004146e8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410c2d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e5c7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000416c76 : add byte ptr [rax], al ; in al, -2 ; call qword ptr [rsi]
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000414b29 : add byte ptr [rax], al ; jmp 0x414b38
0x0000000000415799 : add byte ptr [rax], al ; jmp 0x4157a8
0x00000000004159a7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004053c9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405b29 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004167ca : add byte ptr [rax], al ; out -2, al ; call rax
0x0000000000402fdc : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e34f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e028 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415b7e : add byte ptr [rax], al ; ret
0x0000000000400326 : add byte ptr [rax], al ; ret 1
0x0000000000416a1a : add byte ptr [rax], al ; shl bh, -1 ; call qword ptr [rax]
0x0000000000417117 : add byte ptr [rax], bh ; test bh, bh ; jmp rdx
0x000000000041681b : add byte ptr [rax], dh ; idiv esi ; call qword ptr [rax]
0x0000000000416a0b : add byte ptr [rax], dh ; out -1, al ; call rax
0x0000000000404942 : add byte ptr [rbx + 0x102d9845], cl ; ret
0x00000000004118c6 : add byte ptr [rbx + 0x1a2db045], cl ; fidiv dword ptr [rdi] ; ret 0x8589
0x0000000000411911 : add byte ptr [rbx + 0x1b2db045], cl ; fidiv dword ptr [rdi] ; ret 0x8589
0x00000000004119c0 : add byte ptr [rbx + 0x3b2db045], cl ; ret
0x0000000000411a0b : add byte ptr [rbx + 0x3c2db045], cl ; ret
0x000000000040e350 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e029 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040458c : add byte ptr [rbx + 0x642d9845], cl ; pop rsi ; push rax ; ret 0x8589
0x00000000004045d7 : add byte ptr [rbx + 0x652d9845], cl ; pop rsi ; push rax ; ret 0x8589
0x0000000000412277 : add byte ptr [rbx + 0xd2dd445], cl ; ret 0xdd89
0x00000000004048de : add byte ptr [rbx + 0xf2d9845], cl ; ret
0x000000000041526b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004151e7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040463b : add byte ptr [rbx - 0x73d267bb], cl ; xlatb ; ret
0x00000000004045f0 : add byte ptr [rbx - 0x74d267bb], cl ; xlatb ; ret
0x0000000000404609 : add byte ptr [rbx - 0x8d267bb], cl ; jge 0x4045e9 ; ret 0x8589
0x00000000004045be : add byte ptr [rbx - 0x9d267bb], cl ; jge 0x40459e ; ret 0x8589
0x0000000000413eb0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040d203 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041096e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401778 : add byte ptr [rcx], al ; ret
0x0000000000415327 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000402e0c : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004039f2 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040625f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402b11 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413a2f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041081c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406241 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403a7e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b0d : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417113 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], bh ; test bh, bh ; jmp rdx
0x00000000004033d9 : add cl, ch ; ret
0x0000000000414b2f : add cl, ch ; ret 0
0x00000000004037da : add cl, ch ; ret 1
0x000000000040e5c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ecea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414a41 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401774 : add eax, 0x216cfe ; add ebx, esi ; ret
0x00000000004037d8 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040173b : add eax, edx ; sar rax, 1 ; jne 0x40174c ; pop rbp ; ret
0x0000000000401779 : add ebx, esi ; ret
0x00000000004019fb : add esp, 0x10 ; pop rbp ; ret
0x000000000041096c : add esp, 0x100 ; pop rbp ; ret
0x000000000040ece7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000412097 : add esp, 0x140 ; pop rbp ; ret
0x0000000000404d69 : add esp, 0x150 ; pop rbp ; ret
0x0000000000410adc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403ec7 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000040e073 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402fd8 : add esp, 0x260 ; pop rbp ; ret
0x00000000004141b3 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004146eb : add esp, 0x30 ; pop rbp ; ret
0x0000000000405537 : add esp, 0x40 ; pop rbp ; ret
0x00000000004019b6 : add esp, 0x50 ; pop rbp ; ret
0x00000000004050b6 : add esp, 0x60 ; pop rbp ; ret
0x00000000004043d2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040f53c : add esp, 0x80 ; pop rbp ; ret
0x000000000040427a : add esp, 0x90 ; pop rbp ; ret
0x00000000004058ee : add esp, 0xa0 ; pop rbp ; ret
0x0000000000412585 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040e024 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040173a : add rax, rdx ; sar rax, 1 ; jne 0x40174d ; pop rbp ; ret
0x00000000004019fa : add rsp, 0x10 ; pop rbp ; ret
0x000000000041096b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040ece6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000412096 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000404d68 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000410adb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403ec6 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000040e072 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402fd7 : add rsp, 0x260 ; pop rbp ; ret
0x00000000004141b2 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004146ea : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405536 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004019b5 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004050b5 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004043d1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040f53b : add rsp, 0x80 ; pop rbp ; ret
0x0000000000404279 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004058ed : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000412584 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040e023 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000414a40 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401777 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000404cf2 : and dword ptr [rbp - 0x28b67347], ecx ; ret
0x0000000000404cf1 : and dword ptr ds:[rbp - 0x28b67347], ecx ; ret
0x0000000000405071 : and eax, 0x618208 ; call 0x401377
0x0000000000404d8f : and eax, 0x618480 ; pop rbp ; ret
0x0000000000404db3 : and eax, 0x618488 ; pop rbp ; ret
0x0000000000402a6f : call 0x10ecf7
0x0000000000405076 : call 0x401372
0x000000000040e069 : call 0xffffffffe90369b9
0x000000000040e068 : call 0xffffffffe90369ba
0x0000000000409aad : call 0xfffffffff7392044
0x0000000000413c75 : call 0xffffffffff45c24a
0x000000000040c5d9 : call 0xffffffffff554bab
0x000000000040c5d8 : call 0xffffffffff554bac
0x000000000040c5d9 : call 0xffffffffff554bad
0x000000000040c5d8 : call 0xffffffffff554bae
0x0000000000402a44 : call 0xffffffffffffeccc
0x0000000000415b59 : call qword ptr [r12 + rbx*8]
0x000000000040b966 : call qword ptr [rax]
0x000000000040d5f5 : call qword ptr [rcx]
0x000000000040b593 : call qword ptr [rdx]
0x0000000000402cdd : call qword ptr [rsi]
0x0000000000415b5a : call qword ptr [rsp + rbx*8]
0x000000000040179d : call rax
0x0000000000409d4a : call rbx
0x00000000004171fb : call rdx
0x0000000000410924 : call rsi
0x00000000004151ec : cdq ; ret
0x0000000000412095 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x0000000000412ac2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004144c0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040173f : clc ; jne 0x401748 ; pop rbp ; ret
0x0000000000401a27 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412583 : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040c22d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000405077 : cmc ; ret 0xffff
0x000000000041327d : cmp al, -0x2a ; ret
0x00000000004050aa : cmp al, 0x25 ; or byte ptr [rdx - 0x4417ff9f], al ; ret 0xffff
0x0000000000405070 : cmp al, 0x25 ; or byte ptr [rdx - 0xa17ff9f], al ; ret 0xffff
0x0000000000411a10 : cmp al, 0x42 ; ret
0x00000000004016fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401710 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040e504 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000414ceb : cwde ; js 0x414c95 ; ret
0x0000000000414d32 : cwde ; js 0x414cdc ; ret
0x0000000000414d6c : cwde ; js 0x414d16 ; ret
0x0000000000402c2f : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x000000000040fce7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c3d2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040c6dd : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040dbe4 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004033d3 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff6], dl ; ret
0x000000000040f663 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040b718 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000413a2b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000403ab6 : enter 0x3b48, 0x45 ; ror byte ptr [rdi], -0x6e ; ret 0xd284
0x000000000040578d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411674 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404cce : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f519 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402a40 : fbstp dword ptr [rdi - 0x7e17aa75] ; ret 0xffbf
0x0000000000402a6b : fbstp dword ptr [rdi - 0x7e17aa75] ; ret 0xffd0
0x000000000040503d : fcmovb st(0), st(3) ; jmp 0x4050c4
0x00000000004169dd : fdivp st(7) ; call qword ptr [rax]
0x00000000004118cc : fidiv dword ptr [rdi] ; ret 0x8589
0x0000000000411e06 : fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000411224 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415b5c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019f9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041461c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401710 : hlt ; pop rbp ; mov edi, 0x618418 ; jmp rax
0x00000000004045c3 : idiv byte ptr [rbp - 0x30] ; ret 0x8589
0x0000000000404b1f : idiv dword ptr [rbp - 0x30] ; ret 0x72b9
0x000000000040460e : idiv dword ptr [rbp - 0x30] ; ret 0x8589
0x000000000041681d : idiv esi ; call qword ptr [rax]
0x000000000040ffbe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040bb89 : in al, -0x7f ; ret 0xff9f
0x000000000040bd6f : in al, -0x7f ; ret 0xffbf
0x000000000040be15 : in al, -0x7f ; ret 0xffc5
0x000000000040be43 : in al, -0x7f ; ret 0xffd5
0x000000000040bf11 : in al, -0x7f ; ret 0xffd8
0x000000000040c0a7 : in al, -0x7f ; ret 0xffe0
0x0000000000416c79 : in al, -2 ; call qword ptr [rsi]
0x0000000000402fd6 : in al, 0x48 ; add esp, 0x260 ; pop rbp ; ret
0x0000000000403a4f : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041282f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000404278 : in al, dx ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000404f9d : in al, dx ; jmp 0x4050c3
0x0000000000404f9c : in al, dx ; jmp 0x4050c4
0x0000000000405c3a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004153eb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d1ff : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040b7c1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ddaa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004028a0 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040ecb8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000401776 : insb byte ptr [rdi], dx ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040835f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040b99f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401703 : ja 0x40170a ; pop rbp ; ret
0x000000000040170f : je 0x40170d ; pop rbp ; mov edi, 0x618418 ; jmp rax
0x0000000000403a4e : jge 0x403a44 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403c27 : jge 0x403c1d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403e2c : jge 0x403e22 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004045c4 : jge 0x404598 ; ret 0x8589
0x000000000040460f : jge 0x4045e3 ; ret 0x8589
0x0000000000404b20 : jge 0x404af4 ; ret 0x72b9
0x000000000040fad8 : jge 0x40faef ; ret
0x000000000040ffc3 : jge 0x40ffda ; ret
0x0000000000411d05 : jge 0x411cef ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000415959 : jge 0x415953 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040f9ac : jl 0x40f9c3 ; ret
0x000000000041684d : jle 0x416850 ; call rax
0x0000000000416e99 : jle 0x416e9c ; jmp qword ptr [rdx]
0x000000000040138b : jmp 0x401307
0x0000000000404f9e : jmp 0x4050c2
0x000000000040b34d : jmp 0x40e033
0x000000000040dde1 : jmp 0x40e035
0x000000000040ffbd : jmp 0x410535
0x0000000000411cf4 : jmp 0x4120a7
0x0000000000414b2b : jmp 0x414b36
0x000000000041579b : jmp 0x4157a6
0x0000000000412afe : jmp 0xffffffffb7032eca
0x0000000000414cea : jmp 0xffffffffc3e5c58b
0x000000000040b46d : jmp qword ptr [rax]
0x000000000040c5df : jmp qword ptr [rbx]
0x000000000040dfb0 : jmp qword ptr [rcx]
0x000000000040e505 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000409ab6 : jmp qword ptr [rdx]
0x000000000040c56f : jmp qword ptr [rsi]
0x0000000000401717 : jmp rax
0x000000000040d102 : jmp rbx
0x000000000040d79e : jmp rdi
0x0000000000401757 : jmp rdx
0x000000000040d199 : jmp rsp
0x0000000000401740 : jne 0x401747 ; pop rbp ; ret
0x000000000040ecb6 : jne 0x40ecbf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004043d4 : jo 0x404435 ; ret
0x0000000000404cf0 : jo 0x404d38 ; and dword ptr [rbp - 0x28b67347], ecx ; ret
0x000000000040eed1 : jo 0x40ef32 ; ret
0x000000000040eff4 : jo 0x40f055 ; ret
0x000000000040f12e : jo 0x40f18f ; ret
0x00000000004112cc : jo 0x41132d ; ret
0x00000000004144c4 : jo 0x414525 ; ret
0x000000000040e026 : js 0x40e03a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000414cec : js 0x414c94 ; ret
0x0000000000414d33 : js 0x414cdb ; ret
0x0000000000414d6d : js 0x414d15 ; ret
0x0000000000416c19 : loope 0x416c1b ; call qword ptr [rsi]
0x0000000000402f20 : loopne 0x402f34 ; pushfq ; ret 0xd284
0x0000000000405ffe : loopne 0x406007 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411010 : loopne 0x411019 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041141c : loopne 0x41146c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041141b : loopne 0x41146d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000411d06 : loopne 0x411d4f ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041679d : mov ah, -2 ; call qword ptr [rax]
0x0000000000411e04 : mov ah, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000401bd0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000413c4a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411a0e : mov al, 0x2d ; cmp al, 0x42 ; ret
0x00000000004061bb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004167c8 : mov al, 4 ; add byte ptr [rax], al ; out -2, al ; call rax
0x0000000000414a3d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414bed : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004153e9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402a6c : mov bh, -0x75 ; push rbp ; call 0x10ecfa
0x0000000000402a41 : mov bh, -0x75 ; push rbp ; call 0xffffffffffffeccf
0x000000000041689d : mov bh, bh ; call qword ptr [rax]
0x0000000000404db1 : mov byte ptr [0x618488], al ; pop rbp ; ret
0x000000000040db78 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401773 : mov byte ptr [rip + 0x216cfe], 1 ; ret
0x0000000000414a43 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415515 : mov dl, -0x47 ; ret
0x000000000041678d : mov dl, -2 ; call rax
0x0000000000404d8d : mov dword ptr [0x618480], edi ; pop rbp ; ret
0x0000000000405e77 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405c3b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405daf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401bce : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004043ce : mov dword ptr [rbp - 0x6c], eax ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004019f7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a25 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040602d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404fff : mov eax, 0xe8000000 ; ret
0x0000000000405b2f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041135b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405533 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041103f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004053cc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041145e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410d30 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405e7a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041141a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405a24 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405b2c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405c35 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405db1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040eecb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041461a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412ac0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004144be : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041171d : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040179b : mov ebp, esp ; call rax
0x0000000000401701 : mov ebp, esp ; ja 0x40170c ; pop rbp ; ret
0x00000000004050b1 : mov ebx, 0x48ffffc2 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004019b1 : mov ebx, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405c38 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004045f5 : mov ecx, dword ptr [rcx - 0x29] ; ret
0x0000000000401795 : mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000401712 : mov edi, 0x618418 ; jmp rax
0x0000000000401752 : mov edi, 0x618418 ; jmp rdx
0x000000000040506f : mov edi, dword ptr [0x618208] ; call 0x401379
0x0000000000415b57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004168cd : mov edi, edi ; call rax
0x0000000000415b56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401750 : mov esi, eax ; mov edi, 0x618418 ; jmp rdx
0x0000000000404d8c : mov qword ptr [0x618480], rdi ; pop rbp ; ret
0x000000000040602c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411e03 : mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000401bcf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000411a0d : mov r8b, 0x2d ; cmp al, 0x42 ; ret
0x000000000041135a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405532 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041103e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004053cb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041145d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410d2f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411419 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405a23 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405b2b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040eeca : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040179a : mov rbp, rsp ; call rax
0x0000000000401700 : mov rbp, rsp ; ja 0x40170d ; pop rbp ; ret
0x000000000040174f : mov rsi, rax ; mov edi, 0x618418 ; jmp rdx
0x000000000040ecba : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040ecbb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000404640 : mov word ptr [rcx - 0x29], cs ; ret
0x000000000040c40c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041578e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040ffbc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x410536
0x0000000000414ced : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000414a42 : movzx eax, al ; pop rbp ; ret
0x0000000000415b78 : nop dword ptr [rax + rax] ; ret
0x00000000004169d9 : or al, 0 ; add al, dl ; fdivp st(7) ; call qword ptr [rax]
0x000000000040e027 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416949 : or al, byte ptr [rax] ; add al, dh ; test al, -1 ; call rax
0x00000000004033d7 : or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004168c9 : or byte ptr [rax], al ; add al, ah ; mov edi, edi ; call rax
0x00000000004050ac : or byte ptr [rdx - 0x4417ff9f], al ; ret 0xffff
0x0000000000405072 : or byte ptr [rdx - 0xa17ff9f], al ; ret 0xffff
0x000000000040f667 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040f0b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416a0d : out -1, al ; call rax
0x0000000000416a1d : out -1, eax ; call qword ptr [rax]
0x00000000004167cd : out -2, al ; call rax
0x0000000000414bef : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414a3f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004037d7 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000415b6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415b6e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e352 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415b70 : pop r14 ; pop r15 ; ret
0x000000000040e354 : pop r15 ; pop rbp ; ret
0x0000000000415b72 : pop r15 ; ret
0x0000000000415268 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401772 : pop rbp ; mov byte ptr [rip + 0x216cfe], 1 ; ret
0x0000000000401711 : pop rbp ; mov edi, 0x618418 ; jmp rax
0x000000000040174e : pop rbp ; mov rsi, rax ; mov edi, 0x618418 ; jmp rdx
0x0000000000415b6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415b6f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401705 : pop rbp ; ret
0x000000000040e351 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e02a : pop rbx ; pop rbp ; ret
0x0000000000415514 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040e355 : pop rdi ; pop rbp ; ret
0x0000000000415b73 : pop rdi ; ret
0x000000000041595b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e353 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415b71 : pop rsi ; pop r15 ; ret
0x0000000000404592 : pop rsi ; push rax ; ret 0x8589
0x00000000004049aa : pop rsi ; push rax ; ret 0x8948
0x0000000000415b6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408262 : pop rsp ; ret
0x0000000000415329 : popfq ; ret 0xd284
0x0000000000416a07 : push qword ptr [rax + 0x3000000d] ; out -1, al ; call rax
0x00000000004167c7 : push qword ptr [rax + 0x40000004] ; out -2, al ; call rax
0x00000000004168c7 : push qword ptr [rax - 0x1ffffff8] ; mov edi, edi ; call rax
0x0000000000416887 : push qword ptr [rax - 0x3ffffff9] ; xchg edi, edi ; call rax
0x0000000000416787 : push qword ptr [rax - 0x5ffffffd] ; mov dl, -2 ; call rax
0x0000000000416847 : push qword ptr [rax - 0x7ffffffa] ; jle 0x416856 ; call rax
0x0000000000416947 : push qword ptr [rax - 0xffffff6] ; test al, -1 ; call rax
0x000000000040da4f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004169d7 : push rax ; or al, 0 ; add al, dl ; fdivp st(7) ; call qword ptr [rax]
0x00000000004019b8 : push rax ; pop rbp ; ret
0x0000000000404593 : push rax ; ret 0x8589
0x00000000004049ab : push rax ; ret 0x8948
0x000000000041091b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000402a6e : push rbp ; call 0x10ecf8
0x0000000000402a43 : push rbp ; call 0xffffffffffffeccd
0x0000000000411223 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040bb88 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040bd6e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040be14 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040be42 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040bf10 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040c0a6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401794 : push rbp ; mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000402bd2 : push rcx ; ret 0x485e
0x00000000004024e8 : push rcx ; ret 0x895e
0x0000000000402a3f : push rsi ; fbstp dword ptr [rdi - 0x7e17aa75] ; ret 0xffbf
0x0000000000402a6a : push rsi ; fbstp dword ptr [rdi - 0x7e17aa75] ; ret 0xffd0
0x0000000000413eb3 : pushfq ; ret 0x8445
0x0000000000402e0e : pushfq ; ret 0xd284
0x00000000004012f9 : ret
0x000000000040e509 : ret 0
0x0000000000413059 : ret 0x10
0x000000000041541b : ret 0x2030
0x0000000000401592 : ret 0x216b
0x0000000000401392 : ret 0x216c
0x000000000040b567 : ret 0x2a
0x000000000040e886 : ret 0x2c1
0x000000000040d1e0 : ret 0x3ae8
0x00000000004084ca : ret 0x43fa
0x0000000000402bd3 : ret 0x485e
0x00000000004040e4 : ret 0x5589
0x00000000004147c3 : ret 0x5e5
0x0000000000404b22 : ret 0x72b9
0x00000000004028a4 : ret 0x8445
0x0000000000404594 : ret 0x8589
0x0000000000408360 : ret 0x891a
0x0000000000414dcc : ret 0x8934
0x00000000004049ac : ret 0x8948
0x00000000004024e9 : ret 0x895e
0x0000000000412b01 : ret 0x89b6
0x0000000000414da8 : ret 0x8b34
0x0000000000402cb7 : ret 0x8b48
0x0000000000402c32 : ret 0x8d8b
0x0000000000411e08 : ret 0x91e9
0x000000000040c235 : ret 0xa9b9
0x0000000000407cb2 : ret 0xade6
0x0000000000402d5f : ret 0xb0
0x000000000040b9a0 : ret 0xb91a
0x0000000000412dbb : ret 0xb9b6
0x0000000000401735 : ret 0xc148
0x0000000000402b14 : ret 0xd284
0x000000000040da53 : ret 0xd4e9
0x00000000004120cd : ret 0xdd89
0x000000000040e06c : ret 0xee8
0x000000000040c415 : ret 0xf41
0x000000000041026a : ret 0xff11
0x000000000040bb8b : ret 0xff9f
0x000000000040d52e : ret 0xffa5
0x0000000000402a46 : ret 0xffbf
0x000000000040c7db : ret 0xffc4
0x000000000040be17 : ret 0xffc5
0x0000000000402a71 : ret 0xffd0
0x000000000040be45 : ret 0xffd5
0x000000000040bf13 : ret 0xffd8
0x000000000040c881 : ret 0xffd9
0x000000000040c0a9 : ret 0xffe0
0x000000000040b17e : ret 0xfffa
0x0000000000405078 : ret 0xffff
0x0000000000400328 : ret 1
0x000000000040c6e0 : ret 2
0x000000000040db67 : ret 4
0x000000000040f698 : ret 5
0x000000000040e250 : ret 8
0x0000000000413ba4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004141b5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405c36 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000403ab9 : ror byte ptr [r15], -0x6e ; ret 0xd284
0x000000000040173c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40174b ; pop rbp ; ret
0x0000000000405c37 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000403aba : ror byte ptr [rdi], -0x6e ; ret 0xd284
0x0000000000411220 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004039f4 : sahf ; ret 0xd284
0x000000000041327e : salc ; ret
0x000000000040173e : sar eax, 1 ; jne 0x401749 ; pop rbp ; ret
0x000000000040173d : sar rax, 1 ; jne 0x40174a ; pop rbp ; ret
0x0000000000402a3e : sbb al, 0x56 ; fbstp dword ptr [rdi - 0x7e17aa75] ; ret 0xffbf
0x0000000000402a69 : sbb al, 0x56 ; fbstp dword ptr [rdi - 0x7e17aa75] ; ret 0xffd0
0x000000000040ece9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410e03 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c22e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000416a1c : shl bh, -1 ; call qword ptr [rax]
0x0000000000409277 : sub al, 0x38 ; ret 0x8589
0x000000000040c233 : sub al, 0x38 ; ret 0xa9b9
0x0000000000402bd1 : sub al, 0x51 ; ret 0x485e
0x00000000004027f7 : sub al, 0x51 ; ret 0x895e
0x0000000000402d15 : sub edx, dword ptr [rbx + rax*4 - 0x17] ; ret
0x0000000000415bad : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000415bac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041093b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041694d : test al, -1 ; call rax
0x0000000000413ff8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040eecd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000410818 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417119 : test bh, bh ; jmp rdx
0x0000000000415b7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004033d5 : test byte ptr [rbx - 0x16fffff6], dl ; ret
0x0000000000401714 : test byte ptr [rcx], ah ; jmp rax
0x0000000000401754 : test byte ptr [rcx], ah ; jmp rdx
0x0000000000404d91 : test byte ptr [rcx], ah ; pop rbp ; ret
0x000000000040f665 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000410920 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000410688 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041685d : test edi, edi ; call qword ptr [rax]
0x0000000000406261 : xchg eax, ebp ; ret
0x00000000004028a3 : xchg eax, ebp ; ret 0x8445
0x0000000000402b13 : xchg eax, ebp ; ret 0xd284
0x00000000004033d6 : xchg eax, ebx ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000040925b : xchg eax, ecx ; ret
0x0000000000413a31 : xchg eax, edi ; ret 0xd284
0x00000000004093ab : xchg eax, edx ; ret
0x0000000000403abc : xchg eax, edx ; ret 0xd284
0x000000000040ebe2 : xchg eax, esi ; ret
0x00000000004043d0 : xchg eax, esp ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406243 : xchg eax, esp ; ret
0x000000000040d206 : xchg eax, esp ; ret 0x8445
0x0000000000403a80 : xchg eax, esp ; ret 0xd284
0x00000000004043cf : xchg eax, r12d ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041688d : xchg edi, edi ; call rax
0x00000000004045f7 : xlatb ; ret
0x000000000040f1e7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405dad : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
