0x00000000004019af : adc al, 0x25 ; ret
0x0000000000402c88 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004115ab : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ef89 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004109d4 : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x415e
0x00000000004163eb : add al, ah ; out -1, eax ; jmp qword ptr [rax]
0x000000000041631b : add al, al ; mov bl, -1 ; jmp rax
0x00000000004166f7 : add al, bh ; idiv dh ; call rdx
0x00000000004166f5 : add al, byte ptr [rax] ; add al, bh ; idiv dh ; call rdx
0x0000000000410ea3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004166f4 : add al, byte ptr fs:[rax] ; add al, bh ; idiv dh ; call rdx
0x000000000041622b : add al, dl ; mov bh, bh ; jmp qword ptr [rax]
0x000000000041129e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411006 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004161ed : add bh, bh ; jmp qword ptr [rax]
0x00000000004156ff : add bl, dh ; ret
0x00000000004019ab : add byte ptr [r8 - 0x73], cl ; adc al, 0x25 ; ret
0x00000000004025ab : add byte ptr [r8], al ; add byte ptr [rbx - 0x51d267bb], cl ; ret 0x713c
0x00000000004019ac : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x00000000004109d6 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x415e
0x0000000000402a33 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041621b : add byte ptr [rax], ah ; or bh, bh ; jmp rax
0x00000000004166f2 : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add al, bh ; idiv dh ; call rdx
0x000000000041129c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411004 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004156fd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402a31 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004156fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040493f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402ae5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004156fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ecce : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401d91 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6e2d9845], cl ; ret 0xa7f4
0x00000000004025ac : add byte ptr [rax], al ; add byte ptr [rbx - 0x51d267bb], cl ; ret 0x713c
0x0000000000401c26 : add byte ptr [rax], al ; add byte ptr [rbx - 0x52d267bb], cl ; ret 0x713c
0x0000000000414de9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000414d65 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004141fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040db81 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000414ea5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404ea6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004146e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000406bdd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402a0a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404d4f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041119a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406bbf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402ae7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004146ad : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040ef8b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e9f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405eb5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004115ad : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ef47 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403b6a : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004012bb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004166f6 : add byte ptr [rax], al ; clc ; idiv dh ; call rdx
0x00000000004013b9 : add byte ptr [rax], al ; jmp 0x4012d9
0x000000000040376b : add byte ptr [rax], al ; jmp 0x40390e
0x00000000004146a9 : add byte ptr [rax], al ; jmp 0x4146b8
0x0000000000415319 : add byte ptr [rax], al ; jmp 0x415328
0x0000000000415527 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405c29 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004064a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004161ea : add byte ptr [rax], al ; nop ; add bh, bh ; jmp qword ptr [rax]
0x000000000041632a : add byte ptr [rax], al ; nop ; mov ch, -1 ; jmp qword ptr [rax]
0x0000000000402c8a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040eccf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e9a8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004163da : add byte ptr [rax], al ; push rax ; out -1, al ; jmp rax
0x00000000004156fe : add byte ptr [rax], al ; ret
0x00000000004163aa : add byte ptr [rax], al ; rol bh, -1 ; jmp qword ptr [rax]
0x000000000040ecd0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e9a9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401d48 : add byte ptr [rbx + 0x6d2d9845], cl ; ret 0xa7f4
0x0000000000401d93 : add byte ptr [rbx + 0x6e2d9845], cl ; ret 0xa7f4
0x0000000000404df0 : add byte ptr [rbx - 0x2634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404f13 : add byte ptr [rbx - 0x2674b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004025ae : add byte ptr [rbx - 0x51d267bb], cl ; ret 0x713c
0x0000000000401c28 : add byte ptr [rbx - 0x52d267bb], cl ; ret 0x713c
0x0000000000414deb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000414d67 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000416328 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; nop ; mov ch, -1 ; jmp qword ptr [rax]
0x0000000000414200 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040db83 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000402b2f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004112ee : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x0000000000414ea7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404ea8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004146ea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000406bdf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402a0c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404d51 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041119c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406bc1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402ae9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004166f3 : add byte ptr [rdx + rax], ah ; add al, bh ; idiv dh ; call rdx
0x00000000004161e8 : add byte ptr [rsi], al ; add byte ptr [rax], al ; nop ; add bh, bh ; jmp qword ptr [rax]
0x0000000000402031 : add cl, ch ; ret
0x00000000004146af : add cl, ch ; ret 0
0x0000000000402f66 : add cl, ch ; ret 1
0x000000000040ef45 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f66a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004145c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x216bae ; add ebx, esi ; ret
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x00000000004112ec : add esp, 0x100 ; pop rbp ; ret
0x000000000040f667 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004034a8 : add esp, 0x120 ; pop rbp ; ret
0x000000000041145c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000405ddd : add esp, 0x20 ; pop rbp ; ret
0x0000000000402c86 : add esp, 0x210 ; pop rbp ; ret
0x0000000000404f6a : add esp, 0x270 ; pop rbp ; ret
0x0000000000414503 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000405eb8 : add esp, 0x30 ; pop rbp ; ret
0x0000000000401914 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401b32 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403b6d : add esp, 0x60 ; pop rbp ; ret
0x000000000040f84f : add esp, 0x70 ; pop rbp ; ret
0x000000000040febc : add esp, 0x80 ; pop rbp ; ret
0x0000000000413222 : add esp, 0x90 ; pop rbp ; ret
0x000000000040626e : add esp, 0xa0 ; pop rbp ; ret
0x00000000004038fe : add esp, 0xb0 ; pop rbp ; ret
0x000000000040e9a4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004055b4 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004012be : add esp, 8 ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004112eb : add rsp, 0x100 ; pop rbp ; ret
0x000000000040f666 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004034a7 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041145b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000405ddc : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c85 : add rsp, 0x210 ; pop rbp ; ret
0x0000000000404f69 : add rsp, 0x270 ; pop rbp ; ret
0x0000000000414502 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000405eb7 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401913 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b31 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403b6c : add rsp, 0x60 ; pop rbp ; ret
0x000000000040f84e : add rsp, 0x70 ; pop rbp ; ret
0x000000000040febb : add rsp, 0x80 ; pop rbp ; ret
0x0000000000413221 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040626d : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004038fd : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040e9a3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004055b3 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004012bd : add rsp, 8 ; ret
0x00000000004145c0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004034aa : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401727 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040493d : and dword ptr [rcx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004055f1 : and dword ptr [rcx], 0x5d ; ret
0x000000000040533a : and eax, 0x618318 ; mov al, 0 ; call 0x4015e9
0x00000000004055ef : and eax, 0x618328 ; pop rbp ; ret
0x0000000000405613 : and eax, 0x618330 ; pop rbp ; ret
0x0000000000405341 : call 0x4015e2
0x000000000040e9e9 : call 0xffffffffe9037339
0x000000000040e9e8 : call 0xffffffffe903733a
0x000000000040a42d : call 0xfffffffff73929c4
0x0000000000413fc5 : call 0xffffffffff45c59a
0x000000000040cf59 : call 0xffffffffff55552b
0x000000000040cf58 : call 0xffffffffff55552c
0x000000000040cf59 : call 0xffffffffff55552d
0x000000000040cf58 : call 0xffffffffff55552e
0x00000000004156d9 : call qword ptr [r12 + rbx*8]
0x000000000040c2e6 : call qword ptr [rax]
0x000000000040df75 : call qword ptr [rcx]
0x000000000040bf13 : call qword ptr [rdx]
0x000000000040beaf : call qword ptr [rsi]
0x00000000004156da : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x000000000040a6ca : call rbx
0x00000000004166fb : call rdx
0x00000000004112a4 : call rsi
0x0000000000414d6c : cdq ; ret
0x0000000000412e12 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412260 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004166f8 : clc ; idiv dh ; call rdx
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x00000000004055d6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401987 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cbad : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004135cd : cmp al, -0x2a ; ret
0x00000000004109d9 : cmp al, 0x25 ; ret 0x415e
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x000000000040ee84 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041486b : cwde ; js 0x414815 ; ret
0x00000000004148b2 : cwde ; js 0x41485c ; ret
0x00000000004148ec : cwde ; js 0x414896 ; ret
0x0000000000404df6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040cd52 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040d05d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040e564 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004041a6 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffa], dl ; ret
0x000000000040ffe3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040c098 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000413d7b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040610d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412884 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404ea4 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040fe99 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411ba4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004156dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404c39 : fmul qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404adc : fmul qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404f48 : fmul qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004052f3 : fsub st(1), st(0) ; ret
0x0000000000403aaa : fsub st(1), st(0) ; ret 0
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004123bc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x618268 ; jmp rax
0x00000000004166f9 : idiv dh ; call rdx
0x000000000041093e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004052d4 : imul ebp, dword ptr [rcx + 0x78], -0x47 ; ret
0x0000000000404caf : imul ecx, dword ptr [rax - 0x75], 0x55 ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000401726 : imul esp, dword ptr [rcx], 0 ; add ebx, esi ; ret
0x000000000040c509 : in al, -0x7f ; ret 0xff9f
0x000000000040c6ef : in al, -0x7f ; ret 0xffbf
0x000000000040c795 : in al, -0x7f ; ret 0xffc5
0x000000000040c7c3 : in al, -0x7f ; ret 0xffd5
0x000000000040c891 : in al, -0x7f ; ret 0xffd8
0x000000000040ca27 : in al, -0x7f ; ret 0xffe0
0x000000000041271a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000404cae : in al, dx ; imul ecx, dword ptr [rax - 0x75], 0x55 ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004065ba : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000414f6b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040db7f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040c141 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e72a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040263a : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000416317 : inc eax ; or al, byte ptr [rax] ; add al, al ; mov bl, -1 ; jmp rax
0x000000000040f638 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000404ede : insb byte ptr [rdi], dx ; mov ebx, 0x3d ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000408cdf : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000401d4d : insd dword ptr [rdi], dx ; ret 0xa7f4
0x000000000040c31f : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x618268 ; jmp rax
0x0000000000410458 : jge 0x41046f ; ret
0x0000000000410943 : jge 0x41095a ; ret
0x00000000004154d9 : jge 0x4154d3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041032c : jl 0x410343 ; ret
0x00000000004013bb : jmp 0x4012d7
0x000000000040376d : jmp 0x40390c
0x000000000040542a : jmp 0x4055c4
0x000000000040bccd : jmp 0x40e9b3
0x000000000040e761 : jmp 0x40e9b5
0x000000000041093d : jmp 0x410eb5
0x00000000004109d2 : jmp 0x410eb6
0x00000000004146ab : jmp 0x4146b6
0x000000000041531b : jmp 0x415326
0x0000000000412e4e : jmp 0xffffffffb703321a
0x000000000041486a : jmp 0xffffffffc3e5c10b
0x000000000040bded : jmp qword ptr [rax]
0x000000000040cf5f : jmp qword ptr [rbx]
0x000000000040e930 : jmp qword ptr [rcx]
0x000000000040ee85 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040a436 : jmp qword ptr [rdx]
0x000000000040ceef : jmp qword ptr [rsi]
0x00000000004016c7 : jmp rax
0x000000000040da82 : jmp rbx
0x000000000040e11e : jmp rdi
0x0000000000401707 : jmp rdx
0x000000000040db19 : jmp rsp
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x000000000040f636 : jne 0x40f63f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000404f6c : jo 0x404f75 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f851 : jo 0x40f8b2 ; ret
0x000000000040f974 : jo 0x40f9d5 ; ret
0x000000000040faae : jo 0x40fb0f ; ret
0x0000000000411c4c : jo 0x411cad ; ret
0x0000000000412264 : jo 0x4122c5 ; ret
0x00000000004052d6 : js 0x405293 ; ret
0x000000000040e9a6 : js 0x40e9ba ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041486c : js 0x414814 ; ret
0x00000000004148b3 : js 0x41485b ; ret
0x00000000004148ed : js 0x414895 ; ret
0x0000000000401c2d : lodsd eax, dword ptr [rsi] ; ret 0x713c
0x0000000000405ddb : loopne 0x405e2b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405dda : loopne 0x405e2c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040697e : loopne 0x406987 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411990 : loopne 0x411999 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411d9c : loopne 0x411dec ; add esp, 0x40 ; pop rbp ; ret
0x0000000000411d9b : loopne 0x411ded ; add esp, 0x40 ; pop rbp ; ret
0x0000000000411f4c : loopne 0x411f9c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000411f4b : loopne 0x411f9d ; add esp, 0x40 ; pop rbp ; ret
0x000000000040352c : mov ah, 0x2d ; ret 0xcf7e
0x0000000000401b30 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404d2b : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413f9a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403900 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040533f : mov al, 0 ; call 0x4015e4
0x0000000000406b3b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000404d4d : mov al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004145bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041476d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414f69 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041622d : mov bh, bh ; jmp qword ptr [rax]
0x000000000041631d : mov bl, -1 ; jmp rax
0x0000000000405611 : mov byte ptr [0x618330], al ; pop rbp ; ret
0x000000000040e4f8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004055d7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401723 : mov byte ptr [rip + 0x216bae], 1 ; ret
0x000000000041632d : mov ch, -1 ; jmp qword ptr [rax]
0x00000000004145c3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415095 : mov dl, -0x47 ; ret
0x00000000004055ed : mov dword ptr [0x618328], edi ; pop rbp ; ret
0x00000000004067f7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004065bb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040672f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000405dd9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b2e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401985 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004069ad : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004064af : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411cdb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d93 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004119bf : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405c2c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411dde : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004116b0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004067fa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411d9a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004063a4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004064ac : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004065b5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406731 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040f84b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004123ba : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412e10 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041225e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x0000000000404edf : mov ebx, 0x3d ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004065b8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403505 : mov ecx, dword ptr [rcx - 0x7bf053bb] ; ret
0x0000000000401745 : mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x618268 ; jmp rax
0x0000000000401702 : mov edi, 0x618268 ; jmp rdx
0x00000000004156d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004156d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401700 : mov esi, eax ; mov edi, 0x618268 ; jmp rdx
0x00000000004055ec : mov qword ptr [0x618328], rdi ; pop rbp ; ret
0x00000000004069ac : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040352b : mov r12b, 0x2d ; ret 0xcf7e
0x0000000000401b2f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000411cda : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d92 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004119be : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405c2b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411ddd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004116af : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411d99 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004063a3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004064ab : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f84a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x00000000004016ff : mov rsi, rax ; mov edi, 0x618268 ; jmp rdx
0x000000000040f63a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040f63b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040cd8c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000416394 : movabs al, byte ptr [0x7000000cc0ffffc2] ; ret
0x000000000041530e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041093c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x410eb6
0x000000000041486d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000404cad : movsxd rbp, esp ; imul ecx, dword ptr [rax - 0x75], 0x55 ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004145c2 : movzx eax, al ; pop rbp ; ret
0x00000000004055da : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004161ec : nop ; add bh, bh ; jmp qword ptr [rax]
0x000000000041632c : nop ; mov ch, -1 ; jmp qword ptr [rax]
0x00000000004156f8 : nop dword ptr [rax + rax] ; ret
0x000000000040e9a7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416319 : or al, byte ptr [rax] ; add al, al ; mov bl, -1 ; jmp rax
0x000000000041621d : or bh, bh ; jmp rax
0x0000000000401d46 : or byte ptr [rax], al ; add byte ptr [rbx + 0x6d2d9845], cl ; ret 0xa7f4
0x000000000040ffe7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040fa31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004163dd : out -1, al ; jmp rax
0x00000000004163ed : out -1, eax ; jmp qword ptr [rax]
0x000000000041476f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004145bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401d98 : outsb dx, byte ptr [rsi] ; ret 0xa7f4
0x0000000000403504 : outsd dx, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 0x7bf053bb] ; ret
0x00000000004156ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004156ee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ecd2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004156f0 : pop r14 ; pop r15 ; ret
0x000000000040ecd4 : pop r15 ; pop rbp ; ret
0x00000000004156f2 : pop r15 ; ret
0x0000000000414de8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000404b44 : pop rax ; xor cl, byte ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x216bae], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x618268 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x618268 ; jmp rdx
0x00000000004156eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004156ef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x000000000040ecd1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e9aa : pop rbx ; pop rbp ; ret
0x00000000004019aa : pop rcx ; add byte ptr [r8 - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000415094 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040ecd5 : pop rdi ; pop rbp ; ret
0x00000000004156f3 : pop rdi ; ret
0x00000000004154db : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040ecd3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004156f1 : pop rsi ; pop r15 ; ret
0x00000000004156ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408be2 : pop rsp ; ret
0x0000000000414ea9 : popfq ; ret 0xd284
0x000000000040e3cf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004163dc : push rax ; out -1, al ; jmp rax
0x0000000000401b34 : push rax ; pop rbp ; ret
0x000000000041129b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411ba3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040c508 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040c6ee : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040c794 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040c7c2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040c890 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040ca26 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401744 : push rbp ; mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000404b48 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000414203 : pushfq ; ret 0x8445
0x0000000000404eaa : pushfq ; ret 0xd284
0x00000000004012c1 : ret
0x0000000000403aac : ret 0
0x00000000004133a9 : ret 0x10
0x0000000000414f9b : ret 0x2030
0x00000000004015c2 : ret 0x216b
0x00000000004013c2 : ret 0x216c
0x000000000040bee7 : ret 0x2a
0x000000000040f206 : ret 0x2c1
0x00000000004109db : ret 0x415e
0x0000000000408e4a : ret 0x43fa
0x0000000000412563 : ret 0x5e5
0x0000000000401c2e : ret 0x713c
0x000000000040263e : ret 0x8445
0x0000000000409bf9 : ret 0x8589
0x0000000000408ce0 : ret 0x891a
0x000000000041494c : ret 0x8934
0x0000000000411ba7 : ret 0x8948
0x0000000000412e51 : ret 0x89b6
0x0000000000414928 : ret 0x8b34
0x000000000040db45 : ret 0x8b48
0x0000000000401d4e : ret 0xa7f4
0x000000000040cbb5 : ret 0xa9b9
0x0000000000408632 : ret 0xade6
0x0000000000402a36 : ret 0xb0
0x000000000040509a : ret 0xb5f3
0x000000000040c320 : ret 0xb91a
0x000000000041310b : ret 0xb9b6
0x00000000004016e5 : ret 0xc148
0x000000000040db60 : ret 0xcae8
0x000000000040352e : ret 0xcf7e
0x0000000000402a0f : ret 0xd284
0x000000000040e3d3 : ret 0xd4e9
0x000000000040e9ec : ret 0xee8
0x000000000040cd95 : ret 0xf41
0x000000000040c50b : ret 0xff9f
0x000000000040deae : ret 0xffa5
0x000000000040c6f1 : ret 0xffbf
0x000000000040d15b : ret 0xffc4
0x000000000040c797 : ret 0xffc5
0x000000000040c7c5 : ret 0xffd5
0x000000000040c893 : ret 0xffd8
0x000000000040d201 : ret 0xffd9
0x000000000040ca29 : ret 0xffe0
0x000000000040bafe : ret 0xfffa
0x0000000000405343 : ret 0xffff
0x0000000000402f68 : ret 1
0x000000000040d060 : ret 2
0x000000000040e4e7 : ret 4
0x0000000000410018 : ret 5
0x0000000000403f38 : ret 6
0x000000000040ebd0 : ret 8
0x00000000004163ac : rol bh, -1 ; jmp qword ptr [rax]
0x0000000000413ef4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004055b6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414505 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004161d8 : rol byte ptr [rip - 0x2600000], -2 ; jmp rax
0x0000000000416218 : rol byte ptr [rsi], 0 ; add byte ptr [rax], ah ; or bh, bh ; jmp rax
0x00000000004065b6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x0000000000404b49 : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004065b7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416318 : ror byte ptr [rdx], 0 ; add al, al ; mov bl, -1 ; jmp rax
0x00000000004163d8 : ror byte ptr [rip - 0x19b00000], -1 ; jmp rax
0x0000000000411ba0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004146ec : sahf ; ret 0xd284
0x00000000004109d3 : salc ; add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x415e
0x00000000004135ce : salc ; ret
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x000000000040533b : sbb byte ptr [rbx + 0xb00061], al ; call 0x4015e8
0x000000000040f669 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411783 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cbae : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040190f : sbb eax, 0x48fffffd ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401725 : scasb al, byte ptr [rdi] ; imul esp, dword ptr [rcx], 0 ; add ebx, esi ; ret
0x00000000004025b3 : scasb al, byte ptr [rdi] ; ret 0x713c
0x0000000000409bf7 : sub al, 0x38 ; ret 0x8589
0x000000000040cbb3 : sub al, 0x38 ; ret 0xa9b9
0x000000000041572d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041572c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004112bb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000414348 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f84d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000411198 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004156fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004041a8 : test byte ptr [rdx - 0x16fffffa], dl ; ret
0x000000000040ffe5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004112a0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411008 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000406be1 : xchg eax, ebp ; ret
0x000000000040263d : xchg eax, ebp ; ret 0x8445
0x0000000000402a0e : xchg eax, ebp ; ret 0xd284
0x0000000000409bdb : xchg eax, ecx ; ret
0x00000000004019a9 : xchg eax, edi ; pop rcx ; add byte ptr [r8 - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000404d53 : xchg eax, edi ; ret 0xd284
0x0000000000409d2b : xchg eax, edx ; ret
0x000000000041119e : xchg eax, edx ; ret 0xd284
0x000000000040f562 : xchg eax, esi ; ret
0x0000000000406bc3 : xchg eax, esp ; ret
0x000000000040db86 : xchg eax, esp ; ret 0x8445
0x0000000000402aeb : xchg eax, esp ; ret 0xd284
0x0000000000404b45 : xor cl, byte ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040fb67 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040672d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
