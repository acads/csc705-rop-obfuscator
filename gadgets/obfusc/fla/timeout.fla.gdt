0x0000000000425109 : adc al, byte ptr [rax] ; add al, ah ; sar bh, cl ; call rax
0x0000000000424fdd : adc bh, bh ; call qword ptr [rax]
0x0000000000405b4b : adc byte ptr [rbp - 0x10], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ce9 : adc byte ptr [rbp - 0x18], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403aa4 : adc ch, byte ptr [rcx + rbp*2 - 0x17] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415e5b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425149 : adc eax, dword ptr [rax] ; add al, dh ; fcos ; call rax
0x0000000000411e99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424fcd : adc edi, edi ; call rax
0x00000000004253e3 : add ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; std ; call rdi
0x0000000000425b69 : add al, -1 ; call rdx
0x0000000000424d89 : add al, 0 ; add al, dh ; sar ch, cl ; call rax
0x0000000000424d99 : add al, 0 ; add byte ptr [rax - 0x2b], al ; std ; call qword ptr [rax]
0x00000000004256a5 : add al, 0 ; add byte ptr [rax], ch ; ret 0xfffe
0x0000000000419eb3 : add al, 0 ; add cl, ch ; ret 1
0x0000000000424fdb : add al, ah ; adc bh, bh ; call qword ptr [rax]
0x0000000000424f4b : add al, ah ; fdiv st(6), st(0) ; call rax
0x000000000042510b : add al, ah ; sar bh, cl ; call rax
0x00000000004176ef : add al, byte ptr [rax] ; add bh, al ; mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000403aa8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004172ae : add al, byte ptr [rax] ; add byte ptr [rbx + 0x3b2db045], cl ; ret
0x0000000000415753 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408ff8 : add al, ch ; ret 0xff8e
0x00000000004260a7 : add al, ch ; ret 0xffff
0x0000000000425e07 : add al, cl ; sub edi, edi ; jmp rax
0x000000000042514b : add al, dh ; fcos ; call rax
0x0000000000424d8b : add al, dh ; sar ch, cl ; call rax
0x000000000042500b : add al, dh ; sbb bh, bh ; call rax
0x000000000041a306 : add bh, al ; in al, dx ; int1 ; ret
0x00000000004176f1 : add bh, al ; mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000415b4e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004158b6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041e878 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041eabb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041e84d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000423dcf : add bl, dh ; ret
0x000000000041f6d9 : add byte ptr [r8], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000424d9b : add byte ptr [rax - 0x2b], al ; std ; call qword ptr [rax]
0x000000000041f6c5 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041a5db : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000416acd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x75], 1 ; jge 0x416ac7 ; call rax
0x00000000004253e7 : add byte ptr [rax - 9], cl ; std ; call rdi
0x0000000000424ecb : add byte ptr [rax], ah ; fdivr st(6) ; call rax
0x0000000000424ddb : add byte ptr [rax], ah ; idiv ebp ; call qword ptr [rax]
0x0000000000424f8b : add byte ptr [rax], ah ; in al, -2 ; call rax
0x0000000000424fcb : add byte ptr [rax], al ; adc edi, edi ; call rax
0x0000000000415b4c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004158b4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041e876 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041eab9 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000423dcd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041f6c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041a5d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000423dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004038ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004035dd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405570 : add byte ptr [rax], al ; add byte ptr [rbx + 0x102d9845], cl ; ret
0x0000000000404764 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2dec45], cl ; ret 0xd7ed
0x0000000000423234 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x00000000004172f9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2db045], cl ; ret
0x0000000000411bde : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417b65 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2dd445], cl ; ret 0xdd89
0x000000000040550c : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2d9845], cl ; ret
0x00000000004064b8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x29d257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000406476 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ad257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000422929 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004228a5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040445a : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000419dbe : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x000000000041979e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040900f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000410a91 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004229e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000403764 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004175f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000409aed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bb5b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041931d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000415a4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409acf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004035df : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004221ed : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000411e9b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411900 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421da8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415e5d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411e57 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004019fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000424dda : add byte ptr [rax], al ; and bh, dh ; std ; call qword ptr [rax]
0x0000000000425ce6 : add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; call qword ptr [rbx]
0x00000000004253e6 : add byte ptr [rax], al ; idiv rbp ; call rdi
0x0000000000425ce2 : add byte ptr [rax], al ; in al, 0xa ; add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; call qword ptr [rbx]
0x00000000004253e2 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; idiv rbp ; call rdi
0x0000000000401a79 : add byte ptr [rax], al ; jmp 0x401a19
0x00000000004221e9 : add byte ptr [rax], al ; jmp 0x4221f8
0x0000000000422e59 : add byte ptr [rax], al ; jmp 0x422e68
0x00000000004232cf : add byte ptr [rax], al ; jmp 0x4233df
0x0000000000423067 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041317b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x0000000000412fd8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000406289 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004093b9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004256a2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], ch ; ret 0xfffe
0x0000000000424eda : add byte ptr [rax], al ; nop ; fdivr st(6) ; call qword ptr [rax]
0x0000000000425b66 : add byte ptr [rax], al ; or byte ptr [rdi + rdi*8], al ; call rdx
0x0000000000425b62 : add byte ptr [rax], al ; or dword ptr fs:[rax], eax ; add byte ptr [rax], cl ; add al, -1 ; call rdx
0x00000000004039fc : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411bdf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004118b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000423dce : add byte ptr [rax], al ; ret
0x00000000004256c6 : add byte ptr [rax], al ; ret 0xfffe
0x00000000004259a6 : add byte ptr [rax], al ; sar rsi, 1 ; jmp qword ptr [rdx]
0x0000000000425d86 : add byte ptr [rax], al ; sbb byte ptr [rdi + rdi*8], bl ; jmp rdx
0x0000000000425d82 : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi + rdi*8], bl ; jmp rdx
0x000000000042505a : add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], ch ; call qword ptr [rax]
0x0000000000426087 : add byte ptr [rax], bh ; ret 0xffff
0x0000000000425887 : add byte ptr [rax], bh ; sar dh, 1 ; jmp qword ptr [rax]
0x0000000000425d87 : add byte ptr [rax], bl ; sbb al, -1 ; jmp rdx
0x00000000004256a7 : add byte ptr [rax], ch ; ret 0xfffe
0x0000000000425b67 : add byte ptr [rax], cl ; add al, -1 ; call rdx
0x000000000042505b : add byte ptr [rax], dh ; sub al, -1 ; call qword ptr [rax]
0x0000000000405572 : add byte ptr [rbx + 0x102d9845], cl ; ret
0x00000000004171b6 : add byte ptr [rbx + 0x1a2db045], cl ; fidiv dword ptr [rdi] ; ret 0x8589
0x0000000000417201 : add byte ptr [rbx + 0x1b2db045], cl ; fidiv dword ptr [rdi] ; ret 0x8589
0x0000000000404724 : add byte ptr [rbx + 0x1b2dec45], cl ; ret 0xd7ed
0x0000000000404766 : add byte ptr [rbx + 0x1c2dec45], cl ; ret 0xd7ed
0x0000000000423236 : add byte ptr [rbx + 0x262db845], cl ; ret
0x00000000004172b0 : add byte ptr [rbx + 0x3b2db045], cl ; ret
0x00000000004172fb : add byte ptr [rbx + 0x3c2db045], cl ; ret
0x0000000000411be0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004118b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004051bc : add byte ptr [rbx + 0x642d9845], cl ; pop rsi ; push rax ; ret 0x8589
0x0000000000405207 : add byte ptr [rbx + 0x652d9845], cl ; pop rsi ; push rax ; ret 0x8589
0x0000000000417b67 : add byte ptr [rbx + 0xd2dd445], cl ; ret 0xdd89
0x000000000040550e : add byte ptr [rbx + 0xf2d9845], cl ; ret
0x00000000004035b2 : add byte ptr [rbx - 0x28b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004064ba : add byte ptr [rbx - 0x29d257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000406478 : add byte ptr [rbx - 0x2ad257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000403795 : add byte ptr [rbx - 0x2b34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042292b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004228a7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040526b : add byte ptr [rbx - 0x73d267bb], cl ; xlatb ; ret
0x0000000000405220 : add byte ptr [rbx - 0x74d267bb], cl ; xlatb ; ret
0x000000000040445c : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000405239 : add byte ptr [rbx - 0x8d267bb], cl ; jge 0x405219 ; ret 0x8589
0x00000000004051ee : add byte ptr [rbx - 0x9d267bb], cl ; jge 0x4051ce ; ret 0x8589
0x0000000000404598 : add byte ptr [rbx - 0xa74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004041f9 : add byte ptr [rbx - 0xd74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040429c : add byte ptr [rbx - 0xdf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419f1e : add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000419dc0 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x00000000004197a0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000409011 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000410a93 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000425b63 : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], cl ; add al, -1 ; call rdx
0x0000000000415b9e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402028 : add byte ptr [rcx], al ; ret
0x00000000004229e7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000403766 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004175fa : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000409aef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038ce : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bb5d : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041931f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000415a4c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409ad1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004035e1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004212bd : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414899 : add cl, ch ; ret
0x00000000004221ef : add cl, ch ; ret 0
0x0000000000419eb5 : add cl, ch ; ret 1
0x000000000041a304 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x00000000004253e5 : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; std ; call rdi
0x0000000000411e55 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404722 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x1b2dec45], cl ; ret 0xd7ed
0x000000000041257a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000419f1c : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000041efb3 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000404ff8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040447e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e04f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422101 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402024 : add eax, 0x22552e ; add ebx, esi ; ret
0x000000000041ec41 : add eax, 0x458b0000 ; call 0xffffffffc3a31881
0x0000000000424dc9 : add eax, 0xf0a00000 ; std ; call rax
0x0000000000424dd9 : add eax, 0xf7200000 ; std ; call qword ptr [rax]
0x0000000000401feb : add eax, edx ; sar rax, 1 ; jne 0x401ffc ; pop rbp ; ret
0x000000000041f579 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402029 : add ebx, esi ; ret
0x000000000041a47b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041eb85 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004022ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000415b9c : add esp, 0x100 ; pop rbp ; ret
0x0000000000412577 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000420465 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000041a436 : add esp, 0x120 ; pop rbp ; ret
0x000000000041f54a : add esp, 0x130 ; pop rbp ; ret
0x0000000000417987 : add esp, 0x140 ; pop rbp ; ret
0x0000000000405999 : add esp, 0x150 ; pop rbp ; ret
0x0000000000415d0c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000409182 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000404ffd : add esp, 0x20 ; pop rbp ; ret
0x00000000004212bb : add esp, 0x200 ; pop rbp ; ret
0x00000000004039f8 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000404483 : add esp, 0x30 ; pop rbp ; ret
0x00000000004082ec : add esp, 0x360 ; pop rbp ; ret
0x00000000004063f7 : add esp, 0x40 ; pop rbp ; ret
0x000000000040225c : add esp, 0x50 ; pop rbp ; ret
0x000000000041c849 : add esp, 0x520 ; pop rbp ; ret
0x0000000000403ced : add esp, 0x60 ; pop rbp ; ret
0x0000000000406d05 : add esp, 0x70 ; pop rbp ; ret
0x0000000000412dcc : add esp, 0x80 ; pop rbp ; ret
0x00000000004187c2 : add esp, 0x90 ; pop rbp ; ret
0x0000000000404a4d : add esp, 0xa0 ; pop rbp ; ret
0x00000000004045b9 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403e04 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004118b4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000404361 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004019fe : add esp, 8 ; ret
0x0000000000401fea : add rax, rdx ; sar rax, 1 ; jne 0x401ffd ; pop rbp ; ret
0x000000000041f578 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041a47a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004022aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000415b9b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000412576 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000420464 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000041a435 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041f549 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000417986 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000405998 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000415d0b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000409181 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000404ffc : add rsp, 0x20 ; pop rbp ; ret
0x00000000004212ba : add rsp, 0x200 ; pop rbp ; ret
0x00000000004039f7 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000404482 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004082eb : add rsp, 0x360 ; pop rbp ; ret
0x00000000004063f6 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040225b : add rsp, 0x50 ; pop rbp ; ret
0x000000000041c848 : add rsp, 0x520 ; pop rbp ; ret
0x0000000000403cec : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406d04 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000412dcb : add rsp, 0x80 ; pop rbp ; ret
0x00000000004187c1 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404a4c : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004045b8 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403e03 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004118b3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000404360 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004019fd : add rsp, 8 ; ret
0x00000000004131bc : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004131bb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041e04e : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422100 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402027 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042504d : and bh, bh ; call rax
0x0000000000424ddc : and bh, dh ; std ; call qword ptr [rax]
0x000000000041a438 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405922 : and dword ptr [rbp - 0x28b67347], ecx ; ret
0x0000000000405921 : and dword ptr ds:[rbp - 0x28b67347], ecx ; ret
0x0000000000405941 : and eax, 0x4247cb ; call 0x401b87
0x0000000000405c4f : and eax, 0x627580 ; pop rbp ; ret
0x0000000000405c73 : and eax, 0x627588 ; pop rbp ; ret
0x0000000000405946 : call 0x401b82
0x000000000041a330 : call 0x401be9
0x0000000000421607 : call 0x401f66
0x000000000041f311 : call 0x416e19
0x000000000041ec46 : call 0xffffffffc3a3187c
0x000000000041ec45 : call 0xffffffffc3a3187d
0x000000000041ec88 : call 0xffffffffc3a319be
0x000000000041ec87 : call 0xffffffffc3a319bf
0x00000000004118f9 : call 0xffffffffe903a249
0x00000000004118f8 : call 0xffffffffe903a24a
0x000000000040d33d : call 0xfffffffff73958d4
0x000000000041d5d3 : call 0xfffffffffee65ba5
0x000000000041d5d2 : call 0xfffffffffee65ba6
0x0000000000401fc3 : call 0xffffffffff408240
0x0000000000402003 : call 0xffffffffff408280
0x0000000000419565 : call 0xffffffffff461b3a
0x000000000040fe69 : call 0xffffffffff55843b
0x000000000040fe68 : call 0xffffffffff55843c
0x000000000040fe69 : call 0xffffffffff55843d
0x000000000040fe68 : call 0xffffffffff55843e
0x0000000000408d58 : call 0xffffffffffad132a
0x0000000000408d57 : call 0xffffffffffad132b
0x000000000041e08a : call 0xffffffffffbe665c
0x000000000041e089 : call 0xffffffffffbe665d
0x0000000000423da9 : call qword ptr [r12 + rbx*8]
0x000000000040f1f6 : call qword ptr [rax]
0x000000000041d671 : call qword ptr [rbx]
0x0000000000410e85 : call qword ptr [rcx]
0x000000000041d7a9 : call qword ptr [rdi]
0x000000000040ee23 : call qword ptr [rdx]
0x00000000004090f8 : call qword ptr [rsi]
0x0000000000423daa : call qword ptr [rsp + rbx*8]
0x000000000040204d : call rax
0x0000000000408d5e : call rbx
0x000000000041e87e : call rcx
0x0000000000407e5c : call rdi
0x000000000042544b : call rdx
0x0000000000415b54 : call rsi
0x0000000000425a0b : call rsp
0x000000000041ada6 : cdq ; jbe 0x41adca ; ret
0x000000000041c6cd : cdq ; jbe 0x41c6f1 ; ret
0x00000000004228ac : cdq ; ret
0x0000000000417985 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x00000000004183b2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421b80 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401fef : clc ; jne 0x401ff8 ; pop rbp ; ret
0x0000000000412e0b : clc ; pop rbp ; ret
0x00000000004022d7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420463 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000417e73 : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040fabd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000418b6d : cmp al, -0x2a ; ret
0x0000000000405c4e : cmp al, 0x25 ; xor byte ptr [rbp + 0x62], 0 ; pop rbp ; ret
0x0000000000417300 : cmp al, 0x42 ; ret
0x0000000000401fad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401fc0 ; pop rbp ; ret
0x0000000000411d94 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041ad52 : cwde ; jbe 0x41ad76 ; ret
0x00000000004223ab : cwde ; js 0x422355 ; ret
0x00000000004223f2 : cwde ; js 0x42239c ; ret
0x000000000042242c : cwde ; js 0x4223d6 ; ret
0x0000000000425ce8 : cwde ; or al, 0xffffffffffffffff ; call qword ptr [rbx]
0x0000000000408155 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000041c592 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004140db : dec dword ptr [rax - 0x77] ; ret 0x2ce8
0x000000000041c5c8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403963 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x00000000004035b8 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000414631 : dec dword ptr [rax - 0x77] ; ret 0xd6e8
0x000000000041f30d : dec dword ptr [rax - 0x77] ; ret 0xfae8
0x000000000040fc62 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040ff6d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000411474 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000419eaf : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000414893 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041efaf : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000403583 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041c434 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000414753 : dec ebx ; je 0x414719 ; ret 0x1ce9
0x000000000041931b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004069ad : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416f64 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004058fe : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000412da9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041da03 : fcmovbe st(0), st(5) ; jmp 0x41e061
0x000000000042514d : fcos ; call rax
0x0000000000424f4d : fdiv st(6), st(0) ; call rax
0x0000000000424edd : fdivr st(6) ; call qword ptr [rax]
0x0000000000424ecd : fdivr st(6) ; call rax
0x00000000004171bc : fidiv dword ptr [rdi] ; ret 0x8589
0x00000000004176f6 : fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000416454 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040445f : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041f6c9 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041a5df : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000041c596 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000423dac : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004022a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039f6 : hlt ; add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000421cdc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401fc0 : hlt ; pop rbp ; mov edi, 0x6274e8 ; jmp rax
0x00000000004051f3 : idiv byte ptr [rbp - 0x30] ; ret 0x8589
0x000000000040574f : idiv dword ptr [rbp - 0x30] ; ret 0x72b9
0x000000000040523e : idiv dword ptr [rbp - 0x30] ; ret 0x8589
0x0000000000424ddd : idiv ebp ; call qword ptr [rax]
0x00000000004253e9 : idiv ebp ; call rdi
0x00000000004253e8 : idiv rbp ; call rdi
0x00000000004151ee : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000403aa6 : imul ebp, ecx, 2 ; pop rbp ; ret
0x000000000041ea66 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x0000000000404e39 : in al, -0x17 ; ret
0x000000000040f419 : in al, -0x7f ; ret 0xff9f
0x000000000040f5ff : in al, -0x7f ; ret 0xffbf
0x000000000040f6a5 : in al, -0x7f ; ret 0xffc5
0x000000000040f6d3 : in al, -0x7f ; ret 0xffd5
0x000000000040f7a1 : in al, -0x7f ; ret 0xffd8
0x000000000040f937 : in al, -0x7f ; ret 0xffe0
0x0000000000424f8d : in al, -2 ; call rax
0x00000000004237ff : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000425ce4 : in al, 0xa ; add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; call qword ptr [rbx]
0x00000000004253e4 : in al, 1 ; add byte ptr [rax], al ; idiv rbp ; call rdi
0x000000000041811f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041a309 : in al, dx ; int1 ; ret
0x00000000004094ca : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041e055 : in al, dx ; pop rbp ; ret
0x0000000000422aab : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410a8f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040f051 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bbd0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041163a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403154 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000041ff42 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000041a21b : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000041a334 : inc edi ; in al, dx ; int1 ; ret
0x0000000000412548 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004090f2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000408de2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000403aa5 : insb byte ptr [rdi], dx ; imul ebp, ecx, 2 ; pop rbp ; ret
0x000000000040bbef : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040f22f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000419f23 : int1 ; ret
0x0000000000401fb3 : ja 0x401fba ; pop rbp ; ret
0x000000000042443b : jb 0x4244a4 ; jns 0x424446 ; push rax ; ret
0x000000000042443a : jb 0x4244a5 ; jns 0x424447 ; push rax ; ret
0x000000000041ad53 : jbe 0x41ad75 ; ret
0x000000000041ada7 : jbe 0x41adc9 ; ret
0x000000000041c6ce : jbe 0x41c6f0 ; ret
0x0000000000401fbf : je 0x401fbd ; pop rbp ; mov edi, 0x6274e8 ; jmp rax
0x0000000000413982 : je 0x413944 ; ret 0x8589
0x0000000000413a62 : je 0x413a24 ; ret 0x8589
0x0000000000414650 : je 0x414612 ; ret 0x7d81
0x0000000000414755 : je 0x414717 ; ret 0x1ce9
0x00000000004051f4 : jge 0x4051c8 ; ret 0x8589
0x000000000040523f : jge 0x405213 ; ret 0x8589
0x0000000000405750 : jge 0x405724 ; ret 0x72b9
0x0000000000414d08 : jge 0x414d1f ; ret
0x00000000004151f3 : jge 0x41520a ; ret
0x0000000000416ad4 : jge 0x416ac0 ; call rax
0x00000000004175f5 : jge 0x4175df ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041b41a : jge 0x41b493 ; ret
0x0000000000423019 : jge 0x423013 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000414bdc : jl 0x414bf3 ; ret
0x000000000041b46e : jle 0x41b4e7 ; ret
0x000000000041c09c : jle 0x41c115 ; ret
0x0000000000401a7b : jmp 0x401a17
0x00000000004031bf : jmp 0x403a07
0x0000000000409122 : jmp 0x409190
0x000000000040ebdd : jmp 0x4118c3
0x0000000000411671 : jmp 0x4118c5
0x00000000004151ed : jmp 0x415765
0x00000000004175e4 : jmp 0x417997
0x000000000041a302 : jmp 0x41a447
0x000000000041c3ff : jmp 0x41c857
0x000000000041c3fe : jmp 0x41c858
0x000000000041da05 : jmp 0x41e05f
0x000000000041e813 : jmp 0x41ebaa
0x00000000004221eb : jmp 0x4221f6
0x0000000000422e5b : jmp 0x422e66
0x00000000004232d1 : jmp 0x4233dd
0x00000000004183ee : jmp 0xffffffffb70387ba
0x00000000004223aa : jmp 0xffffffffc3e69c4b
0x000000000040ecfd : jmp qword ptr [rax]
0x000000000040fe6f : jmp qword ptr [rbx]
0x0000000000411840 : jmp qword ptr [rcx]
0x0000000000420177 : jmp qword ptr [rdi]
0x0000000000411d95 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040d346 : jmp qword ptr [rdx]
0x00000000004047c5 : jmp qword ptr [rsi]
0x0000000000401fc7 : jmp rax
0x0000000000410992 : jmp rbx
0x000000000041eac1 : jmp rcx
0x000000000041102e : jmp rdi
0x0000000000402007 : jmp rdx
0x000000000041e853 : jmp rsi
0x0000000000407ddf : jmp rsp
0x0000000000401ff0 : jne 0x401ff7 ; pop rbp ; ret
0x00000000004035db : jne 0x403648 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004038c8 : jne 0x403935 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004039ad : jne 0x403a1a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040489c : jne 0x404909 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412546 : jne 0x41254f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000421605 : jne 0x4215ef ; call 0x401f68
0x000000000042443e : jns 0x424443 ; push rax ; ret
0x000000000042443d : jns 0x424444 ; push rax ; ret
0x0000000000405920 : jo 0x405968 ; and dword ptr [rbp - 0x28b67347], ecx ; ret
0x0000000000406d07 : jo 0x406d68 ; ret
0x0000000000412761 : jo 0x4127c2 ; ret
0x0000000000412884 : jo 0x4128e5 ; ret
0x00000000004129be : jo 0x412a1f ; ret
0x00000000004164fc : jo 0x41655d ; ret
0x0000000000421b84 : jo 0x421be5 ; ret
0x00000000004118b6 : js 0x4118ca ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041a332 : js 0x41a339 ; inc edi ; in al, dx ; int1 ; ret
0x00000000004223ac : js 0x422354 ; ret
0x00000000004223f3 : js 0x42239b ; ret
0x000000000042242d : js 0x4223d5 ; ret
0x0000000000405a3c : lcall ptr [rcx + rcx*4 - 0x7bf04bbb] ; ret 0
0x000000000040593f : lea edi, dword ptr [0x4247cb] ; call 0x401b89
0x000000000040647e : lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000406591 : lodsd eax, dword ptr [rsi] ; ret 0xb9a2
0x0000000000405add : loopne 0x405ae6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040988e : loopne 0x409897 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413123 : loopne 0x41312c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041476f : loopne 0x4147c2 ; add esp, 0x2d0 ; pop rbp ; ret
0x0000000000416240 : loopne 0x416249 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041664c : loopne 0x41669c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041664b : loopne 0x41669d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041696f : loopne 0x4169bf ; add esp, 0x40 ; pop rbp ; ret
0x000000000041696e : loopne 0x4169c0 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000416ce7 : loopne 0x416cf0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416db3 : loopne 0x416dbc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004175f6 : loopne 0x41763f ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403762 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004176f4 : mov ah, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000402480 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040900d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000408f19 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041953a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004045bb : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004172fe : mov al, 0x2d ; cmp al, 0x42 ; ret
0x0000000000421453 : mov al, 0x2d ; ret 0xa414
0x0000000000409a4b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004220fd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004222ad : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422aa9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425fa9 : mov bh, -1 ; call qword ptr [rsi]
0x0000000000405c71 : mov byte ptr [0x627588], al ; pop rbp ; ret
0x000000000041bdd1 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000411408 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bb59 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000402023 : mov byte ptr [rip + 0x22552e], 1 ; ret
0x0000000000404ffa : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404480 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e051 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422103 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000422bd5 : mov dl, -0x47 ; ret
0x0000000000414340 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405c4d : mov dword ptr [0x627580], edi ; pop rbp ; ret
0x0000000000409707 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004094cb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040963f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040247e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004022a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004022d5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004098bd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f57c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000041a47e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x00000000004093bf : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041658b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004063f3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421868 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041626f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412e05 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040628c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041668e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415f60 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406d01 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040970a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004237fd : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041664a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416a85 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004092b4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004093bc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041317d : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x00000000004094c5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000416acf : mov eax, dword ptr [rbp - 0x30] ; mov rdi, qword ptr [rbp - 0x18] ; call rax
0x000000000041685f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409641 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000412fda : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000041275b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000421cda : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004183b0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421b7e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041700d : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040204b : mov ebp, esp ; call rax
0x0000000000401fb1 : mov ebp, esp ; ja 0x401fbc ; pop rbp ; ret
0x00000000004094c8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405225 : mov ecx, dword ptr [rcx - 0x29] ; ret
0x0000000000402045 : mov edi, 0x626e00 ; mov rbp, rsp ; call rax
0x0000000000401fc2 : mov edi, 0x6274e8 ; jmp rax
0x0000000000402002 : mov edi, 0x6274e8 ; jmp rdx
0x0000000000416ad3 : mov edi, dword ptr [rbp - 0x18] ; call rax
0x000000000041a478 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000423da7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004090f0 : mov edi, edi ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000423da6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000412e09 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000421604 : mov esi, dword ptr [rbp - 0x20] ; call 0x401f69
0x0000000000402000 : mov esi, eax ; mov edi, 0x6274e8 ; jmp rdx
0x000000000040314f : mov esp, 0xffffff3d ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000041e054 : mov esp, ebp ; pop rbp ; ret
0x0000000000405c4c : mov qword ptr [0x627580], rdi ; pop rbp ; ret
0x00000000004098bc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f57b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041a47d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004176f3 : mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x000000000040247f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004172fd : mov r8b, 0x2d ; cmp al, 0x42 ; ret
0x0000000000421452 : mov r8b, 0x2d ; ret 0xa414
0x000000000041658a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004063f2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421867 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041626e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412e04 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040628b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041668d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415f5f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406d00 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416649 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416a84 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004092b3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004093bb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416ace : mov rax, qword ptr [rbp - 0x30] ; mov rdi, qword ptr [rbp - 0x18] ; call rax
0x000000000041275a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040204a : mov rbp, rsp ; call rax
0x0000000000401fb0 : mov rbp, rsp ; ja 0x401fbd ; pop rbp ; ret
0x0000000000416ad2 : mov rdi, qword ptr [rbp - 0x18] ; call rax
0x0000000000412e08 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401fff : mov rsi, rax ; mov edi, 0x6274e8 ; jmp rdx
0x000000000041e053 : mov rsp, rbp ; pop rbp ; ret
0x000000000041254a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041254b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000405270 : mov word ptr [rcx - 0x29], cs ; ret
0x000000000040fc9c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000422e4e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004131bf : movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004256a4 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], ch ; ret 0xfffe
0x00000000004151ec : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x415766
0x00000000004223ad : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405b4a : movups xmm0, xmmword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ce8 : movups xmm0, xmmword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404ff9 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040447f : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e050 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422102 : movzx eax, al ; pop rbp ; ret
0x0000000000424edc : nop ; fdivr st(6) ; call qword ptr [rax]
0x0000000000423dc8 : nop dword ptr [rax + rax] ; ret
0x0000000000425e05 : or al, 0 ; add al, cl ; sub edi, edi ; jmp rax
0x0000000000424f89 : or al, 0 ; add byte ptr [rax], ah ; in al, -2 ; call rax
0x00000000004118b7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000425ce9 : or al, 0xffffffffffffffff ; call qword ptr [rbx]
0x00000000004254c9 : or bh, dh ; call qword ptr [rsi]
0x0000000000425b68 : or byte ptr [rdi + rdi*8], al ; call rdx
0x0000000000424ec9 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; fdivr st(6) ; call rax
0x0000000000425b65 : or dword ptr [rax], eax ; add byte ptr [rax], cl ; add al, -1 ; call rdx
0x0000000000414897 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000425b64 : or dword ptr fs:[rax], eax ; add byte ptr [rax], cl ; add al, -1 ; call rdx
0x0000000000424f49 : or eax, dword ptr [rax] ; add al, ah ; fdiv st(6), st(0) ; call rax
0x0000000000412941 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425d85 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; sbb al, -1 ; jmp rdx
0x0000000000408d77 : out -0x47, eax ; ret 0x614e
0x000000000042518d : out -1, al ; call rax
0x00000000004222af : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004220ff : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423dbc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423dbe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411be2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423dc0 : pop r14 ; pop r15 ; ret
0x0000000000411be4 : pop r15 ; pop rbp ; ret
0x0000000000423dc2 : pop r15 ; ret
0x0000000000422928 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000402022 : pop rbp ; mov byte ptr [rip + 0x22552e], 1 ; ret
0x0000000000401fc1 : pop rbp ; mov edi, 0x6274e8 ; jmp rax
0x00000000004090ef : pop rbp ; mov edi, edi ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000401ffe : pop rbp ; mov rsi, rax ; mov edi, 0x6274e8 ; jmp rdx
0x0000000000423dbb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423dbf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401fb5 : pop rbp ; ret
0x0000000000411be1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004118ba : pop rbx ; pop rbp ; ret
0x0000000000422bd4 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000411be5 : pop rdi ; pop rbp ; ret
0x0000000000423dc3 : pop rdi ; ret
0x000000000042301b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000419f1b : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000411be3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000423dc1 : pop rsi ; pop r15 ; ret
0x00000000004051c2 : pop rsi ; push rax ; ret 0x8589
0x00000000004055da : pop rsi ; push rax ; ret 0x8948
0x0000000000423dbd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040baf2 : pop rsp ; ret
0x00000000004229e9 : popfq ; ret 0xd284
0x0000000000424ec7 : push qword ptr [rax + 0x20000009] ; fdivr st(6) ; call rax
0x0000000000424f87 : push qword ptr [rax + 0x2000000c] ; in al, -2 ; call rax
0x0000000000425047 : push qword ptr [rax + 0x6000000f] ; and bh, bh ; call rax
0x0000000000425187 : push qword ptr [rax + 0x70000014] ; out -1, al ; call rax
0x0000000000424fc7 : push qword ptr [rax + 0xd] ; adc edi, edi ; call rax
0x0000000000425107 : push qword ptr [rax - 0x1fffffee] ; sar bh, cl ; call rax
0x0000000000424f47 : push qword ptr [rax - 0x1ffffff5] ; fdiv st(6), st(0) ; call rax
0x0000000000425147 : push qword ptr [rax - 0xfffffed] ; fcos ; call rax
0x0000000000425007 : push qword ptr [rax - 0xffffff2] ; sbb bh, bh ; call rax
0x00000000004112df : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000424d97 : push rax ; add al, 0 ; add byte ptr [rax - 0x2b], al ; std ; call qword ptr [rax]
0x0000000000424dd7 : push rax ; add eax, 0xf7200000 ; std ; call qword ptr [rax]
0x000000000040225e : push rax ; pop rbp ; ret
0x0000000000424440 : push rax ; ret
0x00000000004051c3 : push rax ; ret 0x8589
0x00000000004055db : push rax ; ret 0x8948
0x0000000000425057 : push rax ; sldt word ptr [rax] ; xor byte ptr [rdi + rdi*8], ch ; call qword ptr [rax]
0x0000000000415b4b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000402026 : push rbp ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000412e0a : push rbp ; clc ; pop rbp ; ret
0x0000000000416453 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041f6c8 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041a5de : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000041c595 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040f418 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040f5fe : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040f6a4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040f6d2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040f7a0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040f936 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000041bdd0 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000402044 : push rbp ; mov edi, 0x626e00 ; mov rbp, rsp ; call rax
0x00000000004197a3 : pushfq ; ret 0x8445
0x0000000000403768 : pushfq ; ret 0xd284
0x0000000000401a01 : ret
0x0000000000405a43 : ret 0
0x0000000000418949 : ret 0x10
0x000000000041ceff : ret 0x110a
0x000000000041a5e2 : ret 0x18
0x0000000000414757 : ret 0x1ce9
0x0000000000422adb : ret 0x2030
0x000000000041a882 : ret 0x2106
0x0000000000401e82 : ret 0x2253
0x0000000000401c82 : ret 0x2254
0x0000000000401a82 : ret 0x2255
0x000000000040edf7 : ret 0x2a
0x0000000000412116 : ret 0x2c1
0x00000000004140de : ret 0x2ce8
0x000000000040bd5a : ret 0x43fa
0x0000000000406651 : ret 0x48f2
0x0000000000421e83 : ret 0x5e5
0x0000000000408b1f : ret 0x614e
0x0000000000420056 : ret 0x64e8
0x0000000000405752 : ret 0x72b9
0x0000000000413592 : ret 0x7961
0x0000000000420340 : ret 0x7ae8
0x0000000000414652 : ret 0x7d81
0x0000000000408c6b : ret 0x8148
0x0000000000403158 : ret 0x8445
0x00000000004051c4 : ret 0x8589
0x000000000040bbf0 : ret 0x891a
0x000000000042248c : ret 0x8934
0x00000000004055dc : ret 0x8948
0x000000000040647f : ret 0x89a2
0x00000000004183f1 : ret 0x89b6
0x0000000000422468 : ret 0x8b34
0x0000000000405961 : ret 0x8b48
0x0000000000408cf8 : ret 0x8ce9
0x0000000000403966 : ret 0x8d8b
0x00000000004176f8 : ret 0x91e9
0x0000000000410a70 : ret 0x9ae8
0x000000000041d4d6 : ret 0xa
0x0000000000421455 : ret 0xa414
0x000000000040fac5 : ret 0xa9b9
0x000000000040b542 : ret 0xade6
0x00000000004035bb : ret 0xb0
0x000000000040f230 : ret 0xb91a
0x0000000000406592 : ret 0xb9a2
0x00000000004186ab : ret 0xb9b6
0x0000000000420ffd : ret 0xbde8
0x0000000000407de3 : ret 0xbe9
0x000000000041a1de : ret 0xc
0x0000000000401fe5 : ret 0xc148
0x0000000000403586 : ret 0xd284
0x00000000004112e3 : ret 0xd4e9
0x00000000004083e7 : ret 0xd549
0x0000000000414634 : ret 0xd6e8
0x000000000040472a : ret 0xd7ed
0x00000000004179bd : ret 0xdd89
0x00000000004118fc : ret 0xee8
0x00000000004048cf : ret 0xf40
0x000000000040fca5 : ret 0xf41
0x000000000041f310 : ret 0xfae8
0x000000000040866c : ret 0xfb94
0x00000000004042dd : ret 0xff2
0x00000000004092aa : ret 0xff87
0x0000000000408ffa : ret 0xff8e
0x000000000040f41b : ret 0xff9f
0x0000000000410dbe : ret 0xffa5
0x000000000040f601 : ret 0xffbf
0x000000000041006b : ret 0xffc4
0x000000000040f6a7 : ret 0xffc5
0x000000000040f6d5 : ret 0xffd5
0x000000000040f7a3 : ret 0xffd8
0x0000000000410111 : ret 0xffd9
0x000000000040f939 : ret 0xffe0
0x000000000040ea0e : ret 0xfffa
0x00000000004256a9 : ret 0xfffe
0x0000000000405948 : ret 0xffff
0x0000000000403824 : ret 1
0x000000000040ff70 : ret 2
0x00000000004113f7 : ret 4
0x00000000004148c8 : ret 5
0x0000000000411ae0 : ret 8
0x000000000041e105 : ret 9
0x0000000000419494 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004039fa : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004094c6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416ad0 : ror byte ptr [r8 - 0x75], 1 ; jge 0x416ac4 ; call rax
0x0000000000401fec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401ffb ; pop rbp ; ret
0x0000000000416ad1 : ror byte ptr [rax - 0x75], 1 ; jge 0x416ac3 ; call rax
0x000000000041e052 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004094c7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416450 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004175fc : sahf ; ret 0xd284
0x0000000000401fbe : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408245
0x00000000004131ba : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004064bf : salc ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000406590 : salc ; lodsd eax, dword ptr [rsi] ; ret 0xb9a2
0x0000000000418b6e : salc ; ret
0x000000000042510d : sar bh, cl ; call rax
0x0000000000424d8d : sar ch, cl ; call rax
0x0000000000425889 : sar dh, 1 ; jmp qword ptr [rax]
0x0000000000408d74 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x0000000000401fee : sar eax, 1 ; jne 0x401ff9 ; pop rbp ; ret
0x00000000004259a9 : sar esi, 1 ; jmp qword ptr [rdx]
0x0000000000401fed : sar rax, 1 ; jne 0x401ffa ; pop rbp ; ret
0x00000000004259a8 : sar rsi, 1 ; jmp qword ptr [rdx]
0x0000000000425d89 : sbb al, -1 ; jmp rdx
0x00000000004256a0 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], ch ; ret 0xfffe
0x000000000042500d : sbb bh, bh ; call rax
0x0000000000412579 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000425d88 : sbb byte ptr [rdi + rdi*8], bl ; jmp rdx
0x0000000000416033 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fabe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000042501d : sbb edi, edi ; call qword ptr [rax]
0x0000000000423a35 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423a37 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000425059 : sldt word ptr [rax] ; xor byte ptr [rdi + rdi*8], ch ; call qword ptr [rax]
0x0000000000424d9e : std ; call qword ptr [rax]
0x0000000000424d8e : std ; call rax
0x00000000004253ea : std ; call rdi
0x0000000000424d96 : std ; push rax ; add al, 0 ; add byte ptr [rax - 0x2b], al ; std ; call qword ptr [rax]
0x0000000000424dd6 : std ; push rax ; add eax, 0xf7200000 ; std ; call qword ptr [rax]
0x0000000000405a3b : stosb byte ptr [rdi], al ; lcall ptr [rcx + rcx*4 - 0x7bf04bbb] ; ret 0
0x000000000041a331 : stosd dword ptr [rdi], eax ; js 0x41a33a ; inc edi ; in al, dx ; int1 ; ret
0x000000000042505d : sub al, -1 ; call qword ptr [rax]
0x000000000040cb07 : sub al, 0x38 ; ret 0x8589
0x000000000040fac3 : sub al, 0x38 ; ret 0xa9b9
0x000000000041ec48 : sub al, 0x61 ; ret
0x00000000004131c0 : sub cl, al ; pop rbp ; ret
0x0000000000425e09 : sub edi, edi ; jmp rax
0x0000000000423dfd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000423dfc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000419eb1 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000415b6b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041e9b9 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000408f56 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004198e8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004064bd : test al, 0x2d ; salc ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000041c3fd : test al, 0x45 ; jmp 0x41c859
0x000000000041275d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000415a48 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000423dca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000425d84 : test byte ptr [rbx], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi + rdi*8], bl ; jmp rdx
0x0000000000414895 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041efb1 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004090f4 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000408d5a : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000415b50 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004158b8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041e08c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000041e87a : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041474f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x41471d ; ret 0x1ce9
0x000000000041eabd : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041e84f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000041fb7e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x00000000004088a0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x0000000000408830 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000409af1 : xchg eax, ebp ; ret
0x0000000000403157 : xchg eax, ebp ; ret 0x8445
0x00000000004038d0 : xchg eax, ebp ; ret 0xd284
0x00000000004048ce : xchg eax, ebp ; ret 0xf40
0x0000000000423a36 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000403c23 : xchg eax, ebx ; ret 0xd284
0x000000000040caeb : xchg eax, ecx ; ret
0x00000000004065a8 : xchg eax, edi ; ret 0xd284
0x000000000041a5ef : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cc3b : xchg eax, edx ; ret
0x0000000000415a4e : xchg eax, edx ; ret 0xd284
0x0000000000412472 : xchg eax, esi ; ret
0x0000000000409ad3 : xchg eax, esp ; ret
0x0000000000410a96 : xchg eax, esp ; ret 0x8445
0x0000000000403585 : xchg eax, esp ; ret 0xd284
0x0000000000405227 : xlatb ; ret
0x000000000041f6d8 : xor al, 0x41 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c50 : xor byte ptr [rbp + 0x62], 0 ; pop rbp ; ret
0x000000000041f54c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042505c : xor byte ptr [rdi + rdi*8], ch ; call qword ptr [rax]
0x0000000000412a77 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040963d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
