0x00000000004048d5 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412f6b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403a21 : adc eax, 0xb800000b ; ret
0x000000000040ec09 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a8ff : add al, 0 ; add cl, ch ; ret
0x00000000004053b2 : add al, 0x25 ; push 0x5d0061d3 ; ret
0x000000000040bc9c : add al, 0x25 ; ret 0x41b7
0x000000000041c687 : add al, bl ; xor edi, edi ; jmp qword ptr [rdx]
0x00000000004045d8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412863 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c567 : add al, cl ; xor bh, bh ; jmp qword ptr [rax]
0x00000000004037ae : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000412c5e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004129c6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041b1df : add bl, dh ; ret
0x000000000040fb0d : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x41b7
0x000000000040bc99 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41b7
0x000000000040ba4c : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x41b7
0x000000000040fb0e : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x41b7
0x0000000000405344 : add byte ptr [rax - 0x75], cl ; jge 0x405310 ; call 0x401627
0x0000000000412c5c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004129c4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041b1dd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405342 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405312 ; call 0x401629
0x000000000041b1db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041b1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e94e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000410047 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404ebd : add byte ptr [rax], al ; add byte ptr [rbx + 0x6d2d9845], cl ; ret 0x7612
0x000000000041ad31 : add byte ptr [rax], al ; add byte ptr [rbx - 0x34d23fbb], cl ; ret
0x000000000041ace6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x35d23fbb], cl ; ret
0x0000000000419ef9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000419e75 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000417a7e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000403dcc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004040a8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000404f63 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000419fb5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004177c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000414e1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040685d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038df : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040405b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004175fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000412b5a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040683f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040511b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004164ce : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004197bd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040ec0b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e670 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419378 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412f6d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ebc7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004015db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041cdd6 : add byte ptr [rax], al ; in al, -1 ; call qword ptr [rax]
0x0000000000401699 : add byte ptr [rax], al ; jmp 0x4015f9
0x00000000004164ca : add byte ptr [rax], al ; jmp 0x4164d9
0x00000000004197b9 : add byte ptr [rax], al ; jmp 0x4197c8
0x000000000041a429 : add byte ptr [rax], al ; jmp 0x41a438
0x000000000041cdd2 : add byte ptr [rax], al ; mov ah, 0xd ; add byte ptr [rax], al ; in al, -1 ; call qword ptr [rax]
0x0000000000415b47 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041a637 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004059c9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406129 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405343 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x401628
0x000000000041c066 : add byte ptr [rax], al ; or byte ptr [rbx - 2], bl ; jmp rcx
0x0000000000404536 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e94f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e628 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041cdbe : add byte ptr [rax], al ; push rax ; in al, -1 ; call qword ptr [rax]
0x000000000041b1de : add byte ptr [rax], al ; ret
0x000000000041c563 : add byte ptr [rbp + rax], al ; add al, cl ; xor bh, bh ; jmp qword ptr [rax]
0x000000000040e950 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e629 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404ebf : add byte ptr [rbx + 0x6d2d9845], cl ; ret 0x7612
0x000000000041ad33 : add byte ptr [rbx - 0x34d23fbb], cl ; ret
0x000000000041ace8 : add byte ptr [rbx - 0x35d23fbb], cl ; ret
0x0000000000403c51 : add byte ptr [rbx - 0x3e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040421c : add byte ptr [rbx - 0x4034b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004043f5 : add byte ptr [rbx - 0x40b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040447f : add byte ptr [rbx - 0x40f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419efb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000419e77 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000417a80 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000403dce : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004040aa : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000404f65 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000412cae : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401b38 : add byte ptr [rcx], al ; ret
0x0000000000419fb7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004177ca : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000414e1f : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040685f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038e1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040405d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004175ff : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000412b5c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406841 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040511d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c683 : add byte ptr [rsi + rax], ah ; add al, bl ; xor edi, edi ; jmp qword ptr [rdx]
0x00000000004119a9 : add cl, ch ; ret
0x00000000004197bf : add cl, ch ; ret 0
0x0000000000404d43 : add cl, ch ; ret 1
0x000000000040ebc5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004048f2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401b34 : add eax, 0x21b81e ; add ebx, esi ; ret
0x0000000000415b45 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000041542f : add eax, 0xb6b80000 ; ret 0x979f
0x0000000000404d41 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401afb : add eax, edx ; sar rax, 1 ; jne 0x401b0c ; pop rbp ; ret
0x0000000000401b39 : add ebx, esi ; ret
0x0000000000401d9b : add esp, 0x10 ; pop rbp ; ret
0x0000000000412cac : add esp, 0x100 ; pop rbp ; ret
0x00000000004048d3 : add esp, 0x110 ; pop rbp ; ret
0x000000000040f2e7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000041b162 : add esp, 0x150 ; pop rbp ; ret
0x0000000000405352 : add esp, 0x170 ; pop rbp ; ret
0x0000000000412e1c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000418d15 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000040e673 : add esp, 0x20 ; pop rbp ; ret
0x0000000000417d83 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000415c21 : add esp, 0x30 ; pop rbp ; ret
0x0000000000411878 : add esp, 0x320 ; pop rbp ; ret
0x0000000000415a15 : add esp, 0x380 ; pop rbp ; ret
0x0000000000405b37 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404532 : add esp, 0x420 ; pop rbp ; ret
0x0000000000401d47 : add esp, 0x50 ; pop rbp ; ret
0x00000000004056b6 : add esp, 0x60 ; pop rbp ; ret
0x000000000040f4cf : add esp, 0x70 ; pop rbp ; ret
0x000000000040fb3c : add esp, 0x80 ; pop rbp ; ret
0x0000000000416aa2 : add esp, 0x90 ; pop rbp ; ret
0x0000000000405eee : add esp, 0xa0 ; pop rbp ; ret
0x0000000000410044 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000040e624 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040fc95 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004015de : add esp, 8 ; ret
0x0000000000401afa : add rax, rdx ; sar rax, 1 ; jne 0x401b0d ; pop rbp ; ret
0x0000000000401d9a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000412cab : add rsp, 0x100 ; pop rbp ; ret
0x00000000004048d2 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040f2e6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000041b161 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000405351 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000412e1b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000418d14 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000040e672 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000417d82 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000415c20 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000411877 : add rsp, 0x320 ; pop rbp ; ret
0x0000000000415a14 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000405b36 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404531 : add rsp, 0x420 ; pop rbp ; ret
0x0000000000401d46 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004056b5 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040f4ce : add rsp, 0x70 ; pop rbp ; ret
0x000000000040fb3b : add rsp, 0x80 ; pop rbp ; ret
0x0000000000416aa1 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405eed : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000410043 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000040e623 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040fc94 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004015dd : add rsp, 8 ; ret
0x00000000004048f1 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041187a : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004189af : and cl, bl ; test al, -0x47 ; ret 0xf08
0x0000000000401b37 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040538f : and eax, 0x61d360 ; pop rbp ; ret
0x00000000004053b3 : and eax, 0x61d368 ; pop rbp ; ret
0x0000000000405349 : call 0x401622
0x0000000000404418 : call 0x4048e6
0x000000000040ba48 : call 0x40f899
0x000000000040e669 : call 0xffffffffe9036fb9
0x000000000040e668 : call 0xffffffffe9036fba
0x000000000040a0ad : call 0xfffffffff7392644
0x0000000000401ad3 : call 0xffffffffff407cae
0x0000000000401b13 : call 0xffffffffff407cee
0x0000000000417845 : call 0xffffffffff45fe1a
0x000000000040cbd9 : call 0xffffffffff5551ab
0x000000000040cbd8 : call 0xffffffffff5551ac
0x000000000040cbd9 : call 0xffffffffff5551ad
0x000000000040cbd8 : call 0xffffffffff5551ae
0x000000000041b1b9 : call qword ptr [r12 + rbx*8]
0x000000000040bf66 : call qword ptr [rax]
0x000000000040dbf5 : call qword ptr [rcx]
0x00000000004037b4 : call qword ptr [rdx]
0x000000000040bb2f : call qword ptr [rsi]
0x000000000041b1ba : call qword ptr [rsp + rbx*8]
0x0000000000401b5d : call rax
0x000000000040a34a : call rbx
0x000000000041c80b : call rdx
0x0000000000403fb6 : call rsi
0x0000000000419e7c : cdq ; ret
0x0000000000404530 : clc ; add rsp, 0x420 ; pop rbp ; ret
0x0000000000416312 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419150 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401aff : clc ; jne 0x401b08 ; pop rbp ; ret
0x0000000000405376 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000405367 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040536b : clc ; pop rbp ; ret
0x000000000040c82d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000416e4d : cmp al, -0x2a ; ret
0x000000000040ba4f : cmp al, 0x25 ; ret 0x41b7
0x0000000000401abd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ad0 ; pop rbp ; ret
0x000000000040eb04 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041997b : cwde ; js 0x419925 ; ret
0x00000000004199c2 : cwde ; js 0x41996c ; ret
0x00000000004199fc : cwde ; js 0x4199a6 ; ret
0x0000000000403be8 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c9d2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040ccdd : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040e1e4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000404d3d : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004119a3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004189df : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000040bd18 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000405192 : enter -1, -0x39 ; pushfq ; insd dword ptr [rdi], dx ; ret 0x7612
0x0000000000403958 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004175fb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040527b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004038dd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415d84 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fb19 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403fae : fcos ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x0000000000404442 : fisttp qword ptr [rdi - 0x47] ; ret
0x0000000000413564 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000405216 : fmul dword ptr [rcx + 0x45c7820c] ; pushfq ; insd dword ptr [rdi], dx ; ret 0x7612
0x000000000041b1bc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401d99 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004192ac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ad0 : hlt ; pop rbp ; mov edi, 0x61d2e8 ; jmp rax
0x00000000004122fe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040c189 : in al, -0x7f ; ret 0xff9f
0x000000000040c36f : in al, -0x7f ; ret 0xffbf
0x000000000040c415 : in al, -0x7f ; ret 0xffc5
0x000000000040c443 : in al, -0x7f ; ret 0xffd5
0x000000000040c511 : in al, -0x7f ; ret 0xffd8
0x000000000040c6a7 : in al, -0x7f ; ret 0xffe0
0x000000000041cdc1 : in al, -1 ; call qword ptr [rax]
0x0000000000410a5c : in al, 0x37 ; ret 0x8923
0x0000000000418d13 : in al, 0x48 ; add esp, 0x1f0 ; pop rbp ; ret
0x0000000000415c1f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041607f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040623a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000415b4b : in al, dx ; pop rbp ; ret
0x0000000000410ab0 : in eax, 0x37 ; ret 0x8923
0x0000000000411276 : in eax, 0x37 ; ret 0x8a23
0x000000000041a07b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d7ff : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040bdc1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e3aa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004035b8 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040f2b8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000405194 : inc edi ; pushfq ; insd dword ptr [rdi], dx ; ret 0x7612
0x0000000000403fb0 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000041b06a : insd dword ptr [rdi], dx ; push rax ; lodsb al, byte ptr [rsi] ; jmp 0x41b173
0x0000000000404ec4 : insd dword ptr [rdi], dx ; ret 0x7612
0x000000000040895f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040bf9f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401ac3 : ja 0x401aca ; pop rbp ; ret
0x0000000000401acf : je 0x401acd ; pop rbp ; mov edi, 0x61d2e8 ; jmp rax
0x000000000041b082 : jg 0x41b096 ; xchg eax, esp ; ret 0xd284
0x0000000000404416 : jge 0x4043e4 ; call 0x4048e8
0x0000000000405347 : jge 0x40530d ; call 0x401624
0x0000000000405366 : jge 0x405367 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411e18 : jge 0x411e2f ; ret
0x0000000000412303 : jge 0x41231a ; ret
0x000000000041a5e9 : jge 0x41a5e3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000411cec : jl 0x411d03 ; ret
0x000000000040169b : jmp 0x4015f7
0x0000000000403a20 : jmp 0x404540
0x000000000040b94d : jmp 0x40e633
0x000000000040e3e1 : jmp 0x40e635
0x000000000040bc95 : jmp 0x40e636
0x00000000004122fd : jmp 0x412875
0x00000000004164cc : jmp 0x4164d7
0x0000000000418ae9 : jmp 0x418d23
0x00000000004197bb : jmp 0x4197c6
0x000000000041a42b : jmp 0x41a436
0x000000000041b06d : jmp 0x41b170
0x000000000041b021 : jmp 0x41b171
0x00000000004166ce : jmp 0xffffffffb7036a9a
0x000000000041997a : jmp 0xffffffffc3e6121b
0x000000000040ba6d : jmp qword ptr [rax]
0x000000000040cbdf : jmp qword ptr [rbx]
0x000000000040e5b0 : jmp qword ptr [rcx]
0x000000000040eb05 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040a0b6 : jmp qword ptr [rdx]
0x00000000004116c0 : jmp qword ptr [rsi]
0x0000000000401ad7 : jmp rax
0x000000000040d702 : jmp rbx
0x000000000041c06b : jmp rcx
0x000000000040dd9e : jmp rdi
0x0000000000401b17 : jmp rdx
0x000000000040d799 : jmp rsp
0x0000000000401b00 : jne 0x401b07 ; pop rbp ; ret
0x000000000040f2b6 : jne 0x40f2bf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000405354 : jo 0x40535c ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f4d1 : jo 0x40f532 ; ret
0x000000000040f5f4 : jo 0x40f655 ; ret
0x000000000040f72e : jo 0x40f78f ; ret
0x000000000041360c : jo 0x41366d ; ret
0x0000000000419154 : jo 0x4191b5 ; ret
0x000000000040e626 : js 0x40e63a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041997c : js 0x419924 ; ret
0x00000000004199c3 : js 0x41996b ; ret
0x00000000004199fd : js 0x4199a5 ; ret
0x000000000041b06c : lodsb al, byte ptr [rsi] ; jmp 0x41b171
0x00000000004065fe : loopne 0x406607 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413350 : loopne 0x413359 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041375c : loopne 0x4137ac ; add esp, 0x40 ; pop rbp ; ret
0x000000000041375b : loopne 0x4137ad ; add esp, 0x40 ; pop rbp ; ret
0x0000000000416692 : loopne 0x4166e2 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000416691 : loopne 0x4166e3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041b160 : loopne 0x41b1b3 ; add esp, 0x150 ; pop rbp ; ret
0x0000000000405259 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405350 : mov ah, 0x48 ; add esp, 0x170 ; pop rbp ; ret
0x0000000000401f40 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041cdd4 : mov ah, 0xd ; add byte ptr [rax], al ; in al, -1 ; call qword ptr [rax]
0x00000000004040ce : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404059 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000410fae : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004067bb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004196cd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041987d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a079 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fb0c : mov bh, 0x41 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x41b7
0x00000000004053b1 : mov byte ptr [0x61d368], al ; pop rbp ; ret
0x000000000041a8fa : mov byte ptr [r15], r9b ; test cl, ch ; add al, 0 ; add cl, ch ; ret
0x000000000040e178 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041153b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405377 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041a8fb : mov byte ptr [rdi], cl ; test cl, ch ; add al, 0 ; add cl, ch ; ret
0x0000000000401b33 : mov byte ptr [rip + 0x21b81e], 1 ; ret
0x00000000004048f4 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004045d4 : mov dh, 0x29 ; sbb ebp, ecx ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a1a5 : mov dl, -0x47 ; ret
0x000000000040538d : mov dword ptr [0x61d360], edi ; pop rbp ; ret
0x0000000000406477 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040623b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004063af : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401f3e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418ae6 : mov dword ptr [rbp - 0x7c], eax ; jmp 0x418d26
0x0000000000401d97 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405365 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040662d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410046 : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000401b36 : mov eax, 0xf3010021 ; ret
0x000000000040612f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041369b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041337f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004059cc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000415c1d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415b49 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041379e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413070 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040647a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000416690 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041375a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041395d : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406024 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040612c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406235 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004063b1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040f4cb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004192aa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416310 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041914e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405369 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b5b : mov ebp, esp ; call rax
0x0000000000401ac1 : mov ebp, esp ; ja 0x401acc ; pop rbp ; ret
0x0000000000406238 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000418855 : mov ecx, gs ; ret 4
0x0000000000401b55 : mov edi, 0x61ce20 ; mov rbp, rsp ; call rax
0x0000000000401ad2 : mov edi, 0x61d2e8 ; jmp rax
0x0000000000401b12 : mov edi, 0x61d2e8 ; jmp rdx
0x0000000000404415 : mov edi, dword ptr [rbp - 0x3c] ; call 0x4048e9
0x0000000000405346 : mov edi, dword ptr [rbp - 0x40] ; call 0x401625
0x000000000041b1b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041b1b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401b10 : mov esi, eax ; mov edi, 0x61d2e8 ; jmp rdx
0x000000000040538c : mov qword ptr [0x61d360], rdi ; pop rbp ; ret
0x0000000000405364 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040662c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401f3f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000418854 : mov r9d, gs ; ret 4
0x000000000041369a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041337e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004059cb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041379d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041306f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041668f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413759 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406023 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040612b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f4ca : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405368 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b5a : mov rbp, rsp ; call rax
0x0000000000401ac0 : mov rbp, rsp ; ja 0x401acd ; pop rbp ; ret
0x0000000000405345 : mov rdi, qword ptr [rbp - 0x40] ; call 0x401626
0x0000000000401b0f : mov rsi, rax ; mov edi, 0x61d2e8 ; jmp rdx
0x000000000040f2ba : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040f2bb : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040ca0c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041a41e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004051fe : movabs al, byte ptr [0x8948c8458b48c189] ; ret 0x8148
0x00000000004122fc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x412876
0x000000000041997d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004048f3 : movzx eax, al ; pop rbp ; ret
0x000000000040537a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041b1d8 : nop dword ptr [rax + rax] ; ret
0x000000000040e627 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040fb11 : or al, 0x25 ; ret 0x41b7
0x000000000041c068 : or byte ptr [rbx - 2], bl ; jmp rcx
0x00000000004119a7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040f6b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041987f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004196cf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403fad : out dx, eax ; fcos ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000041b1cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b1ce : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e952 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041b1d0 : pop r14 ; pop r15 ; ret
0x000000000040e954 : pop r15 ; pop rbp ; ret
0x000000000041b1d2 : pop r15 ; ret
0x0000000000419ef8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401b32 : pop rbp ; mov byte ptr [rip + 0x21b81e], 1 ; ret
0x0000000000401ad1 : pop rbp ; mov edi, 0x61d2e8 ; jmp rax
0x0000000000401b0e : pop rbp ; mov rsi, rax ; mov edi, 0x61d2e8 ; jmp rdx
0x000000000041b1cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b1cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401ac5 : pop rbp ; ret
0x000000000040e951 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e62a : pop rbx ; pop rbp ; ret
0x000000000041a1a4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040e955 : pop rdi ; pop rbp ; ret
0x000000000041b1d3 : pop rdi ; ret
0x000000000041a5eb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e953 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041b1d1 : pop rsi ; pop r15 ; ret
0x000000000041b1cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408862 : pop rsp ; ret
0x0000000000419fb9 : popfq ; ret 0xd284
0x00000000004053b4 : push 0x5d0061d3 ; ret
0x000000000040e04f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000041cdc0 : push rax ; in al, -1 ; call qword ptr [rax]
0x000000000041b06b : push rax ; lodsb al, byte ptr [rsi] ; jmp 0x41b172
0x0000000000401d49 : push rax ; pop rbp ; ret
0x0000000000412c5b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000413563 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000405215 : push rbp ; fmul dword ptr [rcx + 0x45c7820c] ; pushfq ; insd dword ptr [rdi], dx ; ret 0x7612
0x000000000040c188 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040c36e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040c414 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040c442 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040c510 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040c6a6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401b54 : push rbp ; mov edi, 0x61ce20 ; mov rbp, rsp ; call rax
0x0000000000405197 : pushfq ; insd dword ptr [rdi], dx ; ret 0x7612
0x0000000000417a83 : pushfq ; ret 0x8445
0x00000000004177cc : pushfq ; ret 0xd284
0x00000000004015e1 : ret
0x000000000040eb09 : ret 0
0x0000000000416c29 : ret 0x10
0x000000000041a0ab : ret 0x2030
0x00000000004018a2 : ret 0x21b8
0x00000000004016a2 : ret 0x21b9
0x000000000040bb67 : ret 0x2a
0x000000000040ee86 : ret 0x2c1
0x0000000000413fb3 : ret 0x2c22
0x0000000000416601 : ret 0x30
0x000000000040ba51 : ret 0x41b7
0x0000000000408aca : ret 0x43fa
0x000000000040d7e0 : ret 0x4ae8
0x0000000000419453 : ret 0x5e5
0x000000000041a9ff : ret 0x5eff
0x00000000004024df : ret 0x604d
0x0000000000404ec5 : ret 0x7612
0x0000000000405207 : ret 0x8148
0x00000000004035bc : ret 0x8445
0x0000000000409879 : ret 0x8589
0x0000000000408960 : ret 0x891a
0x0000000000410a5e : ret 0x8923
0x0000000000419a5c : ret 0x8934
0x0000000000413567 : ret 0x8948
0x00000000004166d1 : ret 0x89b6
0x0000000000411278 : ret 0x8a23
0x0000000000419a38 : ret 0x8b34
0x000000000040d7c5 : ret 0x8b48
0x0000000000413c6c : ret 0x979f
0x000000000040c835 : ret 0xa9b9
0x00000000004082b2 : ret 0xade6
0x000000000040388f : ret 0xb0
0x000000000040bfa0 : ret 0xb91a
0x000000000041698b : ret 0xb9b6
0x0000000000403297 : ret 0xc
0x0000000000401af5 : ret 0xc148
0x00000000004038e4 : ret 0xd284
0x000000000040e053 : ret 0xd4e9
0x0000000000417fcc : ret 0xd767
0x000000000040e66c : ret 0xee8
0x000000000041855d : ret 0xf08
0x0000000000404060 : ret 0xf280
0x000000000040ca15 : ret 0xf41
0x000000000040c18b : ret 0xff9f
0x000000000040db2e : ret 0xffa5
0x0000000000405d6a : ret 0xffb8
0x000000000040c371 : ret 0xffbf
0x000000000040cddb : ret 0xffc4
0x000000000040c417 : ret 0xffc5
0x000000000040c445 : ret 0xffd5
0x000000000040c513 : ret 0xffd8
0x000000000040ce81 : ret 0xffd9
0x000000000040c6a9 : ret 0xffe0
0x000000000040b77e : ret 0xfffa
0x000000000040534b : ret 0xffff
0x0000000000404d45 : ret 1
0x000000000040cce0 : ret 2
0x000000000040e167 : ret 4
0x00000000004119d8 : ret 5
0x000000000040e850 : ret 8
0x000000000040ff4f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403af2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417774 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fc97 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417d85 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004015d9 : rol dword ptr [rdx], cl ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406236 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401afc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b0b ; pop rbp ; ret
0x00000000004048d1 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406237 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000413560 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000414e21 : sahf ; ret 0xd284
0x0000000000401ace : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407cb3
0x0000000000416e4e : salc ; ret
0x0000000000401afe : sar eax, 1 ; jne 0x401b09 ; pop rbp ; ret
0x0000000000401afd : sar rax, 1 ; jne 0x401b0a ; pop rbp ; ret
0x000000000040f2e9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000413143 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c82e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004045d6 : sbb ebp, ecx ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004048ee : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004048f0 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401ad4 : shl byte ptr [rcx], cl ; jmp rax
0x0000000000401b14 : shl byte ptr [rcx], cl ; jmp rdx
0x0000000000405391 : shl dword ptr [rcx], cl ; pop rbp ; ret
0x0000000000405348 : shr al, -0x2e ; ret 0xffff
0x0000000000403910 : shr al, -0x66 ; ret
0x0000000000409877 : sub al, 0x38 ; ret 0x8589
0x000000000040c833 : sub al, 0x38 ; ret 0xa9b9
0x000000000040bc97 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41b7
0x000000000041b231 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041b230 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000418401 : sysenter
0x0000000000412c7b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004189b1 : test al, -0x47 ; ret 0xf08
0x000000000040ffc9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405119 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f4cd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000412b58 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041b1da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404d3f : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004119a5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000415554 : test ch, cl ; ret
0x000000000041a8fd : test cl, ch ; add al, 0 ; add cl, ch ; ret
0x00000000004037b0 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000403fb2 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x0000000000412c60 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004129c8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000403290 : test dword ptr [rsp + rdi*8 - 0x7bf00001], edx ; ret 0xc
0x0000000000411271 : test eax, 0xb9310e48 ; in eax, 0x37 ; ret 0x8a23
0x0000000000415553 : test r13b, r9b ; ret
0x0000000000403dd1 : xchg eax, ebp ; ret
0x00000000004035bb : xchg eax, ebp ; ret 0x8445
0x00000000004038e3 : xchg eax, ebp ; ret 0xd284
0x000000000040405f : xchg eax, ebp ; ret 0xf280
0x000000000040bc96 : xchg eax, ebx ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41b7
0x000000000040985b : xchg eax, ecx ; ret
0x0000000000417601 : xchg eax, edi ; ret 0xd284
0x00000000004099ab : xchg eax, edx ; ret
0x0000000000412b5e : xchg eax, edx ; ret 0xd284
0x000000000040f1e2 : xchg eax, esi ; ret
0x0000000000406843 : xchg eax, esp ; ret
0x0000000000404f68 : xchg eax, esp ; ret 0x8445
0x000000000040511f : xchg eax, esp ; ret 0xd284
0x00000000004048ef : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041c569 : xor bh, bh ; jmp qword ptr [rax]
0x000000000040f7e7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041c689 : xor edi, edi ; jmp qword ptr [rdx]
0x00000000004063ad : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
