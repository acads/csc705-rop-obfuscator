0x000000000040e57b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bf59 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412f6b : add al, ah ; mov bh, bh ; jmp rax
0x000000000041306b : add al, ah ; mov dh, -1 ; jmp rax
0x0000000000413337 : add al, bl ; idiv dh ; call qword ptr [rsi]
0x000000000040de73 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401b4e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7d257bb], cl ; ret
0x0000000000401c43 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000413277 : add al, cl ; out -2, al ; call qword ptr [rax]
0x000000000040e26e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040dfd6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041260f : add bl, dh ; ret
0x00000000004130f8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], dl ; loop 0x413105 ; jmp qword ptr [rax]
0x0000000000413275 : add byte ptr [rax], al ; add al, cl ; out -2, al ; call qword ptr [rax]
0x000000000040e26c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040dfd4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041260d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041260b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004006a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400420 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400422 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040bc9e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411cf9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000411c75 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000401b99 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6d257bb], cl ; ret
0x000000000041093e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040ab51 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000411db5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000410688 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004115f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403bad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004030df : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004104bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e16a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403b8f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a60b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004115bd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000413332 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, bl ; idiv dh ; call qword ptr [rsi]
0x000000000040bf5b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b9c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411178 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e57d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bf17 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401113 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x00000000004115b9 : add byte ptr [rax], al ; jmp 0x4115c8
0x0000000000412229 : add byte ptr [rax], al ; jmp 0x412238
0x0000000000412f7b : add byte ptr [rax], al ; mov dr1, edi ; jmp qword ptr [rax]
0x0000000000412437 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402d19 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403479 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413272 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, cl ; out -2, al ; call qword ptr [rax]
0x0000000000402147 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc9f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b978 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004006ae : add byte ptr [rax], al ; ret
0x0000000000400426 : add byte ptr [rax], al ; ret 0
0x00000000004130fb : add byte ptr [rax], dl ; loop 0x413102 ; jmp qword ptr [rax]
0x000000000040bca0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b979 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411cfb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000411c77 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000401b9b : add byte ptr [rbx - 0x6d257bb], cl ; ret
0x0000000000401b50 : add byte ptr [rbx - 0x7d257bb], cl ; ret
0x0000000000410940 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040ab53 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000413333 : add byte ptr [rcx + rax], ah ; add al, bl ; idiv dh ; call qword ptr [rsi]
0x000000000040e2be : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401528 : add byte ptr [rcx], al ; ret
0x0000000000411db7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041068a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004115fa : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403baf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004030e1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004104bf : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e16c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403b91 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a60d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402160 : add byte ptr [rdx + 0x61], 0 ; pop rbp ; ret
0x000000000040cfb9 : add cl, ch ; ret
0x00000000004115bf : add cl, ch ; ret 0
0x0000000000401c45 : add cl, ch ; ret 1
0x0000000000413335 : add dword ptr [rax], eax ; add al, bl ; idiv dh ; call qword ptr [rsi]
0x000000000040bf15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c63a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004114d1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413334 : add dword ptr fs:[rax], eax ; add al, bl ; idiv dh ; call qword ptr [rsi]
0x0000000000401524 : add eax, 0x212d4e ; add ebx, esi ; ret
0x00000000004014eb : add eax, edx ; sar rax, 1 ; jne 0x4014fc ; pop rbp ; ret
0x0000000000401529 : add ebx, esi ; ret
0x0000000000412f2d : add edi, edi ; jmp rax
0x000000000040178b : add esp, 0x10 ; pop rbp ; ret
0x000000000040e2bc : add esp, 0x100 ; pop rbp ; ret
0x000000000040c637 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000402143 : add esp, 0x130 ; pop rbp ; ret
0x000000000040e42c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040b9c3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000410c43 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041117b : add esp, 0x30 ; pop rbp ; ret
0x0000000000402e87 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401741 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402486 : add esp, 0x60 ; pop rbp ; ret
0x000000000040c81f : add esp, 0x70 ; pop rbp ; ret
0x0000000000402766 : add esp, 0x80 ; pop rbp ; ret
0x000000000040f962 : add esp, 0x90 ; pop rbp ; ret
0x000000000040323e : add esp, 0xa0 ; pop rbp ; ret
0x000000000040b974 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000401116 : add esp, 8 ; ret
0x00000000004014ea : add rax, rdx ; sar rax, 1 ; jne 0x4014fd ; pop rbp ; ret
0x000000000040178a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040e2bb : add rsp, 0x100 ; pop rbp ; ret
0x000000000040c636 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000402142 : add rsp, 0x130 ; pop rbp ; ret
0x000000000040e42b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040b9c2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000410c42 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041117a : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e86 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401740 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402485 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040c81e : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402765 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040f961 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040323d : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040b973 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000401115 : add rsp, 8 ; ret
0x00000000004114d0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401527 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040215f : and eax, 0x614280 ; pop rbp ; ret
0x0000000000402183 : and eax, 0x614288 ; pop rbp ; ret
0x000000000040e450 : call 0x401239
0x0000000000401e5f : call 0xffffffffc7401e6e
0x000000000040b9b9 : call 0xffffffffe9034309
0x000000000040b9b8 : call 0xffffffffe903430a
0x00000000004073fd : call 0xfffffffff738f994
0x0000000000410705 : call 0xffffffffff458cda
0x0000000000409f29 : call 0xffffffffff5524fb
0x0000000000409f28 : call 0xffffffffff5524fc
0x0000000000409f29 : call 0xffffffffff5524fd
0x0000000000409f28 : call 0xffffffffff5524fe
0x00000000004125e9 : call qword ptr [r12 + rbx*8]
0x00000000004092b6 : call qword ptr [rax]
0x000000000040af45 : call qword ptr [rcx]
0x0000000000408ee3 : call qword ptr [rdx]
0x0000000000408e7f : call qword ptr [rsi]
0x00000000004125ea : call qword ptr [rsp + rbx*8]
0x000000000040154d : call rax
0x000000000040769a : call rbx
0x00000000004138bb : call rdx
0x000000000040e274 : call rsi
0x0000000000411c7c : cdq ; ret
0x0000000000402141 : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040f552 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410f50 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004014ef : clc ; jne 0x4014f8 ; pop rbp ; ret
0x0000000000401b55 : clc ; ret
0x0000000000409b7d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040fd0d : cmp al, -0x2a ; ret
0x000000000040215e : cmp al, 0x25 ; add byte ptr [rdx + 0x61], 0 ; pop rbp ; ret
0x00000000004014ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014c0 ; pop rbp ; ret
0x000000000040be54 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041177b : cwde ; js 0x411725 ; ret
0x00000000004117c2 : cwde ; js 0x41176c ; ret
0x00000000004117fc : cwde ; js 0x4117a6 ; ret
0x000000000040e454 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x412d
0x000000000040d637 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409d22 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a02d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040b534 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000401c3f : dec dword ptr [rdi] ; test byte ptr [rbx], bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040cfb3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000409068 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004104bb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004030dd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040efc4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ce69 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e451 : fld xword ptr [rip - 0x72b70001] ; xor al, 0x25 ; ret 0x412d
0x000000000040eb74 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004125ec : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401789 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004110ac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004014c0 : hlt ; pop rbp ; mov edi, 0x614230 ; jmp rax
0x0000000000413339 : idiv dh ; call qword ptr [rsi]
0x000000000040d90e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004094d9 : in al, -0x7f ; ret 0xff9f
0x00000000004096bf : in al, -0x7f ; ret 0xffbf
0x0000000000409765 : in al, -0x7f ; ret 0xffc5
0x0000000000409793 : in al, -0x7f ; ret 0xffd5
0x0000000000409861 : in al, -0x7f ; ret 0xffd8
0x00000000004099f7 : in al, -0x7f ; ret 0xffe0
0x000000000040181d : in al, 0x2d ; ret 0x5711
0x000000000040f2bf : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040358a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004017e4 : in al, dx ; ret 0x5711
0x0000000000411e7b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ab4f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000409111 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b6fa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004130f7 : inc dword ptr [rax] ; or al, 0 ; add byte ptr [rax], dl ; loop 0x413106 ; jmp qword ptr [rax]
0x0000000000401e4f : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000413067 : inc eax ; or dword ptr [rax], eax ; add al, ah ; mov dh, -1 ; jmp rax
0x000000000040c608 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000405caf : insd dword ptr [rdi], dx ; ret 0x891a
0x00000000004092ef : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401f17 : int 0x9e
0x00000000004014b3 : ja 0x4014ba ; pop rbp ; ret
0x00000000004014bf : je 0x4014bd ; pop rbp ; mov edi, 0x614230 ; jmp rax
0x000000000040d428 : jge 0x40d43f ; ret
0x000000000040d913 : jge 0x40d92a ; ret
0x00000000004123e9 : jge 0x4123e3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040d2fc : jl 0x40d313 ; ret
0x000000000040116b : jmp 0x401127
0x0000000000401e5e : jmp 0x402154
0x0000000000408c9d : jmp 0x40b983
0x000000000040b731 : jmp 0x40b985
0x000000000040d90d : jmp 0x40de85
0x00000000004115bb : jmp 0x4115c6
0x000000000041222b : jmp 0x412236
0x000000000040f58e : jmp 0xffffffffb702f95a
0x000000000041177a : jmp 0xffffffffc3e5901b
0x0000000000408dbd : jmp qword ptr [rax]
0x0000000000409f2f : jmp qword ptr [rbx]
0x000000000040b900 : jmp qword ptr [rcx]
0x000000000040be55 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000407406 : jmp qword ptr [rdx]
0x0000000000409ebf : jmp qword ptr [rsi]
0x00000000004014c7 : jmp rax
0x000000000040aa52 : jmp rbx
0x000000000040b0ee : jmp rdi
0x0000000000401507 : jmp rdx
0x000000000040aae9 : jmp rsp
0x00000000004014f0 : jne 0x4014f7 ; pop rbp ; ret
0x000000000040c606 : jne 0x40c60f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040c821 : jo 0x40c882 ; ret
0x000000000040c944 : jo 0x40c9a5 ; ret
0x000000000040ca7e : jo 0x40cadf ; ret
0x000000000040ec1c : jo 0x40ec7d ; ret
0x0000000000410f54 : jo 0x410fb5 ; ret
0x000000000040b976 : js 0x40b98a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041177c : js 0x411724 ; ret
0x00000000004117c3 : js 0x41176b ; ret
0x00000000004117fd : js 0x4117a5 ; ret
0x00000000004130fd : loop 0x413100 ; jmp qword ptr [rax]
0x000000000040394e : loopne 0x403957 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e960 : loopne 0x40e969 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ed6c : loopne 0x40edbc ; add esp, 0x40 ; pop rbp ; ret
0x000000000040ed6b : loopne 0x40edbd ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401930 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004106da : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403b0b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004114cd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041167d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411e79 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412f6d : mov bh, bh ; jmp rax
0x0000000000402181 : mov byte ptr [0x614288], al ; pop rbp ; ret
0x000000000040b4c8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401523 : mov byte ptr [rip + 0x212d4e], 1 ; ret
0x00000000004114d3 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041306d : mov dh, -1 ; jmp rax
0x0000000000411fa5 : mov dl, -0x47 ; ret
0x0000000000412f7d : mov dr1, edi ; jmp qword ptr [rax]
0x000000000040215d : mov dword ptr [0x614280], edi ; pop rbp ; ret
0x00000000004037c7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040358b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004036ff : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040192e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401787 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040397d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040347f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ecab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e83 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e98f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d1c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040edae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e680 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004037ca : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ed6a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403374 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040347c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403585 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403701 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040c81b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004110aa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f550 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410f4e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040154b : mov ebp, esp ; call rax
0x00000000004014b1 : mov ebp, esp ; ja 0x4014bc ; pop rbp ; ret
0x0000000000403588 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401545 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x00000000004014c2 : mov edi, 0x614230 ; jmp rax
0x0000000000401502 : mov edi, 0x614230 ; jmp rdx
0x00000000004125e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004125e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401500 : mov esi, eax ; mov edi, 0x614230 ; jmp rdx
0x0000000000401b4d : mov esp, 0x8b000002 ; test al, 0x2d ; clc ; ret
0x000000000040215c : mov qword ptr [0x614280], rdi ; pop rbp ; ret
0x000000000040397c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040192f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040ecaa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e82 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e98e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d1b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040edad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e67f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ed69 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403373 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040347b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c81a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040154a : mov rbp, rsp ; call rax
0x00000000004014b0 : mov rbp, rsp ; ja 0x4014bd ; pop rbp ; ret
0x00000000004014ff : mov rsi, rax ; mov edi, 0x614230 ; jmp rdx
0x000000000040c60a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040c60b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000409d5c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041221e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000413274 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, cl ; out -2, al ; call qword ptr [rax]
0x000000000040d90c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x40de86
0x000000000041177d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004114d2 : movzx eax, al ; pop rbp ; ret
0x0000000000412608 : nop dword ptr [rax + rax] ; ret
0x00000000004130f9 : or al, 0 ; add byte ptr [rax], dl ; loop 0x413104 ; jmp qword ptr [rax]
0x000000000040b977 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413069 : or dword ptr [rax], eax ; add al, ah ; mov dh, -1 ; jmp rax
0x000000000040cfb7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040ca01 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401111 : or eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413279 : out -2, al ; call qword ptr [rax]
0x000000000041167f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004114cf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004125fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004125fe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bca2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412600 : pop r14 ; pop r15 ; ret
0x000000000040bca4 : pop r15 ; pop rbp ; ret
0x0000000000412602 : pop r15 ; ret
0x0000000000411cf8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401522 : pop rbp ; mov byte ptr [rip + 0x212d4e], 1 ; ret
0x00000000004014c1 : pop rbp ; mov edi, 0x614230 ; jmp rax
0x00000000004014fe : pop rbp ; mov rsi, rax ; mov edi, 0x614230 ; jmp rdx
0x00000000004125fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004125ff : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014b5 : pop rbp ; ret
0x000000000040bca1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b97a : pop rbx ; pop rbp ; ret
0x0000000000411fa4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040bca5 : pop rdi ; pop rbp ; ret
0x0000000000412603 : pop rdi ; ret
0x00000000004123eb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bca3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412601 : pop rsi ; pop r15 ; ret
0x00000000004125fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bb2 : pop rsp ; ret
0x0000000000411db9 : popfq ; ret 0xd284
0x000000000040b39f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401743 : push rax ; pop rbp ; ret
0x000000000040e26b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040eb73 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004094d8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004096be : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000409764 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000409792 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000409860 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004099f6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401544 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000410943 : pushfq ; ret 0x8445
0x000000000041068c : pushfq ; ret 0xd284
0x00000000004006b0 : ret
0x0000000000400428 : ret 0
0x000000000040fae9 : ret 0x10
0x0000000000411eab : ret 0x2030
0x0000000000401372 : ret 0x212d
0x0000000000401172 : ret 0x212e
0x0000000000408eb7 : ret 0x2a
0x000000000040c1d6 : ret 0x2c1
0x000000000040ab30 : ret 0x3ae8
0x000000000040e459 : ret 0x412d
0x0000000000405e1a : ret 0x43fa
0x00000000004017e5 : ret 0x5711
0x0000000000411253 : ret 0x5e5
0x0000000000401e53 : ret 0x8445
0x0000000000406bc9 : ret 0x8589
0x0000000000405cb0 : ret 0x891a
0x000000000041185c : ret 0x8934
0x000000000040eb77 : ret 0x8948
0x000000000040f591 : ret 0x89b6
0x0000000000411838 : ret 0x8b34
0x000000000040ab15 : ret 0x8b48
0x0000000000409b85 : ret 0xa9b9
0x0000000000405602 : ret 0xade6
0x0000000000402016 : ret 0xb0
0x00000000004092f0 : ret 0xb91a
0x000000000040f84b : ret 0xb9b6
0x00000000004014e5 : ret 0xc148
0x00000000004030e4 : ret 0xd284
0x000000000040b3a3 : ret 0xd4e9
0x000000000040b9bc : ret 0xee8
0x0000000000409d65 : ret 0xf41
0x0000000000401d17 : ret 0xf568
0x00000000004094db : ret 0xff9f
0x000000000040ae7e : ret 0xffa5
0x00000000004096c1 : ret 0xffbf
0x000000000040a12b : ret 0xffc4
0x0000000000409767 : ret 0xffc5
0x0000000000409795 : ret 0xffd5
0x0000000000409863 : ret 0xffd8
0x000000000040a1d1 : ret 0xffd9
0x00000000004099f9 : ret 0xffe0
0x0000000000408ace : ret 0xfffa
0x0000000000401c47 : ret 1
0x0000000000401d6e : ret 2
0x000000000040b4b7 : ret 4
0x000000000040cfe8 : ret 5
0x000000000040bba0 : ret 8
0x0000000000410634 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410c45 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412f68 : rol byte ptr [rip - 0x75200000], -1 ; jmp rax
0x0000000000403586 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004014ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014fb ; pop rbp ; ret
0x0000000000403587 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000413068 : ror byte ptr [rcx], 0 ; add al, ah ; mov dh, -1 ; jmp rax
0x0000000000413168 : ror byte ptr [rip - 0xd600000], -1 ; jmp rax
0x000000000040eb70 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004115fc : sahf ; ret 0xd284
0x000000000040fd0e : salc ; ret
0x00000000004014ee : sar eax, 1 ; jne 0x4014f9 ; pop rbp ; ret
0x00000000004014ed : sar rax, 1 ; jne 0x4014fa ; pop rbp ; ret
0x000000000040c639 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e753 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409b7e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000401ba0 : stc ; ret
0x0000000000406bc7 : sub al, 0x38 ; ret 0x8589
0x0000000000409b83 : sub al, 0x38 ; ret 0xa9b9
0x000000000040e452 : sub eax, 0x8d48ffff ; xor al, 0x25 ; ret 0x412d
0x0000000000401526 : sub eax, 0xf3010021 ; ret
0x000000000041263d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401525 : sub rax, -0xcfeffdf ; ret
0x000000000041263c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040e28b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000410a88 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401b53 : test al, 0x2d ; clc ; ret
0x0000000000401d15 : test al, 0x2d ; ret 0xf568
0x0000000000401b9e : test al, 0x2d ; stc ; ret
0x000000000040c81d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040e168 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041260a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c41 : test byte ptr [rbx], bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040cfb5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040e270 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040dfd8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000403bb1 : xchg eax, ebp ; ret
0x00000000004030e3 : xchg eax, ebp ; ret 0xd284
0x0000000000406bab : xchg eax, ecx ; ret
0x00000000004104c1 : xchg eax, edi ; ret 0xd284
0x0000000000406cfb : xchg eax, edx ; ret
0x000000000040e16e : xchg eax, edx ; ret 0xd284
0x000000000040c532 : xchg eax, esi ; ret
0x0000000000403b93 : xchg eax, esp ; ret
0x0000000000401e52 : xchg eax, esp ; ret 0x8445
0x000000000040906a : xchg eax, esp ; ret 0xd284
0x000000000040e457 : xor al, 0x25 ; ret 0x412d
0x0000000000402145 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cb37 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004036fd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
