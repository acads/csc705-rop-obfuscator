0x00000000004019ef : adc al, 0x25 ; ret
0x000000000040335e : adc al, 0x25 ; ret 0x6182
0x000000000040335b : adc al, byte ptr [rdx + rcx*4] ; adc al, 0x25 ; ret 0x6182
0x000000000040335a : adc al, byte ptr es:[rdx + rcx*4] ; adc al, 0x25 ; ret 0x6182
0x0000000000403765 : adc cl, ch ; ret
0x000000000040fc2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d609 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041750b : add ah, al ; or byte ptr [rax], al ; add al, dl ; mov al, -1 ; jmp qword ptr [rbx]
0x0000000000416b9f : add ah, bl ; out -1, eax ; call rsp
0x0000000000416a1f : add ah, ch ; jne 0x416a26 ; call rsp
0x0000000000416a5f : add ah, cl ; ja 0x416a66 ; call rsp
0x000000000040335c : add al, -0x76 ; adc al, 0x25 ; ret 0x6182
0x000000000040336e : add al, 0 ; add dh, al ; ret
0x0000000000401c0b : add al, 0x25 ; ret 0x6182
0x0000000000402655 : add al, byte ptr [rax] ; add bh, al ; les r13d, ptr [r10] ; ret
0x000000000040f523 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004021f7 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b68 : add al, ch ; ret 0xfff8
0x000000000041750f : add al, dl ; mov al, -1 ; jmp qword ptr [rbx]
0x0000000000402657 : add bh, al ; les r13d, ptr [r10] ; ret
0x000000000040327a : add bh, al ; lodsb al, byte ptr [rsi] ; pop rdx ; ret
0x000000000040f91e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f686 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415f7f : add bl, dh ; ret
0x00000000004019eb : add byte ptr [r8 - 0x73], cl ; adc al, 0x25 ; ret
0x00000000004019ec : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000040f91c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f684 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415f7d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000415f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004025fd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401e91 : add byte ptr [rax], al ; add byte ptr [rbx + 0x292da045], cl ; ret
0x000000000040d34e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402e22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5a2da845], cl ; ret
0x0000000000402a14 : add byte ptr [rax], al ; add byte ptr [rbx - 0x44d257bb], cl ; ret 0x8c69
0x0000000000415669 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004155e5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000414a7e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000402699 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000415725 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004147c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004119cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040525d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004025ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403b12 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f81a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040523f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004031a6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414f2d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040d60b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d070 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404535 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fc2d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d5c7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000416a1e : add byte ptr [rax], al ; in al, dx ; jne 0x416a27 ; call rsp
0x00000000004169de : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; push -1 ; call rsp
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000414f29 : add byte ptr [rax], al ; jmp 0x414f38
0x0000000000415b99 : add byte ptr [rax], al ; jmp 0x415ba8
0x000000000041691e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, -2 ; call rsp
0x000000000041695e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sar esi, cl ; call rsp
0x000000000041699e : add byte ptr [rax], al ; loop 0x4169a6 ; call rsp
0x00000000004126f7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000415da7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004042a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404b29 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004173ae : add byte ptr [rax], al ; nop ; mov edi, edi ; call rdx
0x0000000000402942 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d34f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d028 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000416a9e : add byte ptr [rax], al ; pop rsp ; jl 0x416aa7 ; call rsp
0x0000000000416b4e : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000415f7e : add byte ptr [rax], al ; ret
0x000000000041728e : add byte ptr [rax], al ; shr byte ptr [rdi - 1], 1 ; jmp qword ptr [rdx]
0x0000000000401e93 : add byte ptr [rbx + 0x292da045], cl ; ret
0x00000000004022ad : add byte ptr [rbx + 0x2a2da045], cl ; ret
0x000000000040d350 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401fbf : add byte ptr [rbx + 0x532da045], cl ; sub esi, dword ptr [rcx] ; ret 0x8589
0x000000000040200a : add byte ptr [rbx + 0x542da045], cl ; sub esi, dword ptr [rcx] ; ret 0x8589
0x0000000000402dd9 : add byte ptr [rbx + 0x592da845], cl ; ret
0x0000000000402e24 : add byte ptr [rbx + 0x5a2da845], cl ; ret
0x000000000040d029 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402a16 : add byte ptr [rbx - 0x44d257bb], cl ; ret 0x8c69
0x00000000004029d4 : add byte ptr [rbx - 0x45d257bb], cl ; ret 0x8c69
0x000000000041566b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004155e7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000414a80 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041256e : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040269b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040f96e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401768 : add byte ptr [rcx], al ; ret
0x0000000000415727 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004147ca : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004119cf : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040525f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402601 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403b14 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f81c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405241 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004031a8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004169df : add byte ptr [rdx + rbp*2 - 1], ch ; call rsp
0x000000000041699f : add byte ptr [rdx - 2], cl ; call rsp
0x0000000000416a9f : add byte ptr [rsp + rdi*2 - 1], bl ; call rsp
0x000000000040e669 : add cl, ch ; ret
0x0000000000414f2f : add cl, ch ; ret 0
0x00000000004021f9 : add cl, ch ; ret 1
0x0000000000401c09 : add dh, al ; add al, 0x25 ; ret 0x6182
0x0000000000403370 : add dh, al ; ret
0x000000000040d5c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004022ab : add dword ptr [rax], eax ; add byte ptr [rbx + 0x2a2da045], cl ; ret
0x000000000040dcea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414e41 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401764 : add eax, 0x216b4e ; add ebx, esi ; ret
0x00000000004126f5 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000411fdf : add eax, 0xb6b80000 ; ret 0x979f
0x0000000000402dd7 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x592da845], cl ; ret
0x00000000004025d5 : add eax, dword ptr [rax] ; add dh, al ; add al, 0x25 ; ret 0x6182
0x000000000040172b : add eax, edx ; sar rax, 1 ; jne 0x40173c ; pop rbp ; ret
0x0000000000401769 : add ebx, esi ; ret
0x000000000040199b : add esp, 0x10 ; pop rbp ; ret
0x000000000040f96c : add esp, 0x100 ; pop rbp ; ret
0x000000000040dce7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040fadc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040293e : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000403826 : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040445d : add esp, 0x20 ; pop rbp ; ret
0x0000000000414d83 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000404538 : add esp, 0x30 ; pop rbp ; ret
0x00000000004125c5 : add esp, 0x380 ; pop rbp ; ret
0x0000000000401954 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401b72 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403f96 : add esp, 0x60 ; pop rbp ; ret
0x000000000040decf : add esp, 0x70 ; pop rbp ; ret
0x000000000040e53c : add esp, 0x80 ; pop rbp ; ret
0x0000000000413aa2 : add esp, 0x90 ; pop rbp ; ret
0x00000000004048ee : add esp, 0xa0 ; pop rbp ; ret
0x000000000040d024 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000403c37 : add esp, 8 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040172a : add rax, rdx ; sar rax, 1 ; jne 0x40173d ; pop rbp ; ret
0x000000000040199a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040f96b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040dce6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040fadb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040293d : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000403825 : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040445c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000414d82 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000404537 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004125c4 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000401953 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b71 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403f95 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040dece : add rsp, 0x70 ; pop rbp ; ret
0x000000000040e53b : add rsp, 0x80 ; pop rbp ; ret
0x0000000000413aa1 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004048ed : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d023 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000403c36 : add rsp, 8 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000414e40 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401767 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401c04 : and eax, 0x6182c1 ; add dh, al ; add al, 0x25 ; ret 0x6182
0x0000000000403c6f : and eax, 0x6182d8 ; pop rbp ; ret
0x0000000000403c93 : and eax, 0x6182e0 ; pop rbp ; ret
0x0000000000402732 : call 0x401618
0x000000000040d069 : call 0xffffffffe90359b9
0x000000000040d068 : call 0xffffffffe90359ba
0x0000000000408aad : call 0xfffffffff7391044
0x0000000000414845 : call 0xffffffffff45ce1a
0x000000000040b5d9 : call 0xffffffffff553bab
0x000000000040b5d8 : call 0xffffffffff553bac
0x000000000040b5d9 : call 0xffffffffff553bad
0x000000000040b5d8 : call 0xffffffffff553bae
0x0000000000415f59 : call qword ptr [r12 + rbx*8]
0x000000000040a966 : call qword ptr [rax]
0x000000000040c5f5 : call qword ptr [rcx]
0x000000000040a593 : call qword ptr [rdx]
0x000000000040a52f : call qword ptr [rsi]
0x0000000000415f5a : call qword ptr [rsp + rbx*8]
0x000000000040178d : call rax
0x0000000000408d4a : call rbx
0x0000000000416e53 : call rdx
0x000000000040f924 : call rsi
0x0000000000416923 : call rsp
0x00000000004155ec : cdq ; ret
0x000000000040293c : clc ; add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000413692 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412ae0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040172f : clc ; jne 0x401738 ; pop rbp ; ret
0x0000000000403c56 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004019c7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416b48 : cld ; sar edi, -1 ; je 0x416b63 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000040b22d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000413e4d : cmp al, -0x2a ; ret
0x00000000004016ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401700 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040d504 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004150eb : cwde ; js 0x415095 ; ret
0x0000000000415132 : cwde ; js 0x4150dc ; ret
0x000000000041516c : cwde ; js 0x415116 ; ret
0x000000000040ece7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b3d2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040b6dd : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040cbe4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040e663 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000402f5e : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff9], cl ; ret 1
0x00000000004026ea : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x000000000040a718 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004026e6 : enter -9, -1 ; dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x00000000004145fb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040356f : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040478d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413104 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e519 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410224 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415f5c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403293 : fmul qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401999 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412c3c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401700 : hlt ; pop rbp ; mov edi, 0x618260 ; jmp rax
0x000000000040efbe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000401766 : imul esp, dword ptr [rcx], 0 ; add ebx, esi ; ret
0x0000000000401765 : imul r12, qword ptr [rcx], 0 ; add ebx, esi ; ret
0x000000000040ab89 : in al, -0x7f ; ret 0xff9f
0x000000000040ad6f : in al, -0x7f ; ret 0xffbf
0x000000000040ae15 : in al, -0x7f ; ret 0xffc5
0x000000000040ae43 : in al, -0x7f ; ret 0xffd5
0x000000000040af11 : in al, -0x7f ; ret 0xffd8
0x000000000040b0a7 : in al, -0x7f ; ret 0xffe0
0x00000000004127cf : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412f9a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000416a20 : in al, dx ; jne 0x416a25 ; call rsp
0x0000000000404c3a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004126fb : in al, dx ; pop rbp ; ret
0x00000000004157eb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c1ff : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040a7c1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040cdaa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402401 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040dcb8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004169e0 : insb byte ptr [rdi], dx ; push -1 ; call rsp
0x000000000040735f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040a99f : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004016f3 : ja 0x4016fa ; pop rbp ; ret
0x0000000000416a61 : ja 0x416a64 ; call rsp
0x00000000004172d1 : jb 0x4172d4 ; jmp rdx
0x00000000004016ff : je 0x4016fd ; pop rbp ; mov edi, 0x618260 ; jmp rax
0x0000000000416b4c : je 0x416b5f ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000040340f : jge 0x4033c6 ; jmp 0x403837
0x000000000040ead8 : jge 0x40eaef ; ret
0x000000000040efc3 : jge 0x40efda ; ret
0x0000000000415d59 : jge 0x415d53 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e9ac : jl 0x40e9c3 ; ret
0x0000000000416aa1 : jl 0x416aa4 ; call rsp
0x000000000040138b : jmp 0x401307
0x00000000004026d4 : jmp 0x40294c
0x0000000000402491 : jmp 0x40294d
0x00000000004025d3 : jmp 0x40294e
0x0000000000402653 : jmp 0x40294f
0x000000000040336c : jmp 0x403835
0x000000000040500e : jmp 0x40503d
0x000000000040a34d : jmp 0x40d033
0x000000000040cde1 : jmp 0x40d035
0x000000000040efbd : jmp 0x40f535
0x0000000000414f2b : jmp 0x414f36
0x0000000000415b9b : jmp 0x415ba6
0x00000000004136ce : jmp 0xffffffffb7033a9a
0x00000000004150ea : jmp 0xffffffffc3e5c98b
0x000000000040a46d : jmp qword ptr [rax]
0x000000000040b5df : jmp qword ptr [rbx]
0x000000000040cfb0 : jmp qword ptr [rcx]
0x000000000040d505 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000408ab6 : jmp qword ptr [rdx]
0x000000000040b56f : jmp qword ptr [rsi]
0x0000000000401707 : jmp rax
0x000000000040c102 : jmp rbx
0x000000000040c79e : jmp rdi
0x0000000000401747 : jmp rdx
0x000000000040c199 : jmp rsp
0x0000000000401730 : jne 0x401737 ; pop rbp ; ret
0x000000000040dcb6 : jne 0x40dcbf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000416a21 : jne 0x416a24 ; call rsp
0x000000000040ded1 : jo 0x40df32 ; ret
0x000000000040dff4 : jo 0x40e055 ; ret
0x000000000040e12e : jo 0x40e18f ; ret
0x00000000004102cc : jo 0x41032d ; ret
0x0000000000412ae4 : jo 0x412b45 ; ret
0x000000000040d026 : js 0x40d03a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004150ec : js 0x415094 ; ret
0x0000000000415133 : js 0x4150db ; ret
0x000000000041516d : js 0x415115 ; ret
0x0000000000402659 : les r13d, ptr [r10] ; ret
0x000000000040336b : lodsb al, byte ptr [rsi] ; jmp 0x403836
0x000000000040336a : lodsb al, byte ptr [rsi] ; jmp 0x403837
0x0000000000416920 : lodsb al, byte ptr [rsi] ; mov al, -2 ; call rsp
0x000000000040327d : lodsb al, byte ptr [rsi] ; pop rdx ; ret
0x0000000000416960 : lodsb al, byte ptr [rsi] ; sar esi, cl ; call rsp
0x00000000004169a1 : loop 0x4169a3 ; call rsp
0x00000000004169a0 : loop 0x4169a4 ; call rsp
0x00000000004031a4 : loopne 0x4031ad ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403828 : loopne 0x403830 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040445b : loopne 0x4044ab ; add esp, 0x20 ; pop rbp ; ret
0x000000000040445a : loopne 0x4044ac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404ffe : loopne 0x405007 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000410010 : loopne 0x410019 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041041c : loopne 0x41046c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041041b : loopne 0x41046d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401b70 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041691c : mov ah, 3 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, -2 ; call rsp
0x000000000041695c : mov ah, 4 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sar esi, cl ; call rsp
0x000000000041699c : mov ah, 5 ; add byte ptr [rax], al ; loop 0x4169a8 ; call rsp
0x00000000004169dc : mov ah, 6 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; push -1 ; call rsp
0x0000000000416a1c : mov ah, 7 ; add byte ptr [rax], al ; in al, dx ; jne 0x416a29 ; call rsp
0x0000000000416a9c : mov ah, 9 ; add byte ptr [rax], al ; pop rsp ; jl 0x416aa9 ; call rsp
0x0000000000417511 : mov al, -1 ; jmp qword ptr [rbx]
0x0000000000416921 : mov al, -2 ; call rsp
0x000000000041481a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004051bb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000402940 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414e3d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414fed : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004157e9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403c91 : mov byte ptr [0x6182e0], al ; pop rbp ; ret
0x000000000040cb78 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403c57 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401763 : mov byte ptr [rip + 0x216b4e], 1 ; ret
0x0000000000414e43 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415915 : mov dl, -0x47 ; ret
0x0000000000403c6d : mov dword ptr [0x6182d8], edi ; pop rbp ; ret
0x0000000000404e77 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404c3b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404daf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404459 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026d1 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x40294f
0x0000000000401b6e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401997 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019c5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040502d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b63 : mov eax, 0xb0c68948 ; add al, ch ; ret 0xfff8
0x0000000000404b2f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041035b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404413 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041003f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403c33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 8 ; pop rbp ; ret
0x00000000004042ac : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004127cd : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004126f9 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041045e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fd30 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404e7a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041041a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404a24 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404b2c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404c35 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404db1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040decb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412c3a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413690 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412ade : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040336d : mov ebp, 0xc6000004 ; ret
0x000000000040178b : mov ebp, esp ; call rax
0x00000000004016f1 : mov ebp, esp ; ja 0x4016fc ; pop rbp ; ret
0x0000000000404c38 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401785 : mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000401702 : mov edi, 0x618260 ; jmp rax
0x0000000000401742 : mov edi, 0x618260 ; jmp rdx
0x0000000000415f57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004173b1 : mov edi, edi ; call rdx
0x0000000000415f56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401740 : mov esi, eax ; mov edi, 0x618260 ; jmp rdx
0x0000000000403c6c : mov qword ptr [0x6182d8], rdi ; pop rbp ; ret
0x000000000040502c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b6f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041035a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404412 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041003e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403c32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 8 ; pop rbp ; ret
0x00000000004042ab : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041045d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fd2f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410419 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404a23 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404b2b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040deca : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040178a : mov rbp, rsp ; call rax
0x00000000004016f0 : mov rbp, rsp ; ja 0x4016fd ; pop rbp ; ret
0x000000000040173f : mov rsi, rax ; mov edi, 0x618260 ; jmp rdx
0x000000000040dcba : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040dcbb : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040b40c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000415b8e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040efbc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x40f536
0x00000000004150ed : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000414e42 : movzx eax, al ; pop rbp ; ret
0x0000000000403c5a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004173b0 : nop ; mov edi, edi ; call rdx
0x0000000000415f78 : nop dword ptr [rax + rax] ; ret
0x000000000040d027 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416a5d : or byte ptr [rax], al ; add ah, cl ; ja 0x416a68 ; call rsp
0x000000000041750d : or byte ptr [rax], al ; add al, dl ; mov al, -1 ; jmp qword ptr [rbx]
0x0000000000416a9d : or dword ptr [rax], eax ; add byte ptr [rsp + rdi*2 - 1], bl ; call rsp
0x000000000040e667 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000402f61 : or eax, 0xe9000007 ; ret 1
0x000000000040e0b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416ba1 : out -1, eax ; call rsp
0x0000000000402654 : out dx, al ; add al, byte ptr [rax] ; add bh, al ; les r13d, ptr [r10] ; ret
0x0000000000414fef : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414e3f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004025d4 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add dh, al ; add al, 0x25 ; ret 0x6182
0x0000000000415f6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415f6e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d352 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415f70 : pop r14 ; pop r15 ; ret
0x000000000040d354 : pop r15 ; pop rbp ; ret
0x0000000000415f72 : pop r15 ; ret
0x0000000000415668 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401762 : pop rbp ; mov byte ptr [rip + 0x216b4e], 1 ; ret
0x0000000000401701 : pop rbp ; mov edi, 0x618260 ; jmp rax
0x000000000040173e : pop rbp ; mov rsi, rax ; mov edi, 0x618260 ; jmp rdx
0x0000000000415f6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415f6f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016f5 : pop rbp ; ret
0x000000000040d351 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d02a : pop rbx ; pop rbp ; ret
0x0000000000415914 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000402dde : pop rcx ; ret
0x000000000040d355 : pop rdi ; pop rbp ; ret
0x0000000000415f73 : pop rdi ; ret
0x0000000000415d5b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000402e29 : pop rdx ; ret
0x000000000040d353 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415f71 : pop rsi ; pop r15 ; ret
0x0000000000416aa0 : pop rsp ; jl 0x416aa5 ; call rsp
0x0000000000415f6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407262 : pop rsp ; ret
0x0000000000415729 : popfq ; ret 0xd284
0x00000000004169e1 : push -1 ; call rsp
0x000000000040ca4f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401b74 : push rax ; pop rbp ; ret
0x000000000040f91b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000410223 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040ab88 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040ad6e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040ae14 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040ae42 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040af10 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040b0a6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401784 : push rbp ; mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x000000000040343d : push rbp ; ret
0x0000000000401fc4 : push rbx ; sub esi, dword ptr [rcx] ; ret 0x8589
0x0000000000402dd6 : push rdx ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x592da845], cl ; ret
0x000000000040200f : push rsp ; sub esi, dword ptr [rcx] ; ret 0x8589
0x000000000040268d : push rsp ; sub esi, dword ptr [rcx] ; ret 0xb941
0x00000000004021f6 : pushfq ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000414a83 : pushfq ; ret 0x8445
0x00000000004147cc : pushfq ; ret 0xd284
0x00000000004012f9 : ret
0x000000000040d509 : ret 0
0x0000000000413c29 : ret 0x10
0x000000000041581b : ret 0x2030
0x0000000000401592 : ret 0x216b
0x0000000000401392 : ret 0x216c
0x000000000040a567 : ret 0x2a
0x000000000040d886 : ret 0x2c1
0x0000000000410b63 : ret 0x2c22
0x00000000004074ca : ret 0x43fa
0x000000000040e4aa : ret 0x4c
0x0000000000412de3 : ret 0x5e5
0x0000000000401c0d : ret 0x6182
0x00000000004020f0 : ret 0x7b04
0x0000000000402405 : ret 0x8445
0x0000000000401fc7 : ret 0x8589
0x0000000000407360 : ret 0x891a
0x00000000004151cc : ret 0x8934
0x0000000000410227 : ret 0x8948
0x00000000004136d1 : ret 0x89b6
0x00000000004151a8 : ret 0x8b34
0x000000000040c1c5 : ret 0x8b48
0x00000000004029da : ret 0x8c69
0x00000000004020d7 : ret 0x94aa
0x000000000041081c : ret 0x979f
0x000000000040b235 : ret 0xa9b9
0x0000000000406cb2 : ret 0xade6
0x000000000040ecea : ret 0xb0
0x000000000040a9a0 : ret 0xb91a
0x0000000000402690 : ret 0xb941
0x000000000041398b : ret 0xb9b6
0x0000000000403703 : ret 0xbd89
0x0000000000401725 : ret 0xc148
0x000000000040c1e0 : ret 0xcae8
0x0000000000402604 : ret 0xd284
0x000000000040ca53 : ret 0xd4e9
0x000000000040d06c : ret 0xee8
0x000000000040b415 : ret 0xf41
0x000000000040ab8b : ret 0xff9f
0x000000000040c52e : ret 0xffa5
0x000000000040ad71 : ret 0xffbf
0x000000000040b7db : ret 0xffc4
0x000000000040ae17 : ret 0xffc5
0x000000000040476a : ret 0xffcb
0x000000000040255d : ret 0xffd0
0x000000000040ae45 : ret 0xffd5
0x000000000040af13 : ret 0xffd8
0x000000000040b881 : ret 0xffd9
0x000000000040348a : ret 0xffe0
0x0000000000401b6a : ret 0xfff8
0x000000000040a17e : ret 0xfffa
0x00000000004021fb : ret 1
0x000000000040b6e0 : ret 2
0x000000000040cb67 : ret 4
0x000000000040e698 : ret 5
0x000000000040d250 : ret 8
0x0000000000414774 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414d85 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404c36 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040172c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40173b ; pop rbp ; ret
0x0000000000403824 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x403834 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404c37 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000410220 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004119d1 : sahf ; ret 0xd284
0x0000000000413e4e : salc ; ret
0x000000000040172e : sar eax, 1 ; jne 0x401739 ; pop rbp ; ret
0x0000000000416b49 : sar edi, -1 ; je 0x416b62 ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000416df1 : sar esi, 1 ; call qword ptr [rsi]
0x0000000000416961 : sar esi, cl ; call rsp
0x000000000040172d : sar rax, 1 ; jne 0x40173a ; pop rbp ; ret
0x0000000000403412 : sbb byte ptr [rax + rax], al ; add dh, al ; ret
0x000000000040dce9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040fe03 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004027c9 : sbb eax, -0x47 ; ret
0x0000000000403357 : sbb eax, 0x12261eb9 ; add al, -0x76 ; adc al, 0x25 ; ret 0x6182
0x000000000040b22e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040194f : sbb eax, 0x48fffffd ; add esp, 0x40 ; pop rbp ; ret
0x0000000000417290 : shr byte ptr [rdi - 1], 1 ; jmp qword ptr [rdx]
0x0000000000408277 : sub al, 0x38 ; ret 0x8589
0x000000000040b233 : sub al, 0x38 ; ret 0xa9b9
0x0000000000402696 : sub eax, 0x3d ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000401fc5 : sub esi, dword ptr [rcx] ; ret 0x8589
0x000000000040268e : sub esi, dword ptr [rcx] ; ret 0xb941
0x0000000000415fad : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000415fac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f93b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000414bc8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402ddc : test al, 0x2d ; pop rcx ; ret
0x0000000000402e27 : test al, 0x2d ; pop rdx ; ret
0x0000000000402e0e : test al, 0x2d ; ret
0x000000000040decd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040f818 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000415f7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e665 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000402f60 : test byte ptr [rip - 0x16fffff9], cl ; ret 1
0x0000000000412104 : test ch, cl ; ret
0x000000000040f920 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f688 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000412103 : test r13b, r9b ; ret
0x0000000000405261 : xchg eax, ebp ; ret
0x0000000000402404 : xchg eax, ebp ; ret 0x8445
0x0000000000402603 : xchg eax, ebp ; ret 0xd284
0x000000000040825b : xchg eax, ecx ; ret
0x0000000000403b16 : xchg eax, edi ; ret 0xd284
0x00000000004083ab : xchg eax, edx ; ret
0x00000000004026ec : xchg eax, edx ; ret 0xd284
0x000000000040dbe2 : xchg eax, esi ; ret
0x0000000000405243 : xchg eax, esp ; ret
0x000000000040269e : xchg eax, esp ; ret 0x8445
0x00000000004031aa : xchg eax, esp ; ret 0xd284
0x000000000040e1e7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404dad : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
