0x000000000040eb9b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c579 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413629 : add al, 0 ; add al, al ; add bh, bh ; jmp rax
0x0000000000413ed4 : add al, 6 ; add byte ptr [rax], al ; call 0xffffffffe3413e79
0x000000000041377b : add al, ah ; mov bh, -1 ; jmp qword ptr [rax]
0x000000000041362b : add al, al ; add bh, bh ; jmp rax
0x00000000004137eb : add al, al ; fdiv st(7), st(0) ; jmp rax
0x0000000000402cd8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e493 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402696 : add al, ch ; push rsp ; ret 0
0x00000000004135eb : add al, dh ; in al, -2 ; jmp rax
0x000000000040e88e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040e5f6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041362d : add bh, bh ; jmp rax
0x0000000000412c2f : add bl, dh ; ret
0x00000000004137f8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], dh ; loope 0x413805 ; jmp qword ptr [rax]
0x0000000000402aee : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d40c : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4131
0x0000000000413ed2 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; call 0xffffffffe3413e7b
0x000000000040e88c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040e5f4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000412c2d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d40a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4131
0x0000000000412c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400730 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400734 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c2be : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412319 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000412295 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000410f5e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040b171 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004123d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000410ca8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411c18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004041cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004036ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402995 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410add : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e78a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004041af : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004027ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411bdd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040c57b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bfe0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411798 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040eb9d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c537 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413ed6 : add byte ptr [rax], al ; call 0xffffffffe3413e77
0x00000000004135fa : add byte ptr [rax], al ; idiv esi ; jmp qword ptr [rax]
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x0000000000411bd9 : add byte ptr [rax], al ; jmp 0x411be8
0x0000000000412849 : add byte ptr [rax], al ; jmp 0x412858
0x000000000041366b : add byte ptr [rax], al ; mov bh, bh ; jmp rax
0x000000000041376b : add byte ptr [rax], al ; mov dh, -1 ; jmp rax
0x0000000000412a57 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403339 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403a99 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402c28 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c2bf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bf98 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004137ea : add byte ptr [rax], al ; rcr ah, -1 ; jmp rax
0x0000000000400736 : add byte ptr [rax], al ; ret
0x000000000041362a : add byte ptr [rax], al ; rol byte ptr [rdx], -1 ; jmp rax
0x000000000041387a : add byte ptr [rax], al ; sal ah, -1 ; jmp qword ptr [rax]
0x000000000041386a : add byte ptr [rax], al ; sal cl, -1 ; jmp rax
0x00000000004137fb : add byte ptr [rax], dh ; loope 0x413802 ; jmp qword ptr [rax]
0x000000000040c2c0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bf99 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402b7d : add byte ptr [rbx - 0x21f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041231b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000412297 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000410f60 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040b173 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040e8de : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401668 : add byte ptr [rcx], al ; ret
0x00000000004123d7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000410caa : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411c1a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004041cf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403701 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402997 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410adf : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e78c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004041b1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402801 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413ed3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; call 0xffffffffe3413e7a
0x0000000000413878 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; sal ah, -1 ; jmp qword ptr [rax]
0x000000000040d5d9 : add cl, ch ; ret
0x0000000000411bdf : add cl, ch ; ret 0
0x000000000040229b : add cl, ch ; ret 1
0x0000000000402aec : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040c535 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cc5a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411af1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401664 : add eax, 0x213c4e ; add ebx, esi ; ret
0x00000000004135e9 : add eax, dword ptr [rax] ; add al, dh ; in al, -2 ; jmp rax
0x000000000040162b : add eax, edx ; sar rax, 1 ; jne 0x40163c ; pop rbp ; ret
0x0000000000401669 : add ebx, esi ; ret
0x00000000004018bb : add esp, 0x10 ; pop rbp ; ret
0x000000000040e8dc : add esp, 0x100 ; pop rbp ; ret
0x000000000040cc57 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040ea4c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040bfe3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402c24 : add esp, 0x230 ; pop rbp ; ret
0x0000000000411263 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041179b : add esp, 0x30 ; pop rbp ; ret
0x00000000004034a7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401874 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403026 : add esp, 0x60 ; pop rbp ; ret
0x000000000040ce3f : add esp, 0x70 ; pop rbp ; ret
0x000000000040d4ac : add esp, 0x80 ; pop rbp ; ret
0x000000000040ff82 : add esp, 0x90 ; pop rbp ; ret
0x000000000040385e : add esp, 0xa0 ; pop rbp ; ret
0x000000000040bf94 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040162a : add rax, rdx ; sar rax, 1 ; jne 0x40163d ; pop rbp ; ret
0x00000000004018ba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040e8db : add rsp, 0x100 ; pop rbp ; ret
0x000000000040cc56 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040ea4b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040bfe2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c23 : add rsp, 0x230 ; pop rbp ; ret
0x0000000000411262 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041179a : add rsp, 0x30 ; pop rbp ; ret
0x00000000004034a6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401873 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403025 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040ce3e : add rsp, 0x70 ; pop rbp ; ret
0x000000000040d4ab : add rsp, 0x80 ; pop rbp ; ret
0x000000000040ff81 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040385d : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040bf93 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x0000000000411af0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401667 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000402cff : and eax, 0x6152c8 ; pop rbp ; ret
0x0000000000402d23 : and eax, 0x6152d0 ; pop rbp ; ret
0x000000000040ea70 : call 0x401359
0x0000000000402697 : call 0x40e8f2
0x0000000000413ed8 : call 0xffffffffe3413e75
0x000000000040bfd9 : call 0xffffffffe9034929
0x000000000040bfd8 : call 0xffffffffe903492a
0x0000000000407a1d : call 0xfffffffff738ffb4
0x0000000000410d25 : call 0xffffffffff4592fa
0x000000000040a549 : call 0xffffffffff552b1b
0x000000000040a548 : call 0xffffffffff552b1c
0x000000000040a549 : call 0xffffffffff552b1d
0x000000000040a548 : call 0xffffffffff552b1e
0x0000000000412c09 : call qword ptr [r12 + rbx*8]
0x00000000004098d6 : call qword ptr [rax]
0x000000000040b565 : call qword ptr [rcx]
0x0000000000409503 : call qword ptr [rdx]
0x000000000040949f : call qword ptr [rsi]
0x0000000000412c0a : call qword ptr [rsp + rbx*8]
0x000000000040168d : call rax
0x0000000000407cba : call rbx
0x0000000000413fbb : call rdx
0x000000000040e894 : call rsi
0x000000000041229c : cdq ; ret
0x000000000040fb72 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411570 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040162f : clc ; jne 0x401638 ; pop rbp ; ret
0x00000000004018e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a19d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041032d : cmp al, -0x2a ; ret
0x0000000000401666 : cmp al, 0x21 ; add byte ptr [rcx], al ; ret
0x0000000000402cfe : cmp al, 0x25 ; enter 0x6152, 0 ; pop rbp ; ret
0x0000000000402af1 : cmp al, 0x25 ; ret
0x00000000004015ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401600 ; pop rbp ; ret
0x000000000040d409 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4131
0x000000000040c474 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000411d9b : cwde ; js 0x411d45 ; ret
0x0000000000411de2 : cwde ; js 0x411d8c ; ret
0x0000000000411e1c : cwde ; js 0x411dc6 ; ret
0x000000000040ea74 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4134
0x0000000000402b83 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a342 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a64d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040bb54 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040d5d3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000409688 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000410adb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000402d00 : enter 0x6152, 0 ; pop rbp ; ret
0x00000000004036fd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f5e4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d489 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004137ed : fdiv st(7), st(0) ; jmp rax
0x000000000040f194 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000412c0c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004018b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c22 : hlt ; add rsp, 0x230 ; pop rbp ; ret
0x00000000004116cc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401600 : hlt ; pop rbp ; mov edi, 0x615240 ; jmp rax
0x00000000004135fd : idiv esi ; jmp qword ptr [rax]
0x000000000040df2e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000409af9 : in al, -0x7f ; ret 0xff9f
0x0000000000409cdf : in al, -0x7f ; ret 0xffbf
0x0000000000409d85 : in al, -0x7f ; ret 0xffc5
0x0000000000409db3 : in al, -0x7f ; ret 0xffd5
0x0000000000409e81 : in al, -0x7f ; ret 0xffd8
0x000000000040a017 : in al, -0x7f ; ret 0xffe0
0x00000000004135ed : in al, -2 ; jmp rax
0x00000000004027fd : in al, 0x75 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f8df : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000403baa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041249b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b16f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000409731 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040bd1a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004137f7 : inc dword ptr [rax] ; or al, 0 ; add byte ptr [rax], dh ; loope 0x413806 ; jmp qword ptr [rax]
0x0000000000413777 : inc dword ptr [rax] ; or al, byte ptr [rax] ; add al, ah ; mov bh, -1 ; jmp qword ptr [rax]
0x00000000004024a3 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000413627 : inc eax ; add al, 0 ; add al, al ; add bh, bh ; jmp rax
0x00000000004135e7 : inc eax ; add eax, dword ptr [rax] ; add al, dh ; in al, -2 ; jmp rax
0x0000000000413767 : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov dh, -1 ; jmp rax
0x00000000004137e7 : inc eax ; or eax, dword ptr [rax] ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x000000000040cc28 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004062cf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040990f : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004015f3 : ja 0x4015fa ; pop rbp ; ret
0x00000000004015ff : je 0x4015fd ; pop rbp ; mov edi, 0x615240 ; jmp rax
0x000000000040da48 : jge 0x40da5f ; ret
0x000000000040df33 : jge 0x40df4a ; ret
0x0000000000412a09 : jge 0x412a03 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040d91c : jl 0x40d933 ; ret
0x000000000040144b : jmp 0x401247
0x0000000000402aea : jmp 0x402c35
0x00000000004092bd : jmp 0x40bfa3
0x000000000040bd51 : jmp 0x40bfa5
0x000000000040d408 : jmp 0x40d4bd
0x000000000040df2d : jmp 0x40e4a5
0x0000000000411bdb : jmp 0x411be6
0x000000000041284b : jmp 0x412856
0x000000000040fbae : jmp 0xffffffffb702ff7a
0x0000000000411d9a : jmp 0xffffffffc3e5963b
0x00000000004093dd : jmp qword ptr [rax]
0x000000000040a54f : jmp qword ptr [rbx]
0x000000000040bf20 : jmp qword ptr [rcx]
0x000000000040c475 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000407a26 : jmp qword ptr [rdx]
0x000000000040a4df : jmp qword ptr [rsi]
0x0000000000401607 : jmp rax
0x000000000040b072 : jmp rbx
0x000000000040b70e : jmp rdi
0x0000000000401647 : jmp rdx
0x000000000040b109 : jmp rsp
0x0000000000401630 : jne 0x401637 ; pop rbp ; ret
0x000000000040cc26 : jne 0x40cc2f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040ce41 : jo 0x40cea2 ; ret
0x000000000040cf64 : jo 0x40cfc5 ; ret
0x000000000040d09e : jo 0x40d0ff ; ret
0x000000000040f23c : jo 0x40f29d ; ret
0x0000000000411574 : jo 0x4115d5 ; ret
0x000000000040bf96 : js 0x40bfaa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411d9c : js 0x411d44 ; ret
0x0000000000411de3 : js 0x411d8b ; ret
0x0000000000411e1d : js 0x411dc5 ; ret
0x00000000004137fd : loope 0x413800 ; jmp qword ptr [rax]
0x0000000000403f6e : loopne 0x403f77 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ef80 : loopne 0x40ef89 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f38c : loopne 0x40f3dc ; add esp, 0x40 ; pop rbp ; ret
0x000000000040f38b : loopne 0x40f3dd ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401a90 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000410cfa : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402695 : mov al, 0 ; call 0x40e8f4
0x000000000040412b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000411aed : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411c9d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412499 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041377d : mov bh, -1 ; jmp qword ptr [rax]
0x000000000041366d : mov bh, bh ; jmp rax
0x0000000000402d21 : mov byte ptr [0x6152d0], al ; pop rbp ; ret
0x000000000040bae8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401663 : mov byte ptr [rip + 0x213c4e], 1 ; ret
0x0000000000411af3 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041376d : mov dh, -1 ; jmp rax
0x00000000004125c5 : mov dl, -0x47 ; ret
0x0000000000402cfd : mov dword ptr [0x6152c8], edi ; pop rbp ; ret
0x0000000000403de7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403bab : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403d1f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401a8e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004018b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403f9d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a9f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f2cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040efaf : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040333c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f3ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040eca0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403dea : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f38a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403994 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403a9c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403ba5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403d21 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040ce3b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004116ca : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fb70 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041156e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040168b : mov ebp, esp ; call rax
0x00000000004015f1 : mov ebp, esp ; ja 0x4015fc ; pop rbp ; ret
0x0000000000403ba8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401685 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000401602 : mov edi, 0x615240 ; jmp rax
0x0000000000401642 : mov edi, 0x615240 ; jmp rdx
0x0000000000412c07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000412c06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401640 : mov esi, eax ; mov edi, 0x615240 ; jmp rdx
0x0000000000402cfc : mov qword ptr [0x6152c8], rdi ; pop rbp ; ret
0x0000000000403f9c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a8f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040f2ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040efae : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040333b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f3cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ec9f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f389 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403993 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403a9b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ce3a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040168a : mov rbp, rsp ; call rax
0x00000000004015f0 : mov rbp, rsp ; ja 0x4015fd ; pop rbp ; ret
0x000000000040163f : mov rsi, rax ; mov edi, 0x615240 ; jmp rdx
0x000000000040cc2a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040cc2b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040a37c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004137cc : movabs al, byte ptr [0x4000000b60ffffc0] ; ret
0x000000000041283e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040df2c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x40e4a6
0x0000000000411d9d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000411af2 : movzx eax, al ; pop rbp ; ret
0x0000000000412c28 : nop dword ptr [rax + rax] ; ret
0x00000000004137f9 : or al, 0 ; add byte ptr [rax], dh ; loope 0x413804 ; jmp qword ptr [rax]
0x000000000040bf97 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413779 : or al, byte ptr [rax] ; add al, ah ; mov bh, -1 ; jmp qword ptr [rax]
0x0000000000402299 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000413769 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov dh, -1 ; jmp rax
0x000000000040d5d7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004137e9 : or eax, dword ptr [rax] ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x000000000040d021 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411c9f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411aef : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412c1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412c1e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c2c2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412c20 : pop r14 ; pop r15 ; ret
0x000000000040c2c4 : pop r15 ; pop rbp ; ret
0x0000000000412c22 : pop r15 ; ret
0x0000000000412318 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401662 : pop rbp ; mov byte ptr [rip + 0x213c4e], 1 ; ret
0x0000000000401601 : pop rbp ; mov edi, 0x615240 ; jmp rax
0x000000000040163e : pop rbp ; mov rsi, rax ; mov edi, 0x615240 ; jmp rdx
0x0000000000412c1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412c1f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004015f5 : pop rbp ; ret
0x000000000040c2c1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bf9a : pop rbx ; pop rbp ; ret
0x00000000004125c4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040c2c5 : pop rdi ; pop rbp ; ret
0x0000000000412c23 : pop rdi ; ret
0x0000000000412a0b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040c2c3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412c21 : pop rsi ; pop r15 ; ret
0x0000000000412c1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004061d2 : pop rsp ; ret
0x00000000004123d9 : popfq ; ret 0xd284
0x000000000040b9bf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401876 : push rax ; pop rbp ; ret
0x000000000040e88b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f193 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000409af8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x0000000000409cde : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000409d84 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000409db2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000409e80 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040a016 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401684 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000402698 : push rsp ; ret 0
0x0000000000410f63 : pushfq ; ret 0x8445
0x0000000000410cac : pushfq ; ret 0xd284
0x00000000004137ec : rcr ah, -1 ; jmp rax
0x0000000000400738 : ret
0x0000000000402699 : ret 0
0x0000000000410109 : ret 0x10
0x00000000004124cb : ret 0x2030
0x0000000000401452 : ret 0x213c
0x0000000000401242 : ret 0x213d
0x00000000004094d7 : ret 0x2a
0x000000000040c7f6 : ret 0x2c1
0x000000000040b150 : ret 0x3ae8
0x000000000040d411 : ret 0x4131
0x000000000040ea79 : ret 0x4134
0x000000000040643a : ret 0x43fa
0x0000000000411873 : ret 0x5e5
0x00000000004024a7 : ret 0x8445
0x00000000004071e9 : ret 0x8589
0x00000000004062d0 : ret 0x891a
0x0000000000411e7c : ret 0x8934
0x000000000040f197 : ret 0x8948
0x000000000040fbb1 : ret 0x89b6
0x0000000000411e58 : ret 0x8b34
0x000000000040b135 : ret 0x8b48
0x000000000040a1a5 : ret 0xa9b9
0x0000000000405c22 : ret 0xade6
0x0000000000402b21 : ret 0xb0
0x0000000000409910 : ret 0xb91a
0x000000000040fe6b : ret 0xb9b6
0x0000000000401625 : ret 0xc148
0x0000000000402804 : ret 0xd284
0x000000000040b9c3 : ret 0xd4e9
0x000000000040299a : ret 0xe280
0x000000000040bfdc : ret 0xee8
0x000000000040a385 : ret 0xf41
0x0000000000409afb : ret 0xff9f
0x000000000040b49e : ret 0xffa5
0x0000000000409ce1 : ret 0xffbf
0x000000000040a74b : ret 0xffc4
0x0000000000409d87 : ret 0xffc5
0x0000000000409db5 : ret 0xffd5
0x0000000000409e83 : ret 0xffd8
0x000000000040a7f1 : ret 0xffd9
0x000000000040a019 : ret 0xffe0
0x00000000004090ee : ret 0xfffa
0x000000000040229d : ret 1
0x000000000040a650 : ret 2
0x000000000040bad7 : ret 4
0x000000000040d608 : ret 5
0x0000000000401ca3 : ret 6
0x000000000040c1c0 : ret 8
0x0000000000413628 : rol byte ptr [rax + rax], 0 ; rol byte ptr [rdx], -1 ; jmp rax
0x0000000000410c54 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004135e8 : rol byte ptr [rbx], 0 ; add al, dh ; in al, -2 ; jmp rax
0x000000000041362c : rol byte ptr [rdx], -1 ; jmp rax
0x0000000000411265 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413668 : rol byte ptr [rip - 0x76000000], -1 ; jmp rax
0x0000000000403ba6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040162c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40163b ; pop rbp ; ret
0x0000000000403ba7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004137e8 : ror byte ptr [rbx], 0 ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x0000000000413768 : ror byte ptr [rcx], 0 ; add byte ptr [rax], al ; mov dh, -1 ; jmp rax
0x0000000000413868 : ror byte ptr [rip - 0xe400000], -1 ; jmp rax
0x000000000040f190 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000411c1c : sahf ; ret 0xd284
0x000000000041387c : sal ah, -1 ; jmp qword ptr [rax]
0x000000000041386c : sal cl, -1 ; jmp rax
0x000000000041032e : salc ; ret
0x000000000040162e : sar eax, 1 ; jne 0x401639 ; pop rbp ; ret
0x000000000040162d : sar rax, 1 ; jne 0x40163a ; pop rbp ; ret
0x000000000040cc59 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ed73 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a19e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004071e7 : sub al, 0x38 ; ret 0x8589
0x000000000040a1a3 : sub al, 0x38 ; ret 0xa9b9
0x000000000040ea72 : sub bh, bh ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4134
0x0000000000401231 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000412c5d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000412c5c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040e8ab : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004110a8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ce3d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040e788 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000412c2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d5d5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040e890 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040e5f8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004041d1 : xchg eax, ebp ; ret
0x00000000004024a6 : xchg eax, ebp ; ret 0x8445
0x0000000000403703 : xchg eax, ebp ; ret 0xd284
0x0000000000402999 : xchg eax, ebp ; ret 0xe280
0x00000000004071cb : xchg eax, ecx ; ret
0x0000000000410ae1 : xchg eax, edi ; ret 0xd284
0x000000000040731b : xchg eax, edx ; ret
0x000000000040e78e : xchg eax, edx ; ret 0xd284
0x000000000040cb52 : xchg eax, esi ; ret
0x00000000004041b3 : xchg eax, esp ; ret
0x000000000040b176 : xchg eax, esp ; ret 0x8445
0x0000000000402803 : xchg eax, esp ; ret 0xd284
0x000000000040d40f : xor al, 0x25 ; ret 0x4131
0x000000000040ea77 : xor al, 0x25 ; ret 0x4134
0x0000000000402c26 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d157 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403d1d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
