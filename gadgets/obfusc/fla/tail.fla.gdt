0x000000000043c715 : adc al, 0 ; add al, cl ; jns 0x43c720 ; jmp qword ptr [rbx]
0x000000000043cca0 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; ret
0x000000000043cc70 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x000000000043c515 : adc al, byte ptr [rax] ; add al, cl ; sub bh, bh ; call rdx
0x000000000043af51 : adc al, byte ptr [rax] ; add al, dl ; mov dr1, esi ; call rax
0x0000000000411e69 : adc al, byte ptr [rax] ; add byte ptr [rbx + 0xb2de045], cl ; insd dword ptr [rdi], dx ; ret 0x8931
0x000000000041b37b : adc byte ptr [rbp - 0x10], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041923f : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000042eecb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043afa1 : adc eax, dword ptr [rax] ; add al, dh ; sbb bh, bh ; call qword ptr [rax]
0x000000000042bf49 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c439 : adc edi, edi ; jmp rdx
0x000000000043b7d3 : add ah, ah ; add al, 0 ; add byte ptr [rax - 0x14], cl ; std ; call qword ptr [rax]
0x000000000043b4d3 : add ah, ah ; add dword ptr [rax], eax ; add al, bh ; int1 ; cld ; jmp rsi
0x000000000043b8d3 : add ah, ah ; add eax, 0xfb980000 ; std ; call qword ptr [rsi]
0x000000000043b8b3 : add ah, al ; add eax, 0xfad80000 ; std ; call rdx
0x000000000043b7d5 : add al, 0 ; add byte ptr [rax - 0x14], cl ; std ; call qword ptr [rax]
0x000000000043b735 : add al, 0 ; add byte ptr [rax - 0x44], bl ; std ; call rax
0x000000000041d197 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043ac63 : add al, ah ; jb 0x43ac67 ; call qword ptr [rax]
0x000000000043b1a3 : add al, al ; test al, -1 ; call qword ptr [rax]
0x000000000043b4d7 : add al, bh ; int1 ; cld ; jmp rsi
0x000000000043b8b7 : add al, bl ; cli ; std ; call rdx
0x000000000042e7c3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419af1 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x722d8045], cl ; ret 0xdff8
0x0000000000420834 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000419af0 : add al, byte ptr es:[rax] ; add byte ptr [rbx + 0x722d8045], cl ; ret 0xdff8
0x0000000000405ef7 : add al, ch ; ret
0x000000000040d258 : add al, ch ; ret 0xff44
0x0000000000405de4 : add al, ch ; ret 2
0x000000000043c717 : add al, cl ; jns 0x43c71e ; jmp qword ptr [rbx]
0x000000000043c517 : add al, cl ; sub bh, bh ; call rdx
0x000000000043afa3 : add al, dh ; sbb bh, bh ; call qword ptr [rax]
0x000000000043ad13 : add al, dh ; std ; call rax
0x000000000043ac93 : add al, dl ; mov dh, -4 ; call rax
0x000000000043af53 : add al, dl ; mov dr1, esi ; call rax
0x00000000004203f1 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004181ea : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; push rdx ; ret 0xe902
0x000000000042ebbe : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000042e926 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043ada5 : add bh, dh ; call qword ptr [rax]
0x0000000000438faf : add bl, dh ; ret
0x00000000004204fa : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043acd3 : add byte ptr [rax + 0x2d], dh ; std ; call rax
0x000000000040bbdc : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x000000000040bada : add byte ptr [rax + 1], cl ; ret 0x7a81
0x000000000040bbac : add byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000417f23 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040bbc2 : add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000043b7d7 : add byte ptr [rax - 0x14], cl ; std ; call qword ptr [rax]
0x000000000043aca3 : add byte ptr [rax - 0x39], ah ; cld ; call qword ptr [rax]
0x000000000043b477 : add byte ptr [rax - 0x3f], bh ; cld ; jmp qword ptr [rcx]
0x000000000043ad53 : add byte ptr [rax - 0x43], ah ; std ; call rax
0x000000000043b737 : add byte ptr [rax - 0x44], bl ; std ; call rax
0x000000000040b4a7 : add byte ptr [rax - 0x6bf10000], al ; ret 0xf280
0x00000000004062bb : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000042fa1d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x75], 1 ; jge 0x42fa17 ; call rax
0x000000000042d22d : add byte ptr [rax - 0x77], cl ; jge 0x42d230 ; pop rbp ; ret
0x0000000000405ef2 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043b937 : add byte ptr [rax - 2], bh ; std ; jmp rbx
0x000000000043b877 : add byte ptr [rax - 9], bl ; std ; call qword ptr [rax]
0x000000000043ad23 : add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000043b732 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax - 0x44], bl ; std ; call rax
0x00000000004204fb : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004181e8 : add byte ptr [rax], al ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; push rdx ; ret 0xe902
0x000000000042ebbc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000042e924 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000438fad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040bad8 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x7a81
0x000000000040bbaa : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8944
0x000000000040bbc0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc748
0x00000000004062b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000042d22b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x42d232 ; pop rbp ; ret
0x0000000000438fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400968 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040096a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004061e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d22a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000438fac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040096c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000412238 : add byte ptr [rax], al ; add byte ptr [rbx + 0x312de045], cl ; ret 0x893f
0x000000000042bc8e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403e89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472dac45], cl ; ret
0x000000000041d201 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041ce8f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000407716 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6d2dd845], cl ; ret
0x000000000041976d : add byte ptr [rax], al ; add byte ptr [rbx + 0x712d8045], cl ; ret 0xdff8
0x0000000000411eb4 : add byte ptr [rax], al ; add byte ptr [rbx + 0xc2de045], cl ; insd dword ptr [rdi], dx ; ret 0x8931
0x000000000040d9f2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x26d233bb], cl ; ret
0x0000000000435c18 : add byte ptr [rax], al ; add byte ptr [rbx - 0x29d257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000435bd6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ad257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x00000000004127b0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x55d21fbb], cl ; lahf ; ret
0x0000000000438699 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000438615 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000412a3a : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ad21fbb], cl ; ret
0x0000000000412f4e : add byte ptr [rax], al ; add byte ptr [rbx - 0x6fd21fbb], cl ; ret
0x00000000004060ba : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b743b3], cl ; ret 0xb0
0x00000000004372ae : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004044b9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040ba2a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000438755 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040368c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040405e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000423b9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402f3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403315 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042eaba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000423b7f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004030de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405b61 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042293e : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000437f5d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000043ada2 : add byte ptr [rax], al ; add dil, sil ; call qword ptr [rax]
0x000000000043b832 : add byte ptr [rax], al ; add eax, 0xf3280000 ; std ; call qword ptr [rbx]
0x000000000042bf4b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b9b0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000437b18 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040eb97 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042bf07 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004016d3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043ad62 : add byte ptr [rax], al ; and ah, cl ; std ; call qword ptr [rax]
0x000000000043c112 : add byte ptr [rax], al ; and al, 0xe ; add byte ptr [rax], al ; pop rax ; or bh, bh ; jmp qword ptr [rax]
0x000000000043ad22 : add byte ptr [rax], al ; and byte ptr [rax - 3], cl ; call qword ptr [rax]
0x0000000000434b0d : add byte ptr [rax], al ; call 0x401728
0x000000000043b4d6 : add byte ptr [rax], al ; clc ; int1 ; cld ; jmp rsi
0x000000000043b8d6 : add byte ptr [rax], al ; cwde ; sti ; std ; call qword ptr [rsi]
0x000000000043b8b6 : add byte ptr [rax], al ; fdivr st(2) ; std ; call rdx
0x000000000043b4d2 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; clc ; int1 ; cld ; jmp rsi
0x000000000043b7d2 : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; in al, dx ; std ; call qword ptr [rax]
0x000000000043b8d2 : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; cwde ; sti ; std ; call qword ptr [rsi]
0x000000000043b7d6 : add byte ptr [rax], al ; in al, dx ; std ; call qword ptr [rax]
0x00000000004017a9 : add byte ptr [rax], al ; jmp 0x4016e9
0x000000000042293a : add byte ptr [rax], al ; jmp 0x422949
0x0000000000437f59 : add byte ptr [rax], al ; jmp 0x437f68
0x0000000000438bc9 : add byte ptr [rax], al ; jmp 0x438bd8
0x000000000043acd2 : add byte ptr [rax], al ; jo 0x43ad08 ; std ; call rax
0x000000000043b293 : add byte ptr [rax], al ; jrcxz 0x43b29a ; call rax
0x000000000043b476 : add byte ptr [rax], al ; js 0x43b440 ; cld ; jmp qword ptr [rcx]
0x000000000043b936 : add byte ptr [rax], al ; js 0x43b93d ; std ; jmp rbx
0x000000000043ac62 : add byte ptr [rax], al ; loopne 0x43acdd ; cld ; call qword ptr [rax]
0x000000000043cca2 : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; ret
0x000000000043b7b6 : add byte ptr [rax], al ; mov ah, bl ; std ; jmp rax
0x00000000004355ec : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000043556d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000431f37 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000438dd7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042d66b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000042d4c8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000042d22c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041c039 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041c89c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423469 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043b1e2 : add byte ptr [rax], al ; nop ; mov dl, -1 ; call qword ptr [rax]
0x0000000000422dec : add byte ptr [rax], al ; or byte ptr [rdi], 0x9c ; ret 0xd284
0x000000000043b876 : add byte ptr [rax], al ; pop rax ; idiv ebp ; call qword ptr [rax]
0x000000000043c116 : add byte ptr [rax], al ; pop rax ; or bh, bh ; jmp qword ptr [rax]
0x00000000004036e7 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bc8f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a6c0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042b968 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043b262 : add byte ptr [rax], al ; push rax ; fcos ; call qword ptr [rax]
0x000000000043cc5e : add byte ptr [rax], al ; push rax ; ret
0x000000000043ae12 : add byte ptr [rax], al ; push rax ; sbb esi, edi ; call rax
0x000000000043b192 : add byte ptr [rax], al ; push rax ; test al, -1 ; call rax
0x0000000000438fae : add byte ptr [rax], al ; ret
0x000000000040096e : add byte ptr [rax], al ; ret 0
0x00000000004008f6 : add byte ptr [rax], al ; ret 2
0x000000000043b112 : add byte ptr [rax], al ; ror byte ptr [rdx - 1], 1 ; call rax
0x000000000043b222 : add byte ptr [rax], al ; sar dil, cl ; call qword ptr [rax]
0x000000000043b836 : add byte ptr [rax], al ; sub bl, dh ; std ; call qword ptr [rbx]
0x000000000043b092 : add byte ptr [rax], al ; sub byte ptr [rdx], -1 ; call rax
0x000000000043b472 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; js 0x43b444 ; cld ; jmp qword ptr [rcx]
0x000000000043cc72 : add byte ptr [rax], al ; test byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x000000000043b872 : add byte ptr [rax], al ; test byte ptr [rip - 0x8a80000], al ; std ; call qword ptr [rax]
0x000000000043af22 : add byte ptr [rax], al ; xchg esi, edi ; call qword ptr [rax]
0x000000000043aea2 : add byte ptr [rax], al ; xor byte ptr [rbp - 2], al ; call qword ptr [rax]
0x000000000043ace2 : add byte ptr [rax], al ; xor byte ptr [rbx], dh ; std ; call qword ptr [rax]
0x000000000043ae63 : add byte ptr [rax], al ; xor edi, esi ; call qword ptr [rax]
0x000000000043cc17 : add byte ptr [rax], ch ; ret
0x000000000043b837 : add byte ptr [rax], ch ; std ; call qword ptr [rbx]
0x000000000043ac9b : add byte ptr [rax], dh ; ret
0x000000000043ace3 : add byte ptr [rax], dh ; xor edi, ebp ; call qword ptr [rax]
0x00000000004062b8 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000043b873 : add byte ptr [rbp + rax - 0x8a80000], al ; std ; call qword ptr [rax]
0x000000000043b833 : add byte ptr [rbp + rax], al ; add byte ptr [rax], ch ; std ; call qword ptr [rbx]
0x000000000041d865 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000041d8a7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042d71f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x42d707 ; ret
0x00000000004121ef : add byte ptr [rbx + 0x302de045], cl ; ret 0x893f
0x000000000041223a : add byte ptr [rbx + 0x312de045], cl ; ret 0x893f
0x000000000042bc90 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a6c1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000403e40 : add byte ptr [rbx + 0x462dac45], cl ; ret
0x0000000000417a3c : add byte ptr [rbx + 0x472da045], cl ; stosb byte ptr [rdi], al ; ret
0x0000000000403e8b : add byte ptr [rbx + 0x472dac45], cl ; ret
0x0000000000417a87 : add byte ptr [rbx + 0x482da045], cl ; stosb byte ptr [rdi], al ; ret
0x000000000041d203 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000417c62 : add byte ptr [rbx + 0x592da045], cl ; push rdx ; ret 0x8902
0x0000000000417c94 : add byte ptr [rbx + 0x5a2da045], cl ; push rdx ; ret 0x8902
0x000000000042b969 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041ce91 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000407718 : add byte ptr [rbx + 0x6d2dd845], cl ; ret
0x000000000041976f : add byte ptr [rbx + 0x712d8045], cl ; ret 0xdff8
0x0000000000419af3 : add byte ptr [rbx + 0x722d8045], cl ; ret 0xdff8
0x0000000000411e6b : add byte ptr [rbx + 0xb2de045], cl ; insd dword ptr [rdi], dx ; ret 0x8931
0x0000000000411eb6 : add byte ptr [rbx + 0xc2de045], cl ; insd dword ptr [rdi], dx ; ret 0x8931
0x000000000041606b : add byte ptr [rbx - 0x1834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403598 : add byte ptr [rbx - 0x26b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040d9f4 : add byte ptr [rbx - 0x26d233bb], cl ; ret
0x0000000000403615 : add byte ptr [rbx - 0x26f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000435c1a : add byte ptr [rbx - 0x29d257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000435bd8 : add byte ptr [rbx - 0x2ad257bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000040bef4 : add byte ptr [rbx - 0x3334b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c06a : add byte ptr [rbx - 0x3374b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004127b2 : add byte ptr [rbx - 0x55d21fbb], cl ; lahf ; ret
0x0000000000412767 : add byte ptr [rbx - 0x56d21fbb], cl ; lahf ; ret
0x0000000000409e2e : add byte ptr [rbx - 0x57f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a009 : add byte ptr [rbx - 0x5834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043869b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000438617 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000412a3c : add byte ptr [rbx - 0x6ad21fbb], cl ; ret
0x00000000004129f1 : add byte ptr [rbx - 0x6bd21fbb], cl ; ret
0x0000000000412f50 : add byte ptr [rbx - 0x6fd21fbb], cl ; ret
0x0000000000412f05 : add byte ptr [rbx - 0x70d21fbb], cl ; ret
0x00000000004060bc : add byte ptr [rbx - 0x76b743b3], cl ; ret 0xb0
0x000000000040b4a4 : add byte ptr [rcx + 0x8000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004372b0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004044bb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040ba2c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000043b473 : add byte ptr [rcx + rax - 0x3e880000], al ; cld ; jmp qword ptr [rcx]
0x00000000004030dc : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f8ef : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c58 : add byte ptr [rcx], al ; ret
0x0000000000438757 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040368e : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404060 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000423b9f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402f3c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403317 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040e34b : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000423b81 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004030e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405b63 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040b4aa : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004034d9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c53d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041cd1d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000043b933 : add byte ptr [rsi + rax], al ; add byte ptr [rax - 2], bh ; std ; jmp rbx
0x000000000043c113 : add byte ptr [rsi + rcx], ah ; add byte ptr [rax], al ; pop rax ; or bh, bh ; jmp qword ptr [rax]
0x000000000043b733 : add byte ptr [rsp + rax], al ; add byte ptr [rax - 0x44], bl ; std ; call rax
0x00000000004039bd : add cl, ch ; ret
0x0000000000437f5f : add cl, ch ; ret 0
0x000000000040547d : add cl, ch ; ret 1
0x000000000043ada4 : add dil, sil ; call qword ptr [rax]
0x0000000000403e3d : add dword ptr [r8], r8d ; add byte ptr [rbx + 0x462dac45], cl ; ret
0x000000000042277a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000043b4d5 : add dword ptr [rax], eax ; add al, bh ; int1 ; cld ; jmp rsi
0x00000000004203ef : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043b475 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], bh ; cld ; jmp qword ptr [rcx]
0x000000000042bf05 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403e3e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x462dac45], cl ; ret
0x0000000000417c60 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x592da045], cl ; push rdx ; ret 0x8902
0x0000000000417c92 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5a2da045], cl ; push rdx ; ret 0x8902
0x000000000042c62a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412f03 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x70d21fbb], cl ; ret
0x00000000004158cf : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000041cc61 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040ea31 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x28 ; pop rbp ; ret
0x00000000004161b4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004075d4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407806 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c54 : add eax, 0x23b71e ; add ebx, esi ; ret
0x000000000040a6bf : add eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x0000000000433adf : add eax, 0x53b80000 ; jrcxz 0x433b4f ; ret 0x8fb9
0x0000000000431f35 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000043181f : add eax, 0xb6b80000 ; ret 0x979f
0x000000000043b835 : add eax, 0xf3280000 ; std ; call qword ptr [rbx]
0x000000000043b875 : add eax, 0xf7580000 ; std ; call qword ptr [rax]
0x000000000043b8b5 : add eax, 0xfad80000 ; std ; call rdx
0x000000000043b8d5 : add eax, 0xfb980000 ; std ; call qword ptr [rsi]
0x000000000041d199 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c1b : add eax, edx ; sar rax, 1 ; jne 0x401c2c ; pop rbp ; ret
0x0000000000401c59 : add ebx, esi ; ret
0x000000000043b979 : add edi, esi ; call qword ptr [rsi]
0x0000000000401f5b : add esp, 0x10 ; pop rbp ; ret
0x000000000041f8ed : add esp, 0x100 ; pop rbp ; ret
0x000000000042c627 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042174f : add esp, 0x120 ; pop rbp ; ret
0x0000000000418251 : add esp, 0x140 ; pop rbp ; ret
0x000000000040f21b : add esp, 0x150 ; pop rbp ; ret
0x000000000042233e : add esp, 0x160 ; pop rbp ; ret
0x000000000041cc66 : add esp, 0x18 ; pop rbp ; ret
0x000000000041608c : add esp, 0x190 ; pop rbp ; ret
0x000000000042105c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000404560 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000041737e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000406f60 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000041b458 : add esp, 0x20 ; pop rbp ; ret
0x000000000041c53b : add esp, 0x200 ; pop rbp ; ret
0x0000000000417853 : add esp, 0x20b0 ; pop rbp ; ret
0x000000000040e58f : add esp, 0x20e0 ; pop rbp ; ret
0x000000000041942d : add esp, 0x2180 ; pop rbp ; ret
0x00000000004036e3 : add esp, 0x270 ; pop rbp ; ret
0x000000000040ea36 : add esp, 0x28 ; pop rbp ; ret
0x00000000004375b3 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000434e3a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000432011 : add esp, 0x30 ; pop rbp ; ret
0x000000000040c0a9 : add esp, 0x340 ; pop rbp ; ret
0x0000000000406300 : add esp, 0x350 ; pop rbp ; ret
0x0000000000431e05 : add esp, 0x380 ; pop rbp ; ret
0x000000000040eb9a : add esp, 0x40 ; pop rbp ; ret
0x0000000000402132 : add esp, 0x50 ; pop rbp ; ret
0x0000000000401f07 : add esp, 0x60 ; pop rbp ; ret
0x00000000004075d9 : add esp, 0x70 ; pop rbp ; ret
0x000000000041ab46 : add esp, 0x80 ; pop rbp ; ret
0x000000000041d0a8 : add esp, 0x90 ; pop rbp ; ret
0x000000000041585f : add esp, 0x950 ; pop rbp ; ret
0x0000000000407387 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041df33 : add esp, 0xb0 ; pop rbp ; ret
0x000000000042b964 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040dda1 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000407ab9 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004016d6 : add esp, 8 ; ret
0x000000000041d198 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c1a : add rax, rdx ; sar rax, 1 ; jne 0x401c2d ; pop rbp ; ret
0x0000000000401f5a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041f8ec : add rsp, 0x100 ; pop rbp ; ret
0x000000000042c626 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042174e : add rsp, 0x120 ; pop rbp ; ret
0x0000000000418250 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040f21a : add rsp, 0x150 ; pop rbp ; ret
0x000000000042233d : add rsp, 0x160 ; pop rbp ; ret
0x000000000041cc65 : add rsp, 0x18 ; pop rbp ; ret
0x000000000041608b : add rsp, 0x190 ; pop rbp ; ret
0x000000000042105b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040455f : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000041737d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000406f5f : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000041b457 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041c53a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000417852 : add rsp, 0x20b0 ; pop rbp ; ret
0x000000000040e58e : add rsp, 0x20e0 ; pop rbp ; ret
0x000000000041942c : add rsp, 0x2180 ; pop rbp ; ret
0x00000000004036e2 : add rsp, 0x270 ; pop rbp ; ret
0x000000000040ea35 : add rsp, 0x28 ; pop rbp ; ret
0x00000000004375b2 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000434e39 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000432010 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040c0a8 : add rsp, 0x340 ; pop rbp ; ret
0x00000000004062ff : add rsp, 0x350 ; pop rbp ; ret
0x0000000000431e04 : add rsp, 0x380 ; pop rbp ; ret
0x000000000040eb99 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402131 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401f06 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004075d8 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041ab45 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041d0a7 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041585e : add rsp, 0x950 ; pop rbp ; ret
0x0000000000407386 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041df32 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000042b963 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040dda0 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000407ab8 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004016d5 : add rsp, 8 ; ret
0x000000000042d6ac : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000042d6ab : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000043ad64 : and ah, cl ; std ; call qword ptr [rax]
0x000000000043c114 : and al, 0xe ; add byte ptr [rax], al ; pop rax ; or bh, bh ; jmp qword ptr [rax]
0x000000000043270b : and al, 0xffffffffffffffac ; ret 0x89cc
0x0000000000433ca4 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000407805 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422778 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000043ad24 : and byte ptr [rax - 3], cl ; call qword ptr [rax]
0x0000000000417f21 : and byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040e349 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000421751 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004158cd : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000422777 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041e075 : and eax, 0x43a6f0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405de0 : and eax, 0x63d360 ; call 0x432027
0x000000000041b47f : and eax, 0x63d398 ; pop rbp ; ret
0x000000000041b4a3 : and eax, 0x63d3a0 ; pop rbp ; ret
0x0000000000401c57 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000434b0f : call 0x401726
0x0000000000434adc : call 0x401796
0x0000000000405de5 : call 0x432022
0x000000000041ff66 : call 0xffffffff8a046508
0x000000000040eb2d : call 0xffffffffc2d2fa77
0x000000000040eb2c : call 0xffffffffc2d2fa78
0x000000000042b9a9 : call 0xffffffffe90542f9
0x000000000042b9a8 : call 0xffffffffe90542fa
0x00000000004273ed : call 0xfffffffff73af984
0x0000000000437075 : call 0xffffffffff47f64a
0x0000000000429f19 : call 0xffffffffff5724eb
0x0000000000429f18 : call 0xffffffffff5724ec
0x0000000000429f19 : call 0xffffffffff5724ed
0x0000000000429f18 : call 0xffffffffff5724ee
0x000000000041f057 : call 0xffffffffff7b7ba8
0x000000000041f056 : call 0xffffffffff7b7ba9
0x0000000000438f89 : call qword ptr [r12 + rbx*8]
0x00000000004292a6 : call qword ptr [rax]
0x000000000043b83b : call qword ptr [rbx]
0x000000000040a3d5 : call qword ptr [rcx]
0x000000000040a0b0 : call qword ptr [rdi]
0x0000000000409e62 : call qword ptr [rdx]
0x000000000041ef81 : call qword ptr [rsi]
0x0000000000438f8a : call qword ptr [rsp + rbx*8]
0x000000000043ac97 : call rax
0x00000000004099bb : call rbx
0x000000000041d037 : call rdx
0x000000000042ebc4 : call rsi
0x000000000043c3bb : call rsp
0x000000000043861c : cdq ; ret
0x000000000041db83 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036e1 : clc ; add rsp, 0x270 ; pop rbp ; ret
0x000000000042d7dc : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000435b62 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004378f0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041b1d1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041d7d3 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000041df31 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000041a9c3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000043b4d8 : clc ; int1 ; cld ; jmp rsi
0x0000000000401c1f : clc ; jne 0x401c28 ; pop rbp ; ret
0x000000000042237e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041c55b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041c57b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041c59b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d1cb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042d20b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042d1eb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042d231 : clc ; pop rbp ; ret
0x0000000000401f87 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417851 : cld ; add rsp, 0x20b0 ; pop rbp ; ret
0x000000000042f9dc : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043ac66 : cld ; call qword ptr [rax]
0x000000000043ac96 : cld ; call rax
0x000000000043b47a : cld ; jmp qword ptr [rcx]
0x000000000043b4da : cld ; jmp rsi
0x000000000043ac8e : cld ; push qword ptr [rax - 0x2ffffff9] ; mov dh, -4 ; call rax
0x0000000000429b6d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000043b8b9 : cli ; std ; call rdx
0x0000000000406525 : cmc ; ret
0x000000000043667d : cmp al, -0x2a ; ret
0x000000000041b47e : cmp al, 0x25 ; cwde ; shl dword ptr [rbx], cl ; pop rbp ; ret
0x00000000004062be : cmp al, 0x25 ; ret
0x0000000000409e31 : cmp dl, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401bdd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401bf0 ; pop rbp ; ret
0x000000000043b0a5 : cmp edi, edi ; call qword ptr [rax]
0x000000000042be44 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000040d89a : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 0x5b ; mov cx, 0xf407 ; ret 0x8ab9
0x000000000043811b : cwde ; js 0x4380c5 ; ret
0x0000000000438162 : cwde ; js 0x43810c ; ret
0x000000000043819c : cwde ; js 0x438146 ; ret
0x000000000041b480 : cwde ; shl dword ptr [rbx], cl ; pop rbp ; ret
0x000000000043b8d8 : cwde ; sti ; std ; call qword ptr [rsi]
0x00000000004187bf : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040359e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a134 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x00000000004187b1 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000042a01d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000042b524 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000405477 : dec dword ptr [rdi] ; test ah, ah ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004111e0 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16ffffbd], ch ; ret
0x00000000004039b7 : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000042d903 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040e4eb : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000406a72 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000415891 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000415890 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041d0e7 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041d19a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000040dd9f : enter -0x7eb8, -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041818f : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436e2b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000402f38 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434fa4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042ce59 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041823b : fadd st(7) ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; push rdx ; ret 0xe902
0x0000000000416a21 : fcomp qword ptr [rax] ; ret
0x000000000040da8a : fcomp st(0), st(1) ; ret
0x000000000043b265 : fcos ; call qword ptr [rax]
0x000000000043b7b9 : fdiv st(5), st(0) ; jmp rax
0x000000000043b8b8 : fdivr st(2) ; std ; call rdx
0x000000000041cd1b : fld dword ptr [rcx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042f4c4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004187c3 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000438f8c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000416c89 : fstp qword ptr [rax] ; ret
0x00000000004071c6 : fsubr st(1) ; ret
0x000000000041ec64 : fsubr st(1) ; ret 0
0x000000000041f72c : fucompi st(1) ; ret
0x0000000000401f59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041887d : hlt ; add rsp, 0x20e0 ; pop rbp ; ret
0x0000000000437a4c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041585d : hlt ; add rsp, 0x950 ; pop rbp ; ret
0x00000000004353c4 : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401bf0 : hlt ; pop rbp ; mov edi, 0x63d310 ; jmp rax
0x000000000040d988 : hlt ; ret 0x48b9
0x000000000040c799 : hlt ; ret 0x89b9
0x000000000040d8a0 : hlt ; ret 0x8ab9
0x000000000043b879 : idiv ebp ; call qword ptr [rax]
0x000000000042e25e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000041439e : in al, -0x17 ; ret
0x000000000041339f : in al, -0x17 ; ret 0x24
0x00000000004294c9 : in al, -0x7f ; ret 0xff9f
0x00000000004296af : in al, -0x7f ; ret 0xffbf
0x0000000000429755 : in al, -0x7f ; ret 0xffc5
0x0000000000405a9e : in al, -0x7f ; ret 0xffd0
0x0000000000429783 : in al, -0x7f ; ret 0xffd5
0x0000000000429851 : in al, -0x7f ; ret 0xffd8
0x00000000004299e7 : in al, -0x7f ; ret 0xffe0
0x00000000004032f1 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004032d0 : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043b4d4 : in al, 1 ; add byte ptr [rax], al ; clc ; int1 ; cld ; jmp rsi
0x000000000043b7d4 : in al, 4 ; add byte ptr [rax], al ; in al, dx ; std ; call qword ptr [rax]
0x000000000043b8d4 : in al, 5 ; add byte ptr [rax], al ; cwde ; sti ; std ; call qword ptr [rsi]
0x000000000042105a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000043200f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004358cf : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042357a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000431f3b : in al, dx ; pop rbp ; ret
0x000000000043b7d9 : in al, dx ; std ; call qword ptr [rax]
0x000000000043881b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ab3f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004094cf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004193f9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000409fab : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405685 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040d986 : inc dword ptr [rdi] ; hlt ; ret 0x48b9
0x000000000040d5c1 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c5f8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000406e06 : inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x000000000040771d : insd dword ptr [rdi], dx ; ret
0x0000000000425c9f : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000411e71 : insd dword ptr [rdi], dx ; ret 0x8931
0x00000000004292df : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000413b6c : insd dword ptr [rdi], dx ; ret 0xb931
0x000000000043b4d9 : int1 ; cld ; jmp rsi
0x0000000000401be3 : ja 0x401bea ; pop rbp ; ret
0x0000000000422381 : ja 0x4223ce ; pop rbp ; ret
0x000000000043ac65 : jb 0x43ac65 ; call qword ptr [rax]
0x0000000000401bef : je 0x401bed ; pop rbp ; mov edi, 0x63d310 ; jmp rax
0x0000000000405ec3 : jg 0x405ed7 ; xchg eax, edi ; ret 0xd284
0x0000000000422e24 : jg 0x422e38 ; pushfq ; ret 0xd284
0x0000000000405b5e : jge 0x405b24 ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041c55a : jge 0x41c55b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041c57a : jge 0x41c57b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041c59a : jge 0x41c59b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042237d : jge 0x42237e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042d1ca : jge 0x42d1cb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042d1ea : jge 0x42d1eb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042d20a : jge 0x42d20b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042d230 : jge 0x42d22d ; pop rbp ; ret
0x000000000042dd78 : jge 0x42dd8f ; ret
0x000000000042e263 : jge 0x42e27a ; ret
0x000000000042fa24 : jge 0x42fa10 ; call rax
0x0000000000438d89 : jge 0x438d83 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042d6d5 : jl 0x42d6b1 ; ret
0x000000000042d725 : jl 0x42d701 ; ret
0x000000000042dc4c : jl 0x42dc63 ; ret
0x00000000004017ab : jmp 0x4016e7
0x00000000004062b7 : jmp 0x406311
0x0000000000407753 : jmp 0x407813
0x000000000040bf0f : jmp 0x40c0b9
0x000000000040d254 : jmp 0x40d9a6
0x000000000040ead3 : jmp 0x40eba7
0x00000000004133a0 : jmp 0x41586d
0x0000000000414c4e : jmp 0x41586f
0x0000000000415dd0 : jmp 0x41609a
0x0000000000416f87 : jmp 0x41738e
0x000000000041cfe2 : jmp 0x41d0b7
0x000000000042293c : jmp 0x422947
0x0000000000428c8d : jmp 0x42b973
0x000000000042b721 : jmp 0x42b975
0x000000000042e25d : jmp 0x42e7d5
0x0000000000433dc1 : jmp 0x4340d3
0x0000000000437f5b : jmp 0x437f66
0x0000000000438bcb : jmp 0x438bd6
0x0000000000420d61 : jmp 0x490496b1
0x0000000000420ddc : jmp 0x4904972c
0x0000000000422135 : jmp 0x4904aa85
0x00000000004221b0 : jmp 0x4904ab00
0x000000000041ffab : jmp 0xffffffff8a04654d
0x0000000000435efe : jmp 0xffffffffb70562ca
0x000000000043811a : jmp 0xffffffffc3e7f9bb
0x000000000042035f : jmp 0xffffffffea046901
0x0000000000428dad : jmp qword ptr [rax]
0x000000000040bfdf : jmp qword ptr [rbx]
0x000000000042b8f0 : jmp qword ptr [rcx]
0x0000000000412f2f : jmp qword ptr [rdi]
0x000000000042be45 : jmp qword ptr [rdx + 0xc2e968]
0x00000000004273f6 : jmp qword ptr [rdx]
0x000000000040cfda : jmp qword ptr [rsi]
0x0000000000401bf7 : jmp rax
0x000000000042aa42 : jmp rbx
0x0000000000418ea4 : jmp rcx
0x000000000040e571 : jmp rdi
0x0000000000401c37 : jmp rdx
0x0000000000406e0c : jmp rsi
0x0000000000409e44 : jmp rsp
0x0000000000401c20 : jne 0x401c27 ; pop rbp ; ret
0x0000000000415892 : jne 0x41588a ; mov rax, rdx ; pop rbp ; ret
0x000000000041d0e6 : jne 0x41d0b9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042c5f6 : jne 0x42c5ff ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000043c719 : jns 0x43c71c ; jmp qword ptr [rbx]
0x00000000004036e5 : jo 0x4036ee ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004075db : jo 0x40763c ; ret
0x000000000041afbc : jo 0x41b01d ; ret
0x000000000042c811 : jo 0x42c872 ; ret
0x000000000042c934 : jo 0x42c995 ; ret
0x000000000042ca6e : jo 0x42cacf ; ret
0x000000000042d1ef : jo 0x42d250 ; ret
0x000000000042d1ee : jo 0x42d251 ; ret
0x000000000042f56c : jo 0x42f5cd ; ret
0x00000000004378f4 : jo 0x437955 ; ret
0x000000000043acd4 : jo 0x43ad06 ; std ; call rax
0x00000000004325d8 : jrcxz 0x43263e ; ret 0x8589
0x000000000043262c : jrcxz 0x432692 ; ret 0x8589
0x0000000000433ae4 : jrcxz 0x433b4a ; ret 0x8fb9
0x0000000000433d0f : jrcxz 0x433d75 ; ret 0x8fb9
0x000000000043b295 : jrcxz 0x43b298 ; call rax
0x000000000042b966 : js 0x42b97a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043811c : js 0x4380c4 ; ret
0x0000000000438163 : js 0x43810b ; ret
0x000000000043819d : js 0x438145 ; ret
0x000000000043b478 : js 0x43b43e ; cld ; jmp qword ptr [rcx]
0x000000000043b938 : js 0x43b93b ; std ; jmp rbx
0x000000000041276d : lahf ; ret
0x000000000041b26c : lcall ptr [rcx + rcx*4 - 0x7bf04bbb] ; ret 0
0x0000000000405b7d : ljmp ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ace0 : lock or byte ptr [rax], al ; add byte ptr [rax], dh ; xor edi, ebp ; call qword ptr [rax]
0x000000000043ad20 : lock or dword ptr [rax], eax ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000042035e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea046902
0x000000000042035d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea046903
0x00000000004326b8 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x0000000000433ca5 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x00000000004203f4 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000435bde : lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000435cf1 : lodsd eax, dword ptr [rsi] ; ret 0xb9a2
0x0000000000435449 : loop 0x43549b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000435531 : loop 0x435583 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004158ce : loope 0x4158d7 ; movzx eax, cl ; pop rbp ; ret
0x000000000040e591 : loopne 0x40e5b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ea7d : loopne 0x40eab0 ; sub bh, al ; ret
0x000000000040ea7c : loopne 0x40eab1 ; sub bh, al ; ret
0x000000000040f63e : loopne 0x40f66f ; ret
0x000000000040f63d : loopne 0x40f670 ; ret
0x000000000040f8bc : loopne 0x40f8ed ; ret
0x000000000040f8bb : loopne 0x40f8ee ; ret
0x000000000040fab0 : loopne 0x40fae1 ; ret 0x8fc7
0x000000000040faaf : loopne 0x40fae2 ; ret 0x8fc7
0x000000000040fafb : loopne 0x40fb2c ; ret
0x000000000040fafa : loopne 0x40fb2d ; ret
0x000000000041169e : loopne 0x4116cf ; ret
0x000000000041169d : loopne 0x4116d0 ; ret
0x0000000000411a22 : loopne 0x411a53 ; ret
0x0000000000411a21 : loopne 0x411a54 ; ret
0x0000000000411eb9 : loopne 0x411eec ; or al, 0x6d ; ret 0x8931
0x0000000000411eb8 : loopne 0x411eed ; or al, 0x6d ; ret 0x8931
0x00000000004127b5 : loopne 0x4127e8 ; stosb byte ptr [rdi], al ; lahf ; ret
0x00000000004127b4 : loopne 0x4127e9 ; stosb byte ptr [rdi], al ; lahf ; ret
0x00000000004129f4 : loopne 0x412a26 ; xchg eax, esp ; ret
0x00000000004129f3 : loopne 0x412a27 ; xchg eax, esp ; ret
0x0000000000412a3f : loopne 0x412a71 ; xchg eax, ebp ; ret
0x0000000000412a3e : loopne 0x412a72 ; xchg eax, ebp ; ret
0x0000000000412b07 : loopne 0x412b38 ; ret 0xf46
0x0000000000412b06 : loopne 0x412b39 ; ret 0xf46
0x0000000000412f53 : loopne 0x412f85 ; nop ; ret
0x0000000000412f52 : loopne 0x412f86 ; nop ; ret
0x0000000000417380 : loopne 0x417388 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000418881 : loopne 0x4188a8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a89c : loopne 0x41a8a5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ad13 : loopne 0x41ad1c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b30d : loopne 0x41b316 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e467 : loopne 0x41e470 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f700 : loopne 0x41f709 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f720 : loopne 0x41f76e ; mov edi, dword ptr [rcx] ; call rax
0x000000000041f71f : loopne 0x41f76f ; mov edi, dword ptr [rcx] ; call rax
0x000000000041f7ec : loopne 0x41f7f5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f884 : loopne 0x41f88d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422b02 : loopne 0x422b52 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000422b01 : loopne 0x422b53 ; add esp, 0x20 ; pop rbp ; ret
0x000000000042393e : loopne 0x423947 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d613 : loopne 0x42d61c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f2b0 : loopne 0x42f2b9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f6bc : loopne 0x42f70c ; add esp, 0x40 ; pop rbp ; ret
0x000000000042f6bb : loopne 0x42f70d ; add esp, 0x40 ; pop rbp ; ret
0x000000000042fc37 : loopne 0x42fc40 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042fd03 : loopne 0x42fd0c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434e3c : loopne 0x434e45 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000435346 : loopne 0x43534f ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043ac64 : loopne 0x43acdb ; cld ; call qword ptr [rax]
0x0000000000405e9a : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043cca4 : mov ah, 0x19 ; add byte ptr [rax], al ; ret
0x0000000000402130 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043b7b8 : mov ah, bl ; std ; jmp rax
0x00000000004222a8 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043704a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041df35 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434ada : mov al, 0 ; call 0x401798
0x000000000043b090 : mov al, 0x17 ; add byte ptr [rax], al ; sub byte ptr [rdx], -1 ; call rax
0x000000000043b110 : mov al, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rdx - 1], 1 ; call rax
0x000000000043b190 : mov al, 0x1b ; add byte ptr [rax], al ; push rax ; test al, -1 ; call rax
0x0000000000417855 : mov al, 0x20 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423afb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043ae10 : mov al, 0xd ; add byte ptr [rax], al ; push rax ; sbb esi, edi ; call rax
0x000000000043acd0 : mov al, 8 ; add byte ptr [rax], al ; jo 0x43ad0a ; std ; call rax
0x0000000000437e6d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043801d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000438819 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407802 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ea61 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004355ef : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004355ee : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000043556f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004172be : mov bh, -0x17 ; ret 0
0x0000000000435573 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000401c56 : mov bh, 0x23 ; add byte ptr [rcx], al ; ret
0x000000000041b4a1 : mov byte ptr [0x63d3a0], al ; pop rbp ; ret
0x000000000040f455 : mov byte ptr [rax + 0x34], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a22a : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401c53 : mov byte ptr [rip + 0x23b71e], 1 ; ret
0x000000000040d89d : mov cx, 0xf407 ; ret 0x8ab9
0x000000000042277d : mov dh, -0x39 ; pop rbp ; ret
0x00000000004158d1 : mov dh, -0x3f ; pop rbp ; ret
0x000000000041cc63 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040ea33 : mov dh, -0x40 ; add rsp, 0x28 ; pop rbp ; ret
0x00000000004161b6 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004075d6 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407808 : mov dh, -0x40 ; pop rbp ; ret
0x000000000043ac95 : mov dh, -4 ; call rax
0x0000000000438945 : mov dl, -0x47 ; ret
0x000000000043b1e5 : mov dl, -1 ; call qword ptr [rax]
0x000000000043af55 : mov dr1, esi ; call rax
0x000000000041b47d : mov dword ptr [0x63d398], edi ; pop rbp ; ret
0x00000000004237b7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042357b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004236ef : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000421509 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042167b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x000000000041339d : mov dword ptr [rbp - 0x1c], eax ; jmp 0x415870
0x000000000040212e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433dbe : mov dword ptr [rbp - 0x7c], eax ; jmp 0x4340d6
0x000000000041d031 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000041de7f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000401f57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f85 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d22f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042396d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e07a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000422380 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000042346f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042f5fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c1a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f2df : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041afb6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042d251 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041c03c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043200d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000431f39 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042f6fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421867 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004225b0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041c89f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000422b00 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042f6ba : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423364 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042346c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042d66d : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000040dabc : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000423575 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042fa1f : mov eax, dword ptr [rbp - 0x30] ; mov rdi, qword ptr [rbp - 0x18] ; call rax
0x000000000041d0ec : mov eax, dword ptr [rbp - 0x38] ; call rax
0x00000000004236f1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042d4ca : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000042c80b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000437a4a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f9da : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041db81 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042d7da : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000435b60 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004378ee : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041c55d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041c57d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041c59d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d1cd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042d20d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042d1ed : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043540e : mov eax, edi ; pop rbp ; ret
0x000000000041e651 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415895 : mov eax, edx ; pop rbp ; ret
0x0000000000435570 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000435483 : mov eax, esi ; pop rbp ; ret
0x00000000004129ee : mov ebp, 0x8b000006 ; loopne 0x412a2c ; xchg eax, esp ; ret
0x0000000000401c7b : mov ebp, esp ; call rax
0x0000000000401be1 : mov ebp, esp ; ja 0x401bec ; pop rbp ; ret
0x00000000004016d1 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x000000000041f0ed : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000423578 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041f055 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041f71e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004354ad : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000043547d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c75 : mov edi, 0x63ce20 ; mov rbp, rsp ; call rax
0x0000000000401bf2 : mov edi, 0x63d310 ; jmp rax
0x0000000000401c32 : mov edi, 0x63d310 ; jmp rdx
0x0000000000415dd1 : mov edi, 0xb8000002 ; ret 0xf8b3
0x000000000043c7f9 : mov edi, dr1 ; jmp qword ptr [rdi]
0x0000000000405dde : mov edi, dword ptr [0x63d360] ; call 0x432029
0x000000000042fa23 : mov edi, dword ptr [rbp - 0x18] ; call rax
0x000000000042237c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041c559 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041c579 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041c599 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d1c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042d209 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042d1e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041f0f1 : mov edi, dword ptr [rcx] ; call rax
0x0000000000438f87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000438f86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042d255 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c30 : mov esi, eax ; mov edi, 0x63d310 ; jmp rdx
0x000000000041d0e9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000405680 : mov esp, 0xffffff3d ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000041b47c : mov qword ptr [0x63d398], rdi ; pop rbp ; ret
0x000000000042d22e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042396c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042237f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040212f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042f5fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c1a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f2de : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041afb5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042d250 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041c03b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042f6fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421866 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004225af : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041c89e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000422aff : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042f6b9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423363 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042346b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040dabb : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fa1e : mov rax, qword ptr [rbp - 0x30] ; mov rdi, qword ptr [rbp - 0x18] ; call rax
0x000000000041d0eb : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042c80a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041db80 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c55c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041c57c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041c59c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d1cc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042d20c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042d1ec : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043540d : mov rax, rdi ; pop rbp ; ret
0x000000000041e650 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415894 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c7a : mov rbp, rsp ; call rax
0x0000000000401be0 : mov rbp, rsp ; ja 0x401bed ; pop rbp ; ret
0x000000000041f0ec : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041f054 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041f71d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042fa22 : mov rdi, qword ptr [rbp - 0x18] ; call rax
0x000000000042237b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041c558 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041c578 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041c598 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d1c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000042d208 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000042d1e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041f0f0 : mov rdi, qword ptr [rcx] ; call rax
0x000000000042d254 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c2f : mov rsi, rax ; mov edi, 0x63d310 ; jmp rdx
0x000000000041d0e8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042c5fa : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042c5fb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000429d4c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000438bbe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000042d6af : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000042e25c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x42e7d6
0x00000000004181ed : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; push rdx ; ret 0xe902
0x000000000043811d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041b37a : movups xmm0, xmmword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041cc62 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040ea32 : movzx eax, al ; add rsp, 0x28 ; pop rbp ; ret
0x00000000004161b5 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004075d5 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407807 : movzx eax, al ; pop rbp ; ret
0x0000000000435572 : movzx eax, ax ; pop rbp ; ret
0x000000000042277c : movzx eax, bh ; pop rbp ; ret
0x00000000004158d0 : movzx eax, cl ; pop rbp ; ret
0x000000000042277b : movzx eax, dil ; pop rbp ; ret
0x000000000041ea62 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041ea63 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000043b1e4 : nop ; mov dl, -1 ; call qword ptr [rax]
0x0000000000412f55 : nop ; ret
0x000000000041b453 : nop ; shl dword ptr [rbx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438fa8 : nop dword ptr [rax + rax] ; ret
0x000000000042b967 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040d89b : or al, 0x5b ; mov cx, 0xf407 ; ret 0x8ab9
0x0000000000411ebb : or al, 0x6d ; ret 0x8931
0x0000000000413b6b : or al, 0x6d ; ret 0xb931
0x000000000043ad51 : or al, byte ptr [rax] ; add byte ptr [rax - 0x43], ah ; std ; call rax
0x00000000004039bb : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000042035b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea046905
0x000000000043c119 : or bh, bh ; jmp qword ptr [rax]
0x000000000043acd1 : or byte ptr [rax], al ; add byte ptr [rax + 0x2d], dh ; std ; call rax
0x000000000043ace1 : or byte ptr [rax], al ; add byte ptr [rax], dh ; xor edi, ebp ; call qword ptr [rax]
0x0000000000417ff4 : or byte ptr [rdi + 0x48b9fffe], dl ; stosb byte ptr [rdi], al ; ret
0x0000000000422dee : or byte ptr [rdi], 0x9c ; ret 0xd284
0x000000000043add5 : or dh, bh ; call rax
0x000000000043ad11 : or dword ptr [rax], eax ; add al, dh ; std ; call rax
0x000000000043ad21 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x0000000000412765 : or dword ptr [rax], eax ; add byte ptr [rbx - 0x56d21fbb], cl ; lahf ; ret
0x000000000042d907 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040547b : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042c9f1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043c239 : or edi, edi ; jmp qword ptr [rdx]
0x000000000043540b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000043b9d9 : or edi, esi ; call qword ptr [rdx]
0x0000000000435481 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042035a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea046906
0x000000000043540a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000422779 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000043801f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000437e6f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435480 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004181e7 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; push rdx ; ret 0xe902
0x0000000000405b60 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041cd09 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000420833 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000438f9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000438f9e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042bc92 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000438fa0 : pop r14 ; pop r15 ; ret
0x000000000040a6c3 : pop r14 ; pop rbp ; ret
0x000000000042bc94 : pop r15 ; pop rbp ; ret
0x0000000000438fa2 : pop r15 ; ret
0x0000000000438698 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000043b878 : pop rax ; idiv ebp ; call qword ptr [rax]
0x000000000043c118 : pop rax ; or bh, bh ; jmp qword ptr [rax]
0x0000000000401c52 : pop rbp ; mov byte ptr [rip + 0x23b71e], 1 ; ret
0x0000000000401bf1 : pop rbp ; mov edi, 0x63d310 ; jmp rax
0x0000000000401c2e : pop rbp ; mov rsi, rax ; mov edi, 0x63d310 ; jmp rdx
0x0000000000438f9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000438f9f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401be5 : pop rbp ; ret
0x000000000040d89c : pop rbx ; mov cx, 0xf407 ; ret 0x8ab9
0x000000000042bc91 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a6c2 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042b96a : pop rbx ; pop rbp ; ret
0x0000000000438944 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000417c67 : pop rcx ; push rdx ; ret 0x8902
0x000000000042bc95 : pop rdi ; pop rbp ; ret
0x0000000000438fa3 : pop rdi ; ret
0x0000000000438d8b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000417c99 : pop rdx ; push rdx ; ret 0x8902
0x00000000004181ee : pop rdx ; push rdx ; ret 0xe902
0x000000000042bc93 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000438fa1 : pop rsi ; pop r15 ; ret
0x000000000040a6c4 : pop rsi ; pop rbp ; ret
0x0000000000438f9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000425ba2 : pop rsp ; ret
0x000000000041cd20 : pop rsp ; ret 0xf66
0x0000000000438759 : popfq ; ret 0xd284
0x000000000043b28f : push qword ptr [rax + 0x1f] ; jrcxz 0x43b29e ; call rax
0x000000000043ae0f : push qword ptr [rax + 0x5000000d] ; sbb esi, edi ; call rax
0x000000000043b18f : push qword ptr [rax + 0x5000001b] ; test al, -1 ; call rax
0x000000000043adcf : push qword ptr [rax + 0x7000000c] ; or dh, bh ; call rax
0x000000000043af8f : push qword ptr [rax + 0x70000013] ; sbb bh, bh ; call rax
0x000000000043af4f : push qword ptr [rax - 0x2fffffee] ; mov dr1, esi ; call rax
0x000000000043ac8f : push qword ptr [rax - 0x2ffffff9] ; mov dh, -4 ; call rax
0x000000000043ae4f : push qword ptr [rax - 0x4ffffff2] ; sub edi, esi ; call rax
0x000000000043ad8f : push qword ptr [rax - 0x5ffffff5] ; std ; std ; call rax
0x000000000043b08f : push qword ptr [rax - 0x7fffffe9] ; sub bh, bh ; call rax
0x000000000043ad0f : push qword ptr [rax - 0xffffff7] ; std ; call rax
0x000000000042b38f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000042d1ce : push r8 ; pop rbp ; ret
0x000000000043af9f : push rax ; adc eax, dword ptr [rax] ; add al, dh ; sbb bh, bh ; call qword ptr [rax]
0x000000000043b264 : push rax ; fcos ; call qword ptr [rax]
0x000000000043acdf : push rax ; or byte ptr [rax], al ; add byte ptr [rax], dh ; xor edi, ebp ; call qword ptr [rax]
0x000000000043ad1f : push rax ; or dword ptr [rax], eax ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x0000000000402134 : push rax ; pop rbp ; ret
0x000000000043cc60 : push rax ; ret
0x000000000043b19f : push rax ; sbb eax, dword ptr [rax] ; add al, al ; test al, -1 ; call qword ptr [rax]
0x000000000043ae14 : push rax ; sbb esi, edi ; call rax
0x000000000043ae9f : push rax ; sldt word ptr [rax] ; xor byte ptr [rbp - 2], al ; call qword ptr [rax]
0x000000000043b194 : push rax ; test al, -1 ; call rax
0x000000000042ebbb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000042d256 : push rbp ; clc ; pop rbp ; ret
0x000000000042f4c3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004187c2 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000041ec63 : push rbp ; fsubr st(1) ; ret 0
0x00000000004294c8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004296ae : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000429754 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000405a9d : push rbp ; in al, -0x7f ; ret 0xffd0
0x0000000000429782 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000429850 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004299e6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401c74 : push rbp ; mov edi, 0x63ce20 ; mov rbp, rsp ; call rax
0x00000000004203ee : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043262b : push rbx ; jrcxz 0x432693 ; ret 0x8589
0x0000000000433ae3 : push rbx ; jrcxz 0x433b4b ; ret 0x8fb9
0x0000000000433d0e : push rbx ; jrcxz 0x433d76 ; ret 0x8fb9
0x00000000004325d7 : push rdx ; jrcxz 0x43263f ; ret 0x8589
0x0000000000417c68 : push rdx ; ret 0x8902
0x00000000004181ef : push rdx ; ret 0xe902
0x0000000000417585 : pushfq ; call qword ptr [rcx]
0x00000000004372b3 : pushfq ; ret 0x8445
0x0000000000403690 : pushfq ; ret 0xd284
0x000000000043547e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004354ae : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004016d9 : ret
0x0000000000400970 : ret 0
0x000000000040a06d : ret 0x10
0x0000000000432247 : ret 0x1a
0x000000000043884b : ret 0x2030
0x0000000000422d9a : ret 0x20b9
0x00000000004019b2 : ret 0x23b7
0x00000000004017b2 : ret 0x23b8
0x00000000004133a1 : ret 0x24
0x000000000041cd0a : ret 0x280f
0x000000000041af45 : ret 0x29b9
0x0000000000428ea7 : ret 0x2a
0x000000000042ab20 : ret 0x2ae8
0x000000000042c1c6 : ret 0x2c1
0x00000000004303a3 : ret 0x2c22
0x0000000000422a70 : ret 0x30
0x0000000000432107 : ret 0x3bef
0x0000000000425e0a : ret 0x43fa
0x000000000041af01 : ret 0x4589
0x000000000040d989 : ret 0x48b9
0x0000000000435db1 : ret 0x48f2
0x000000000040bd7f : ret 0x4be8
0x000000000040639d : ret 0x4ff7
0x000000000041db34 : ret 0x50e9
0x0000000000437bf3 : ret 0x5e5
0x0000000000406dea : ret 0x6b
0x000000000041b0ca : ret 0x7406
0x000000000040b2f8 : ret 0x791c
0x000000000040badd : ret 0x7a81
0x0000000000422a7e : ret 0x8148
0x0000000000420d64 : ret 0x8348
0x00000000004044bf : ret 0x8445
0x000000000041ffae : ret 0x8589
0x0000000000417c69 : ret 0x8902
0x0000000000425ca0 : ret 0x891a
0x0000000000411e72 : ret 0x8931
0x00000000004381fc : ret 0x8934
0x00000000004121f6 : ret 0x893f
0x0000000000406e3e : ret 0x8941
0x000000000040bbaf : ret 0x8944
0x0000000000417f26 : ret 0x8948
0x0000000000406e3b : ret 0x894c
0x000000000041793c : ret 0x8950
0x000000000042005c : ret 0x897f
0x0000000000435bdf : ret 0x89a2
0x0000000000435f01 : ret 0x89b6
0x000000000040c79a : ret 0x89b9
0x00000000004326b9 : ret 0x89cc
0x000000000040d8a1 : ret 0x8ab9
0x00000000004381d8 : ret 0x8b34
0x000000000040bc55 : ret 0x8b48
0x0000000000433ca6 : ret 0x8bcc
0x0000000000433ae6 : ret 0x8fb9
0x000000000040fab2 : ret 0x8fc7
0x0000000000407ef6 : ret 0x939f
0x000000000043005c : ret 0x979f
0x0000000000419233 : ret 0x97e8
0x00000000004228c1 : ret 0x9bd0
0x000000000041d6ba : ret 0xa3b9
0x000000000043471b : ret 0xa4be
0x0000000000420399 : ret 0xa6e9
0x0000000000429b75 : ret 0xa9b9
0x00000000004255f2 : ret 0xade6
0x0000000000405ef5 : ret 0xb0
0x0000000000402baf : ret 0xb0d3
0x00000000004292e0 : ret 0xb91a
0x0000000000413b6d : ret 0xb931
0x000000000041342f : ret 0xb93f
0x000000000041ec96 : ret 0xb948
0x0000000000418185 : ret 0xb950
0x0000000000435cf2 : ret 0xb9a2
0x00000000004361bb : ret 0xb9b6
0x0000000000422dcb : ret 0xb9e9
0x0000000000401c15 : ret 0xc148
0x000000000040bbc5 : ret 0xc748
0x000000000041ab10 : ret 0xcae8
0x0000000000402f3f : ret 0xd284
0x000000000042b393 : ret 0xd4e9
0x0000000000420362 : ret 0xdde9
0x0000000000419775 : ret 0xdff8
0x0000000000405b66 : ret 0xe280
0x00000000004181f0 : ret 0xe902
0x00000000004203f7 : ret 0xe97f
0x000000000042b9ac : ret 0xee8
0x000000000041da95 : ret 0xefe9
0x000000000040b4ad : ret 0xf280
0x000000000042fc9d : ret 0xf40
0x0000000000429d55 : ret 0xf41
0x0000000000412b09 : ret 0xf46
0x000000000041cd21 : ret 0xf66
0x0000000000415c62 : ret 0xf8b3
0x0000000000416bfe : ret 0xfa8b
0x000000000042335a : ret 0xfde3
0x0000000000419eea : ret 0xfe7a
0x000000000041e946 : ret 0xff3
0x000000000040d25a : ret 0xff44
0x00000000004294cb : ret 0xff9f
0x000000000042ae6e : ret 0xffa5
0x00000000004296b1 : ret 0xffbf
0x000000000042a11b : ret 0xffc4
0x0000000000429757 : ret 0xffc5
0x0000000000405aa0 : ret 0xffd0
0x0000000000429785 : ret 0xffd5
0x0000000000429853 : ret 0xffd8
0x000000000042a1c1 : ret 0xffd9
0x00000000004299e9 : ret 0xffe0
0x0000000000428abe : ret 0xfffa
0x000000000041af9a : ret 0xfffb
0x00000000004187c6 : ret 0xffff
0x000000000040547f : ret 1
0x00000000004008f8 : ret 2
0x000000000042b4a7 : ret 4
0x000000000042d938 : ret 5
0x0000000000403025 : ret 6
0x0000000000420801 : ret 7
0x000000000042bb90 : ret 8
0x000000000041cfd2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e3e2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dda3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e347 : rol byte ptr [rax], 1 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000415907 : rol byte ptr [rax], cl ; ret
0x0000000000403313 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004375b5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004158cc : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000423576 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000042fa20 : ror byte ptr [r8 - 0x75], 1 ; jge 0x42fa14 ; call rax
0x0000000000401c1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c2b ; pop rbp ; ret
0x000000000042fa21 : ror byte ptr [rax - 0x75], 1 ; jge 0x42fa13 ; call rax
0x00000000004075d7 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x407640 ; ret
0x00000000004161b7 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000042053b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041737c : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x41738c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423577 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000043b114 : ror byte ptr [rdx - 1], 1 ; call rax
0x000000000042f4c0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000404062 : sahf ; ret 0xd284
0x000000000042d6aa : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000435c1f : salc ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x0000000000435cf0 : salc ; lodsd eax, dword ptr [rsi] ; ret 0xb9a2
0x000000000043667e : salc ; ret
0x000000000043b225 : sar bh, cl ; call qword ptr [rax]
0x000000000043b224 : sar dil, cl ; call qword ptr [rax]
0x0000000000401c1e : sar eax, 1 ; jne 0x401c29 ; pop rbp ; ret
0x0000000000401c1d : sar rax, 1 ; jne 0x401c2a ; pop rbp ; ret
0x000000000043ae25 : sbb al, -2 ; call qword ptr [rax]
0x000000000043afa5 : sbb bh, bh ; call qword ptr [rax]
0x000000000043af95 : sbb bh, bh ; call rax
0x000000000042c629 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042f0a3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043cc15 : sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; ret
0x000000000041579d : sbb dword ptr [rcx - 0x17], ebx ; ret
0x0000000000429b6e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000043b1a1 : sbb eax, dword ptr [rax] ; add al, al ; test al, -1 ; call qword ptr [rax]
0x000000000043ae15 : sbb esi, edi ; call rax
0x000000000041e674 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ebe6 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bad6 : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x7a81
0x000000000040bba8 : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8944
0x000000000040bbbe : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000040ebe8 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041b454 : shl dword ptr [rbx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405de2 : shl dword ptr [rbx], cl ; call 0x432025
0x0000000000401bf4 : shl dword ptr [rbx], cl ; jmp rax
0x0000000000401c34 : shl dword ptr [rbx], cl ; jmp rdx
0x000000000041b481 : shl dword ptr [rbx], cl ; pop rbp ; ret
0x000000000041cd3f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x00000000004354af : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000435448 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000043547f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000435408 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000043aea1 : sldt word ptr [rax] ; xor byte ptr [rbp - 2], al ; call qword ptr [rax]
0x000000000040bbdb : stc ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x000000000040b4a6 : stc ; add byte ptr [rax - 0x6bf10000], al ; ret 0xf280
0x000000000043ace6 : std ; call qword ptr [rax]
0x000000000043b83a : std ; call qword ptr [rbx]
0x000000000043b8da : std ; call qword ptr [rsi]
0x000000000043acd6 : std ; call rax
0x000000000043b8ba : std ; call rdx
0x000000000043b6da : std ; jmp qword ptr [rbx]
0x000000000043b7ba : std ; jmp rax
0x000000000043b93a : std ; jmp rbx
0x000000000043ad8e : std ; push qword ptr [rax - 0x5ffffff5] ; std ; std ; call rax
0x000000000043ad0e : std ; push qword ptr [rax - 0xffffff7] ; std ; call rax
0x000000000043acde : std ; push rax ; or byte ptr [rax], al ; add byte ptr [rax], dh ; xor edi, ebp ; call qword ptr [rax]
0x000000000043ad1e : std ; push rax ; or dword ptr [rax], eax ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000043ad95 : std ; std ; call rax
0x000000000043b8d9 : sti ; std ; call qword ptr [rsi]
0x00000000004067fc : stosb byte ptr [rdi], al ; cmc ; ret
0x00000000004127b7 : stosb byte ptr [rdi], al ; lahf ; ret
0x000000000041b26b : stosb byte ptr [rdi], al ; lcall ptr [rcx + rcx*4 - 0x7bf04bbb] ; ret 0
0x0000000000417a42 : stosb byte ptr [rdi], al ; ret
0x0000000000426bb7 : sub al, 0x38 ; ret 0x8589
0x0000000000429b73 : sub al, 0x38 ; ret 0xa9b9
0x000000000040ea7f : sub bh, al ; ret
0x000000000043b095 : sub bh, bh ; call rax
0x000000000043c519 : sub bh, bh ; call rdx
0x000000000043b838 : sub bl, dh ; std ; call qword ptr [rbx]
0x000000000043b094 : sub byte ptr [rdx], -1 ; call rax
0x000000000042d6b0 : sub cl, al ; pop rbp ; ret
0x000000000043ae55 : sub edi, esi ; call rax
0x0000000000439001 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000439000 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405479 : test ah, ah ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042ebdb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043b1a5 : test al, -1 ; call qword ptr [rax]
0x000000000043b195 : test al, -1 ; call rax
0x00000000004373f8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ff64 : test al, 0x2d ; call 0xffffffff8a04650a
0x000000000041ff63 : test al, 0x2d ; call 0xffffffff8a04650b
0x000000000041ffa9 : test al, 0x2d ; jmp 0xffffffff8a04654f
0x000000000041ffa8 : test al, 0x2d ; jmp 0xffffffff8a046550
0x0000000000435c1d : test al, 0x2d ; salc ; lodsd eax, dword ptr [rsi] ; ret 0x89a2
0x000000000042024c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000420058 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000042c80d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041d86b : test al, 0x70 ; ret 0x4589
0x000000000041db32 : test al, 0x70 ; ret 0x50e9
0x000000000041da93 : test al, 0x70 ; ret 0xefe9
0x000000000042eab8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000438faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004111e2 : test byte ptr [rcx - 0x16ffffbd], ch ; ret
0x000000000043b474 : test byte ptr [rcx], al ; add byte ptr [rax], al ; js 0x43b442 ; cld ; jmp qword ptr [rcx]
0x00000000004039b9 : test byte ptr [rcx], bh ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043cc74 : test byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x000000000042d905 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000043b874 : test byte ptr [rip - 0x8a80000], al ; std ; call qword ptr [rax]
0x0000000000431944 : test ch, cl ; ret
0x0000000000418fd3 : test dword ptr [rax - 0x17000022], ebp ; ret
0x0000000000406e08 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x000000000042ebc0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000042e928 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000040ec28 : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000040f069 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rsp
0x00000000004111e3 : test eax, 0xe9000043 ; ret
0x0000000000431943 : test r13b, r9b ; ret
0x0000000000412a41 : xchg eax, ebp ; ret
0x00000000004044be : xchg eax, ebp ; ret 0x8445
0x0000000000402f3e : xchg eax, ebp ; ret 0xd284
0x000000000042fc9c : xchg eax, ebp ; ret 0xf40
0x000000000040ebe7 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043444b : xchg eax, ebx ; ret
0x0000000000405fa1 : xchg eax, ebx ; ret 0xd284
0x0000000000426b9b : xchg eax, ecx ; ret
0x0000000000403319 : xchg eax, edi ; ret 0xd284
0x0000000000426ceb : xchg eax, edx ; ret
0x000000000040eb30 : xchg eax, edx ; ret 0x8445
0x000000000040e34d : xchg eax, edx ; ret 0xd284
0x000000000042c522 : xchg eax, esi ; ret
0x00000000004129f6 : xchg eax, esp ; ret
0x000000000040ba2f : xchg eax, esp ; ret 0x8445
0x00000000004030e2 : xchg eax, esp ; ret 0xd284
0x0000000000405b65 : xchg eax, esp ; ret 0xe280
0x000000000040b4ac : xchg eax, esp ; ret 0xf280
0x00000000004158cb : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041e675 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043af25 : xchg esi, edi ; call qword ptr [rax]
0x000000000043540c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000040f457 : xor al, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042024e : xor bl, byte ptr [rsi] ; ret 0x897f
0x00000000004203f5 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043aea4 : xor byte ptr [rbp - 2], al ; call qword ptr [rax]
0x000000000043ace4 : xor byte ptr [rbx], dh ; std ; call qword ptr [rax]
0x000000000042005a : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000042cb27 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043ace5 : xor edi, ebp ; call qword ptr [rax]
0x000000000043ae65 : xor edi, esi ; call qword ptr [rax]
0x00000000004236ed : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
