0x000000000041692d : adc byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041692c : adc byte ptr [rax], r8b ; add cl, ch ; ret 1
0x000000000041e580 : adc byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x0000000000404504 : adc dh, bh ; ret
0x00000000004188cb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414039 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c40 : adc ebp, 0x89480041 ; fsubr st(0) ; ret
0x000000000041e05c : add al, 3 ; add byte ptr [rax], al ; add dl, -2 ; call qword ptr [rax]
0x000000000041e45c : add al, 7 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000041ec97 : add al, bh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000401ef8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040305b : add al, ch ; jmp rdx
0x000000000041ecaf : add al, dh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000417523 : add bh, al ; mov r12b, 0x39 ; pop rbp ; ret
0x000000000041c95f : add bl, dh ; ret
0x0000000000401c42 : add byte ptr [r8 - 0x77], cl ; fsubr st(0) ; ret
0x0000000000406a17 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000041e57b : add byte ptr [rax + rcx], ah ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x0000000000401c43 : add byte ptr [rax - 0x77], cl ; fsubr st(0) ; ret
0x0000000000414fed : add byte ptr [rax - 0x77], cl ; jge 0x414ff0 ; pop rbp ; ret
0x000000000041e99f : add byte ptr [rax], ah ; mov bl, -1 ; jmp rax
0x000000000041e57e : add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x000000000041e05a : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; add dl, -2 ; call qword ptr [rax]
0x000000000041e45a : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000041c95d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406a15 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000414feb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x414ff2 ; pop rbp ; ret
0x000000000041c95b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400630 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000414fea : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041c95c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400634 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000415112 : add byte ptr [rax], al ; add byte ptr [rbx + 0x382da445], cl ; pop rbp ; ret
0x0000000000416ac2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x392da445], cl ; pop rbp ; ret
0x0000000000413d7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417d69 : add byte ptr [rax], al ; add byte ptr [rbx + 0x522dd445], cl ; jmp qword ptr [rsi]
0x000000000041c049 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041bfc5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041ac8e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000409208 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004065ce : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041c105 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041a9d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040266e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bc8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040b1bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409c6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041a80d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000416dd4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x000000000040bc6f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403f88 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a13f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041e45e : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000040adae : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041b90d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041e05e : add byte ptr [rax], al ; add dl, -2 ; call qword ptr [rax]
0x000000000041403b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031b1 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402761 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004188cd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413ff7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041e57a : add byte ptr [rax], al ; and al, 8 ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x000000000041ec96 : add byte ptr [rax], al ; clc ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000041ec92 : add byte ptr [rax], al ; cmp al, 0xf ; add byte ptr [rax], al ; clc ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x000000000040adaa : add byte ptr [rax], al ; jmp 0x40adb9
0x000000000041b909 : add byte ptr [rax], al ; jmp 0x41b918
0x000000000041c579 : add byte ptr [rax], al ; jmp 0x41c588
0x000000000041c787 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004187bb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x0000000000418618 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000414fec : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040aa79 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b559 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041dfde : add byte ptr [rax], al ; nop ; mov edi, esi ; call qword ptr [rcx]
0x000000000041e09e : add byte ptr [rax], al ; nop ; ret
0x000000000041e99a : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax], ah ; mov bl, -1 ; jmp rax
0x0000000000401a03 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413d7f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413a58 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c95e : add byte ptr [rax], al ; ret
0x0000000000400636 : add byte ptr [rax], al ; ret 0
0x000000000041e0da : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; nop ; ret
0x000000000041dfda : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; nop ; mov edi, esi ; call qword ptr [rcx]
0x00000000004044fe : add byte ptr [rbx + 0x2c2de445], cl ; adc dh, bh ; ret
0x0000000000404582 : add byte ptr [rbx + 0x2d2de445], cl ; adc dh, bh ; ret
0x0000000000415114 : add byte ptr [rbx + 0x382da445], cl ; pop rbp ; ret
0x0000000000416ac4 : add byte ptr [rbx + 0x392da445], cl ; pop rbp ; ret
0x0000000000413d80 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417d20 : add byte ptr [rbx + 0x512dd445], cl ; jmp qword ptr [rsi]
0x0000000000417d6b : add byte ptr [rbx + 0x522dd445], cl ; jmp qword ptr [rsi]
0x0000000000413a59 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041e05b : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; add dl, -2 ; call qword ptr [rax]
0x000000000041c04b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041bfc7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000406a11 : add byte ptr [rcx + 0x2c2], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000416dd0 : add byte ptr [rcx + 0x9f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x000000000041ac90 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040920a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004065d0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004016a8 : add byte ptr [rcx], al ; ret
0x000000000041e45b : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000041ec93 : add byte ptr [rdi + rcx], bh ; add byte ptr [rax], al ; clc ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000041ecab : add byte ptr [rdi + rcx], dl ; add al, dh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000041c107 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041a9da : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000402670 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bc8f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040b1c1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409c6f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041a80f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000416dd6 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x000000000040bc71 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403f8a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a141 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041e460 : add byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000041e99b : add byte ptr [rsp + rcx], al ; add byte ptr [rax], ah ; mov bl, -1 ; jmp rax
0x000000000040adb0 : add cl, ch ; ret
0x000000000041b90f : add cl, ch ; ret 0
0x0000000000403b7c : add cl, ch ; ret 1
0x000000000040947d : add cl, ch ; ret 8
0x000000000041e060 : add dl, -2 ; call qword ptr [rax]
0x00000000004027a8 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000413ff5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041471a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040325f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403419 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407372 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x68 ; pop rbp ; ret
0x0000000000402b3f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041b821 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016a4 : add eax, 0x21dbde ; add ebx, esi ; ret
0x0000000000417521 : add eax, 0x45c70000 ; mov ah, 0x39 ; pop rbp ; ret
0x0000000000417d1e : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x512dd445], cl ; jmp qword ptr [rsi]
0x000000000040166b : add eax, edx ; sar rax, 1 ; jne 0x40167c ; pop rbp ; ret
0x00000000004016a9 : add ebx, esi ; ret
0x0000000000401a4b : add esp, 0x10 ; pop rbp ; ret
0x0000000000414717 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000404408 : add esp, 0x170 ; pop rbp ; ret
0x00000000004031b4 : add esp, 0x20 ; pop rbp ; ret
0x000000000041af93 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000402764 : add esp, 0x30 ; pop rbp ; ret
0x000000000040abe7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000409d3d : add esp, 0x410 ; pop rbp ; ret
0x0000000000417a91 : add esp, 0x490 ; pop rbp ; ret
0x0000000000406b57 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000401bf2 : add esp, 0x50 ; pop rbp ; ret
0x000000000040a766 : add esp, 0x60 ; pop rbp ; ret
0x0000000000407377 : add esp, 0x68 ; pop rbp ; ret
0x0000000000401e4a : add esp, 0x70 ; pop rbp ; ret
0x00000000004019ff : add esp, 0x80 ; pop rbp ; ret
0x0000000000419cb2 : add esp, 0x90 ; pop rbp ; ret
0x000000000041840f : add esp, 0x98 ; pop rbp ; ret
0x000000000040b31e : add esp, 0xa0 ; pop rbp ; ret
0x00000000004030b2 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040a299 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000413a54 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004049a9 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004026a5 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040305a : add r8b, bpl ; jmp rdx
0x000000000040166a : add rax, rdx ; sar rax, 1 ; jne 0x40167d ; pop rbp ; ret
0x0000000000401a4a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000414716 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000404407 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004031b3 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041af92 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000402763 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040abe6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000409d3c : add rsp, 0x410 ; pop rbp ; ret
0x0000000000417a90 : add rsp, 0x490 ; pop rbp ; ret
0x0000000000406b56 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000401bf1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040a765 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407376 : add rsp, 0x68 ; pop rbp ; ret
0x0000000000401e49 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004019fe : add rsp, 0x80 ; pop rbp ; ret
0x0000000000419cb1 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041840e : add rsp, 0x98 ; pop rbp ; ret
0x000000000040b31d : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004030b1 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040a298 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000413a53 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004049a8 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004026a4 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x00000000004187fc : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004187fb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041b820 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e57c : and al, 8 ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x00000000004027a6 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004027a5 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004016a7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004174ae : and dword ptr [rbx - 0x47], 0x39 ; pop rbp ; ret
0x0000000000409d6d : and eax, 0x61f29c ; pop rbp ; ret
0x000000000040a43f : and eax, 0x61f2a0 ; pop rbp ; ret
0x000000000040a463 : and eax, 0x61f2a8 ; pop rbp ; ret
0x0000000000409322 : call 0x41c998
0x0000000000413a99 : call 0xffffffffe903c3e9
0x0000000000413a98 : call 0xffffffffe903c3ea
0x000000000040f4dd : call 0xfffffffff7397a74
0x000000000041aa55 : call 0xffffffffff46302a
0x0000000000412009 : call 0xffffffffff55a5db
0x0000000000412008 : call 0xffffffffff55a5dc
0x0000000000412009 : call 0xffffffffff55a5dd
0x0000000000412008 : call 0xffffffffff55a5de
0x000000000041c939 : call qword ptr [r12 + rbx*8]
0x0000000000411396 : call qword ptr [rax]
0x0000000000413025 : call qword ptr [rcx]
0x0000000000410fc3 : call qword ptr [rdx]
0x0000000000410f5f : call qword ptr [rsi]
0x000000000041c93a : call qword ptr [rsp + rbx*8]
0x00000000004016cd : call rax
0x000000000040f77a : call rbx
0x0000000000406691 : call rdi
0x000000000041e7e3 : call rdx
0x000000000041e743 : call rsp
0x000000000041bfcc : cdq ; ret
0x00000000004198a2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b2a0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041ec98 : clc ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040166f : clc ; jne 0x401678 ; pop rbp ; ret
0x000000000040a2e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000414f8b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414fcb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414fab : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000414ff1 : clc ; pop rbp ; ret
0x0000000000411c5d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000404f6b : cli ; ret
0x0000000000403bea : cmp ah, dh ; ret
0x000000000041a05d : cmp al, -0x2a ; ret
0x0000000000403056 : cmp al, 0x25 ; mov al, -0x2a ; add r8b, bpl ; jmp rdx
0x000000000041ec94 : cmp al, 0xf ; add byte ptr [rax], al ; clc ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040162d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401640 ; pop rbp ; ret
0x0000000000401231 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000403bb8 : cmp esi, esp ; ret
0x0000000000413f34 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041bacb : cwde ; js 0x41ba75 ; ret
0x000000000041bb12 : cwde ; js 0x41babc ; ret
0x000000000041bb4c : cwde ; js 0x41baf6 ; ret
0x0000000000411e02 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041210d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000413614 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000411148 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041a80b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040b1bd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419314 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414f49 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ec99 : fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000408f66 : fisttp dword ptr [rip + 0x5cb80000] ; ret
0x0000000000418ec4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041c93c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401c47 : fsubr st(0) ; ret
0x0000000000401a49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b3fc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401e48 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041840d : hlt ; add rsp, 0x98 ; pop rbp ; ret
0x0000000000401640 : hlt ; pop rbp ; mov edi, 0x61f258 ; jmp rax
0x000000000040a762 : imul edi, edi, -1 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004115b9 : in al, -0x7f ; ret 0xff9f
0x000000000041179f : in al, -0x7f ; ret 0xffbf
0x0000000000411845 : in al, -0x7f ; ret 0xffc5
0x0000000000411873 : in al, -0x7f ; ret 0xffd5
0x0000000000411941 : in al, -0x7f ; ret 0xffd8
0x0000000000411ad7 : in al, -0x7f ; ret 0xffe0
0x0000000000417a8f : in al, dx ; add rsp, 0x490 ; pop rbp ; ret
0x000000000041960f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040b66a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041c1cb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412c2f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004111f1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004137da : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004146e8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040dd8f : insd dword ptr [rdi], dx ; ret 0x891a
0x00000000004113cf : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000415d1d : int 0x80
0x0000000000401633 : ja 0x40163a ; pop rbp ; ret
0x0000000000406dc0 : jb 0x406df4 ; ret 0x8926
0x0000000000407239 : jb 0x40726d ; ret 0x8b26
0x000000000040163f : je 0x40163d ; pop rbp ; mov edi, 0x61f258 ; jmp rax
0x0000000000409c40 : jg 0x409c54 ; sahf ; ret 0xd284
0x0000000000414f8a : jge 0x414f8b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414faa : jge 0x414fab ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000414fca : jge 0x414fcb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414ff0 : jge 0x414fed ; pop rbp ; ret
0x000000000041c739 : jge 0x41c733 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000407237 : jl 0x4071f6 ; jb 0x40726f ; ret 0x8b26
0x000000000040144b : jmp 0x401247
0x0000000000403d72 : jmp 0x404418
0x0000000000408f65 : jmp 0x409d4c
0x000000000040adac : jmp 0x40adb7
0x0000000000410d7d : jmp 0x413a63
0x0000000000413811 : jmp 0x413a65
0x000000000041b90b : jmp 0x41b916
0x000000000041c57b : jmp 0x41c586
0x00000000004198de : jmp 0xffffffffb7039caa
0x000000000041baca : jmp 0xffffffffc3e6336b
0x000000000040285c : jmp 0xffffffffd885b1fc
0x0000000000401ffb : jmp qword ptr [rax]
0x000000000041200f : jmp qword ptr [rbx]
0x0000000000403d99 : jmp qword ptr [rcx]
0x0000000000413f35 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040f4e6 : jmp qword ptr [rdx]
0x0000000000411f9f : jmp qword ptr [rsi]
0x0000000000401647 : jmp rax
0x0000000000412b32 : jmp rbx
0x0000000000405c0a : jmp rcx
0x00000000004131ce : jmp rdi
0x0000000000401687 : jmp rdx
0x000000000040a335 : jmp rsp
0x0000000000401670 : jne 0x401677 ; pop rbp ; ret
0x00000000004146e6 : jne 0x4146ef ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000406d7b : jno 0x406daf ; ret 0x8926
0x0000000000401e4c : jo 0x401ead ; ret
0x0000000000402b46 : jo 0x402ba7 ; ret
0x000000000040440a : jo 0x404412 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414901 : jo 0x414962 ; ret
0x0000000000414a24 : jo 0x414a85 ; ret
0x0000000000414b5e : jo 0x414bbf ; ret
0x0000000000414faf : jo 0x415010 ; ret
0x0000000000414fae : jo 0x415011 ; ret
0x0000000000418f6c : jo 0x418fcd ; ret
0x000000000041b2a4 : jo 0x41b305 ; ret
0x0000000000413a56 : js 0x413a6a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041bacc : js 0x41ba74 ; ret
0x000000000041bb13 : js 0x41babb ; ret
0x000000000041bb4d : js 0x41baf5 ; ret
0x00000000004060f3 : lahf ; ret 0xe280
0x00000000004097ec : lcall ptr [rbx] ; ret 0x5235
0x00000000004026a7 : loopne 0x4026ae ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406d79 : loopne 0x406dac ; jno 0x406db1 ; ret 0x8926
0x0000000000406d78 : loopne 0x406dad ; jno 0x406db2 ; ret 0x8926
0x0000000000406dbe : loopne 0x406df1 ; jb 0x406df6 ; ret 0x8926
0x0000000000406dbd : loopne 0x406df2 ; jb 0x406df7 ; ret 0x8926
0x000000000040a417 : loopne 0x40a41e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040af72 : loopne 0x40afc2 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040af71 : loopne 0x40afc3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ba2e : loopne 0x40ba37 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418763 : loopne 0x41876c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418cb0 : loopne 0x418cb9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004190bc : loopne 0x41910c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004190bb : loopne 0x41910d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000417526 : mov ah, 0x39 ; pop rbp ; ret
0x0000000000401bf0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403058 : mov al, -0x2a ; add r8b, bpl ; jmp rdx
0x000000000041aa2a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004030b4 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bbeb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041b81d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b9cd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c1c9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e9a1 : mov bl, -1 ; jmp rax
0x000000000040a461 : mov byte ptr [0x61f2a8], al ; pop rbp ; ret
0x00000000004135a8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a2e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004016a3 : mov byte ptr [rip + 0x21dbde], 1 ; ret
0x00000000004027ab : mov dh, -0x39 ; pop rbp ; ret
0x0000000000403261 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040341b : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407374 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbp ; ret
0x0000000000402b41 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041b823 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041c2f5 : mov dl, -0x47 ; ret
0x0000000000409d6b : mov dword ptr [0x61f29c], edi ; pop rbp ; ret
0x000000000040a43d : mov dword ptr [0x61f2a0], edi ; pop rbp ; ret
0x000000000040b8a7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b66b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b7df : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401bee : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414fef : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040ba5d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b55f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418ffb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abe3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418cdf : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415011 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040aa7c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004190fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004189d0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b8aa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040af70 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004190ba : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b454 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b55c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004187bd : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000040b665 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b7e1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041861a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x00000000004148fb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041b3fa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401e46 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004198a0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b29e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414f8d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414fcd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414fad : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004031af : mov ebp, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000418105 : mov ebp, 0xb9bca7a5 ; push rdx ; jmp qword ptr [rsi]
0x00000000004016cb : mov ebp, esp ; call rax
0x0000000000401631 : mov ebp, esp ; ja 0x40163c ; pop rbp ; ret
0x000000000040b668 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016c5 : mov edi, 0x61ee20 ; mov rbp, rsp ; call rax
0x0000000000401642 : mov edi, 0x61f258 ; jmp rax
0x0000000000401682 : mov edi, 0x61f258 ; jmp rdx
0x0000000000414f89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414fc9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414fa9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041c937 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041dfe1 : mov edi, esi ; call qword ptr [rcx]
0x000000000041c936 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000415015 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004066f1 : mov esi, 0x39440246 ; ret 0xf41
0x000000000040672d : mov esi, 0x39440346 ; ret 0xf41
0x0000000000401680 : mov esi, eax ; mov edi, 0x61f258 ; jmp rdx
0x000000000040a43c : mov qword ptr [0x61f2a0], rdi ; pop rbp ; ret
0x0000000000414fee : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040ba5c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000417525 : mov r12b, 0x39 ; pop rbp ; ret
0x0000000000401bef : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000418ffa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abe2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418cde : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415010 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040aa7b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004190fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004189cf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040af6f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004190b9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b453 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b55b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004148fa : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414f8c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414fcc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414fac : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016ca : mov rbp, rsp ; call rax
0x0000000000401630 : mov rbp, rsp ; ja 0x40163d ; pop rbp ; ret
0x0000000000414f88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414fc8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414fa8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000415014 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040167f : mov rsi, rax ; mov edi, 0x61f258 ; jmp rdx
0x00000000004146ea : mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004146eb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000411e3c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041c56e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040285a : movabs byte ptr [0x840fd8458994e919], al ; ret
0x00000000004187ff : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041bacd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000403260 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040341a : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407373 : movzx eax, al ; add rsp, 0x68 ; pop rbp ; ret
0x0000000000402b40 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041b822 : movzx eax, al ; pop rbp ; ret
0x00000000004027aa : movzx eax, bh ; pop rbp ; ret
0x000000000040a2ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004027a9 : movzx eax, dil ; pop rbp ; ret
0x000000000041dfe0 : nop ; mov edi, esi ; call qword ptr [rcx]
0x000000000041e0a0 : nop ; ret
0x000000000041c958 : nop dword ptr [rax + rax] ; ret
0x000000000041e99d : or al, 0 ; add byte ptr [rax], ah ; mov bl, -1 ; jmp rax
0x0000000000413a57 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004150b2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a13b : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000405b9c : or dword ptr [rdi - 0x7e3faa75], edx ; ret 1
0x0000000000408f67 : or eax, 0x5cb80000 ; ret
0x0000000000414ae1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027a7 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041b9cf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b81f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c94c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c94e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413d82 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c950 : pop r14 ; pop r15 ; ret
0x0000000000413d84 : pop r15 ; pop rbp ; ret
0x000000000041c952 : pop r15 ; ret
0x000000000041c048 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004016a2 : pop rbp ; mov byte ptr [rip + 0x21dbde], 1 ; ret
0x0000000000401641 : pop rbp ; mov edi, 0x61f258 ; jmp rax
0x000000000040167e : pop rbp ; mov rsi, rax ; mov edi, 0x61f258 ; jmp rdx
0x000000000041c94b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c94f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; ret
0x0000000000413d81 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413a5a : pop rbx ; pop rbp ; ret
0x0000000000407d00 : pop rbx ; ret
0x000000000041c2f4 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000413d85 : pop rdi ; pop rbp ; ret
0x000000000041c953 : pop rdi ; ret
0x000000000041c73b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000413d83 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c951 : pop rsi ; pop r15 ; ret
0x000000000041c94d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004081d0 : pop rsp ; ret
0x000000000041c109 : popfq ; ret 0xd284
0x00000000004169a0 : push -0x77 ; test dword ptr [rbx + rdi*8 - 0x7bf00001], ebp ; ret
0x0000000000409332 : push 0x3d ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041347f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000414f8e : push r8 ; pop rbp ; ret
0x0000000000401bf4 : push rax ; pop rbp ; ret
0x0000000000415016 : push rbp ; clc ; pop rbp ; ret
0x0000000000418ec3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004115b8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041179e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000411844 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000411872 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000411940 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000411ad6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004016c4 : push rbp ; mov edi, 0x61ee20 ; mov rbp, rsp ; call rax
0x0000000000417d25 : push rcx ; jmp qword ptr [rsi]
0x0000000000417d70 : push rdx ; jmp qword ptr [rsi]
0x000000000041ac93 : pushfq ; ret 0x8445
0x000000000041a9dc : pushfq ; ret 0xd284
0x0000000000401239 : ret
0x0000000000400638 : ret 0
0x0000000000419e39 : ret 0x10
0x0000000000417682 : ret 0x11e9
0x000000000041569e : ret 0x1f
0x000000000041c1fb : ret 0x2030
0x0000000000401452 : ret 0x21dc
0x0000000000401242 : ret 0x21dd
0x000000000041529d : ret 0x24
0x0000000000410f97 : ret 0x2a
0x00000000004142b6 : ret 0x2c1
0x000000000040aee1 : ret 0x30
0x000000000040defa : ret 0x43fa
0x00000000004060fa : ret 0x4589
0x00000000004077f9 : ret 0x5235
0x000000000041b5a3 : ret 0x5e5
0x000000000040aeef : ret 0x8148
0x00000000004065d4 : ret 0x8445
0x000000000040eca9 : ret 0x8589
0x000000000040dd90 : ret 0x891a
0x0000000000406d7d : ret 0x8926
0x000000000041bbac : ret 0x8934
0x0000000000418ec7 : ret 0x8948
0x00000000004198e1 : ret 0x89b6
0x000000000040723b : ret 0x8b26
0x000000000041bb88 : ret 0x8b34
0x0000000000406a1a : ret 0x8b48
0x00000000004175f5 : ret 0x9ee9
0x0000000000411c65 : ret 0xa9b9
0x0000000000412c10 : ret 0xaae8
0x000000000040d6e2 : ret 0xade6
0x00000000004113d0 : ret 0xb91a
0x0000000000419b9b : ret 0xb9b6
0x0000000000401665 : ret 0xc148
0x00000000004150ae : ret 0xc189
0x000000000041603d : ret 0xcb5b
0x0000000000402673 : ret 0xd284
0x0000000000413483 : ret 0xd4e9
0x00000000004162ba : ret 0xe
0x00000000004060f4 : ret 0xe280
0x0000000000413a9c : ret 0xee8
0x00000000004066f6 : ret 0xf41
0x000000000040712c : ret 0xff89
0x0000000000407157 : ret 0xff8e
0x00000000004071a7 : ret 0xff92
0x0000000000407266 : ret 0xff9f
0x0000000000412f5e : ret 0xffa5
0x00000000004072b6 : ret 0xffb2
0x00000000004117a1 : ret 0xffbf
0x000000000041220b : ret 0xffc4
0x0000000000411847 : ret 0xffc5
0x0000000000411875 : ret 0xffd5
0x0000000000411943 : ret 0xffd8
0x00000000004122b1 : ret 0xffd9
0x0000000000411ad9 : ret 0xffe0
0x00000000004030bb : ret 0xfffa
0x000000000041e061 : ret 0xfffe
0x000000000040aef2 : ret 0xffff
0x0000000000402f8e : ret 1
0x0000000000402f03 : ret 2
0x00000000004025c3 : ret 3
0x0000000000413597 : ret 4
0x000000000040947f : ret 8
0x0000000000406b59 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000041a984 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004049ab : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041af95 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b666 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040166c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40167b ; pop rbp ; ret
0x0000000000402b42 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402bab ; ret
0x0000000000404406 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x404416 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004026a3 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x4026b2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a413 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x40a422 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004030b0 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406b55 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x00000000004049a7 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b667 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000418ec0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004060f1 : ror dword ptr [rdi], -0x61 ; ret 0xe280
0x0000000000402672 : sahf ; ret 0xd284
0x00000000004187fa : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000403059 : salc ; add r8b, bpl ; jmp rdx
0x000000000041a05e : salc ; ret
0x000000000040166e : sar eax, 1 ; jne 0x401679 ; pop rbp ; ret
0x000000000040166d : sar rax, 1 ; jne 0x40167a ; pop rbp ; ret
0x000000000041e0d8 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000414719 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000418aa3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411c5e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041ec95 : sldt word ptr [rax] ; clc ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040a13d : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000404fbf : sti ; ret
0x000000000040eca7 : sub al, 0x38 ; ret 0x8589
0x0000000000411c63 : sub al, 0x38 ; ret 0xa9b9
0x0000000000418800 : sub cl, al ; pop rbp ; ret
0x000000000040a13e : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000041c9b1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041c9b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041add8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004148fd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041c95a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041e0dc : test byte ptr [rbx], al ; add byte ptr [rax], al ; nop ; ret
0x000000000041dfdc : test byte ptr [rdx], al ; add byte ptr [rax], al ; nop ; mov edi, esi ; call qword ptr [rcx]
0x00000000004169a2 : test dword ptr [rbx + rdi*8 - 0x7bf00001], ebp ; ret
0x00000000004066ee : test dword ptr [rdi + rcx - 0x42], 0x39440246 ; ret 0xf41
0x000000000040672a : test dword ptr [rdi + rcx - 0x42], 0x39440346 ; ret 0xf41
0x000000000040bc91 : xchg eax, ebp ; ret
0x000000000040920d : xchg eax, ebp ; ret 0x8445
0x000000000040b1c3 : xchg eax, ebp ; ret 0xd284
0x0000000000409c71 : xchg eax, ebp ; ret 0xe280
0x000000000040ec8b : xchg eax, ecx ; ret
0x000000000041a811 : xchg eax, edi ; ret 0xd284
0x000000000040eddb : xchg eax, edx ; ret
0x0000000000414612 : xchg eax, esi ; ret
0x0000000000416dd8 : xchg eax, esi ; ret 0xe280
0x000000000040bc73 : xchg eax, esp ; ret
0x00000000004065d3 : xchg eax, esp ; ret 0x8445
0x0000000000403f8c : xchg eax, esp ; ret 0xd284
0x000000000040a143 : xchg eax, esp ; ret 0xe280
0x0000000000414c17 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b7dd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
