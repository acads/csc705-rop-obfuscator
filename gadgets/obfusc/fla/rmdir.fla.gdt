0x000000000040a2f2 : adc al, -0x17 ; sub dword ptr [r8], r8d ; add al, ch ; ret
0x0000000000432e90 : adc al, -3 ; std ; call rsp
0x0000000000431196 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000431187 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000431186 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000040f83b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a2f1 : adc dword ptr [rcx + rbp*8], edx ; sub dword ptr [r8], r8d ; add al, ch ; ret
0x0000000000430c5d : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000040d219 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000433073 : add ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0xa], bl ; cld ; jmp rbx
0x0000000000432e4f : add ah, dh ; salc ; std ; call rsp
0x0000000000432e0f : add ah, dh ; sar ch, cl ; call rsp
0x0000000000433415 : add al, 0 ; add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rdx]
0x0000000000420805 : add al, 8 ; add al, ch ; ret
0x00000000004331d7 : add al, bh ; or ebp, edi ; call qword ptr [rsi]
0x0000000000431bf1 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004331d5 : add al, byte ptr [rax] ; add al, bh ; or ebp, edi ; call qword ptr [rsi]
0x000000000040f133 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041eabb : add al, ch ; jmp qword ptr [rdi]
0x000000000040a2f7 : add al, ch ; ret
0x0000000000433697 : add al, cl ; stosb byte ptr [rdi], al ; std ; jmp rdx
0x000000000040f52e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f296 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042fab9 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000431c4f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000430a64 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000431b15 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x00000000004310cd : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000042feac : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000432c51 : add bh, ch ; call rsp
0x000000000043224f : add bl, dh ; ret
0x0000000000432f0f : add byte ptr [rax + rbp - 1], dh ; call rsp
0x000000000041ff8b : add byte ptr [rax - 0x77], cl ; ret 0x5ce8
0x000000000042002c : add byte ptr [rax - 0x77], cl ; ret 0xbbe8
0x0000000000433077 : add byte ptr [rax - 0xa], bl ; cld ; jmp rbx
0x0000000000432e8e : add byte ptr [rax], al ; adc al, -3 ; std ; call rsp
0x0000000000433412 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rdx]
0x000000000040f52c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f294 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042fab7 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000431b81 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x00000000004310cb : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000431115 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000043224d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000433075 : add byte ptr [rax], al ; add byte ptr [rax - 0xa], bl ; cld ; jmp rbx
0x000000000043224b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043224c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402ab7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2dd845], cl ; lodsd eax, dword ptr [rsi] ; ret 0x895b
0x0000000000402aff : add byte ptr [rax], al ; add byte ptr [rbx + 0x1d2dd845], cl ; lodsd eax, dword ptr [rsi] ; ret 0x895b
0x0000000000402761 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2de445], cl ; ret 0xa132
0x0000000000424663 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000040cf5e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004250d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000425055 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004120be : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040be11 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000423374 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000411e08 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004249d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404e6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040439f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004033e9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411c3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f42a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404e4f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402ba5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402c02 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042499d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040d21b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cc80 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004128f8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f83d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d1d7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401283 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004331d2 : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; clc ; or ebp, edi ; call qword ptr [rsi]
0x00000000004331d6 : add byte ptr [rax], al ; clc ; or ebp, edi ; call qword ptr [rsi]
0x0000000000433796 : add byte ptr [rax], al ; cwde ; ret 0xfffd
0x0000000000433956 : add byte ptr [rax], al ; cwde ; xlatb ; std ; jmp rax
0x0000000000433776 : add byte ptr [rax], al ; fadd st(1) ; std ; call rdx
0x0000000000432e4e : add byte ptr [rax], al ; hlt ; salc ; std ; call rsp
0x0000000000432e0e : add byte ptr [rax], al ; hlt ; sar ch, cl ; call rsp
0x0000000000433792 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x0000000000432dce : add byte ptr [rax], al ; je 0x432d9d ; std ; call rsp
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x0000000000424999 : add byte ptr [rax], al ; jmp 0x4249a8
0x0000000000425609 : add byte ptr [rax], al ; jmp 0x425618
0x0000000000412bb1 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000425817 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000425dc6 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ed9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404739 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000425a7d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000433076 : add byte ptr [rax], al ; pop rax ; idiv ah ; jmp rbx
0x00000000004026c6 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cf5f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cc38 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043224e : add byte ptr [rax], al ; ret
0x0000000000433176 : add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x0000000000432d4e : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; std ; call rsp
0x00000000004339f6 : add byte ptr [rax], al ; test al, -0xf ; std ; call qword ptr [rdi]
0x0000000000432c4e : add byte ptr [rax], al ; test byte ptr [rdx], al ; std ; call rsp
0x0000000000433532 : add byte ptr [rax], al ; test byte ptr [rip - 0x58f80000], al ; std ; jmp qword ptr [rax]
0x0000000000432d8e : add byte ptr [rax], al ; xchg eax, esp ; mov cl, -3 ; call rsp
0x0000000000432d0e : add byte ptr [rax], al ; xor al, 0xffffffffffffffa6 ; std ; call rsp
0x0000000000433417 : add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rdx]
0x0000000000433657 : add byte ptr [rax], bl ; test al, -3 ; jmp qword ptr [rdx]
0x0000000000433537 : add byte ptr [rax], cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000433533 : add byte ptr [rbp + rax - 0x58f80000], al ; std ; jmp qword ptr [rax]
0x0000000000402ab9 : add byte ptr [rbx + 0x1c2dd845], cl ; lodsd eax, dword ptr [rsi] ; ret 0x895b
0x0000000000402b01 : add byte ptr [rbx + 0x1d2dd845], cl ; lodsd eax, dword ptr [rsi] ; ret 0x895b
0x0000000000402763 : add byte ptr [rbx + 0x2de445], cl ; ret 0xa132
0x0000000000424665 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000040cf60 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cc39 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401f31 : add byte ptr [rbx + 0xe2db045], cl ; stc ; insd dword ptr [rdi], dx ; ret 0x8589
0x00000000004250db : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000425057 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004120c0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041cca0 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000040be13 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000433953 : add byte ptr [rcx + rcx - 0x28680000], ah ; std ; jmp rax
0x000000000040f57e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016f8 : add byte ptr [rcx], al ; ret
0x0000000000432d4f : add byte ptr [rdi + rbp*4 - 3], ah ; call rsp
0x0000000000432ecf : add byte ptr [rdi + rbx - 1], al ; call rsp
0x0000000000423376 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000411e0a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004249da : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404e6f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004040e5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004033eb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411c3f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f42c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404e51 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402ba7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402c04 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004331d3 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; clc ; or ebp, edi ; call qword ptr [rsi]
0x0000000000433653 : add byte ptr [rsi + rax - 0x57e80000], ah ; std ; jmp qword ptr [rdx]
0x0000000000432dcf : add byte ptr [rsi + rax*8 - 3], dh ; call rsp
0x0000000000432d0f : add byte ptr [rsi], dh ; std ; call rsp
0x0000000000433413 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rdx]
0x000000000040e279 : add cl, ch ; ret
0x000000000042499f : add cl, ch ; ret 0
0x000000000040203f : add cl, ch ; ret 1
0x000000000040d1d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d8fa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404148 : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028a4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e71 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016f4 : add eax, 0x232b9e ; add ebx, esi ; ret
0x0000000000425dc4 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x0000000000433535 : add eax, 0xa7080000 ; std ; jmp qword ptr [rax]
0x000000000042fab6 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000432c8d : add eax, 0xfd40000 ; std ; call rsp
0x00000000004016bb : add eax, edx ; sar rax, 1 ; jne 0x4016cc ; pop rbp ; ret
0x00000000004016f9 : add ebx, esi ; ret
0x000000000040192b : add esp, 0x10 ; pop rbp ; ret
0x000000000040f57c : add esp, 0x100 ; pop rbp ; ret
0x000000000040d8f7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004026c2 : add esp, 0x190 ; pop rbp ; ret
0x000000000040387f : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040cc83 : add esp, 0x20 ; pop rbp ; ret
0x00000000004123c3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000040350b : add esp, 0x30 ; pop rbp ; ret
0x00000000004018df : add esp, 0x40 ; pop rbp ; ret
0x0000000000401ad2 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403bc6 : add esp, 0x60 ; pop rbp ; ret
0x000000000040dadf : add esp, 0x70 ; pop rbp ; ret
0x0000000000429a73 : add esp, 0x7f8 ; pop rbp ; ret
0x000000000040340a : add esp, 0x80 ; pop rbp ; ret
0x000000000041079c : add esp, 0x890 ; pop rbp ; ret
0x00000000004110e2 : add esp, 0x90 ; pop rbp ; ret
0x00000000004044fe : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402daf : add esp, 0xc0 ; pop rbp ; ret
0x000000000040cc34 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004321ce : add esp, 0xd70 ; pop rbp ; ret
0x0000000000401286 : add esp, 8 ; ret
0x00000000004016ba : add rax, rdx ; sar rax, 1 ; jne 0x4016cd ; pop rbp ; ret
0x000000000040192a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040f57b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040d8f6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004026c1 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040387e : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040cc82 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004123c2 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000040350a : add rsp, 0x30 ; pop rbp ; ret
0x00000000004018de : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ad1 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403bc5 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040dade : add rsp, 0x70 ; pop rbp ; ret
0x0000000000429a72 : add rsp, 0x7f8 ; pop rbp ; ret
0x0000000000403409 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041079b : add rsp, 0x890 ; pop rbp ; ret
0x00000000004110e1 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004044fd : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402dae : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040cc33 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004321cd : add rsp, 0xd70 ; pop rbp ; ret
0x0000000000401285 : add rsp, 8 ; ret
0x0000000000402e70 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004331d4 : and al, 2 ; add byte ptr [rax], al ; clc ; or ebp, edi ; call qword ptr [rsi]
0x0000000000412baf : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040389f : and eax, 0x6342a0 ; pop rbp ; ret
0x00000000004038c3 : and eax, 0x6342a8 ; pop rbp ; ret
0x000000000042feaa : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x00000000004016f7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000401b2f : call 0x401359
0x0000000000403392 : call 0x401456
0x0000000000412084 : call 0x401559
0x0000000000401b16 : call 0x401599
0x00000000004100f4 : call 0x4015a6
0x000000000042832d : call 0xffffffffc2823ca9
0x0000000000410318 : call 0xffffffffd1410317
0x000000000040cc79 : call 0xffffffffe90355c9
0x000000000040cc78 : call 0xffffffffe90355ca
0x00000000004086bd : call 0xfffffffff7390c54
0x0000000000411e85 : call 0xffffffffff45a45a
0x000000000040b1e9 : call 0xffffffffff5537bb
0x000000000040b1e8 : call 0xffffffffff5537bc
0x000000000040b1e9 : call 0xffffffffff5537bd
0x000000000040b1e8 : call 0xffffffffff5537be
0x0000000000432229 : call qword ptr [r12 + rbx*8]
0x000000000040a576 : call qword ptr [rax]
0x0000000000431653 : call qword ptr [rbx]
0x000000000040c205 : call qword ptr [rcx]
0x000000000041d295 : call qword ptr [rdi]
0x000000000040a1a3 : call qword ptr [rdx]
0x000000000040a13f : call qword ptr [rsi]
0x000000000043222a : call qword ptr [rsp + rbx*8]
0x000000000040171d : call rax
0x000000000040895a : call rbx
0x000000000041df18 : call rcx
0x000000000043377b : call rdx
0x000000000040f534 : call rsi
0x000000000042f3f9 : call rsp
0x000000000042505c : cdq ; ret
0x00000000004026c0 : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000410cd2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004126d0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016bf : clc ; jne 0x4016c8 ; pop rbp ; ret
0x00000000004331d8 : clc ; or ebp, edi ; call qword ptr [rsi]
0x0000000000425dca : clc ; pop rbp ; ret
0x000000000043307a : cld ; jmp rbx
0x000000000040ae3d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004040e4 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041148d : cmp al, -0x2a ; ret
0x0000000000417e14 : cmp al, -0x2e ; ret
0x0000000000401b1d : cmp al, 0x25 ; ret
0x0000000000431038 : cmp dh, -1 ; call qword ptr [rax]
0x0000000000430803 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000431195 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000040167d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401690 ; pop rbp ; ret
0x000000000042b66e : cmp esi, dword ptr [rdi] ; ret 0x8589
0x0000000000430034 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000417e67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x0000000000432d11 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsp
0x000000000040d114 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000433539 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000424b5b : cwde ; js 0x424b05 ; ret
0x0000000000424ba2 : cwde ; js 0x424b4c ; ret
0x0000000000424bdc : cwde ; js 0x424b86 ; ret
0x0000000000427ecd : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000433798 : cwde ; ret 0xfffd
0x0000000000433958 : cwde ; xlatb ; std ; jmp rax
0x0000000000401b1a : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000412088 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x00000000004245f8 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041edfa : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402554 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041cbf9 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041cba4 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x000000000042eae7 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040afe2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040b2ed : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000428e65 : dec dword ptr [rax - 0x7f] ; ret 4
0x00000000004310ac : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000430806 : dec dword ptr [rcx] ; ret 0x9589
0x000000000040c7f4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000417738 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x000000000040e273 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004137e4 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x000000000041342c : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x0000000000431cbe : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x000000000041cd05 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000040a328 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000411c3b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040439d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000410284 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e129 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000433778 : fadd st(1) ; std ; call rdx
0x0000000000410493 : fild qword ptr [rbx + 0x68] ; ret 0x8589
0x00000000004105c6 : fild qword ptr [rbx + 0x68] ; ret 0x89b9
0x0000000000404145 : fild word ptr [rax - 0x49f0fe1e] ; ret 0x8348
0x000000000041043f : fisubr word ptr [rbx + 0x68] ; ret 0x8589
0x000000000040fe34 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000410314 : fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x000000000041e940 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x000000000041e915 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000043222c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401929 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041282c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041079a : hlt ; add rsp, 0x890 ; pop rbp ; ret
0x0000000000401690 : hlt ; pop rbp ; mov edi, 0x634260 ; jmp rax
0x0000000000432e50 : hlt ; salc ; std ; call rsp
0x0000000000432e10 : hlt ; sar ch, cl ; call rsp
0x0000000000433079 : idiv ah ; jmp rbx
0x000000000042368d : idiv bh ; call qword ptr [rcx]
0x000000000041d293 : idiv bh ; call qword ptr [rdi]
0x000000000041da9b : idiv bh ; call qword ptr [rdx]
0x000000000041df16 : idiv bh ; call rcx
0x0000000000423370 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004234a6 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004236a6 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420732 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004205c0 : idiv bh ; jmp qword ptr [rax]
0x0000000000423811 : idiv bh ; jmp qword ptr [rcx]
0x000000000041f2ac : idiv bh ; jmp qword ptr [rdi]
0x000000000041fd47 : idiv bh ; jmp qword ptr [rsi]
0x000000000041f041 : idiv bh ; jmp rbx
0x000000000041df6f : idiv bh ; jmp rdi
0x000000000041cbd6 : idiv bh ; jmp rdx
0x00000000004207ea : idiv bh ; jmp rsp
0x0000000000410319 : idiv edi ; call rax
0x000000000041edf8 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041e7e6 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041f4b7 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041efd7 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041fa9f : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041063f : idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000415f03 : imul al ; ret 0x893f
0x0000000000423aec : imul eax ; ret 0x483f
0x000000000041b64b : imul eax ; ret 0x893f
0x000000000040ebce : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040a799 : in al, -0x7f ; ret 0xff9f
0x000000000040a97f : in al, -0x7f ; ret 0xffbf
0x000000000040aa25 : in al, -0x7f ; ret 0xffc5
0x000000000040aa53 : in al, -0x7f ; ret 0xffd5
0x000000000040ab21 : in al, -0x7f ; ret 0xffd8
0x000000000040acb7 : in al, -0x7f ; ret 0xffe0
0x0000000000433794 : in al, 7 ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x0000000000410a3f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040484a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004245fb : in al, dx ; pop rbp ; ret
0x000000000042525b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004040e2 : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000040be0f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000423372 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041e7e8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a3d1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cf72 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040c9ba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402247 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000410641 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000040d8c8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042f3f3 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x00000000004318d2 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x00000000004309e2 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000042ebd1 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x000000000042fc33 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000420803 : inc esi ; add al, 8 ; add al, ch ; ret
0x0000000000401f38 : insd dword ptr [rdi], dx ; ret 0x8589
0x0000000000406f6f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040a5af : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004024c4 : insd dword ptr [rdi], dx ; ret 0xd7b9
0x00000000004339f9 : int1 ; std ; call qword ptr [rdi]
0x0000000000401683 : ja 0x40168a ; pop rbp ; ret
0x000000000040168f : je 0x40168d ; pop rbp ; mov edi, 0x634260 ; jmp rax
0x0000000000432dd0 : je 0x432d9b ; std ; call rsp
0x000000000041073f : jg 0x410753 ; xchg eax, edi ; ret 0xd284
0x00000000004237fa : jg 0x42380e ; xchg eax, esp ; ret 0xd284
0x0000000000425d73 : jg 0x425d7a ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403390 : jge 0x40337a ; call 0x401458
0x000000000040e6e8 : jge 0x40e6ff ; ret
0x000000000040ebd3 : jge 0x40ebea ; ret
0x00000000004257c9 : jge 0x4257c3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004040df : jl 0x404074 ; push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000040e5bc : jl 0x40e5d3 ; ret
0x00000000004013fb : jmp 0x401297
0x000000000040a2f3 : jmp 0x40cc43
0x000000000040c9f1 : jmp 0x40cc45
0x000000000040ebcd : jmp 0x40f145
0x0000000000421785 : jmp 0x424604
0x000000000041d3e1 : jmp 0x424605
0x000000000041f73b : jmp 0x424606
0x000000000042499b : jmp 0x4249a6
0x000000000042560b : jmp 0x425616
0x0000000000428223 : jmp 0x429a81
0x0000000000430fff : jmp 0x4321dc
0x0000000000431755 : jmp 0x4321dd
0x0000000000431b20 : jmp 0x4321de
0x0000000000429551 : jmp 0xffffffff8cfc59a2
0x0000000000410d0e : jmp 0xffffffffb70310da
0x0000000000424b5a : jmp 0xffffffffc3e6c3fb
0x000000000040a07d : jmp qword ptr [rax]
0x000000000040b1ef : jmp qword ptr [rbx]
0x000000000040cbc0 : jmp qword ptr [rcx]
0x000000000041eabd : jmp qword ptr [rdi]
0x000000000040d115 : jmp qword ptr [rdx + 0xc2e968]
0x00000000004086c6 : jmp qword ptr [rdx]
0x000000000040b17f : jmp qword ptr [rsi]
0x0000000000401697 : jmp rax
0x000000000040bd12 : jmp rbx
0x000000000042ebd7 : jmp rcx
0x000000000040c3ae : jmp rdi
0x00000000004016d7 : jmp rdx
0x000000000042feb2 : jmp rsi
0x000000000040bda9 : jmp rsp
0x00000000004016c0 : jne 0x4016c7 ; pop rbp ; ret
0x000000000040d8c6 : jne 0x40d8cf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040dae1 : jo 0x40db42 ; ret
0x000000000040dc04 : jo 0x40dc65 ; ret
0x000000000040dd3e : jo 0x40dd9f ; ret
0x000000000040fedc : jo 0x40ff3d ; ret
0x00000000004126d4 : jo 0x412735 ; ret
0x00000000004321d0 : jo 0x4321e4 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cc36 : js 0x40cc4a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000424b5c : js 0x424b04 ; ret
0x0000000000424ba3 : js 0x424b4b ; ret
0x0000000000424bdd : js 0x424b85 ; ret
0x0000000000430032 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000042c126 : lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000402abf : lodsd eax, dword ptr [rsi] ; ret 0x895b
0x0000000000402c2a : lodsd eax, dword ptr [rsi] ; ret 0x8a5b
0x000000000040333c : loopne 0x403345 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403391 : loopne 0x403382 ; mov ecx, 0xb9ffffe0 ; ret
0x0000000000404c0e : loopne 0x404c17 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040fc20 : loopne 0x40fc29 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041002c : loopne 0x41007c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041002b : loopne 0x41007d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000430800 : loopne 0x430795 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000417cfc : mov ah, 0x47 ; ret 0x8589
0x000000000041d6d4 : mov ah, 0x47 ; ret 0x88b9
0x0000000000401ad0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000432dcc : mov ah, 0xa ; add byte ptr [rax], al ; je 0x432d9f ; std ; call rsp
0x0000000000432e0c : mov ah, 0xb ; add byte ptr [rax], al ; hlt ; sar ch, cl ; call rsp
0x0000000000432e4c : mov ah, 0xc ; add byte ptr [rax], al ; hlt ; salc ; std ; call rsp
0x0000000000432e8c : mov ah, 0xd ; add byte ptr [rax], al ; adc al, -3 ; std ; call rsp
0x0000000000432c4c : mov ah, 4 ; add byte ptr [rax], al ; test byte ptr [rdx], al ; std ; call rsp
0x0000000000432d0c : mov ah, 7 ; add byte ptr [rax], al ; xor al, 0xffffffffffffffa6 ; std ; call rsp
0x0000000000432d4c : mov ah, 8 ; add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; std ; call rsp
0x0000000000432d8c : mov ah, 9 ; add byte ptr [rax], al ; xchg eax, esp ; mov cl, -3 ; call rsp
0x0000000000430409 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000411e5a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004100f2 : mov al, 0 ; call 0x4015a8
0x0000000000404dcb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000402e6d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424a5d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425259 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403176 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004036cd : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004038c1 : mov byte ptr [0x6342a8], al ; pop rbp ; ret
0x000000000040c788 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004016f3 : mov byte ptr [rip + 0x232b9e], 1 ; ret
0x0000000000432d91 : mov cl, -3 ; call rsp
0x000000000040414a : mov dh, -0x3e ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028a6 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e73 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000425385 : mov dl, -0x47 ; ret
0x000000000040389d : mov dword ptr [0x6342a0], edi ; pop rbp ; ret
0x0000000000404a87 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040484b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004049bf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401ace : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401927 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c3d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412bb3 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040473f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ff6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403507 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404043 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fc4f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403edc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041006e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f940 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404a8a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041002a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404634 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040473c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404845 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004049c1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000425a80 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000040dadb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041282a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410cd0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004126ce : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000425dc8 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f73d : mov ebp, 0xb800004e ; push rcx ; ret
0x000000000040171b : mov ebp, esp ; call rax
0x0000000000401681 : mov ebp, esp ; ja 0x40168c ; pop rbp ; ret
0x0000000000403393 : mov ecx, 0xb9ffffe0 ; ret
0x0000000000404848 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000428051 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000401715 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x0000000000401692 : mov edi, 0x634260 ; jmp rax
0x00000000004016d2 : mov edi, 0x634260 ; jmp rdx
0x000000000040338f : mov edi, dword ptr [rbp - 0x20] ; call 0x401459
0x0000000000432227 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000432226 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000427da1 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x00000000004016d0 : mov esi, eax ; mov edi, 0x634260 ; jmp rdx
0x0000000000427ece : mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000427df7 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x00000000004245fa : mov esp, ebp ; pop rbp ; ret
0x000000000040389c : mov qword ptr [0x6342a0], rdi ; pop rbp ; ret
0x0000000000404c3c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401acf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000430408 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000040ff6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403506 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404042 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fc4e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403edb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041006d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f93f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410029 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404633 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040473b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000425a7f : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000040dada : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040171a : mov rbp, rsp ; call rax
0x0000000000401680 : mov rbp, rsp ; ja 0x40168d ; pop rbp ; ret
0x00000000004016cf : mov rsi, rax ; mov edi, 0x634260 ; jmp rdx
0x00000000004245f9 : mov rsp, rbp ; pop rbp ; ret
0x000000000040d8ca : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040d8cb : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040b01c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004255fe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040ebcc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x40f146
0x0000000000424b5d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000417e13 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x0000000000417ddd : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000433419 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rdx]
0x00000000004247e9 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004028a5 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e72 : movzx eax, al ; pop rbp ; ret
0x0000000000404149 : movzx eax, dl ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004036ce : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004036cf : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000432248 : nop dword ptr [rax + rax] ; ret
0x0000000000432e4d : or al, 0 ; add ah, dh ; salc ; std ; call rsp
0x000000000040cc37 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000432dcd : or al, byte ptr [rax] ; add byte ptr [rsi + rax*8 - 3], dh ; call rsp
0x0000000000432d4d : or byte ptr [rax], al ; add byte ptr [rdi + rbp*4 - 3], ah ; call rsp
0x0000000000402bfe : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040412c : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000428052 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x000000000040e277 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000412bae : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000432e8d : or eax, 0xfd140000 ; std ; call rsp
0x0000000000432e0d : or eax, dword ptr [rax] ; add ah, dh ; sar ch, cl ; call rsp
0x000000000040dcc1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004331d9 : or ebp, edi ; call qword ptr [rsi]
0x0000000000424685 : out -0x47, al ; ret 0x48e7
0x0000000000417cfb : out -0x4c, al ; ret 0x8589
0x0000000000417d4f : out -0x4c, eax ; ret 0x8589
0x000000000041d6d3 : out -0x4c, eax ; ret 0x88b9
0x0000000000424a5f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402e6f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043223c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043223e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040cf62 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432240 : pop r14 ; pop r15 ; ret
0x000000000040cf64 : pop r15 ; pop rbp ; ret
0x0000000000432242 : pop r15 ; ret
0x00000000004250d8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000433078 : pop rax ; idiv ah ; jmp rbx
0x00000000004016f2 : pop rbp ; mov byte ptr [rip + 0x232b9e], 1 ; ret
0x0000000000401691 : pop rbp ; mov edi, 0x634260 ; jmp rax
0x00000000004016ce : pop rbp ; mov rsi, rax ; mov edi, 0x634260 ; jmp rdx
0x000000000043223b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043223f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401685 : pop rbp ; ret
0x000000000040cf61 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cc3a : pop rbx ; pop rbp ; ret
0x000000000042caa9 : pop rbx ; ret 0x1dd
0x0000000000425384 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000416968 : pop rcx ; ret 0x891f
0x000000000041cdb7 : pop rcx ; ret 0xba1f
0x000000000040cf65 : pop rdi ; pop rbp ; ret
0x0000000000412d07 : pop rdi ; ret
0x00000000004257cb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042ca55 : pop rdx ; ret 0x1dd
0x000000000040cf63 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000432241 : pop rsi ; pop r15 ; ret
0x000000000043223d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406e72 : pop rsp ; ret
0x0000000000423378 : popfq ; ret 0xd284
0x0000000000423ae7 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x0000000000432d4b : push qword ptr [rax + rcx - 0x509c0000] ; std ; call rsp
0x0000000000432c8b : push qword ptr [rbp + rax + 0xfd40000] ; std ; call rsp
0x0000000000432e8b : push qword ptr [rbp + rcx - 0x2ec0000] ; std ; call rsp
0x0000000000432e0b : push qword ptr [rbx + rcx - 0x2d0c0000] ; std ; call rsp
0x0000000000432d8b : push qword ptr [rcx + rcx - 0x4e6c0000] ; std ; call rsp
0x0000000000432d0b : push qword ptr [rdi + rax - 0x59cc0000] ; std ; call rsp
0x000000000040c65f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000432dcb : push qword ptr [rdx + rcx - 0x398c0000] ; std ; call rsp
0x0000000000432ccb : push qword ptr [rsi + rax + 0x1dd40000] ; std ; call rsp
0x0000000000432c4b : push qword ptr [rsp + rax + 0x2840000] ; std ; call rsp
0x0000000000432e4b : push qword ptr [rsp + rcx - 0x290c0000] ; std ; call rsp
0x0000000000401ad4 : push rax ; pop rbp ; ret
0x0000000000416f87 : push rax ; ret
0x000000000040f52b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000404144 : push rbp ; fild word ptr [rax - 0x49f0fe1e] ; ret 0x8348
0x000000000040fe33 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000410313 : push rbp ; fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x000000000040a798 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040a97e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040aa24 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040aa52 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040ab20 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040acb6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004040e1 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401714 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x000000000041487b : push rbx ; ret 0xaf58
0x000000000041a5c7 : push rcx ; ret
0x0000000000414827 : push rdx ; ret 0xaf58
0x00000000004120c3 : pushfq ; ret 0x8445
0x0000000000411e0c : pushfq ; ret 0xd284
0x0000000000401289 : ret
0x000000000040d119 : ret 0
0x0000000000411269 : ret 0x10
0x000000000042ca56 : ret 0x1dd
0x000000000041cba7 : ret 0x20
0x000000000042528b : ret 0x2030
0x0000000000401602 : ret 0x232b
0x0000000000401402 : ret 0x232c
0x000000000040a177 : ret 0x2a
0x000000000040d496 : ret 0x2c1
0x000000000042a055 : ret 0x3617
0x000000000040bdf0 : ret 0x3ae8
0x0000000000420538 : ret 0x40
0x00000000004070da : ret 0x43fa
0x0000000000428f6f : ret 0x4810
0x0000000000423aee : ret 0x483f
0x000000000042466b : ret 0x48e7
0x0000000000431cd6 : ret 0x4eb9
0x000000000041ff8e : ret 0x5ce8
0x00000000004129d3 : ret 0x5e5
0x000000000041c8d3 : ret 0x6d
0x0000000000426029 : ret 0x6f69
0x0000000000418573 : ret 0x73
0x0000000000414c88 : ret 0x791e
0x0000000000412c01 : ret 0x79e8
0x00000000004179a3 : ret 0x7a
0x000000000042075f : ret 0x7b9
0x000000000041c467 : ret 0x7f76
0x0000000000419cf7 : ret 0x80
0x000000000041e758 : ret 0x8148
0x000000000040414b : ret 0x8348
0x000000000040224b : ret 0x8445
0x000000000042dd5d : ret 0x848e
0x0000000000401f39 : ret 0x8589
0x000000000041d6d6 : ret 0x88b9
0x000000000042a94e : ret 0x8916
0x0000000000406f70 : ret 0x891a
0x0000000000416969 : ret 0x891f
0x0000000000424c3c : ret 0x8934
0x0000000000415f05 : ret 0x893f
0x000000000040fe37 : ret 0x8948
0x0000000000402ac0 : ret 0x895b
0x0000000000410d11 : ret 0x89b6
0x00000000004105c9 : ret 0x89b9
0x0000000000418b89 : ret 0x89e8
0x000000000042c977 : ret 0x89fc
0x0000000000402c2b : ret 0x8a5b
0x0000000000424c18 : ret 0x8b34
0x000000000040bdd5 : ret 0x8b48
0x0000000000421792 : ret 0x8be8
0x0000000000430808 : ret 0x9589
0x0000000000430036 : ret 0x9ae9
0x0000000000402769 : ret 0xa132
0x000000000040ae45 : ret 0xa9b9
0x00000000004068c2 : ret 0xade6
0x0000000000414828 : ret 0xaf58
0x00000000004024a3 : ret 0xb0
0x000000000041772f : ret 0xb846
0x000000000040a5b0 : ret 0xb91a
0x00000000004140b7 : ret 0xb957
0x0000000000410fcb : ret 0xb9b6
0x000000000041cdb8 : ret 0xba1f
0x000000000042002f : ret 0xbbe8
0x00000000004016b5 : ret 0xc148
0x0000000000402baa : ret 0xd284
0x000000000040c663 : ret 0xd4e9
0x000000000040323d : ret 0xd6b6
0x00000000004024c5 : ret 0xd7b9
0x000000000042c879 : ret 0xe0a5
0x0000000000402c07 : ret 0xe280
0x000000000043064e : ret 0xe9fc
0x000000000042711d : ret 0xec0b
0x000000000040cc7c : ret 0xee8
0x000000000041e943 : ret 0xf40
0x000000000040b025 : ret 0xf41
0x000000000041ffbf : ret 0xf9b9
0x0000000000413cb7 : ret 0xfa
0x000000000041e796 : ret 0xfa81
0x00000000004100fa : ret 0xff11
0x000000000042edba : ret 0xff6b
0x0000000000430d86 : ret 0xff9b
0x000000000040a79b : ret 0xff9f
0x000000000040c13e : ret 0xffa5
0x0000000000430f6c : ret 0xffbb
0x000000000040a981 : ret 0xffbf
0x000000000040b3eb : ret 0xffc4
0x000000000040aa27 : ret 0xffc5
0x000000000040aa55 : ret 0xffd5
0x000000000040ab23 : ret 0xffd8
0x000000000040b491 : ret 0xffd9
0x000000000040acb9 : ret 0xffe0
0x00000000004030be : ret 0xfff0
0x00000000004201b5 : ret 0xfff7
0x00000000004201e6 : ret 0xfff9
0x0000000000409d8e : ret 0xfffa
0x00000000004107a5 : ret 0xfffb
0x0000000000433799 : ret 0xfffd
0x000000000042eaea : ret 0xffff
0x0000000000402041 : ret 1
0x000000000040b2f0 : ret 2
0x000000000040c777 : ret 4
0x000000000040e2a8 : ret 5
0x000000000040ce60 : ret 8
0x0000000000411db4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004123c5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431b12 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000404846 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004016bc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016cb ; pop rbp ; ret
0x00000000004028a7 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000404847 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040fe30 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004249dc : sahf ; ret 0xd284
0x00000000004016f5 : sahf ; sub esp, dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x000000000041148e : salc ; ret
0x0000000000432e51 : salc ; std ; call rsp
0x0000000000432e11 : sar ch, cl ; call rsp
0x00000000004033e6 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x00000000004016be : sar eax, 1 ; jne 0x4016c9 ; pop rbp ; ret
0x00000000004016bd : sar rax, 1 ; jne 0x4016ca ; pop rbp ; ret
0x0000000000402abe : sbb al, -0x53 ; ret 0x895b
0x0000000000433790 : sbb al, 0 ; add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x000000000042fba3 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000040d8f9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000433178 : sbb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x000000000042c4a5 : sbb dl, dh ; ret
0x000000000040fa13 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ae3e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000042c4f9 : sbb edx, esi ; ret
0x000000000042fba2 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000432d51 : scasd eax, dword ptr [rdi] ; std ; call rsp
0x000000000042fb12 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000401f37 : stc ; insd dword ptr [rdi], dx ; ret 0x8589
0x00000000004024c3 : stc ; insd dword ptr [rdi], dx ; ret 0xd7b9
0x00000000004339fa : std ; call qword ptr [rdi]
0x000000000043317a : std ; call qword ptr [rsi]
0x000000000043377a : std ; call rdx
0x0000000000432c52 : std ; call rsp
0x000000000043353a : std ; jmp qword ptr [rax]
0x000000000043341a : std ; jmp qword ptr [rdx]
0x000000000043395a : std ; jmp rax
0x000000000043369a : std ; jmp rdx
0x0000000000432d4a : std ; push qword ptr [rax + rcx - 0x509c0000] ; std ; call rsp
0x0000000000432c8a : std ; push qword ptr [rbp + rax + 0xfd40000] ; std ; call rsp
0x0000000000432e8a : std ; push qword ptr [rbp + rcx - 0x2ec0000] ; std ; call rsp
0x0000000000432e0a : std ; push qword ptr [rbx + rcx - 0x2d0c0000] ; std ; call rsp
0x0000000000432d8a : std ; push qword ptr [rcx + rcx - 0x4e6c0000] ; std ; call rsp
0x0000000000432d0a : std ; push qword ptr [rdi + rax - 0x59cc0000] ; std ; call rsp
0x0000000000432dca : std ; push qword ptr [rdx + rcx - 0x398c0000] ; std ; call rsp
0x0000000000432cca : std ; push qword ptr [rsi + rax + 0x1dd40000] ; std ; call rsp
0x0000000000432c4a : std ; push qword ptr [rsp + rax + 0x2840000] ; std ; call rsp
0x0000000000432e4a : std ; push qword ptr [rsp + rcx - 0x290c0000] ; std ; call rsp
0x0000000000432e91 : std ; std ; call rsp
0x0000000000403178 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433699 : stosb byte ptr [rdi], al ; std ; jmp rdx
0x0000000000407e87 : sub al, 0x38 ; ret 0x8589
0x000000000040ae43 : sub al, 0x38 ; ret 0xa9b9
0x0000000000432f11 : sub bh, bh ; call rsp
0x000000000040a2f4 : sub dword ptr [r8], r8d ; add al, ch ; ret
0x000000000040a2f5 : sub dword ptr [rax], eax ; add al, ch ; ret
0x000000000040a2f0 : sub dword ptr [rcx], edx ; adc al, -0x17 ; sub dword ptr [r8], r8d ; add al, ch ; ret
0x000000000043227d : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004016f6 : sub esp, dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x000000000043227c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000428229 : sysenter
0x000000000040f54b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004303df : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004339f8 : test al, -0xf ; std ; call qword ptr [rdi]
0x0000000000433659 : test al, -3 ; jmp qword ptr [rdx]
0x0000000000412208 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dadd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040f428 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043224a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041773a : test byte ptr [rbx], ah ; ret 0
0x0000000000432c50 : test byte ptr [rdx], al ; std ; call rsp
0x000000000040e275 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000433534 : test byte ptr [rip - 0x58f80000], al ; std ; jmp qword ptr [rax]
0x00000000004137e6 : test cl, dh ; ret 0
0x000000000041342e : test dl, bl ; ret 0
0x0000000000419cf0 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x0000000000417734 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x0000000000420532 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x0000000000417d6b : test dword ptr [rcx + 1], ebp ; ret
0x000000000040f530 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f298 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000413ea8 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x000000000042fabb : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004303e1 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000042f3f5 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x00000000004318d4 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000431bf3 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004309e4 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000430aea : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x000000000042ebd3 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000431b17 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000042fba5 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000042feae : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000043002e : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000410317 : test ebp, eax ; idiv edi ; call rax
0x000000000041edf6 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041063d : test esi, eax ; idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000041e942 : wait ; ret 0xf40
0x000000000042c975 : xchg ax, dx ; ret 0x89fc
0x0000000000417dbf : xchg byte ptr [rcx + 1], ch ; ret
0x0000000000430802 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000404e71 : xchg eax, ebp ; ret
0x000000000040224a : xchg eax, ebp ; ret 0x8445
0x00000000004040e7 : xchg eax, ebp ; ret 0xd284
0x00000000004033ed : xchg eax, ebp ; ret 0xe280
0x0000000000431cc0 : xchg eax, ebx ; ret 0xd284
0x0000000000407e6b : xchg eax, ecx ; ret
0x0000000000410741 : xchg eax, edi ; ret 0xd284
0x0000000000407fbb : xchg eax, edx ; ret
0x0000000000410644 : xchg eax, edx ; ret 0x8445
0x000000000042c976 : xchg eax, edx ; ret 0x89fc
0x000000000040f42e : xchg eax, edx ; ret 0xd284
0x000000000043064d : xchg eax, edx ; ret 0xe9fc
0x000000000040d7f2 : xchg eax, esi ; ret
0x000000000041cd07 : xchg eax, esi ; ret 0xd284
0x0000000000432d90 : xchg eax, esp ; mov cl, -3 ; call rsp
0x0000000000404e53 : xchg eax, esp ; ret
0x000000000040be16 : xchg eax, esp ; ret 0x8445
0x0000000000402ba9 : xchg eax, esp ; ret 0xd284
0x0000000000402c06 : xchg eax, esp ; ret 0xe280
0x0000000000433959 : xlatb ; std ; jmp rax
0x000000000041208b : xor al, 0x25 ; ret
0x0000000000432d10 : xor al, 0xffffffffffffffa6 ; std ; call rsp
0x0000000000432f51 : xor bh, bh ; call rsp
0x000000000041f73a : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x000000000040ddf7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004049bd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
