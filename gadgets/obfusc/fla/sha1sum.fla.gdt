0x0000000000403745 : adc al, 0x25 ; ret
0x00000000004036e3 : adc al, 0x25 ; ret 0x6222
0x000000000040c3d8 : adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x0000000000408299 : adc al, dh ; loope 0x408273 ; ret
0x000000000040d607 : adc byte ptr [rcx], al ; ret 0x5189
0x000000000041a5eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d5bd : adc dword ptr [rcx], eax ; ret 0x1189
0x000000000040c22b : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000417f99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004201cd : adc esi, edi ; jmp rax
0x0000000000408298 : adc r8b, r14b ; loope 0x408274 ; ret
0x000000000042094b : add ah, al ; add eax, dword ptr [rax] ; add al, dl ; loopne 0x420959 ; call rdx
0x0000000000405432 : add al, 0 ; add byte ptr [rax - 0x75], cl ; jge 0x40542a ; call 0x401739
0x0000000000403411 : add al, 0x25 ; ret
0x00000000004033a2 : add al, 0x25 ; ret 0x6222
0x000000000040d5ce : add al, 1 ; ret 0x5189
0x000000000042078c : add al, 2 ; add byte ptr [rax], al ; nop ; ja 0x420798 ; call qword ptr [rsi]
0x0000000000420c8c : add al, 7 ; add byte ptr [rax], al ; xor byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x000000000040d39a : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000419ee3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040deb6 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004036c8 : add al, ch ; ret 0xffdf
0x000000000040511c : add al, ch ; sahf ; ret
0x000000000042094f : add al, dl ; loopne 0x420955 ; call rdx
0x000000000040b704 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x000000000040d0fe : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdi]
0x000000000040d39c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000040c3da : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x000000000040bc40 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000040c22d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000041a2de : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041a046 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041f1ef : add bl, dh ; ret
0x00000000004056f5 : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret 0x41f9
0x0000000000405683 : add byte ptr [r8 - 0x77], cl ; ret 0x73e8
0x0000000000405777 : add byte ptr [r8 - 0x77], cl ; ret 0x7fe8
0x00000000004056fd : add byte ptr [r8 - 0x77], cl ; ret 0xf9e8
0x000000000040db08 : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000420dab : add byte ptr [rax + rcx], ah ; add byte ptr [rax], al ; jle 0x420dba ; jmp qword ptr [rdx]
0x0000000000401bc8 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x00000000004056f6 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x41f9
0x0000000000405434 : add byte ptr [rax - 0x75], cl ; jge 0x405428 ; call 0x401737
0x00000000004151d1 : add byte ptr [rax - 0x75], cl ; jge 0x41517d ; call 0x401477
0x0000000000408412 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1103056a
0x0000000000408374 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x90304cc
0x00000000004083c3 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0xd03051b
0x000000000040e484 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x0000000000405684 : add byte ptr [rax - 0x77], cl ; ret 0x73e8
0x0000000000405778 : add byte ptr [rax - 0x77], cl ; ret 0x7fe8
0x00000000004056fe : add byte ptr [rax - 0x77], cl ; ret 0xf9e8
0x000000000040e48f : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x00000000004204a3 : add byte ptr [rax], ah ; ret 0xffff
0x000000000042078a : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; nop ; ja 0x42079a ; call qword ptr [rsi]
0x0000000000420c8a : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; xor byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x000000000041a2dc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041a044 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041f1ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401bc6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000408410 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1103056c
0x0000000000408372 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x90304ce
0x00000000004083c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0xd03051d
0x000000000040e482 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000040e48d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000041f1eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004082bb : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f1ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417cde : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040732a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2dac45], cl ; jmp qword ptr [rdi]
0x000000000041e8d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041e855 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041dcee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040697f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000416b91 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041e995 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004037ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ed80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040fbed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403511 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c00 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040e272 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040dc41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041a1da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040fbcf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004055c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d53 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407c4b : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041e19d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000417f9b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417a00 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040eae5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a5ed : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417f57 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000420daa : add byte ptr [rax], al ; and al, 8 ; add byte ptr [rax], al ; jle 0x420dbb ; jmp qword ptr [rdx]
0x000000000041ba1d : add byte ptr [rax], al ; call 0x4013b8
0x000000000042082e : add byte ptr [rax], al ; jl 0x420836 ; call qword ptr [rsi]
0x0000000000420dae : add byte ptr [rax], al ; jle 0x420db7 ; jmp qword ptr [rdx]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000407c47 : add byte ptr [rax], al ; jmp 0x407c56
0x000000000041e199 : add byte ptr [rax], al ; jmp 0x41e1a8
0x000000000041ee09 : add byte ptr [rax], al ; jmp 0x41ee18
0x000000000041f017 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e859 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f4b9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f4e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000405433 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x18] ; call 0x401738
0x00000000004151d0 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x60] ; call 0x401478
0x000000000042078e : add byte ptr [rax], al ; nop ; ja 0x420796 ; call qword ptr [rsi]
0x0000000000403c6c : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417cdf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004179b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041f1ee : add byte ptr [rax], al ; ret
0x0000000000420c8e : add byte ptr [rax], al ; xor byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x0000000000420c8f : add byte ptr [rax], dh ; jge 0x420c96 ; jmp qword ptr [rax]
0x0000000000417ce0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004179b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004072e1 : add byte ptr [rbx + 0x5e2dac45], cl ; jmp qword ptr [rdi]
0x000000000040732c : add byte ptr [rbx + 0x5f2dac45], cl ; jmp qword ptr [rdi]
0x0000000000403c2e : add byte ptr [rbx - 0x3774b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041e8db : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041e857 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041dcf0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000406981 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040db0b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000406b47 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a32e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000420c8b : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; xor byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x000000000041e997 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004037af : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ed82 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040fbef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403513 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c02 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040e274 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040dc43 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041a1dc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040fbd1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004055c9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d55 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042078b : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; nop ; ja 0x420799 ; call qword ptr [rsi]
0x0000000000407c4d : add cl, ch ; ret
0x000000000041e19f : add cl, ch ; ret 0
0x0000000000406550 : add cl, ch ; ret 1
0x000000000040340f : add dh, al ; add al, 0x25 ; ret
0x00000000004033a0 : add dh, al ; add al, 0x25 ; ret 0x6222
0x0000000000417f55 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041867a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004072df : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5e2dac45], cl ; jmp qword ptr [rdi]
0x0000000000407276 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000406e2d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e0b1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x220aae ; add ebx, esi ; ret
0x000000000042094d : add eax, dword ptr [rax] ; add al, dl ; loopne 0x420957 ; call rdx
0x0000000000407a84 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000405213 : add eax, ebp ; xlatb ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x00000000004033d7 : add esi, eax ; add al, 0x25 ; ret 0x6222
0x0000000000403cd0 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401acb : add esp, 0x10 ; pop rbp ; ret
0x000000000041a32c : add esp, 0x100 ; pop rbp ; ret
0x0000000000418677 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004077ab : add esp, 0x120 ; pop rbp ; ret
0x0000000000406c31 : add esp, 0x150 ; pop rbp ; ret
0x000000000040dcbd : add esp, 0x180 ; pop rbp ; ret
0x000000000041a49c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000408467 : add esp, 0x20 ; pop rbp ; ret
0x000000000041dff3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041bd4a : add esp, 0x2e0 ; pop rbp ; ret
0x000000000040eae8 : add esp, 0x30 ; pop rbp ; ret
0x00000000004058e9 : add esp, 0x360 ; pop rbp ; ret
0x0000000000403c68 : add esp, 0x390 ; pop rbp ; ret
0x000000000040e9c7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401a80 : add esp, 0x50 ; pop rbp ; ret
0x000000000040d623 : add esp, 0x550 ; pop rbp ; ret
0x0000000000408256 : add esp, 0x60 ; pop rbp ; ret
0x000000000041885f : add esp, 0x70 ; pop rbp ; ret
0x0000000000407f11 : add esp, 0x78 ; pop rbp ; ret
0x0000000000418ecc : add esp, 0x80 ; pop rbp ; ret
0x0000000000406159 : add esp, 0x90 ; pop rbp ; ret
0x0000000000405d73 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040eecf : add esp, 0xb0 ; pop rbp ; ret
0x000000000040e53b : add esp, 0xc0 ; pop rbp ; ret
0x00000000004179b4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000403ccf : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401aca : add rsp, 0x10 ; pop rbp ; ret
0x000000000041a32b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000418676 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004077aa : add rsp, 0x120 ; pop rbp ; ret
0x0000000000406c30 : add rsp, 0x150 ; pop rbp ; ret
0x000000000040dcbc : add rsp, 0x180 ; pop rbp ; ret
0x000000000041a49b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000408466 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041dff2 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041bd49 : add rsp, 0x2e0 ; pop rbp ; ret
0x000000000040eae7 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004058e8 : add rsp, 0x360 ; pop rbp ; ret
0x0000000000403c67 : add rsp, 0x390 ; pop rbp ; ret
0x000000000040e9c6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a7f : add rsp, 0x50 ; pop rbp ; ret
0x000000000040d622 : add rsp, 0x550 ; pop rbp ; ret
0x0000000000408255 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041885e : add rsp, 0x70 ; pop rbp ; ret
0x0000000000407f10 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000418ecb : add rsp, 0x80 ; pop rbp ; ret
0x0000000000406158 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405d72 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040eece : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040e53a : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004179b3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x000000000040339d : and ah, byte ptr [rdx] ; add dh, al ; add al, 0x25 ; ret 0x6222
0x00000000004033d4 : and ah, byte ptr [rdx] ; add esi, eax ; add al, 0x25 ; ret 0x6222
0x00000000004017a4 : and ah, byte ptr [rdx] ; jmp rax
0x00000000004017e4 : and ah, byte ptr [rdx] ; jmp rdx
0x0000000000407f31 : and ah, byte ptr [rdx] ; pop rbp ; ret
0x000000000041e0b0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420dac : and al, 8 ; add byte ptr [rax], al ; jle 0x420db9 ; jmp qword ptr [rdx]
0x0000000000401807 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004077ad : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040339b : and eax, 0x6222c1 ; add dh, al ; add al, 0x25 ; ret 0x6222
0x00000000004033d2 : and eax, 0x6222c1 ; add esi, eax ; add al, 0x25 ; ret 0x6222
0x0000000000407f2f : and eax, 0x6222e0 ; pop rbp ; ret
0x0000000000407f53 : and eax, 0x6222e8 ; pop rbp ; ret
0x0000000000408416 : call 0x11030566
0x0000000000405438 : call 0x34728
0x000000000041ba1f : call 0x4013b6
0x000000000041b9ec : call 0x401416
0x00000000004151d6 : call 0x401472
0x0000000000415290 : call 0x401552
0x0000000000405439 : call 0x401732
0x0000000000408378 : call 0x90304c8
0x00000000004083c7 : call 0xd030517
0x00000000004179f9 : call 0xffffffffe9040349
0x00000000004179f8 : call 0xffffffffe904034a
0x000000000041343d : call 0xfffffffff739b9d4
0x000000000041dab5 : call 0xffffffffff46608a
0x0000000000415f69 : call 0xffffffffff55e53b
0x0000000000415f68 : call 0xffffffffff55e53c
0x0000000000415f69 : call 0xffffffffff55e53d
0x0000000000415f68 : call 0xffffffffff55e53e
0x000000000041f1c9 : call qword ptr [r12 + rbx*8]
0x000000000040ac47 : call qword ptr [rax]
0x000000000040b6fb : call qword ptr [rbx - 0x3e]
0x000000000040b70a : call qword ptr [rcx]
0x000000000040bb25 : call qword ptr [rdi]
0x000000000040c3d1 : call qword ptr [rdx]
0x0000000000405127 : call qword ptr [rsi]
0x000000000041f1ca : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040bc46 : call rbx
0x0000000000404e0c : call rdx
0x000000000041a2e4 : call rsi
0x000000000041e85c : cdq ; ret
0x000000000041c902 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b1e0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x00000000004082b7 : clc ; mov dword ptr [rdi + 0x1c], 0 ; pop rbp ; ret
0x000000000040847e : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000403ce7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ceb : clc ; pop rbp ; ret
0x0000000000415bbd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000405776 : cli ; add byte ptr [r8 - 0x77], cl ; ret 0x7fe8
0x000000000041d0bd : cmp al, -0x2a ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000417e94 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041e35b : cwde ; js 0x41e305 ; ret
0x000000000041e3a2 : cwde ; js 0x41e34c ; ret
0x000000000041e3dc : cwde ; js 0x41e386 ; ret
0x000000000040e208 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x00000000004056a0 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403c34 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000415d62 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041606d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000417574 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040deb2 : dec dword ptr [rdi] ; test bh, ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040654a : dec dword ptr [rdi] ; test byte ptr [rbp + rax], ch ; add cl, ch ; ret 1
0x0000000000419023 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000407272 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000407a80 : dec dword ptr [rdi] ; test dl, dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004150a8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000405748 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041d86b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040580c : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407bec : enter 0x152d, 0xe ; ret 0x8955
0x0000000000407b56 : enter 0x602d, 0x77 ; ret 0x893f
0x0000000000407ba1 : enter 0x612d, 0x77 ; ret 0x893f
0x00000000004057e0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e3c1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004055c5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418ea9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004208f1 : fdiv st(6), st(0) ; call qword ptr [rsi]
0x000000000041abe4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041f1cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ac9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dcbb : hlt ; add rsp, 0x180 ; pop rbp ; ret
0x0000000000403c66 : hlt ; add rsp, 0x390 ; pop rbp ; ret
0x000000000041beac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408481 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x622280 ; jmp rax
0x000000000041997e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000405681 : imul edi, ecx, 0x41 ; add byte ptr [rax - 0x77], cl ; ret 0x73e8
0x0000000000415519 : in al, -0x7f ; ret 0xff9f
0x00000000004156ff : in al, -0x7f ; ret 0xffbf
0x00000000004157a5 : in al, -0x7f ; ret 0xffc5
0x00000000004157d3 : in al, -0x7f ; ret 0xffd5
0x00000000004158a1 : in al, -0x7f ; ret 0xffd8
0x0000000000415a37 : in al, -0x7f ; ret 0xffe0
0x000000000041c20a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040f5ca : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041ea5b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403760 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040375e : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416b8f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000415151 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040dc3f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040db42 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403089 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040aede : inc dword ptr [rdx] ; or dh, byte ptr [rdx] ; ret
0x0000000000418648 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040b6f5 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx - 0x3e]
0x000000000040ccc5 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; ljmp ptr [rcx] ; ret 0x76c1
0x0000000000411cef : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041532f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x0000000000420791 : ja 0x420793 ; call qword ptr [rsi]
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x622280 ; jmp rax
0x0000000000403ce6 : jge 0x403ce7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405437 : jge 0x405425 ; call 0x401734
0x000000000040847d : jge 0x40847f ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040e26f : jge 0x40e251 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040e2cb : jge 0x40e2ad ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004151d4 : jge 0x41517a ; call 0x401474
0x0000000000419498 : jge 0x4194af ; ret
0x0000000000419983 : jge 0x41999a ; ret
0x000000000041efc9 : jge 0x41efc3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000420c91 : jge 0x420c94 ; jmp qword ptr [rax]
0x0000000000405211 : jl 0x405219 ; add eax, ebp ; xlatb ; ret
0x000000000041936c : jl 0x419383 ; ret
0x0000000000420831 : jl 0x420833 ; call qword ptr [rsi]
0x0000000000420830 : jl 0x420834 ; call qword ptr [rsi]
0x0000000000420db1 : jle 0x420db4 ; jmp qword ptr [rdx]
0x0000000000420db0 : jle 0x420db5 ; jmp qword ptr [rdx]
0x000000000040151b : jmp 0x401377
0x0000000000401bc4 : jmp 0x401c80
0x0000000000403344 : jmp 0x403c77
0x000000000040340b : jmp 0x403c78
0x00000000004052e4 : jmp 0x4058f7
0x0000000000404da7 : jmp 0x4058f8
0x000000000040755f : jmp 0x4077ba
0x000000000040755e : jmp 0x4077bb
0x0000000000407c49 : jmp 0x407c54
0x0000000000414cdd : jmp 0x4179c3
0x0000000000415073 : jmp 0x4179c4
0x0000000000417771 : jmp 0x4179c5
0x000000000041997d : jmp 0x419ef5
0x000000000041e19b : jmp 0x41e1a6
0x000000000041ee0b : jmp 0x41ee16
0x000000000041c93e : jmp 0xffffffffb703cd0a
0x000000000041e35a : jmp 0xffffffffc3e65bfb
0x0000000000406734 : jmp qword ptr [rax]
0x0000000000403d70 : jmp qword ptr [rbx]
0x000000000040aea2 : jmp qword ptr [rcx]
0x00000000004072e7 : jmp qword ptr [rdi]
0x0000000000417e95 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000413446 : jmp qword ptr [rdx]
0x0000000000415eff : jmp qword ptr [rsi]
0x00000000004017a7 : jmp rax
0x000000000040c233 : jmp rbx
0x000000000040b0cb : jmp rcx
0x000000000041712e : jmp rdi
0x00000000004017e7 : jmp rdx
0x00000000004206d3 : jmp rsi
0x000000000040ad38 : jmp rsp
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000408480 : jne 0x40847b ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000418646 : jne 0x41864f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000420b71 : jnp 0x420b74 ; jmp qword ptr [rdx]
0x0000000000418861 : jo 0x4188c2 ; ret
0x0000000000418984 : jo 0x4189e5 ; ret
0x0000000000418abe : jo 0x418b1f ; ret
0x000000000041ac8c : jo 0x41aced ; ret
0x000000000041b1e4 : jo 0x41b245 ; ret
0x0000000000404da5 : js 0x404dd3 ; jmp 0x4058fa
0x0000000000407f13 : js 0x407f74 ; ret
0x00000000004179b6 : js 0x4179ca ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041e35c : js 0x41e304 ; ret
0x000000000041e3a3 : js 0x41e34b ; ret
0x000000000041e3dd : js 0x41e385 ; ret
0x000000000040c123 : lea edi, dword ptr [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0x000000000040ae6a : ljmp ptr [rbx] ; ret 0x50e1
0x000000000040cccb : ljmp ptr [rcx] ; ret 0x76c1
0x00000000004036df : loop 0x4036a8 ; mov dh, -0x76 ; adc al, 0x25 ; ret 0x6222
0x000000000040829b : loope 0x408271 ; ret
0x0000000000405654 : loopne 0x40565d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ea0b : loopne 0x40ea5b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ea0a : loopne 0x40ea5c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f98e : loopne 0x40f997 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a9d0 : loopne 0x41a9d9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041addc : loopne 0x41ae2c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041addb : loopne 0x41ae2d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041bd4c : loopne 0x41bd55 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420951 : loopne 0x420953 ; call rdx
0x0000000000401c70 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041da8a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040eed1 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b9ea : mov al, 0 ; call 0x401418
0x000000000040fb4b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041e0ad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e25d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ea59 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bb1f : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdi]
0x000000000040ce51 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rdx
0x000000000040c611 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040ad32 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsp
0x0000000000407f51 : mov byte ptr [0x6222e8], al ; pop rbp ; ret
0x0000000000417508 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401803 : mov byte ptr [rip + 0x220aae], 1 ; ret
0x0000000000406e2f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e0b3 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004036e1 : mov dh, -0x76 ; adc al, 0x25 ; ret 0x6222
0x000000000041eb85 : mov dl, -0x47 ; ret
0x0000000000407f2d : mov dword ptr [0x6222e0], edi ; pop rbp ; ret
0x000000000040f807 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f5cb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040f73f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040ea09 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c6e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041528a : mov dword ptr [rbp - 0xc48], ecx ; call 0x401558
0x0000000000401ac7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ce5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9bd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004082b8 : mov dword ptr [rdi + 0x1c], 0 ; pop rbp ; ret
0x0000000000408482 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040f4bf : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041ad1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408463 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e9c3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a9ff : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407f0d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000040e85c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041ae1e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a6f0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f80a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041adda : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f3b4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040f4bc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f5c5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406f51 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040f741 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041885b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041beaa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c900 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b1de : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ce9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cd3 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x000000000040f5c8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x622280 ; jmp rax
0x00000000004017e2 : mov edi, 0x622280 ; jmp rdx
0x0000000000405436 : mov edi, dword ptr [rbp - 0x18] ; call 0x401735
0x00000000004151d3 : mov edi, dword ptr [rbp - 0x60] ; call 0x401475
0x000000000040847c : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041f1c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040c3cb : mov edi, es ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000040bba5 : mov edi, es ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000040ad97 : mov edi, es ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x000000000041f1c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040847f : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x622280 ; jmp rdx
0x0000000000407f2c : mov qword ptr [0x6222e0], rdi ; pop rbp ; ret
0x0000000000403ce4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9bc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c6f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040bb1e : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdi]
0x000000000040ce50 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rdx
0x000000000040c610 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040ad31 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsp
0x000000000040c3ca : mov r15d, es ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000040bba4 : mov r15d, es ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000040ad96 : mov r15d, es ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x000000000041ad1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408462 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e9c2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a9fe : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407f0c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000040e85b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041ae1d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a6ef : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041add9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f3b3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040f4bb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f50 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000041885a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ce8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cd2 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000405435 : mov rdi, qword ptr [rbp - 0x18] ; call 0x401736
0x00000000004151d2 : mov rdi, qword ptr [rbp - 0x60] ; call 0x401476
0x00000000004017df : mov rsi, rax ; mov edi, 0x622280 ; jmp rdx
0x000000000041864a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041864b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000415d9c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041edfe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041997c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x419ef6
0x000000000041e35d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406e2e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e0b2 : movzx eax, al ; pop rbp ; ret
0x0000000000420790 : nop ; ja 0x420794 ; call qword ptr [rsi]
0x000000000041f1e8 : nop dword ptr [rax + rax] ; ret
0x0000000000401806 : or ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004179b7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040d5f2 : or al, 1 ; ret 0x5189
0x000000000040340d : or byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000406e0d : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040d5e0 : or byte ptr [rcx], al ; ret 0x5189
0x0000000000408eab : or dh, byte ptr [rdx] ; ret
0x0000000000419027 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000418a41 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e25f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e0af : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004047e9 : outsb dx, byte ptr [rsi] ; ret 0xf60b
0x000000000041f1dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f1de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000417ce2 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f1e0 : pop r14 ; pop r15 ; ret
0x0000000000417ce4 : pop r15 ; pop rbp ; ret
0x000000000041f1e2 : pop r15 ; ret
0x000000000041e8d8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x220aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x622280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x622280 ; jmp rdx
0x000000000041f1db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f1df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x0000000000417ce1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004179ba : pop rbx ; pop rbp ; ret
0x000000000041eb84 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000407331 : pop rdi ; jmp qword ptr [rdi]
0x0000000000417ce5 : pop rdi ; pop rbp ; ret
0x000000000041f1e3 : pop rdi ; ret
0x000000000041efcb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004072de : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5e2dac45], cl ; jmp qword ptr [rdi]
0x00000000004072e6 : pop rsi ; jmp qword ptr [rdi]
0x0000000000417ce3 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041f1e1 : pop rsi ; pop r15 ; ret
0x000000000040697e : pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000041f1dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411bf2 : pop rsp ; ret
0x000000000041e999 : popfq ; ret 0xd284
0x000000000040a041 : push 0x2dffffff ; push rbx ; ret 0xef1e
0x0000000000409fed : push 0x2dffffff ; push rdx ; ret 0xef1e
0x0000000000408949 : push 0x2dffffff ; ret
0x000000000040a661 : push 0x2dffffff ; ret 0x2620
0x000000000040a859 : push 0x2dffffff ; ret 0x8a39
0x00000000004088f5 : push 0x2dffffff ; ret 0xa860
0x0000000000409ae5 : push 0x2dffffff ; xchg eax, ebp ; ret
0x000000000040a3dd : push 0x2dffffff ; xchg eax, esi ; ret
0x00000000004173df : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000040c3d7 : push rax ; adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x0000000000401a82 : push rax ; pop rbp ; ret
0x000000000041a2db : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000408415 : push rbp ; call 0x11030567
0x0000000000408377 : push rbp ; call 0x90304c9
0x00000000004083c6 : push rbp ; call 0xd030518
0x000000000041abe3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415518 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004156fe : push rbp ; in al, -0x7f ; ret 0xffbf
0x00000000004157a4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004157d2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x00000000004158a0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000415a36 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401824 : push rbp ; mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x000000000040e20b : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000040a046 : push rbx ; ret 0xef1e
0x000000000040d606 : push rcx ; adc byte ptr [rcx], al ; ret 0x5189
0x000000000040d5cd : push rcx ; add al, 1 ; ret 0x5189
0x000000000040d5f1 : push rcx ; or al, 1 ; ret 0x5189
0x000000000040d5df : push rcx ; or byte ptr [rcx], al ; ret 0x5189
0x0000000000409ff2 : push rdx ; ret 0xef1e
0x000000000041dcf3 : pushfq ; ret 0x8445
0x00000000004037b1 : pushfq ; ret 0xd284
0x0000000000401361 : ret
0x000000000040dbff : ret 0
0x0000000000408419 : ret 0x10
0x000000000040d5bf : ret 0x1189
0x000000000040e20f : ret 0x20
0x000000000041ea8b : ret 0x2030
0x0000000000401722 : ret 0x220a
0x0000000000401522 : ret 0x220b
0x0000000000408698 : ret 0x22e8
0x000000000040a666 : ret 0x2620
0x0000000000414ef7 : ret 0x2a
0x0000000000418216 : ret 0x2c1
0x00000000004092fa : ret 0x33
0x000000000040e492 : ret 0x40
0x00000000004056fb : ret 0x41f9
0x0000000000406f33 : ret 0x4240
0x0000000000411e5a : ret 0x43fa
0x0000000000409637 : ret 0x50e1
0x000000000040d5d0 : ret 0x5189
0x0000000000403e49 : ret 0x5836
0x000000000041c053 : ret 0x5e5
0x00000000004033a4 : ret 0x6222
0x0000000000405687 : ret 0x73e8
0x0000000000409397 : ret 0x76c1
0x000000000040577b : ret 0x7fe8
0x0000000000406985 : ret 0x8041
0x000000000040308d : ret 0x8445
0x0000000000412c09 : ret 0x8589
0x0000000000411cf0 : ret 0x891a
0x000000000041e43c : ret 0x8934
0x0000000000407b5a : ret 0x893f
0x000000000040e2ff : ret 0x8948
0x0000000000407bf0 : ret 0x8955
0x000000000041c941 : ret 0x89b6
0x000000000040a85e : ret 0x8a39
0x000000000041e418 : ret 0x8b34
0x00000000004077e5 : ret 0x8b3f
0x0000000000405048 : ret 0x8b48
0x000000000041b62b : ret 0xa4be
0x00000000004088fa : ret 0xa860
0x0000000000415bc5 : ret 0xa9b9
0x0000000000416b70 : ret 0xaae8
0x0000000000411642 : ret 0xade6
0x000000000040353c : ret 0xb0
0x0000000000415330 : ret 0xb91a
0x0000000000407db9 : ret 0xb955
0x000000000041cbfb : ret 0xb9b6
0x00000000004083ca : ret 0xc
0x00000000004017c5 : ret 0xc148
0x0000000000403516 : ret 0xd284
0x00000000004173e3 : ret 0xd4e9
0x0000000000403d58 : ret 0xe280
0x0000000000407eb3 : ret 0xe93f
0x00000000004179fc : ret 0xee8
0x0000000000409ff3 : ret 0xef1e
0x0000000000415da5 : ret 0xf41
0x00000000004047ea : ret 0xf60b
0x0000000000405701 : ret 0xf9e8
0x000000000041551b : ret 0xff9f
0x0000000000416ebe : ret 0xffa5
0x0000000000415701 : ret 0xffbf
0x000000000041616b : ret 0xffc4
0x00000000004157a7 : ret 0xffc5
0x00000000004157d5 : ret 0xffd5
0x00000000004158a3 : ret 0xffd8
0x0000000000416211 : ret 0xffd9
0x00000000004036ca : ret 0xffdf
0x0000000000415a39 : ret 0xffe0
0x0000000000414b0e : ret 0xfffa
0x0000000000405d7c : ret 0xfffb
0x00000000004151d8 : ret 0xfffe
0x000000000040543b : ret 0xffff
0x000000000040380c : ret 1
0x0000000000416070 : ret 2
0x00000000004174f7 : ret 4
0x00000000004036aa : ret 5
0x000000000040837b : ret 8
0x000000000040edaa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041d9e4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041dff5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f5c6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x0000000000406e30 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004077a9 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e20c : ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000040f5c7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000041abe0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040511e : sahf ; ret
0x000000000040ed84 : sahf ; ret 0xd284
0x0000000000407a83 : salc ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041d0be : salc ; ret
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000418679 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040bc3e : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000041a7c3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415bbe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000405775 : sbb edi, edx ; add byte ptr [r8 - 0x77], cl ; ret 0x7fe8
0x0000000000401bc5 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000401805 : scasb al, byte ptr [rdi] ; or ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004075ea : shr ecx, 1 ; ret
0x00000000004056f4 : stc ; add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret 0x41f9
0x0000000000405682 : stc ; add byte ptr [r8 - 0x77], cl ; ret 0x73e8
0x00000000004056fc : stc ; add byte ptr [r8 - 0x77], cl ; ret 0xf9e8
0x000000000040697d : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040c22a : std ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000040deb5 : std ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000412c07 : sub al, 0x38 ; ret 0x8589
0x0000000000415bc3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000403ccd : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000041f21d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041f21c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041a2fb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041de38 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041885d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041a1d8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040cb2d : test al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000040b0c5 : test al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040bfd5 : test al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdx
0x000000000040deb4 : test bh, ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041f1ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040654c : test byte ptr [rbp + rax], ch ; add cl, ch ; ret 1
0x0000000000419025 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000407274 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000407a82 : test dl, dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040b6f7 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx - 0x3e]
0x000000000040b706 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x000000000040bb21 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdi]
0x000000000040c3cd : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000040bba7 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000040ad99 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x000000000040bc42 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000040ce53 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rdx
0x000000000040aeda : test dword ptr [rdi + rdi*8 - 1], ebp ; inc dword ptr [rdx] ; or dh, byte ptr [rdx] ; ret
0x000000000040d524 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x000000000040c22f : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000040b0c7 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040bfd7 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdx
0x000000000040ad34 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsp
0x000000000040ae66 : test dword ptr [rdi + rdi*8 - 1], ebp ; ljmp ptr [rbx] ; ret 0x50e1
0x000000000040ccc7 : test dword ptr [rdi + rdi*8 - 1], ebp ; ljmp ptr [rcx] ; ret 0x76c1
0x000000000041a2e0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041a048 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000040cb2c : test r8b, r15b ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000040b0c4 : test r8b, r15b ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040bfd4 : test r8b, r15b ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rdx
0x000000000040340a : wait ; jmp 0x403c79
0x0000000000409aea : xchg eax, ebp ; ret
0x000000000040308c : xchg eax, ebp ; ret 0x8445
0x0000000000403515 : xchg eax, ebp ; ret 0xd284
0x0000000000406c04 : xchg eax, ebp ; ret 0xe280
0x00000000004151d7 : xchg eax, ebp ; ret 0xfffe
0x0000000000401e98 : xchg eax, ebx ; ret
0x000000000040e276 : xchg eax, ebx ; ret 0xd284
0x0000000000412beb : xchg eax, ecx ; ret
0x000000000040dc45 : xchg eax, edi ; ret 0xd284
0x00000000004056f3 : xchg eax, edi ; stc ; add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret 0x41f9
0x0000000000412d3b : xchg eax, edx ; ret
0x0000000000406999 : xchg eax, edx ; ret 0x8445
0x000000000041a1de : xchg eax, edx ; ret 0xd284
0x000000000040a3e2 : xchg eax, esi ; ret
0x0000000000403343 : xchg eax, esp ; jmp 0x403c78
0x0000000000401eec : xchg eax, esp ; ret
0x0000000000406984 : xchg eax, esp ; ret 0x8041
0x000000000040db0e : xchg eax, esp ; ret 0x8445
0x00000000004055cb : xchg eax, esp ; ret 0xd284
0x0000000000403d57 : xchg eax, esp ; ret 0xe280
0x0000000000403342 : xchg eax, r12d ; jmp 0x403c79
0x0000000000405215 : xlatb ; ret
0x000000000040567f : xor al, 0x25 ; imul edi, ecx, 0x41 ; add byte ptr [rax - 0x77], cl ; ret 0x73e8
0x0000000000401bcb : xor al, 0x25 ; ret
0x00000000004056f9 : xor al, 0x25 ; ret 0x41f9
0x0000000000405773 : xor al, 0x25 ; sbb edi, edx ; add byte ptr [r8 - 0x77], cl ; ret 0x7fe8
0x0000000000420c90 : xor byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x0000000000418b77 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f73d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
