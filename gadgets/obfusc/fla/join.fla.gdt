0x000000000040991c : adc al, -0x33 ; sal byte ptr [rbx], 0x62 ; add byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000421b01 : adc al, byte ptr [rax] ; add al, dh ; fcos ; call rax
0x0000000000418c5b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421ac1 : adc dword ptr [rax], eax ; add byte ptr [rax], dh ; mov ah, -1 ; call rax
0x0000000000421b41 : adc eax, dword ptr [rax] ; add al, dl ; loope 0x421b4c ; call rax
0x0000000000416609 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421781 : add al, 0 ; add al, ah ; add edi, esi ; call rax
0x0000000000404bc0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405520 : add al, 0 ; add cl, ch ; ret 1
0x0000000000421783 : add al, ah ; add edi, esi ; call rax
0x00000000004218e3 : add al, ah ; ret
0x00000000004218db : add al, ah ; ret 0xfffe
0x0000000000422137 : add al, bh ; mov cl, -2 ; call qword ptr [rcx]
0x0000000000421e57 : add al, bl ; jge 0x421e5d ; call qword ptr [rsi]
0x0000000000422a17 : add al, bl ; ret
0x0000000000421e55 : add al, byte ptr [rax] ; add al, bl ; jge 0x421e5f ; call qword ptr [rsi]
0x0000000000421e15 : add al, byte ptr [rax] ; add al, cl ; jnp 0x421e1f ; call qword ptr [rbx]
0x0000000000418553 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405402 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x592da845], cl ; lahf ; ret 0x89d1
0x000000000040a14e : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000421e17 : add al, cl ; jnp 0x421e1d ; call qword ptr [rbx]
0x0000000000421b03 : add al, dh ; fcos ; call rax
0x0000000000421813 : add al, dh ; test bh, dh ; call qword ptr [rax]
0x0000000000421a43 : add al, dl ; jnp 0x421a4a ; call rax
0x0000000000421b43 : add al, dl ; loope 0x421b4a ; call rax
0x000000000041894e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004186b6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004204cf : add bl, dh ; ret
0x0000000000403f9a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000409921 : add byte ptr [rax - 0x7f], cl ; ret 1
0x000000000041894c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004186b4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004204cd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403f98 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004204cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a45f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000403f1d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407eb7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004204cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b0cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x32dd045], cl ; jmp qword ptr [rdi]
0x000000000041634e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404c16 : add byte ptr [rax], al ; add byte ptr [rbx + 0x592df045], cl ; ret
0x0000000000405444 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5a2da845], cl ; lahf ; ret 0x89d1
0x0000000000404c6e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5a2df045], cl ; ret
0x000000000041fbb9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041fb35 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000419673 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004219d2 : add byte ptr [rax], al ; add byte ptr [rbx - 1], bl ; call qword ptr [rax]
0x000000000040abe6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; lahf ; ret 0x8445
0x0000000000407498 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000407675 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403dfc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000415201 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000407537 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041fc75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004046f6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ca40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e25d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403e24 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e46d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000404cc7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040e23f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403eb9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404124 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000422a11 : add byte ptr [rax], al ; add byte ptr [rsi + rcx], al ; add al, bl ; ret
0x000000000041f47d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000421e12 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add al, cl ; jnp 0x421e22 ; call qword ptr [rbx]
0x000000000040cdd0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416070 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409ae6 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d5b : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040530b : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040141b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004220f2 : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; call 0x24421fb2
0x0000000000422576 : add byte ptr [rax], al ; call 0x234224ce
0x00000000004220f6 : add byte ptr [rax], al ; call 0x24421fae
0x000000000041c61d : add byte ptr [rax], al ; call 0x401478
0x0000000000422136 : add byte ptr [rax], al ; clc ; mov cl, -2 ; call qword ptr [rcx]
0x0000000000421b12 : add byte ptr [rax], al ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000421e56 : add byte ptr [rax], al ; fdivr dword ptr [rbp - 2] ; call qword ptr [rsi]
0x0000000000422456 : add byte ptr [rax], al ; fmul dword ptr [rbx - 1] ; jmp qword ptr [rax]
0x0000000000421a12 : add byte ptr [rax], al ; je 0x421a1b ; call qword ptr [rax]
0x0000000000421a52 : add byte ptr [rax], al ; jl 0x421a5b ; call qword ptr [rax]
0x0000000000401459 : add byte ptr [rax], al ; jmp 0x401439
0x0000000000404cb1 : add byte ptr [rax], al ; jmp 0x404d6c
0x000000000041f479 : add byte ptr [rax], al ; jmp 0x41f488
0x00000000004200e9 : add byte ptr [rax], al ; jmp 0x4200f8
0x000000000041b9f7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004202f7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c519 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040db29 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000422336 : add byte ptr [rax], al ; or byte ptr [rdx - 1], cl ; jmp qword ptr [rdx]
0x00000000004059f2 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041634f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404bc1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421a02 : add byte ptr [rax], al ; push rax ; jb 0x421a0b ; call rax
0x0000000000421b52 : add byte ptr [rax], al ; push rax ; jrcxz 0x421b5b ; call qword ptr [rax]
0x00000000004204ce : add byte ptr [rax], al ; ret
0x0000000000421a42 : add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; call rax
0x0000000000422452 : add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; fmul dword ptr [rbx - 1] ; jmp qword ptr [rax]
0x0000000000421e52 : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; fdivr dword ptr [rbp - 2] ; call qword ptr [rsi]
0x00000000004229f7 : add byte ptr [rax], cl ; ret 0xffff
0x0000000000421ac3 : add byte ptr [rax], dh ; mov ah, -1 ; call rax
0x0000000000422133 : add byte ptr [rbp + rax], ah ; add al, bh ; mov cl, -2 ; call qword ptr [rcx]
0x000000000040d3ef : add byte ptr [rbx + 0x242db045], cl ; push rdx ; push rbp ; ret
0x000000000040b0cf : add byte ptr [rbx + 0x32dd045], cl ; jmp qword ptr [rdi]
0x0000000000416350 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405404 : add byte ptr [rbx + 0x592da845], cl ; lahf ; ret 0x89d1
0x0000000000404c18 : add byte ptr [rbx + 0x592df045], cl ; ret
0x0000000000405446 : add byte ptr [rbx + 0x5a2da845], cl ; lahf ; ret 0x89d1
0x0000000000404c70 : add byte ptr [rbx + 0x5a2df045], cl ; ret
0x0000000000404bc2 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404a78 : add byte ptr [rbx - 0x4bb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041fbbb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041fb37 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000419675 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004098d9 : add byte ptr [rbx - 0xb74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004219d4 : add byte ptr [rbx - 1], bl ; call qword ptr [rax]
0x000000000040abe8 : add byte ptr [rcx + 0xf], al ; lahf ; ret 0x8445
0x000000000040749a : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000407677 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403dfe : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000415203 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040aafb : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004059f0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004018e8 : add byte ptr [rcx], al ; ret
0x0000000000407539 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041fc77 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004046f8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ca42 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e25f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403e26 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e46f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000404cc9 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040e241 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403ebb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404126 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000421e13 : add byte ptr [rdx + rax], al ; add al, cl ; jnp 0x421e21 ; call qword ptr [rbx]
0x0000000000407a39 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a388 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422a13 : add byte ptr [rsi + rcx], al ; add al, bl ; ret
0x0000000000417699 : add cl, ch ; ret
0x000000000041f47f : add cl, ch ; ret 0
0x0000000000405522 : add cl, ch ; ret 1
0x00000000004165c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416cea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004089f6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cd66 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f391 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004018e4 : add eax, 0x221a2e ; add ebx, esi ; ret
0x000000000041b9f5 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000041b2df : add eax, 0xb6b80000 ; ret 0x979f
0x00000000004018ab : add eax, edx ; sar rax, 1 ; jne 0x4018bc ; pop rbp ; ret
0x00000000004018e9 : add ebx, esi ; ret
0x0000000000421785 : add edi, esi ; call rax
0x0000000000401b7b : add esp, 0x10 ; pop rbp ; ret
0x00000000004059ee : add esp, 0x100 ; pop rbp ; ret
0x0000000000416ce7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040892f : add esp, 0x120 ; pop rbp ; ret
0x000000000040a756 : add esp, 0x170 ; pop rbp ; ret
0x000000000040949f : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040c6cd : add esp, 0x20 ; pop rbp ; ret
0x000000000041ebf3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041c94a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000409ae9 : add esp, 0x30 ; pop rbp ; ret
0x000000000041b8c5 : add esp, 0x380 ; pop rbp ; ret
0x0000000000404d5e : add esp, 0x40 ; pop rbp ; ret
0x0000000000407e82 : add esp, 0x410 ; pop rbp ; ret
0x0000000000404bbd : add esp, 0x4c8 ; pop rbx ; pop rbp ; ret
0x0000000000401b2f : add esp, 0x50 ; pop rbp ; ret
0x000000000040c206 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405189 : add esp, 0x70 ; pop rbp ; ret
0x000000000040beb7 : add esp, 0x80 ; pop rbp ; ret
0x00000000004081cc : add esp, 0x90 ; pop rbp ; ret
0x000000000040bb3f : add esp, 0xa0 ; pop rbp ; ret
0x000000000040cb8f : add esp, 0xb0 ; pop rbp ; ret
0x00000000004099cc : add esp, 0xc0 ; pop rbp ; ret
0x0000000000416024 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040d2f6 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040b73b : add esp, 0xe0 ; pop rbp ; ret
0x000000000040141e : add esp, 8 ; ret
0x0000000000421e14 : add r8b, byte ptr [rax] ; add al, cl ; jnp 0x421e20 ; call qword ptr [rbx]
0x00000000004018aa : add rax, rdx ; sar rax, 1 ; jne 0x4018bd ; pop rbp ; ret
0x0000000000401b7a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004059ed : add rsp, 0x100 ; pop rbp ; ret
0x0000000000416ce6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040892e : add rsp, 0x120 ; pop rbp ; ret
0x000000000040a755 : add rsp, 0x170 ; pop rbp ; ret
0x000000000040949e : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040c6cc : add rsp, 0x20 ; pop rbp ; ret
0x000000000041ebf2 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041c949 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000409ae8 : add rsp, 0x30 ; pop rbp ; ret
0x000000000041b8c4 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000404d5d : add rsp, 0x40 ; pop rbp ; ret
0x0000000000407e81 : add rsp, 0x410 ; pop rbp ; ret
0x0000000000404bbc : add rsp, 0x4c8 ; pop rbx ; pop rbp ; ret
0x0000000000401b2e : add rsp, 0x50 ; pop rbp ; ret
0x000000000040c205 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405188 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040beb6 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004081cb : add rsp, 0x90 ; pop rbp ; ret
0x000000000040bb3e : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040cb8e : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004099cb : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000416023 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040d2f5 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040b73a : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040141d : add rsp, 8 ; ret
0x000000000040d3f4 : and al, 0x52 ; push rbp ; ret
0x000000000041f390 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004220f4 : and al, 5 ; add byte ptr [rax], al ; call 0x24421fb0
0x00000000004018e7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000408931 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bedf : and eax, 0x6233e8 ; pop rbp ; ret
0x000000000040bf03 : and eax, 0x6233f0 ; pop rbp ; ret
0x0000000000422578 : call 0x234224cc
0x00000000004220f8 : call 0x24421fac
0x000000000041c61f : call 0x401476
0x000000000041c5ec : call 0x4014e6
0x0000000000401a8d : call 0x401649
0x00000000004155c2 : call 0x401802
0x0000000000416069 : call 0xffffffffe903e9b9
0x0000000000416068 : call 0xffffffffe903e9ba
0x0000000000411aad : call 0xfffffffff739a044
0x000000000041e6b5 : call 0xffffffffff466c8a
0x00000000004145d9 : call 0xffffffffff55cbab
0x00000000004145d8 : call 0xffffffffff55cbac
0x00000000004145d9 : call 0xffffffffff55cbad
0x00000000004145d8 : call 0xffffffffff55cbae
0x00000000004204a9 : call qword ptr [r12 + rbx*8]
0x0000000000413966 : call qword ptr [rax]
0x0000000000421e1b : call qword ptr [rbx]
0x00000000004155f5 : call qword ptr [rcx]
0x0000000000413593 : call qword ptr [rdx]
0x000000000041352f : call qword ptr [rsi]
0x00000000004204aa : call qword ptr [rsp + rbx*8]
0x000000000040190d : call rax
0x0000000000411d4a : call rbx
0x0000000000405a7c : call rdi
0x000000000042205b : call rdx
0x0000000000418954 : call rsi
0x00000000004051b7 : call rsp
0x000000000041fb3c : cdq ; ret
0x000000000041d502 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041bde0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f13d : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004018af : clc ; jne 0x4018b8 ; pop rbp ; ret
0x000000000040af06 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000422138 : clc ; mov cl, -2 ; call qword ptr [rcx]
0x000000000040d532 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041422d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041dcbd : cmp al, -0x2a ; ret
0x0000000000401a94 : cmp al, 0x25 ; ret
0x0000000000419705 : cmp dh, -1 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040186d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401880 ; pop rbp ; ret
0x0000000000416504 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041f63b : cwde ; js 0x41f5e5 ; ret
0x000000000041f682 : cwde ; js 0x41f62c ; ret
0x000000000041f6bc : cwde ; js 0x41f666 ; ret
0x0000000000401a91 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000040ad64 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404a7e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004143d2 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004146dd : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000415be4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040a14a : dec dword ptr [rdi] ; test bh, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040b38d : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000417693 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004047a6 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000409817 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e46b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040a609 : enter 0x3b48, 0x45 ; fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000404bbf : enter 4, 0 ; pop rbx ; pop rbp ; ret
0x000000000040a60c : fadd dword ptr [r9 + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000040d78d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cf74 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a60d : fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x00000000004050f5 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405096 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417519 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000421b05 : fcos ; call rax
0x0000000000421b15 : fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000421e58 : fdivr dword ptr [rbp - 2] ; call qword ptr [rsi]
0x0000000000404e95 : fmul dword ptr [r8 - 0x77] ; ret 0xb0
0x0000000000419254 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000404e96 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000422458 : fmul dword ptr [rbx - 1] ; jmp qword ptr [rax]
0x00000000004204ac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401b79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041caac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401880 : hlt ; pop rbp ; mov edi, 0x6232a8 ; jmp rax
0x0000000000417fee : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000413b89 : in al, -0x7f ; ret 0xff9f
0x0000000000413d6f : in al, -0x7f ; ret 0xffbf
0x0000000000413e15 : in al, -0x7f ; ret 0xffc5
0x0000000000413e43 : in al, -0x7f ; ret 0xffd5
0x0000000000413f11 : in al, -0x7f ; ret 0xffd8
0x00000000004140a7 : in al, -0x7f ; ret 0xffe0
0x000000000041bacf : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041f2cd : in al, dx ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041ce0a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040dc3a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041b9fb : in al, dx ; pop rbp ; ret
0x000000000041fd3b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004151ff : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004093db : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409166 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404afa : inc dword ptr [rbp - 0x31] ; pop rdi ; mov gs, ecx ; ret 0
0x00000000004038a5 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000416cb8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041035f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041399f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401873 : ja 0x40187a ; pop rbp ; ret
0x0000000000401419 : jae 0x401425 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000421a05 : jb 0x421a08 ; call rax
0x0000000000405788 : jbe 0x405747 ; pop rdx ; lahf ; ret 0x8bd1
0x000000000040187f : je 0x40187d ; pop rbp ; mov edi, 0x6232a8 ; jmp rax
0x0000000000421a15 : je 0x421a18 ; call qword ptr [rax]
0x0000000000421a14 : je 0x421a19 ; call qword ptr [rax]
0x0000000000421a85 : jg 0x421a88 ; call rax
0x0000000000417b08 : jge 0x417b1f ; ret
0x0000000000417ff3 : jge 0x41800a ; ret
0x00000000004202a9 : jge 0x4202a3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000421e59 : jge 0x421e5b ; call qword ptr [rsi]
0x00000000004179dc : jl 0x4179f3 ; ret
0x0000000000421a55 : jl 0x421a58 ; call qword ptr [rax]
0x0000000000421a54 : jl 0x421a59 ; call qword ptr [rax]
0x00000000004048c6 : jle 0x404883 ; ret 0xa9e
0x000000000040145b : jmp 0x401437
0x0000000000404cb3 : jmp 0x404d6a
0x00000000004052e6 : jmp 0x405319
0x0000000000407213 : jmp 0x407e90
0x000000000040b1e9 : jmp 0x40b265
0x000000000041334d : jmp 0x416033
0x0000000000415de1 : jmp 0x416035
0x0000000000417fed : jmp 0x418565
0x000000000041f47b : jmp 0x41f486
0x00000000004200eb : jmp 0x4200f6
0x000000000041d53e : jmp 0xffffffffb703d90a
0x000000000041f63a : jmp 0xffffffffc3e66edb
0x0000000000407b85 : jmp qword ptr [rax]
0x00000000004145df : jmp qword ptr [rbx]
0x0000000000415fb0 : jmp qword ptr [rcx]
0x000000000040af46 : jmp qword ptr [rdi]
0x0000000000416505 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000411ab6 : jmp qword ptr [rdx]
0x000000000041456f : jmp qword ptr [rsi]
0x0000000000401887 : jmp rax
0x0000000000407926 : jmp rbx
0x00000000004070e7 : jmp rdi
0x00000000004018c7 : jmp rdx
0x0000000000415199 : jmp rsp
0x00000000004018b0 : jne 0x4018b7 ; pop rbp ; ret
0x0000000000416cb6 : jne 0x416cbf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000421a45 : jnp 0x421a48 ; call rax
0x0000000000421e19 : jnp 0x421e1b ; call qword ptr [rbx]
0x000000000040518b : jo 0x4051ec ; ret
0x000000000040a758 : jo 0x40a760 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416ed1 : jo 0x416f32 ; ret
0x0000000000416ff4 : jo 0x417055 ; ret
0x000000000041712e : jo 0x41718f ; ret
0x00000000004192fc : jo 0x41935d ; ret
0x000000000041bde4 : jo 0x41be45 ; ret
0x000000000041ede5 : jo 0x41ee46 ; ret
0x000000000041f2d1 : jo 0x41f332 ; ret
0x0000000000421b55 : jrcxz 0x421b58 ; call qword ptr [rax]
0x0000000000416026 : js 0x41603a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041f63c : js 0x41f5e4 ; ret
0x000000000041f683 : js 0x41f62b ; ret
0x000000000041f6bd : js 0x41f665 ; ret
0x000000000040abeb : lahf ; ret 0x8445
0x000000000040540a : lahf ; ret 0x89d1
0x000000000040578b : lahf ; ret 0x8bd1
0x000000000040753b : lahf ; ret 0xd284
0x0000000000421b45 : loope 0x421b48 ; call rax
0x0000000000405117 : loopne 0x405120 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b73d : loopne 0x40b744 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c6cb : loopne 0x40c71b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c6ca : loopne 0x40c71c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040dffe : loopne 0x40e007 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419040 : loopne 0x419049 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041944c : loopne 0x41949c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041944b : loopne 0x41949d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041c94c : loopne 0x41c955 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421ac5 : mov ah, -1 ; call rax
0x0000000000401d20 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000421895 : mov al, -2 ; call qword ptr [rax]
0x000000000040880d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040cb91 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c5ea : mov al, 0 ; call 0x4014e8
0x000000000040d3f2 : mov al, 0x2d ; and al, 0x52 ; push rbp ; ret
0x000000000040e1bb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000421a00 : mov al, 0xe ; add byte ptr [rax], al ; push rax ; jb 0x421a0d ; call rax
0x0000000000421a40 : mov al, 0xf ; add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; call rax
0x000000000041f38d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f53d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fd39 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bf01 : mov byte ptr [0x6233f0], al ; pop rbp ; ret
0x0000000000415b78 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040af07 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004018e3 : mov byte ptr [rip + 0x221a2e], 1 ; ret
0x0000000000422139 : mov cl, -2 ; call qword ptr [rcx]
0x00000000004089f8 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cd68 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f393 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041fe65 : mov dl, -0x47 ; ret
0x000000000040bedd : mov dword ptr [0x6233e8], edi ; pop rbp ; ret
0x000000000040aef0 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040de77 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040dc3b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ddaf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040c6c9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d1e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e02d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404eb6 : mov dword ptr [rcx], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407eb4 : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x0000000000409c3d : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000040db2f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409c88 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c683 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041906f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c51c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041bacd : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041f2cb : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041b9f9 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041948e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418d60 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405185 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040de7a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041944a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040da24 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040db2c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000419631 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dc35 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041eddf : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ddb1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000416ecb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041caaa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d500 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041bdde : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004155bd : mov ebp, 0xffffff34 ; call 0x401807
0x000000000040190b : mov ebp, esp ; call rax
0x0000000000401871 : mov ebp, esp ; ja 0x40187c ; pop rbp ; ret
0x000000000040dc38 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401905 : mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x0000000000401882 : mov edi, 0x6232a8 ; jmp rax
0x00000000004018c2 : mov edi, 0x6232a8 ; jmp rdx
0x00000000004155bc : mov edi, dword ptr [rbp - 0xcc] ; call 0x401808
0x00000000004204a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004204a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004018c0 : mov esi, eax ; mov edi, 0x6232a8 ; jmp rdx
0x0000000000404afe : mov gs, ecx ; ret 0
0x000000000040bedc : mov qword ptr [0x6233e8], rdi ; pop rbp ; ret
0x000000000040aeef : mov qword ptr [rax + 0x18], rcx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e02c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404eb5 : mov qword ptr [rcx], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407eb3 : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x0000000000409c3c : mov qword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x0000000000401d1f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d3f1 : mov r8b, 0x2d ; and al, 0x52 ; push rbp ; ret
0x0000000000409c87 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c682 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041906e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c51b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041948d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418d5f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405184 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000419449 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040da23 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040db2b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416eca : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040190a : mov rbp, rsp ; call rax
0x0000000000401870 : mov rbp, rsp ; ja 0x40187d ; pop rbp ; ret
0x00000000004018bf : mov rsi, rax ; mov edi, 0x6232a8 ; jmp rdx
0x0000000000416cba : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000416cbb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000407496 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000407535 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004046f4 : mov word ptr [rdx], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041440c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004200de : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004218d4 : movabs al, byte ptr [0xe000000a10fffec1] ; ret 0xfffe
0x0000000000408b3c : movabs eax, dword ptr [0x840fffffff1c8589] ; ret 8
0x000000000040949d : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000417fec : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x418566
0x000000000041f63d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004089f7 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cd67 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f392 : movzx eax, al ; pop rbp ; ret
0x000000000040af0a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004204c8 : nop dword ptr [rax + rax] ; ret
0x0000000000416027 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004218e1 : or al, byte ptr [rax] ; add al, ah ; ret
0x00000000004218d9 : or al, byte ptr [rax] ; add al, ah ; ret 0xfffe
0x0000000000404120 : or byte ptr [rcx + 0x32f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040cb22 : or byte ptr [rcx + 0x7d8bc84d], cl ; shr al, 1 ; ret 0xff4a
0x0000000000422338 : or byte ptr [rdx - 1], cl ; jmp qword ptr [rdx]
0x0000000000417697 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004170b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052e3 : or esi, edx ; xchg eax, ecx ; jmp 0x40531c
0x000000000041f53f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f38f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004204bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004204be : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000416352 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004204c0 : pop r14 ; pop r15 ; ret
0x0000000000416354 : pop r15 ; pop rbp ; ret
0x00000000004204c2 : pop r15 ; ret
0x000000000041fbb8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004018e2 : pop rbp ; mov byte ptr [rip + 0x221a2e], 1 ; ret
0x0000000000401881 : pop rbp ; mov edi, 0x6232a8 ; jmp rax
0x00000000004018be : pop rbp ; mov rsi, rax ; mov edi, 0x6232a8 ; jmp rdx
0x00000000004204bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004204bf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401875 : pop rbp ; ret
0x0000000000416351 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404bc3 : pop rbx ; pop rbp ; ret
0x0000000000405409 : pop rcx ; lahf ; ret 0x89d1
0x000000000041fe64 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000404c1d : pop rcx ; ret
0x00000000004048c5 : pop rdi ; jle 0x404884 ; ret 0xa9e
0x0000000000404afd : pop rdi ; mov gs, ecx ; ret 0
0x0000000000416355 : pop rdi ; pop rbp ; ret
0x00000000004204c3 : pop rdi ; ret
0x00000000004202ab : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040544b : pop rdx ; lahf ; ret 0x89d1
0x000000000040578a : pop rdx ; lahf ; ret 0x8bd1
0x0000000000404c75 : pop rdx ; ret
0x000000000040551f : pop rsi ; add al, 0 ; add cl, ch ; ret 1
0x0000000000416353 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004204c1 : pop rsi ; pop r15 ; ret
0x00000000004204bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410262 : pop rsp ; ret
0x000000000041fc79 : popfq ; ret 0xd284
0x0000000000421abf : push qword ptr [rax + 0x30000011] ; mov ah, -1 ; call rax
0x00000000004219ff : push qword ptr [rax + 0x5000000e] ; jb 0x421a0e ; call rax
0x000000000042177f : push qword ptr [rax - 0x1ffffffc] ; add edi, esi ; call rax
0x0000000000421b3f : push qword ptr [rax - 0x2fffffed] ; loope 0x421b4e ; call rax
0x0000000000421a3f : push qword ptr [rax - 0x2ffffff1] ; jnp 0x421a4e ; call rax
0x0000000000421a7f : push qword ptr [rax - 0x4ffffff0] ; jg 0x421a8e ; call rax
0x0000000000421aff : push qword ptr [rax - 0xfffffee] ; fcos ; call rax
0x00000000004218df : push qword ptr [rax] ; or al, byte ptr [rax] ; add al, ah ; ret
0x0000000000415a4f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000421a04 : push rax ; jb 0x421a09 ; call rax
0x0000000000421b54 : push rax ; jrcxz 0x421b59 ; call qword ptr [rax]
0x0000000000401b31 : push rax ; pop rbp ; ret
0x0000000000421a4f : push rax ; sldt word ptr [rax] ; jl 0x421a5e ; call qword ptr [rax]
0x000000000041894b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000419253 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000413b88 : push rbp ; in al, -0x7f ; ret 0xff9f
0x0000000000413d6e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000413e14 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000413e42 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000413f10 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004140a6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401904 : push rbp ; mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x000000000040d3f6 : push rbp ; ret
0x000000000040d3f5 : push rdx ; push rbp ; ret
0x000000000040749d : pushfq ; ret 0x8445
0x00000000004046fa : pushfq ; ret 0xd284
0x00000000004048c3 : rcr byte ptr [r15 + 0x7e], -0x47 ; ret 0xa9e
0x00000000004048c4 : rcr byte ptr [rdi + 0x7e], -0x47 ; ret 0xa9e
0x0000000000401421 : ret
0x0000000000404b00 : ret 0
0x0000000000406d73 : ret 0x10
0x000000000041fd6b : ret 0x2030
0x0000000000401662 : ret 0x221a
0x0000000000401462 : ret 0x221b
0x0000000000413567 : ret 0x2a
0x0000000000416886 : ret 0x2c1
0x0000000000419e63 : ret 0x2c22
0x00000000004151e0 : ret 0x3ae8
0x00000000004104ca : ret 0x43fa
0x000000000040a7fc : ret 0x4589
0x000000000041cc53 : ret 0x5e5
0x000000000040ab14 : ret 0x63b9
0x000000000040a743 : ret 0x77e8
0x000000000040aaef : ret 0x7ab9
0x000000000040767b : ret 0x8041
0x00000000004038a9 : ret 0x8445
0x000000000040a3c8 : ret 0x8589
0x0000000000410360 : ret 0x891a
0x000000000041f71c : ret 0x8934
0x0000000000419257 : ret 0x8948
0x0000000000409a49 : ret 0x8975
0x000000000041d541 : ret 0x89b6
0x0000000000405ea5 : ret 0x89b7
0x000000000040540b : ret 0x89d1
0x000000000041f6f8 : ret 0x8b34
0x000000000040ad67 : ret 0x8b48
0x00000000004197f3 : ret 0x8b4c
0x000000000040578c : ret 0x8bd1
0x0000000000419b1c : ret 0x979f
0x000000000040a417 : ret 0xa3e8
0x000000000041c22b : ret 0xa4be
0x0000000000414235 : ret 0xa9b9
0x0000000000402cb8 : ret 0xa9e
0x000000000040fcb2 : ret 0xade6
0x0000000000403f9d : ret 0xb0
0x00000000004139a0 : ret 0xb91a
0x0000000000409a77 : ret 0xb975
0x000000000041d7fb : ret 0xb9b6
0x0000000000407cc4 : ret 0xb9b7
0x00000000004018a5 : ret 0xc148
0x0000000000407360 : ret 0xc189
0x000000000040a5f4 : ret 0xc6e8
0x0000000000403e29 : ret 0xd284
0x0000000000415a53 : ret 0xd4e9
0x00000000004034c0 : ret 0xe
0x0000000000406143 : ret 0xe025
0x0000000000404129 : ret 0xe280
0x000000000041606c : ret 0xee8
0x0000000000404f0c : ret 0xf18a
0x0000000000414415 : ret 0xf41
0x000000000041829a : ret 0xfe92
0x000000000040cb2a : ret 0xff4a
0x0000000000413b8b : ret 0xff9f
0x000000000041552e : ret 0xffa5
0x0000000000413d71 : ret 0xffbf
0x00000000004147db : ret 0xffc4
0x0000000000413e17 : ret 0xffc5
0x000000000040b984 : ret 0xffcf
0x0000000000413e45 : ret 0xffd5
0x0000000000413f13 : ret 0xffd8
0x0000000000414881 : ret 0xffd9
0x00000000004140a9 : ret 0xffe0
0x000000000041317e : ret 0xfffa
0x00000000004155c4 : ret 0xfffe
0x00000000004229f9 : ret 0xffff
0x00000000004045cb : ret 1
0x00000000004146e0 : ret 2
0x0000000000415b67 : ret 4
0x00000000004176c8 : ret 5
0x000000000040377c : ret 8
0x000000000040ca6a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041e5e4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d2f8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ebf5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dc36 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004018ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4018bb ; pop rbp ; ret
0x00000000004089f9 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040dc37 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000419250 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040ca44 : sahf ; ret 0xd284
0x000000000040991e : sal byte ptr [rbx], 0x62 ; add byte ptr [rax - 0x7f], cl ; ret 1
0x000000000041dcbe : salc ; ret
0x00000000004052e4 : salc ; xchg eax, ecx ; jmp 0x40531b
0x0000000000421a44 : sar byte ptr [rbx - 1], 1 ; call rax
0x00000000004018ae : sar eax, 1 ; jne 0x4018b9 ; pop rbp ; ret
0x00000000004018ad : sar rax, 1 ; jne 0x4018ba ; pop rbp ; ret
0x00000000004018e6 : sbb ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004018e5 : sbb ah, byte ptr cs:[rdx] ; add byte ptr [rcx], al ; ret
0x0000000000416ce9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000418e33 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041422e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041517d : scasd eax, dword ptr [rdi] ; ret
0x000000000040cb28 : shr al, 1 ; ret 0xff4a
0x0000000000421a51 : sldt word ptr [rax] ; jl 0x421a5c ; call qword ptr [rax]
0x0000000000421a41 : sldt word ptr [rax] ; sar byte ptr [rbx - 1], 1 ; call rax
0x0000000000411277 : sub al, 0x38 ; ret 0x8589
0x0000000000414233 : sub al, 0x38 ; ret 0xa9b9
0x00000000004204fd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004204fc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041896b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004070bb : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ea38 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405407 : test al, 0x2d ; pop rcx ; lahf ; ret 0x89d1
0x0000000000405449 : test al, 0x2d ; pop rdx ; lahf ; ret 0x89d1
0x0000000000416ecd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000418848 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a14c : test bh, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000421815 : test bh, dh ; call qword ptr [rax]
0x00000000004204ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000422454 : test byte ptr [rax], cl ; add byte ptr [rax], al ; fmul dword ptr [rbx - 1] ; jmp qword ptr [rax]
0x000000000040b38f : test byte ptr [rdx], al ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000421e54 : test byte ptr [rdx], al ; add byte ptr [rax], al ; fdivr dword ptr [rbp - 2] ; call qword ptr [rsi]
0x0000000000417695 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041b404 : test ch, cl ; ret
0x0000000000418950 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004186b8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041b403 : test r13b, r9b ; ret
0x000000000040e261 : xchg eax, ebp ; ret
0x000000000040767a : xchg eax, ebp ; ret 0x8041
0x00000000004038a8 : xchg eax, ebp ; ret 0x8445
0x0000000000403e28 : xchg eax, ebp ; ret 0xd284
0x000000000041bf5b : xchg eax, ebx ; ret
0x00000000004052e5 : xchg eax, ecx ; jmp 0x40531a
0x000000000041125b : xchg eax, ecx ; ret
0x000000000041e471 : xchg eax, edi ; ret 0xd284
0x00000000004113ab : xchg eax, edx ; ret
0x0000000000404ccb : xchg eax, edx ; ret 0xd284
0x0000000000416be2 : xchg eax, esi ; ret
0x000000000040e243 : xchg eax, esp ; ret
0x000000000040a610 : xchg eax, esp ; ret 0x8445
0x0000000000403ebd : xchg eax, esp ; ret 0xd284
0x0000000000404128 : xchg eax, esp ; ret 0xe280
0x0000000000401884 : xor ah, byte ptr [rdx] ; jmp rax
0x00000000004018c4 : xor ah, byte ptr [rdx] ; jmp rdx
0x00000000004171e7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ddad : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040bee1 : xor esp, dword ptr [rdx] ; pop rbp ; ret
