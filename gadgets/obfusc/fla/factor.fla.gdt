0x00000000004244fe : adc al, -8 ; pop rbp ; ret
0x0000000000436d6a : adc al, -9 ; jbe 0x436d4e ; adc eax, dword ptr [rax] ; ret
0x0000000000405e6b : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042776b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043717e : adc dword ptr [rax], eax ; in eax, 0x7e ; ret 0x92d
0x0000000000436bce : adc eax, 0x11473300 ; ret
0x0000000000436b68 : adc eax, 0xf989d1eb ; ret
0x0000000000422e89 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000436d6e : adc eax, dword ptr [rax] ; ret
0x0000000000435faa : adc eax, dword ptr [rcx + 0x2a4eff] ; int1 ; stosb byte ptr [rdi], al ; ret
0x000000000040f5a5 : adc ebp, dword ptr [rax + 0x7b9f006] ; ret 0x9e91
0x0000000000438a0b : add ah, al ; add dword ptr [rax], eax ; add al, dh ; idiv esp ; jmp qword ptr [rcx]
0x000000000041026c : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042a593 : add al, 0 ; add cl, ch ; ret 1
0x0000000000436b64 : add al, 0x1a ; sbb ch, byte ptr [rdi] ; adc eax, 0xf989d1eb ; ret
0x000000000043896f : add al, al ; stosb byte ptr [rdi], al ; cld ; call rdx
0x0000000000438867 : add al, bh ; mov edi, esp ; jmp qword ptr [rax]
0x0000000000427063 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411012 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000438a0f : add al, dh ; idiv esp ; jmp qword ptr [rcx]
0x000000000043938f : add al, dh ; in al, -2 ; call rdx
0x000000000043974f : add al, dh ; xchg bh, bh ; call qword ptr [rsi]
0x00000000004024d5 : add bh, al ; fmul st(0) ; ret 0x7fa7
0x000000000042a9e6 : add bh, al ; in al, dx ; int1 ; ret
0x00000000004157d7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rbx]
0x00000000004155a2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000042745e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004271c6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042ef58 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042f19b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000042ef2d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000043642f : add bl, bh ; xor ch, byte ptr [rdx] ; ret 0xf718
0x00000000004344af : add bl, dh ; ret
0x000000000043579e : add byte ptr [ecx + 0x7f00663d], al ; ret 0xff99
0x000000000043594e : add byte ptr [r15 + 0x58077722], r8b ; ret
0x000000000041118d : add byte ptr [r8], al ; add byte ptr [rbx + 0x3d2da445], cl ; ret 0x7bdd
0x000000000042fdb9 : add byte ptr [r8], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041349e : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000438863 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; clc ; mov edi, esp ; jmp qword ptr [rax]
0x000000000043908b : add byte ptr [rax + rcx], al ; add byte ptr [rax], ah ; test al, -2 ; jmp qword ptr [rax]
0x000000000042fda5 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042acbb : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000040b28f : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043908f : add byte ptr [rax], ah ; test al, -2 ; jmp qword ptr [rax]
0x0000000000438373 : add byte ptr [rax], ah ; xchg eax, ebp ; cld ; call rax
0x0000000000438865 : add byte ptr [rax], al ; add al, bh ; mov edi, esp ; jmp qword ptr [rax]
0x00000000004024d3 : add byte ptr [rax], al ; add bh, al ; fmul st(0) ; ret 0x7fa7
0x000000000042745c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004271c4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042ef56 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042f199 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004344ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041349c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000042fda3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042acb9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000040b28d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004344ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000423deb : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004344ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000433914 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000410c48 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2da445], cl ; ret 0x7bdd
0x000000000041118e : add byte ptr [rax], al ; add byte ptr [rbx + 0x3d2da445], cl ; ret 0x7bdd
0x0000000000422bce : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004022e8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d247bb], cl ; ret 0x7fa7
0x0000000000414647 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d23fbb], cl ; ret 0xbc47
0x00000000004145c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x64d23fbb], cl ; ret 0xbc47
0x0000000000433009 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000432f85 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000402aa1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cd22bbb], cl ; ret
0x000000000042a49e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000429e7e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040f7bb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040576b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040421c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000413376 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004133f2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000432908 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041aadd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040379c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b263 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000403cff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004041d3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041aabf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040324d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041758e : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004328cd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000422e8b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413544 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432488 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042776d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422e47 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408414 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040144b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000438cce : add byte ptr [rax], al ; and dl, 0xfd ; call qword ptr [rsi]
0x0000000000438866 : add byte ptr [rax], al ; clc ; mov edi, esp ; jmp qword ptr [rax]
0x0000000000401629 : add byte ptr [rax], al ; jmp 0x401469
0x000000000041758a : add byte ptr [rax], al ; jmp 0x417599
0x00000000004328c9 : add byte ptr [rax], al ; jmp 0x4328d8
0x0000000000433539 : add byte ptr [rax], al ; jmp 0x433548
0x00000000004339af : add byte ptr [rax], al ; jmp 0x433abf
0x0000000000433747 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000417259 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041a3a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043908a : add byte ptr [rax], al ; or byte ptr [rax], r8b ; add byte ptr [rax], ah ; test al, -2 ; jmp qword ptr [rax]
0x000000000043938a : add byte ptr [rax], al ; or r8d, dword ptr [rax] ; add al, dh ; in al, -2 ; call rdx
0x00000000004026d0 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422bcf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041026d : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004081e9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004344ae : add byte ptr [rax], al ; ret
0x00000000004385f3 : add byte ptr [rax], al ; ret 0xfffe
0x0000000000438862 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; clc ; mov edi, esp ; jmp qword ptr [rax]
0x000000000043950e : add byte ptr [rax], al ; sub ch, -2 ; call qword ptr [rbx]
0x0000000000436abf : add byte ptr [rbp + 0x2e], ch ; ret
0x0000000000436bbf : add byte ptr [rbp + 8], bl ; lodsb al, byte ptr [rsi] ; mov ebx, 0xf006b0cc ; ret
0x00000000004373ef : add byte ptr [rbp - 0x4158e275], ch ; popfq ; ret 0x766e
0x0000000000433916 : add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000410c4a : add byte ptr [rbx + 0x3c2da445], cl ; ret 0x7bdd
0x0000000000411190 : add byte ptr [rbx + 0x3d2da445], cl ; ret 0x7bdd
0x0000000000422bd0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041026e : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004081ea : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043938b : add byte ptr [rbx + rcx], al ; add al, dh ; in al, -2 ; call rdx
0x000000000043635f : add byte ptr [rbx - 0x18], bl ; ret 0xd9e9
0x00000000004022ea : add byte ptr [rbx - 0x37d247bb], cl ; ret 0x7fa7
0x0000000000414649 : add byte ptr [rbx - 0x63d23fbb], cl ; ret 0xbc47
0x000000000043636f : add byte ptr [rbx - 0x64], dl ; fsub qword ptr [rcx] ; ret 0xc591
0x00000000004145c5 : add byte ptr [rbx - 0x64d23fbb], cl ; ret 0xbc47
0x000000000043300b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000432f87 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000402aa3 : add byte ptr [rbx - 0x7cd22bbb], cl ; ret
0x000000000042a5fe : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000042a4a0 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000436eef : add byte ptr [rbx], al ; test dword ptr [rdx + 0x1a7c3b68], esi ; ret 0x56fd
0x000000000043579f : add byte ptr [rcx + 0x7f00663d], al ; ret 0xff99
0x0000000000429e80 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040f7bd : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040576d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040421e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004389cb : add byte ptr [rcx + rax - 0x46400000], al ; cld ; jmp rsi
0x000000000043549f : add byte ptr [rcx - 0x309e019], dh ; ret
0x000000000043685f : add byte ptr [rcx - 0x36a149e7], ah ; xchg eax, esi ; ret
0x0000000000424ad5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401938 : add byte ptr [rcx], al ; ret
0x00000000004361cf : add byte ptr [rcx], bh ; mov bh, -1 ; jno 0x436249 ; jmp rbx
0x000000000043594f : add byte ptr [rdi + 0x58077722], al ; ret
0x00000000004355af : add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000436b3f : add byte ptr [rdi], al ; ret 0x3fd9
0x000000000043772f : add byte ptr [rdi], cl ; cmp eax, 0x9b59d4d7 ; ret 0x7982
0x000000000043737f : add byte ptr [rdi], cl ; jmp rax
0x0000000000413378 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004133f4 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043290a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041aadf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040379e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b265 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000403d01 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004041d5 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041aac1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040324f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004024d1 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add bh, al ; fmul st(0) ; ret 0x7fa7
0x00000000004042b2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043199d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004356f6 : add byte ptr [rdx], bl ; jg 0x435777 ; ret
0x0000000000435a5f : add byte ptr [rip - 0x1f8ed3a8], ah ; ret
0x0000000000435a5e : add byte ptr [rip - 0x1f8ed3a8], r12b ; ret
0x000000000043633f : add byte ptr [rip - 0x21754bc3], al ; sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000438370 : add byte ptr [rip - 0x6ae00000], al ; cld ; call rax
0x000000000043466f : add byte ptr [rsi + 0x69], cl ; insb byte ptr [rdi], dx ; jae 0x43469e ; ret
0x0000000000438ccb : add byte ptr [rsp + rax - 0x1d800000], al ; std ; call qword ptr [rsi]
0x00000000004358ef : add ch, cl ; push rcx ; xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000435bdf : add cl, bh ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x0000000000417590 : add cl, ch ; ret
0x00000000004328cf : add cl, ch ; ret 0
0x000000000040213c : add cl, ch ; ret 1
0x0000000000435faf : add cl, dh ; stosb byte ptr [rdi], al ; ret
0x00000000004359e8 : add dh, bl ; ret
0x000000000043896d : add dword ptr [rax], eax ; add al, al ; stosb byte ptr [rdi], al ; cld ; call rdx
0x0000000000438a0d : add dword ptr [rax], eax ; add al, dh ; idiv esp ; jmp qword ptr [rcx]
0x000000000042a9e4 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x00000000004157d5 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rbx]
0x0000000000422e45 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416610 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042356a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042a5fc : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000042f693 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000435fa9 : add dword ptr [rbx], edx ; cmp edi, 0xf1002a4e ; stosb byte ptr [rdi], al ; ret
0x0000000000424550 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000040280f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e72f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004327e1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000412581 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xd284
0x0000000000436d15 : add eax, 0x10d78564 ; ret 0x75a6
0x0000000000401934 : add eax, 0x23899e ; add ebx, esi ; ret
0x000000000042f321 : add eax, 0x458b0000 ; call 0xffffffffc3a41f61
0x00000000004081e8 : add eax, 0x5d5b0000 ; ret
0x0000000000438371 : add eax, 0x95200000 ; cld ; call rax
0x0000000000436340 : add eax, 0xde8ab43d ; sbb byte ptr [rsi], dh ; ret 0xe990
0x00000000004155a0 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040213a : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004018fb : add eax, edx ; sar rax, 1 ; jne 0x40190c ; pop rbp ; ret
0x000000000042fc59 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401939 : add ebx, esi ; ret
0x00000000004024be : add edi, eax ; fmul st(0) ; ret 0x7fa7
0x000000000042ab5b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042f265 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000437801 : add edx, ebp ; shr bl, 0x60 ; mov al, 0x20 ; push rax ; ret
0x0000000000401b5b : add esp, 0x10 ; pop rbp ; ret
0x0000000000424ad3 : add esp, 0x100 ; pop rbp ; ret
0x0000000000423567 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000430b45 : add esp, 0x11f0 ; pop rbp ; ret
0x0000000000403e7d : add esp, 0x120 ; pop rbp ; ret
0x000000000042fc2a : add esp, 0x130 ; pop rbp ; ret
0x0000000000413d56 : add esp, 0x140 ; pop rbp ; ret
0x00000000004026cc : add esp, 0x160 ; pop rbp ; ret
0x00000000004115c0 : add esp, 0x170 ; pop rbp ; ret
0x0000000000414893 : add esp, 0x18 ; pop rbp ; ret
0x00000000004037f5 : add esp, 0x190 ; pop rbp ; ret
0x000000000042761c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000410b2b : add esp, 0x1c0 ; pop rbp ; ret
0x000000000041a172 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000413547 : add esp, 0x20 ; pop rbp ; ret
0x000000000043199b : add esp, 0x200 ; pop rbp ; ret
0x00000000004158f5 : add esp, 0x240 ; pop rbp ; ret
0x000000000040db2f : add esp, 0x2d0 ; pop rbp ; ret
0x000000000043248b : add esp, 0x30 ; pop rbp ; ret
0x0000000000405e69 : add esp, 0x310 ; pop rbp ; ret
0x00000000004192dc : add esp, 0x360 ; pop rbp ; ret
0x0000000000401b07 : add esp, 0x40 ; pop rbp ; ret
0x00000000004130b8 : add esp, 0x450 ; pop rbp ; ret
0x0000000000401d02 : add esp, 0x50 ; pop rbp ; ret
0x000000000042cf29 : add esp, 0x520 ; pop rbp ; ret
0x00000000004081e5 : add esp, 0x578 ; pop rbx ; pop rbp ; ret
0x0000000000408417 : add esp, 0x60 ; pop rbp ; ret
0x0000000000417cf5 : add esp, 0x70 ; pop rbp ; ret
0x000000000040341a : add esp, 0x78 ; pop rbp ; ret
0x00000000004143ca : add esp, 0x80 ; pop rbp ; ret
0x0000000000415f3c : add esp, 0x90 ; pop rbp ; ret
0x0000000000417afe : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402c94 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040c455 : add esp, 0xb80 ; pop rbp ; ret
0x0000000000414159 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004228a4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000416ad9 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004144f2 : add esp, 8 ; pop rbp ; ret
0x000000000040144e : add esp, 8 ; ret
0x00000000004018fa : add rax, rdx ; sar rax, 1 ; jne 0x40190d ; pop rbp ; ret
0x000000000042fc58 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042ab5a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401b5a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000424ad2 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000423566 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000430b44 : add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000403e7c : add rsp, 0x120 ; pop rbp ; ret
0x000000000042fc29 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000413d55 : add rsp, 0x140 ; pop rbp ; ret
0x00000000004026cb : add rsp, 0x160 ; pop rbp ; ret
0x00000000004115bf : add rsp, 0x170 ; pop rbp ; ret
0x0000000000414892 : add rsp, 0x18 ; pop rbp ; ret
0x00000000004037f4 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042761b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000410b2a : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000041a171 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000413546 : add rsp, 0x20 ; pop rbp ; ret
0x000000000043199a : add rsp, 0x200 ; pop rbp ; ret
0x00000000004158f4 : add rsp, 0x240 ; pop rbp ; ret
0x000000000040db2e : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000043248a : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405e68 : add rsp, 0x310 ; pop rbp ; ret
0x00000000004192db : add rsp, 0x360 ; pop rbp ; ret
0x0000000000401b06 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004130b7 : add rsp, 0x450 ; pop rbp ; ret
0x0000000000401d01 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042cf28 : add rsp, 0x520 ; pop rbp ; ret
0x00000000004081e4 : add rsp, 0x578 ; pop rbx ; pop rbp ; ret
0x0000000000408416 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000417cf4 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403419 : add rsp, 0x78 ; pop rbp ; ret
0x00000000004143c9 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000415f3b : add rsp, 0x90 ; pop rbp ; ret
0x0000000000417afd : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402c93 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040c454 : add rsp, 0xb80 ; pop rbp ; ret
0x0000000000414158 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004228a3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000416ad8 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004144f1 : add rsp, 8 ; pop rbp ; ret
0x000000000040144d : add rsp, 8 ; ret
0x000000000042e72e : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004327e0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043633e : and byte ptr [rax], al ; add eax, 0xde8ab43d ; sbb byte ptr [rsi], dh ; ret 0xe990
0x000000000043636e : and byte ptr [rax], al ; push rbx ; pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000043638e : and byte ptr [rax], al ; ret
0x0000000000435739 : and byte ptr [rbp + rsi - 0x4b], ch ; push 0x25e9006d ; call rcx
0x0000000000403e7f : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041660f : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042454e : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000435951 : and dh, byte ptr [rdi + 7] ; pop rax ; ret
0x0000000000438cd0 : and dl, 0xfd ; call qword ptr [rsi]
0x0000000000436abb : and eax, 0x168759 ; insd dword ptr [rdi], dx ; ret
0x0000000000416c1f : and eax, 0x63a2e8 ; pop rbp ; ret
0x0000000000416c43 : and eax, 0x63a2f0 ; pop rbp ; ret
0x00000000004157d4 : and eax, 0xc7000001 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rbx]
0x0000000000435a60 : and eax, 0xe0712c58 ; ret
0x0000000000401937 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000434c50 : and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x0000000000436a5a : and edi, dword ptr [rax + 0x16f051] ; movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x436a97 ; ret 0x715e
0x0000000000435637 : and esi, ecx ; int1 ; lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000435280 : and esp, dword ptr [rdi + 0x58] ; jo 0x435237 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x000000000042aa10 : call 0x4015e9
0x0000000000431ce7 : call 0x401876
0x00000000004101a7 : call 0x40c472
0x00000000004026f0 : call 0x423dd8
0x000000000042f9f1 : call 0x4283b9
0x00000000004055a7 : call 0xffffffff8a149ade
0x00000000004055a6 : call 0xffffffff8a149adf
0x000000000042f326 : call 0xffffffffc3a41f5c
0x000000000042f325 : call 0xffffffffc3a41f5d
0x000000000042f368 : call 0xffffffffc3a4209e
0x000000000042f367 : call 0xffffffffc3a4209f
0x00000000004228e9 : call 0xffffffffe904b239
0x00000000004228e8 : call 0xffffffffe904b23a
0x000000000041e32d : call 0xfffffffff73a68c4
0x000000000042dcb3 : call 0xfffffffffee76285
0x000000000042dcb2 : call 0xfffffffffee76286
0x0000000000429c45 : call 0xffffffffff47221a
0x0000000000420e59 : call 0xffffffffff56942b
0x0000000000420e58 : call 0xffffffffff56942c
0x0000000000420e59 : call 0xffffffffff56942d
0x0000000000420e58 : call 0xffffffffff56942e
0x0000000000419d48 : call 0xffffffffffae231a
0x0000000000419d47 : call 0xffffffffffae231b
0x0000000000415fb4 : call 0xffffffffffb9e586
0x0000000000415fb3 : call 0xffffffffffb9e587
0x000000000042e76a : call 0xffffffffffbf6d3c
0x000000000042e769 : call 0xffffffffffbf6d3d
0x0000000000434489 : call qword ptr [r12 + rbx*8]
0x000000000040ab3e : call qword ptr [rax]
0x000000000040fd0b : call qword ptr [rbx]
0x000000000040fa12 : call qword ptr [rcx]
0x00000000004077af : call qword ptr [rdi]
0x000000000040c28d : call qword ptr [rdx]
0x0000000000407572 : call qword ptr [rsi]
0x000000000043448a : call qword ptr [rsp + rbx*8]
0x000000000040195d : call rax
0x0000000000419d4e : call rbx
0x000000000040ff9b : call rcx
0x000000000040ba6c : call rdi
0x000000000040d234 : call rdx
0x000000000040babb : call rsi
0x000000000041261a : call rsp
0x0000000000436cb8 : cdq ; call rsi
0x000000000042b486 : cdq ; jbe 0x42b4aa ; ret
0x000000000042cdad : cdq ; jbe 0x42cdd1 ; ret
0x0000000000432f8c : cdq ; ret
0x0000000000436cb5 : cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x00000000004244ad : clc ; add rsp, 0x120 ; pop rbp ; ret
0x00000000004026ca : clc ; add rsp, 0x160 ; pop rbp ; ret
0x00000000004115be : clc ; add rsp, 0x170 ; pop rbp ; ret
0x0000000000428a92 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000432260 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004018ff : clc ; jne 0x401908 ; pop rbp ; ret
0x0000000000438868 : clc ; mov edi, esp ; jmp qword ptr [rax]
0x00000000004244f8 : clc ; or rdx, rsi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x00000000004244ff : clc ; pop rbp ; ret
0x000000000040e272 : clc ; ret 0xb63c
0x0000000000430b43 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000438376 : cld ; call rax
0x0000000000438972 : cld ; call rdx
0x000000000043836e : cld ; inc dword ptr [rax] ; add eax, 0x95200000 ; cld ; call rax
0x000000000043886a : cld ; jmp qword ptr [rax]
0x0000000000438a12 : cld ; jmp qword ptr [rcx]
0x00000000004389d2 : cld ; jmp rsi
0x0000000000436dc2 : cld ; or eax, 0xe4b786e ; xchg eax, esi ; sbb al, -0x7c ; ret
0x00000000004354a4 : cld ; ret
0x0000000000420aad : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000435c10 : cmc ; out dx, eax ; std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x000000000042924d : cmp al, -0x2a ; ret
0x0000000000435a9a : cmp al, 0xd ; ret 0x43c5
0x0000000000435287 : cmp bh, byte ptr [rcx] ; ret
0x000000000040ac03 : cmp bl, -1 ; dec dword ptr [rax + 1] ; ret 0x8948
0x000000000041475c : cmp byte ptr [rcx - 0x47], dl ; pushfq ; ret 0xbc47
0x000000000043642c : cmp byte ptr [rdi + 0x1f], bl ; add bl, bh ; xor ch, byte ptr [rdx] ; ret 0xf718
0x0000000000435625 : cmp byte ptr [rdx], ch ; outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000436341 : cmp eax, 0x18de8ab4 ; ret 0xe990
0x0000000000437731 : cmp eax, 0x9b59d4d7 ; ret 0x7982
0x00000000004018bd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4018d0 ; pop rbp ; ret
0x0000000000435bde : cmp eax, dword ptr [rax] ; stc ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x0000000000403c6b : cmp ecx, dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x0000000000435fab : cmp edi, 0xf1002a4e ; stosb byte ptr [rdi], al ; ret
0x0000000000435624 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp byte ptr [rdx], ch ; outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000422d84 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000042b432 : cwde ; jbe 0x42b456 ; ret
0x0000000000432a8b : cwde ; js 0x432a35 ; ret
0x0000000000432ad2 : cwde ; js 0x432a7c ; ret
0x0000000000432b0c : cwde ; js 0x432ab6 ; ret
0x00000000004151b1 : cwde ; ret 0x5bc5
0x000000000040ac06 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000415b53 : dec dword ptr [rax + 1] ; ret 0xc148
0x000000000042cc72 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040c081 : dec dword ptr [rax - 0x75] ; push rbp ; fsubr st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000425f41 : dec dword ptr [rax - 0x77] ; ret 0x76e8
0x000000000042cca8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000426827 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042f9ed : dec dword ptr [rax - 0x77] ; ret 0xbae8
0x00000000004259eb : dec dword ptr [rax - 0x77] ; ret 0xcce8
0x000000000040f84a : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000420c52 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000420f5d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040abf9 : dec dword ptr [rcx - 0x50f0b70e] ; ret 0x8b48
0x0000000000407bcd : dec dword ptr [rcx - 0x7374b73f] ; int 0x80
0x0000000000412b83 : dec dword ptr [rdi] ; mov dh, 0x75 ; ret 0xf239
0x0000000000422464 : dec dword ptr [rdi] ; ret 0x8589
0x000000000042a58f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000402136 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffd], bh ; ret 1
0x000000000042404e : dec dword ptr [rdi] ; test byte ptr [rdi], dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004261a3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000042f68f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041ff98 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000042cb14 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000435fac : dec dword ptr [rsi + 0x2a] ; add cl, dh ; stosb byte ptr [rdi], al ; ret
0x0000000000407822 : dec eax ; mov cl, -0x1f ; jl 0x407817 ; ret 9
0x0000000000426063 : dec ebx ; je 0x426029 ; ret 0x1ce9
0x0000000000413060 : dec esi ; lodsb al, byte ptr [rsi] ; ret 0xe9c3
0x0000000000436d6b : div dword ptr [rsi - 0x26] ; adc eax, dword ptr [rax] ; ret
0x00000000004359e7 : enter -0x2200, 0x44 ; ret
0x00000000004299fb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041799d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428504 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423d99 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e0e3 : fcmovbe st(0), st(5) ; jmp 0x42e741
0x0000000000436d69 : fcom qword ptr [rdi + rsi*8] ; jbe 0x436d4f ; adc eax, dword ptr [rax] ; ret
0x0000000000435765 : ficom dword ptr [rcx - 0x74] ; ret 0x4b96
0x0000000000436344 : ficomp word ptr [rax] ; ret 0xe990
0x00000000004359e5 : fidivr dword ptr [rdi - 0x38] ; add dh, bl ; ret
0x000000000040d69c : fmul dword ptr [r8 + 0x3b] ; loopne 0x40d6ba ; xchg eax, edx ; ret 0xe280
0x000000000040d9a7 : fmul dword ptr [r8 + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, edx ; ret 0xe280
0x0000000000401d98 : fmul dword ptr [r9 - 0x38167e3f] ; ret 0x7fa7
0x000000000040d69d : fmul dword ptr [rax + 0x3b] ; loopne 0x40d6b9 ; xchg eax, edx ; ret 0xe280
0x000000000040d9a8 : fmul dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, edx ; ret 0xe280
0x0000000000427d64 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000042fda9 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042acbf : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042cc76 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000401d99 : fmul dword ptr [rcx - 0x38167e3f] ; ret 0x7fa7
0x000000000043448c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004024c1 : fmul st(0) ; ret 0x7fa7
0x0000000000412a75 : fst qword ptr [rbx + 0xf45c084] ; ret 0x8944
0x0000000000436372 : fsub qword ptr [rcx] ; ret 0xc591
0x00000000004042c1 : fsub st(1), st(0) ; ret
0x000000000040c085 : fsubr st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000401b59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004323bc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004018d0 : hlt ; pop rbp ; mov edi, 0x63a2a0 ; jmp rax
0x0000000000435c18 : hlt ; ret
0x0000000000415726 : hlt ; ret 0x62b9
0x0000000000414c02 : hlt ; ret 0x8589
0x00000000004157b0 : hlt ; ret 0x9b9
0x00000000004354a3 : idiv ah ; ret
0x0000000000435b36 : idiv dword ptr [rbx - 0x54abd34f] ; ret 0x3f90
0x0000000000438a11 : idiv esp ; jmp qword ptr [rcx]
0x0000000000426afe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000042f146 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x0000000000434c4c : imul edx, dword ptr [rbx + 0x75], 0xedcb211f ; xlatb ; pop rcx ; ret
0x00000000004369a0 : imul edx, ebp, 0xd17237d ; ret 0x399f
0x0000000000420409 : in al, -0x7f ; ret 0xff9f
0x00000000004205ef : in al, -0x7f ; ret 0xffbf
0x0000000000420695 : in al, -0x7f ; ret 0xffc5
0x00000000004206c3 : in al, -0x7f ; ret 0xffd5
0x0000000000420791 : in al, -0x7f ; ret 0xffd8
0x0000000000420927 : in al, -0x7f ; ret 0xffe0
0x0000000000439391 : in al, -2 ; call rdx
0x0000000000433edf : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004287ff : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000435c17 : in al, dx ; hlt ; ret
0x000000000042a9e9 : in al, dx ; int1 ; ret
0x000000000041a4ba : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042e735 : in al, dx ; pop rbp ; ret
0x000000000043602a : in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x00000000004356f5 : in eax, 0 ; sbb bh, byte ptr [rdi + 0x79] ; ret
0x000000000040c831 : in eax, 0x79 ; ret
0x0000000000437180 : in eax, 0x7e ; ret 0x92d
0x000000000043318b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435c15 : in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000434c52 : in eax, dx ; xlatb ; pop rcx ; ret
0x000000000043549d : inc ch ; add byte ptr [rcx - 0x309e019], dh ; ret
0x000000000040f7b9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000421a7f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040379a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b87b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040ba4f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043836f : inc dword ptr [rax] ; add eax, 0x95200000 ; cld ; call rax
0x0000000000402344 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000430622 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000004027af : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000040f7e5 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b48d : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f62b : inc dword ptr [rdi] ; ret 0x9e91
0x000000000042aa14 : inc edi ; in al, dx ; int1 ; ret
0x0000000000423538 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041a0e2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000419dd2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000415808 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rbx]
0x0000000000434673 : insb byte ptr [rdi], dx ; jae 0x43469a ; ret
0x0000000000434672 : insb byte ptr [rdi], dx ; jae 0x43469b ; ret
0x0000000000435285 : insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000436ac0 : insd dword ptr [rdi], dx ; ret
0x000000000041cbdf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000042021f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000435a96 : insd dword ptr [rdi], dx ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000407bd3 : int 0x80
0x0000000000411ce5 : int 0xac
0x0000000000416bff : int 0xc4
0x0000000000435a5d : int1 ; add byte ptr [rip - 0x1f8ed3a8], r12b ; ret
0x0000000000435639 : int1 ; lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000436c00 : int1 ; pop rsi ; mov ebp, 0xbc7504e3 ; ret
0x000000000042a603 : int1 ; ret
0x000000000040d73e : int1 ; ret 0x3d48
0x000000000040c99e : int1 ; ret 0x8589
0x0000000000435d88 : int1 ; sar byte ptr [rcx + 0xe], -0x7b ; ret
0x0000000000435fb0 : int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004018c3 : ja 0x4018ca ; pop rbp ; ret
0x00000000004358f5 : ja 0x4358e5 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000435941 : ja 0x435900 ; ret 0x206d
0x0000000000435952 : ja 0x43595e ; pop rax ; ret
0x0000000000401449 : jae 0x401455 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004127f8 : jae 0x4127e5 ; ret 8
0x000000000041a0e0 : jae 0x41a0e8 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000434674 : jae 0x434699 ; ret
0x000000000042b433 : jbe 0x42b455 ; ret
0x000000000042b487 : jbe 0x42b4a9 ; ret
0x000000000042cdae : jbe 0x42cdd0 ; ret
0x0000000000436d6c : jbe 0x436d4c ; adc eax, dword ptr [rax] ; ret
0x00000000004018cf : je 0x4018cd ; pop rbp ; mov edi, 0x63a2a0 ; jmp rax
0x0000000000425292 : je 0x425254 ; ret 0x8589
0x0000000000425372 : je 0x425334 ; ret 0x8589
0x0000000000425f60 : je 0x425f22 ; ret 0x7d81
0x0000000000426065 : je 0x426027 ; ret 0x1ce9
0x00000000004356f8 : jg 0x435775 ; ret
0x00000000004359e6 : jg 0x4359b5 ; add dh, bl ; ret
0x0000000000426618 : jge 0x42662f ; ret
0x0000000000426b03 : jge 0x426b1a ; ret
0x000000000042bafa : jge 0x42bb73 ; ret
0x00000000004336f9 : jge 0x4336f3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000407826 : jl 0x407813 ; ret 9
0x00000000004264ec : jl 0x426503 ; ret
0x0000000000436a61 : jl 0x436a90 ; ret 0x715e
0x0000000000436ef5 : jl 0x436f13 ; ret 0x56fd
0x000000000042bb4e : jle 0x42bbc7 ; ret
0x000000000042c77c : jle 0x42c7f5 ; ret
0x000000000040162b : jmp 0x401467
0x000000000040241e : jmp 0x4026da
0x0000000000402abd : jmp 0x402ca4
0x0000000000405da6 : jmp 0x405e79
0x000000000040aab6 : jmp 0x40c463
0x000000000040b478 : jmp 0x40c465
0x0000000000413408 : jmp 0x4133bc
0x000000000041758c : jmp 0x417597
0x000000000041a112 : jmp 0x41a180
0x000000000041fbcd : jmp 0x4228b3
0x0000000000422661 : jmp 0x4228b5
0x0000000000426afd : jmp 0x427075
0x000000000042a9e2 : jmp 0x42ab27
0x000000000042cadf : jmp 0x42cf37
0x000000000042cade : jmp 0x42cf38
0x000000000042e0e5 : jmp 0x42e73f
0x000000000042eef3 : jmp 0x42f28a
0x00000000004328cb : jmp 0x4328d6
0x000000000043353b : jmp 0x433546
0x00000000004339b1 : jmp 0x433abd
0x0000000000401d9d : jmp 0x7fe7e06b
0x0000000000428ace : jmp 0xffffffffb7048e9a
0x0000000000432a8a : jmp 0xffffffffc3e7a32b
0x00000000004030e4 : jmp qword ptr [rax]
0x000000000040d677 : jmp qword ptr [rbx]
0x000000000041297c : jmp qword ptr [rcx]
0x0000000000430857 : jmp qword ptr [rdi]
0x0000000000422d85 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000408029 : jmp qword ptr [rdx]
0x0000000000436b38 : jmp qword ptr [rip + 0xefe30c5]
0x0000000000420def : jmp qword ptr [rsi]
0x00000000004018d7 : jmp rax
0x0000000000421982 : jmp rbx
0x000000000040fa81 : jmp rcx
0x000000000040db79 : jmp rdi
0x0000000000401917 : jmp rdx
0x000000000040d3e3 : jmp rsi
0x0000000000418dcf : jmp rsp
0x0000000000401900 : jne 0x401907 ; pop rbp ; ret
0x00000000004101a1 : jne 0x41017b ; mov rdx, qword ptr [rbp - 0x38] ; call 0x40c478
0x0000000000423536 : jne 0x42353f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000431ce5 : jne 0x431ccf ; call 0x401878
0x0000000000434c4e : jne 0x434c76 ; and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x00000000004355ac : jne 0x43560f ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000436109 : jne 0x436095 ; pop rdi ; ret 0x2692
0x0000000000436c06 : jne 0x436bc7 ; ret
0x0000000000435a63 : jno 0x435a47 ; ret
0x00000000004361d3 : jno 0x436245 ; jmp rbx
0x0000000000436cb7 : jns 0x436c54 ; call rsi
0x00000000004115c2 : jo 0x4115ca ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417cf7 : jo 0x417d58 ; ret
0x0000000000423751 : jo 0x4237b2 ; ret
0x0000000000423874 : jo 0x4238d5 ; ret
0x00000000004239ae : jo 0x423a0f ; ret
0x0000000000427e0c : jo 0x427e6d ; ret
0x0000000000432264 : jo 0x4322c5 ; ret
0x0000000000435283 : jo 0x435234 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000408160 : jrcxz 0x408133 ; out -0x7c, eax ; rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x0000000000436545 : jrcxz 0x436505 ; ret
0x0000000000436c04 : jrcxz 0x436c0f ; jne 0x436bc9 ; ret
0x000000000040341c : js 0x40347d ; ret
0x00000000004081e7 : js 0x4081f4 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004228a6 : js 0x4228ba ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000432a8c : js 0x432a34 ; ret
0x0000000000432ad3 : js 0x432a7b ; ret
0x0000000000432b0d : js 0x432ab5 ; ret
0x0000000000435a99 : lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000435be3 : lahf ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x23b4
0x0000000000435fb3 : lea esp, dword ptr [rsi + rdi*4 - 0x53] ; ret 0xdf32
0x0000000000408161 : leave ; out -0x7c, eax ; rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x0000000000436864 : leave ; xchg eax, esi ; ret
0x000000000043563a : lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000436bc2 : lodsb al, byte ptr [rsi] ; mov ebx, 0xf006b0cc ; ret
0x00000000004355b1 : lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000411ce6 : lodsb al, byte ptr [rsi] ; ret 0x89c3
0x0000000000413062 : lodsb al, byte ptr [rsi] ; ret 0xe9c3
0x00000000004373f0 : lodsd eax, dword ptr [rsi] ; mov ebx, dword ptr [rip - 0x620d4159] ; ret 0x766e
0x0000000000435be4 : lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x23b4
0x0000000000435fb6 : lodsd eax, dword ptr [rsi] ; ret 0xdf32
0x0000000000438cd1 : loop 0x438cd2 ; call qword ptr [rsi]
0x000000000042454f : loope 0x424558 ; movzx eax, cl ; pop rbp ; ret
0x00000000004054f4 : loopne 0x4054fd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405e67 : loopne 0x405eba ; add esp, 0x310 ; pop rbp ; ret
0x000000000040d6a1 : loopne 0x40d6b5 ; xchg eax, edx ; ret 0xe280
0x000000000040d6a0 : loopne 0x40d6b6 ; xchg eax, edx ; ret 0xe280
0x000000000040f3a1 : loopne 0x40f3aa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041013f : loopne 0x410148 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413af3 : loopne 0x413afc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416adb : loopne 0x416ae2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417752 : loopne 0x4177a2 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000417751 : loopne 0x4177a3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041a87e : loopne 0x41a887 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042607f : loopne 0x4260d2 ; add esp, 0x2d0 ; pop rbp ; ret
0x0000000000427b50 : loopne 0x427b59 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427f5c : loopne 0x427fac ; add esp, 0x40 ; pop rbp ; ret
0x0000000000427f5b : loopne 0x427fad ; add esp, 0x40 ; pop rbp ; ret
0x000000000042827f : loopne 0x4282cf ; add esp, 0x40 ; pop rbp ; ret
0x000000000042827e : loopne 0x4282d0 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000436342 : mov ah, -0x76 ; ficomp word ptr [rax] ; ret 0xe990
0x0000000000415a0f : mov ah, 0x2d ; movhps xmm5, qword ptr [rdi] ; ret 0x4589
0x0000000000401d00 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000435172 : mov ah, byte ptr [rax - 0x34115b1f] ; ret
0x0000000000436028 : mov al, -0x11 ; in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x000000000043678c : mov al, -0x1c ; sbb dword ptr [rax], eax ; ret
0x0000000000419ffd : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000419f09 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429c1a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402c96 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437806 : mov al, 0x20 ; push rax ; ret
0x0000000000402db0 : mov al, 0x2d ; ret
0x0000000000431b33 : mov al, 0x2d ; ret 0xa414
0x000000000041aa3b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000040da16 : mov al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004327dd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043298d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433189 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004361d1 : mov bh, -1 ; jno 0x436247 ; jmp rbx
0x0000000000436343 : mov bl, dh ; sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000416c41 : mov byte ptr [0x63a2f0], al ; pop rbp ; ret
0x000000000042c4b1 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004223f8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c239 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000401933 : mov byte ptr [rip + 0x23899e], 1 ; ret
0x0000000000407824 : mov cl, -0x1f ; jl 0x407815 ; ret 9
0x0000000000436cb3 : mov cl, -0x63 ; cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x000000000043563b : mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000435b38 : mov cl, 0x2c ; push rsp ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x00000000004243ef : mov cl, ch ; ret 0
0x0000000000424552 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000402811 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e731 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004327e3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000436862 : mov dh, 0x5e ; leave ; xchg eax, esi ; ret
0x0000000000412b85 : mov dh, 0x75 ; ret 0xf239
0x00000000004332b5 : mov dl, -0x47 ; ret
0x0000000000425c50 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004358f4 : mov dr0, word ptr [rdi - 0x15] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000416c1d : mov dword ptr [0x63a2e8], edi ; pop rbp ; ret
0x000000000041a6f7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004244fd : mov dword ptr [rax + rdi*8], edx ; pop rbp ; ret
0x000000000041a4bb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041a62f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040241b : mov dword ptr [rbp - 0x28], eax ; jmp 0x4026dd
0x0000000000401cfe : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401936 : mov dword ptr [rbx], esp ; add byte ptr [rcx], al ; ret
0x000000000041a8ad : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fc5c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000423de8 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000042ab5e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000436a5b : mov eax, 0x16f051 ; movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x436a96 ; ret 0x715e
0x0000000000401f1e : mov eax, 0x4e00422d ; ret 0x8589
0x0000000000401f69 : mov eax, 0x4e00432d ; ret 0x8589
0x0000000000415629 : mov eax, 0x8b48b5fa ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000043636d : mov eax, 0x9c530020 ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000041a3af : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000427e9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041488f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004173c3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000431f48 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427b7f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041725c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000427f9e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427870 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417cf1 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041a6fa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000433edd : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417750 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427f5a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000428395 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a2a4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a3ac : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041a4b5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042816f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403416 : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000041a631 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042374b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004144ee : mov eax, dword ptr [rbp - 0x60] ; add rsp, 8 ; pop rbp ; ret
0x00000000004323ba : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000428a90 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043225e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000436c03 : mov ebp, 0xbc7504e3 ; ret
0x000000000040195b : mov ebp, esp ; call rax
0x00000000004018c1 : mov ebp, esp ; ja 0x4018cc ; pop rbp ; ret
0x00000000004356f4 : mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x435779 ; ret
0x0000000000435b37 : mov ebx, 0xab542cb1 ; ret 0x3f90
0x0000000000436bc3 : mov ebx, 0xf006b0cc ; ret
0x00000000004373f1 : mov ebx, dword ptr [rip - 0x620d4159] ; ret 0x766e
0x0000000000402139 : mov ecx, 0xe9000003 ; ret 1
0x000000000041a4b8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000436b6b : mov ecx, edi ; ret
0x0000000000416a19 : mov ecx, gs ; ret 0
0x0000000000401955 : mov edi, 0x639e20 ; mov rbp, rsp ; call rax
0x00000000004018d2 : mov edi, 0x63a2a0 ; jmp rax
0x0000000000401912 : mov edi, 0x63a2a0 ; jmp rdx
0x0000000000435623 : mov edi, 0x6f2a38a6 ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x000000000042ab58 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000434487 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000438869 : mov edi, esp ; jmp qword ptr [rax]
0x0000000000434486 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004101a4 : mov edx, dword ptr [rbp - 0x38] ; call 0x40c475
0x0000000000431ce4 : mov esi, dword ptr [rbp - 0x20] ; call 0x401879
0x00000000004101a0 : mov esi, dword ptr [rbp - 0x30] ; mov rdx, qword ptr [rbp - 0x38] ; call 0x40c479
0x0000000000401910 : mov esi, eax ; mov edi, 0x63a2a0 ; jmp rdx
0x000000000042e734 : mov esp, ebp ; pop rbp ; ret
0x0000000000416c1c : mov qword ptr [0x63a2e8], rdi ; pop rbp ; ret
0x00000000004244fc : mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x000000000041a8ac : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fc5b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000423de7 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000042ab5d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000415a0e : mov r12b, 0x2d ; movhps xmm5, qword ptr [rdi] ; ret 0x4589
0x0000000000401cff : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402daf : mov r8b, 0x2d ; ret
0x0000000000431b32 : mov r8b, 0x2d ; ret 0xa414
0x0000000000401f1d : mov r8d, 0x4e00422d ; ret 0x8589
0x0000000000401f68 : mov r8d, 0x4e00432d ; ret 0x8589
0x00000000004243ee : mov r9b, r13b ; ret 0
0x0000000000416a18 : mov r9d, gs ; ret 0
0x0000000000427e9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041488e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004173c2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000431f47 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427b7e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041725b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000427f9d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042786f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417cf0 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041774f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427f59 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000428394 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a2a3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a3ab : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042374a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004144ed : mov rax, qword ptr [rbp - 0x60] ; add rsp, 8 ; pop rbp ; ret
0x000000000040195a : mov rbp, rsp ; call rax
0x00000000004018c0 : mov rbp, rsp ; ja 0x4018cd ; pop rbp ; ret
0x00000000004101a3 : mov rdx, qword ptr [rbp - 0x38] ; call 0x40c476
0x000000000040190f : mov rsi, rax ; mov edi, 0x63a2a0 ; jmp rdx
0x000000000042e733 : mov rsp, rbp ; pop rbp ; ret
0x000000000042353a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042353b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000420c8c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043352e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004042b0 : movabs byte ptr [0x940f000000020063], al ; ret 0xd284
0x0000000000415a11 : movhps xmm5, qword ptr [rdi] ; ret 0x4589
0x0000000000415b1a : movhps xmm5, qword ptr [rdi] ; ret 0x8ee9
0x0000000000415b9e : movhps xmm5, qword ptr [rdi] ; ret 0xae9
0x0000000000426afc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x427076
0x0000000000432a8d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000436a60 : movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x436a91 ; ret 0x715e
0x000000000040c087 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004358f7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000402810 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e730 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004327e2 : movzx eax, al ; pop rbp ; ret
0x0000000000424551 : movzx eax, cl ; pop rbp ; ret
0x0000000000424ad1 : nop ; add rsp, 0x100 ; pop rbp ; ret
0x00000000004344a8 : nop dword ptr [rax + rax] ; ret
0x00000000004228a7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043908d : or byte ptr [rax], al ; add byte ptr [rax], ah ; test al, -2 ; jmp qword ptr [rax]
0x000000000043908c : or byte ptr [rax], r8b ; add byte ptr [rax], ah ; test al, -2 ; jmp qword ptr [rax]
0x0000000000436bc1 : or byte ptr [rbx + rdi*4 - 0xff94f34], ch ; ret
0x0000000000405757 : or byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8041
0x0000000000435a94 : or dl, byte ptr [rsi + 0x6d] ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x00000000004261a7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000043787e : or eax, 0x28844f00 ; ret 0xdf30
0x000000000040d73b : or eax, 0x4cf165ba ; ret 0x3d48
0x0000000000436dc3 : or eax, 0xe4b786e ; xchg eax, esi ; sbb al, -0x7c ; ret
0x000000000043938d : or eax, dword ptr [rax] ; add al, dh ; in al, -2 ; call rdx
0x0000000000423931 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d73a : or ecx, dword ptr [rip + 0x4cf165ba] ; ret 0x3d48
0x000000000043636c : or edi, dword ptr [rax - 0x63acffe0] ; fsub qword ptr [rcx] ; ret 0xc591
0x00000000004244fa : or edx, esi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x000000000043938c : or r8d, dword ptr [rax] ; add al, dh ; in al, -2 ; call rdx
0x00000000004244f9 : or rdx, rsi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x0000000000419d67 : out -0x47, eax ; ret 0x614e
0x0000000000435a98 : out -0x61, al ; cmp al, 0xd ; ret 0x43c5
0x0000000000408162 : out -0x7c, eax ; rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x00000000004354a1 : out 0x1f, eax ; idiv ah ; ret
0x000000000040cde1 : out 0x79, al ; ret
0x000000000043638c : out 0x7d, eax ; and byte ptr [rax], al ; ret
0x000000000043298f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004327df : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435286 : out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000436029 : out dx, eax ; in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x00000000004355b2 : out dx, eax ; ret
0x0000000000435c11 : out dx, eax ; std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x00000000004361d4 : outsb dx, byte ptr [rsi] ; jmp rbx
0x0000000000435c14 : outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000435627 : outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x00000000004355ab : pcmpeqw mm3, qword ptr [rdx - 0x69] ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000000000040dda2 : pop r10 ; ret
0x000000000043449c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043449e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422bd2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004344a0 : pop r14 ; pop r15 ; ret
0x0000000000410270 : pop r14 ; pop rbp ; ret
0x0000000000422bd4 : pop r15 ; pop rbp ; ret
0x00000000004344a2 : pop r15 ; ret
0x0000000000433008 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000435282 : pop rax ; jo 0x435235 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000435281 : pop rax ; jo 0x435236 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000435954 : pop rax ; ret
0x0000000000435be5 : pop rax ; ret 0x23b4
0x0000000000401932 : pop rbp ; mov byte ptr [rip + 0x23899e], 1 ; ret
0x00000000004018d1 : pop rbp ; mov edi, 0x63a2a0 ; jmp rax
0x000000000040190e : pop rbp ; mov rsi, rax ; mov edi, 0x63a2a0 ; jmp rdx
0x0000000000436bc0 : pop rbp ; or byte ptr [rbx + rdi*4 - 0xff94f34], ch ; ret
0x000000000043449b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043449f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004018c5 : pop rbp ; ret
0x0000000000422bd1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041026f : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004081eb : pop rbx ; pop rbp ; ret
0x00000000004367e9 : pop rbx ; ret 0x517e
0x00000000004332b4 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000434c54 : pop rcx ; ret
0x0000000000437734 : pop rcx ; wait ; ret 0x7982
0x0000000000436abc : pop rcx ; xchg dword ptr [rsi], edx ; add byte ptr [rbp + 0x2e], ch ; ret
0x0000000000422bd5 : pop rdi ; pop rbp ; ret
0x00000000004344a3 : pop rdi ; ret
0x000000000043610b : pop rdi ; ret 0x2692
0x00000000004336fb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041559f : pop rdx ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000040dd4f : pop rdx ; ret
0x00000000004355ad : pop rdx ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000000000042a5fb : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000436863 : pop rsi ; leave ; xchg eax, esi ; ret
0x0000000000436c02 : pop rsi ; mov ebp, 0xbc7504e3 ; ret
0x0000000000422bd3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004344a1 : pop rsi ; pop r15 ; ret
0x0000000000410271 : pop rsi ; pop rbp ; ret
0x000000000043449d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041cae2 : pop rsp ; ret
0x0000000000436cb4 : popfq ; cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x000000000041a0df : popfq ; jae 0x41a0e9 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004373f6 : popfq ; ret 0x766e
0x000000000041337a : popfq ; ret 0xd284
0x000000000043573d : push 0x25e9006d ; call rcx
0x00000000004361d2 : push qword ptr [rcx + 0x6e] ; jmp rbx
0x00000000004222cf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000040b261 : push qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004356f2 : push r12 ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x43577b ; ret
0x0000000000414c01 : push rax ; hlt ; ret 0x8589
0x0000000000401d04 : push rax ; pop rbp ; ret
0x0000000000437808 : push rax ; ret
0x000000000042745b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000427d63 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000042fda8 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042acbe : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042cc75 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040c084 : push rbp ; fsubr st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000420408 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004205ee : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000420694 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004206c2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000420790 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000420926 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000042c4b0 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000401954 : push rbp ; mov edi, 0x639e20 ; mov rbp, rsp ; call rax
0x000000000041562e : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000410b0a : push rbp ; test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000434c4d : push rbx ; jne 0x434c77 ; and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x0000000000436370 : push rbx ; pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000415725 : push rcx ; hlt ; ret 0x62b9
0x0000000000414f11 : push rcx ; hlt ; ret 0x8589
0x00000000004157af : push rcx ; hlt ; ret 0x9b9
0x00000000004358f1 : push rcx ; xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000435a95 : push rsi ; insd dword ptr [rdi], dx ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x00000000004356f3 : push rsp ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x43577a ; ret
0x0000000000435622 : push rsp ; mov edi, 0x6f2a38a6 ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000435b3a : push rsp ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x0000000000436371 : pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000435c13 : pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000429e83 : pushfq ; ret 0x8445
0x000000000041464e : pushfq ; ret 0xbc47
0x00000000004133f6 : pushfq ; ret 0xd284
0x0000000000436ab9 : rcl dword ptr [rbx + 0x16875925], 0 ; insd dword ptr [rdi], dx ; ret
0x0000000000436641 : rcl dword ptr [rsi + 0x1ea0f6c4], 0xe ; ret
0x0000000000401451 : ret
0x0000000000403737 : ret 0
0x0000000000429029 : ret 0x10
0x000000000042d5df : ret 0x110a
0x000000000040a679 : ret 0x13
0x0000000000435f32 : ret 0x1685
0x000000000043685d : ret 0x18
0x0000000000426067 : ret 0x1ce9
0x0000000000435b76 : ret 0x1dd9
0x00000000004331bb : ret 0x2030
0x0000000000435944 : ret 0x206d
0x000000000042af62 : ret 0x2106
0x0000000000401832 : ret 0x2389
0x0000000000401632 : ret 0x238a
0x0000000000435be7 : ret 0x23b4
0x000000000043610c : ret 0x2692
0x000000000041fde7 : ret 0x2a
0x0000000000423106 : ret 0x2c1
0x0000000000435ef2 : ret 0x2c60
0x00000000004176c1 : ret 0x30
0x00000000004044ca : ret 0x3454
0x00000000004369a6 : ret 0x399f
0x0000000000405753 : ret 0x3b48
0x000000000040d740 : ret 0x3d48
0x0000000000435b3c : ret 0x3f90
0x0000000000436b41 : ret 0x3fd9
0x0000000000405551 : ret 0x40
0x00000000004373c4 : ret 0x4152
0x0000000000435a9c : ret 0x43c5
0x000000000041cd4a : ret 0x43fa
0x0000000000415990 : ret 0x4589
0x000000000040f2d5 : ret 0x4881
0x00000000004360b5 : ret 0x496d
0x00000000004369f7 : ret 0x4ae4
0x0000000000421a60 : ret 0x4ae8
0x0000000000435768 : ret 0x4b96
0x0000000000435101 : ret 0x4f72
0x00000000004367ea : ret 0x517e
0x00000000004100e8 : ret 0x52e8
0x0000000000436ef7 : ret 0x56fd
0x0000000000414962 : ret 0x5bc5
0x0000000000432563 : ret 0x5e5
0x0000000000419b0f : ret 0x614e
0x0000000000415728 : ret 0x62b9
0x000000000040a95c : ret 0x6ee8
0x00000000004367b8 : ret 0x6fc7
0x0000000000436a63 : ret 0x715e
0x000000000040947d : ret 0x74e0
0x0000000000436d1a : ret 0x75a6
0x00000000004373f7 : ret 0x766e
0x0000000000425f44 : ret 0x76e8
0x0000000000424ea2 : ret 0x7961
0x0000000000437736 : ret 0x7982
0x0000000000410c50 : ret 0x7bdd
0x0000000000425f62 : ret 0x7d81
0x00000000004369bb : ret 0x7f7e
0x0000000000401d9f : ret 0x7fa7
0x000000000040575b : ret 0x8041
0x00000000004176cf : ret 0x8148
0x0000000000402348 : ret 0x8445
0x0000000000435561 : ret 0x84b1
0x0000000000401f23 : ret 0x8589
0x000000000041cbe0 : ret 0x891a
0x0000000000432b6c : ret 0x8934
0x000000000040780c : ret 0x8944
0x00000000004055ae : ret 0x8948
0x000000000040dc1c : ret 0x8981
0x0000000000428ad1 : ret 0x89b6
0x0000000000409233 : ret 0x89bf
0x0000000000411ce7 : ret 0x89c3
0x0000000000404e34 : ret 0x89e4
0x0000000000432b48 : ret 0x8b34
0x000000000040abff : ret 0x8b48
0x0000000000419ce8 : ret 0x8ce9
0x00000000004375b7 : ret 0x8e5
0x0000000000415b1d : ret 0x8ee9
0x0000000000437182 : ret 0x92d
0x000000000041507d : ret 0x93b5
0x00000000004023dd : ret 0x99b9
0x00000000004157b2 : ret 0x9b9
0x000000000040dfb7 : ret 0x9e91
0x000000000042dbb6 : ret 0xa
0x0000000000431b35 : ret 0xa414
0x00000000004046de : ret 0xa627
0x0000000000420ab5 : ret 0xa9b9
0x000000000041c532 : ret 0xade6
0x0000000000415ba1 : ret 0xae9
0x0000000000437747 : ret 0xaf5c
0x00000000004081cf : ret 0xb0
0x0000000000430736 : ret 0xb4e8
0x000000000041316e : ret 0xb613
0x000000000040e21f : ret 0xb63c
0x0000000000420220 : ret 0xb91a
0x0000000000428d8b : ret 0xb9b6
0x000000000042f9f0 : ret 0xbae8
0x00000000004145cb : ret 0xbc47
0x0000000000418dd3 : ret 0xbe9
0x000000000042a8be : ret 0xc
0x00000000004358f8 : ret 0xc0be
0x00000000004018f5 : ret 0xc148
0x0000000000436374 : ret 0xc591
0x0000000000423e35 : ret 0xc5e8
0x0000000000430a20 : ret 0xcae8
0x00000000004259ee : ret 0xcce8
0x0000000000403252 : ret 0xd284
0x00000000004354ae : ret 0xd300
0x00000000004222d3 : ret 0xd4e9
0x00000000004193d7 : ret 0xd549
0x0000000000436362 : ret 0xd9e9
0x00000000004379d6 : ret 0xdc85
0x00000000004316dd : ret 0xde8
0x0000000000437884 : ret 0xdf30
0x0000000000435fb7 : ret 0xdf32
0x0000000000436331 : ret 0xe066
0x000000000040d6a4 : ret 0xe280
0x00000000004355e9 : ret 0xe3fd
0x000000000040f357 : ret 0xe981
0x0000000000436347 : ret 0xe990
0x000000000040b0bc : ret 0xe9bf
0x0000000000413063 : ret 0xe9c3
0x0000000000405b4b : ret 0xe9e4
0x00000000004376d4 : ret 0xebbc
0x00000000004228ec : ret 0xee8
0x0000000000412b87 : ret 0xf239
0x0000000000420c95 : ret 0xf41
0x00000000004056b3 : ret 0xf48
0x0000000000436433 : ret 0xf718
0x0000000000415da8 : ret 0xf748
0x00000000004365ca : ret 0xf7f9
0x000000000040688f : ret 0xf980
0x000000000041965c : ret 0xfb94
0x000000000042e23a : ret 0xfd33
0x000000000040204c : ret 0xfd8c
0x00000000004092a1 : ret 0xff71
0x00000000004357a5 : ret 0xff99
0x000000000042040b : ret 0xff9f
0x0000000000421dae : ret 0xffa5
0x00000000004205f1 : ret 0xffbf
0x000000000042105b : ret 0xffc4
0x0000000000420697 : ret 0xffc5
0x00000000004206c5 : ret 0xffd5
0x0000000000420793 : ret 0xffd8
0x0000000000421101 : ret 0xffd9
0x0000000000420929 : ret 0xffe0
0x000000000041f9fe : ret 0xfffa
0x00000000004385f5 : ret 0xfffe
0x000000000040d7a1 : ret 0xffff
0x000000000040213e : ret 1
0x0000000000420f60 : ret 2
0x0000000000401f13 : ret 4
0x00000000004261d8 : ret 5
0x000000000040aecf : ret 8
0x0000000000407828 : ret 9
0x00000000004153a8 : rol bh, 1 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x0000000000429b74 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407808 : rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x0000000000413498 : rol byte ptr [rcx + 0x1c2], 1 ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000040db31 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004369b9 : rol dh, 1 ; ret 0x7f7e
0x000000000042454d : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004153a7 : rol r15b, 1 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x000000000041a4b6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040d9ab : ror byte ptr [r15], 1 ; xchg eax, edx ; ret 0xe280
0x00000000004018fc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40190b ; pop rbp ; ret
0x000000000042e732 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000402812 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000416ad7 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x416ae6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402c92 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041562f : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000041a4b7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040d9ac : ror byte ptr [rdi], 1 ; xchg eax, edx ; ret 0xe280
0x0000000000407bcf : ror dword ptr [rax - 0x75], -0x74 ; int 0x80
0x0000000000427d60 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000043594d : ror dword ptr [rdi], cl ; xchg dword ptr [rdx], esp ; ja 0x435963 ; pop rax ; ret
0x0000000000401935 : sahf ; mov dword ptr [rbx], esp ; add byte ptr [rcx], al ; ret
0x000000000043290c : sahf ; ret 0xd284
0x0000000000437378 : sal dword ptr [rbx + rcx*8 + 0x1017213f], cl ; add byte ptr [rdi], cl ; jmp rax
0x000000000042924e : salc ; ret
0x0000000000435d89 : sar byte ptr [rcx + 0xe], -0x7b ; ret
0x0000000000419d64 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x00000000004018fe : sar eax, 1 ; jne 0x401909 ; pop rbp ; ret
0x00000000004018fd : sar rax, 1 ; jne 0x40190a ; pop rbp ; ret
0x0000000000412a73 : sbb al, -0x72 ; fst qword ptr [rbx + 0xf45c084] ; ret 0x8944
0x0000000000436dc9 : sbb al, -0x7c ; ret
0x0000000000438864 : sbb al, 0 ; add byte ptr [rax], al ; clc ; mov edi, esp ; jmp qword ptr [rax]
0x00000000004356f7 : sbb bh, byte ptr [rdi + 0x79] ; ret
0x0000000000423569 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000436345 : sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000436b66 : sbb ch, byte ptr [rdi] ; adc eax, 0xf989d1eb ; ret
0x0000000000427943 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043678e : sbb dword ptr [rax], eax ; ret
0x0000000000420aae : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004373f2 : sbb eax, 0x9df2bea7 ; ret 0x766e
0x000000000043594c : sbb ebx, edx ; add byte ptr [r15 + 0x58077722], r8b ; ret
0x000000000040abfe : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000434115 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000434117 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000437803 : shr bl, 0x60 ; mov al, 0x20 ; push rax ; ret
0x0000000000436b6c : stc ; ret
0x0000000000435be0 : stc ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x0000000000438c72 : std ; call qword ptr [rsi]
0x000000000042aa13 : std ; inc edi ; in al, dx ; int1 ; ret
0x0000000000435c12 : std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000436d14 : sti ; add eax, 0x10d78564 ; ret 0x75a6
0x0000000000436430 : sti ; xor ch, byte ptr [rdx] ; ret 0xf718
0x0000000000438971 : stosb byte ptr [rdi], al ; cld ; call rdx
0x0000000000435fb1 : stosb byte ptr [rdi], al ; ret
0x0000000000435b3b : stosd dword ptr [rdi], eax ; ret 0x3f90
0x000000000041daf7 : sub al, 0x38 ; ret 0x8589
0x0000000000420ab3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000435b39 : sub al, 0x54 ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x000000000042f328 : sub al, 0x61 ; ret
0x0000000000435fae : sub al, byte ptr [rax] ; int1 ; stosb byte ptr [rdi], al ; ret
0x0000000000436cb6 : sub bh, byte ptr [rcx - 0x67] ; call rsi
0x0000000000439510 : sub ch, -2 ; call qword ptr [rbx]
0x0000000000435be1 : sub eax, 0x58ad9f63 ; ret 0x23b4
0x00000000004344dd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000436cb0 : sub esp, dword ptr [rdx - 0x66624ecf] ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x0000000000435fad : sub r8b, byte ptr [rax] ; int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004344dc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042a591 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000410b0b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000042747b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042f099 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000439091 : test al, -2 ; jmp qword ptr [rax]
0x0000000000419f46 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429fc8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042cadd : test al, 0x45 ; jmp 0x42cf39
0x0000000000410b29 : test al, 0x48 ; add esp, 0x1c0 ; pop rbp ; ret
0x000000000042374d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000427358 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000437880 : test byte ptr [r8], r13b ; ret 0xdf30
0x00000000004344aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415478 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000437881 : test byte ptr [rax], ch ; ret 0xdf30
0x0000000000402138 : test byte ptr [rcx - 0x16fffffd], bh ; ret 1
0x00000000004355aa : test byte ptr [rdi], 0x75 ; pop rdx ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000424050 : test byte ptr [rdi], dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004261a5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000435c16 : test ch, ah ; hlt ; ret
0x000000000042f691 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040dda7 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esi ; ret
0x00000000004152fa : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004155dd : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000410b0d : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000419d4a : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x00000000004153aa : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x00000000004157d9 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rbx]
0x00000000004155a4 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x0000000000427460 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004271c8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042e76c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000042ef5a : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042605f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x42602d ; ret 0x1ce9
0x000000000042f19d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000042ef2f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004093da : test dword ptr [rdi + rsi*8 - 0x7bf00001], edx ; ret
0x0000000000436ef1 : test dword ptr [rdx + 0x1a7c3b68], esi ; ret 0x56fd
0x000000000043025e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000419890 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x0000000000419820 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000435284 : test eax, 0x393aef6c ; ret
0x0000000000435a97 : test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x00000000004373ee : verw word ptr [rbp - 0x4158e275] ; popfq ; ret 0x766e
0x0000000000437735 : wait ; ret 0x7982
0x00000000004145ca : wait ; ret 0xbc47
0x0000000000439751 : xchg bh, bh ; call qword ptr [rsi]
0x000000000043563e : xchg byte ptr [rax], al ; ret
0x00000000004356f1 : xchg byte ptr [rcx + 0x54], cl ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x43577c ; ret
0x0000000000435950 : xchg dword ptr [rdx], esp ; ja 0x435960 ; pop rax ; ret
0x0000000000436abd : xchg dword ptr [rsi], edx ; add byte ptr [rbp + 0x2e], ch ; ret
0x0000000000438375 : xchg eax, ebp ; cld ; call rax
0x000000000040ac02 : xchg eax, ebp ; cmp bl, -1 ; dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000407a53 : xchg eax, ebp ; ret
0x0000000000402347 : xchg eax, ebp ; ret 0x8445
0x00000000004037a0 : xchg eax, ebp ; ret 0xd284
0x000000000042454c : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000434116 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000436aba : xchg eax, ebx ; and eax, 0x168759 ; insd dword ptr [rdi], dx ; ret
0x0000000000424912 : xchg eax, ebx ; ret 0x8445
0x000000000040b267 : xchg eax, ebx ; ret 0xd284
0x000000000041dadb : xchg eax, ecx ; ret
0x0000000000409232 : xchg eax, ecx ; ret 0x89bf
0x000000000040b0bb : xchg eax, ecx ; ret 0xe9bf
0x00000000004355ae : xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000414961 : xchg eax, edi ; ret 0x5bc5
0x00000000004367b7 : xchg eax, edi ; ret 0x6fc7
0x000000000040575a : xchg eax, edi ; ret 0x8041
0x0000000000403d03 : xchg eax, edi ; ret 0xd284
0x000000000042accf : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041dc2b : xchg eax, edx ; ret
0x0000000000403c6d : xchg eax, edx ; ret 0xd284
0x000000000040d6a3 : xchg eax, edx ; ret 0xe280
0x000000000043563d : xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x000000000040a0bd : xchg eax, esi ; ret
0x0000000000436dc8 : xchg eax, esi ; sbb al, -0x7c ; ret
0x000000000041aac3 : xchg eax, esp ; ret
0x00000000004027b2 : xchg eax, esp ; ret 0x8445
0x0000000000403251 : xchg eax, esp ; ret 0xd284
0x000000000043678a : xchg ebp, ecx ; mov al, -0x1c ; sbb dword ptr [rax], eax ; ret
0x000000000040815f : xlatb ; jrcxz 0x408134 ; out -0x7c, eax ; rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x0000000000434c53 : xlatb ; pop rcx ; ret
0x0000000000435911 : xlatb ; ret
0x0000000000435d2e : xor al, 0 ; ret
0x000000000042fdb8 : xor al, 0x41 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fc2c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004024e5 : xor byte ptr [rdx - 0x38ffff9d], ah ; fmul st(0) ; ret 0x7fa7
0x0000000000436431 : xor ch, byte ptr [rdx] ; ret 0xf718
0x000000000040d26e : xor ch, cl ; ret
0x0000000000436cb2 : xor dword ptr [rcx + 0x792a999d], esi ; cdq ; call rsi
0x0000000000423a67 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043602c : xor eax, 0x770028ef ; ret
0x00000000004358f2 : xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000435628 : xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000436bd0 : xor eax, dword ptr [rdi + 0x11] ; ret
0x000000000041a62d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
