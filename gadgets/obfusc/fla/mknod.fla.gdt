0x00000000004067f3 : adc al, -0x1d ; and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x0000000000410d09 : adc al, 0x25 ; ret
0x000000000041373b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000400884 : adc dword ptr [rax], eax ; sbb dword ptr [rax], eax ; nop ; ret 0x61
0x00000000004111be : adc eax, 0x1825148b ; ret 0x61
0x0000000000410df9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410d38 : add al, 0x25 ; ret
0x000000000040de8c : add al, 0x25 ; ret 0x41a3
0x0000000000400027 : add al, ah ; ret
0x000000000040092f : add al, al ; ret 0x61
0x0000000000403c68 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x000000000041aed5 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; ret
0x000000000041aeb5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xfffe
0x0000000000413033 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004008c9 : add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x61
0x00000000004076b2 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041aeb4 : add al, byte ptr fs:[rax] ; add byte ptr [rax], cl ; ret 0xfffe
0x000000000041b577 : add al, ch ; push -1 ; jmp rdx
0x00000000004008b7 : add al, cl ; ret 0x61
0x00000000004008ff : add al, dl ; ret 0x61
0x000000000041342e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000413196 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000403c6a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x0000000000419a8f : add bl, dh ; ret
0x0000000000411cfd : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x41a3
0x000000000040de89 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41a3
0x000000000040dc3c : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x41a3
0x0000000000411cfe : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x41a3
0x00000000004031be : add byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; nop ; ret 0x61
0x000000000040327e : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000400882 : add byte ptr [rax], al ; adc dword ptr [rax], eax ; sbb dword ptr [rax], eax ; nop ; ret 0x61
0x0000000000400025 : add byte ptr [rax], al ; add al, ah ; ret
0x0000000000400d1d : add byte ptr [rax], al ; add al, al ; ret 0x61
0x000000000041aeb2 : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add byte ptr [rax], cl ; ret 0xfffe
0x0000000000400d35 : add byte ptr [rax], al ; add al, cl ; ret 0x61
0x0000000000400d4d : add byte ptr [rax], al ; add al, dl ; ret 0x61
0x000000000041342c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000413194 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000419a8d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004031bc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; nop ; ret 0x61
0x000000000040327c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000400023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x0000000000400d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x61
0x0000000000400d33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x61
0x0000000000400d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x61
0x0000000000419a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x0000000000400d19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x61
0x0000000000400d31 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x61
0x0000000000400d49 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x61
0x0000000000400ce8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x61
0x0000000000400cea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x61
0x000000000040312e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000400cec : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x61
0x0000000000419a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410b3e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419179 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004190f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000417dbe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004039b9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040f9f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004008b1 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x61
0x0000000000419235 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000403768 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040613b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004154dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000408a4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403130 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041793d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041332a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000408a2f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040351b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040631d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041aeb1 : add byte ptr [rax], al ; add byte ptr [rdx + rax], ah ; add byte ptr [rax], cl ; ret 0xfffe
0x0000000000418a3d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000410dfb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410860 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004185f8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041373d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410db7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401303 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041b572 : add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; call 0xffffffffe341b4f0
0x000000000041b576 : add byte ptr [rax], al ; call 0xffffffffe341b4ec
0x000000000041b316 : add byte ptr [rax], al ; cmp byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x000000000041b436 : add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x000000000041b432 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x0000000000401379 : add byte ptr [rax], al ; jmp 0x401319
0x0000000000418a39 : add byte ptr [rax], al ; jmp 0x418a48
0x00000000004196a9 : add byte ptr [rax], al ; jmp 0x4196b8
0x0000000000416207 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004198b7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411d5a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411e8d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411fe9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eed : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411e01 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404549 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408319 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000400cee : add byte ptr [rax], al ; nop ; ret 0x61
0x0000000000403e97 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410b3f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410818 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000419a8e : add byte ptr [rax], al ; ret
0x000000000041b1f6 : add byte ptr [rax], al ; sub byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000041b437 : add byte ptr [rax], bh ; push -1 ; jmp qword ptr [rdi]
0x000000000041aed7 : add byte ptr [rax], ch ; ret
0x000000000041aeb7 : add byte ptr [rax], cl ; ret 0xfffe
0x0000000000410b40 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000410819 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041917b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004190f7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000417dc0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004039bb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040f9f3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000403ea5 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000041b573 : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; call 0xffffffffe341b4ef
0x00000000004008b3 : add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x61
0x000000000041347e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401788 : add byte ptr [rcx], al ; ret
0x000000000040092d : add byte ptr [rcx], bl ; add al, al ; ret 0x61
0x00000000004008b5 : add byte ptr [rcx], bl ; add al, cl ; ret 0x61
0x00000000004008fd : add byte ptr [rcx], bl ; add al, dl ; ret 0x61
0x000000000040092b : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x61
0x00000000004008cb : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x61
0x00000000004008fb : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x61
0x000000000041201a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419237 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040376a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040613d : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004154df : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000408a4f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403132 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041793f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041332c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000408a31 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040351d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040631f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041aeb3 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], cl ; ret 0xfffe
0x0000000000412179 : add cl, ch ; ret
0x0000000000418a3f : add cl, ch ; ret 0
0x00000000004076b4 : add cl, ch ; ret 1
0x0000000000403d4d : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x0000000000410db5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004114da : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400929 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x61
0x00000000004008f9 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x61
0x0000000000403ea7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004008f8 : add dword ptr gs:[rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x61
0x0000000000401784 : add eax, 0x21ab4e ; add ebx, esi ; ret
0x0000000000415aef : add eax, 0x53b80000 ; jrcxz 0x415b5f ; ret 0x8fb9
0x0000000000406ac1 : add eax, 0x58b80000 ; ret
0x0000000000416205 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000410d33 : add eax, 0x8d48ffff ; add al, 0x25 ; ret
0x000000000040174b : add eax, edx ; sar rax, 1 ; jne 0x40175c ; pop rbp ; ret
0x0000000000401789 : add ebx, esi ; ret
0x0000000000401a3b : add esp, 0x10 ; pop rbp ; ret
0x000000000041347c : add esp, 0x100 ; pop rbp ; ret
0x00000000004114d7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000419aeb : add esp, 0x18 ; ret
0x00000000004135ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000410863 : add esp, 0x20 ; pop rbp ; ret
0x00000000004180c3 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004162e1 : add esp, 0x30 ; pop rbp ; ret
0x00000000004160d5 : add esp, 0x380 ; pop rbp ; ret
0x0000000000403e93 : add esp, 0x3d0 ; pop rbp ; ret
0x00000000004046b7 : add esp, 0x40 ; pop rbp ; ret
0x0000000000407033 : add esp, 0x450 ; pop rbp ; ret
0x00000000004019f6 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404236 : add esp, 0x60 ; pop rbp ; ret
0x00000000004116bf : add esp, 0x70 ; pop rbp ; ret
0x0000000000411d2c : add esp, 0x80 ; pop rbp ; ret
0x0000000000416de2 : add esp, 0x90 ; pop rbp ; ret
0x00000000004080de : add esp, 0xa0 ; pop rbp ; ret
0x0000000000410814 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004071ed : add esp, 0xd0 ; pop rbp ; ret
0x0000000000407d26 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401306 : add esp, 8 ; ret
0x0000000000403d4c : add qword ptr [r8], rax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x000000000040174a : add rax, rdx ; sar rax, 1 ; jne 0x40175d ; pop rbp ; ret
0x0000000000401a3a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041347b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004114d6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000419aea : add rsp, 0x18 ; ret
0x00000000004135eb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000410862 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004180c2 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004162e0 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004160d4 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000403e92 : add rsp, 0x3d0 ; pop rbp ; ret
0x00000000004046b6 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000407032 : add rsp, 0x450 ; pop rbp ; ret
0x00000000004019f5 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404235 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004116be : add rsp, 0x70 ; pop rbp ; ret
0x0000000000411d2b : add rsp, 0x80 ; pop rbp ; ret
0x0000000000416de1 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004080dd : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000410813 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004071ec : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000407d25 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401305 : add rsp, 8 ; ret
0x00000000004067f5 : and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000041471b : and al, 0xffffffffffffffac ; ret 0x89cc
0x0000000000415cb4 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000403ea6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b574 : and al, 9 ; add byte ptr [rax], al ; call 0xffffffffe341b4ee
0x0000000000401787 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403f0f : and eax, 0x61c2e0 ; pop rbp ; ret
0x0000000000403f33 : and eax, 0x61c2e8 ; pop rbp ; ret
0x000000000040dc38 : call 0x411a89
0x000000000041b578 : call 0xffffffffe341b4ea
0x0000000000410859 : call 0xffffffffe90391a9
0x0000000000410858 : call 0xffffffffe90391aa
0x000000000040c29d : call 0xfffffffff7394834
0x0000000000417b85 : call 0xffffffffff46015a
0x000000000040edc9 : call 0xffffffffff55739b
0x000000000040edc8 : call 0xffffffffff55739c
0x000000000040edc9 : call 0xffffffffff55739d
0x000000000040edc8 : call 0xffffffffff55739e
0x0000000000419a69 : call qword ptr [r12 + rbx*8]
0x000000000040e156 : call qword ptr [rax]
0x000000000040fde5 : call qword ptr [rcx]
0x0000000000405533 : call qword ptr [rdi]
0x000000000040dd83 : call qword ptr [rdx]
0x000000000040dd1f : call qword ptr [rsi]
0x0000000000419a6a : call qword ptr [rsp + rbx*8]
0x00000000004017ad : call rax
0x000000000040c53a : call rbx
0x00000000004031e5 : call rdi
0x0000000000402fa6 : call rdx
0x0000000000413434 : call rsi
0x0000000000401d08 : call rsp
0x00000000004190fc : cdq ; ret
0x0000000000411e90 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004169d2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004183d0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040174f : clc ; jne 0x401758 ; pop rbp ; ret
0x0000000000403ec7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ebc : clc ; pop rbp ; ret
0x0000000000401a67 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407046 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407049 : cld ; pop rbp ; ret
0x000000000040ea1d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000410d32 : cli ; add eax, 0x8d48ffff ; add al, 0x25 ; ret
0x00000000004036a4 : cmp ah, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041718d : cmp al, -0x2a ; ret
0x00000000004031c1 : cmp al, 0x25 ; nop ; ret 0x61
0x000000000040dc3f : cmp al, 0x25 ; ret 0x41a3
0x000000000041b318 : cmp byte ptr [rdi - 1], ah ; jmp qword ptr [rdx]
0x000000000041b438 : cmp byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x000000000040170d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401720 ; pop rbp ; ret
0x0000000000401301 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000410cf4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000418bfb : cwde ; js 0x418ba5 ; ret
0x0000000000418c42 : cwde ; js 0x418bec ; ret
0x0000000000418c7c : cwde ; js 0x418c26 ; ret
0x0000000000410d35 : dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x00000000004018e1 : dec dword ptr [rax - 0x75] ; xor al, 0x25 ; nop ; ret 0x61
0x0000000000403eb8 : dec dword ptr [rax - 0x77] ; jge 0x403ebb ; pop rbp ; ret
0x000000000040358a : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ebc2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040eecd : dec dword ptr [rax - 0x7f] ; ret 2
0x00000000004103d4 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004076ae : dec dword ptr [rdi] ; test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000412173 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040df08 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041793b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000403519 : enter 4, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407f7d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416444 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411d09 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413d34 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000419a6c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a39 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041852c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401720 : hlt ; pop rbp ; mov edi, 0x61c268 ; jmp rax
0x0000000000412ace : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040e379 : in al, -0x7f ; ret 0xff9f
0x000000000040e55f : in al, -0x7f ; ret 0xffbf
0x000000000040e605 : in al, -0x7f ; ret 0xffc5
0x00000000004067f8 : in al, -0x7f ; ret 0xffd0
0x000000000040e633 : in al, -0x7f ; ret 0xffd5
0x000000000040e701 : in al, -0x7f ; ret 0xffd8
0x000000000040e897 : in al, -0x7f ; ret 0xffe0
0x00000000004031dd : in al, -1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x000000000041b434 : in al, 7 ; add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x00000000004162df : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041673f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040842a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041620b : in al, dx ; pop rbp ; ret
0x0000000000403ea3 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000407043 : in eax, -0x77 ; jge 0x40704b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411d73 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004192fb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f9ef : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040dfb1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041059a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402f84 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000406875 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000406eb4 : inc dword ptr [rcx] ; jmp 0x407043
0x00000000004114a8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004031df : inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x00000000004076b1 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004008b0 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x61
0x000000000040ab4f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040e18f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401713 : ja 0x40171a ; pop rbp ; ret
0x000000000040171f : je 0x40171d ; pop rbp ; mov edi, 0x61c268 ; jmp rax
0x0000000000403ebb : jge 0x403eb8 ; pop rbp ; ret
0x0000000000403ec6 : jge 0x403ec7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407045 : jge 0x407049 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411d76 : jge 0x411d73 ; pop rbp ; ret
0x00000000004125e8 : jge 0x4125ff ; ret
0x0000000000412ad3 : jge 0x412aea ; ret
0x0000000000419869 : jge 0x419863 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004124bc : jl 0x4124d3 ; ret
0x000000000040137b : jmp 0x401317
0x0000000000403755 : jmp 0x403ea2
0x0000000000406e83 : jmp 0x407041
0x0000000000406abf : jmp 0x407042
0x000000000040db3d : jmp 0x410823
0x00000000004105d1 : jmp 0x410825
0x000000000040de85 : jmp 0x410826
0x0000000000410da9 : jmp 0x410dc8
0x0000000000412acd : jmp 0x413045
0x0000000000415dd1 : jmp 0x4160e3
0x0000000000418a3b : jmp 0x418a46
0x00000000004196ab : jmp 0x4196b6
0x0000000000416a0e : jmp 0xffffffffb7036dda
0x0000000000418bfa : jmp 0xffffffffc3e6049b
0x000000000040dc5d : jmp qword ptr [rax]
0x000000000040edcf : jmp qword ptr [rbx]
0x00000000004078d5 : jmp qword ptr [rcx]
0x000000000041ad9b : jmp qword ptr [rdi]
0x0000000000410cf5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040c2a6 : jmp qword ptr [rdx]
0x000000000040ed5f : jmp qword ptr [rsi]
0x0000000000401727 : jmp rax
0x0000000000406dd8 : jmp rbx
0x0000000000403c70 : jmp rdi
0x0000000000401767 : jmp rdx
0x000000000040f989 : jmp rsp
0x0000000000401750 : jne 0x401757 ; pop rbp ; ret
0x00000000004114a6 : jne 0x4114af ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004116c1 : jo 0x411722 ; ret
0x00000000004117e4 : jo 0x411845 ; ret
0x000000000041191e : jo 0x41197f ; ret
0x0000000000413ddc : jo 0x413e3d ; ret
0x00000000004183d4 : jo 0x418435 ; ret
0x00000000004145e8 : jrcxz 0x41464e ; ret 0x8589
0x000000000041463c : jrcxz 0x4146a2 ; ret 0x8589
0x0000000000415af4 : jrcxz 0x415b5a ; ret 0x8fb9
0x0000000000415d1f : jrcxz 0x415d85 ; ret 0x8fb9
0x0000000000410816 : js 0x41082a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000418bfc : js 0x418ba4 ; ret
0x0000000000418c43 : js 0x418beb ; ret
0x0000000000418c7d : js 0x418c25 ; ret
0x00000000004146c8 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x0000000000415cb5 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000407d28 : loopne 0x407d2f ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004087ee : loopne 0x4087f7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413b20 : loopne 0x413b29 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413f2c : loopne 0x413f7c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000413f2b : loopne 0x413f7d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000407965 : mov ah, -0x17 ; ret
0x0000000000401c10 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000417b5a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403ea4 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004089ab : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041894d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000418afd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004192f9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041201c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403f31 : mov byte ptr [0x61c2e8], al ; pop rbp ; ret
0x0000000000410368 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004111bd : mov byte ptr [rip + 0x1825148b], dl ; ret 0x61
0x0000000000401783 : mov byte ptr [rip + 0x21ab4e], 1 ; ret
0x00000000004111bc : mov byte ptr fs:[rip + 0x1825148b], dl ; ret 0x61
0x000000000041b879 : mov ch, -1 ; jmp rax
0x0000000000403ea9 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000419425 : mov dl, -0x47 ; ret
0x0000000000403f0d : mov dword ptr [0x61c2e0], edi ; pop rbp ; ret
0x0000000000408667 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040842b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040859f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401c0e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415dce : mov dword ptr [rbp - 0x7c], eax ; jmp 0x4160e6
0x0000000000401a37 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a65 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407044 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403ec5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403eba : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040881d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411302 : mov eax, 0x18250c8b ; ret 0x61
0x000000000040831f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046b3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413b4f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040454c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004162dd : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416209 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000413f6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413840 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040866a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000413f2a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408214 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040831c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408425 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004085a1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004116bb : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041852a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407047 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004169d0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004183ce : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ec9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411d5c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411e8f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411feb : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eef : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411e03 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004017ab : mov ebp, esp ; call rax
0x0000000000401711 : mov ebp, esp ; ja 0x40171c ; pop rbp ; ret
0x0000000000407042 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411d72 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000408428 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004017a5 : mov edi, 0x61be20 ; mov rbp, rsp ; call rax
0x0000000000401722 : mov edi, 0x61c268 ; jmp rax
0x0000000000401762 : mov edi, 0x61c268 ; jmp rdx
0x0000000000419a67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000419a66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401760 : mov esi, eax ; mov edi, 0x61c268 ; jmp rdx
0x0000000000403f0c : mov qword ptr [0x61c2e0], rdi ; pop rbp ; ret
0x0000000000403ec4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403eb9 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040881c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407964 : mov r12b, -0x17 ; ret
0x0000000000401c0f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004070aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046b2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413b4e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040454b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000413f6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041383f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413f29 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408213 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040831b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004116ba : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ec8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004017aa : mov rbp, rsp ; call rax
0x0000000000401710 : mov rbp, rsp ; ja 0x40171d ; pop rbp ; ret
0x0000000000411d71 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040175f : mov rsi, rax ; mov edi, 0x61c268 ; jmp rdx
0x00000000004114aa : mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004114ab : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040693a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ebfc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041969e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004031dc : movabs al, byte ptr [0xffff7485c7ffffe4] ; call rdi
0x0000000000412acc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x413046
0x0000000000418bfd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000403ea8 : movzx eax, al ; pop rbp ; ret
0x000000000041201b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000400888 : nop ; ret 0x61
0x0000000000419a88 : nop dword ptr [rax + rax] ; ret
0x0000000000410817 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411d01 : or al, 0x25 ; ret 0x41a3
0x0000000000406319 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000406137 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000041b575 : or dword ptr [rax], eax ; add al, ch ; push -1 ; jmp rdx
0x0000000000412177 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004118a1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418aff : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041894f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401701 : outsd dx, dword ptr [rsi] ; ret 0x61
0x0000000000419a7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419a7e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410b42 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419a80 : pop r14 ; pop r15 ; ret
0x0000000000410b44 : pop r15 ; pop rbp ; ret
0x0000000000419a82 : pop r15 ; ret
0x0000000000419178 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000040594f : pop rax ; ret
0x0000000000401782 : pop rbp ; mov byte ptr [rip + 0x21ab4e], 1 ; ret
0x0000000000401721 : pop rbp ; mov edi, 0x61c268 ; jmp rax
0x000000000040175e : pop rbp ; mov rsi, rax ; mov edi, 0x61c268 ; jmp rdx
0x0000000000419a7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419a7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401715 : pop rbp ; ret
0x0000000000410b41 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041081a : pop rbx ; pop rbp ; ret
0x0000000000419424 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000410b45 : pop rdi ; pop rbp ; ret
0x0000000000419a83 : pop rdi ; ret
0x000000000041986b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000410b43 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419a81 : pop rsi ; pop r15 ; ret
0x0000000000419a7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aa52 : pop rsp ; ret
0x0000000000419239 : popfq ; ret 0xd284
0x0000000000417e24 : push -0x17000003 ; ret
0x000000000041b439 : push -1 ; jmp qword ptr [rdi]
0x000000000041b579 : push -1 ; jmp rdx
0x00000000004113ec : push 0x25148d48 ; ret
0x000000000041023f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004019f8 : push rax ; pop rbp ; ret
0x000000000041342b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000413d33 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040e378 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040e55e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040e604 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004067f7 : push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000040e632 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040e700 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040e896 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000411301 : push rbp ; mov eax, 0x18250c8b ; ret 0x61
0x00000000004017a4 : push rbp ; mov edi, 0x61be20 ; mov rbp, rsp ; call rax
0x0000000000411d70 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000400928 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x61
0x000000000041463b : push rbx ; jrcxz 0x4146a3 ; ret 0x8589
0x0000000000415af3 : push rbx ; jrcxz 0x415b5b ; ret 0x8fb9
0x0000000000415d1e : push rbx ; jrcxz 0x415d86 ; ret 0x8fb9
0x00000000004058fb : push rdi ; ret
0x00000000004145e7 : push rdx ; jrcxz 0x41464f ; ret 0x8589
0x0000000000417dc3 : pushfq ; ret 0x8445
0x000000000040376c : pushfq ; ret 0xd284
0x000000000040613f : pushfq ; ret 0xe280
0x0000000000400029 : ret
0x0000000000410cf9 : ret 0
0x0000000000416f69 : ret 0x10
0x0000000000414257 : ret 0x1a
0x000000000040f9d0 : ret 0x1ae8
0x000000000041932b : ret 0x2030
0x0000000000401582 : ret 0x21ab
0x0000000000401382 : ret 0x21ac
0x000000000040dd57 : ret 0x2a
0x0000000000411076 : ret 0x2c1
0x0000000000414117 : ret 0x3bef
0x000000000040dc41 : ret 0x41a3
0x000000000040acba : ret 0x43fa
0x00000000004186d3 : ret 0x5e5
0x0000000000400889 : ret 0x61
0x00000000004057e3 : ret 0x83a1
0x0000000000402f88 : ret 0x8445
0x0000000000403302 : ret 0x8589
0x000000000040ab50 : ret 0x891a
0x0000000000418cdc : ret 0x8934
0x0000000000413d37 : ret 0x8948
0x0000000000416a11 : ret 0x89b6
0x00000000004146c9 : ret 0x89cc
0x0000000000418cb8 : ret 0x8b34
0x000000000040f9b5 : ret 0x8b48
0x0000000000415cb6 : ret 0x8bcc
0x0000000000415af6 : ret 0x8fb9
0x000000000040ea25 : ret 0xa9b9
0x000000000040a4a2 : ret 0xade6
0x000000000040315e : ret 0xb0
0x000000000040e190 : ret 0xb91a
0x0000000000416ccb : ret 0xb9b6
0x0000000000401745 : ret 0xc148
0x0000000000403b13 : ret 0xcf89
0x0000000000403135 : ret 0xd284
0x0000000000410243 : ret 0xd4e9
0x0000000000404e97 : ret 0xd58d
0x0000000000403bf1 : ret 0xd9e8
0x0000000000406140 : ret 0xe280
0x000000000041085c : ret 0xee8
0x000000000040ec05 : ret 0xf41
0x000000000040e37b : ret 0xff9f
0x000000000040fd1e : ret 0xffa5
0x000000000040e561 : ret 0xffbf
0x000000000040efcb : ret 0xffc4
0x000000000040e607 : ret 0xffc5
0x00000000004067fa : ret 0xffd0
0x000000000040e635 : ret 0xffd5
0x000000000040e703 : ret 0xffd8
0x000000000040f071 : ret 0xffd9
0x000000000040e899 : ret 0xffe0
0x000000000040d96e : ret 0xfffa
0x000000000041aeb9 : ret 0xfffe
0x000000000040338f : ret 1
0x00000000004076ca : ret 2
0x0000000000410357 : ret 4
0x00000000004121a8 : ret 5
0x0000000000410a40 : ret 8
0x0000000000403754 : retf ; jmp 0x403ea3
0x000000000040321c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417ab4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004071ef : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403e95 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004180c5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408426 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040174c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40175b ; pop rbp ; ret
0x00000000004112fe : ror byte ptr [rax - 0x75], 1 ; push rbp ; mov eax, 0x18250c8b ; ret 0x61
0x0000000000408427 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000413d30 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004154e1 : sahf ; ret 0xd284
0x000000000041718e : salc ; ret
0x000000000040174e : sar eax, 1 ; jne 0x401759 ; pop rbp ; ret
0x000000000040174d : sar rax, 1 ; jne 0x40175a ; pop rbp ; ret
0x000000000041aeb0 : sbb al, 0 ; add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add byte ptr [rax], cl ; ret 0xfffe
0x0000000000410d03 : sbb al, byte ptr [rbx - 0x72b73ea9] ; adc al, 0x25 ; ret
0x00000000004114d9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000413913 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000400886 : sbb dword ptr [rax], eax ; nop ; ret 0x61
0x000000000040ea1e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040631b : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000401786 : stosd dword ptr [rdi], eax ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401785 : stosq qword ptr [rdi], rax ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040ba67 : sub al, 0x38 ; ret 0x8589
0x000000000040ea23 : sub al, 0x38 ; ret 0xa9b9
0x000000000041b1f8 : sub byte ptr [rsi - 1], ah ; jmp qword ptr [rax]
0x000000000040de87 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41a3
0x000000000040631c : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000419af1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000419af0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041344b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000417f08 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004116bd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000413328 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000419a8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004076b0 : test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000412175 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000415c14 : test ch, cl ; ret
0x0000000000413430 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000413198 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004031e1 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x0000000000402fa2 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdx
0x0000000000403c6c : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x0000000000415c13 : test r13b, r9b ; ret
0x0000000000408a51 : xchg eax, ebp ; ret
0x0000000000402f87 : xchg eax, ebp ; ret 0x8445
0x0000000000403134 : xchg eax, ebp ; ret 0xd284
0x000000000040de86 : xchg eax, ebx ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41a3
0x000000000040ba4b : xchg eax, ecx ; ret
0x0000000000417941 : xchg eax, edi ; ret 0xd284
0x000000000040bb9b : xchg eax, edx ; ret
0x00000000004060c4 : xchg eax, edx ; ret 0x8445
0x000000000041332e : xchg eax, edx ; ret 0xd284
0x00000000004111bb : xchg eax, esi ; mov byte ptr fs:[rip + 0x1825148b], dl ; ret 0x61
0x00000000004113d2 : xchg eax, esi ; ret
0x0000000000408a33 : xchg eax, esp ; ret
0x000000000040f9f6 : xchg eax, esp ; ret 0x8445
0x000000000040351f : xchg eax, esp ; ret 0xd284
0x0000000000406321 : xchg eax, esp ; ret 0xe280
0x00000000004018e4 : xor al, 0x25 ; nop ; ret 0x61
0x00000000004119d7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040859d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
