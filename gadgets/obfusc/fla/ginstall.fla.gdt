0x0000000000434833 : adc al, -0x1d ; and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000047d95d : adc al, 0 ; add byte ptr [rax], al ; mov ebx, edi ; jmp qword ptr [rdi]
0x0000000000423f35 : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004548b0 : adc byte ptr [rax - 0x75], cl ; jge 0x454872 ; call rax
0x00000000004548af : adc byte ptr [rax - 0x75], cl ; jge 0x454873 ; call rax
0x0000000000454b89 : adc byte ptr [rax - 0x75], cl ; jge 0x454b4b ; call rax
0x0000000000454b88 : adc byte ptr [rax - 0x75], cl ; jge 0x454b4c ; call rax
0x0000000000477f66 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000477f57 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000477f56 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000047eb20 : adc byte ptr [rbx - 3], ch ; jmp rax
0x000000000040c109 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000458abd : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044befb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000477a2d : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000041d5fc : adc eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000043ef99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403b1b : adc eax, eax ; ret 0x8589
0x000000000040688f : adc eax, eax ; ret 0xa3b9
0x000000000041df02 : adc ebp, ecx ; ret 0xa
0x0000000000418d6f : adc esp, dword ptr [rcx] ; ret
0x0000000000418d6e : adc rsp, qword ptr [r9] ; ret
0x0000000000418dc6 : adc rsp, qword ptr [rcx] ; ret
0x000000000047cb1b : add ah, ah ; add eax, 0x1eb00000 ; cli ; call rbx
0x000000000047eb1b : add ah, ah ; and eax, 0x6b100000 ; std ; jmp rax
0x000000000047c9fb : add ah, al ; add al, 0 ; add byte ptr [rax], dl ; ret
0x000000000047c8fb : add ah, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x11], al ; clc ; call rsp
0x000000000047e8fb : add ah, al ; and eax, dword ptr [rax] ; add byte ptr [rax + 0x4e], ah ; std ; call qword ptr [rax]
0x000000000047d1fb : add ah, al ; or al, 0 ; add al, al ; mov dl, -6 ; call rdx
0x000000000047e1fb : add ah, al ; sbb al, 0 ; add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x000000000047c9fd : add al, 0 ; add byte ptr [rax], dl ; ret
0x000000000040bc0f : add al, 0 ; add cl, ch ; ret 1
0x000000000047db3c : add al, 0x16 ; add byte ptr [rax], al ; nop ; sbb edi, esp ; jmp qword ptr [rdx]
0x000000000042c0df : add al, 0x25 ; ret
0x000000000042aeb7 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004446c9 : add al, 0xf ; pushfq ; ret 0xe280
0x000000000041ad35 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000047cb3c : add al, 6 ; add byte ptr [rax], al ; jo 0x47cb68 ; cli ; call qword ptr [rbx]
0x000000000047e0df : add al, ah ; cld ; jmp qword ptr [rdi]
0x000000000047e39f : add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdi
0x000000000047d1ff : add al, al ; mov dl, -6 ; call rdx
0x000000000047cd7f : add al, al ; push rsi ; cli ; jmp qword ptr [rdi]
0x00000000004789c1 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000047c7bd : add al, byte ptr [rax] ; add al, dl ; ret
0x0000000000421883 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000042c0da : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000044b723 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004326fe : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042e554 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000422bab : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420c0b : add al, ch ; call qword ptr [rsi]
0x0000000000422d0b : add al, ch ; jg 0x422cb7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413247 : add al, ch ; ret
0x0000000000452a48 : add al, ch ; ret 0xfaf8
0x0000000000452bb8 : add al, ch ; ret 0xfaff
0x0000000000432648 : add al, ch ; ret 0xfd02
0x0000000000405e48 : add al, ch ; ret 0xffca
0x000000000047d07f : add al, dh ; popfq ; cli ; call qword ptr [rsi]
0x000000000047de7f : add al, dl ; cmp bh, ah ; jmp qword ptr [rsi]
0x000000000047c7bf : add al, dl ; ret
0x000000000040c0c4 : add bh, al ; in al, dx ; ret
0x000000000041a3cc : add bh, al ; les r13d, ptr [r15] ; in eax, dx ; ret
0x000000000042e111 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000446aff : add bh, al ; test dword ptr [rax - 0x2c000002], ecx ; ret 0x39aa
0x0000000000423af5 : add bh, al ; test dword ptr [rdi + rbp*8 - 0x2db50001], ebp ; ret
0x00000000004218de : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x00000000004212a9 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000044bb1e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044b886 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004484ff : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000448ad6 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000476889 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000478a1f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000477834 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004788e5 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000477e9d : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000476c7c : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000047e681 : add bh, ch ; jmp qword ptr [rbx]
0x000000000047901f : add bl, dh ; ret
0x000000000042e21a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000047dc5f : add byte ptr [rax + 0x1d], ah ; cld ; jmp qword ptr [rax]
0x000000000047dd7f : add byte ptr [rax + 0x1e], dh ; cld ; jmp qword ptr [rdx]
0x000000000047cb3f : add byte ptr [rax + 0x1f], dh ; cli ; call qword ptr [rbx]
0x000000000047e85f : add byte ptr [rax + 0x43], dl ; std ; call qword ptr [rax]
0x000000000047e8ff : add byte ptr [rax + 0x4e], ah ; std ; call qword ptr [rax]
0x000000000047e1bf : add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x000000000041dc0f : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x0000000000423fd6 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x0000000000423f8e : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000047dd7b : add byte ptr [rax + rbx], al ; add byte ptr [rax + 0x1e], dh ; cld ; jmp qword ptr [rdx]
0x000000000047cd7b : add byte ptr [rax + rcx], al ; add al, al ; push rsi ; cli ; jmp qword ptr [rdi]
0x000000000047c8ff : add byte ptr [rax - 0x11], al ; clc ; call rsp
0x000000000047d47f : add byte ptr [rax - 0x26], dl ; cli ; call rax
0x000000000047ca5b : add byte ptr [rax - 0x34800000], ah ; stc ; jmp qword ptr [rcx]
0x000000000047d19f : add byte ptr [rax - 0x52], dl ; cli ; call qword ptr [rsi]
0x000000000047ecdf : add byte ptr [rax - 0x5c], ah ; std ; call qword ptr [rdi]
0x000000000047d0bf : add byte ptr [rax - 0x5e], ah ; cli ; call qword ptr [rsi]
0x0000000000417d16 : add byte ptr [rax - 0x6bf10000], ah ; ret 0xd284
0x000000000042c0dc : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000042236d : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000454c91 : add byte ptr [rax - 0x75], cl ; jge 0x454c4b ; call rax
0x000000000040b31b : add byte ptr [rax - 0x77], cl ; call 0x4202ec73
0x0000000000444a8d : add byte ptr [rax - 0x77], cl ; jge 0x444a90 ; pop rbp ; ret
0x0000000000407974 : add byte ptr [rax - 0x77], cl ; push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000466afc : add byte ptr [rax - 0x77], cl ; ret 0x5be8
0x0000000000425fc3 : add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x0000000000405ba7 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000466a5b : add byte ptr [rax - 0x77], cl ; ret 0xfce8
0x000000000047cedf : add byte ptr [rax], ah ; pop rsi ; cli ; call qword ptr [rbx]
0x000000000047eb1e : add byte ptr [rax], al ; adc byte ptr [rbx - 3], ch ; jmp rax
0x000000000047c9f9 : add byte ptr [rax], al ; add ah, al ; add al, 0 ; add byte ptr [rax], dl ; ret
0x000000000047db3a : add byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rax], al ; nop ; sbb edi, esp ; jmp qword ptr [rdx]
0x000000000047cb3a : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; jo 0x47cb6a ; cli ; call qword ptr [rbx]
0x0000000000452bb6 : add byte ptr [rax], al ; add al, ch ; ret 0xfaff
0x000000000040c0c2 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret
0x000000000041a4bc : add byte ptr [rax], al ; add bh, al ; les r13d, ptr [r15] ; in eax, dx ; ret
0x000000000042e21b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004212a7 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000044bb1c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044b884 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000448ad4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000476887 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000478951 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000477e9b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000477ee5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000047901d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000423fd4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x0000000000423f8c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042236b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040b319 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; call 0x4202ec75
0x0000000000444a8b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x444a92 ; pop rbp ; ret
0x0000000000425fc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x0000000000405ba5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000047901b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400998 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040099a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000459559 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004059dc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406cea : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000444a8a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000441a8e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047901c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040099c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000044315b : add byte ptr [rax], al ; add byte ptr [rbx + 0x152dc045], cl ; ret 0x9b3e
0x0000000000408d73 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172dd045], cl ; in al, dx ; ret 0x8967
0x0000000000408dbe : add byte ptr [rax], al ; add byte ptr [rbx + 0x182dd045], cl ; in al, dx ; ret 0x8967
0x0000000000419b89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2f2dbc45], cl ; in eax, dx ; ret
0x000000000046b133 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000043ecde : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bb65 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432de845], cl ; ret
0x000000000042af21 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000040b82b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004592ee : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x0000000000443b20 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672de845], cl ; int1 ; ret
0x0000000000443c57 : add byte ptr [rax], al ; add byte ptr [rbx + 0x682de845], cl ; int1 ; ret
0x000000000042abaf : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x00000000004093ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x47d21bbb], cl ; salc ; ret
0x000000000040924d : add byte ptr [rax], al ; add byte ptr [rbx - 0x48d21bbb], cl ; salc ; ret
0x000000000041fa14 : add byte ptr [rax], al ; add byte ptr [rbx - 0x64d243bb], cl ; ret 0x8ffd
0x000000000046bba9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000046bb25 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000421d40 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6d237bb], cl ; cld ; ret
0x000000000044eb1f : add byte ptr [rax], al ; add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x0000000000429dd2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000041ea7c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x00000000004125d3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x000000000043202c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405f3b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004076b7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000432530 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405f29 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000044ebbd : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000469e44 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004087b6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043417b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000406357 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000436bed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004059de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422ce3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000428c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000424178 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000424094 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044ba1a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ad37 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004087d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425c90 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409dbc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000446df0 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000428e8f : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000047ca9a : add byte ptr [rax], al ; add eax, 0xd0300000 ; stc ; jmp qword ptr [rcx]
0x0000000000406cec : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ea96 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428585 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044befd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408a12 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428b3c : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402293 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e85a : add byte ptr [rax], al ; and al, 0x23 ; add byte ptr [rax], al ; push rax ; std ; call qword ptr [rax]
0x000000000047e95a : add byte ptr [rax], al ; and al, 0x24 ; add byte ptr [rax], al ; nop ; push rax ; std ; jmp qword ptr [rdi]
0x000000000047d45a : add byte ptr [rax], al ; and al, 0xf ; add byte ptr [rax], al ; sbb cl, -6 ; jmp rsi
0x000000000047ca5a : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; or bl, 0xf9 ; jmp qword ptr [rcx]
0x000000000047ce5a : add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; nop ; pop rdx ; cli ; jmp rcx
0x000000000047cede : add byte ptr [rax], al ; and byte ptr [rsi - 6], bl ; call qword ptr [rbx]
0x000000000047e67a : add byte ptr [rax], al ; and dword ptr [rax], r8d ; add byte ptr [rax], dh ; add bh, ch ; jmp qword ptr [rbx]
0x000000000044f42d : add byte ptr [rax], al ; call 0x402318
0x00000000004068d1 : add byte ptr [rax], al ; call 0x402b84
0x000000000047e41a : add byte ptr [rax], al ; in al, 0x1e ; add byte ptr [rax], al ; xor bl, al ; cld ; jmp rdx
0x000000000047eb1a : add byte ptr [rax], al ; in al, 0x25 ; add byte ptr [rax], al ; adc byte ptr [rbx - 3], ch ; jmp rax
0x000000000047cb1a : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; mov al, 0x1e ; cli ; call rbx
0x00000000004023e9 : add byte ptr [rax], al ; jmp 0x4022a9
0x000000000041fcf4 : add byte ptr [rax], al ; jmp 0x41fd87
0x0000000000428e8b : add byte ptr [rax], al ; jmp 0x428e9a
0x000000000046b469 : add byte ptr [rax], al ; jmp 0x46b478
0x000000000046c0d9 : add byte ptr [rax], al ; jmp 0x46c0e8
0x000000000047cb3e : add byte ptr [rax], al ; jo 0x47cb66 ; cli ; call qword ptr [rbx]
0x000000000047dd7e : add byte ptr [rax], al ; jo 0x47dda5 ; cld ; jmp qword ptr [rdx]
0x000000000047e0de : add byte ptr [rax], al ; loopne 0x47e14e ; cld ; jmp qword ptr [rdi]
0x000000000047e39e : add byte ptr [rax], al ; loopne 0x47e34e ; cld ; jmp rdi
0x000000000047cb1e : add byte ptr [rax], al ; mov al, 0x1e ; cli ; call rbx
0x000000000047cc9e : add byte ptr [rax], al ; mov al, 0x45 ; cli ; jmp qword ptr [rax]
0x000000000047e07e : add byte ptr [rax], al ; mov al, 0x67 ; cld ; jmp qword ptr [rdi]
0x0000000000453b7c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000453afd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000459151 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000044e9c7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000441b83 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000441a6a : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000046cb96 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044471a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044484d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004449a9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042245d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004447c1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000047d95f : add byte ptr [rax], al ; mov ebx, edi ; jmp qword ptr [rdi]
0x00000000004563b0 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x48] ; call 0x4025f7
0x0000000000444a8c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004282f9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042a5bc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004364b9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044fb9c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000046c84d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042236c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000047cada : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xdbf00000 ; stc ; jmp rbx
0x000000000047ceda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], ah ; pop rsi ; cli ; call qword ptr [rbx]
0x000000000047e1da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x000000000047e0da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add al, ah ; cld ; jmp qword ptr [rdi]
0x000000000047ce5e : add byte ptr [rax], al ; nop ; pop rdx ; cli ; jmp rcx
0x000000000047e95e : add byte ptr [rax], al ; nop ; push rax ; std ; jmp qword ptr [rdi]
0x000000000047db3e : add byte ptr [rax], al ; nop ; sbb edi, esp ; jmp qword ptr [rdx]
0x000000000047cb9e : add byte ptr [rax], al ; nop ; sub edi, edx ; call qword ptr [rcx]
0x000000000047d19a : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax - 0x52], dl ; cli ; call qword ptr [rsi]
0x000000000047ca5e : add byte ptr [rax], al ; or bl, 0xf9 ; jmp qword ptr [rcx]
0x000000000047cd7a : add byte ptr [rax], al ; or byte ptr [rax], r8b ; add al, al ; push rsi ; cli ; jmp qword ptr [rdi]
0x000000000047d07a : add byte ptr [rax], al ; or r8d, dword ptr [rax] ; add al, dh ; popfq ; cli ; call qword ptr [rsi]
0x000000000047c8fe : add byte ptr [rax], al ; out dx, eax ; clc ; call rsp
0x0000000000406ba3 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ecdf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041aca7 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b82c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047d19e : add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rsi]
0x000000000047e85e : add byte ptr [rax], al ; push rax ; std ; call qword ptr [rax]
0x000000000047901e : add byte ptr [rax], al ; ret
0x000000000040099e : add byte ptr [rax], al ; ret 3
0x000000000047de7e : add byte ptr [rax], al ; sar byte ptr [rdx], 1 ; cld ; jmp qword ptr [rsi]
0x000000000047dd7a : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rax + 0x1e], dh ; cld ; jmp qword ptr [rdx]
0x000000000047d45e : add byte ptr [rax], al ; sbb cl, -6 ; jmp rsi
0x000000000047de7a : add byte ptr [rax], al ; sbb dword ptr [rax], r8d ; add al, dl ; cmp bh, ah ; jmp qword ptr [rsi]
0x000000000047e1ba : add byte ptr [rax], al ; test byte ptr [rax + rax], bl ; add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x000000000047e8ba : add byte ptr [rax], al ; test byte ptr [rbx], ah ; add byte ptr [rax], al ; xor byte ptr [rdx - 3], cl ; call qword ptr [rbx]
0x000000000047ca9e : add byte ptr [rax], al ; xor al, dl ; stc ; jmp qword ptr [rcx]
0x000000000047e41e : add byte ptr [rax], al ; xor bl, al ; cld ; jmp rdx
0x000000000047e8be : add byte ptr [rax], al ; xor byte ptr [rdx - 3], cl ; call qword ptr [rbx]
0x000000000047e67e : add byte ptr [rax], al ; xor byte ptr [rdx], al ; std ; jmp qword ptr [rbx]
0x000000000047e67f : add byte ptr [rax], dh ; add bh, ch ; jmp qword ptr [rbx]
0x000000000047e41f : add byte ptr [rax], dh ; ret
0x000000000047ca9f : add byte ptr [rax], dh ; sar cl, 1 ; jmp qword ptr [rcx]
0x000000000047e8bf : add byte ptr [rax], dh ; std ; call qword ptr [rbx]
0x000000000047c9ff : add byte ptr [rax], dl ; ret
0x000000000047cadb : add byte ptr [rbp + rax - 0x24100000], ah ; stc ; jmp rbx
0x000000000047ca9b : add byte ptr [rbp + rax], ah ; add byte ptr [rax], dh ; sar cl, 1 ; jmp qword ptr [rcx]
0x000000000044311b : add byte ptr [rbx + 0x142dc045], cl ; ret 0x9b3e
0x000000000044315d : add byte ptr [rbx + 0x152dc045], cl ; ret 0x9b3e
0x0000000000408d75 : add byte ptr [rbx + 0x172dd045], cl ; in al, dx ; ret 0x8967
0x0000000000408dc0 : add byte ptr [rbx + 0x182dd045], cl ; in al, dx ; ret 0x8967
0x000000000042b585 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042b5c7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000419b49 : add byte ptr [rbx + 0x2e2dbc45], cl ; in eax, dx ; ret
0x0000000000419b8b : add byte ptr [rbx + 0x2f2dbc45], cl ; in eax, dx ; ret
0x0000000000444bbf : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x444ba7 ; ret
0x00000000004292ca : add byte ptr [rbx + 0x352dec45], cl ; sub al, -0x4c ; ret
0x00000000004292f6 : add byte ptr [rbx + 0x362dec45], cl ; sub al, -0x4c ; ret
0x00000000004563b1 : add byte ptr [rbx + 0x36e8b87d], cl ; ret 0xfffa
0x000000000046b135 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000043ece0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041aca8 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040bb67 : add byte ptr [rbx + 0x432de845], cl ; ret
0x000000000040bbfd : add byte ptr [rbx + 0x442de845], cl ; ret
0x0000000000418d69 : add byte ptr [rbx + 0x492dd445], cl ; adc esp, dword ptr [rcx] ; ret
0x0000000000418dc1 : add byte ptr [rbx + 0x4a2dd445], cl ; adc esp, dword ptr [rcx] ; ret
0x000000000047e8bb : add byte ptr [rbx + 0x4a300000], al ; std ; call qword ptr [rbx]
0x000000000042af23 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000044eb37 : add byte ptr [rbx + 0x5d2dd045], cl ; test al, -2 ; ret 0x4589
0x000000000040b82d : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004592f0 : add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x0000000000443b22 : add byte ptr [rbx + 0x672de845], cl ; int1 ; ret
0x0000000000443c59 : add byte ptr [rbx + 0x682de845], cl ; int1 ; ret
0x000000000042abb1 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000047e0db : add byte ptr [rbx + rbx + 0x67e00000], ah ; cld ; jmp qword ptr [rdi]
0x000000000047d0bb : add byte ptr [rbx + rcx - 0x5da00000], al ; cli ; call qword ptr [rsi]
0x000000000047d07b : add byte ptr [rbx + rcx], al ; add al, dh ; popfq ; cli ; call qword ptr [rsi]
0x00000000004093af : add byte ptr [rbx - 0x47d21bbb], cl ; salc ; ret
0x000000000040924f : add byte ptr [rbx - 0x48d21bbb], cl ; salc ; ret
0x000000000041fa16 : add byte ptr [rbx - 0x64d243bb], cl ; ret 0x8ffd
0x000000000046bbab : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000046bb27 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000421d42 : add byte ptr [rbx - 0x6d237bb], cl ; cld ; ret
0x000000000044eb21 : add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x0000000000429dd4 : add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000041ea7e : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x0000000000408eb7 : add byte ptr [rbx - 0x9f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408f25 : add byte ptr [rbx - 0xa74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408f9c : add byte ptr [rbx - 0xab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000047e85b : add byte ptr [rbx], ah ; add byte ptr [rax], al ; push rax ; std ; call qword ptr [rax]
0x000000000042123a : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004125d5 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x0000000000417d13 : add byte ptr [rcx + 0xa000ff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043202e : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405f3d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004076b9 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000463770 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000041dc12 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405f2b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000047de7b : add byte ptr [rcx + rbx], al ; add al, dl ; cmp bh, ah ; jmp qword ptr [rsi]
0x000000000047cedb : add byte ptr [rcx + rcx + 0x5e200000], ah ; cli ; call qword ptr [rbx]
0x000000000047ce5b : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; nop ; pop rdx ; cli ; jmp rcx
0x0000000000425172 : add byte ptr [rcx - 0xe76b], cl ; dec dword ptr [rax - 0x77] ; ret 0x8d89
0x000000000042d60f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047e67b : add byte ptr [rcx], al ; add byte ptr [rax], dh ; add bh, ch ; jmp qword ptr [rbx]
0x0000000000402b48 : add byte ptr [rcx], al ; ret
0x000000000044ebbf : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000448897 : add byte ptr [rdi + 0x3d], bh ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000047d45b : add byte ptr [rdi + rcx], ah ; add byte ptr [rax], al ; sbb cl, -6 ; jmp rsi
0x000000000047d47b : add byte ptr [rdi + rcx], al ; add byte ptr [rax - 0x26], dl ; cli ; call rax
0x000000000047ecdb : add byte ptr [rdi - 0x5ba00000], ah ; std ; call qword ptr [rdi]
0x00000000004449da : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000469e46 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004087b8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043417d : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000406359 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000436bef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004059e0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422ce5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000428c57 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042417a : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000424096 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044ba1c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ad39 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004087d9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425c92 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409dbe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000042891d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042aa3d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000047cb3b : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; jo 0x47cb69 ; cli ; call qword ptr [rbx]
0x000000000047e39b : add byte ptr [rsi + rbx], ah ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdi
0x000000000047d3bb : add byte ptr [rsi + rcx - 0x31100000], al ; cli ; call qword ptr [rdx]
0x000000000047db3b : add byte ptr [rsi + rdx], al ; add byte ptr [rax], al ; nop ; sbb edi, esp ; jmp qword ptr [rdx]
0x000000000047e1db : add byte ptr [rsp + rbx + 0x68600000], ah ; cld ; call qword ptr [rdx]
0x000000000047e1bb : add byte ptr [rsp + rbx + 0x68600000], al ; cld ; call qword ptr [rdx]
0x000000000047d19b : add byte ptr [rsp + rcx], ah ; add byte ptr [rax - 0x52], dl ; cli ; call qword ptr [rsi]
0x000000000047e95b : add byte ptr [rsp], ah ; add byte ptr [rax], al ; nop ; push rax ; std ; jmp qword ptr [rdi]
0x0000000000452376 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000424008 : add ch, cl ; ret 1
0x0000000000426115 : add cl, ch ; ret
0x000000000041915a : add cl, ch ; ret 0
0x000000000040bc11 : add cl, ch ; ret 1
0x0000000000428e91 : add cl, ch ; ret 2
0x000000000042602b : add dh, 0 ; xor bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000043049a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000452a46 : add dword ptr [rax], eax ; add al, ch ; ret 0xfaf8
0x000000000041a3ca : add dword ptr [rax], eax ; add bh, al ; les r13d, ptr [r15] ; in eax, dx ; ret
0x000000000042e10f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043ef55 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004068cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x402b86
0x000000000041aca6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040bbfb : add dword ptr [rax], eax ; add byte ptr [rbx + 0x442de845], cl ; ret
0x000000000043f67a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004520e8 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000419158 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000422d95 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000043068b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422ceb : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x000000000042255b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004072bc : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000042a981 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000044be30 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041673f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422689 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407a9c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428c77 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004082c4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041696e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000417c25 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000047cb1d : add eax, 0x1eb00000 ; cli ; call rbx
0x0000000000402b44 : add eax, 0x27d9ce ; add ebx, esi ; ret
0x0000000000434b01 : add eax, 0x58b80000 ; ret
0x000000000042aa3c : add eax, 0x5c0f6600 ; ret 0xf66
0x0000000000407972 : add eax, 0x89480068 ; push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046cb94 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x000000000044e9c5 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000044e2af : add eax, 0xb6b80000 ; ret 0x979f
0x000000000045957e : add eax, 0xb8000001 ; pop rdi ; pop rdx ; ret
0x0000000000476886 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000047ca5d : add eax, 0xcb800000 ; stc ; jmp qword ptr [rcx]
0x000000000047ca9d : add eax, 0xd0300000 ; stc ; jmp qword ptr [rcx]
0x000000000047cadd : add eax, 0xdbf00000 ; stc ; jmp rbx
0x000000000047c8fd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x11], al ; clc ; call rsp
0x000000000042123b : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000426113 : add eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000458c36 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042aeb9 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b0b : add eax, edx ; sar rax, 1 ; jne 0x402b1c ; pop rbp ; ret
0x0000000000402b49 : add ebx, esi ; ret
0x0000000000421b47 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x0000000000421b34 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000041fde0 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402e3b : add esp, 0x10 ; pop rbp ; ret
0x000000000042d60d : add esp, 0x100 ; pop rbp ; ret
0x000000000040c107 : add esp, 0x110 ; pop rbp ; ret
0x000000000043f677 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000452697 : add esp, 0x11a0 ; pop rbp ; ret
0x00000000004241c8 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000042f46f : add esp, 0x120 ; pop rbp ; ret
0x0000000000450a18 : add esp, 0x130 ; pop rbp ; ret
0x00000000004439cb : add esp, 0x140 ; pop rbp ; ret
0x000000000040811c : add esp, 0x150 ; pop rbp ; ret
0x000000000040727f : add esp, 0x160 ; pop rbp ; ret
0x000000000041a4e4 : add esp, 0x170 ; pop rbp ; ret
0x000000000041fc80 : add esp, 0x18 ; pop rbp ; ret
0x00000000004790bb : add esp, 0x18 ; ret
0x000000000041f6f4 : add esp, 0x190 ; pop rbp ; ret
0x000000000040b5bf : add esp, 0x1a0 ; pop rbp ; ret
0x000000000044172c : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040a087 : add esp, 0x1d0 ; pop rbp ; ret
0x00000000004409f5 : add esp, 0x1e0 ; pop rbp ; ret
0x000000000041680f : add esp, 0x20 ; pop rbp ; ret
0x000000000042891b : add esp, 0x200 ; pop rbp ; ret
0x0000000000458abb : add esp, 0x210 ; pop rbp ; ret
0x00000000004576a8 : add esp, 0x230 ; pop rbp ; ret
0x000000000044a73d : add esp, 0x260 ; pop rbp ; ret
0x0000000000456903 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000044f75a : add esp, 0x2e0 ; pop rbp ; ret
0x00000000004326fb : add esp, 0x2e8 ; pop rbx ; pop rbp ; ret
0x000000000040b1a2 : add esp, 0x2f0 ; pop rbp ; ret
0x0000000000416744 : add esp, 0x30 ; pop rbp ; ret
0x000000000044e895 : add esp, 0x380 ; pop rbp ; ret
0x0000000000408933 : add esp, 0x40 ; pop rbp ; ret
0x0000000000448b6c : add esp, 0x410 ; pop rbp ; ret
0x00000000004187fb : add esp, 0x440 ; pop rbp ; ret
0x0000000000435073 : add esp, 0x450 ; pop rbp ; ret
0x00000000004079b6 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000446eb2 : add esp, 0x4a0 ; pop rbp ; ret
0x0000000000403012 : add esp, 0x50 ; pop rbp ; ret
0x0000000000454d3f : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000402dec : add esp, 0x60 ; pop rbp ; ret
0x0000000000406b9f : add esp, 0x6d0 ; pop rbp ; ret
0x00000000004082c9 : add esp, 0x70 ; pop rbp ; ret
0x0000000000470843 : add esp, 0x7f8 ; pop rbp ; ret
0x000000000041907a : add esp, 0x80 ; pop rbp ; ret
0x0000000000452b5c : add esp, 0x890 ; pop rbp ; ret
0x0000000000409203 : add esp, 0x90 ; pop rbp ; ret
0x000000000041e9c1 : add esp, 0x958 ; pop rbx ; pop rbp ; ret
0x000000000040b828 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000043611e : add esp, 0xa0 ; pop rbp ; ret
0x000000000040907b : add esp, 0xb0 ; pop rbp ; ret
0x0000000000418d02 : add esp, 0xc0 ; pop rbp ; ret
0x000000000043e9b4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040790c : add esp, 0xd0 ; pop rbp ; ret
0x0000000000478f9e : add esp, 0xd70 ; pop rbp ; ret
0x0000000000419408 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042534b : add esp, 0xf0 ; pop rbp ; ret
0x00000000004295b6 : add esp, 8 ; pop rbp ; ret
0x0000000000402296 : add esp, 8 ; ret
0x0000000000426112 : add r8, qword ptr [rax] ; add cl, ch ; ret
0x0000000000458c35 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042aeb8 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b0a : add rax, rdx ; sar rax, 1 ; jne 0x402b1d ; pop rbp ; ret
0x000000000041fddf : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402e3a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042d60c : add rsp, 0x100 ; pop rbp ; ret
0x000000000040c106 : add rsp, 0x110 ; pop rbp ; ret
0x000000000043f676 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000452696 : add rsp, 0x11a0 ; pop rbp ; ret
0x00000000004241c7 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000042f46e : add rsp, 0x120 ; pop rbp ; ret
0x0000000000450a17 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004439ca : add rsp, 0x140 ; pop rbp ; ret
0x000000000040811b : add rsp, 0x150 ; pop rbp ; ret
0x000000000040727e : add rsp, 0x160 ; pop rbp ; ret
0x000000000041a4e3 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041fc7f : add rsp, 0x18 ; pop rbp ; ret
0x00000000004790ba : add rsp, 0x18 ; ret
0x000000000041f6f3 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040b5be : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000044172b : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040a086 : add rsp, 0x1d0 ; pop rbp ; ret
0x00000000004409f4 : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000041680e : add rsp, 0x20 ; pop rbp ; ret
0x000000000042891a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000458aba : add rsp, 0x210 ; pop rbp ; ret
0x00000000004576a7 : add rsp, 0x230 ; pop rbp ; ret
0x000000000044a73c : add rsp, 0x260 ; pop rbp ; ret
0x0000000000456902 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000044f759 : add rsp, 0x2e0 ; pop rbp ; ret
0x00000000004326fa : add rsp, 0x2e8 ; pop rbx ; pop rbp ; ret
0x000000000040b1a1 : add rsp, 0x2f0 ; pop rbp ; ret
0x0000000000416743 : add rsp, 0x30 ; pop rbp ; ret
0x000000000044e894 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000408932 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000448b6b : add rsp, 0x410 ; pop rbp ; ret
0x00000000004187fa : add rsp, 0x440 ; pop rbp ; ret
0x0000000000435072 : add rsp, 0x450 ; pop rbp ; ret
0x00000000004079b5 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000446eb1 : add rsp, 0x4a0 ; pop rbp ; ret
0x0000000000403011 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000454d3e : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000402deb : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406b9e : add rsp, 0x6d0 ; pop rbp ; ret
0x00000000004082c8 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000470842 : add rsp, 0x7f8 ; pop rbp ; ret
0x0000000000419079 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000452b5b : add rsp, 0x890 ; pop rbp ; ret
0x0000000000409202 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041e9c0 : add rsp, 0x958 ; pop rbx ; pop rbp ; ret
0x000000000040b827 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000043611d : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040907a : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000418d01 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000043e9b3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040790b : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000478f9d : add rsp, 0xd70 ; pop rbp ; ret
0x0000000000419407 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042534a : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004295b5 : add rsp, 8 ; pop rbp ; ret
0x0000000000402295 : add rsp, 8 ; ret
0x0000000000423e2e : and ah, al ; mov edi, 0xd564b915 ; ret 0x4890
0x000000000047e85c : and al, 0x23 ; add byte ptr [rax], al ; push rax ; std ; call qword ptr [rax]
0x000000000047e95c : and al, 0x24 ; add byte ptr [rax], al ; nop ; push rax ; std ; jmp qword ptr [rdi]
0x000000000047d45c : and al, 0xf ; add byte ptr [rax], al ; sbb cl, -6 ; jmp rsi
0x0000000000434835 : and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000041696d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000047ca5c : and al, 5 ; add byte ptr [rax], al ; or bl, 0xf9 ; jmp qword ptr [rcx]
0x000000000047ce5c : and al, 9 ; add byte ptr [rax], al ; nop ; pop rdx ; cli ; jmp rcx
0x0000000000430498 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000045914f : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000042f471 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047cee0 : and byte ptr [rsi - 6], bl ; call qword ptr [rbx]
0x00000000004072ba : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000430497 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000422ce9 : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x000000000047e67d : and dword ptr [rax], eax ; add byte ptr [rax], dh ; add bh, ch ; jmp qword ptr [rbx]
0x000000000047e67c : and dword ptr [rax], r8d ; add byte ptr [rax], dh ; add bh, ch ; jmp qword ptr [rbx]
0x000000000042bd95 : and eax, 0x47b1c0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000402de7 : and eax, 0x48fffffc ; add esp, 0x60 ; pop rbp ; ret
0x0000000000426e7f : and eax, 0x682978 ; pop rbp ; ret
0x000000000042732f : and eax, 0x682980 ; pop rbp ; ret
0x0000000000427353 : and eax, 0x682988 ; pop rbp ; ret
0x000000000047eb1d : and eax, 0x6b100000 ; std ; jmp rax
0x0000000000408e75 : and eax, 0xb948c72a ; sbb ah, ch ; ret 0x8b67
0x0000000000476c7a : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000047e85d : and eax, dword ptr [rax] ; add byte ptr [rax + 0x43], dl ; std ; call qword ptr [rax]
0x000000000047e8fd : and eax, dword ptr [rax] ; add byte ptr [rax + 0x4e], ah ; std ; call qword ptr [rax]
0x000000000047e8bd : and eax, dword ptr [rax] ; add byte ptr [rax], dh ; std ; call qword ptr [rbx]
0x00000000004160ff : call 0x22416104
0x000000000044f42f : call 0x402316
0x0000000000436065 : call 0x402332
0x00000000004321e7 : call 0x402377
0x000000000044f3fc : call 0x4023b6
0x0000000000456162 : call 0x402462
0x0000000000406248 : call 0x4024d2
0x000000000040c0ee : call 0x402579
0x00000000004563b5 : call 0x4025f2
0x000000000046651d : call 0x4027f2
0x00000000004565c4 : call 0x402822
0x0000000000476686 : call 0x402892
0x0000000000406640 : call 0x402912
0x00000000004068d3 : call 0x402b82
0x000000000040b31f : call 0x4202ec6f
0x000000000040b31e : call 0x4202ec70
0x000000000041a41a : call 0x422446
0x0000000000416430 : call 0x4226a2
0x000000000043242b : call 0x441b96
0x0000000000428915 : call 0x444b62
0x000000000042dc86 : call 0xffffffff8a054228
0x000000000046f0fd : call 0xffffffffc286aa79
0x000000000040b92c : call 0xffffffffc3649862
0x000000000040b92b : call 0xffffffffc3649863
0x000000000040b96e : call 0xffffffffc36499a4
0x000000000040b96d : call 0xffffffffc36499a5
0x0000000000443b25 : call 0xffffffffc435a25b
0x0000000000443b24 : call 0xffffffffc435a25c
0x0000000000443c5c : call 0xffffffffc435a492
0x0000000000443c5b : call 0xffffffffc435a493
0x00000000004526d8 : call 0xffffffffd14526d7
0x000000000043e9f9 : call 0xffffffffe9067349
0x000000000043e9f8 : call 0xffffffffe906734a
0x0000000000452135 : call 0xfffffffff011a707
0x0000000000452134 : call 0xfffffffff011a708
0x000000000045236f : call 0xfffffffff015e0fb
0x000000000043a43d : call 0xfffffffff73c29d4
0x0000000000408002 : call 0xfffffffffef5359b
0x00000000004563c5 : call 0xffffffffff49e99a
0x000000000043cf69 : call 0xffffffffff58553b
0x000000000043cf68 : call 0xffffffffff58553c
0x000000000043cf69 : call 0xffffffffff58553d
0x000000000043cf68 : call 0xffffffffff58553e
0x000000000041a758 : call 0xffffffffff6a2d2a
0x000000000041a757 : call 0xffffffffff6a2d2b
0x0000000000406d40 : call 0xffffffffff6cf312
0x0000000000406d3f : call 0xffffffffff6cf313
0x0000000000408808 : call 0xffffffffff793da1
0x000000000042cd77 : call 0xffffffffff7c58c8
0x000000000042cd76 : call 0xffffffffff7c58c9
0x0000000000408714 : call 0xffffffffff7d3cad
0x0000000000478ff9 : call qword ptr [r12 + rbx*8]
0x000000000040606b : call qword ptr [rax]
0x000000000040867d : call qword ptr [rbx - 0x6e46fffd]
0x0000000000421bc5 : call qword ptr [rbx]
0x000000000041d454 : call qword ptr [rcx]
0x000000000041e34a : call qword ptr [rdi - 0x163d5066]
0x0000000000432189 : call qword ptr [rdi]
0x000000000043bf23 : call qword ptr [rdx]
0x00000000004067fa : call qword ptr [rsi]
0x0000000000478ffa : call qword ptr [rsp + rbx*8]
0x000000000043225f : call r8
0x000000000042ce13 : call rax
0x000000000040aebe : call rbx
0x0000000000423971 : call rcx
0x0000000000434a21 : call rdi
0x000000000041cfa6 : call rdx
0x000000000044bb24 : call rsi
0x0000000000424160 : call rsp
0x000000000046bb2c : cdq ; ret
0x0000000000444850 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000450a16 : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004439c9 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x000000000042b8a3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004516dd : clc ; add rsp, 0x200 ; pop rbp ; ret
0x0000000000458ab9 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x00000000004578f7 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421c65 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000454fd2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000459130 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000453961 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042b4f3 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000042bc51 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000453153 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000047c902 : clc ; call rsp
0x0000000000402b0f : clc ; jne 0x402b18 ; pop rbp ; ret
0x000000000041f737 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000441a8b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000458adb : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000043009e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406d07 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042a27b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042a29b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042a2bb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000444a2b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000444a6b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000444a4b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406d0b : clc ; pop rbp ; ret
0x0000000000402e67 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047e1c2 : cld ; call qword ptr [rdx]
0x000000000047e522 : cld ; call rdx
0x000000000047dc62 : cld ; jmp qword ptr [rax]
0x000000000047e082 : cld ; jmp qword ptr [rdi]
0x000000000047db42 : cld ; jmp qword ptr [rdx]
0x000000000047de82 : cld ; jmp qword ptr [rsi]
0x000000000047e3a2 : cld ; jmp rdi
0x000000000047e422 : cld ; jmp rdx
0x0000000000435086 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000435089 : cld ; pop rbp ; ret
0x000000000041a13b : cld ; pop rcx ; leave ; jg 0x41a0d0 ; push rbp ; ret
0x0000000000421d48 : cld ; ret
0x000000000043cbbd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041dc0e : cli ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x0000000000459430 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000047cb42 : cli ; call qword ptr [rbx]
0x000000000047cba2 : cli ; call qword ptr [rcx]
0x000000000047d382 : cli ; call qword ptr [rdx]
0x000000000047d082 : cli ; call qword ptr [rsi]
0x000000000047d482 : cli ; call rax
0x000000000047cb22 : cli ; call rbx
0x000000000047d202 : cli ; call rdx
0x000000000047cca2 : cli ; jmp qword ptr [rax]
0x000000000047cd82 : cli ; jmp qword ptr [rdi]
0x000000000047d162 : cli ; jmp rbx
0x000000000047ce62 : cli ; jmp rcx
0x000000000047ce02 : cli ; jmp rsi
0x00000000004084a9 : cmc ; ret
0x000000000040db88 : cmc ; ret 0x8589
0x00000000004135bd : cmc ; ret 0x8b48
0x000000000041359d : cmc ; ret 0x958a
0x0000000000413805 : cmc ; ret 0xc7e9
0x00000000004135e6 : cmc ; ret 0xf2b9
0x00000000004559cd : cmp al, -0x2a ; ret
0x000000000045e8e4 : cmp al, -0x2e ; ret
0x00000000004061a5 : cmp al, 0x25 ; mov ds, word ptr [rbp + 0x20e80047] ; ret
0x000000000047de81 : cmp bh, ah ; jmp qword ptr [rsi]
0x0000000000426a13 : cmp ch, byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000477e08 : cmp dh, -1 ; call qword ptr [rax]
0x00000000004775d3 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000414f97 : cmp dl, ch ; jmp 0x4165dc
0x00000000004269bf : cmp dword ptr [rdi], ebp ; outsb dx, byte ptr [rsi] ; ret
0x0000000000477f65 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000402acd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402ae0 ; pop rbp ; ret
0x000000000046a157 : cmp ecx, 0x3485c7ff ; idiv bh ; call qword ptr [rcx]
0x000000000046a102 : cmp ecx, 0x3485c7ff ; idiv bh ; jmp rdx
0x00000000004465d1 : cmp ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000047243e : cmp esi, dword ptr [rdi] ; ret 0x8589
0x0000000000476e04 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000045e937 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x000000000040eccf : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000047e3a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdi
0x000000000043ee94 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000040b82a : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046b62b : cwde ; js 0x46b5d5 ; ret
0x000000000046b672 : cwde ; js 0x46b61c ; ret
0x000000000046b6ac : cwde ; js 0x46b656 ; ret
0x000000000046ec9d : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000446f54 : cwde ; pushfq ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426d1a : cwde ; ret 0x45e9
0x0000000000426988 : cwde ; ret 0x8589
0x0000000000426cb0 : cwde ; ret 0xafe9
0x000000000040720b : dec byte ptr [rdi] ; pushfq ; ret 0xd284
0x000000000041540c : dec dword ptr [rax + 0x39] ; ret 0xf40
0x000000000046b0c8 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004658ca : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000425178 : dec dword ptr [rax - 0x77] ; ret 0x8d89
0x0000000000408008 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004636c9 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000463674 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000409d19 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000043cd62 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000043d06d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000046fc35 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000477e7c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041566c : dec dword ptr [rbx - 0x14c34b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004160fc : dec dword ptr [rbx - 0x2174b] ; jmp qword ptr [rcx]
0x000000000040673c : dec dword ptr [rcx - 0x76397639] ; ret 0xf8e8
0x00000000004775d6 : dec dword ptr [rcx] ; ret 0x9589
0x0000000000432057 : dec dword ptr [rdi] ; pushfq ; ret 0xd284
0x000000000043e574 : dec dword ptr [rdi] ; ret 0x8589
0x000000000045e208 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x00000000004356ee : dec dword ptr [rdi] ; test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000458294 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044a863 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041f06a : dec dword ptr [rdi] ; test byte ptr [rsi + rax], ch ; add cl, ch ; ret 1
0x000000000040bc0b : dec dword ptr [rdi] ; test ch, ch ; add al, 0 ; add cl, ch ; ret 1
0x000000000045a2b4 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x0000000000459efc : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x000000000041f475 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000478a8e : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x0000000000454c37 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x00000000004637d5 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000040941a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000423afb : dec dword ptr [rdx - 0x2e] ; ret
0x000000000045234e : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x0000000000424004 : dec dword ptr [rsp + rcx*2 + 0x6f] ; add ch, cl ; ret 1
0x0000000000451351 : dec eax ; ret 0xd592
0x0000000000422be0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000422bdf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000421d45 : enter -0x6d3, -4 ; ret
0x0000000000454c8e : enter -0x74b8, 0 ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004548ac : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x454876 ; call rax
0x0000000000454b85 : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x454b4f ; call rax
0x0000000000454cfe : enter -0x74b8, 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x454cc0 ; call rax
0x000000000045616a : enter -0x74b8, 0x7d ; fsubr st(0) ; in al, dx ; ret 0xfffa
0x000000000042ae07 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000042aeba : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000457241 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000047667f : enter -2, -1 ; mov rdi, rax ; call 0x402899
0x0000000000426c21 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045617b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042779b : enter 0x292d, -0x4c ; ret
0x0000000000441a49 : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x0000000000422cac : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004162bb : enter 0x3db1, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004221af : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004087d5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043fea9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b92e : fbld dword ptr [rbx] ; ret
0x0000000000452096 : fcomp dword ptr [rdi + rdi*8 - 0x6bf00001] ; ret 0xd284
0x0000000000452853 : fild qword ptr [rbx + 0x68] ; ret 0x8589
0x0000000000452986 : fild qword ptr [rbx + 0x68] ; ret 0x89b9
0x00000000004527ff : fisubr word ptr [rbx + 0x68] ; ret 0x8589
0x0000000000402b46 : fldenv dword ptr [rdi] ; add byte ptr [rcx], al ; ret
0x000000000044c4f4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004526d4 : fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x0000000000407978 : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000425e34 : fmul dword ptr [rax - 0x7f] ; ret 2
0x0000000000465410 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x00000000004653e5 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x0000000000478ffc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000442691 : fnstenv dword ptr [rsi - 0x7e03aa75] ; ret 0xfffc
0x000000000047d461 : fsqrt ; jmp rsi
0x000000000041f726 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041f727 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000045616e : fsubr st(0) ; in al, dx ; ret 0xfffa
0x0000000000418b41 : fsubr st(1) ; ret
0x000000000042c984 : fsubr st(1) ; ret 0
0x000000000042d44c : fucompi st(1) ; ret
0x0000000000402e39 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426089 : hlt ; add rsp, 0x1d0 ; pop rbp ; ret
0x000000000044f8bc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426633 : hlt ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000452b5a : hlt ; add rsp, 0x890 ; pop rbp ; ret
0x0000000000449358 : hlt ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000041f73a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402ae0 : hlt ; pop rbp ; mov edi, 0x6804c0 ; jmp rax
0x000000000046a15d : idiv bh ; call qword ptr [rcx]
0x0000000000463d63 : idiv bh ; call qword ptr [rdi]
0x000000000046456b : idiv bh ; call qword ptr [rdx]
0x00000000004649e6 : idiv bh ; call rcx
0x0000000000469e40 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000469f76 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000046a176 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000467202 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000467090 : idiv bh ; jmp qword ptr [rax]
0x000000000046a2e1 : idiv bh ; jmp qword ptr [rcx]
0x0000000000465d7c : idiv bh ; jmp qword ptr [rdi]
0x0000000000466817 : idiv bh ; jmp qword ptr [rsi]
0x0000000000465b11 : idiv bh ; jmp rbx
0x0000000000464a3f : idiv bh ; jmp rdi
0x00000000004636a6 : idiv bh ; jmp rdx
0x00000000004672ba : idiv bh ; jmp rsp
0x00000000004526d9 : idiv edi ; call rax
0x00000000004658c8 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004652b6 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000465f87 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000465aa7 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000046656f : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004529ff : idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000045c9d3 : imul al ; ret 0x893f
0x0000000000451a23 : imul ch ; ret
0x000000000046a5bc : imul eax ; ret 0x483f
0x000000000046211b : imul eax ; ret 0x893f
0x000000000044b1be : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000451a77 : imul ebp ; ret
0x00000000004135b6 : imul edi, dword ptr [rdx + rsi*8 - 0x1e], 0xf5377eb9 ; ret 0x8b48
0x000000000041e87f : imul edi, dword ptr [rip], 0xf ; pushfq ; ret 0xd284
0x0000000000429798 : in al, -0x17 ; ret
0x000000000041fbbd : in al, -0x17 ; ret 0
0x000000000043c519 : in al, -0x7f ; ret 0xff9f
0x000000000043c6ff : in al, -0x7f ; ret 0xffbf
0x000000000043c7a5 : in al, -0x7f ; ret 0xffc5
0x0000000000434838 : in al, -0x7f ; ret 0xffd0
0x000000000043c7d3 : in al, -0x7f ; ret 0xffd5
0x000000000043c8a1 : in al, -0x7f ; ret 0xffd8
0x000000000043ca37 : in al, -0x7f ; ret 0xffe0
0x000000000047e41c : in al, 0x1e ; add byte ptr [rax], al ; xor bl, al ; cld ; jmp rdx
0x000000000047eb1c : in al, 0x25 ; add byte ptr [rax], al ; adc byte ptr [rbx - 3], ch ; jmp rax
0x0000000000409252 : in al, 0x2d ; mov bh, -0x2a ; ret
0x000000000041fce2 : in al, 0x2d ; ret
0x000000000041ebb7 : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000446eb0 : in al, 0x48 ; add esp, 0x4a0 ; pop rbp ; ret
0x000000000042789e : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000047cb1c : in al, 5 ; add byte ptr [rax], al ; mov al, 0x1e ; cli ; call rbx
0x0000000000424176 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000424092 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042ed7a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000044a73b : in al, dx ; add rsp, 0x260 ; pop rbp ; ret
0x000000000044ea9f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000448b6a : in al, dx ; add rsp, 0x410 ; pop rbp ; ret
0x0000000000406b9d : in al, dx ; add rsp, 0x6d0 ; pop rbp ; ret
0x000000000044fe2a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000443d07 : in al, dx ; jmp 0x443ead
0x00000000004365ca : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000044e9cb : in al, dx ; pop rbp ; ret
0x000000000040c0c7 : in al, dx ; ret
0x0000000000408d7b : in al, dx ; ret 0x8967
0x0000000000408e56 : in al, dx ; ret 0x8b67
0x0000000000456170 : in al, dx ; ret 0xfffa
0x0000000000422d93 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000435083 : in eax, -0x77 ; jge 0x43508b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000444733 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040bc0e : in eax, dx ; add al, 0 ; add cl, ch ; ret 1
0x000000000046bd2b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d44c : in eax, dx ; or byte ptr [rcx + rax*4 - 0x8743], ah ; call qword ptr [rcx]
0x0000000000419b4f : in eax, dx ; ret
0x000000000041a128 : inc byte ptr [r8 + 0x4d8801e1] ; ret
0x000000000041a129 : inc byte ptr [rax + 0x4d8801e1] ; ret
0x0000000000432152 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000432150 : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004307dd : inc dword ptr [rax + 0x4d8801e1] ; ret
0x000000000041a175 : inc dword ptr [rax + 0x4d8801e1] ; ret 0x6be9
0x0000000000422cc3 : inc dword ptr [rax + 0x558801e2] ; ret
0x000000000045942e : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000454824 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000043db8f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000469e42 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040b0b4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000406355 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405b79 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000463a42 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041640a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432483 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004053d3 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004348b5 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x00000000004086dd : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000454862 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x0000000000416221 : inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004145fd : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000413933 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000446dee : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000434ef4 : inc dword ptr [rcx] ; jmp 0x435083
0x000000000040717f : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041d705 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c0f2 : inc edi ; in al, dx ; ret
0x000000000043f648 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042402d : inc edi ; test dword ptr [rdi + rbp*8 - 0x2db50001], ebp ; ret
0x00000000004761c3 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x00000000004786a2 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x00000000004777b2 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004759a1 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000476a03 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004307dc : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x000000000041a174 : inc qword ptr [r8 + 0x4d8801e1] ; ret 0x6be9
0x00000000004356f1 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000438cef : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000043c32f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000044338c : int 0x80
0x000000000041453f : int 0xe3
0x0000000000415ba6 : int 0xfe
0x0000000000443b28 : int1 ; ret
0x0000000000402ad3 : ja 0x402ada ; pop rbp ; ret
0x000000000041f634 : ja 0x41f621 ; ret 0
0x0000000000426987 : ja 0x426924 ; ret 0x8589
0x00000000004300a1 : ja 0x4300ee ; pop rbp ; ret
0x0000000000402adf : je 0x402add ; pop rbp ; mov edi, 0x6804c0 ; jmp rax
0x000000000041a13e : jg 0x41a0cd ; push rbp ; ret
0x0000000000422d0d : jg 0x422cb5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000452aff : jg 0x452b13 ; xchg eax, edi ; ret 0xd284
0x000000000046a2ca : jg 0x46a2de ; xchg eax, esp ; ret 0xd284
0x000000000046cb43 : jg 0x46cb4a ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406d06 : jge 0x406d07 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085f1 : jge 0x4085ae ; ret
0x000000000040db86 : jge 0x40dbc2 ; cmc ; ret 0x8589
0x0000000000424091 : jge 0x424087 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000424175 : jge 0x42416b ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042a27a : jge 0x42a27b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042a29a : jge 0x42a29b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042a2ba : jge 0x42a2bb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043009d : jge 0x43009e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000435085 : jge 0x435089 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004360a9 : jge 0x43607f ; call 0x402334
0x0000000000441a8a : jge 0x441a8d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000444736 : jge 0x444733 ; pop rbp ; ret
0x0000000000444a2a : jge 0x444a2b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000444a4a : jge 0x444a4b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000444a6a : jge 0x444a6b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000444a90 : jge 0x444a8d ; pop rbp ; ret
0x000000000044acd8 : jge 0x44acef ; ret
0x000000000044b1c3 : jge 0x44b1da ; ret
0x00000000004548b3 : jge 0x45486f ; call rax
0x0000000000454b8c : jge 0x454b48 ; call rax
0x0000000000454c94 : jge 0x454c48 ; call rax
0x0000000000454d05 : jge 0x454cb9 ; call rax
0x000000000045616d : jge 0x45614b ; call 0x402464
0x00000000004563b3 : jge 0x456371 ; call 0x4025f4
0x00000000004565be : jge 0x456564 ; mov rsi, qword ptr [rbp - 0x50] ; call 0x402828
0x0000000000458ada : jge 0x458add ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000046c299 : jge 0x46c293 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004135b7 : jl 0x4135b2 ; loop 0x41357b ; jle 0x4135fb ; cmc ; ret 0x8b48
0x0000000000444b75 : jl 0x444b51 ; ret
0x0000000000444bc5 : jl 0x444ba1 ; ret
0x000000000044abac : jl 0x44abc3 ; ret
0x000000000040dbda : jle 0x40dc16 ; cmc ; ret 0x8589
0x000000000041359b : jle 0x4135d7 ; cmc ; ret 0x958a
0x00000000004135bb : jle 0x4135f7 ; cmc ; ret 0x8b48
0x00000000004135e4 : jle 0x413620 ; cmc ; ret 0xf2b9
0x000000000041360f : jle 0x41364b ; cmc ; ret 0x8b48
0x0000000000413803 : jle 0x41383f ; cmc ; ret 0xc7e9
0x0000000000422d84 : jle 0x422d9d ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023eb : jmp 0x4022a7
0x0000000000405f7d : jmp 0x406bae
0x000000000040c0c0 : jmp 0x40c118
0x0000000000416071 : jmp 0x416076
0x00000000004161b3 : jmp 0x4161b9
0x0000000000413243 : jmp 0x4165d9
0x0000000000414f99 : jmp 0x4165da
0x000000000041952a : jmp 0x4195dd
0x000000000041a289 : jmp 0x41a4f2
0x000000000041fcf6 : jmp 0x41fd85
0x0000000000420c07 : jmp 0x421249
0x0000000000421dd2 : jmp 0x421e39
0x0000000000421dd1 : jmp 0x421e3a
0x000000000042788d : jmp 0x4279b7
0x0000000000428e8d : jmp 0x428e98
0x000000000042ad02 : jmp 0x42add7
0x000000000043235a : jmp 0x43270a
0x0000000000434ec3 : jmp 0x435081
0x0000000000434aff : jmp 0x435082
0x000000000043bcdd : jmp 0x43e9c3
0x000000000043e771 : jmp 0x43e9c5
0x0000000000443d08 : jmp 0x443eac
0x000000000044b1bd : jmp 0x44b735
0x0000000000452a44 : jmp 0x452b6a
0x00000000004589ba : jmp 0x458acb
0x000000000045957d : jmp 0x45968f
0x000000000045957c : jmp 0x459690
0x0000000000468255 : jmp 0x46b0d4
0x0000000000463eb1 : jmp 0x46b0d5
0x000000000046620b : jmp 0x46b0d6
0x000000000046b46b : jmp 0x46b476
0x000000000046c0db : jmp 0x46c0e6
0x000000000046eff3 : jmp 0x470851
0x0000000000477dcf : jmp 0x478fac
0x0000000000478525 : jmp 0x478fad
0x00000000004788f0 : jmp 0x478fae
0x000000000042ea81 : jmp 0x490573d1
0x000000000042eafc : jmp 0x4905744c
0x000000000042fe55 : jmp 0x490587a5
0x000000000042fed0 : jmp 0x49058820
0x000000000042dccb : jmp 0xffffffff8a05426d
0x0000000000470321 : jmp 0xffffffff8d00c772
0x000000000045524e : jmp 0xffffffffb707561a
0x000000000046b62a : jmp 0xffffffffc3eb2ecb
0x000000000042e07f : jmp 0xffffffffea054621
0x0000000000425dfc : jmp 0xffffffffffeb17c7
0x0000000000425dfb : jmp 0xffffffffffeb17c8
0x0000000000413eee : jmp qword ptr [rax]
0x0000000000405a14 : jmp qword ptr [rbx]
0x00000000004072a8 : jmp qword ptr [rcx]
0x0000000000417e51 : jmp qword ptr [rdi]
0x000000000043ee95 : jmp qword ptr [rdx + 0xc2e968]
0x000000000043a446 : jmp qword ptr [rdx]
0x0000000000418509 : jmp qword ptr [rsi]
0x0000000000402ae7 : jmp rax
0x0000000000409ea6 : jmp rbx
0x0000000000407124 : jmp rcx
0x0000000000432112 : jmp rdi
0x0000000000402b27 : jmp rdx
0x0000000000406d46 : jmp rsi
0x000000000041db6a : jmp rsp
0x0000000000402b10 : jne 0x402b17 ; pop rbp ; ret
0x000000000041a418 : jne 0x41a406 ; call 0x422448
0x000000000041f739 : jne 0x41f736 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000422be1 : jne 0x422bd9 ; mov rax, rdx ; pop rbp ; ret
0x000000000042ae06 : jne 0x42add9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000430522 : jne 0x43051a ; mov rax, rdx ; pop rbp ; ret
0x0000000000431226 : jne 0x4311ee ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x000000000043f646 : jne 0x43f64f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000446ee1 : jne 0x446ed9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000455211 : jne 0x455209 ; mov rax, rdx ; pop rbp ; ret
0x00000000004565c2 : jne 0x456578 ; call 0x402824
0x00000000004082cb : jo 0x40832c ; ret
0x000000000040b40f : jo 0x40b470 ; ret
0x000000000041a4e6 : jo 0x41a4ee ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041aca5 : jo 0x41acb0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421b62 : jo 0x421b6d ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004228e2 : jo 0x422943 ; ret
0x0000000000422ac9 : jo 0x422b2a ; ret
0x0000000000428b41 : jo 0x428ba2 ; ret
0x000000000042985e : jo 0x4298bf ; ret
0x000000000042a056 : jo 0x42a0b7 ; ret
0x000000000042a266 : jo 0x42a2c7 ; ret
0x000000000043f861 : jo 0x43f8c2 ; ret
0x000000000043f984 : jo 0x43f9e5 ; ret
0x000000000043fabe : jo 0x43fb1f ; ret
0x0000000000441901 : jo 0x441962 ; ret
0x0000000000441d88 : jo 0x441d59 ; pop rsp ; ret 0x8589
0x000000000044251c : jo 0x4424ed ; pop rsp ; ret 0xe1b9
0x0000000000444a4f : jo 0x444ab0 ; ret
0x0000000000444a4e : jo 0x444ab1 ; ret
0x000000000044c59c : jo 0x44c5fd ; ret
0x0000000000452343 : jo 0x452302 ; imul ebp ; ret
0x000000000045374c : jo 0x4537ad ; ret
0x0000000000459134 : jo 0x459195 ; ret
0x000000000046c713 : jo 0x46c774 ; ret
0x0000000000478fa0 : jo 0x478fb4 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047cb40 : jo 0x47cb64 ; cli ; call qword ptr [rbx]
0x000000000047dd80 : jo 0x47dda3 ; cld ; jmp qword ptr [rdx]
0x0000000000453ff7 : jp 0x454022 ; ret
0x000000000045404b : jp 0x454076 ; ret
0x0000000000454bef : jp 0x454c1a ; ret
0x00000000004269db : js 0x426978 ; ret 0x8589
0x0000000000426caf : js 0x426c4c ; ret 0xafe9
0x0000000000426d19 : js 0x426cb6 ; ret 0x45e9
0x000000000043e9b6 : js 0x43e9ca ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046b62c : js 0x46b5d4 ; ret
0x000000000046b673 : js 0x46b61b ; ret
0x000000000046b6ad : js 0x46b655 ; ret
0x0000000000476e02 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000045615d : lea eax, dword ptr [rax - 0x17000003] ; stc ; ret 0xfffa
0x000000000043dac3 : lea ebp, dword ptr [rax - 0x1700000d] ; ret
0x000000000040bfff : lea ebx, dword ptr [rsi + 0x23e0b956] ; ret
0x00000000004165cb : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004165ca : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041a13d : leave ; jg 0x41a0ce ; push rbp ; ret
0x00000000004589b9 : leave ; jmp 0x458acc
0x000000000041a3ce : les r13d, ptr [r15] ; in eax, dx ; ret
0x000000000042e07e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054622
0x000000000042e07d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054623
0x0000000000472ef6 : lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000042e114 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004135b9 : loop 0x413579 ; jle 0x4135f9 ; cmc ; ret 0x8b48
0x00000000004135b8 : loop 0x41357a ; jle 0x4135fa ; cmc ; ret 0x8b48
0x0000000000422cea : loop 0x422cf1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000422cea : loop 0x422cf3 ; movzx eax, dl ; pop rbp ; ret
0x000000000042aa3a : loop 0x42aa49 ; add eax, 0x5c0f6600 ; ret 0xf66
0x00000000004539d9 : loop 0x453a2b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000453ac1 : loop 0x453b13 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004072bb : loope 0x4072c4 ; movzx eax, cl ; pop rbp ; ret
0x0000000000415a95 : loope 0x415a58 ; stosd dword ptr [rdi], eax ; ret 0x6b3d
0x0000000000421e2a : loope 0x421e33 ; movzx eax, cl ; pop rbp ; ret
0x000000000040b970 : loopne 0x40b997 ; ret
0x000000000040c003 : loopne 0x40c02a ; ret
0x000000000040c023 : loopne 0x40c04a ; ret
0x000000000041940a : loopne 0x419411 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004225b0 : loopne 0x4225e1 ; ret 0xc1e4
0x00000000004225af : loopne 0x4225e2 ; ret 0xc1e4
0x00000000004284ab : loopne 0x4284fb ; add esp, 0x20 ; pop rbp ; ret
0x00000000004284aa : loopne 0x4284fc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000429d50 : loopne 0x429da3 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000042a052 : loopne 0x42a0a2 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042a051 : loopne 0x42a0a3 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042a262 : loopne 0x42a2b2 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042a261 : loopne 0x42a2b3 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042c187 : loopne 0x42c190 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d420 : loopne 0x42d429 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d440 : loopne 0x42d48e ; mov edi, dword ptr [rcx] ; call rax
0x000000000042d43f : loopne 0x42d48f ; mov edi, dword ptr [rcx] ; call rax
0x000000000042d50c : loopne 0x42d515 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d5a4 : loopne 0x42d5ad ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000435d68 : loopne 0x435d6f ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004360a6 : loopne 0x4360f7 ; mov edi, dword ptr [rbp - 0x30] ; call 0x402337
0x00000000004360a5 : loopne 0x4360f8 ; mov edi, dword ptr [rbp - 0x30] ; call 0x402338
0x000000000043698e : loopne 0x436997 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004409f7 : loopne 0x4409ff ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443056 : loopne 0x44305d ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004480be : loopne 0x4480c7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448b18 : loopne 0x448b21 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044c2e0 : loopne 0x44c2e9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044c6ec : loopne 0x44c73c ; add esp, 0x40 ; pop rbp ; ret
0x000000000044c6eb : loopne 0x44c73d ; add esp, 0x40 ; pop rbp ; ret
0x000000000044f75c : loopne 0x44f765 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045129d : loopne 0x4512a6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045302c : loopne 0x453035 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004534a3 : loopne 0x4534ac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004775d0 : loopne 0x477565 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000047e0e0 : loopne 0x47e14c ; cld ; jmp qword ptr [rdi]
0x000000000047e3a0 : loopne 0x47e34c ; cld ; jmp rdi
0x00000000004359a5 : mov ah, -0x17 ; ret
0x0000000000413599 : mov ah, -0x47 ; jle 0x4135d9 ; cmc ; ret 0x958a
0x000000000045e7cc : mov ah, 0x47 ; ret 0x8589
0x00000000004641a4 : mov ah, 0x47 ; ret 0x88b9
0x0000000000403010 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004565c3 : mov al, -0x18 ; push rdi ; ret 0xfffa
0x00000000004771d9 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000042ffc8 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045639a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040907d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044f3fa : mov al, 0 ; call 0x4023b8
0x000000000040663e : mov al, 0 ; call 0x402914
0x000000000047cb20 : mov al, 0x1e ; cli ; call rbx
0x0000000000441d86 : mov al, 0x2d ; jo 0x441d5b ; pop rsp ; ret 0x8589
0x0000000000441efd : mov al, 0x2d ; ret
0x000000000047cca0 : mov al, 0x45 ; cli ; jmp qword ptr [rax]
0x00000000004228de : mov al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000436b4b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000047e080 : mov al, 0x67 ; cld ; jmp qword ptr [rdi]
0x0000000000422d94 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042242d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046b52d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046bd29 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fd75 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041696a : mov al, byte ptr [rbp - 0x1a] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a6c0 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004195cd : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000453b7f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000453b7e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000453aff : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000409254 : mov bh, -0x2a ; ret
0x00000000004449dc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000453b03 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000420c7a : mov bl, -0x17 ; ret
0x0000000000422cc0 : mov bl, -0x76 ; push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000427351 : mov byte ptr [0x682988], al ; pop rbp ; ret
0x000000000041fa36 : mov byte ptr [r15], r9b ; test al, bh ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000419153 : mov byte ptr [r15], r9b ; test byte ptr [rdx - 0x16ffffff], dl ; ret 0
0x0000000000429c82 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043e508 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041fa37 : mov byte ptr [rdi], cl ; test al, bh ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000419154 : mov byte ptr [rdi], cl ; test byte ptr [rdx - 0x16ffffff], dl ; ret 0
0x0000000000416627 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b43 : mov byte ptr [rip + 0x27d9ce], 1 ; ret
0x00000000004161b1 : mov ch, 0x14 ; jmp 0x4161bb
0x000000000042048c : mov cl, -0x1f ; ret 0x8589
0x0000000000420ef6 : mov cl, -0x1f ; ret 0xb4b9
0x0000000000444b4b : mov cl, -0x60 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043049d : mov dh, -0x39 ; pop rbp ; ret
0x000000000043068d : mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422ced : mov dh, -0x3e ; pop rbp ; ret
0x000000000042255d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004072be : mov dh, -0x3f ; pop rbp ; ret
0x000000000042a983 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000044be32 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416741 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042268b : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407a9e : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428c79 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004082c6 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416970 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000408e53 : mov dh, -0x47 ; sbb ah, ch ; ret 0x8b67
0x000000000046be55 : mov dl, -0x47 ; ret
0x000000000047d201 : mov dl, -6 ; call rdx
0x00000000004061a7 : mov ds, word ptr [rbp + 0x20e80047] ; ret
0x0000000000426e7d : mov dword ptr [0x682978], edi ; pop rbp ; ret
0x000000000042732d : mov dword ptr [0x682980], edi ; pop rbp ; ret
0x0000000000436807 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004365cb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043673f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042f229 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000044444e : mov dword ptr [rbp - 0x110], ecx ; call r8
0x000000000042f39b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x00000000004445b5 : mov dword ptr [rbp - 0x120], ecx ; call r8
0x000000000041f73c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x00000000004284a9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419527 : mov dword ptr [rbp - 0x20], eax ; jmp 0x4195e0
0x00000000004360a4 : mov dword ptr [rbp - 0x20], eax ; mov rdi, qword ptr [rbp - 0x30] ; call 0x402339
0x000000000045615c : mov dword ptr [rbp - 0x280], ecx ; call 0x402468
0x000000000041f725 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432259 : mov dword ptr [rbp - 0x2c0], ecx ; call r8
0x0000000000456168 : mov dword ptr [rbp - 0x38], eax ; mov rdi, qword ptr [rbp - 0x28] ; call 0x402469
0x000000000040300e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004196f3 : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045480e : mov dword ptr [rbp - 0x5d8], eax ; call r8
0x00000000004549a8 : mov dword ptr [rbp - 0x5e4], ecx ; call rdx
0x0000000000454acf : mov dword ptr [rbp - 0x5ec], ecx ; call rdx
0x0000000000406242 : mov dword ptr [rbp - 0x69c], esi ; call 0x4024d8
0x000000000042ad51 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000042bb9f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000402e37 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f738 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402e65 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000435084 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406d05 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000444735 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004369bd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b615 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b665 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bd9a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004300a0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000441a8c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000458adc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000459153 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000422d83 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000451a1e : mov eax, 0x2dffffef ; imul ch ; ret
0x0000000000451a72 : mov eax, 0x2dffffef ; imul ebp ; ret
0x00000000004519e6 : mov eax, 0x2dffffef ; ret
0x00000000004548ae : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000454d00 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000454c90 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004364bf : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004350eb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000428463 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044c30f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422ac3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000444ab1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004282fc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000044ea9d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044e9c9 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000044c72e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427a62 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f587 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004302d0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a5bf : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041ebb5 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044c6ea : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042a050 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040892f : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000429922 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004363b4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004364bc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044fb9f : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004365c5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041fc7c : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042ae0c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000436741 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000441a6c : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004228dc : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043f85b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044f8ba : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426631 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000435087 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042b8a1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004578f5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421c63 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000454fd0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045912e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406d09 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042a27d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042a29d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042a2bd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000444a2d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000444a6d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000444a4d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004079b3 : mov eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000044471c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044484f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045399e : mov eax, edi ; pop rbp ; ret
0x000000000042c371 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f8ed : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422be4 : mov eax, edx ; pop rbp ; ret
0x000000000042245f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004447c3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000453b00 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041fde3 : mov eax, esi ; pop rbp ; ret
0x00000000004079b2 : mov eax, r8d ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000046620d : mov ebp, 0xb800004e ; push rcx ; ret
0x0000000000466518 : mov ebp, 0xfffff738 ; call 0x4027f7
0x0000000000402b6b : mov ebp, esp ; call rax
0x0000000000402ad1 : mov ebp, esp ; ja 0x402adc ; pop rbp ; ret
0x0000000000435082 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000444732 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000047d961 : mov ebx, edi ; jmp qword ptr [rdi]
0x000000000042ce0d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004365c8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042cd75 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042d43e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040663c : mov ecx, eax ; mov al, 0 ; call 0x402916
0x0000000000453a3d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000453a0d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000448898 : mov edi, 0x3d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046ee21 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000402b65 : mov edi, 0x67fe20 ; mov rbp, rsp ; call rax
0x0000000000402ae2 : mov edi, 0x6804c0 ; jmp rax
0x0000000000402b22 : mov edi, 0x6804c0 ; jmp rdx
0x0000000000423e30 : mov edi, 0xd564b915 ; ret 0x4890
0x00000000004068ce : mov edi, 1 ; call 0x402b87
0x000000000045616c : mov edi, dword ptr [rbp - 0x28] ; call 0x402465
0x00000000004360a8 : mov edi, dword ptr [rbp - 0x30] ; call 0x402335
0x00000000004563b2 : mov edi, dword ptr [rbp - 0x48] ; call 0x4025f5
0x00000000004548b2 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x0000000000454c93 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x00000000004565bd : mov edi, dword ptr [rbp - 0x64] ; mov rsi, qword ptr [rbp - 0x50] ; call 0x402829
0x0000000000466517 : mov edi, dword ptr [rbp - 0x8c8] ; call 0x4027f8
0x000000000043009c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042a279 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042a299 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042a2b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000444a29 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000444a69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000444a49 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042ce11 : mov edi, dword ptr [rcx] ; call rax
0x0000000000436063 : mov edi, eax ; call 0x402334
0x00000000004321e5 : mov edi, eax ; call 0x402379
0x0000000000476684 : mov edi, eax ; call 0x402894
0x0000000000428913 : mov edi, eax ; call 0x444b64
0x0000000000478ff7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000478ff6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000415a93 : mov edx, 0xabbee133 ; ret 0x6b3d
0x0000000000431229 : mov edx, dword ptr [rbp - 0x30] ; call rax
0x0000000000444ab5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000046eb71 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x000000000041642a : mov esi, dword ptr [rbp - 0x178] ; call 0x4226a8
0x000000000041a417 : mov esi, dword ptr [rbp - 0x1c] ; call 0x422449
0x0000000000431225 : mov esi, dword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x00000000004565c1 : mov esi, dword ptr [rbp - 0x50] ; call 0x402825
0x0000000000432429 : mov esi, eax ; call 0x441b98
0x0000000000402b20 : mov esi, eax ; mov edi, 0x6804c0 ; jmp rdx
0x000000000042ae09 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000431d23 : mov esp, 0x2dfffffe ; call qword ptr [rbx]
0x0000000000431a67 : mov esp, 0x2dfffffe ; ret
0x0000000000431bd3 : mov esp, 0x2dfffffe ; ret 0x2477
0x000000000046ec9e : mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000046ebc7 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x0000000000415a92 : mov esp, 0xbee133ba ; stosd dword ptr [rdi], eax ; ret 0x6b3d
0x00000000004084a5 : mov esp, 0xf507902d ; ret
0x00000000004084d7 : mov esp, 0xf507912d ; ret
0x000000000046b0ca : mov esp, ebp ; pop rbp ; ret
0x0000000000426e7c : mov qword ptr [0x682978], rdi ; pop rbp ; ret
0x000000000042732c : mov qword ptr [0x682980], rdi ; pop rbp ; ret
0x000000000041f73b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000406d04 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000444734 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004369bc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b614 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b664 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043009f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004359a4 : mov r12b, -0x17 ; ret
0x000000000040300f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004084a4 : mov r12d, 0xf507902d ; ret
0x00000000004084d6 : mov r12d, 0xf507912d ; ret
0x00000000004771d8 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000441d85 : mov r8b, 0x2d ; jo 0x441d5c ; pop rsp ; ret 0x8589
0x0000000000441efc : mov r8b, 0x2d ; ret
0x00000000004228dd : mov r8b, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x00000000004204df : mov r9b, -0x1f ; ret 0x8589
0x0000000000420ef5 : mov r9b, -0x1f ; ret 0xb4b9
0x00000000004548ad : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000454cff : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000454c8f : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004350ea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000428462 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044c30e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422ac2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000444ab0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004282fb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000044c72d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427a61 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f586 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004302cf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a5be : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044c6e9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042a04f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429921 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004363b3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004364bb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044fb9e : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041fc7b : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042ae0b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000046c84f : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004228db : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043f85a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b8a0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406d08 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042a27c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042a29c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042a2bc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000444a2c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000444a6c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000444a4c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045399d : mov rax, rdi ; pop rbp ; ret
0x000000000042c370 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f8ec : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422be3 : mov rax, rdx ; pop rbp ; ret
0x000000000041fde2 : mov rax, rsi ; pop rbp ; ret
0x0000000000402b6a : mov rbp, rsp ; call rax
0x0000000000402ad0 : mov rbp, rsp ; ja 0x402add ; pop rbp ; ret
0x0000000000444731 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042ce0c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042cd74 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042d43d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040663b : mov rcx, rax ; mov al, 0 ; call 0x402917
0x000000000045616b : mov rdi, qword ptr [rbp - 0x28] ; call 0x402466
0x00000000004360a7 : mov rdi, qword ptr [rbp - 0x30] ; call 0x402336
0x00000000004548b1 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000454c92 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000466516 : mov rdi, qword ptr [rbp - 0x8c8] ; call 0x4027f9
0x000000000043009b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042a278 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042a298 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042a2b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000444a28 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000444a68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000444a48 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042ce10 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000436062 : mov rdi, rax ; call 0x402335
0x0000000000476683 : mov rdi, rax ; call 0x402895
0x0000000000431228 : mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000444ab4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416429 : mov rsi, qword ptr [rbp - 0x178] ; call 0x4226a9
0x0000000000431224 : mov rsi, qword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x00000000004565c0 : mov rsi, qword ptr [rbp - 0x50] ; call 0x402826
0x0000000000432428 : mov rsi, rax ; call 0x441b99
0x0000000000402b1f : mov rsi, rax ; mov edi, 0x6804c0 ; jmp rdx
0x000000000042ae08 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000046b0c9 : mov rsp, rbp ; pop rbp ; ret
0x000000000043f64a : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000426d17 : mov word ptr [r8 - 0x68], dr1 ; ret 0x45e9
0x0000000000426cad : mov word ptr [r8 - 0x68], dr1 ; ret 0xafe9
0x000000000043f64b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000426d18 : mov word ptr [rax - 0x68], dr1 ; ret 0x45e9
0x0000000000426cae : mov word ptr [rax - 0x68], dr1 ; ret 0xafe9
0x000000000043497a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004322c5 : mov word ptr [rcx], cs ; ret 0x5589
0x000000000043cd9c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000046c0ce : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000406739 : movabs al, byte ptr [0x89c689c789fffffe] ; ret 0xf8e8
0x0000000000407825 : movabs al, byte ptr [0x950f41000000003d] ; ret 0x8445
0x000000000044120c : movabs dword ptr [0x814890558b48749f], eax ; ret 0x13
0x000000000041504e : movabs dword ptr [0x950f000000003daa], eax ; ret 0xd284
0x000000000040af03 : movabs dword ptr [0xfffe9085c7000002], eax ; call rbx
0x000000000047cadc : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xdbf00000 ; stc ; jmp rbx
0x000000000044b1bc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x44b736
0x0000000000420c79 : movsb byte ptr [rdi], byte ptr [rsi] ; mov bl, -0x17 ; ret
0x000000000047cedc : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], ah ; pop rsi ; cli ; call qword ptr [rbx]
0x000000000046b62d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e1dc : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x000000000047e0dc : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add al, ah ; cld ; jmp qword ptr [rdi]
0x000000000047ece1 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rdi]
0x000000000045e8e3 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x000000000045e8ad : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004295b1 : movsx eax, byte ptr [rbp - 5] ; add rsp, 8 ; pop rbp ; ret
0x000000000046b2b9 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000423178 : movsxd rdx, ebp ; ret 0x8990
0x000000000042a982 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000044be31 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416740 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042268a : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407a9d : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428c78 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004082c5 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041696f : movzx eax, al ; pop rbp ; ret
0x0000000000453b02 : movzx eax, ax ; pop rbp ; ret
0x000000000043049c : movzx eax, bh ; pop rbp ; ret
0x000000000042255c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004072bd : movzx eax, cl ; pop rbp ; ret
0x00000000004449db : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043049b : movzx eax, dil ; pop rbp ; ret
0x000000000043068c : movzx eax, dl ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422cec : movzx eax, dl ; pop rbp ; ret
0x00000000004195ce : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004195cf : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000047d001 : nop ; cli ; call qword ptr [rcx]
0x000000000047ce60 : nop ; pop rdx ; cli ; jmp rcx
0x000000000047e960 : nop ; push rax ; std ; jmp qword ptr [rdi]
0x000000000047db40 : nop ; sbb edi, esp ; jmp qword ptr [rdx]
0x000000000047cba0 : nop ; sub edi, edx ; call qword ptr [rcx]
0x0000000000479018 : nop dword ptr [rax + rax] ; ret
0x000000000047d1fd : or al, 0 ; add al, al ; mov dl, -6 ; call rdx
0x000000000047d19d : or al, 0 ; add byte ptr [rax - 0x52], dl ; cli ; call qword ptr [rsi]
0x000000000043e9b7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000441dc7 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000042e07b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054625
0x000000000047ca60 : or bl, 0xf9 ; jmp qword ptr [rcx]
0x0000000000441a4c : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x0000000000422caf : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x000000000047cd7d : or byte ptr [rax], al ; add al, al ; push rsi ; cli ; jmp qword ptr [rdi]
0x000000000047cd7c : or byte ptr [rax], r8b ; add al, al ; push rsi ; cli ; jmp qword ptr [rdi]
0x0000000000434359 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409db8 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000434177 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000425c8c : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041d44d : or byte ptr [rcx + rax*4 - 0x8743], ah ; call qword ptr [rcx]
0x000000000046ee22 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x0000000000441a4d : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x0000000000422cb0 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000047cedd : or dword ptr [rax], eax ; add byte ptr [rax], ah ; pop rsi ; cli ; call qword ptr [rbx]
0x000000000041e9c4 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044a867 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000045914e : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000045234f : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000047d07d : or eax, dword ptr [rax] ; add al, dh ; popfq ; cli ; call qword ptr [rsi]
0x000000000047d0bd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x5e], ah ; cli ; call qword ptr [rsi]
0x000000000043fa41 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045399b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000453a11 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042e07a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054626
0x000000000047d07c : or r8d, dword ptr [rax] ; add al, dh ; popfq ; cli ; call qword ptr [rsi]
0x000000000045399a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000046b155 : out -0x47, al ; ret 0x48e7
0x000000000045e7cb : out -0x4c, al ; ret 0x8589
0x000000000045e81f : out -0x4c, eax ; ret 0x8589
0x00000000004641a3 : out -0x4c, eax ; ret 0x88b9
0x000000000041696c : out 0x24, al ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000430499 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000046b52f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042242f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000047c901 : out dx, eax ; clc ; call rsp
0x000000000040ecce : out dx, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000453a10 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004269c1 : outsb dx, byte ptr [rsi] ; ret
0x000000000042aa29 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042e553 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000424007 : outsd dx, dword ptr [rsi] ; add ch, cl ; ret 1
0x000000000047900c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000047900e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043ece2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000479010 : pop r14 ; pop r15 ; ret
0x00000000004165cf : pop r14 ; pop rbp ; ret
0x000000000043ece4 : pop r15 ; pop rbp ; ret
0x0000000000479012 : pop r15 ; ret
0x000000000046bba8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000047ce01 : pop rax ; cli ; jmp rsi
0x000000000041e9c3 : pop rax ; or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043398f : pop rax ; ret
0x0000000000402b42 : pop rbp ; mov byte ptr [rip + 0x27d9ce], 1 ; ret
0x0000000000402ae1 : pop rbp ; mov edi, 0x6804c0 ; jmp rax
0x0000000000402b1e : pop rbp ; mov rsi, rax ; mov edi, 0x6804c0 ; jmp rdx
0x000000000047900b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000047900f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402ad5 : pop rbp ; ret
0x000000000044eb3c : pop rbp ; test al, -2 ; ret 0x4589
0x000000000044eb6a : pop rbp ; test al, -2 ; ret 0x8eb9
0x000000000043ece1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004165ce : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004079b9 : pop rbx ; pop rbp ; ret
0x0000000000473879 : pop rbx ; ret 0x1dd
0x000000000041a13c : pop rcx ; leave ; jg 0x41a0cf ; push rbp ; ret
0x000000000046be54 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004416a8 : pop rcx ; ret 0x28b9
0x0000000000440e5b : pop rcx ; ret 0x8589
0x000000000045d438 : pop rcx ; ret 0x891f
0x0000000000463887 : pop rcx ; ret 0xba1f
0x000000000045239d : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ece5 : pop rdi ; pop rbp ; ret
0x00000000004592f5 : pop rdi ; pop rdx ; ret
0x00000000004597d7 : pop rdi ; ret
0x000000000046c29b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000047ce61 : pop rdx ; cli ; jmp rcx
0x00000000004592f6 : pop rdx ; ret
0x0000000000473825 : pop rdx ; ret 0x1dd
0x000000000047cee1 : pop rsi ; cli ; call qword ptr [rbx]
0x000000000043ece3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000479011 : pop rsi ; pop r15 ; ret
0x00000000004165d0 : pop rsi ; pop rbp ; ret
0x000000000047900d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000438bf2 : pop rsp ; ret
0x0000000000441d3f : pop rsp ; ret 0x8589
0x000000000044251e : pop rsp ; ret 0xe1b9
0x000000000042aa40 : pop rsp ; ret 0xf66
0x0000000000448ad3 : popfq ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000047d081 : popfq ; cli ; call qword ptr [rsi]
0x0000000000449af1 : popfq ; ret 0xb657
0x0000000000469e48 : popfq ; ret 0xd284
0x0000000000409415 : push -0x100 ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000046a5b7 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x0000000000422d0a : push -0x5e801800 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000459558 : push 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004059db : push 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407973 : push 0x55894800 ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000043e3df : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000444a2e : push r8 ; pop rbp ; ret
0x000000000042c0d9 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000403014 : push rax ; pop rbp ; ret
0x000000000045da57 : push rax ; ret
0x000000000047d1a0 : push rax ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rsi]
0x000000000047e860 : push rax ; std ; call qword ptr [rax]
0x000000000047e961 : push rax ; std ; jmp qword ptr [rdi]
0x000000000044bb1b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000444ab6 : push rbp ; clc ; pop rbp ; ret
0x000000000044c4f3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004526d3 : push rbp ; fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x0000000000407977 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000425e33 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x000000000042c983 : push rbp ; fsubr st(1) ; ret 0
0x000000000043c518 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000043c6fe : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000043c7a4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000434837 : push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000043c7d2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000043c8a0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000043ca36 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000422cc2 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x000000000045942d : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000429c81 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000402b64 : push rbp ; mov edi, 0x67fe20 ; mov rbp, rsp ; call rax
0x0000000000444730 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004322c4 : push rbp ; mov word ptr [rcx], cs ; ret 0x5589
0x000000000041a140 : push rbp ; ret
0x000000000042e10e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000441dc6 : push rbx ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000045b34b : push rbx ; ret 0xaf58
0x0000000000461097 : push rcx ; ret
0x000000000043393b : push rdi ; ret
0x0000000000403cbe : push rdi ; ret 0xc8c0
0x00000000004565c5 : push rdi ; ret 0xfffa
0x000000000045b2f7 : push rdx ; ret 0xaf58
0x0000000000423f34 : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047cd81 : push rsi ; cli ; jmp qword ptr [rdi]
0x0000000000403c6a : push rsi ; ret 0xc8c0
0x0000000000446f55 : pushfq ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004565bf : pushfq ; mov rsi, qword ptr [rbp - 0x50] ; call 0x402827
0x0000000000432031 : pushfq ; ret 0x8445
0x000000000040720d : pushfq ; ret 0xd284
0x000000000043417f : pushfq ; ret 0xe280
0x0000000000453a0e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000453a3e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002da : ret
0x0000000000416432 : ret 0
0x000000000042b46f : ret 0x10
0x000000000041a187 : ret 0x124
0x0000000000425b2c : ret 0x13
0x000000000040866d : ret 0x134
0x0000000000410ce6 : ret 0x1d
0x0000000000473826 : ret 0x1dd
0x0000000000454162 : ret 0x1f85
0x0000000000463677 : ret 0x20
0x000000000046bd5b : ret 0x2030
0x000000000041e02a : ret 0x21b
0x0000000000409e77 : ret 0x23e8
0x0000000000431bd8 : ret 0x2477
0x0000000000410992 : ret 0x2799
0x00000000004029f2 : ret 0x27d9
0x00000000004027f2 : ret 0x27da
0x00000000004025f2 : ret 0x27db
0x00000000004023f2 : ret 0x27dc
0x000000000042aa2a : ret 0x280f
0x00000000004416a9 : ret 0x28b9
0x00000000004536d5 : ret 0x29b9
0x0000000000413b0d : ret 0x2a
0x000000000040fcc6 : ret 0x2ab1
0x000000000043f216 : ret 0x2c1
0x000000000044ce33 : ret 0x2c22
0x0000000000448d00 : ret 0x2e42
0x000000000040ddd2 : ret 0x3019
0x0000000000440501 : ret 0x31e9
0x0000000000470e25 : ret 0x3617
0x0000000000423a01 : ret 0x3948
0x0000000000444efd : ret 0x39aa
0x000000000041270d : ret 0x3e
0x0000000000467008 : ret 0x40
0x0000000000429dda : ret 0x42ab
0x0000000000438e5a : ret 0x43fa
0x000000000042b290 : ret 0x4589
0x0000000000426d1c : ret 0x45e9
0x000000000041aa71 : ret 0x480a
0x000000000046fd3f : ret 0x4810
0x000000000046a5be : ret 0x483f
0x0000000000423e35 : ret 0x4890
0x0000000000414561 : ret 0x48e0
0x000000000046b13b : ret 0x48e7
0x0000000000423fd9 : ret 0x4a8b
0x0000000000478aa6 : ret 0x4eb9
0x000000000042b854 : ret 0x50e9
0x00000000004322c7 : ret 0x5589
0x00000000004506f9 : ret 0x558a
0x0000000000466aff : ret 0x5be8
0x000000000044fc73 : ret 0x5e5
0x0000000000418c35 : ret 0x5e8
0x0000000000419db4 : ret 0x6233
0x0000000000418ad3 : ret 0x67e8
0x000000000041e35d : ret 0x67e9
0x000000000040ce67 : ret 0x6b3d
0x00000000004194b1 : ret 0x6b7b
0x000000000041a17b : ret 0x6be9
0x000000000041165e : ret 0x6c6b
0x00000000004633a3 : ret 0x6d
0x000000000046cdf9 : ret 0x6f69
0x0000000000425da4 : ret 0x71b9
0x0000000000440c0d : ret 0x7256
0x000000000045f043 : ret 0x73
0x000000000045385a : ret 0x7406
0x000000000041e34e : ret 0x76e9
0x000000000045b758 : ret 0x791e
0x00000000004596d1 : ret 0x79e8
0x000000000045e473 : ret 0x7a
0x000000000046722f : ret 0x7b9
0x0000000000423d61 : ret 0x7d81
0x000000000042688b : ret 0x7dbc
0x0000000000462f37 : ret 0x7f76
0x00000000004607c7 : ret 0x80
0x0000000000405f41 : ret 0x8041
0x0000000000465228 : ret 0x8148
0x000000000043068e : ret 0x8348
0x0000000000433823 : ret 0x83a1
0x00000000004053d7 : ret 0x8445
0x0000000000474b2d : ret 0x848e
0x0000000000403b1d : ret 0x8589
0x00000000004641a6 : ret 0x88b9
0x000000000041a839 : ret 0x890a
0x000000000047171e : ret 0x8916
0x0000000000438cf0 : ret 0x891a
0x000000000045d439 : ret 0x891f
0x000000000046b70c : ret 0x8934
0x000000000045c9d5 : ret 0x893f
0x00000000004079b1 : ret 0x8944
0x000000000041de6b : ret 0x8948
0x000000000041df61 : ret 0x894d
0x0000000000408d7c : ret 0x8967
0x000000000042dd7c : ret 0x897f
0x000000000042317a : ret 0x8990
0x0000000000455251 : ret 0x89b6
0x0000000000452989 : ret 0x89b9
0x000000000045f659 : ret 0x89e8
0x0000000000419d39 : ret 0x89f7
0x0000000000473747 : ret 0x89fc
0x00000000004532a0 : ret 0x8ae8
0x000000000041a2f0 : ret 0x8af7
0x000000000046b6e8 : ret 0x8b34
0x000000000040797b : ret 0x8b48
0x0000000000444440 : ret 0x8b4c
0x0000000000408e57 : ret 0x8b67
0x0000000000468262 : ret 0x8be8
0x0000000000414e3d : ret 0x8d88
0x000000000042517b : ret 0x8d89
0x000000000044eb6d : ret 0x8eb9
0x000000000041fa1c : ret 0x8ffd
0x0000000000425fc6 : ret 0x94e8
0x00000000004775d8 : ret 0x9589
0x000000000041359e : ret 0x958a
0x000000000044caec : ret 0x979f
0x000000000041e4d3 : ret 0x97e8
0x0000000000411aa2 : ret 0x993a
0x0000000000476e06 : ret 0x9ae9
0x0000000000443121 : ret 0x9b3e
0x0000000000419e7c : ret 0x9d88
0x000000000041df04 : ret 0xa
0x0000000000406891 : ret 0xa3b9
0x000000000044f03b : ret 0xa4be
0x000000000042e0b9 : ret 0xa6e9
0x0000000000450d7e : ret 0xa80b
0x000000000043cbc5 : ret 0xa9b9
0x0000000000438642 : ret 0xade6
0x000000000045b2f8 : ret 0xaf58
0x0000000000426cb2 : ret 0xafe9
0x0000000000405baa : ret 0xb0
0x000000000041e6b7 : ret 0xb3e8
0x0000000000420ef8 : ret 0xb4b9
0x0000000000449af2 : ret 0xb657
0x000000000045e1ff : ret 0xb846
0x000000000043c330 : ret 0xb91a
0x000000000042c9b6 : ret 0xb948
0x000000000045ab87 : ret 0xb957
0x000000000045550b : ret 0xb9b6
0x000000000044eb27 : ret 0xba03
0x0000000000463888 : ret 0xba1f
0x000000000043db70 : ret 0xbae8
0x0000000000402b05 : ret 0xc148
0x000000000042258e : ret 0xc1e4
0x0000000000422cee : ret 0xc35d
0x0000000000413806 : ret 0xc7e9
0x0000000000403c6b : ret 0xc8c0
0x00000000004059e3 : ret 0xd284
0x000000000043e3e3 : ret 0xd4e9
0x0000000000432ed7 : ret 0xd58d
0x0000000000450e42 : ret 0xd592
0x0000000000451b3c : ret 0xd957
0x000000000042e082 : ret 0xdde9
0x000000000041570d : ret 0xe
0x0000000000473649 : ret 0xe0a5
0x000000000044251f : ret 0xe1b9
0x0000000000417c28 : ret 0xe280
0x000000000040860f : ret 0xe900
0x000000000041ac10 : ret 0xe90a
0x000000000042e117 : ret 0xe97f
0x000000000047741e : ret 0xe9fc
0x000000000046deed : ret 0xec0b
0x000000000043e9fc : ret 0xee8
0x000000000042b7b5 : ret 0xefe9
0x0000000000409dc1 : ret 0xf280
0x00000000004135e7 : ret 0xf2b9
0x000000000040d00a : ret 0xf30
0x000000000041540f : ret 0xf40
0x000000000040b322 : ret 0xf41
0x0000000000416075 : ret 0xf5e8
0x00000000004083c2 : ret 0xf5ed
0x000000000042aa41 : ret 0xf66
0x0000000000406742 : ret 0xf8e8
0x0000000000466a8f : ret 0xf9b9
0x000000000045a787 : ret 0xfa
0x0000000000465266 : ret 0xfa81
0x0000000000408661 : ret 0xfae9
0x0000000000452a4a : ret 0xfaf8
0x0000000000452bba : ret 0xfaff
0x0000000000466a5e : ret 0xfce8
0x000000000043264a : ret 0xfd02
0x000000000042c666 : ret 0xff3
0x0000000000475b8a : ret 0xff6b
0x0000000000477b56 : ret 0xff9b
0x000000000043c51b : ret 0xff9f
0x000000000043debe : ret 0xffa5
0x0000000000477d3c : ret 0xffbb
0x000000000043c701 : ret 0xffbf
0x000000000043d16b : ret 0xffc4
0x000000000043c7a7 : ret 0xffc5
0x0000000000405e4a : ret 0xffca
0x000000000043483a : ret 0xffd0
0x000000000043c7d5 : ret 0xffd5
0x000000000043c8a3 : ret 0xffd8
0x000000000043d211 : ret 0xffd9
0x000000000043ca39 : ret 0xffe0
0x0000000000466c85 : ret 0xfff7
0x0000000000476688 : ret 0xfff8
0x000000000046651f : ret 0xfff9
0x000000000043bb0e : ret 0xfffa
0x0000000000452b65 : ret 0xfffb
0x0000000000436067 : ret 0xfffc
0x000000000040624a : ret 0xffff
0x000000000040bc13 : ret 1
0x0000000000425e37 : ret 2
0x00000000004009a0 : ret 3
0x0000000000425b4b : ret 4
0x000000000044a898 : ret 5
0x0000000000457c3e : ret 6
0x000000000042e521 : ret 7
0x000000000043ebe0 : ret 8
0x000000000047ca61 : retf ; stc ; jmp qword ptr [rcx]
0x0000000000402ae3 : rol byte ptr [rax + rbp*2], 0 ; jmp rax
0x0000000000402b23 : rol byte ptr [rax + rbp*2], 0 ; jmp rdx
0x00000000004278ca : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040668e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429fea : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040790e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004079ad : rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x000000000040a089 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000456905 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004788e2 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000406ba1 : rol byte ptr [rsi], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421e28 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004125d8 : rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x00000000004365c6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004444f2 : ror byte ptr [r15], -0x64 ; ret 0xd284
0x0000000000402b0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402b1b ; pop rbp ; ret
0x0000000000419621 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x00000000004082c7 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x408330 ; ret
0x000000000040b40b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40b474 ; ret
0x000000000042268c : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004079b4 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x0000000000407a9f : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040c105 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e25b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a4e2 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41a4f2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419406 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x419415 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004409f3 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x440a03 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443052 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x443061 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409079 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408857 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004365c7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004444f3 : ror byte ptr [rdi], -0x64 ; ret 0xd284
0x000000000044c4f0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041e9cb : sahf ; ret
0x00000000004125db : sahf ; ret 0x8445
0x0000000000449b45 : sahf ; ret 0xb657
0x0000000000406334 : sahf ; ret 0xd284
0x000000000042bd96 : sal byte ptr [rcx + 0x4f890047], 0x10 ; pop rbp ; ret
0x0000000000402ade : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; rol byte ptr [rax + rbp*2], 0 ; jmp rax
0x0000000000409255 : salc ; ret
0x000000000047de80 : sar byte ptr [rdx], 1 ; cld ; jmp qword ptr [rsi]
0x000000000041cf3b : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000047caa1 : sar cl, 1 ; jmp qword ptr [rcx]
0x0000000000422ce0 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000402b0e : sar eax, 1 ; jne 0x402b19 ; pop rbp ; ret
0x0000000000402b0d : sar rax, 1 ; jne 0x402b1a ; pop rbp ; ret
0x0000000000408dc5 : sbb ah, ch ; ret 0x8967
0x0000000000408e55 : sbb ah, ch ; ret 0x8b67
0x000000000047e1bd : sbb al, 0 ; add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x0000000000476973 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000454d02 : sbb byte ptr [rax - 0x75], cl ; jge 0x454cbc ; call rax
0x0000000000454d01 : sbb byte ptr [rax - 0x75], cl ; jge 0x454cbd ; call rax
0x000000000047dd7d : sbb byte ptr [rax], al ; add byte ptr [rax + 0x1e], dh ; cld ; jmp qword ptr [rdx]
0x000000000047dd7c : sbb byte ptr [rax], r8b ; add byte ptr [rax + 0x1e], dh ; cld ; jmp qword ptr [rdx]
0x000000000043f679 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047d460 : sbb cl, -6 ; jmp rsi
0x0000000000473275 : sbb dl, dh ; ret
0x000000000047de7d : sbb dword ptr [rax], eax ; add al, dl ; cmp bh, ah ; jmp qword ptr [rsi]
0x000000000044c0d3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000047de7c : sbb dword ptr [rax], r8d ; add al, dl ; cmp bh, ah ; jmp qword ptr [rsi]
0x000000000043cbbe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000047e0dd : sbb eax, dword ptr [rax] ; add al, ah ; cld ; jmp qword ptr [rdi]
0x000000000047db41 : sbb edi, esp ; jmp qword ptr [rdx]
0x00000000004732c9 : sbb edx, esi ; ret
0x0000000000476972 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000047d1a1 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rsi]
0x000000000041e87e : scasd eax, dword ptr [rdi] ; imul edi, dword ptr [rip], 0xf ; pushfq ; ret 0xd284
0x000000000041e35c : scasd eax, dword ptr [rdi] ; ret 0x67e9
0x000000000041e34d : scasd eax, dword ptr [rdi] ; ret 0x76e9
0x000000000041c14b : scasd eax, dword ptr [rdi] ; ret 0x8589
0x000000000042c394 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422ce6 : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x000000000042c396 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004768e2 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000042aa5f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000046c73b : shl dword ptr [rsi + rdi*8], -1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000453a3f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004539d8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000453a0f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000453998 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000047d45d : sldt word ptr [rax] ; sbb cl, -6 ; jmp rsi
0x0000000000421d47 : stc ; cld ; ret
0x000000000047ca62 : stc ; jmp qword ptr [rcx]
0x000000000047cae2 : stc ; jmp rbx
0x0000000000456163 : stc ; ret 0xfffa
0x000000000043435b : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000047e862 : std ; call qword ptr [rax]
0x000000000047e8c2 : std ; call qword ptr [rbx]
0x000000000047ece2 : std ; call qword ptr [rdi]
0x000000000047e682 : std ; jmp qword ptr [rbx]
0x000000000047e962 : std ; jmp qword ptr [rdi]
0x000000000047eb22 : std ; jmp rax
0x00000000004295b4 : sti ; add rsp, 8 ; pop rbp ; ret
0x000000000047d962 : sti ; jmp qword ptr [rdi]
0x000000000040ce66 : stosb byte ptr [rdi], al ; ret 0x6b3d
0x000000000041196e : stosd dword ptr [rdi], eax ; ret 0x6b3d
0x00000000004292d0 : sub al, -0x4c ; ret
0x0000000000413597 : sub al, 0x30 ; mov ah, -0x47 ; jle 0x4135db ; cmc ; ret 0x958a
0x0000000000439c07 : sub al, 0x38 ; ret 0x8589
0x000000000043cbc3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000408649 : sub al, dh ; ret
0x0000000000426e81 : sub dword ptr [rax], ebp ; pop rbp ; ret
0x000000000041a4bb : sub eax, 0xc7000000 ; les r13d, ptr [r15] ; in eax, dx ; ret
0x000000000043435c : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000041fddd : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000047cba1 : sub edi, edx ; call qword ptr [rcx]
0x00000000004790c1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004790c0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046eff9 : sysenter
0x000000000044bb3b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004771af : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000044eb3d : test al, -2 ; ret 0x4589
0x000000000044eb6b : test al, -2 ; ret 0x8eb9
0x000000000041e710 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000456748 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042dc84 : test al, 0x2d ; call 0xffffffff8a05422a
0x000000000042dc83 : test al, 0x2d ; call 0xffffffff8a05422b
0x000000000042dcc9 : test al, 0x2d ; jmp 0xffffffff8a05426f
0x000000000042dcc8 : test al, 0x2d ; jmp 0xffffffff8a054270
0x000000000042df6c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042dd78 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x00000000004196f5 : test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000043f85d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042b58b : test al, 0x70 ; ret 0x4589
0x000000000042b852 : test al, 0x70 ; ret 0x50e9
0x000000000042b7b3 : test al, 0x70 ; ret 0xefe9
0x000000000044ba18 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041fa39 : test al, bh ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000000000047e1bc : test byte ptr [rax + rax], bl ; add byte ptr [rax + 0x68], ah ; cld ; call qword ptr [rdx]
0x000000000047901a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000426111 : test byte ptr [rbx + rax], cl ; add cl, ch ; ret
0x000000000047e8bc : test byte ptr [rbx], ah ; add byte ptr [rax], al ; xor byte ptr [rdx - 3], cl ; call qword ptr [rbx]
0x000000000045e20a : test byte ptr [rbx], ah ; ret 0
0x00000000004356f0 : test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000419156 : test byte ptr [rdx - 0x16ffffff], dl ; ret 0
0x0000000000458296 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044a865 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041f06c : test byte ptr [rsi + rax], ch ; add cl, ch ; ret 1
0x000000000040bc0d : test ch, ch ; add al, 0 ; add cl, ch ; ret 1
0x000000000044e3d4 : test ch, cl ; ret
0x000000000045a2b6 : test cl, dh ; ret 0
0x0000000000459efe : test dl, bl ; ret 0
0x00000000004607c0 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x0000000000423172 : test dword ptr [rax + 0x2dffffef], ebp ; movsxd rdx, ebp ; ret 0x8990
0x0000000000422e2a : test dword ptr [rax + 0x2dffffef], ebp ; ret
0x0000000000451a1d : test dword ptr [rax + 0x2dffffef], edi ; imul ch ; ret
0x0000000000451a71 : test dword ptr [rax + 0x2dffffef], edi ; imul ebp ; ret
0x00000000004519e5 : test dword ptr [rax + 0x2dffffef], edi ; ret
0x000000000040db80 : test dword ptr [rax + 0x2dfffffa], ecx ; jge 0x40dbc8 ; cmc ; ret 0x8589
0x000000000040dbd4 : test dword ptr [rax + 0x2dfffffa], ecx ; jle 0x40dc1c ; cmc ; ret 0x8589
0x000000000040ecc8 : test dword ptr [rax + 0x2dfffffa], ecx ; out dx, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000040c824 : test dword ptr [rax + 0x2dfffffa], ecx ; ret
0x000000000041098c : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x2799
0x000000000040fcc0 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x2ab1
0x000000000040ddcc : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x3019
0x0000000000411658 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x6c6b
0x0000000000411a9c : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x993a
0x000000000040d004 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0xf30
0x000000000040ce60 : test dword ptr [rax + 0x2dfffffa], ecx ; stosb byte ptr [rdi], al ; ret 0x6b3d
0x0000000000411968 : test dword ptr [rax + 0x2dfffffa], ecx ; stosd dword ptr [rdi], eax ; ret 0x6b3d
0x000000000045e204 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x0000000000467002 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x000000000041e024 : test dword ptr [rax - 0x17000009], ecx ; ret 0x21b
0x0000000000446b01 : test dword ptr [rax - 0x2c000002], ecx ; ret 0x39aa
0x000000000045e83b : test dword ptr [rcx + 1], ebp ; ret
0x0000000000423af7 : test dword ptr [rdi + rbp*8 - 0x2db50001], ebp ; ret
0x00000000004218e0 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rax]
0x00000000004212ab : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000441387 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdi
0x000000000044bb20 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000044b888 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000425fdf : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000045a978 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x00000000004319f6 : test dword ptr [rsi + rdi*8 + 0x3d2dffff], edi ; ret
0x0000000000431a66 : test dword ptr [rsi + rdi*8 + 0x3e2dffff], edi ; ret
0x0000000000431aba : test dword ptr [rsi + rdi*8 - 0x5dd20001], edi ; ret
0x00000000004319a2 : test dword ptr [rsi + rdi*8 - 0x5ed20001], edi ; ret
0x0000000000448501 : test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000448ad8 : test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000047688b : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004771b1 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004761c5 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x00000000004786a4 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x00000000004789c3 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004777b4 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004778ba : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x00000000004759a3 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x00000000004788e7 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000476975 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000476c7e : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000476dfe : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000445911 : test dword ptr [rsp + rdi*8 - 0x7bf00001], esi ; ret
0x00000000004526d7 : test ebp, eax ; idiv edi ; call rax
0x00000000004658c6 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004529fd : test esi, eax ; idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000044e3d3 : test r13b, r9b ; ret
0x000000000041a139 : ud2b ; cld ; pop rcx ; leave ; jg 0x41a0d2 ; push rbp ; ret
0x0000000000422baa : wait ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041fa1b : wait ; ret 0x8ffd
0x0000000000465412 : wait ; ret 0xf40
0x0000000000473745 : xchg ax, dx ; ret 0x89fc
0x000000000045e88f : xchg byte ptr [rcx + 1], ch ; ret
0x00000000004775d2 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000436bf1 : xchg eax, ebp ; ret
0x0000000000405f40 : xchg eax, ebp ; ret 0x8041
0x00000000004053d6 : xchg eax, ebp ; ret 0x8445
0x00000000004059e2 : xchg eax, ebp ; ret 0xd284
0x0000000000422ce7 : xchg eax, ebp ; ret 0xe280
0x0000000000428c59 : xchg eax, ebp ; ret 0xf280
0x000000000044ed6b : xchg eax, ebx ; ret
0x000000000042417c : xchg eax, ebx ; ret 0xd284
0x0000000000413596 : xchg eax, ebx ; sub al, 0x30 ; mov ah, -0x47 ; jle 0x4135dc ; cmc ; ret 0x958a
0x0000000000439beb : xchg eax, ecx ; ret
0x0000000000424098 : xchg eax, edi ; ret 0xd284
0x0000000000441a4f : xchg eax, edi ; ret 0xe280
0x0000000000419157 : xchg eax, edx ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000439d3b : xchg eax, edx ; ret
0x0000000000434104 : xchg eax, edx ; ret 0x8445
0x0000000000473746 : xchg eax, edx ; ret 0x89fc
0x000000000044ba1e : xchg eax, edx ; ret 0xd284
0x000000000047741d : xchg eax, edx ; ret 0xe9fc
0x0000000000421e27 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000043f572 : xchg eax, esi ; ret
0x0000000000423b87 : xchg eax, esi ; ret 0x8445
0x0000000000424cae : xchg eax, esi ; ret 0xd284
0x000000000041ad3b : xchg eax, esp ; ret
0x0000000000405f2e : xchg eax, esp ; ret 0x8445
0x00000000004087db : xchg eax, esp ; ret 0xd284
0x0000000000417c27 : xchg eax, esp ; ret 0xe280
0x0000000000409dc0 : xchg eax, esp ; ret 0xf280
0x000000000042c395 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045399c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000047caa0 : xor al, dl ; stc ; jmp qword ptr [rcx]
0x000000000042602e : xor bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000047e420 : xor bl, al ; cld ; jmp rdx
0x000000000042df6e : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042e115 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000450a1a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047e8c0 : xor byte ptr [rdx - 3], cl ; call qword ptr [rbx]
0x00000000004576aa : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047e680 : xor byte ptr [rdx], al ; std ; jmp qword ptr [rbx]
0x000000000046620a : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x000000000042dd7a : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000043fb77 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000413245 : xor eax, dword ptr [rax] ; add al, ch ; ret
0x000000000043673d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
