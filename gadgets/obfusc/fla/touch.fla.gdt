0x0000000000435025 : adc byte ptr [rax], al ; add byte ptr [rax], ch ; jns 0x435030 ; jmp rdi
0x00000000004056a9 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004255ab : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f9eb : adc eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x000000000040bc08 : adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x0000000000422e79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434163 : add ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax], bl ; and edi, ebp ; call qword ptr [rsi]
0x0000000000433a6f : add ah, ah ; out -4, al ; jmp rsp
0x0000000000433aaf : add ah, ah ; std ; jmp rsp
0x0000000000433caf : add ah, al ; add bh, bh ; jmp rsp
0x0000000000434143 : add ah, al ; add dword ptr [rax], eax ; add byte ptr [rax], ch ; and ebp, edi ; call qword ptr [rax]
0x0000000000433cf1 : add al, -1 ; jmp rsp
0x000000000043294c : add al, 0 ; add byte ptr [rax], al ; ret 0x4333
0x0000000000404639 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416d40 : add al, 0 ; add byte ptr [rbx - 0x66d25bbb], cl ; ret 0xf61d
0x000000000042a10f : add al, 0x25 ; ret
0x0000000000434107 : add al, bh ; sbb al, -3 ; call qword ptr [rbx]
0x00000000004126ba : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424ea3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e28 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x54d267bb], cl ; ret
0x000000000042ece8 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040562b : add al, ch ; lahf ; ret 0xffff
0x0000000000431878 : add al, ch ; ret 0xfd00
0x0000000000427508 : add al, ch ; ret 0xfda3
0x00000000004056c8 : add al, ch ; ret 0xffc7
0x00000000004055f4 : add al, ch ; salc ; ret 0xffff
0x00000000004052ce : add bh, al ; lodsb al, byte ptr [rsi] ; insd dword ptr [rdi], dx ; pop rdi ; ret
0x0000000000417279 : add bh, al ; mov r8b, 0x38 ; ret
0x0000000000410fd6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000410df6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x00000000004114d6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000042529e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000425006 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042c2cf : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042c8a6 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000040b887 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rax]
0x000000000040bad8 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rbx]
0x000000000040bb0b : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x000000000040f687 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000040f4ac : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp rsi
0x0000000000433cb1 : add bh, bh ; jmp rsp
0x000000000043194f : add bl, dh ; ret
0x0000000000415b6f : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040b924 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043294b : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret 0x4333
0x0000000000433baf : add byte ptr [rax + rbp*2 - 2], dh ; jmp rsp
0x0000000000434327 : add byte ptr [rax - 0x1e], bl ; std ; call qword ptr [rbx]
0x0000000000434307 : add byte ptr [rax - 0x23], cl ; std ; jmp qword ptr [rsi]
0x00000000004342e7 : add byte ptr [rax - 0x24], bh ; std ; jmp rcx
0x000000000042a10c : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x00000000004066c9 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp qword ptr [rbx]
0x00000000004056f6 : add byte ptr [rax - 0x75], cl ; jge 0x4056f2 ; call 0x4019c7
0x0000000000423e2d : add byte ptr [rax - 0x77], cl ; jge 0x423e30 ; pop rbp ; ret
0x00000000004177de : add byte ptr [rax - 0x77], cl ; mov r8d, 0x9ab045c7 ; ret 0xf61d
0x0000000000410e42 : add byte ptr [rax - 0x77], cl ; or bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x0000000000433cee : add byte ptr [rax], al ; add al, -1 ; jmp rsp
0x000000000043294a : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; ret 0x4333
0x0000000000405629 : add byte ptr [rax], al ; add al, ch ; lahf ; ret 0xffff
0x00000000004056c6 : add byte ptr [rax], al ; add al, ch ; ret 0xffc7
0x00000000004055f2 : add byte ptr [rax], al ; add al, ch ; salc ; ret 0xffff
0x0000000000411aeb : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042529c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000425004 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042c8a4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000043194d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040b922 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004066c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp qword ptr [rbx]
0x0000000000423e2b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x423e32 ; pop rbp ; ret
0x000000000043194b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000430449 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043035d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403d36 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423e2a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043194c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416ab6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x372da445], cl ; ret
0x0000000000422bbe : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412159 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4d2ddc45], cl ; ret
0x00000000004301de : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x00000000004120a9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2ddc45], cl ; push rsi ; ret
0x0000000000412261 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6b2ddc45], cl ; push rsi ; ret
0x0000000000404914 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6c2d9845], cl ; pop rdi ; ret
0x000000000040495f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6d2d9845], cl ; pop rdi ; ret
0x0000000000404e73 : add byte ptr [rax], al ; add byte ptr [rbx - 0x53d267bb], cl ; ret
0x0000000000428429 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000416d8b : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d25bbb], cl ; ret 0xf61d
0x00000000004283a5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000419196 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72bb3], cl ; ret 0x8ce8
0x000000000042a5de : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405a83 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000421a71 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041203b : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004284e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041164f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x0000000000406d63 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040bbc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041aacd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403db5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f806 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042a15d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042519a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041596f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000041aaaf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403d38 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004142f7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000413f44 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000427ced : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004342e2 : add byte ptr [rax], al ; add eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x24], bh ; std ; jmp rcx
0x0000000000422e7b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412569 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004228e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fda8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004071db : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404736 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040185b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004340a2 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rsi], dl ; std ; call qword ptr [rax]
0x00000000004346c6 : add byte ptr [rax], al ; call 0x234345c0
0x00000000004055f3 : add byte ptr [rax], al ; call 0x4018d4
0x000000000043156d : add byte ptr [rax], al ; call 0x4018d8
0x0000000000434f26 : add byte ptr [rax], al ; call 0xffffffffe1434e78
0x0000000000434106 : add byte ptr [rax], al ; clc ; sbb al, -3 ; call qword ptr [rbx]
0x0000000000434b26 : add byte ptr [rax], al ; cwde ; or edi, edi ; call rdx
0x0000000000433a6e : add byte ptr [rax], al ; in al, -0x1a ; cld ; jmp rsp
0x0000000000433aae : add byte ptr [rax], al ; in al, 0x26 ; std ; jmp rsp
0x0000000000434162 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; std ; call qword ptr [rsi]
0x0000000000401a19 : add byte ptr [rax], al ; jmp 0x401879
0x0000000000413f40 : add byte ptr [rax], al ; jmp 0x413f4f
0x0000000000427ce9 : add byte ptr [rax], al ; jmp 0x427cf8
0x0000000000428959 : add byte ptr [rax], al ; jmp 0x428968
0x00000000004342e6 : add byte ptr [rax], al ; js 0x4342cb ; std ; jmp rcx
0x0000000000428b67 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423e2c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406ac9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041a399 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000435022 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rax], al ; add byte ptr [rax], ch ; jns 0x435033 ; jmp rdi
0x0000000000434322 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x1e], bl ; std ; call qword ptr [rbx]
0x0000000000434f22 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; call 0xffffffffe1434e7c
0x0000000000433aee : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, ebp ; jmp rsp
0x0000000000419d1c : add byte ptr [rax], al ; or byte ptr [rdi], 0x9c ; ret 0xd284
0x0000000000434326 : add byte ptr [rax], al ; pop rax ; loop 0x43432d ; call qword ptr [rbx]
0x00000000004056ab : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040463a : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f9ec : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000422898 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043194e : add byte ptr [rax], al ; ret
0x000000000043294e : add byte ptr [rax], al ; ret 0x4333
0x0000000000434166 : add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; std ; call qword ptr [rsi]
0x00000000004340a6 : add byte ptr [rax], al ; sbb byte ptr [rsi], dl ; std ; call qword ptr [rax]
0x0000000000435026 : add byte ptr [rax], al ; sub byte ptr [rcx - 1], bh ; jmp rdi
0x0000000000434146 : add byte ptr [rax], al ; sub byte ptr [rcx], ah ; std ; call qword ptr [rax]
0x0000000000433dae : add byte ptr [rax], al ; test byte ptr [rbx - 1], al ; jmp rsp
0x0000000000433dee : add byte ptr [rax], al ; test byte ptr [rbx - 1], cl ; jmp rsp
0x0000000000434102 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; clc ; sbb al, -3 ; call qword ptr [rbx]
0x0000000000433d2e : add byte ptr [rax], al ; test byte ptr [rdi + rdi*8], bl ; jmp rsp
0x0000000000434167 : add byte ptr [rax], bl ; and edi, ebp ; call qword ptr [rsi]
0x0000000000434147 : add byte ptr [rax], ch ; and ebp, edi ; call qword ptr [rax]
0x0000000000435027 : add byte ptr [rax], ch ; jns 0x43502e ; jmp rdi
0x0000000000425ec5 : add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430c6f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x430c57 ; ret
0x0000000000416ab8 : add byte ptr [rbx + 0x372da445], cl ; ret
0x0000000000417030 : add byte ptr [rbx + 0x382da445], cl ; ret
0x000000000040463b : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f9ed : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412119 : add byte ptr [rbx + 0x4c2ddc45], cl ; ret
0x000000000041215b : add byte ptr [rbx + 0x4d2ddc45], cl ; ret
0x0000000000422899 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004301e0 : add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x00000000004120ab : add byte ptr [rbx + 0x6a2ddc45], cl ; push rsi ; ret
0x0000000000412263 : add byte ptr [rbx + 0x6b2ddc45], cl ; push rsi ; ret
0x0000000000404916 : add byte ptr [rbx + 0x6c2d9845], cl ; pop rdi ; ret
0x0000000000404961 : add byte ptr [rbx + 0x6d2d9845], cl ; pop rdi ; ret
0x0000000000434323 : add byte ptr [rbx + rax - 0x1da80000], ah ; std ; call qword ptr [rbx]
0x0000000000434303 : add byte ptr [rbx + rax - 0x22b80000], al ; std ; jmp qword ptr [rsi]
0x00000000004342e3 : add byte ptr [rbx + rax], ah ; add byte ptr [rax - 0x24], bh ; std ; jmp rcx
0x0000000000433b2f : add byte ptr [rbx + rbp*8 - 3], al ; jmp rsp
0x0000000000404e75 : add byte ptr [rbx - 0x53d267bb], cl ; ret
0x0000000000404e2a : add byte ptr [rbx - 0x54d267bb], cl ; ret
0x000000000042842b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000416d8d : add byte ptr [rbx - 0x65d25bbb], cl ; ret 0xf61d
0x00000000004283a7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000416d42 : add byte ptr [rbx - 0x66d25bbb], cl ; ret 0xf61d
0x0000000000419198 : add byte ptr [rbx - 0x76b72bb3], cl ; ret 0x8ce8
0x0000000000405206 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004044c6 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042a5e0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405a85 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000421a73 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000434103 : add byte ptr [rcx + rax + 0x1cf80000], al ; std ; call qword ptr [rbx]
0x00000000004340a3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; sbb byte ptr [rsi], dl ; std ; call qword ptr [rax]
0x0000000000405268 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004252ee : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041203d : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401e58 : add byte ptr [rcx], al ; ret
0x0000000000411f07 : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000432cd7 : add byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 1], cl ; call rsi
0x000000000042c667 : add byte ptr [rdi + 0x3d], bh ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432cdb : add byte ptr [rdi + rdi*8 - 1], cl ; call rsi
0x0000000000432947 : add byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret 0x4333
0x00000000004284e7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000411651 : add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x0000000000406d65 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040bbc7 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041aacf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403db7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f808 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042a15f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042519c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040bc0b : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000041aab1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403d3a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004142f9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040522b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000426b81 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433cef : add byte ptr [rsp + rax - 1], ah ; jmp rsp
0x0000000000433eaf : add byte ptr [rsp + rdi*4 - 1], dl ; jmp rsp
0x000000000041731b : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000427816 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041596e : add byte ptr fs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000404ad3 : add cl, ch ; ret
0x0000000000427cef : add cl, ch ; ret 0
0x0000000000416fae : add cl, ch ; ret 1
0x000000000041702d : add dword ptr [r8], r8d ; add byte ptr [rbx + 0x382da445], cl ; ret
0x000000000040f512 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000405628 : add dword ptr [rax], 0 ; add al, ch ; lahf ; ret 0xffff
0x0000000000434105 : add dword ptr [rax], eax ; add al, bh ; sbb al, -3 ; call qword ptr [rbx]
0x0000000000432949 : add dword ptr [rax], eax ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret 0x4333
0x0000000000422e35 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434165 : add dword ptr [rax], eax ; add byte ptr [rax], bl ; and edi, ebp ; call qword ptr [rsi]
0x0000000000434145 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; and ebp, edi ; call qword ptr [rax]
0x000000000041702e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x382da445], cl ; ret
0x0000000000412117 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x4c2ddc45], cl ; ret
0x000000000042355a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000432cd9 : add dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 1], cl ; call rsi
0x000000000040bc09 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000427588 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f157 : add dword ptr [rbp + 1], ecx ; ret 0x894c
0x00000000004164ba : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427c01 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401e54 : add eax, 0x23453e ; add ebx, esi ; ret
0x000000000043046e : add eax, 0xb8000001 ; pop rdi ; pop rdx ; ret
0x0000000000415308 : add eax, 0xc7b80000 ; ret
0x0000000000433a6d : add eax, 0xe6e40000 ; cld ; jmp rsp
0x00000000004052cc : add eax, dword ptr [rax] ; add bh, al ; lodsb al, byte ptr [rsi] ; insd dword ptr [rdi], dx ; pop rdi ; ret
0x000000000040f685 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000434325 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x1e], bl ; std ; call qword ptr [rbx]
0x0000000000434305 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x23], cl ; std ; jmp qword ptr [rsi]
0x00000000004342e5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x24], bh ; std ; jmp rcx
0x000000000042f686 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417318 : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004342e4 : add eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x24], bh ; std ; jmp rcx
0x0000000000401e1b : add eax, edx ; sar rax, 1 ; jne 0x401e2c ; pop rbp ; ret
0x0000000000401e59 : add ebx, esi ; ret
0x00000000004020eb : add esp, 0x10 ; pop rbp ; ret
0x00000000004252ec : add esp, 0x100 ; pop rbp ; ret
0x0000000000423557 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000427b37 : add esp, 0x11a0 ; pop rbp ; ret
0x0000000000418582 : add esp, 0x160 ; pop rbp ; ret
0x000000000041256c : add esp, 0x18 ; pop rbp ; ret
0x000000000042545c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000419414 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004228e3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000426b7f : add esp, 0x200 ; pop rbp ; ret
0x00000000004056a7 : add esp, 0x210 ; pop rbp ; ret
0x000000000042e50d : add esp, 0x260 ; pop rbp ; ret
0x00000000004179c8 : add esp, 0x290 ; pop rbp ; ret
0x000000000042a8e3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000043189a : add esp, 0x2e0 ; pop rbp ; ret
0x000000000042ab29 : add esp, 0x30 ; pop rbp ; ret
0x0000000000411b01 : add esp, 0x370 ; pop rbp ; ret
0x0000000000406c37 : add esp, 0x40 ; pop rbp ; ret
0x000000000042c93c : add esp, 0x410 ; pop rbp ; ret
0x00000000004020a4 : add esp, 0x50 ; pop rbp ; ret
0x00000000004067b6 : add esp, 0x60 ; pop rbp ; ret
0x000000000040625a : add esp, 0x70 ; pop rbp ; ret
0x0000000000405de6 : add esp, 0x80 ; pop rbp ; ret
0x0000000000415807 : add esp, 0x860 ; pop rbp ; ret
0x00000000004162c2 : add esp, 0x88 ; pop rbp ; ret
0x0000000000429602 : add esp, 0x90 ; pop rbp ; ret
0x0000000000406106 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000411f46 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000422894 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000417f93 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000405c65 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040185e : add esp, 8 ; ret
0x000000000042f685 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e1a : add rax, rdx ; sar rax, 1 ; jne 0x401e2d ; pop rbp ; ret
0x00000000004020ea : add rsp, 0x10 ; pop rbp ; ret
0x00000000004252eb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000423556 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000427b36 : add rsp, 0x11a0 ; pop rbp ; ret
0x0000000000418581 : add rsp, 0x160 ; pop rbp ; ret
0x000000000041256b : add rsp, 0x18 ; pop rbp ; ret
0x000000000042545b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000419413 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004228e2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000426b7e : add rsp, 0x200 ; pop rbp ; ret
0x00000000004056a6 : add rsp, 0x210 ; pop rbp ; ret
0x000000000042e50c : add rsp, 0x260 ; pop rbp ; ret
0x00000000004179c7 : add rsp, 0x290 ; pop rbp ; ret
0x000000000042a8e2 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000431899 : add rsp, 0x2e0 ; pop rbp ; ret
0x000000000042ab28 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000411b00 : add rsp, 0x370 ; pop rbp ; ret
0x0000000000406c36 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042c93b : add rsp, 0x410 ; pop rbp ; ret
0x00000000004020a3 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004067b5 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406259 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405de5 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000415806 : add rsp, 0x860 ; pop rbp ; ret
0x00000000004162c1 : add rsp, 0x88 ; pop rbp ; ret
0x0000000000429601 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406105 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000411f45 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000422893 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000417f92 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000405c64 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040185d : add rsp, 8 ; ret
0x00000000004041cc : and ah, byte ptr [rbp - 0x16f3469f] ; ret 0x8b48
0x0000000000414a22 : and al, 0x10 ; call 0x415a08
0x0000000000414a21 : and al, 0x10 ; call 0x415a09
0x00000000004340a4 : and al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rsi], dl ; std ; call qword ptr [rax]
0x0000000000427c00 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040648f : and eax, 0x6363d8 ; pop rbp ; ret
0x00000000004064b3 : and eax, 0x6363e0 ; pop rbp ; ret
0x0000000000401e57 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000434149 : and ebp, edi ; call qword ptr [rax]
0x0000000000434169 : and edi, ebp ; call qword ptr [rsi]
0x0000000000433d71 : and edi, edi ; jmp rsp
0x0000000000401e56 : and r8d, dword ptr [r8] ; add ebx, esi ; ret
0x0000000000401e55 : and r8d, dword ptr ds:[r8] ; add ebx, esi ; ret
0x00000000004346c8 : call 0x234345be
0x00000000004055f5 : call 0x4018d2
0x000000000043156f : call 0x4018d6
0x000000000043153c : call 0x401946
0x0000000000415712 : call 0x401962
0x00000000004056fb : call 0x4019c2
0x000000000041599c : call 0x401bc2
0x0000000000414a24 : call 0x415a06
0x0000000000425951 : call 0xffffffffe0b7e4a5
0x0000000000434f28 : call 0xffffffffe1434e76
0x00000000004228d9 : call 0xffffffffe904b229
0x00000000004228d8 : call 0xffffffffe904b22a
0x00000000004275d5 : call 0xfffffffff00efba7
0x00000000004275d4 : call 0xfffffffff00efba8
0x000000000042780f : call 0xfffffffff013359b
0x000000000041e31d : call 0xfffffffff73a68b4
0x000000000042a3a5 : call 0xffffffffff47297a
0x0000000000420e49 : call 0xffffffffff56941b
0x0000000000420e48 : call 0xffffffffff56941c
0x0000000000420e49 : call 0xffffffffff56941d
0x0000000000420e48 : call 0xffffffffff56941e
0x000000000040fa12 : call 0xffffffffffad7fe4
0x000000000040fa12 : call 0xffffffffffad7fe7
0x0000000000431929 : call qword ptr [r12 + rbx*8]
0x000000000040b88d : call qword ptr [rax]
0x000000000040bade : call qword ptr [rbx]
0x000000000040371a : call qword ptr [rcx]
0x0000000000432f8f : call qword ptr [rdi]
0x0000000000411845 : call qword ptr [rdx]
0x000000000040e2f0 : call qword ptr [rsi]
0x000000000043192a : call qword ptr [rsp + rbx*8]
0x0000000000401e7d : call rax
0x000000000040f419 : call rbx
0x0000000000404065 : call rcx
0x0000000000434b2b : call rdx
0x00000000004252a4 : call rsi
0x0000000000410dfc : call rsp
0x00000000004283ac : cdq ; ret
0x0000000000416d47 : cdq ; ret 0xf61d
0x0000000000426b7d : clc ; add rsp, 0x200 ; pop rbp ; ret
0x000000000042f509 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x000000000042ab27 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411aff : clc ; add rsp, 0x370 ; pop rbp ; ret
0x000000000042f64e : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004291f2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042fb80 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406471 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000417f91 : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x0000000000405c63 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401e1f : clc ; jne 0x401e28 ; pop rbp ; ret
0x0000000000412037 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x00000000004179e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042f52b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041258c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000411b53 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000423dcb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000423e0b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000423deb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000423e31 : clc ; pop rbp ; ret
0x0000000000434108 : clc ; sbb al, -3 ; call qword ptr [rbx]
0x0000000000402117 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000433a6a : cld ; inc esp ; add eax, 0xe6e40000 ; cld ; jmp rsp
0x0000000000433a72 : cld ; jmp rsp
0x0000000000420a9d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000430320 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413ab6 : cmc ; xchg eax, ebx ; ret 0x893e
0x0000000000415720 : cmc ; xchg eax, ebx ; ret 0x8b3e
0x00000000004299ad : cmp al, -0x2a ; ret
0x00000000004066cc : cmp al, 0x25 ; jmp qword ptr [rbx]
0x000000000040f227 : cmp eax, 0xb37b79b9 ; ret 0x7d81
0x0000000000401ddd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401df0 ; pop rbp ; ret
0x0000000000422d74 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000040d397 : cmpsd dword ptr [rsi], dword ptr [rdi] ; test byte ptr [rbp + 0xd34b94f], cl ; ret 0x8bca
0x0000000000427eab : cwde ; js 0x427e55 ; ret
0x0000000000427ef2 : cwde ; js 0x427e9c ; ret
0x0000000000427f2c : cwde ; js 0x427ed6 ; ret
0x0000000000434b28 : cwde ; or edi, edi ; call rdx
0x0000000000415525 : dec dword ptr [rax + 9] ; ret 0x8b48
0x000000000040dd84 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000040440c : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004060aa : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000415418 : dec dword ptr [rax - 0x7f] ; ret 0xca00
0x000000000041413a : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000420f4d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000404200 : dec dword ptr [rcx + rbp*8] ; ret 0x39e9
0x0000000000422454 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000404acd : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffff6], dh ; ret
0x000000000042ece4 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000423fe3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000416fa8 : dec dword ptr [rdi] ; test dl, al ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040f7f5 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000405b0a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004277ee : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x00000000004267f1 : dec eax ; ret 0xd592
0x0000000000418f6b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a15b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004160fa : enter 0x18, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000418e85 : enter 0x3d48, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041618b : enter 0xc, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004161c9 : enter 0xc, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411ad6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426024 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040708c : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406d61 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000423d89 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427536 : fcomp dword ptr [rdi + rdi*8 - 0x6bf00001] ; ret 0xd284
0x00000000004342e9 : fdiv st(5), st(0) ; jmp rcx
0x000000000041555c : fimul dword ptr [rcx + 0x63] ; ret 0x948
0x0000000000415559 : fld dword ptr [rbp + 0x31] ; fimul dword ptr [rcx + 0x63] ; ret 0x948
0x0000000000425ba4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000043192c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004020e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fcdc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406dcf : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419a2f : hlt ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401df0 : hlt ; pop rbp ; mov edi, 0x636328 ; jmp rax
0x0000000000413a62 : hlt ; xchg eax, ebx ; ret 0x893e
0x0000000000415523 : idiv edi ; dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000414fdb : idiv edi ; lcall ptr [rcx + 0x634cfef7] ; ret 0x894c
0x0000000000426ec3 : imul ch ; ret
0x000000000040f684 : imul eax, dword ptr [rbx], 0 ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000042493e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000426f17 : imul ebp ; ret
0x000000000042acf2 : imul edi, ebp, -1 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000433a70 : in al, -0x1a ; cld ; jmp rsp
0x00000000004203f9 : in al, -0x7f ; ret 0xff9f
0x00000000004205df : in al, -0x7f ; ret 0xffbf
0x0000000000420685 : in al, -0x7f ; ret 0xffc5
0x00000000004206b3 : in al, -0x7f ; ret 0xffd5
0x0000000000420781 : in al, -0x7f ; ret 0xffd8
0x0000000000420917 : in al, -0x7f ; ret 0xffe0
0x0000000000433ab0 : in al, 0x26 ; std ; jmp rsp
0x0000000000434164 : in al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; std ; call qword ptr [rsi]
0x000000000042e50b : in al, dx ; add rsp, 0x260 ; pop rbp ; ret
0x000000000042c93a : in al, dx ; add rsp, 0x410 ; pop rbp ; ret
0x0000000000428f5f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041a4aa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004285ab : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426ec4 : in eax, dx ; ret
0x000000000043031e : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000421a6f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000414b1c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041485e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042261a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041470c : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004036f8 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004277c7 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004277a0 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423528 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041188a : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000040f49d : inc edi ; test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rbx]
0x000000000040b92e : inc edi ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000433a6b : inc esp ; add eax, 0xe6e40000 ; cld ; jmp rsp
0x0000000000433bab : inc esp ; or al, byte ptr [rax] ; add byte ptr [rax + rbp*2 - 2], dh ; jmp rsp
0x0000000000433b2b : inc esp ; or byte ptr [rax], al ; add byte ptr [rbx + rbp*8 - 3], al ; jmp rsp
0x0000000000433ceb : inc esp ; sldt word ptr [rax] ; add al, -1 ; jmp rsp
0x0000000000411889 : inc r15 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000040491b : insb byte ptr [rdi], dx ; pop rdi ; ret
0x0000000000404966 : insd dword ptr [rdi], dx ; pop rdi ; ret
0x000000000041cbcf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000042020f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000407908 : int 0xc3
0x00000000004066c6 : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp qword ptr [rbx]
0x0000000000401de3 : ja 0x401dea ; pop rbp ; ret
0x0000000000401def : je 0x401ded ; pop rbp ; mov edi, 0x636328 ; jmp rax
0x0000000000419d54 : jg 0x419d68 ; pushfq ; ret 0xd284
0x00000000004056f9 : jge 0x4056ef ; call 0x4019c4
0x000000000040bc06 : jge 0x40bbe4 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000040f31b : jge 0x40f2f9 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000040f814 : jge 0x40f7f2 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000041258b : jge 0x41258c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041596c : jge 0x415946 ; add byte ptr fs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000041599a : jge 0x415990 ; call 0x401bc4
0x0000000000415b6d : jge 0x415b67 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000423dca : jge 0x423dcb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000423dea : jge 0x423deb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000423e0a : jge 0x423e0b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000423e30 : jge 0x423e2d ; pop rbp ; ret
0x0000000000424458 : jge 0x42446f ; ret
0x0000000000424943 : jge 0x42495a ; ret
0x0000000000428b19 : jge 0x428b13 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042f52a : jge 0x42f52d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042432c : jl 0x424343 ; ret
0x0000000000430c25 : jl 0x430c01 ; ret
0x0000000000430c75 : jl 0x430c51 ; ret
0x0000000000404202 : jmp 0x3a2a044e
0x0000000000401a1b : jmp 0x401877
0x00000000004054dc : jmp 0x4056b6
0x00000000004066c5 : jmp 0x4067c4
0x000000000040c149 : jmp 0x40f9f9
0x000000000041107d : jmp 0x411b10
0x0000000000413f42 : jmp 0x413f4d
0x0000000000415306 : jmp 0x415816
0x0000000000417275 : jmp 0x4179d9
0x000000000041903b : jmp 0x419422
0x000000000041fbbd : jmp 0x4228a3
0x0000000000422651 : jmp 0x4228a5
0x000000000042493d : jmp 0x424eb5
0x0000000000427504 : jmp 0x427b45
0x0000000000427ceb : jmp 0x427cf6
0x000000000042895b : jmp 0x428966
0x000000000042a108 : jmp 0x42a8f4
0x000000000042f40a : jmp 0x42f51b
0x000000000043046d : jmp 0x43057f
0x000000000043046c : jmp 0x430580
0x0000000000402930 : jmp 0xffffffff85c9eb7c
0x0000000000402f6c : jmp 0xffffffff85c9f1b8
0x00000000004041a3 : jmp 0xffffffff8b8903ef
0x00000000004041d1 : jmp 0xffffffff8b89041d
0x000000000042922e : jmp 0xffffffffb70495fa
0x0000000000427eaa : jmp 0xffffffffc3e6f74b
0x000000000041fcdd : jmp qword ptr [rax]
0x00000000004066ce : jmp qword ptr [rbx]
0x000000000040bb11 : jmp qword ptr [rcx]
0x0000000000433ed3 : jmp qword ptr [rdi + rdx]
0x00000000004045ed : jmp qword ptr [rdi]
0x0000000000422d75 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040b934 : jmp qword ptr [rdx]
0x0000000000420ddf : jmp qword ptr [rsi]
0x0000000000401df7 : jmp rax
0x0000000000421972 : jmp rbx
0x00000000004114dc : jmp rcx
0x0000000000402380 : jmp rdi
0x0000000000401e37 : jmp rdx
0x000000000040f4b2 : jmp rsi
0x00000000004044eb : jmp rsp
0x0000000000401e20 : jne 0x401e27 ; pop rbp ; ret
0x000000000041258f : jne 0x412584 ; pop rbp ; ret
0x0000000000423526 : jne 0x42352f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000408779 : jnp 0x408730 ; ret 0x8589
0x00000000004087cd : jnp 0x408784 ; ret 0x8589
0x000000000040f0f5 : jnp 0x40f0ac ; ret 0xba
0x000000000040f22a : jnp 0x40f1e1 ; ret 0x7d81
0x000000000040f24e : jnp 0x40f205 ; ret 0x6348
0x0000000000435029 : jns 0x43502c ; jmp rdi
0x000000000040625c : jo 0x4062bd ; ret
0x0000000000411b03 : jo 0x411b0d ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004159f5 : jo 0x415a56 ; ret
0x0000000000423741 : jo 0x4237a2 ; ret
0x0000000000423864 : jo 0x4238c5 ; ret
0x000000000042399e : jo 0x4239ff ; ret
0x0000000000423def : jo 0x423e50 ; ret
0x0000000000423dee : jo 0x423e51 ; ret
0x0000000000425c4c : jo 0x425cad ; ret
0x00000000004277e3 : jo 0x4277a2 ; imul ebp ; ret
0x000000000042fb84 : jo 0x42fbe5 ; ret
0x0000000000430843 : jo 0x4308a4 ; ret
0x0000000000422896 : js 0x4228aa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000427eac : js 0x427e54 ; ret
0x0000000000427ef3 : js 0x427e9b ; ret
0x0000000000427f2d : js 0x427ed5 ; ret
0x00000000004342e8 : js 0x4342c9 ; std ; jmp rcx
0x000000000040562d : lahf ; ret 0xffff
0x0000000000414fdd : lcall ptr [rcx + 0x634cfef7] ; ret 0x894c
0x000000000040d399 : lea ecx, dword ptr [rdi - 0x47] ; xor al, 0xd ; ret 0x8bca
0x000000000042f409 : leave ; jmp 0x42f51c
0x0000000000415b6e : lock add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004052d1 : lodsb al, byte ptr [rsi] ; insd dword ptr [rdi], dx ; pop rdi ; ret
0x00000000004054db : lodsb al, byte ptr [rsi] ; jmp 0x4056b7
0x00000000004054da : lodsb al, byte ptr [rsi] ; jmp 0x4056b8
0x0000000000404e7a : lodsb al, byte ptr [rsi] ; ret
0x0000000000434329 : loop 0x43432a ; call qword ptr [rbx]
0x0000000000405b3c : loopne 0x405b45 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405fb3 : loopne 0x405fbc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a86e : loopne 0x41a877 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000425990 : loopne 0x425999 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000425d9c : loopne 0x425dec ; add esp, 0x40 ; pop rbp ; ret
0x0000000000425d9b : loopne 0x425ded ; add esp, 0x40 ; pop rbp ; ret
0x000000000042673d : loopne 0x426746 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042be8e : loopne 0x42be97 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c8e8 : loopne 0x42c8f1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043189c : loopne 0x4318a5 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004022c0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004177e5 : mov al, -0x66 ; ret 0xf61d
0x000000000042a37a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043153a : mov al, 0 ; call 0x401948
0x000000000041727c : mov al, 0x38 ; ret
0x000000000041aa2b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000427bfd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427dad : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004285a9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004064b1 : mov byte ptr [0x6363e0], al ; pop rbp ; ret
0x0000000000412038 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x00000000004223e8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004162c4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004179e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401e53 : mov byte ptr [rip + 0x23453e], 1 ; ret
0x0000000000409bec : mov ch, 0x51 ; ret
0x00000000004164bc : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427c03 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040b0ec : mov dh, 0x51 ; ret
0x00000000004286d5 : mov dl, -0x47 ; ret
0x000000000040648d : mov dword ptr [0x6363d8], edi ; pop rbp ; ret
0x000000000041a6e7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041a4ab : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041a61f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041258e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x00000000004022be : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000419038 : mov dword ptr [rbp - 0x78], eax ; jmp 0x419425
0x00000000004020e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402115 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041258a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000423e2f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041a89d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042f52c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000411b55 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x0000000000426ebe : mov eax, 0x2dffffef ; imul ch ; ret
0x0000000000426f12 : mov eax, 0x2dffffef ; imul ebp ; ret
0x0000000000426e86 : mov eax, 0x2dffffef ; ret
0x00000000004177e2 : mov eax, 0x9ab045c7 ; ret 0xf61d
0x0000000000419511 : mov eax, 0xea1f532d ; ret 0x4589
0x0000000000419553 : mov eax, 0xea1f542d ; ret 0x4589
0x000000000041a39f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000425cdb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004259bf : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406256 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423e51 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406acc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000425dde : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004256b0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a6ea : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000425d9a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a294 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004159ef : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041a39c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041a4a5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041a621 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042373b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042fcda : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406dcd : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042ab25 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f64c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004291f0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042fb7e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423dcd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000423e0d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000423ded : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040cf32 : mov ebp, 0xb800002a ; xchg eax, edx ; ret 0xff89
0x0000000000401e7b : mov ebp, esp ; call rax
0x0000000000401de1 : mov ebp, esp ; ja 0x401dec ; pop rbp ; ret
0x000000000041a4a8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c668 : mov edi, 0x3d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e75 : mov edi, 0x635e20 ; mov rbp, rsp ; call rax
0x0000000000401df2 : mov edi, 0x636328 ; jmp rax
0x0000000000401e32 : mov edi, 0x636328 ; jmp rdx
0x00000000004177f0 : mov edi, 0xb94abb2a ; ret 0xf751
0x00000000004056f8 : mov edi, dword ptr [rbp - 0x10] ; call 0x4019c5
0x0000000000415999 : mov edi, dword ptr [rbp - 0x10] ; call 0x401bc5
0x0000000000423dc9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000423e09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000423de9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000431927 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000431926 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004055f1 : mov edx, 0xe8000000 ; salc ; ret 0xffff
0x0000000000415995 : mov edx, dword ptr [rbp - 0x30] ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401bc9
0x0000000000411b51 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000423e55 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041570c : mov esi, dword ptr [rbp - 0x220] ; call 0x401968
0x0000000000401e30 : mov esi, eax ; mov edi, 0x636328 ; jmp rdx
0x000000000040648c : mov qword ptr [0x6363d8], rdi ; pop rbp ; ret
0x000000000041258d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000412589 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000423e2e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041a89c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411b54 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x00000000004022bf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004177e4 : mov r8b, -0x66 ; ret 0xf61d
0x000000000041727b : mov r8b, 0x38 ; ret
0x00000000004177e1 : mov r8d, 0x9ab045c7 ; ret 0xf61d
0x0000000000419510 : mov r8d, 0xea1f532d ; ret 0x4589
0x0000000000419552 : mov r8d, 0xea1f542d ; ret 0x4589
0x0000000000425cda : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004259be : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406255 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423e50 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406acb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000425ddd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004256af : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425d99 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a293 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004159ee : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041a39b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042373a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423dcc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000423e0c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000423dec : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401e7a : mov rbp, rsp ; call rax
0x0000000000401de0 : mov rbp, rsp ; ja 0x401ded ; pop rbp ; ret
0x00000000004056f7 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4019c6
0x0000000000415998 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401bc6
0x0000000000423dc8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000423e08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000423de8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411b50 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000423e54 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041570b : mov rsi, qword ptr [rbp - 0x220] ; call 0x401969
0x0000000000401e2f : mov rsi, rax ; mov edi, 0x636328 ; jmp rdx
0x000000000042352a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042352b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040bd8e : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f3fe : mov word ptr [rbx], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420c7c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000042894e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000419348 : movabs byte ptr [0x8148c8558b482be0], al ; ret 1
0x0000000000435024 : movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rax], al ; add byte ptr [rax], ch ; jns 0x435031 ; jmp rdi
0x0000000000434324 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x1e], bl ; std ; call qword ptr [rbx]
0x000000000042493c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x424eb6
0x0000000000427ead : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000434f24 : movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; call 0xffffffffe1434e7a
0x0000000000433af0 : movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, ebp ; jmp rsp
0x00000000004164bb : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427c02 : movzx eax, al ; pop rbp ; ret
0x00000000004179ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000431948 : nop dword ptr [rax + rax] ; ret
0x0000000000422897 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404201 : or al, 0xffffffffffffffe9 ; ret 0x39e9
0x0000000000402f6b : or al, 0xffffffffffffffe9 ; ret 0x8589
0x00000000004041a2 : or al, 0xffffffffffffffe9 ; ret 0x8b48
0x0000000000433bad : or al, byte ptr [rax] ; add byte ptr [rax + rbp*2 - 2], dh ; jmp rsp
0x0000000000404ad1 : or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000410e45 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x0000000000433b2d : or byte ptr [rax], al ; add byte ptr [rbx + rbp*8 - 3], al ; jmp rsp
0x0000000000416fac : or byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004142f3 : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000419d1e : or byte ptr [rdi], 0x9c ; ret 0xd284
0x0000000000423fe7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004277ef : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000410fd4 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000423921 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040292f : or ebp, ecx ; ret 0x8589
0x0000000000434b29 : or edi, edi ; call rdx
0x000000000041183f : out -0x39, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000433a71 : out -4, al ; jmp rsp
0x0000000000427daf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427bff : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043193c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043193e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040463d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431940 : pop r14 ; pop r15 ; ret
0x000000000040f9ef : pop r14 ; pop rbp ; ret
0x000000000040463f : pop r15 ; pop rbp ; ret
0x0000000000431942 : pop r15 ; ret
0x0000000000428428 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000434328 : pop rax ; loop 0x43432b ; call qword ptr [rbx]
0x0000000000401e52 : pop rbp ; mov byte ptr [rip + 0x23453e], 1 ; ret
0x0000000000401df1 : pop rbp ; mov edi, 0x636328 ; jmp rax
0x0000000000401e2e : pop rbp ; mov rsi, rax ; mov edi, 0x636328 ; jmp rdx
0x000000000043193b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043193f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401de5 : pop rbp ; ret
0x000000000040463c : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f9ee : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042289a : pop rbx ; pop rbp ; ret
0x00000000004286d4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000042783d : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404640 : pop rdi ; pop rbp ; ret
0x00000000004301e5 : pop rdi ; pop rdx ; ret
0x000000000040491c : pop rdi ; ret
0x000000000040419c : pop rdi ; sbb eax, 0xb8419ca7 ; or al, 0xffffffffffffffe9 ; ret 0x8b48
0x0000000000428b1b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004301e6 : pop rdx ; ret
0x000000000040463e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000431941 : pop rsi ; pop r15 ; ret
0x000000000040f9f0 : pop rsi ; pop rbp ; ret
0x00000000004142f6 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043193d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fee3 : pop rsp ; ret
0x000000000042c8a3 : popfq ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000042d8c1 : popfq ; ret 0xb657
0x00000000004284e9 : popfq ; ret 0xd284
0x0000000000431873 : push -0x4f000001 ; add al, ch ; ret 0xfd00
0x0000000000425ec4 : push 0x4800004e ; add esp, 0x10 ; pop rbp ; ret
0x000000000042ad24 : push 0x48ffffb3 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004120b0 : push 0x56 ; ret
0x00000000004222bf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000423dce : push r8 ; pop rbp ; ret
0x00000000004020a6 : push rax ; pop rbp ; ret
0x000000000042529b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411b52 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000423e56 : push rbp ; clc ; pop rbp ; ret
0x0000000000425ba3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004203f8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004205de : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000420684 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004206b2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000420780 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000420916 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000043031d : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401e74 : push rbp ; mov edi, 0x635e20 ; mov rbp, rsp ; call rax
0x0000000000415996 : push rbp ; ror byte ptr [rax - 0x75], 1 ; jge 0x415994 ; call 0x401bc8
0x000000000041571f : push rbp ; xchg eax, ebx ; ret 0x8b3e
0x0000000000409bed : push rcx ; ret
0x00000000004120b1 : push rsi ; ret
0x000000000042a5e3 : pushfq ; ret 0x8445
0x0000000000411653 : pushfq ; ret 0x8b48
0x0000000000406d67 : pushfq ; ret 0xd284
0x000000000040d929 : pushfq ; ret 0xe280
0x0000000000401861 : ret
0x000000000040f92d : ret 0
0x0000000000429789 : ret 0x10
0x0000000000414e3e : ret 0x14c
0x00000000004285db : ret 0x2030
0x0000000000419cca : ret 0x20b9
0x000000000040bed2 : ret 0x21b9
0x000000000040a299 : ret 0x227b
0x0000000000401c22 : ret 0x2345
0x0000000000401a22 : ret 0x2346
0x000000000040a678 : ret 0x25
0x00000000004061e5 : ret 0x29b9
0x000000000041fdd7 : ret 0x2a
0x000000000040dd87 : ret 0x2b48
0x00000000004230f6 : ret 0x2c1
0x000000000042cad0 : ret 0x2e42
0x0000000000409d20 : ret 0x320f
0x00000000004076f4 : ret 0x3241
0x000000000041273e : ret 0x3347
0x000000000041877f : ret 0x3361
0x000000000040b1d8 : ret 0x36
0x0000000000408fb8 : ret 0x38
0x0000000000404204 : ret 0x39e9
0x0000000000432950 : ret 0x4333
0x000000000041cd3a : ret 0x43fa
0x00000000004061a1 : ret 0x4589
0x0000000000419458 : ret 0x458b
0x00000000004078f8 : ret 0x4b
0x0000000000408298 : ret 0x4c
0x00000000004045f1 : ret 0x4ce9
0x0000000000405db0 : ret 0x5ae8
0x000000000042fe83 : ret 0x5e5
0x000000000040f250 : ret 0x6348
0x0000000000403fde : ret 0x6ce8
0x0000000000407685 : ret 0x71cc
0x000000000040636a : ret 0x7406
0x0000000000421a50 : ret 0x7ae8
0x000000000040f22c : ret 0x7d81
0x0000000000415630 : ret 0x8148
0x00000000004036fc : ret 0x8445
0x0000000000402932 : ret 0x8589
0x000000000041cbd0 : ret 0x891a
0x0000000000427f8c : ret 0x8934
0x0000000000413a64 : ret 0x893e
0x000000000040b927 : ret 0x8948
0x000000000040f15a : ret 0x894c
0x000000000040fb63 : ret 0x8975
0x0000000000429231 : ret 0x89b6
0x0000000000402fa5 : ret 0x89c2
0x0000000000408a8a : ret 0x89ca
0x0000000000427f68 : ret 0x8b34
0x0000000000415722 : ret 0x8b3e
0x00000000004041a5 : ret 0x8b48
0x000000000040fa1b : ret 0x8b75
0x000000000040d39e : ret 0x8bca
0x000000000041919e : ret 0x8ce8
0x000000000041555f : ret 0x948
0x000000000043117b : ret 0xa4be
0x000000000042621e : ret 0xa80b
0x0000000000420aa5 : ret 0xa9b9
0x000000000041c522 : ret 0xade6
0x0000000000403de3 : ret 0xb0
0x000000000042d8c2 : ret 0xb657
0x0000000000420210 : ret 0xb91a
0x00000000004294eb : ret 0xb9b6
0x000000000040397f : ret 0xb9c2
0x0000000000419cfb : ret 0xb9e9
0x000000000040f0f7 : ret 0xba
0x0000000000401e15 : ret 0xc148
0x000000000041541b : ret 0xca00
0x0000000000403d3d : ret 0xd284
0x00000000004222c3 : ret 0xd4e9
0x00000000004262e2 : ret 0xd592
0x0000000000426fdc : ret 0xd957
0x0000000000413b7a : ret 0xdccb
0x000000000040d92a : ret 0xe280
0x0000000000418ae3 : ret 0xe886
0x0000000000410fdf : ret 0xe975
0x000000000040403c : ret 0xee8
0x00000000004034d3 : ret 0xf
0x0000000000411f09 : ret 0xf40
0x0000000000420c85 : ret 0xf41
0x0000000000416d48 : ret 0xf61d
0x0000000000416f9f : ret 0xf751
0x0000000000413132 : ret 0xfb5a
0x000000000043187a : ret 0xfd00
0x000000000042750a : ret 0xfda3
0x000000000041509a : ret 0xfecb
0x00000000004143ca : ret 0xfed4
0x000000000040bdfa : ret 0xff5d
0x0000000000409621 : ret 0xff89
0x00000000004203fb : ret 0xff9f
0x0000000000421d9e : ret 0xffa5
0x00000000004205e1 : ret 0xffbf
0x000000000042104b : ret 0xffc4
0x000000000040545a : ret 0xffc5
0x00000000004056ca : ret 0xffc7
0x000000000040ba86 : ret 0xffc8
0x00000000004206b5 : ret 0xffd5
0x0000000000420783 : ret 0xffd8
0x00000000004210f1 : ret 0xffd9
0x0000000000420919 : ret 0xffe0
0x000000000041f9ee : ret 0xfffa
0x000000000040623a : ret 0xfffb
0x000000000040ba63 : ret 0xfffe
0x0000000000433ed1 : ret 0xffff
0x0000000000410f64 : ret 1
0x0000000000420f50 : ret 2
0x000000000042f059 : ret 3
0x00000000004223d7 : ret 4
0x0000000000424018 : ret 5
0x00000000004048dc : ret 6
0x0000000000422ac0 : ret 8
0x00000000004172f8 : rol byte ptr [rax + rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411db5 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042a2d4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417f95 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042a8e5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a4a6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401e1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401e2b ; pop rbp ; ret
0x0000000000415997 : ror byte ptr [rax - 0x75], 1 ; jge 0x415993 ; call 0x401bc7
0x000000000040d67b : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000414d3f : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x16000005], ebx ; ret
0x00000000004056a5 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a4a7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000425ba0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041562a : ror dword ptr [rcx + 0x63], 1 ; ret 0x948
0x000000000042d915 : sahf ; ret 0xb657
0x000000000040bbc9 : sahf ; ret 0xd284
0x0000000000415522 : sal bh, -1 ; dec dword ptr [rax + 9] ; ret 0x8b48
0x00000000004299ae : salc ; ret
0x00000000004055f6 : salc ; ret 0xffff
0x0000000000401e1e : sar eax, 1 ; jne 0x401e29 ; pop rbp ; ret
0x0000000000401e1d : sar rax, 1 ; jne 0x401e2a ; pop rbp ; ret
0x0000000000433d31 : sbb al, -1 ; jmp rsp
0x0000000000434109 : sbb al, -3 ; call qword ptr [rbx]
0x000000000040ff35 : sbb bl, ah ; pop rsp ; ret
0x0000000000434168 : sbb byte ptr [rbx], ah ; std ; call qword ptr [rsi]
0x0000000000423559 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004340a8 : sbb byte ptr [rsi], dl ; std ; call qword ptr [rax]
0x0000000000425783 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420a9e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004055fd : sbb eax, 0xb1a5bad5 ; ret
0x000000000040419d : sbb eax, 0xb8419ca7 ; or al, 0xffffffffffffffe9 ; ret 0x8b48
0x000000000040fee1 : sbb esp, ebx ; pop rsp ; ret
0x000000000040fb62 : scasd eax, dword ptr [rdi] ; ret 0x8975
0x000000000040fa1a : scasd eax, dword ptr [rdi] ; ret 0x8b75
0x0000000000410fde : scasd eax, dword ptr [rdi] ; ret 0xe975
0x0000000000432948 : sgdt ptr [rax] ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret 0x4333
0x000000000041596d : shl byte ptr [rax + rax], 1 ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000433ced : sldt word ptr [rax] ; add al, -1 ; jmp rsp
0x0000000000434f25 : sldt word ptr [rax] ; call 0xffffffffe1434e79
0x000000000041731a : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004142f5 : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004340aa : std ; call qword ptr [rax]
0x000000000043410a : std ; call qword ptr [rbx]
0x000000000043416a : std ; call qword ptr [rsi]
0x0000000000433b2a : std ; inc esp ; or byte ptr [rax], al ; add byte ptr [rbx + rbp*8 - 3], al ; jmp rsp
0x000000000043430a : std ; jmp qword ptr [rsi]
0x00000000004342ea : std ; jmp rcx
0x0000000000433ab2 : std ; jmp rsp
0x0000000000404e2f : stosd dword ptr [rdi], eax ; ret
0x000000000041dae7 : sub al, 0x38 ; ret 0x8589
0x0000000000420aa3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000412039 : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x0000000000435028 : sub byte ptr [rcx - 1], bh ; jmp rdi
0x0000000000434148 : sub byte ptr [rcx], ah ; std ; call qword ptr [rax]
0x00000000004055fb : sub byte ptr [rip - 0x5a452ae3], -0x4f ; ret
0x00000000004051f7 : sub eax, 0xb9ead5e5 ; insd dword ptr [rdi], dx ; pop rdi ; ret
0x00000000004319c9 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004319c8 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004252bb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042c3f8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417413 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418489 : test al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042373d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000425198 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411351 : test al, 9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043194a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d398 : test byte ptr [rbp + 0xd34b94f], cl ; ret 0x8bca
0x0000000000404acf : test byte ptr [rbp - 0x16fffff6], dh ; ret
0x0000000000433db0 : test byte ptr [rbx - 1], al ; jmp rsp
0x0000000000433df0 : test byte ptr [rbx - 1], cl ; jmp rsp
0x0000000000434104 : test byte ptr [rcx], al ; add byte ptr [rax], al ; clc ; sbb al, -3 ; call qword ptr [rbx]
0x0000000000433d30 : test byte ptr [rdi + rdi*8], bl ; jmp rsp
0x000000000042ece6 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000423fe5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000416faa : test dl, al ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000426ebd : test dword ptr [rax + 0x2dffffef], edi ; imul ch ; ret
0x0000000000426f11 : test dword ptr [rax + 0x2dffffef], edi ; imul ebp ; ret
0x0000000000426e85 : test dword ptr [rax + 0x2dffffef], edi ; ret
0x0000000000402f65 : test dword ptr [rax + 0x2dfffffe], esi ; or al, 0xffffffffffffffe9 ; ret 0x8589
0x0000000000402929 : test dword ptr [rax + 0x2dfffffe], esi ; or ebp, ecx ; ret 0x8589
0x0000000000402f9d : test dword ptr [rax + 0x2dfffffe], esi ; ret 0x89c2
0x0000000000414d42 : test dword ptr [rax - 0x16000005], ebx ; ret
0x0000000000413538 : test dword ptr [rbx + rdi*8 - 0x38d20001], ecx ; ret
0x00000000004134e4 : test dword ptr [rbx + rdi*8 - 0x39d20001], ecx ; ret
0x000000000041571b : test dword ptr [rbx + rdi*8 - 0x6c0a0001], ebp ; ret 0x8b3e
0x0000000000413ab0 : test dword ptr [rbx + rdi*8 - 0xad20001], ecx ; xchg eax, ebx ; ret 0x893e
0x0000000000413a5c : test dword ptr [rbx + rdi*8 - 0xbd20001], ecx ; xchg eax, ebx ; ret 0x893e
0x000000000041188c : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000040fa14 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000411841 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000410df8 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x00000000004114d8 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x00000000004252a0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000425008 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042c2d1 : test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042c8a8 : test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000414e4b : test dword ptr [rsp + rdi*8 - 1], ebx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b889 : test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rax]
0x000000000040bada : test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rbx]
0x000000000040bb0d : test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x000000000040f689 : test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000040b930 : test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x000000000040f4ae : test dword ptr [rsp + rsi*8 - 1], esi ; jmp rsi
0x000000000041203a : test eax, 0x1000000 ; pop rbp ; ret
0x000000000042acf1 : wait ; imul edi, ebp, -1 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000431872 : xchg eax, ebp ; push -0x4f000001 ; add al, ch ; ret 0xfd00
0x000000000041aad1 : xchg eax, ebp ; ret
0x00000000004036fb : xchg eax, ebp ; ret 0x8445
0x0000000000403db9 : xchg eax, ebp ; ret 0xd284
0x000000000042f80a : xchg eax, ebp ; ret 0xe280
0x0000000000415521 : xchg eax, ebp ; sal bh, -1 ; dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000430eab : xchg eax, ebx ; ret
0x0000000000413a63 : xchg eax, ebx ; ret 0x893e
0x0000000000415721 : xchg eax, ebx ; ret 0x8b3e
0x000000000041dacb : xchg eax, ecx ; ret
0x0000000000409620 : xchg eax, ecx ; ret 0xff89
0x000000000042a161 : xchg eax, edi ; ret 0xd284
0x0000000000412116 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x4c2ddc45], cl ; ret
0x000000000041dc1b : xchg eax, edx ; ret
0x000000000042519e : xchg eax, edx ; ret 0xd284
0x0000000000409674 : xchg eax, edx ; ret 0xff89
0x0000000000423452 : xchg eax, esi ; ret
0x000000000040bc0d : xchg eax, esi ; ret 0xd284
0x000000000041aab3 : xchg eax, esp ; ret
0x0000000000421a76 : xchg eax, esp ; ret 0x8445
0x0000000000403d3c : xchg eax, esp ; ret 0xd284
0x00000000004142fb : xchg eax, esp ; ret 0xe280
0x00000000004126b8 : xchg ecx, ebp ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004126b7 : xchg r9d, r13d ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408adc : xor al, 0xd ; ret 0x89ca
0x000000000040d39c : xor al, 0xd ; ret 0x8bca
0x0000000000423a57 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000416d3f : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x66d25bbb], cl ; ret 0xf61d
0x0000000000433af1 : xor edi, ebp ; jmp rsp
0x000000000041a61d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
