0x00000000004080c3 : adc al, -0x1d ; and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000043e219 : adc al, -1 ; call rsp
0x000000000043e1d5 : adc al, 0 ; add byte ptr [rbp + rcx - 1], dh ; call rsp
0x000000000043e155 : adc al, byte ptr [rax] ; add byte ptr [rsi + rbp*4], ah ; std ; call rsp
0x000000000043c086 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000043c077 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000043e0d5 : adc byte ptr [rax], al ; add byte ptr [rsp + rbx*4], al ; std ; call rsp
0x000000000043c076 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000402f11 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417c8b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043bb4d : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x00000000004126c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e195 : adc eax, dword ptr [rax] ; add byte ptr [rcx + rbp*8 - 3], al ; call rsp
0x000000000043e5d3 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; movsxd rdi, esp ; call qword ptr [rsi]
0x000000000043df97 : add ah, ah ; push rdx ; std ; call rsp
0x000000000043dfd7 : add ah, ah ; push rsp ; std ; call rsp
0x000000000043e8b3 : add ah, al ; add eax, 0x45480000 ; std ; jmp qword ptr [rdx]
0x000000000043ded7 : add ah, dh ; lodsb al, byte ptr [rsi] ; cld ; call rsp
0x000000000043e097 : add ah, dl ; xchg ch, bh ; call rsp
0x000000000043e0d8 : add al, -0x64 ; std ; call rsp
0x000000000041b197 : add al, 0 ; add cl, ch ; ret 1
0x0000000000413527 : add al, 0x25 ; ret 0x43d8
0x0000000000416259 : add al, 0xf ; pushfq ; ret 0xe280
0x000000000043eaf4 : add al, 8 ; add byte ptr [rax], al ; sub byte ptr [rax - 3], cl ; jmp qword ptr [rdx]
0x000000000043cae1 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000043ed77 : add al, bl ; jbe 0x43ed7c ; jmp qword ptr [rdi]
0x000000000041530d : add al, byte ptr [rax] ; add al, ch ; ret 0xfffe
0x000000000043e595 : add al, byte ptr [rax] ; add al, cl ; pop rbp ; cld ; jmp rbx
0x000000000043e515 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5a], bl ; cld ; call qword ptr [rsi]
0x000000000043e5d5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; movsxd rdi, esp ; call qword ptr [rsi]
0x0000000000417583 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405f8e : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408f82 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042a687 : add al, ch ; ret
0x0000000000430998 : add al, ch ; ret 0xfd0b
0x000000000042b5b8 : add al, ch ; ret 0xfd60
0x000000000041530f : add al, ch ; ret 0xfffe
0x000000000043e597 : add al, cl ; pop rbp ; cld ; jmp rbx
0x000000000041797e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004176e6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043a9a9 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000043cb3f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000043b954 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000043ca05 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000043bfbd : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000043ad9c : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000043d13f : add bl, dh ; ret
0x000000000043e8b7 : add byte ptr [rax + 0x45], cl ; std ; jmp qword ptr [rdx]
0x000000000043e517 : add byte ptr [rax + 0x5a], bl ; cld ; call qword ptr [rsi]
0x000000000043ee57 : add byte ptr [rax + 0x77], bl ; std ; jmp rdx
0x000000000043de97 : add byte ptr [rax + rbp*2 - 4], dh ; call rsp
0x000000000043eaf3 : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; sub byte ptr [rax - 3], cl ; jmp qword ptr [rdx]
0x000000000043df57 : add byte ptr [rax + rdx*2], ah ; std ; call rsp
0x000000000043ef37 : add byte ptr [rax - 0x72], ch ; std ; call rdx
0x0000000000413524 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x43d8
0x000000000042a37c : add byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000042a2db : add byte ptr [rax - 0x77], cl ; ret 0xbce8
0x000000000043e0d6 : add byte ptr [rax], al ; add al, -0x64 ; std ; call rsp
0x000000000043eaf2 : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; sub byte ptr [rax - 3], cl ; jmp qword ptr [rdx]
0x000000000041797c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004176e4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043a9a7 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000043ca71 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000043bfbb : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000043c005 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000043d13d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000413522 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x43d8
0x000000000043d13b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041361e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043d13c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414ceb : add byte ptr [rax], al ; add byte ptr [rbx + 0x152dc045], cl ; ret 0x9b3e
0x000000000042e9b3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000041240e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004156b0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672de845], cl ; int1 ; ret
0x00000000004157e7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x682de845], cl ; int1 ; ret
0x000000000042f429 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000042f3a5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004058bc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405dc0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004112c1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042d6c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000402d05 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000407a0b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000041c6b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040a31d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402b64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004032c6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041a41d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041787a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a2ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004032a3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004059e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042eced : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004126cb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412130 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cc48 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417c8d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403d6f : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401503 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043df56 : add byte ptr [rax], al ; and al, 0x50 ; std ; call rsp
0x000000000043e016 : add byte ptr [rax], al ; and al, 0x6e ; std ; call rsp
0x000000000043ed12 : add byte ptr [rax], al ; and al, 0xa ; add byte ptr [rax], al ; test al, 0x76 ; std ; jmp qword ptr [rdi]
0x000000000043e156 : add byte ptr [rax], al ; and al, 0xffffffffffffffae ; std ; call rsp
0x000000000043df16 : add byte ptr [rax], al ; and al, 0xffffffffffffffc3 ; cld ; call rsp
0x000000000043e512 : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; pop rax ; pop rdx ; cld ; call qword ptr [rsi]
0x000000000041530e : add byte ptr [rax], al ; call 0x401564
0x00000000004307dd : add byte ptr [rax], al ; call 0x401568
0x000000000043f136 : add byte ptr [rax], al ; cwde ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x000000000043ed76 : add byte ptr [rax], al ; fdiv dword ptr [rsi - 3] ; jmp qword ptr [rdi]
0x000000000043ded6 : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; cld ; call rsp
0x000000000043df96 : add byte ptr [rax], al ; in al, 0x52 ; std ; call rsp
0x000000000043dfd6 : add byte ptr [rax], al ; in al, 0x54 ; std ; call rsp
0x000000000043e5d2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; or byte ptr [rbx - 4], ah ; call qword ptr [rsi]
0x000000000043e9d2 : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 3], al ; jmp qword ptr [rax]
0x000000000043de96 : add byte ptr [rax], al ; je 0x43df07 ; cld ; call rsp
0x0000000000401579 : add byte ptr [rax], al ; jmp 0x401519
0x000000000042ece9 : add byte ptr [rax], al ; jmp 0x42ecf8
0x000000000042f959 : add byte ptr [rax], al ; jmp 0x42f968
0x000000000043de56 : add byte ptr [rax], al ; mov ah, 0x5e ; cld ; call rsp
0x000000000041cf01 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000413713 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000430cb6 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004162aa : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004163dd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416539 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403bbd : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416351 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404be9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409be9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042fdfd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000043e592 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add al, cl ; pop rbp ; cld ; jmp rbx
0x000000000043ef32 : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax - 0x72], ch ; std ; call rdx
0x000000000043e5d6 : add byte ptr [rax], al ; or byte ptr [rbx - 4], ah ; call qword ptr [rsi]
0x000000000043ee52 : add byte ptr [rax], al ; or eax, dword ptr fs:[rax] ; add byte ptr [rax + 0x77], bl ; std ; jmp rdx
0x000000000043ee56 : add byte ptr [rax], al ; pop rax ; ja 0x43ee5d ; jmp rdx
0x000000000043e516 : add byte ptr [rax], al ; pop rax ; pop rdx ; cld ; call qword ptr [rsi]
0x0000000000402f13 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041240f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b86 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405f8f : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043e056 : add byte ptr [rax], al ; push rsp ; test edi, ebp ; call rsp
0x000000000043d13e : add byte ptr [rax], al ; ret
0x000000000043e9d6 : add byte ptr [rax], al ; sbb byte ptr [rdi - 3], al ; jmp qword ptr [rax]
0x000000000043e8b6 : add byte ptr [rax], al ; std ; jmp qword ptr [rdx]
0x000000000043eaf6 : add byte ptr [rax], al ; sub byte ptr [rax - 3], cl ; jmp qword ptr [rdx]
0x000000000043e476 : add byte ptr [rax], al ; sub byte ptr [rdi - 4], dl ; jmp qword ptr [rdi]
0x000000000043ed16 : add byte ptr [rax], al ; test al, 0x76 ; std ; jmp qword ptr [rdi]
0x000000000043de16 : add byte ptr [rax], al ; test byte ptr [rax - 4], al ; call rsp
0x000000000043e472 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; sub byte ptr [rdi - 4], dl ; jmp qword ptr [rdi]
0x000000000043e216 : add byte ptr [rax], al ; test byte ptr [rdi + rdi*8], dl ; call rsp
0x000000000043ed72 : add byte ptr [rax], al ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; fdiv dword ptr [rsi - 3] ; jmp qword ptr [rdi]
0x000000000043e9d7 : add byte ptr [rax], bl ; std ; jmp qword ptr [rax]
0x000000000043e477 : add byte ptr [rax], ch ; push rdi ; cld ; jmp qword ptr [rdi]
0x000000000043eaf7 : add byte ptr [rax], ch ; std ; jmp qword ptr [rdx]
0x000000000043e5d7 : add byte ptr [rax], cl ; movsxd rdi, esp ; call qword ptr [rsi]
0x000000000043e057 : add byte ptr [rbp + rax*4 - 3], dl ; call rsp
0x000000000043e1d7 : add byte ptr [rbp + rcx - 1], dh ; call rsp
0x0000000000414cab : add byte ptr [rbx + 0x142dc045], cl ; ret 0x9b3e
0x0000000000414ced : add byte ptr [rbx + 0x152dc045], cl ; ret 0x9b3e
0x000000000041c64f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x41c637 ; ret
0x000000000042e9b5 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x0000000000412410 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403b87 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405f90 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004156b2 : add byte ptr [rbx + 0x672de845], cl ; int1 ; ret
0x00000000004157e9 : add byte ptr [rbx + 0x682de845], cl ; int1 ; ret
0x000000000043df17 : add byte ptr [rbx + rax*8], ah ; cld ; call rsp
0x000000000043ee53 : add byte ptr [rbx + rcx], ah ; add byte ptr [rax + 0x77], bl ; std ; jmp rdx
0x000000000042f42b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000042f3a7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004032c2 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004058be : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000426ff0 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000405dc2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004112c3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000043e473 : add byte ptr [rcx + rax + 0x57280000], al ; cld ; jmp qword ptr [rdi]
0x0000000000403305 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000043e197 : add byte ptr [rcx + rbp*8 - 3], al ; call rsp
0x00000000004179ce : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a28 : add byte ptr [rcx], al ; ret
0x000000000041656a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d6c6 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000402d07 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000407a0d : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000041c6b7 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040a31f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402b66 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004032c8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041a41f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041787c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a301 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004032a5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004059e6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043e593 : add byte ptr [rdx + rax + 0x5dc80000], ah ; cld ; jmp rbx
0x000000000043e513 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; pop rax ; pop rdx ; cld ; call qword ptr [rsi]
0x000000000043ed73 : add byte ptr [rdx + rcx + 0x76d80000], al ; std ; jmp qword ptr [rdi]
0x000000000043ed13 : add byte ptr [rdx + rcx], ah ; add byte ptr [rax], al ; test al, 0x76 ; std ; jmp qword ptr [rdi]
0x00000000004194ad : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e017 : add byte ptr [rsi + rbp*2], ah ; std ; call rsp
0x000000000043e157 : add byte ptr [rsi + rbp*4], ah ; std ; call rsp
0x000000000043e0d7 : add byte ptr [rsp + rbx*4], al ; std ; call rsp
0x000000000043ef33 : add byte ptr [rsp + rcx], al ; add byte ptr [rax - 0x72], ch ; std ; call rdx
0x0000000000402b61 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413959 : add cl, ch ; ret
0x000000000042ecef : add cl, ch ; ret 0
0x0000000000408f84 : add cl, ch ; ret 1
0x0000000000430996 : add dword ptr [rax], eax ; add al, ch ; ret 0xfd0b
0x0000000000412685 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043e475 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; push rdi ; cld ; jmp qword ptr [rdi]
0x0000000000403b85 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412daa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403dab : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ea2b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403307 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a24 : add eax, 0x23e8ee ; add ebx, esi ; ret
0x000000000043de15 : add eax, 0x40840000 ; cld ; call rsp
0x000000000043e8b5 : add eax, 0x45480000 ; std ; jmp qword ptr [rdx]
0x0000000000408391 : add eax, 0x58b80000 ; ret
0x0000000000430cb4 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x000000000043a9a6 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004019eb : add eax, edx ; sar rax, 1 ; jne 0x4019fc ; pop rbp ; ret
0x0000000000401a29 : add ebx, esi ; ret
0x0000000000401c7b : add esp, 0x10 ; pop rbp ; ret
0x00000000004179cc : add esp, 0x100 ; pop rbp ; ret
0x0000000000412da7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004161ae : add esp, 0x120 ; pop rbp ; ret
0x000000000041555b : add esp, 0x140 ; pop rbp ; ret
0x0000000000403f5f : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000412133 : add esp, 0x20 ; pop rbp ; ret
0x00000000004194ab : add esp, 0x200 ; pop rbp ; ret
0x0000000000402f0f : add esp, 0x210 ; pop rbp ; ret
0x000000000041c5d8 : add esp, 0x230 ; pop rbp ; ret
0x000000000041aba3 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000430b0a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000405f8b : add esp, 0x2e8 ; pop rbx ; pop rbp ; ret
0x0000000000404356 : add esp, 0x30 ; pop rbp ; ret
0x0000000000404d57 : add esp, 0x40 ; pop rbp ; ret
0x0000000000408903 : add esp, 0x450 ; pop rbp ; ret
0x0000000000401c34 : add esp, 0x50 ; pop rbp ; ret
0x00000000004042a6 : add esp, 0x60 ; pop rbp ; ret
0x0000000000412f8f : add esp, 0x70 ; pop rbp ; ret
0x0000000000434963 : add esp, 0x7f8 ; pop rbp ; ret
0x0000000000404636 : add esp, 0x80 ; pop rbp ; ret
0x0000000000418bec : add esp, 0x890 ; pop rbp ; ret
0x00000000004198c2 : add esp, 0x90 ; pop rbp ; ret
0x00000000004099ae : add esp, 0xa0 ; pop rbp ; ret
0x00000000004032f2 : add esp, 0xb0 ; pop rbp ; ret
0x00000000004120e4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000408abd : add esp, 0xd0 ; pop rbp ; ret
0x000000000043d0be : add esp, 0xd70 ; pop rbp ; ret
0x00000000004095f6 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401506 : add esp, 8 ; ret
0x0000000000403f81 : add esp, dword ptr [rax + rax + 0x5d] ; ret
0x0000000000402b60 : add esp, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415468 : add r8b, bpl ; ret 0xfffe
0x00000000004019ea : add rax, rdx ; sar rax, 1 ; jne 0x4019fd ; pop rbp ; ret
0x0000000000401c7a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004179cb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000412da6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004161ad : add rsp, 0x120 ; pop rbp ; ret
0x000000000041555a : add rsp, 0x140 ; pop rbp ; ret
0x0000000000403f5e : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000412132 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004194aa : add rsp, 0x200 ; pop rbp ; ret
0x0000000000402f0e : add rsp, 0x210 ; pop rbp ; ret
0x000000000041c5d7 : add rsp, 0x230 ; pop rbp ; ret
0x000000000041aba2 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000430b09 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000405f8a : add rsp, 0x2e8 ; pop rbx ; pop rbp ; ret
0x0000000000404355 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d56 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000408902 : add rsp, 0x450 ; pop rbp ; ret
0x0000000000401c33 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004042a5 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000412f8e : add rsp, 0x70 ; pop rbp ; ret
0x0000000000434962 : add rsp, 0x7f8 ; pop rbp ; ret
0x0000000000404635 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000418beb : add rsp, 0x890 ; pop rbp ; ret
0x00000000004198c1 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004099ad : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004032f1 : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004120e3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000408abc : add rsp, 0xd0 ; pop rbp ; ret
0x000000000043d0bd : add rsp, 0xd70 ; pop rbp ; ret
0x00000000004095f5 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401505 : add rsp, 8 ; ret
0x000000000043df58 : and al, 0x50 ; std ; call rsp
0x000000000043e018 : and al, 0x6e ; std ; call rsp
0x000000000043ed14 : and al, 0xa ; add byte ptr [rax], al ; test al, 0x76 ; std ; jmp qword ptr [rdi]
0x00000000004080c5 : and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000043e158 : and al, 0xffffffffffffffae ; std ; call rsp
0x000000000042b5b6 : and al, 0xffffffffffffffb0 ; add al, ch ; ret 0xfd60
0x000000000043df18 : and al, 0xffffffffffffffc3 ; cld ; call rsp
0x0000000000403306 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043e514 : and al, 2 ; add byte ptr [rax], al ; pop rax ; pop rdx ; cld ; call qword ptr [rsi]
0x000000000041ceff : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004161b0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415465 : and eax, 0x43d9c8 ; call 0x4016b7
0x0000000000403f7f : and eax, 0x640320 ; pop rbp ; ret
0x0000000000403fa3 : and eax, 0x640328 ; pop rbp ; ret
0x000000000043ad9a : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000401a27 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000415310 : call 0x401562
0x00000000004307df : call 0x401566
0x0000000000401dbf : call 0x401576
0x0000000000405a77 : call 0x4015b7
0x00000000004307ac : call 0x4015d6
0x000000000041546a : call 0x4016b2
0x0000000000403d60 : call 0x403dc8
0x0000000000405cbb : call 0x413726
0x000000000043321d : call 0xffffffffc282eb99
0x00000000004156b5 : call 0xffffffffc432bdeb
0x00000000004156b4 : call 0xffffffffc432bdec
0x00000000004157ec : call 0xffffffffc432c022
0x00000000004157eb : call 0xffffffffc432c023
0x0000000000418768 : call 0xffffffffd1418767
0x0000000000412129 : call 0xffffffffe903aa79
0x0000000000412128 : call 0xffffffffe903aa7a
0x000000000040db6d : call 0xfffffffff7396104
0x000000000041a665 : call 0xffffffffff462c3a
0x0000000000410699 : call 0xffffffffff558c6b
0x0000000000410698 : call 0xffffffffff558c6c
0x0000000000410699 : call 0xffffffffff558c6d
0x0000000000410698 : call 0xffffffffff558c6e
0x000000000043d119 : call qword ptr [r12 + rbx*8]
0x000000000040fa26 : call qword ptr [rax]
0x00000000004055b8 : call qword ptr [rbx]
0x00000000004116b5 : call qword ptr [rcx]
0x0000000000405a19 : call qword ptr [rdi]
0x000000000040f653 : call qword ptr [rdx]
0x000000000040f5ef : call qword ptr [rsi]
0x000000000043d11a : call qword ptr [rsp + rbx*8]
0x0000000000405aef : call r8
0x0000000000401a4d : call rax
0x000000000040de0a : call rbx
0x0000000000405c98 : call rcx
0x00000000004082b1 : call rdi
0x000000000040884f : call rdx
0x0000000000417984 : call rsi
0x0000000000407c7d : call rsp
0x000000000042f3ac : cdq ; ret
0x00000000004163e0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415559 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x0000000000402f0d : clc ; add rsp, 0x210 ; pop rbp ; ret
0x000000000041c70c : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419122 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041ca20 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004019ef : clc ; jne 0x4019f8 ; pop rbp ; ret
0x000000000041361b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000403327 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040331c : clc ; pop rbp ; ret
0x0000000000401ca7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e51a : cld ; call qword ptr [rsi]
0x000000000043de1a : cld ; call rsp
0x000000000043e47a : cld ; jmp qword ptr [rdi]
0x000000000043e59a : cld ; jmp rbx
0x0000000000408916 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000408919 : cld ; pop rbp ; ret
0x000000000043ded2 : cld ; push qword ptr [rax + rcx - 0x530c0000] ; cld ; call rsp
0x000000000043de12 : cld ; push qword ptr [rbp + rax + 0x40840000] ; cld ; call rsp
0x000000000043df12 : cld ; push qword ptr [rcx + rcx - 0x3cdc0000] ; cld ; call rsp
0x000000000043de92 : cld ; push qword ptr [rdi + rax + 0x68740000] ; cld ; call rsp
0x000000000043de52 : cld ; push qword ptr [rsi + rax + 0x5eb40000] ; cld ; call rsp
0x00000000004102ed : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000419c6d : cmp al, -0x2a ; ret
0x0000000000422164 : cmp al, -0x2e ; ret
0x000000000043bf28 : cmp dh, -1 ; call qword ptr [rax]
0x000000000043b6f3 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000041530a : cmp eax, 0x253e9 ; add al, ch ; ret 0xfffe
0x000000000043c085 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004019ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019c0 ; pop rbp ; ret
0x000000000043655e : cmp esi, dword ptr [rdi] ; ret 0x8589
0x000000000043af24 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x00000000004221b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x00000000004125c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000043f139 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x000000000043f138 : cwde ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x000000000042eeab : cwde ; js 0x42ee55 ; ret
0x000000000042eef2 : cwde ; js 0x42ee9c ; ret
0x000000000042ef2c : cwde ; js 0x42eed6 ; ret
0x0000000000432dbd : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000042e948 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000403318 : dec dword ptr [rax - 0x77] ; jge 0x40331b ; pop rbp ; ret
0x000000000042914a : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000416d47 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000426f49 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000426ef4 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x00000000004399d7 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000410492 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041079d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000433d55 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000043bf9c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043b6f6 : dec dword ptr [rcx] ; ret 0x9589
0x00000000004058e7 : dec dword ptr [rdi] ; pushfq ; ret 0xd284
0x0000000000411ca4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000421a88 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x0000000000408f7e : dec dword ptr [rdi] ; test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x00000000004166c3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041db34 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x000000000041d77c : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x000000000041c175 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000043cbae : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x0000000000427055 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000405973 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041c171 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000040587a : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a41b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000415466 : enter 0x43d9, 0 ; call 0x4016b6
0x000000000040984d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004186d4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004135d9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ed78 : fdiv dword ptr [rsi - 3] ; jmp qword ptr [rdi]
0x000000000043f239 : fdiv st(5), st(0) ; call qword ptr [rdi]
0x00000000004188e3 : fild qword ptr [rbx + 0x68] ; ret 0x8589
0x0000000000418a16 : fild qword ptr [rbx + 0x68] ; ret 0x89b9
0x000000000041888f : fisubr word ptr [rbx + 0x68] ; ret 0x8589
0x0000000000415467 : fld dword ptr [rbx] ; call 0x4016b5
0x0000000000418284 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000418764 : fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x0000000000428c90 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x0000000000428c65 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000043d11c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000414221 : fnstenv dword ptr [rsi - 0x7e03aa75] ; ret 0xfffc
0x0000000000401c79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cb7c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418bea : hlt ; add rsp, 0x890 ; pop rbp ; ret
0x000000000043ded8 : hlt ; lodsb al, byte ptr [rsi] ; cld ; call rsp
0x00000000004019c0 : hlt ; pop rbp ; mov edi, 0x6402b8 ; jmp rax
0x000000000042d9dd : idiv bh ; call qword ptr [rcx]
0x00000000004275e3 : idiv bh ; call qword ptr [rdi]
0x0000000000427deb : idiv bh ; call qword ptr [rdx]
0x0000000000428266 : idiv bh ; call rcx
0x000000000042d6c0 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042d7f6 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042d9f6 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042aa82 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042a910 : idiv bh ; jmp qword ptr [rax]
0x000000000042db61 : idiv bh ; jmp qword ptr [rcx]
0x00000000004295fc : idiv bh ; jmp qword ptr [rdi]
0x000000000042a097 : idiv bh ; jmp qword ptr [rsi]
0x0000000000429391 : idiv bh ; jmp rbx
0x00000000004282bf : idiv bh ; jmp rdi
0x0000000000426f26 : idiv bh ; jmp rdx
0x000000000042ab3a : idiv bh ; jmp rsp
0x0000000000418769 : idiv edi ; call rax
0x0000000000429148 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000428b36 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429807 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429327 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000429def : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418a8f : idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000420253 : imul al ; ret 0x893f
0x000000000042de3c : imul eax ; ret 0x483f
0x000000000042599b : imul eax ; ret 0x893f
0x000000000041701e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040fc49 : in al, -0x7f ; ret 0xff9f
0x000000000040fe2f : in al, -0x7f ; ret 0xffbf
0x000000000040fed5 : in al, -0x7f ; ret 0xffc5
0x00000000004080c8 : in al, -0x7f ; ret 0xffd0
0x000000000040ff03 : in al, -0x7f ; ret 0xffd5
0x000000000040ffd1 : in al, -0x7f ; ret 0xffd8
0x0000000000410167 : in al, -0x7f ; ret 0xffe0
0x0000000000401d69 : in al, 0x2d ; ret
0x000000000043df98 : in al, 0x52 ; std ; call rsp
0x000000000043dfd8 : in al, 0x54 ; std ; call rsp
0x000000000043e5d4 : in al, 2 ; add byte ptr [rax], al ; or byte ptr [rbx - 4], ah ; call qword ptr [rsi]
0x000000000043e9d4 : in al, 6 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 3], al ; jmp qword ptr [rax]
0x0000000000418e8f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000415897 : in al, dx ; jmp 0x415a3d
0x0000000000409cfa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042e94b : in al, dx ; pop rbp ; ret
0x0000000000403303 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000408913 : in eax, -0x77 ; jge 0x40891b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004162c3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042f5ab : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004059e2 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004059e0 : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004112bf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042d6c2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000428b38 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f881 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004272c2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411e6a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405d13 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000402913 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000408145 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000408784 : inc dword ptr [rcx] ; jmp 0x408913
0x0000000000412d78 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000043a2e3 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x000000000043c7c2 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000043b8d2 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000439ac1 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x000000000043ab23 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000408f81 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040c41f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040fa5f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000414f1c : int 0x80
0x00000000004156b8 : int1 ; ret
0x00000000004019b3 : ja 0x4019ba ; pop rbp ; ret
0x000000000043ee59 : ja 0x43ee5a ; jmp rdx
0x000000000043ed19 : jbe 0x43ed1a ; jmp qword ptr [rdi]
0x000000000043ed79 : jbe 0x43ed7a ; jmp qword ptr [rdi]
0x00000000004019bf : je 0x4019bd ; pop rbp ; mov edi, 0x6402b8 ; jmp rax
0x000000000043de98 : je 0x43df05 ; cld ; call rsp
0x0000000000418b8f : jg 0x418ba3 ; xchg eax, edi ; ret 0xd284
0x000000000042db4a : jg 0x42db5e ; xchg eax, esp ; ret 0xd284
0x0000000000430c63 : jg 0x430c6a ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401dbd : jge 0x401db7 ; call 0x401578
0x000000000040331b : jge 0x403318 ; pop rbp ; ret
0x0000000000403326 : jge 0x403327 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408915 : jge 0x408919 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041361a : jge 0x41361d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004162c6 : jge 0x4162c3 ; pop rbp ; ret
0x0000000000416b38 : jge 0x416b4f ; ret
0x0000000000417023 : jge 0x41703a ; ret
0x000000000042fb19 : jge 0x42fb13 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000416a0c : jl 0x416a23 ; ret
0x000000000041c605 : jl 0x41c5e1 ; ret
0x000000000041c655 : jl 0x41c631 ; ret
0x000000000040157b : jmp 0x401517
0x0000000000405bea : jmp 0x405f9a
0x0000000000408753 : jmp 0x408911
0x000000000040838f : jmp 0x408912
0x000000000040f40d : jmp 0x4120f3
0x0000000000411ea1 : jmp 0x4120f5
0x0000000000413520 : jmp 0x41360d
0x0000000000415898 : jmp 0x415a3c
0x000000000041701d : jmp 0x417595
0x000000000042a683 : jmp 0x42e954
0x0000000000427731 : jmp 0x42e955
0x0000000000429a8b : jmp 0x42e956
0x000000000042eceb : jmp 0x42ecf6
0x000000000042f95b : jmp 0x42f966
0x0000000000430994 : jmp 0x430b18
0x0000000000433113 : jmp 0x434971
0x000000000043beef : jmp 0x43d0cc
0x000000000043c645 : jmp 0x43d0cd
0x000000000043ca10 : jmp 0x43d0ce
0x0000000000434441 : jmp 0xffffffff8cfd0892
0x00000000004194ee : jmp 0xffffffffb70398ba
0x000000000042eeaa : jmp 0xffffffffc3e7674b
0x000000000040f52d : jmp qword ptr [rax]
0x000000000041069f : jmp qword ptr [rbx]
0x0000000000403210 : jmp qword ptr [rcx]
0x00000000004295fe : jmp qword ptr [rdi]
0x00000000004125c5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040db76 : jmp qword ptr [rdx]
0x000000000041062f : jmp qword ptr [rsi]
0x00000000004019c7 : jmp rax
0x00000000004086a8 : jmp rbx
0x0000000000439ac7 : jmp rcx
0x00000000004059a2 : jmp rdi
0x0000000000401a07 : jmp rdx
0x000000000043ada2 : jmp rsi
0x0000000000411259 : jmp rsp
0x00000000004019f0 : jne 0x4019f7 ; pop rbp ; ret
0x0000000000412d76 : jne 0x412d7f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041b586 : jne 0x41b54e ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000401501 : jnp 0x40150d ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000412f91 : jo 0x412ff2 ; ret
0x00000000004130b4 : jo 0x413115 ; ret
0x00000000004131ee : jo 0x41324f ; ret
0x0000000000413918 : jo 0x4138e9 ; pop rsp ; ret 0x8589
0x00000000004140ac : jo 0x41407d ; pop rsp ; ret 0xe1b9
0x000000000041832c : jo 0x41838d ; ret
0x000000000041ca24 : jo 0x41ca85 ; ret
0x000000000043d0c0 : jo 0x43d0d4 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004120e6 : js 0x4120fa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042eeac : js 0x42ee54 ; ret
0x000000000042eef3 : js 0x42ee9b ; ret
0x000000000042ef2d : js 0x42eed5 ; ret
0x000000000043af22 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000415463 : lea ecx, dword ptr [0x43d9c8] ; call 0x4016b9
0x000000000043ded9 : lodsb al, byte ptr [rsi] ; cld ; call rsp
0x0000000000437016 : lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000402da5 : loopne 0x402dae ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004095f8 : loopne 0x4095ff ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a0be : loopne 0x40a0c7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414be6 : loopne 0x414bed ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000418070 : loopne 0x418079 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041847c : loopne 0x4184cc ; add esp, 0x40 ; pop rbp ; ret
0x000000000041847b : loopne 0x4184cd ; add esp, 0x40 ; pop rbp ; ret
0x0000000000430b0c : loopne 0x430b15 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043b6f0 : loopne 0x43b685 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000409235 : mov ah, -0x17 ; ret
0x000000000043e0d4 : mov ah, 0x10 ; add byte ptr [rax], al ; add al, -0x64 ; std ; call rsp
0x000000000043e154 : mov ah, 0x12 ; add byte ptr [rax], al ; and al, 0xffffffffffffffae ; std ; call rsp
0x000000000043e214 : mov ah, 0x15 ; add byte ptr [rax], al ; test byte ptr [rdi + rdi*8], dl ; call rsp
0x000000000042204c : mov ah, 0x47 ; ret 0x8589
0x0000000000427a24 : mov ah, 0x47 ; ret 0x88b9
0x0000000000401e50 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043de58 : mov ah, 0x5e ; cld ; call rsp
0x000000000043df54 : mov ah, 0xa ; add byte ptr [rax], al ; and al, 0x50 ; std ; call rsp
0x000000000043df94 : mov ah, 0xb ; add byte ptr [rax], al ; in al, 0x52 ; std ; call rsp
0x000000000043dfd4 : mov ah, 0xc ; add byte ptr [rax], al ; in al, 0x54 ; std ; call rsp
0x000000000043e014 : mov ah, 0xd ; add byte ptr [rax], al ; and al, 0x6e ; std ; call rsp
0x000000000043e054 : mov ah, 0xe ; add byte ptr [rax], al ; push rsp ; test edi, ebp ; call rsp
0x000000000043de14 : mov ah, 5 ; add byte ptr [rax], al ; test byte ptr [rax - 4], al ; call rsp
0x000000000043de54 : mov ah, 6 ; add byte ptr [rax], al ; mov ah, 0x5e ; cld ; call rsp
0x000000000043de94 : mov ah, 7 ; add byte ptr [rax], al ; je 0x43df09 ; cld ; call rsp
0x000000000043ded4 : mov ah, 8 ; add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; cld ; call rsp
0x000000000043df14 : mov ah, 9 ; add byte ptr [rax], al ; and al, 0xffffffffffffffc3 ; cld ; call rsp
0x000000000043b2f9 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000402d83 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a63a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004032f4 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403304 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004307aa : mov al, 0 ; call 0x4015d8
0x0000000000413916 : mov al, 0x2d ; jo 0x4138eb ; pop rsp ; ret 0x8589
0x0000000000413a8d : mov al, 0x2d ; ret
0x000000000040a27b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000403c7d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042edad : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f5a9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416278 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041656c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403fa1 : mov byte ptr [0x640328], al ; pop rbp ; ret
0x0000000000411c38 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401a23 : mov byte ptr [rip + 0x23e8ee], 1 ; ret
0x0000000000403dad : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ea2d : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403309 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042f6d5 : mov dl, -0x47 ; ret
0x000000000043ef39 : mov dr1, ebp ; call rdx
0x0000000000403f7d : mov dword ptr [0x640320], edi ; pop rbp ; ret
0x0000000000409f37 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409cfb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409e6f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000415fde : mov dword ptr [rbp - 0x110], ecx ; call r8
0x0000000000416145 : mov dword ptr [rbp - 0x120], ecx ; call r8
0x0000000000405ae9 : mov dword ptr [rbp - 0x2c0], ecx ; call r8
0x0000000000401e4e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ca5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408914 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403325 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040331a : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040a0ed : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041361c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000041cf03 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000415309 : mov eax, 0x253e93d ; add byte ptr [rax], al ; call 0x401569
0x0000000000409bef : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040897b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d53 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041809f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404bec : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004184be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404352 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417d90 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409f3a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041847a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409ae4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409bec : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409cf5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409e71 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042fe00 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000412f8b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041cb7a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408917 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041c70a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419120 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041ca1e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403329 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004162ac : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004163df : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041653b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403bbf : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416353 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000429a8d : mov ebp, 0xb800004e ; push rcx ; ret
0x0000000000401a4b : mov ebp, esp ; call rax
0x00000000004019b1 : mov ebp, esp ; ja 0x4019bc ; pop rbp ; ret
0x0000000000408912 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004162c2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000405a79 : mov ebx, 0x3ebeffff ; ret
0x0000000000409cf8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000432f41 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000401a45 : mov edi, 0x63fe20 ; mov rbp, rsp ; call rax
0x00000000004019c2 : mov edi, 0x6402b8 ; jmp rax
0x0000000000401a02 : mov edi, 0x6402b8 ; jmp rdx
0x0000000000401dbc : mov edi, dword ptr [rbp - 0x10] ; call 0x401579
0x0000000000405a75 : mov edi, eax ; call 0x4015b9
0x000000000043d117 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043d116 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041b589 : mov edx, dword ptr [rbp - 0x30] ; call rax
0x0000000000432c91 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x000000000041b585 : mov esi, dword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000405cb9 : mov esi, eax ; call 0x413728
0x0000000000401a00 : mov esi, eax ; mov edi, 0x6402b8 ; jmp rdx
0x00000000004055b3 : mov esp, 0x2dfffffe ; call qword ptr [rbx]
0x00000000004052f7 : mov esp, 0x2dfffffe ; ret
0x0000000000405463 : mov esp, 0x2dfffffe ; ret 0x2477
0x0000000000432dbe : mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000432ce7 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x000000000042e94a : mov esp, ebp ; pop rbp ; ret
0x0000000000403f7c : mov qword ptr [0x640320], rdi ; pop rbp ; ret
0x0000000000403324 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403319 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040a0ec : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409234 : mov r12b, -0x17 ; ret
0x0000000000401e4f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043b2f8 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000413915 : mov r8b, 0x2d ; jo 0x4138ec ; pop rsp ; ret 0x8589
0x0000000000413a8c : mov r8b, 0x2d ; ret
0x000000000040897a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d52 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041809e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404beb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004184bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404351 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417d8f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418479 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409ae3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409beb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042fdff : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000412f8a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403328 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a4a : mov rbp, rsp ; call rax
0x00000000004019b0 : mov rbp, rsp ; ja 0x4019bd ; pop rbp ; ret
0x00000000004162c1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041b588 : mov rdx, qword ptr [rbp - 0x30] ; call rax
0x000000000041b584 : mov rsi, qword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000405cb8 : mov rsi, rax ; call 0x413729
0x00000000004019ff : mov rsi, rax ; mov edi, 0x6402b8 ; jmp rdx
0x000000000042e949 : mov rsp, rbp ; pop rbp ; ret
0x0000000000412d7a : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000412d7b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040820a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405b55 : mov word ptr [rcx], cs ; ret 0x5589
0x00000000004104cc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000042f94e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000042e599 : movabs dword ptr [0xfff63485c7fffd2f], eax ; jmp qword ptr [rdi]
0x000000000043e594 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add al, cl ; pop rbp ; cld ; jmp rbx
0x000000000041701c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x417596
0x000000000042eead : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000422163 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x000000000042212d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043e119 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rsp
0x000000000042eb39 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043e5d9 : movsxd rdi, esp ; call qword ptr [rsi]
0x000000000042ea2c : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403308 : movzx eax, al ; pop rbp ; ret
0x0000000000403dac : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041656b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043d138 : nop dword ptr [rax + rax] ; ret
0x000000000043dfd5 : or al, 0 ; add ah, ah ; push rsp ; std ; call rsp
0x000000000043ef35 : or al, 0 ; add byte ptr [rax - 0x72], ch ; std ; call rdx
0x00000000004120e7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415464 : or al, 0x25 ; enter 0x43d9, 0 ; call 0x4016b8
0x000000000043ed75 : or al, byte ptr [rax] ; add al, bl ; jbe 0x43ed7e ; jmp qword ptr [rdi]
0x000000000043df55 : or al, byte ptr [rax] ; add byte ptr [rax + rdx*2], ah ; std ; call rsp
0x0000000000413957 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043ded5 : or byte ptr [rax], al ; add ah, dh ; lodsb al, byte ptr [rsi] ; cld ; call rsp
0x000000000043eaf5 : or byte ptr [rax], al ; add byte ptr [rax], ch ; std ; jmp qword ptr [rdx]
0x000000000043e5d8 : or byte ptr [rbx - 4], ah ; call qword ptr [rsi]
0x0000000000407be9 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407a07 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000432f42 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x000000000043df15 : or dword ptr [rax], eax ; add byte ptr [rbx + rax*8], ah ; cld ; call rsp
0x00000000004166c7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041cefe : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000043e015 : or eax, 0x6e240000 ; std ; call rsp
0x000000000043df95 : or eax, dword ptr [rax] ; add ah, ah ; push rdx ; std ; call rsp
0x000000000043ee55 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x77], bl ; std ; jmp rdx
0x0000000000413171 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043ee54 : or eax, dword ptr fs:[rax] ; add byte ptr [rax + 0x77], bl ; std ; jmp rdx
0x000000000042e9d5 : out -0x47, al ; ret 0x48e7
0x000000000042204b : out -0x4c, al ; ret 0x8589
0x000000000042209f : out -0x4c, eax ; ret 0x8589
0x0000000000427a23 : out -0x4c, eax ; ret 0x88b9
0x000000000042edaf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403c7f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043e019 : outsb dx, byte ptr [rsi] ; std ; call rsp
0x000000000043d12c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043d12e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412412 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043d130 : pop r14 ; pop r15 ; ret
0x0000000000403b89 : pop r14 ; pop rbp ; ret
0x0000000000412414 : pop r15 ; pop rbp ; ret
0x000000000043d132 : pop r15 ; ret
0x000000000042f428 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000043ee58 : pop rax ; ja 0x43ee5b ; jmp rdx
0x000000000043e518 : pop rax ; pop rdx ; cld ; call qword ptr [rsi]
0x000000000040721f : pop rax ; ret
0x000000000043e599 : pop rbp ; cld ; jmp rbx
0x0000000000401a22 : pop rbp ; mov byte ptr [rip + 0x23e8ee], 1 ; ret
0x00000000004019c1 : pop rbp ; mov edi, 0x6402b8 ; jmp rax
0x00000000004019fe : pop rbp ; mov rsi, rax ; mov edi, 0x6402b8 ; jmp rdx
0x000000000043d12b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043d12f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019b5 : pop rbp ; ret
0x0000000000412411 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b88 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405f91 : pop rbx ; pop rbp ; ret
0x0000000000437999 : pop rbx ; ret 0x1dd
0x000000000042f6d4 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000420cb8 : pop rcx ; ret 0x891f
0x0000000000427107 : pop rcx ; ret 0xba1f
0x0000000000412415 : pop rdi ; pop rbp ; ret
0x000000000041d057 : pop rdi ; ret
0x000000000042fb1b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043e519 : pop rdx ; cld ; call qword ptr [rsi]
0x0000000000437945 : pop rdx ; ret 0x1dd
0x000000000043de59 : pop rsi ; cld ; call rsp
0x0000000000412413 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043d131 : pop rsi ; pop r15 ; ret
0x0000000000403b8a : pop rsi ; pop rbp ; ret
0x000000000043d12d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c322 : pop rsp ; ret
0x00000000004138cf : pop rsp ; ret 0x8589
0x00000000004140ae : pop rsp ; ret 0xe1b9
0x000000000042d6c8 : popfq ; ret 0xd284
0x000000000042de37 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x000000000043ded3 : push qword ptr [rax + rcx - 0x530c0000] ; cld ; call rsp
0x000000000043e0d3 : push qword ptr [rax + rdx - 0x63fc0000] ; std ; call rsp
0x000000000043de13 : push qword ptr [rbp + rax + 0x40840000] ; cld ; call rsp
0x000000000043e013 : push qword ptr [rbp + rcx + 0x6e240000] ; std ; call rsp
0x000000000043df93 : push qword ptr [rbx + rcx + 0x52e40000] ; std ; call rsp
0x000000000043e193 : push qword ptr [rbx + rdx - 0x16bc0000] ; std ; call rsp
0x000000000043df13 : push qword ptr [rcx + rcx - 0x3cdc0000] ; cld ; call rsp
0x000000000043e113 : push qword ptr [rcx + rdx - 0x5a7c0000] ; std ; call rsp
0x000000000043de93 : push qword ptr [rdi + rax + 0x68740000] ; cld ; call rsp
0x000000000043e093 : push qword ptr [rdi + rcx - 0x792c0000] ; std ; call rsp
0x0000000000411b0f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000043df53 : push qword ptr [rdx + rcx + 0x50240000] ; std ; call rsp
0x000000000043e153 : push qword ptr [rdx + rdx - 0x51dc0000] ; std ; call rsp
0x000000000043de53 : push qword ptr [rsi + rax + 0x5eb40000] ; cld ; call rsp
0x000000000043e053 : push qword ptr [rsi + rcx - 0x7aac0000] ; std ; call rsp
0x000000000043dfd3 : push qword ptr [rsp + rcx + 0x54e40000] ; std ; call rsp
0x0000000000401c36 : push rax ; pop rbp ; ret
0x00000000004212d7 : push rax ; ret
0x000000000043df59 : push rax ; std ; call rsp
0x000000000041797b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000418283 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000418763 : push rbp ; fmul dword ptr [rax - 0x39] ; test ebp, eax ; idiv edi ; call rax
0x000000000040fc48 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040fe2e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040fed4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004080c7 : push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000040ff02 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040ffd0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000410166 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401a44 : push rbp ; mov edi, 0x63fe20 ; mov rbp, rsp ; call rax
0x00000000004162c0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000405b54 : push rbp ; mov word ptr [rcx], cs ; ret 0x5589
0x000000000041530c : push rbx ; add al, byte ptr [rax] ; add al, ch ; ret 0xfffe
0x0000000000413956 : push rbx ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000041ebcb : push rbx ; ret 0xaf58
0x0000000000424917 : push rcx ; ret
0x000000000043e479 : push rdi ; cld ; jmp qword ptr [rdi]
0x00000000004071cb : push rdi ; ret
0x000000000041eb77 : push rdx ; ret 0xaf58
0x000000000043df99 : push rdx ; std ; call rsp
0x000000000043dfd9 : push rsp ; std ; call rsp
0x000000000043e058 : push rsp ; test edi, ebp ; call rsp
0x00000000004058c1 : pushfq ; ret 0x8445
0x0000000000402d09 : pushfq ; ret 0xd284
0x0000000000407a0f : pushfq ; ret 0xe280
0x000000000043e0d9 : pushfq ; std ; call rsp
0x0000000000400288 : ret
0x00000000004125c9 : ret 0
0x0000000000419a49 : ret 0x10
0x000000000041cf51 : ret 0x19e8
0x000000000042a37f : ret 0x1be8
0x0000000000437946 : ret 0x1dd
0x0000000000426ef7 : ret 0x20
0x000000000042f5db : ret 0x2030
0x0000000000401782 : ret 0x23e9
0x0000000000401582 : ret 0x23ea
0x0000000000405468 : ret 0x2477
0x000000000040f627 : ret 0x2a
0x0000000000412946 : ret 0x2c1
0x0000000000434f45 : ret 0x3617
0x000000000042a888 : ret 0x40
0x0000000000413529 : ret 0x43d8
0x000000000040c58a : ret 0x43fa
0x0000000000433e5f : ret 0x4810
0x000000000042de3e : ret 0x483f
0x000000000042e9bb : ret 0x48e7
0x000000000043cbc6 : ret 0x4eb9
0x0000000000405b57 : ret 0x5589
0x000000000041cd23 : ret 0x5e5
0x0000000000426c23 : ret 0x6d
0x0000000000430f19 : ret 0x6f69
0x00000000004228c3 : ret 0x73
0x000000000041efd8 : ret 0x791e
0x0000000000421cf3 : ret 0x7a
0x000000000042aaaf : ret 0x7b9
0x00000000004267b7 : ret 0x7f76
0x0000000000424047 : ret 0x80
0x0000000000428aa8 : ret 0x8148
0x00000000004070b3 : ret 0x83a1
0x0000000000402917 : ret 0x8445
0x0000000000438c4d : ret 0x848e
0x000000000040d339 : ret 0x8589
0x0000000000427a26 : ret 0x88b9
0x000000000043583e : ret 0x8916
0x000000000040c420 : ret 0x891a
0x0000000000420cb9 : ret 0x891f
0x000000000042ef8c : ret 0x8934
0x0000000000420255 : ret 0x893f
0x0000000000418287 : ret 0x8948
0x00000000004194f1 : ret 0x89b6
0x0000000000418a19 : ret 0x89b9
0x0000000000422ed9 : ret 0x89e8
0x0000000000437867 : ret 0x89fc
0x000000000042ef68 : ret 0x8b34
0x0000000000411285 : ret 0x8b48
0x0000000000415fd0 : ret 0x8b4c
0x000000000042bae2 : ret 0x8be8
0x000000000043b6f8 : ret 0x9589
0x000000000043af26 : ret 0x9ae9
0x0000000000414cb1 : ret 0x9b3e
0x00000000004303eb : ret 0xa4be
0x00000000004102f5 : ret 0xa9b9
0x000000000040bd72 : ret 0xade6
0x000000000041eb78 : ret 0xaf58
0x0000000000402b8f : ret 0xb0
0x0000000000421a7f : ret 0xb846
0x000000000040fa60 : ret 0xb91a
0x000000000041e407 : ret 0xb957
0x00000000004197ab : ret 0xb9b6
0x0000000000427108 : ret 0xba1f
0x000000000042a2de : ret 0xbce8
0x00000000004019e5 : ret 0xc148
0x0000000000402b69 : ret 0xd284
0x0000000000411b13 : ret 0xd4e9
0x0000000000406767 : ret 0xd58d
0x00000000004112a0 : ret 0xdae8
0x0000000000437769 : ret 0xe0a5
0x00000000004140af : ret 0xe1b9
0x00000000004032cb : ret 0xe280
0x000000000043b53e : ret 0xe9fc
0x000000000043200d : ret 0xec0b
0x000000000041212c : ret 0xee8
0x0000000000428c93 : ret 0xf40
0x00000000004104d5 : ret 0xf41
0x000000000042a30f : ret 0xf9b9
0x000000000041e007 : ret 0xfa
0x0000000000428ae6 : ret 0xfa81
0x000000000043099a : ret 0xfd0b
0x000000000042b5ba : ret 0xfd60
0x000000000043bc76 : ret 0xff9b
0x000000000040fc4b : ret 0xff9f
0x00000000004115ee : ret 0xffa5
0x000000000043be5c : ret 0xffbb
0x000000000040fe31 : ret 0xffbf
0x000000000041089b : ret 0xffc4
0x000000000040fed7 : ret 0xffc5
0x00000000004080ca : ret 0xffd0
0x000000000040ff05 : ret 0xffd5
0x000000000040ffd3 : ret 0xffd8
0x0000000000410941 : ret 0xffd9
0x0000000000410169 : ret 0xffe0
0x000000000042a505 : ret 0xfff7
0x000000000042a536 : ret 0xfff9
0x000000000040f23e : ret 0xfffa
0x0000000000418bf5 : ret 0xfffb
0x0000000000414227 : ret 0xfffc
0x0000000000415312 : ret 0xfffe
0x0000000000414993 : ret 0xffff
0x0000000000408f86 : ret 1
0x0000000000408f9a : ret 2
0x0000000000411c27 : ret 4
0x00000000004166f8 : ret 5
0x0000000000412310 : ret 8
0x0000000000402c87 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a594 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408abf : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403a6c : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x0000000000403b84 : rol byte ptr [rcx], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041aba5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ca02 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000409cf6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416082 : ror byte ptr [r15], -0x64 ; ret 0xd284
0x00000000004019ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019fb ; pop rbp ; ret
0x000000000042ea2e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000414be2 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x414bf1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409cf7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416083 : ror byte ptr [rdi], -0x64 ; ret 0xd284
0x0000000000418280 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041c6b9 : sahf ; ret 0xd284
0x0000000000419c6e : salc ; ret
0x00000000004019ee : sar eax, 1 ; jne 0x4019f9 ; pop rbp ; ret
0x00000000004019ed : sar rax, 1 ; jne 0x4019fa ; pop rbp ; ret
0x000000000043aa93 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000412da9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043e9d8 : sbb byte ptr [rdi - 3], al ; jmp qword ptr [rax]
0x0000000000437395 : sbb dl, dh ; ret
0x0000000000417e63 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004102ee : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004373e9 : sbb edx, esi ; ret
0x000000000043aa92 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000043e159 : scasb al, byte ptr [rdi] ; std ; call rsp
0x00000000004275dc : shl byte ptr [rcx - 0x7a380003], 0x34 ; idiv bh ; call qword ptr [rdi]
0x000000000043aa02 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000407beb : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000043f23a : std ; call qword ptr [rdi]
0x000000000043ef3a : std ; call rdx
0x000000000043df5a : std ; call rsp
0x000000000043e9da : std ; jmp qword ptr [rax]
0x000000000043ed1a : std ; jmp qword ptr [rdi]
0x000000000043e8ba : std ; jmp qword ptr [rdx]
0x000000000043f13a : std ; jmp rax
0x000000000043ee5a : std ; jmp rdx
0x000000000043e0d2 : std ; push qword ptr [rax + rdx - 0x63fc0000] ; std ; call rsp
0x000000000043e012 : std ; push qword ptr [rbp + rcx + 0x6e240000] ; std ; call rsp
0x000000000043df92 : std ; push qword ptr [rbx + rcx + 0x52e40000] ; std ; call rsp
0x000000000043e192 : std ; push qword ptr [rbx + rdx - 0x16bc0000] ; std ; call rsp
0x000000000043e112 : std ; push qword ptr [rcx + rdx - 0x5a7c0000] ; std ; call rsp
0x000000000043e092 : std ; push qword ptr [rdi + rcx - 0x792c0000] ; std ; call rsp
0x000000000043df52 : std ; push qword ptr [rdx + rcx + 0x50240000] ; std ; call rsp
0x000000000043e152 : std ; push qword ptr [rdx + rdx - 0x51dc0000] ; std ; call rsp
0x000000000043e052 : std ; push qword ptr [rsi + rcx - 0x7aac0000] ; std ; call rsp
0x000000000043dfd2 : std ; push qword ptr [rsp + rcx + 0x54e40000] ; std ; call rsp
0x000000000040d337 : sub al, 0x38 ; ret 0x8589
0x00000000004102f3 : sub al, 0x38 ; ret 0xa9b9
0x000000000043eaf8 : sub byte ptr [rax - 3], cl ; jmp qword ptr [rdx]
0x000000000043e478 : sub byte ptr [rdi - 4], dl ; jmp qword ptr [rdi]
0x0000000000407bec : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000043d191 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043d190 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000433119 : sysenter
0x000000000041799b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043b2cf : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000041b73d : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a9e8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412f8d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000043ed18 : test al, 0x76 ; std ; jmp qword ptr [rdi]
0x0000000000417878 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043de18 : test byte ptr [rax - 4], al ; call rsp
0x000000000043d13a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000421a8a : test byte ptr [rbx], ah ; ret 0
0x000000000043e474 : test byte ptr [rcx], al ; add byte ptr [rax], al ; sub byte ptr [rdi - 4], dl ; jmp qword ptr [rdi]
0x000000000043e218 : test byte ptr [rdi + rdi*8], dl ; call rsp
0x0000000000408f80 : test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x000000000043ed74 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; fdiv dword ptr [rsi - 3] ; jmp qword ptr [rdi]
0x00000000004166c5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041db36 : test cl, dh ; ret 0
0x000000000041d77e : test dl, bl ; ret 0
0x0000000000424040 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x0000000000421a84 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x000000000042a882 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x00000000004220bb : test dword ptr [rcx + 1], ebp ; ret
0x0000000000417980 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004176e8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041e1f8 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x0000000000405286 : test dword ptr [rsi + rdi*8 + 0x3d2dffff], edi ; ret
0x00000000004052f6 : test dword ptr [rsi + rdi*8 + 0x3e2dffff], edi ; ret
0x000000000040534a : test dword ptr [rsi + rdi*8 - 0x5dd20001], edi ; ret
0x0000000000405232 : test dword ptr [rsi + rdi*8 - 0x5ed20001], edi ; ret
0x000000000043a9ab : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000043b2d1 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x000000000043a2e5 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x000000000043c7c4 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000043cae3 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000043b8d4 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000043b9da : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x0000000000439ac3 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x000000000043ca07 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000043aa95 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000043ad9e : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000043af1e : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000418767 : test ebp, eax ; idiv edi ; call rax
0x0000000000429146 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000043e059 : test edi, ebp ; call rsp
0x0000000000418a8d : test esi, eax ; idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000428c92 : wait ; ret 0xf40
0x0000000000437865 : xchg ax, dx ; ret 0x89fc
0x000000000042210f : xchg byte ptr [rcx + 1], ch ; ret
0x000000000043e099 : xchg ch, bh ; call rsp
0x000000000043b6f2 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000040a321 : xchg eax, ebp ; ret
0x0000000000402916 : xchg eax, ebp ; ret 0x8445
0x0000000000402b68 : xchg eax, ebp ; ret 0xd284
0x00000000004032ca : xchg eax, ebp ; ret 0xe280
0x000000000043011b : xchg eax, ebx ; ret
0x000000000043cbb0 : xchg eax, ebx ; ret 0xd284
0x000000000040d31b : xchg eax, ecx ; ret
0x0000000000418b91 : xchg eax, edi ; ret 0xd284
0x000000000040d46b : xchg eax, edx ; ret
0x0000000000407994 : xchg eax, edx ; ret 0x8445
0x0000000000437866 : xchg eax, edx ; ret 0x89fc
0x000000000041787e : xchg eax, edx ; ret 0xd284
0x000000000043b53d : xchg eax, edx ; ret 0xe9fc
0x0000000000412ca2 : xchg eax, esi ; ret
0x0000000000427057 : xchg eax, esi ; ret 0xd284
0x0000000000405dc5 : xchg eax, esp ; ret
0x00000000004112c6 : xchg eax, esp ; ret 0x8445
0x00000000004032a7 : xchg eax, esp ; ret 0xd284
0x00000000004059e8 : xchg eax, esp ; ret 0xe280
0x000000000041c5da : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429a8a : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x00000000004132a7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409e6d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
