0x00000000004042c3 : adc al, 0x25 ; js 0x404311 ; add byte ptr [rax - 0x7f], cl ; ret 0x11e3
0x000000000041329b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410c79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004199dd : add al, 0 ; add al, dl ; jns 0x4199e8 ; jmp qword ptr [rdx]
0x00000000004199dc : add al, 0 ; add al, dl ; jns 0x4199e9 ; jmp qword ptr [rdx]
0x000000000041977d : add al, byte ptr [rax] ; add byte ptr [rax], dh ; sar esi, cl ; call qword ptr [rsi]
0x0000000000412b93 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041950b : add al, dh ; ret
0x00000000004199df : add al, dl ; jns 0x4199e6 ; jmp qword ptr [rdx]
0x0000000000412f8e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412cf6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041714f : add bl, dh ; ret
0x00000000004042c7 : add byte ptr [r8 - 0x7f], cl ; ret 0x11e3
0x0000000000402b15 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004042c8 : add byte ptr [rax - 0x7f], cl ; ret 0x11e3
0x00000000004199da : add byte ptr [rax], al ; add al, 0 ; add al, dl ; jns 0x4199eb ; jmp qword ptr [rdx]
0x0000000000412f8c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412cf4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041714d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041714b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041714c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004109be : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000414eb9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000414e35 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000416dce : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405843 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000414f75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000416b18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004147b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004088cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004028f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004057b9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041694d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000412e8a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004088af : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402ac1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041477d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000410c7b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004106e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414178 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041329d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410c37 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004012b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405056 : add byte ptr [rax], al ; call 0x401304
0x00000000004013c9 : add byte ptr [rax], al ; jmp 0x4012c9
0x0000000000414779 : add byte ptr [rax], al ; jmp 0x414788
0x00000000004153e9 : add byte ptr [rax], al ; jmp 0x4153f8
0x00000000004155f7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406db9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408199 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e26 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004109bf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410698 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041971e : add byte ptr [rax], al ; push rax ; sar dh, 1 ; call qword ptr [rsi]
0x000000000041714e : add byte ptr [rax], al ; ret
0x00000000004199de : add byte ptr [rax], al ; sar byte ptr [rcx - 1], 1 ; jmp qword ptr [rdx]
0x000000000041977f : add byte ptr [rax], dh ; sar esi, cl ; call qword ptr [rsi]
0x00000000004109c0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000410699 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405c90 : add byte ptr [rbx + 0xb2db845], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0x8589
0x0000000000405cdb : add byte ptr [rbx + 0xc2db845], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0x8589
0x0000000000414ebb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000414e37 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000416dd0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405845 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000412fde : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x0000000000414f77 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000416b1a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004147ba : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004088cf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004028f5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004057bb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041694f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000412e8c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004088b1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402ac3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004199db : add byte ptr [rsp + rax], ah ; add al, dl ; jns 0x4199ea ; jmp qword ptr [rdx]
0x0000000000411cd9 : add cl, ch ; ret
0x000000000041477f : add cl, ch ; ret 0
0x0000000000407467 : add cl, ch ; ret 1
0x00000000004058ac : add dl, byte ptr [rbx + 0x58c88ba] ; ret 0x8b48
0x00000000004058ab : add dl, byte ptr es:[rbx + 0x58c88ba] ; ret 0x8b48
0x0000000000410c35 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041135a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004050ad : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414691 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x219b6e ; add ebx, esi ; ret
0x0000000000407465 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x0000000000412fdc : add esp, 0x100 ; pop rbp ; ret
0x0000000000411357 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004064a6 : add esp, 0x130 ; pop rbp ; ret
0x0000000000405aaa : add esp, 0x150 ; pop rbp ; ret
0x00000000004079fd : add esp, 0x160 ; pop rbp ; ret
0x000000000041314c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004106e3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402e22 : add esp, 0x260 ; pop rbp ; ret
0x00000000004170d3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041417b : add esp, 0x30 ; pop rbp ; ret
0x0000000000404e4e : add esp, 0x350 ; pop rbp ; ret
0x000000000040190f : add esp, 0x40 ; pop rbp ; ret
0x0000000000401b02 : add esp, 0x50 ; pop rbp ; ret
0x0000000000406aa6 : add esp, 0x60 ; pop rbp ; ret
0x0000000000403093 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406761 : add esp, 0x80 ; pop rbp ; ret
0x0000000000415df2 : add esp, 0x90 ; pop rbp ; ret
0x0000000000407f5e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000410694 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004012b6 : add esp, 8 ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000412fdb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000411356 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004064a5 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405aa9 : add rsp, 0x150 ; pop rbp ; ret
0x00000000004079fc : add rsp, 0x160 ; pop rbp ; ret
0x000000000041314b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004106e2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e21 : add rsp, 0x260 ; pop rbp ; ret
0x00000000004170d2 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041417a : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e4d : add rsp, 0x350 ; pop rbp ; ret
0x000000000040190e : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b01 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000406aa5 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000403092 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406760 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000415df1 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407f5d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000410693 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004012b5 : add rsp, 8 ; ret
0x0000000000414690 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401e8d : and dl, ah ; ret
0x0000000000401727 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040677f : and eax, 0x61b2f8 ; pop rbp ; ret
0x00000000004067a3 : and eax, 0x61b300 ; pop rbp ; ret
0x0000000000405058 : call 0x401302
0x00000000004028c4 : call 0x4a028c18
0x00000000004106d9 : call 0xffffffffe9039029
0x00000000004106d8 : call 0xffffffffe903902a
0x000000000040c11d : call 0xfffffffff73946b4
0x0000000000416b95 : call 0xffffffffff45f16a
0x000000000040ec49 : call 0xffffffffff55721b
0x000000000040ec48 : call 0xffffffffff55721c
0x000000000040ec49 : call 0xffffffffff55721d
0x000000000040ec48 : call 0xffffffffff55721e
0x0000000000417129 : call qword ptr [r12 + rbx*8]
0x000000000040dfd6 : call qword ptr [rax]
0x0000000000404296 : call qword ptr [rbx]
0x00000000004046e2 : call qword ptr [rcx]
0x000000000040dc03 : call qword ptr [rdx]
0x000000000040db9f : call qword ptr [rsi]
0x000000000041712a : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x000000000040c3ba : call rbx
0x0000000000419d43 : call rdx
0x0000000000412f94 : call rsi
0x0000000000414e3c : cdq ; ret
0x0000000000402e20 : clc ; add rsp, 0x260 ; pop rbp ; ret
0x00000000004159e2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413f50 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x00000000004064c6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040386c : cld ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000040e89d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040773c : cmp al, -0x17 ; ret
0x000000000041619d : cmp al, -0x2a ; ret
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x0000000000403819 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000410b74 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041493b : cwde ; js 0x4148e5 ; ret
0x0000000000414982 : cwde ; js 0x41492c ; ret
0x00000000004149bc : cwde ; js 0x414966 ; ret
0x000000000040457e : dec dword ptr [rax - 0x75] ; push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004029e7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ea42 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040ed4d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000410254 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000411cd3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040dd88 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000406387 : enter -0x74b8, 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000041694b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000407dfd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414574 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411b89 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004028f1 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402abf : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004049e7 : fisttp qword ptr [rdx - 0x346489c] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000413894 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000406263 : fmul dword ptr [rax - 0x75] ; push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000041712c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004140ac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403091 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x61b260 ; jmp rax
0x000000000041262e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040e1f9 : in al, -0x7f ; ret 0xff9f
0x000000000040e3df : in al, -0x7f ; ret 0xffbf
0x000000000040e485 : in al, -0x7f ; ret 0xffc5
0x000000000040e4b3 : in al, -0x7f ; ret 0xffd5
0x000000000040e581 : in al, -0x7f ; ret 0xffd8
0x000000000040e717 : in al, -0x7f ; ret 0xffe0
0x000000000040675f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004082aa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041503b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004057ce : inc byte ptr [rax + 0x558801e2] ; ret
0x000000000040599d : inc dword ptr [rax + 0x558801e2] ; ret 0x9e9
0x000000000040f86f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040de31 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041041a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402689 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000411328 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040a9cf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040e00f : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x61b260 ; jmp rax
0x0000000000419c61 : jg 0x419c64 ; jmp rdx
0x00000000004059b2 : jge 0x405941 ; push rbp ; ret 0xd284
0x0000000000412148 : jge 0x41215f ; ret
0x0000000000412633 : jge 0x41264a ; ret
0x00000000004155a9 : jge 0x4155a3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041201c : jl 0x412033 ; ret
0x0000000000419c21 : jl 0x419c24 ; jmp qword ptr [rdx]
0x00000000004013cb : jmp 0x4012c7
0x0000000000404fe0 : jmp 0x4050be
0x000000000040d9bd : jmp 0x4106a3
0x0000000000410451 : jmp 0x4106a5
0x000000000041262d : jmp 0x412ba5
0x000000000041477b : jmp 0x414786
0x00000000004153eb : jmp 0x4153f6
0x0000000000415a1e : jmp 0xffffffffb7035dea
0x000000000041493a : jmp 0xffffffffc3e5c1db
0x000000000040483e : jmp qword ptr [rax]
0x000000000040ec4f : jmp qword ptr [rbx]
0x0000000000410620 : jmp qword ptr [rcx]
0x0000000000404dae : jmp qword ptr [rdi]
0x0000000000410b75 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040c126 : jmp qword ptr [rdx]
0x000000000040ebdf : jmp qword ptr [rsi]
0x00000000004016c7 : jmp rax
0x000000000040f772 : jmp rbx
0x000000000040fe0e : jmp rdi
0x0000000000401707 : jmp rdx
0x000000000040f809 : jmp rsp
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x0000000000411326 : jne 0x41132f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000419b01 : jnp 0x419b04 ; jmp qword ptr [rax]
0x00000000004199e1 : jns 0x4199e4 ; jmp qword ptr [rdx]
0x0000000000401e00 : jo 0x401da1 ; ret 0x89ab
0x0000000000402c6a : jo 0x402c0b ; ret 0xb9ab
0x0000000000403095 : jo 0x4030f6 ; ret
0x0000000000411541 : jo 0x4115a2 ; ret
0x0000000000411664 : jo 0x4116c5 ; ret
0x000000000041179e : jo 0x4117ff ; ret
0x000000000041393c : jo 0x41399d ; ret
0x0000000000413f54 : jo 0x413fb5 ; ret
0x00000000004042c6 : js 0x40430e ; add byte ptr [rax - 0x7f], cl ; ret 0x11e3
0x00000000004042c5 : js 0x40430f ; add byte ptr [rax - 0x7f], cl ; ret 0x11e3
0x0000000000410696 : js 0x4106aa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041493c : js 0x4148e4 ; ret
0x0000000000414983 : js 0x41492b ; ret
0x00000000004149bd : js 0x414965 ; ret
0x00000000004194ff : lcall ptr [rax - 0x5ffffff2] ; ret 0xffff
0x0000000000405c97 : lodsb al, byte ptr [rsi] ; ret 0x8589
0x00000000004060fd : lodsb al, byte ptr [rsi] ; ret 0xceb9
0x00000000004079c1 : loopne 0x4079ca ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004079fb : loopne 0x407a4e ; add esp, 0x160 ; pop rbp ; ret
0x000000000040866e : loopne 0x408677 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413680 : loopne 0x413689 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413a8c : loopne 0x413adc ; add esp, 0x40 ; pop rbp ; ret
0x0000000000413a8b : loopne 0x413add ; add esp, 0x40 ; pop rbp ; ret
0x0000000000413c3c : loopne 0x413c8c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000413c3b : loopne 0x413c8d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401b00 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004049e8 : mov ah, byte ptr [rdi + rsi*4 - 0x47] ; cld ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000416b6a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040882b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041468d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041483d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415039 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004049ea : mov bh, -0x47 ; cld ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004067a1 : mov byte ptr [0x61b300], al ; pop rbp ; ret
0x00000000004101e8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040437d : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004064c7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401723 : mov byte ptr [rip + 0x219b6e], 1 ; ret
0x00000000004050af : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414693 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415165 : mov dl, -0x47 ; ret
0x000000000040677d : mov dword ptr [0x61b2f8], edi ; pop rbp ; ret
0x00000000004084e7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004082ab : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040841f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401afe : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040869d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c93 : mov eax, 0xaca50b2d ; ret 0x8589
0x0000000000405cde : mov eax, 0xaca50c2d ; ret 0x8589
0x0000000000419508 : mov eax, 0xf000000e ; ret
0x000000000040819f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004139cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f23 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004136af : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406dbc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000413ace : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004133a0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004084ea : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000413a8a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408094 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040819c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004082a5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408421 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041153b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004140aa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040308f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004159e0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413f4e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x00000000004082a8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401745 : mov edi, 0x61ae20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x61b260 ; jmp rax
0x0000000000401702 : mov edi, 0x61b260 ; jmp rdx
0x0000000000417127 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000417126 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401700 : mov esi, eax ; mov edi, 0x61b260 ; jmp rdx
0x0000000000405299 : mov esp, 0x58c872d ; ret 0x8589
0x00000000004052e4 : mov esp, 0x58c882d ; ret 0x8589
0x000000000040677c : mov qword ptr [0x61b2f8], rdi ; pop rbp ; ret
0x000000000040869c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401aff : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405298 : mov r12d, 0x58c872d ; ret 0x8589
0x00000000004052e3 : mov r12d, 0x58c882d ; ret 0x8589
0x0000000000405c92 : mov r8d, 0xaca50b2d ; ret 0x8589
0x0000000000405cdd : mov r8d, 0xaca50c2d ; ret 0x8589
0x00000000004139ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f22 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004136ae : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406dbb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000413acd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041339f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413a89 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408093 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040819b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041153a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x00000000004016ff : mov rsi, rax ; mov edi, 0x61b260 ; jmp rdx
0x000000000041132a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041132b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040ea7c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004153de : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000419504 : movabs al, byte ptr [0xf000000eb8ffffc2] ; ret
0x000000000041262c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x412ba6
0x000000000041493d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405c96 : movsd dword ptr [rdi], dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0x8589
0x00000000004060fc : movsd dword ptr [rdi], dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0xceb9
0x00000000004050ae : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414692 : movzx eax, al ; pop rbp ; ret
0x00000000004064ca : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000417148 : nop dword ptr [rax + rax] ; ret
0x0000000000410697 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405ce0 : or al, 0xffffffffffffffa5 ; lodsb al, byte ptr [rsi] ; ret 0x8589
0x00000000004060fb : or al, 0xffffffffffffffa5 ; lodsb al, byte ptr [rsi] ; ret 0xceb9
0x0000000000405984 : or byte ptr [rcx + 0x23f9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004057b5 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411cd7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000411721 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041483f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041468f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401cb0 : outsb dx, byte ptr [rsi] ; ret
0x0000000000401725 : outsb dx, byte ptr [rsi] ; wait ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401dac : outsd dx, dword ptr [rsi] ; popfq ; ret 0x89ab
0x0000000000402538 : outsd dx, dword ptr [rsi] ; ret
0x000000000041713c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041713e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004109c2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417140 : pop r14 ; pop r15 ; ret
0x00000000004109c4 : pop r15 ; pop rbp ; ret
0x0000000000417142 : pop r15 ; ret
0x0000000000414eb8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x219b6e], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x61b260 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x61b260 ; jmp rdx
0x000000000041713b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041713f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x00000000004109c1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041069a : pop rbx ; pop rbp ; ret
0x0000000000415164 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004109c5 : pop rdi ; pop rbp ; ret
0x0000000000417143 : pop rdi ; ret
0x00000000004155ab : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004109c3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417141 : pop rsi ; pop r15 ; ret
0x000000000041713d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a8d2 : pop rsp ; ret
0x0000000000401dad : popfq ; ret 0x89ab
0x0000000000402c6b : popfq ; ret 0xb9ab
0x0000000000414f79 : popfq ; ret 0xd284
0x00000000004100bf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401b04 : push rax ; pop rbp ; ret
0x0000000000419720 : push rax ; sar dh, 1 ; call qword ptr [rsi]
0x0000000000412f8b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000406386 : push rbp ; enter -0x74b8, 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000413893 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000406262 : push rbp ; fmul dword ptr [rax - 0x75] ; push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000040e1f8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040e3de : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040e484 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040e4b2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040e580 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040e716 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004057cd : push rbp ; inc byte ptr [rax + 0x558801e2] ; ret
0x000000000040599c : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret 0x9e9
0x0000000000401744 : push rbp ; mov edi, 0x61ae20 ; mov rbp, rsp ; call rax
0x00000000004057d3 : push rbp ; ret
0x00000000004059a2 : push rbp ; ret 0x9e9
0x00000000004059b4 : push rbp ; ret 0xd284
0x000000000040642c : push rbp ; ror byte ptr [rax - 0x75], 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004062d4 : push rbp ; ror byte ptr [rax - 0x75], 1 ; push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000404581 : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000416dd3 : pushfq ; ret 0x8445
0x000000000040294a : pushfq ; ret 0xd284
0x00000000004012b9 : ret
0x00000000004063e8 : ret 0
0x0000000000415f79 : ret 0x10
0x00000000004042cb : ret 0x11e3
0x000000000041506b : ret 0x2030
0x00000000004015d2 : ret 0x219b
0x00000000004013d2 : ret 0x219c
0x000000000040dbd7 : ret 0x2a
0x0000000000410ef6 : ret 0x2c1
0x000000000040ab3a : ret 0x43fa
0x0000000000414253 : ret 0x5e5
0x000000000040268d : ret 0x8445
0x000000000040529e : ret 0x8589
0x000000000040a9d0 : ret 0x891a
0x0000000000414a1c : ret 0x8934
0x0000000000413897 : ret 0x8948
0x0000000000401dae : ret 0x89ab
0x0000000000415a21 : ret 0x89b6
0x00000000004149f8 : ret 0x8b34
0x00000000004043bc : ret 0x8b48
0x00000000004059a3 : ret 0x9e9
0x000000000040e8a5 : ret 0xa9b9
0x000000000040a322 : ret 0xade6
0x000000000040291e : ret 0xb0
0x0000000000402b58 : ret 0xb2e8
0x000000000040e010 : ret 0xb91a
0x0000000000402c6c : ret 0xb9ab
0x0000000000415cdb : ret 0xb9b6
0x00000000004016e5 : ret 0xc148
0x00000000004028c7 : ret 0xc149
0x000000000040f850 : ret 0xcae8
0x00000000004060fe : ret 0xceb9
0x00000000004028f8 : ret 0xd284
0x00000000004100c3 : ret 0xd4e9
0x00000000004057be : ret 0xe280
0x0000000000405977 : ret 0xe900
0x00000000004106dc : ret 0xee8
0x000000000040ea85 : ret 0xf41
0x000000000040e1fb : ret 0xff9f
0x000000000040fb9e : ret 0xffa5
0x000000000040e3e1 : ret 0xffbf
0x000000000040ee4b : ret 0xffc4
0x000000000040e487 : ret 0xffc5
0x000000000040e4b5 : ret 0xffd5
0x000000000040e583 : ret 0xffd8
0x000000000040eef1 : ret 0xffd9
0x000000000040e719 : ret 0xffe0
0x000000000040d7ee : ret 0xfffa
0x000000000040505a : ret 0xffff
0x000000000040422a : ret 1
0x000000000040ed50 : ret 2
0x00000000004101d7 : ret 4
0x0000000000411d08 : ret 5
0x0000000000402764 : ret 6
0x00000000004108c0 : ret 8
0x0000000000416ac4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004170d5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004082a6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x000000000040642d : ror byte ptr [rax - 0x75], 0x52 ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004062d5 : ror byte ptr [rax - 0x75], 1 ; push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004050b0 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004082a7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000413890 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004147bc : sahf ; ret 0xd284
0x000000000041619e : salc ; ret
0x00000000004199e0 : sar byte ptr [rcx - 1], 1 ; jmp qword ptr [rdx]
0x0000000000419721 : sar dh, 1 ; call qword ptr [rsi]
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x0000000000419781 : sar esi, cl ; call qword ptr [rsi]
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x0000000000404582 : sbb byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000411359 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000413473 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e89e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000402a41 : sbb eax, 0xb9fc4fae ; outsd dx, dword ptr [rsi] ; ret
0x0000000000403818 : sti ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000040b8e7 : sub al, 0x38 ; ret 0x8589
0x000000000040e8a3 : sub al, 0x38 ; ret 0xa9b9
0x000000000041717d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041717c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000412fab : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000416f18 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041153d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000412e88 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041714a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411cd5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000402762 : test ch, cl ; ret 6
0x0000000000412f90 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412cf8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000402761 : test r13b, r9b ; ret 6
0x0000000000401726 : wait ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004088d1 : xchg eax, ebp ; ret
0x000000000040268c : xchg eax, ebp ; ret 0x8445
0x00000000004028f7 : xchg eax, ebp ; ret 0xd284
0x00000000004057bd : xchg eax, ebp ; ret 0xe280
0x000000000040b8cb : xchg eax, ecx ; ret
0x0000000000416951 : xchg eax, edi ; ret 0xd284
0x000000000040ba1b : xchg eax, edx ; ret
0x0000000000412e8e : xchg eax, edx ; ret 0xd284
0x0000000000411252 : xchg eax, esi ; ret
0x00000000004088b3 : xchg eax, esp ; ret
0x0000000000405848 : xchg eax, esp ; ret 0x8445
0x0000000000402ac5 : xchg eax, esp ; ret 0xd284
0x00000000004064a8 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411857 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040841d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
