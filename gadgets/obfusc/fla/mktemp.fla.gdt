0x00000000004191db : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411bcb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415eda : adc eax, 0xb8000003 ; in al, 0x7f ; ret
0x0000000000414a94 : adc eax, dword ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000040e7c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041af37 : add ah, dl ; jg 0x41af3e ; jmp rsp
0x000000000041b525 : add al, 0 ; add al, bl ; cmp edi, edi ; jmp qword ptr [rdx]
0x0000000000414a95 : add al, 0 ; add cl, ch ; ret 1
0x000000000041b8e4 : add al, 8 ; add byte ptr [rax], al ; clc ; movsxd rdi, edi ; call rdx
0x000000000041bb07 : add al, bh ; jns 0x41bb0e ; jmp rax
0x000000000041b8e7 : add al, bh ; movsxd rdi, edi ; call rdx
0x000000000041b527 : add al, bl ; cmp edi, edi ; jmp qword ptr [rdx]
0x00000000004114c3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416bd8 : add al, ch ; ret 0xfeac
0x000000000041be67 : add al, cl ; ret 0xffff
0x00000000004118be : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411626 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000419dcf : add bl, dh ; ret
0x000000000041753f : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000041b8e3 : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; clc ; movsxd rdi, edi ; call rdx
0x000000000041adb7 : add byte ptr [rax + rdi - 1], ah ; jmp rsp
0x000000000041ad77 : add byte ptr [rax + rsi*4 - 2], al ; jmp rsp
0x00000000004056fe : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041b522 : add byte ptr [rax], al ; add al, 0 ; add al, bl ; cmp edi, edi ; jmp qword ptr [rdx]
0x000000000041b8e2 : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; clc ; movsxd rdi, edi ; call rdx
0x00000000004118bc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411624 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000419dcd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041753d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004056fc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000419dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041be41 : add byte ptr [rax], al ; add byte ptr [rbp + rcx], ah ; add byte ptr [rax], bl ; ret 0xffff
0x000000000040e50e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040453c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7f2de045], cl ; ret
0x0000000000416b36 : add byte ptr [rax], al ; add byte ptr [rbx - 0x49d217bb], cl ; ret 0x4314
0x0000000000418539 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004184b5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000405692 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x00000000004144ce : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004164d5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040d3c1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000410313 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000414218 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000417e38 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040641d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041404d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004117ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004063ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403881 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417dfd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040e7cb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e230 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404497 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411bcd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e787 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041657c : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004014e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041bb02 : add byte ptr [rax], al ; and al, 0xa ; add byte ptr [rax], al ; clc ; jns 0x41bb13 ; jmp rax
0x000000000041b802 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; call 0xffffffffe341b762
0x000000000041bb66 : add byte ptr [rax], al ; call 0x1241baff
0x0000000000419a1d : add byte ptr [rax], al ; call 0x401538
0x000000000041b806 : add byte ptr [rax], al ; call 0xffffffffe341b75e
0x000000000041bb06 : add byte ptr [rax], al ; clc ; jns 0x41bb0f ; jmp rax
0x000000000041b8e6 : add byte ptr [rax], al ; clc ; movsxd rdi, edi ; call rdx
0x000000000041adb6 : add byte ptr [rax], al ; cmp bh, bh ; jmp rsp
0x0000000000401599 : add byte ptr [rax], al ; jmp 0x4014f9
0x0000000000417df9 : add byte ptr [rax], al ; jmp 0x417e08
0x0000000000418a69 : add byte ptr [rax], al ; jmp 0x418a78
0x000000000041ad76 : add byte ptr [rax], al ; mov al, -2 ; jmp rsp
0x0000000000418c77 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404fa9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004045f9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405ce9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004056fd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040432a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e50f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e1e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041aef6 : add byte ptr [rax], al ; push rsp ; jbe 0x41aeff ; jmp rsp
0x000000000041c07a : add byte ptr [rax], al ; pushfq ; sldt word ptr [rax] ; sbb ch, -1 ; call qword ptr [rax]
0x00000000004005ae : add byte ptr [rax], al ; ret
0x000000000041c07e : add byte ptr [rax], al ; sbb ch, -1 ; call qword ptr [rax]
0x000000000041bb62 : add byte ptr [rax], al ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; call 0x1241bb03
0x000000000041be47 : add byte ptr [rax], bl ; ret 0xffff
0x000000000041be43 : add byte ptr [rbp + rcx], ah ; add byte ptr [rax], bl ; ret 0xffff
0x000000000040e510 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e1e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040453e : add byte ptr [rbx + 0x7f2de045], cl ; ret
0x00000000004042d5 : add byte ptr [rbx - 0x41b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000416b38 : add byte ptr [rbx - 0x49d217bb], cl ; ret 0x4314
0x000000000041853b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004184b7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000405694 : add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x00000000004144d0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004164d7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040d3c3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041190e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004019f8 : add byte ptr [rcx], al ; ret
0x000000000041b803 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; call 0xffffffffe341b761
0x0000000000410315 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041421a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000417e3a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040641f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038ea : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041404f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004117bc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406401 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403883 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ae77 : add byte ptr [rdx + rcx*2 - 1], dl ; jmp rsp
0x000000000041bb03 : add byte ptr [rdx + rcx], ah ; add byte ptr [rax], al ; clc ; jns 0x41bb12 ; jmp rax
0x000000000041aeb7 : add byte ptr [rsi + rbp*2 - 1], dl ; jmp rsp
0x000000000041aef7 : add byte ptr [rsi + rsi*2 - 1], dl ; jmp rsp
0x000000000041b523 : add byte ptr [rsp + rax], al ; add al, bl ; cmp edi, edi ; jmp qword ptr [rdx]
0x0000000000410609 : add cl, ch ; ret
0x0000000000417dff : add cl, ch ; ret 0
0x0000000000414a97 : add cl, ch ; ret 1
0x000000000040e785 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eeaa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041750d : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000410498 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417d11 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004019f4 : add eax, 0x21b91e ; add ebx, esi ; ret
0x0000000000403dc8 : add eax, 0x61b80000 ; ret
0x00000000004019bb : add eax, edx ; sar rax, 1 ; jne 0x4019cc ; pop rbp ; ret
0x00000000004019f9 : add ebx, esi ; ret
0x0000000000401ccb : add esp, 0x10 ; pop rbp ; ret
0x000000000041190c : add esp, 0x100 ; pop rbp ; ret
0x000000000040eea7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000411a7c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e233 : add esp, 0x20 ; pop rbp ; ret
0x00000000004161eb : add esp, 0x230 ; pop rbp ; ret
0x000000000041044a : add esp, 0x240 ; pop rbp ; ret
0x00000000004147d3 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000419d4a : add esp, 0x2e0 ; pop rbp ; ret
0x000000000040449a : add esp, 0x30 ; pop rbp ; ret
0x0000000000405117 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404326 : add esp, 0x430 ; pop rbp ; ret
0x0000000000401e72 : add esp, 0x50 ; pop rbp ; ret
0x0000000000401c77 : add esp, 0x60 ; pop rbp ; ret
0x000000000040f08f : add esp, 0x70 ; pop rbp ; ret
0x000000000040f6fc : add esp, 0x80 ; pop rbp ; ret
0x00000000004134f2 : add esp, 0x90 ; pop rbp ; ret
0x0000000000405aae : add esp, 0xa0 ; pop rbp ; ret
0x00000000004191af : add esp, 0xb0 ; pop rbp ; ret
0x000000000040e1e4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000405612 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000414ebc : add esp, 0xf0 ; pop rbp ; ret
0x00000000004014e6 : add esp, 8 ; ret
0x00000000004019ba : add rax, rdx ; sar rax, 1 ; jne 0x4019cd ; pop rbp ; ret
0x0000000000401cca : add rsp, 0x10 ; pop rbp ; ret
0x000000000041190b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040eea6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000411a7b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e232 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004161ea : add rsp, 0x230 ; pop rbp ; ret
0x0000000000410449 : add rsp, 0x240 ; pop rbp ; ret
0x00000000004147d2 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000419d49 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000404499 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405116 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404325 : add rsp, 0x430 ; pop rbp ; ret
0x0000000000401e71 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c76 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040f08e : add rsp, 0x70 ; pop rbp ; ret
0x000000000040f6fb : add rsp, 0x80 ; pop rbp ; ret
0x00000000004134f1 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405aad : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004191ae : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040e1e3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000405611 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000414ebb : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004014e5 : add rsp, 8 ; ret
0x000000000041bb04 : and al, 0xa ; add byte ptr [rax], al ; clc ; jns 0x41bb11 ; jmp rax
0x0000000000417d10 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b804 : and al, 7 ; add byte ptr [rax], al ; call 0xffffffffe341b760
0x00000000004019f7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040496f : and eax, 0x61d320 ; pop rbp ; ret
0x0000000000404993 : and eax, 0x61d328 ; pop rbp ; ret
0x0000000000417335 : and edi, dword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000417334 : and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x000000000041bb68 : call 0x1241bafd
0x0000000000416b3b : call 0x15042170
0x0000000000416b3a : call 0x15042171
0x0000000000419a1f : call 0x401536
0x00000000004199ec : call 0x4015c6
0x00000000004055e9 : call 0x401892
0x0000000000403818 : call 0xffffffffc301f17d
0x000000000041b808 : call 0xffffffffe341b75c
0x000000000040e229 : call 0xffffffffe9036b79
0x000000000040e228 : call 0xffffffffe9036b7a
0x0000000000409c6d : call 0xfffffffff7392204
0x0000000000414295 : call 0xffffffffff45c86a
0x000000000040c799 : call 0xffffffffff554d6b
0x000000000040c798 : call 0xffffffffff554d6c
0x000000000040c799 : call 0xffffffffff554d6d
0x000000000040c798 : call 0xffffffffff554d6e
0x0000000000419da9 : call qword ptr [r12 + rbx*8]
0x000000000040bb26 : call qword ptr [rax]
0x000000000040d7b5 : call qword ptr [rcx]
0x00000000004042eb : call qword ptr [rdx]
0x000000000040b6ef : call qword ptr [rsi]
0x0000000000419daa : call qword ptr [rsp + rbx*8]
0x0000000000401a1d : call rax
0x0000000000409f0a : call rbx
0x000000000041b8eb : call rdx
0x00000000004118c4 : call rsi
0x00000000004184bc : cdq ; ret
0x0000000000404952 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004127c0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414eba : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000417333 : clc ; and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x00000000004019bf : clc ; jne 0x4019c8 ; pop rbp ; ret
0x000000000041bb08 : clc ; jns 0x41bb0d ; jmp rax
0x0000000000416233 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000416213 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000041495b : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000414957 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041b8e8 : clc ; movsxd rdi, edi ; call rdx
0x0000000000405702 : clc ; pop rbp ; ret
0x0000000000414edb : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040c3ed : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041389d : cmp al, -0x2a ; ret
0x000000000041b769 : cmp al, -1 ; jmp qword ptr [rdx]
0x000000000041adb9 : cmp bh, bh ; jmp rsp
0x000000000040197d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401990 ; pop rbp ; ret
0x000000000041b649 : cmp edi, edi ; jmp qword ptr [rax]
0x000000000041b529 : cmp edi, edi ; jmp qword ptr [rdx]
0x000000000040e6c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004026d4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x0000000000403b10 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xbeba
0x00000000004055e8 : cwde ; call 0x401893
0x0000000000417fbb : cwde ; js 0x417f65 ; ret
0x0000000000418002 : cwde ; js 0x417fac ; ret
0x000000000041803c : cwde ; js 0x417fe6 ; ret
0x00000000004042db : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c592 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040c89d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040dda4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000414a91 : dec dword ptr [rdi] ; test byte ptr [rbx], dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000410603 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040b8d8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000414938 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000404c92 : enter -1, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000041404b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040594d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412de4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f6d9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004014e1 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004121c4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000416fb9 : fmul dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000419dac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401cc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414f70 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041291c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401990 : hlt ; pop rbp ; mov edi, 0x61d2b8 ; jmp rax
0x0000000000410f5e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040bd49 : in al, -0x7f ; ret 0xff9f
0x000000000040bf2f : in al, -0x7f ; ret 0xffbf
0x000000000040bfd5 : in al, -0x7f ; ret 0xffc5
0x000000000040c003 : in al, -0x7f ; ret 0xffd5
0x000000000040c0d1 : in al, -0x7f ; ret 0xffd8
0x000000000040c267 : in al, -0x7f ; ret 0xffe0
0x0000000000410448 : in al, 0x48 ; add esp, 0x240 ; pop rbp ; ret
0x00000000004159b3 : in al, 0x7f ; ret
0x0000000000412c7a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000405dfa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004186bb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d3bf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040b981 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040df6a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040342b : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040ee78 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041aef3 : inc esp ; or al, 0 ; add byte ptr [rsi + rsi*2 - 1], dl ; jmp rsp
0x000000000041ae73 : inc esp ; or al, byte ptr [rax] ; add byte ptr [rdx + rcx*2 - 1], dl ; jmp rsp
0x000000000041aeb3 : inc esp ; or eax, dword ptr [rax] ; add byte ptr [rsi + rbp*2 - 1], dl ; jmp rsp
0x000000000040851f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040bb5f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401983 : ja 0x40198a ; pop rbp ; ret
0x0000000000416216 : ja 0x416223 ; pop rbp ; ret
0x0000000000416236 : ja 0x41624b ; pop rbp ; ret
0x000000000041aef9 : jbe 0x41aefc ; jmp rsp
0x000000000040198f : je 0x40198d ; pop rbp ; mov edi, 0x61d2b8 ; jmp rax
0x0000000000404543 : jg 0x404593 ; ret
0x0000000000404571 : jg 0x4045c1 ; ret
0x000000000041af39 : jg 0x41af3c ; jmp rsp
0x0000000000410a78 : jge 0x410a8f ; ret
0x0000000000410f63 : jge 0x410f7a ; ret
0x000000000041495a : jge 0x41495a ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000416212 : jge 0x416213 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000416232 : jge 0x416233 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000417336 : jge 0x41732e ; mov rax, rdi ; pop rbp ; ret
0x0000000000418c29 : jge 0x418c23 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041094c : jl 0x410963 ; ret
0x000000000040159b : jmp 0x4014f7
0x0000000000403dc6 : jmp 0x404335
0x000000000040456b : jmp 0x404609
0x000000000040b50d : jmp 0x40e1f3
0x000000000040dfa1 : jmp 0x40e1f5
0x0000000000410f5d : jmp 0x4114d5
0x0000000000415ed9 : jmp 0x4161fb
0x0000000000417dfb : jmp 0x417e06
0x0000000000418a6b : jmp 0x418a76
0x000000000041311e : jmp 0xffffffffb70334ea
0x0000000000417fba : jmp 0xffffffffc3e5f85b
0x000000000040b62d : jmp qword ptr [rax]
0x000000000040c79f : jmp qword ptr [rbx]
0x000000000040e170 : jmp qword ptr [rcx]
0x00000000004037f2 : jmp qword ptr [rdi]
0x000000000040e6c5 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000409c76 : jmp qword ptr [rdx]
0x000000000040c72f : jmp qword ptr [rsi]
0x0000000000401997 : jmp rax
0x000000000040d2c2 : jmp rbx
0x00000000004041c3 : jmp rdi
0x00000000004019d7 : jmp rdx
0x000000000040d359 : jmp rsp
0x00000000004019c0 : jne 0x4019c7 ; pop rbp ; ret
0x00000000004055e3 : jne 0x40558d ; mov rdx, qword ptr [rbp - 0x68] ; call 0x401898
0x000000000040ee76 : jne 0x40ee7f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041730c : jne 0x4172e4 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000041bb09 : jns 0x41bb0c ; jmp rax
0x000000000040f091 : jo 0x40f0f2 ; ret
0x000000000040f1b4 : jo 0x40f215 ; ret
0x000000000040f2ee : jo 0x40f34f ; ret
0x000000000041226c : jo 0x4122cd ; ret
0x00000000004127c4 : jo 0x412825 ; ret
0x0000000000416581 : jo 0x4165e2 ; ret
0x000000000041656e : jp 0x416582 ; call rax
0x00000000004157f3 : jrcxz 0x415876 ; ret
0x000000000040e1e6 : js 0x40e1fa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000417fbc : js 0x417f64 ; ret
0x0000000000418003 : js 0x417fab ; ret
0x000000000041803d : js 0x417fe5 ; ret
0x000000000041b079 : loope 0x41b07c ; jmp rsp
0x0000000000404541 : loopne 0x404574 ; jg 0x404595 ; ret
0x0000000000404540 : loopne 0x404575 ; jg 0x404596 ; ret
0x0000000000405610 : loopne 0x405663 ; add esp, 0xd0 ; pop rbp ; ret
0x00000000004061be : loopne 0x4061c7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411fb0 : loopne 0x411fb9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004123bc : loopne 0x41240c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004123bb : loopne 0x41240d ; add esp, 0x40 ; pop rbp ; ret
0x00000000004164d3 : loopne 0x4164dd ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000417574 : loopne 0x417506 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000417573 : loopne 0x417507 ; push rbp ; mov ah, -0x7f ; ret 3
0x00000000004177d7 : loopne 0x417769 ; push rbp ; mov ah, -0x7f ; ret 2
0x00000000004177d6 : loopne 0x41776a ; push rbp ; mov ah, -0x7f ; ret 2
0x000000000041790f : loopne 0x4178a1 ; push rbp ; mov al, -0x7f ; ret 3
0x000000000041790e : loopne 0x4178a2 ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000417b72 : loopne 0x417b04 ; push rbp ; mov al, -0x7f ; ret 2
0x0000000000417b71 : loopne 0x417b05 ; push rbp ; mov al, -0x7f ; ret 2
0x0000000000419d4c : loopne 0x419d55 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417539 : mov ah, -0x7f ; ret 1
0x0000000000417558 : mov ah, -0x7f ; ret 2
0x0000000000417577 : mov ah, -0x7f ; ret 3
0x0000000000417596 : mov ah, -0x7f ; ret 4
0x00000000004175b5 : mov ah, -0x7f ; ret 5
0x00000000004175d4 : mov ah, -0x7f ; ret 6
0x00000000004175f3 : mov ah, -0x7f ; ret 7
0x000000000041750b : mov ah, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000401e70 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004178d4 : mov al, -0x7f ; ret 1
0x00000000004178f3 : mov al, -0x7f ; ret 2
0x0000000000417912 : mov al, -0x7f ; ret 3
0x0000000000417931 : mov al, -0x7f ; ret 4
0x0000000000417950 : mov al, -0x7f ; ret 5
0x000000000041796f : mov al, -0x7f ; ret 6
0x000000000041798e : mov al, -0x7f ; ret 7
0x000000000041ad79 : mov al, -2 ; jmp rsp
0x00000000004038e6 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041426a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004191b1 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004178a6 : mov al, 0 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004199ea : mov al, 0 ; call 0x4015c8
0x000000000040637b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000417d0d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417ebd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004186b9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404991 : mov byte ptr [0x61d328], al ; pop rbp ; ret
0x0000000000405542 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000403924 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004019f3 : mov byte ptr [rip + 0x21b91e], 1 ; ret
0x000000000041afb9 : mov ch, -1 ; jmp rsp
0x000000000041049a : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417d13 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004187e5 : mov dl, -0x47 ; ret
0x000000000040496d : mov dword ptr [0x61d320], edi ; pop rbp ; ret
0x0000000000406037 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405dfb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405f6f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401e6e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401cc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004061ed : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416235 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x0000000000416215 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x0000000000417bea : mov eax, 0x81b0558b ; ret 7
0x000000000041784f : mov eax, 0x81b4558b ; ret 7
0x0000000000405cef : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004122fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405113 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411fdf : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404fac : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004123fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411cd0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004045fc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004123ba : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004051e2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405be4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405cec : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405df5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000414936 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405f71 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040f08b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414f6e : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041291a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404950 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004127be : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405700 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041495d : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x000000000041730f : mov eax, dword ptr [rsi] ; pop rbp ; ret
0x0000000000414ee1 : mov eax, edi ; pop rbp ; ret
0x0000000000401a1b : mov ebp, esp ; call rax
0x0000000000401981 : mov ebp, esp ; ja 0x40198c ; pop rbp ; ret
0x00000000004019f6 : mov ecx, 0xf3010021 ; ret
0x0000000000405df8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401a15 : mov edi, 0x61ce20 ; mov rbp, rsp ; call rax
0x0000000000401992 : mov edi, 0x61d2b8 ; jmp rax
0x00000000004019d2 : mov edi, 0x61d2b8 ; jmp rdx
0x0000000000416231 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000416211 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414959 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041656d : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000419da7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000419da6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000416569 : mov edx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x00000000004055e6 : mov edx, dword ptr [rbp - 0x68] ; call 0x401895
0x000000000041730b : mov esi, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x00000000004055e2 : mov esi, dword ptr [rbp - 0x60] ; mov rdx, qword ptr [rbp - 0x68] ; call 0x401899
0x00000000004019d0 : mov esi, eax ; mov edi, 0x61d2b8 ; jmp rdx
0x000000000040496c : mov qword ptr [0x61d320], rdi ; pop rbp ; ret
0x00000000004061ec : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416234 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000416214 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000401e6f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000417be9 : mov r8d, 0x81b0558b ; ret 7
0x000000000041784e : mov r8d, 0x81b4558b ; ret 7
0x00000000004122fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405112 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411fde : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404fab : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004123fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411ccf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004045fb : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004123b9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004051e1 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405be3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405ceb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414935 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f08a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004056ff : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041495c : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041730e : mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000414ee0 : mov rax, rdi ; pop rbp ; ret
0x0000000000401a1a : mov rbp, rsp ; call rax
0x0000000000401980 : mov rbp, rsp ; ja 0x40198d ; pop rbp ; ret
0x0000000000416230 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000416210 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414958 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041656c : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000416568 : mov rdx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x00000000004055e5 : mov rdx, qword ptr [rbp - 0x68] ; call 0x401896
0x000000000041730a : mov rsi, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x00000000004019cf : mov rsi, rax ; mov edi, 0x61d2b8 ; jmp rdx
0x000000000040ee7a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040ee7b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040c5cc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000418a5e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000410f5c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x4114d6
0x0000000000417fbd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000403817 : movsd dword ptr [rdi], dword ptr [rsi] ; call 0xffffffffc301f17e
0x000000000041b8e9 : movsxd rdi, edi ; call rdx
0x0000000000417d12 : movzx eax, al ; pop rbp ; ret
0x0000000000410499 : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419dc8 : nop dword ptr [rax + rax] ; ret
0x000000000040e1e7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041aef5 : or al, 0 ; add byte ptr [rsi + rsi*2 - 1], dl ; jmp rsp
0x000000000041bb05 : or al, byte ptr [rax] ; add al, bh ; jns 0x41bb10 ; jmp rax
0x000000000041ae75 : or al, byte ptr [rax] ; add byte ptr [rdx + rcx*2 - 1], dl ; jmp rsp
0x0000000000414edf : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x000000000041b8e5 : or byte ptr [rax], al ; add al, bh ; movsxd rdi, edi ; call rdx
0x0000000000416fb5 : or dword ptr [rax - 0x75], 0x8148d855 ; ret 0x20
0x0000000000410607 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040f271 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041aeb5 : or eax, dword ptr [rax] ; add byte ptr [rsi + rbp*2 - 1], dl ; jmp rsp
0x0000000000414ede : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x0000000000417ebf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417d0f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419dbc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419dbe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e512 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419dc0 : pop r14 ; pop r15 ; ret
0x000000000040e514 : pop r15 ; pop rbp ; ret
0x0000000000419dc2 : pop r15 ; ret
0x0000000000418538 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004019f2 : pop rbp ; mov byte ptr [rip + 0x21b91e], 1 ; ret
0x0000000000401991 : pop rbp ; mov edi, 0x61d2b8 ; jmp rax
0x00000000004019ce : pop rbp ; mov rsi, rax ; mov edi, 0x61d2b8 ; jmp rdx
0x0000000000419dbb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419dbf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401985 : pop rbp ; ret
0x000000000040e511 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e1ea : pop rbx ; pop rbp ; ret
0x0000000000403dc5 : pop rcx ; jmp 0x404336
0x00000000004187e4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040e515 : pop rdi ; pop rbp ; ret
0x0000000000419dc3 : pop rdi ; ret
0x0000000000418c2b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e513 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419dc1 : pop rsi ; pop r15 ; ret
0x0000000000419dbd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408422 : pop rsp ; ret
0x0000000000410317 : popfq ; ret 0xd284
0x0000000000416fb3 : push -0x4b ; or dword ptr [rax - 0x75], 0x8148d855 ; ret 0x20
0x0000000000403fad : push -0x71000001 ; ret
0x000000000040dc0f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401e74 : push rax ; pop rbp ; ret
0x00000000004118bb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004055e7 : push rbp ; cwde ; call 0x401894
0x00000000004121c3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000416fb8 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x20
0x000000000040bd48 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040bf2e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040bfd4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040c002 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040c0d0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040c266 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000417538 : push rbp ; mov ah, -0x7f ; ret 1
0x0000000000417557 : push rbp ; mov ah, -0x7f ; ret 2
0x0000000000417576 : push rbp ; mov ah, -0x7f ; ret 3
0x0000000000417595 : push rbp ; mov ah, -0x7f ; ret 4
0x00000000004175b4 : push rbp ; mov ah, -0x7f ; ret 5
0x00000000004175d3 : push rbp ; mov ah, -0x7f ; ret 6
0x00000000004175f2 : push rbp ; mov ah, -0x7f ; ret 7
0x00000000004178d3 : push rbp ; mov al, -0x7f ; ret 1
0x00000000004178f2 : push rbp ; mov al, -0x7f ; ret 2
0x0000000000417911 : push rbp ; mov al, -0x7f ; ret 3
0x0000000000417930 : push rbp ; mov al, -0x7f ; ret 4
0x000000000041794f : push rbp ; mov al, -0x7f ; ret 5
0x000000000041796e : push rbp ; mov al, -0x7f ; ret 6
0x000000000041798d : push rbp ; mov al, -0x7f ; ret 7
0x0000000000405541 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000401a14 : push rbp ; mov edi, 0x61ce20 ; mov rbp, rsp ; call rax
0x000000000041aef8 : push rsp ; jbe 0x41aefd ; jmp rsp
0x00000000004144d3 : pushfq ; ret 0x8445
0x000000000041421c : pushfq ; ret 0xd284
0x000000000041c07c : pushfq ; sldt word ptr [rax] ; sbb ch, -1 ; call qword ptr [rax]
0x00000000004005b0 : ret
0x000000000040e6c9 : ret 0
0x0000000000413679 : ret 0x10
0x00000000004027da : ret 0x14
0x0000000000416fbc : ret 0x20
0x00000000004186eb : ret 0x2030
0x00000000004017a2 : ret 0x21b9
0x00000000004015a2 : ret 0x21ba
0x000000000040b727 : ret 0x2a
0x000000000040ea46 : ret 0x2c1
0x0000000000400284 : ret 0x35ea
0x000000000040569a : ret 0x42ab
0x0000000000416ad8 : ret 0x4314
0x000000000040868a : ret 0x43fa
0x00000000004160ee : ret 0x484e
0x00000000004021cb : ret 0x500b
0x0000000000412ac3 : ret 0x5e5
0x000000000040342f : ret 0x8445
0x00000000004026d5 : ret 0x8589
0x0000000000408520 : ret 0x891a
0x000000000041809c : ret 0x8934
0x0000000000405545 : ret 0x8948
0x00000000004156a5 : ret 0x894e
0x0000000000413121 : ret 0x89b6
0x0000000000418078 : ret 0x8b34
0x000000000040d385 : ret 0x8b48
0x000000000041962b : ret 0xa4be
0x000000000040c3f5 : ret 0xa9b9
0x0000000000407e72 : ret 0xade6
0x0000000000403861 : ret 0xb0
0x000000000040bb60 : ret 0xb91a
0x00000000004133db : ret 0xb9b6
0x0000000000403b11 : ret 0xbeba
0x00000000004019b5 : ret 0xc148
0x0000000000403886 : ret 0xd284
0x000000000040dc13 : ret 0xd4e9
0x00000000004161e3 : ret 0xe94e
0x000000000040d3a0 : ret 0xeae8
0x000000000040e22c : ret 0xee8
0x000000000040c5d5 : ret 0xf41
0x0000000000416bda : ret 0xfeac
0x000000000040bd4b : ret 0xff9f
0x000000000040d6ee : ret 0xffa5
0x000000000040bf31 : ret 0xffbf
0x000000000040c99b : ret 0xffc4
0x000000000040bfd7 : ret 0xffc5
0x000000000040c005 : ret 0xffd5
0x000000000040c0d3 : ret 0xffd8
0x000000000040ca41 : ret 0xffd9
0x000000000040c269 : ret 0xffe0
0x000000000040b33e : ret 0xfffa
0x00000000004055eb : ret 0xffff
0x0000000000403a11 : ret 1
0x000000000040c8a0 : ret 2
0x000000000041008c : ret 3
0x000000000040dd27 : ret 4
0x0000000000410638 : ret 5
0x00000000004175d6 : ret 6
0x00000000004175f5 : ret 7
0x000000000040e410 : ret 8
0x0000000000416c5b : rol bh, 1 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000041908a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000403cc4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004141c4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405614 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004147d5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416c5a : rol r15b, 1 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000405df6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004019bc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019cb ; pop rbp ; ret
0x0000000000417309 : ror byte ptr [rax - 0x75], 1 ; jne 0x4172e7 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000405df7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004121c0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000417570 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x41750a ; push rbp ; mov ah, -0x7f ; ret 3
0x000000000041790b : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x4178a5 ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000417e3c : sahf ; ret 0xd284
0x000000000041389e : salc ; ret
0x00000000004019be : sar eax, 1 ; jne 0x4019c9 ; pop rbp ; ret
0x00000000004019bd : sar rax, 1 ; jne 0x4019ca ; pop rbp ; ret
0x000000000040eea9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c080 : sbb ch, -1 ; call qword ptr [rax]
0x0000000000411da3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c3ee : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000401994 : shl byte ptr [rcx], cl ; jmp rax
0x00000000004019d4 : shl byte ptr [rcx], cl ; jmp rdx
0x0000000000404971 : shl dword ptr [rcx], cl ; pop rbp ; ret
0x0000000000414edd : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000414edc : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000041c07d : sldt word ptr [rax] ; sbb ch, -1 ; call qword ptr [rax]
0x0000000000409437 : sub al, 0x38 ; ret 0x8589
0x000000000040c3f3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000403c04 : sub eax, 0x8eb9a2aa ; ret
0x00000000004160e8 : sub eax, 0xbeb920d6 ; ret 0x484e
0x0000000000419e11 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000419e10 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004118db : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000410311 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004041fe : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f08d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x00000000004117b8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000419dca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414a93 : test byte ptr [rbx], dl ; add al, 0 ; add cl, ch ; ret 1
0x000000000041bb64 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; call 0x1241bb01
0x0000000000410605 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004118c0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411628 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000416c5d : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000406421 : xchg eax, ebp ; ret
0x000000000040342e : xchg eax, ebp ; ret 0x8445
0x00000000004038ec : xchg eax, ebp ; ret 0xd284
0x000000000041935b : xchg eax, ebx ; ret
0x000000000040941b : xchg eax, ecx ; ret
0x0000000000414051 : xchg eax, edi ; ret 0xd284
0x000000000040956b : xchg eax, edx ; ret
0x00000000004117be : xchg eax, edx ; ret 0xd284
0x000000000040eda2 : xchg eax, esi ; ret
0x0000000000403dc4 : xchg eax, esp ; pop rcx ; jmp 0x404337
0x0000000000406403 : xchg eax, esp ; ret
0x000000000040d3c6 : xchg eax, esp ; ret 0x8445
0x0000000000403885 : xchg eax, esp ; ret 0xd284
0x00000000004161ed : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f3a7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405f6d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
