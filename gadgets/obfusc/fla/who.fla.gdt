0x0000000000438330 : adc ah, ch ; cld ; jmp qword ptr [rbx]
0x00000000004390c5 : adc byte ptr [rax], al ; add al, ch ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000435cc6 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000435cb7 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000435cb6 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000414dfb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043578d : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000408609 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000400dd8 : adc ebp, dword ptr [rcx + 0x69] ; or eax, 0x40000 ; ret
0x000000000043858b : add ah, ch ; add al, 0 ; add byte ptr [rax], ah ; std ; jmp qword ptr [rbx]
0x0000000000438e6b : add ah, cl ; or eax, 0xdf500000 ; std ; jmp rax
0x00000000004385d1 : add al, -3 ; call qword ptr [rdx]
0x00000000004385f1 : add al, -3 ; call qword ptr [rsi]
0x0000000000414224 : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4379
0x000000000043858d : add al, 0 ; add byte ptr [rax], ah ; std ; jmp qword ptr [rbx]
0x00000000004058a4 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000400dde : add al, 0 ; ret
0x0000000000438c2f : add al, al ; ret
0x0000000000436721 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000043832d : add al, byte ptr [rax] ; add byte ptr [rax], dl ; in al, dx ; cld ; jmp qword ptr [rbx]
0x00000000004146f3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404241 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004390c7 : add al, ch ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000425fe7 : add al, ch ; ret
0x00000000004156b3 : add al, ch ; ret 0xfffe
0x0000000000438b2f : add al, dh ; stosd dword ptr [rdi], eax ; std ; jmp rdx
0x0000000000414aee : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000414856 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004345e9 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x000000000043677f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000435594 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000436645 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000435bfd : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004349dc : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000438c10 : add bl, al ; std ; call rdx
0x0000000000436d7f : add bl, dh ; ret
0x00000000004385cb : add byte ptr [rax + 0x4000000], ch ; std ; call qword ptr [rdx]
0x00000000004058a3 : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000400ddd : add byte ptr [rax + rax], al ; ret
0x00000000004390c3 : add byte ptr [rax + rdx], ah ; add byte ptr [rax], al ; call 0x114390b1
0x0000000000438e6f : add byte ptr [rax - 0x21], dl ; std ; jmp rax
0x0000000000438aef : add byte ptr [rax - 0x57], al ; std ; jmp qword ptr [rdx]
0x00000000004388af : add byte ptr [rax - 0x5a], ah ; std ; jmp qword ptr [rdx]
0x0000000000414226 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4379
0x0000000000425cdc : add byte ptr [rax - 0x77], cl ; ret 0x3be8
0x0000000000425c3b : add byte ptr [rax - 0x77], cl ; ret 0xdce8
0x0000000000438bef : add byte ptr [rax], ah ; ret 0xfffd
0x000000000043858f : add byte ptr [rax], ah ; std ; jmp qword ptr [rbx]
0x000000000043832e : add byte ptr [rax], al ; adc ah, ch ; cld ; jmp qword ptr [rbx]
0x00000000004385cf : add byte ptr [rax], al ; add al, -3 ; call qword ptr [rdx]
0x00000000004385ef : add byte ptr [rax], al ; add al, -3 ; call qword ptr [rsi]
0x0000000000400ddc : add byte ptr [rax], al ; add al, 0 ; ret
0x0000000000414aec : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000414854 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004345e7 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004366b1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000435bfb : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000435c45 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000438c0e : add byte ptr [rax], al ; add bl, al ; std ; call rdx
0x0000000000436d7d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000436d7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400330 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400332 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000436d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400334 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000042a313 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000041251e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004061f0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407175 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472dd445], cl ; ret 0x8942
0x000000000040727d : add byte ptr [rax], al ; add byte ptr [rbx + 0x482dd445], cl ; ret 0x8942
0x0000000000438c09 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000438be9 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], cl ; add byte ptr [rax], ah ; ret 0xfffd
0x0000000000402501 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4d247bb], cl ; ret
0x0000000000407d49 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000407cc5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000417d8e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004113d1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000407e05 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000417ad8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000407648 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040a42d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404476 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040706a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041790d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000405706 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a40f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408028 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004293d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040954e : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040760d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004385ea : add byte ptr [rax], al ; add rax, 0x4000000 ; std ; call qword ptr [rsi]
0x0000000000406f5b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412240 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004185c8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405db6 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412797 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004049c6 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401553 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004390c2 : add byte ptr [rax], al ; and al, 0x10 ; add byte ptr [rax], al ; call 0x114390b2
0x00000000004390c6 : add byte ptr [rax], al ; call 0x114390ae
0x00000000004381e6 : add byte ptr [rax], al ; call 0xffffffffe2437eb9
0x000000000043858a : add byte ptr [rax], al ; in al, dx ; add al, 0 ; add byte ptr [rax], ah ; std ; jmp qword ptr [rbx]
0x0000000000438c0a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000401729 : add byte ptr [rax], al ; jmp 0x401569
0x0000000000407609 : add byte ptr [rax], al ; jmp 0x407618
0x0000000000408279 : add byte ptr [rax], al ; jmp 0x408288
0x000000000040954a : add byte ptr [rax], al ; jmp 0x409559
0x000000000043864a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add eax, 0x6e00000 ; std ; call qword ptr [rsi]
0x0000000000437cce : add byte ptr [rax], al ; loope 0x437cd4 ; jmp rsp
0x000000000043864e : add byte ptr [rax], al ; loopne 0x43865d ; std ; call qword ptr [rsi]
0x0000000000438dee : add byte ptr [rax], al ; mov al, -0x2c ; std ; call rdx
0x0000000000408487 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042a8f6 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004070de : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409cf9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042a5ad : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000043832a : add byte ptr [rax], al ; mov word ptr [rdx], es ; add byte ptr [rax], al ; adc ah, ch ; cld ; jmp qword ptr [rbx]
0x0000000000438bea : add byte ptr [rax], al ; or r8, qword ptr [rax] ; add byte ptr [rax], ah ; ret 0xfffd
0x0000000000438aea : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax - 0x57], al ; std ; jmp qword ptr [rdx]
0x0000000000438dea : add byte ptr [rax], al ; or rax, 0xd4b00000 ; std ; call rdx
0x0000000000403798 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041251f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004058a5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004121f8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000436d7e : add byte ptr [rax], al ; ret
0x0000000000400336 : add byte ptr [rax], al ; ret 1
0x00000000004389cf : add byte ptr [rax], dh ; test al, -3 ; jmp qword ptr [rax]
0x000000000043832f : add byte ptr [rax], dl ; in al, dx ; cld ; jmp qword ptr [rbx]
0x000000000043864b : add byte ptr [rbp + rax + 0x6e00000], ch ; std ; call qword ptr [rsi]
0x00000000004385eb : add byte ptr [rbp + rax], cl ; add byte ptr [rax], al ; add al, -3 ; call qword ptr [rsi]
0x00000000004025b2 : add byte ptr [rbx + 0x392db845], cl ; shl esp, cl ; ret
0x00000000004025fd : add byte ptr [rbx + 0x3a2db845], cl ; shl esp, cl ; ret
0x000000000042a315 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x0000000000412520 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004058a6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407177 : add byte ptr [rbx + 0x472dd445], cl ; ret 0x8942
0x000000000040727f : add byte ptr [rbx + 0x482dd445], cl ; ret 0x8942
0x00000000004121f9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403d27 : add byte ptr [rbx + 0x6d2dd045], cl ; jno 0x403ccb ; ret 0x4589
0x0000000000403d69 : add byte ptr [rbx + 0x6e2dd045], cl ; jno 0x403d0d ; ret 0x4589
0x0000000000438c0b : add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000438beb : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], ah ; ret 0xfffd
0x0000000000402503 : add byte ptr [rbx - 0x4d247bb], cl ; ret
0x00000000004024b8 : add byte ptr [rbx - 0x5d247bb], cl ; ret
0x0000000000407d4b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000407cc7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000400dd7 : add byte ptr [rbx], dl ; imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x0000000000417d90 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000422950 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x00000000004113d3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000416162 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000437ccf : add byte ptr [rcx - 4], ah ; jmp rsp
0x0000000000405704 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000414b3e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a98 : add byte ptr [rcx], al ; ret
0x0000000000407e07 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000417ada : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040764a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040a42f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404478 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040706c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041790f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000405708 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a411 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040802a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004293d8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043832b : add byte ptr [rdx + rax - 0x13f00000], cl ; cld ; jmp qword ptr [rbx]
0x0000000000438b2b : add byte ptr [rdx + rcx - 0x54100000], cl ; std ; jmp rdx
0x0000000000438aeb : add byte ptr [rdx + rcx], cl ; add byte ptr [rax - 0x57], al ; std ; jmp qword ptr [rdx]
0x0000000000438591 : add ch, bh ; jmp qword ptr [rbx]
0x0000000000409550 : add cl, ch ; ret
0x000000000040760f : add cl, ch ; ret 0
0x0000000000402bed : add cl, ch ; ret 1
0x0000000000412795 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412eba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040710e : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000042a38b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409386 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407521 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a94 : add eax, 0x23887e ; add ebx, esi ; ret
0x00000000004385cd : add eax, 0x4000000 ; std ; call qword ptr [rdx]
0x00000000004385ed : add eax, 0x4000000 ; std ; call qword ptr [rsi]
0x000000000043864d : add eax, 0x6e00000 ; std ; call qword ptr [rsi]
0x000000000042a8f4 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x00000000004345e6 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000437ccd : add eax, 0xe1640000 ; cld ; jmp rsp
0x0000000000401a5b : add eax, edx ; sar rax, 1 ; jne 0x401a6c ; pop rbp ; ret
0x0000000000401a99 : add ebx, esi ; ret
0x0000000000403547 : add edi, eax ; fcom qword ptr [r11 + rcx*2 + 0x6a] ; ret 0x48e9
0x0000000000401d7b : add esp, 0x10 ; pop rbp ; ret
0x0000000000414b3c : add esp, 0x100 ; pop rbp ; ret
0x0000000000412eb7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000404900 : add esp, 0x190 ; pop rbp ; ret
0x0000000000414cac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000409714 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403794 : add esp, 0x2b0 ; pop rbp ; ret
0x0000000000418093 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000406296 : add esp, 0x30 ; pop rbp ; ret
0x0000000000405db9 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401f22 : add esp, 0x50 ; pop rbp ; ret
0x00000000004049c9 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401d29 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405fb8 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000041309f : add esp, 0x70 ; pop rbp ; ret
0x000000000042e5a3 : add esp, 0x7f8 ; pop rbp ; ret
0x000000000041370c : add esp, 0x80 ; pop rbp ; ret
0x000000000040745c : add esp, 0x90 ; pop rbp ; ret
0x00000000004089c0 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004121f4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000436cfe : add esp, 0xd70 ; pop rbp ; ret
0x0000000000405d37 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401556 : add esp, 8 ; ret
0x00000000004385ec : add rax, 0x4000000 ; std ; call qword ptr [rsi]
0x0000000000401a5a : add rax, rdx ; sar rax, 1 ; jne 0x401a6d ; pop rbp ; ret
0x0000000000401d7a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000414b3b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000412eb6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004048ff : add rsp, 0x190 ; pop rbp ; ret
0x0000000000414cab : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000409713 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403793 : add rsp, 0x2b0 ; pop rbp ; ret
0x0000000000418092 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000406295 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405db8 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401f21 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004049c8 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401d28 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405fb7 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000041309e : add rsp, 0x70 ; pop rbp ; ret
0x000000000042e5a2 : add rsp, 0x7f8 ; pop rbp ; ret
0x000000000041370b : add rsp, 0x80 ; pop rbp ; ret
0x000000000040745b : add rsp, 0x90 ; pop rbp ; ret
0x00000000004089bf : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004121f3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000436cfd : add rsp, 0xd70 ; pop rbp ; ret
0x0000000000405d36 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401555 : add rsp, 8 ; ret
0x00000000004390c4 : and al, 0x10 ; add byte ptr [rax], al ; call 0x114390b0
0x0000000000407520 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040710c : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x00000000004089ff : and eax, 0x63a3d8 ; pop rbp ; ret
0x0000000000408a23 : and eax, 0x63a3e0 ; pop rbp ; ret
0x00000000004349da : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000401a97 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004390c8 : call 0x114390ac
0x0000000000403b33 : call 0x202bc83
0x0000000000415525 : call 0x401752
0x0000000000415558 : call 0x4017d2
0x00000000004156b4 : call 0x401922
0x000000000040567f : call 0x401962
0x000000000042ce5d : call 0xffffffffc28287d9
0x00000000004381e8 : call 0xffffffffe2437eb7
0x0000000000412239 : call 0xffffffffe903ab89
0x0000000000412238 : call 0xffffffffe903ab8a
0x000000000040dc7d : call 0xfffffffff7396214
0x0000000000415557 : call 0xffffffffff03c947
0x0000000000417b55 : call 0xffffffffff46012a
0x00000000004107a9 : call 0xffffffffff558d7b
0x00000000004107a8 : call 0xffffffffff558d7c
0x00000000004107a9 : call 0xffffffffff558d7d
0x00000000004107a8 : call 0xffffffffff558d7e
0x0000000000436d59 : call qword ptr [r12 + rbx*8]
0x000000000040fb36 : call qword ptr [rax]
0x0000000000436183 : call qword ptr [rbx]
0x00000000004117c5 : call qword ptr [rcx]
0x000000000041606a : call qword ptr [rdi]
0x000000000040f763 : call qword ptr [rdx]
0x000000000040516e : call qword ptr [rsi - 0x16503d67]
0x000000000040f6ff : call qword ptr [rsi]
0x0000000000436d5a : call qword ptr [rsp + rbx*8]
0x0000000000401abd : call rax
0x000000000040df1a : call rbx
0x0000000000423bc8 : call rcx
0x0000000000438c13 : call rdx
0x0000000000414af4 : call rsi
0x00000000004056da : call rsp
0x0000000000407ccc : cdq ; ret
0x0000000000404e6e : cdq ; ret 0x89af
0x0000000000405129 : cdq ; ret 0xb9af
0x0000000000405170 : cdq ; ret 0xe9af
0x00000000004169a2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004183a0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401a5f : clc ; jne 0x401a68 ; pop rbp ; ret
0x00000000004156ae : clc ; mov rcx, rax ; mov al, 0 ; call 0x401928
0x000000000042a8fa : clc ; pop rbp ; ret
0x0000000000437cca : cld ; inc esp ; add eax, 0xe1640000 ; cld ; jmp rsp
0x0000000000438332 : cld ; jmp qword ptr [rbx]
0x00000000004381ea : cld ; jmp rcx
0x0000000000437c92 : cld ; jmp rsp
0x00000000004024b5 : cld ; or byte ptr [rax], al ; add byte ptr [rbx - 0x5d247bb], cl ; ret
0x00000000004103fd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004024bd : cli ; ret
0x000000000041715d : cmp al, -0x2a ; ret
0x000000000041dac4 : cmp al, -0x2e ; ret
0x0000000000414229 : cmp al, 0x25 ; ret 0x4379
0x0000000000435b68 : cmp dh, -1 ; call qword ptr [rax]
0x0000000000435333 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000435cc5 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000401a1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a30 ; pop rbp ; ret
0x000000000043019e : cmp esi, dword ptr [rdi] ; ret 0x8589
0x0000000000434b64 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000041db17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x00000000004388b1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rdx]
0x00000000004126d4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004077cb : cwde ; js 0x407775 ; ret
0x0000000000407812 : cwde ; js 0x4077bc ; ret
0x000000000040784c : cwde ; js 0x4077f6 ; ret
0x000000000042c9fd : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x00000000004055f4 : dec dword ptr [rax + 0x39] ; ret 0xf40
0x00000000004054dc : dec dword ptr [rax + 1] ; ret 0x8148
0x0000000000415a7e : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000042a2a8 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000424aaa : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000405b6b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004228a9 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000422854 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000433617 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004105a2 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004108ad : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000042d995 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000435bdc : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000435336 : dec dword ptr [rcx] ; ret 0x9589
0x0000000000411db4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000041d3e8 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x0000000000413833 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000402be7 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffff8], al ; ret 1
0x0000000000419494 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x00000000004190dc : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x00000000004367ee : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x00000000004229b5 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000040f8e8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041790b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000408938 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004159b4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004136e9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403549 : fcom qword ptr [r11 + rcx*2 + 0x6a] ; ret 0x48e9
0x000000000040354a : fcom qword ptr [rbx + rcx*2 + 0x6a] ; ret 0x48e9
0x00000000004390c9 : fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000407140 : fmul dword ptr [r8 + 0x26] ; ret 0x8b42
0x0000000000407141 : fmul dword ptr [rax + 0x26] ; ret 0x8b42
0x00000000004153f4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004245f0 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x00000000004245c5 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x0000000000436d5c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004030d4 : fsub st(1), st(0) ; ret 6
0x0000000000401d79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403792 : hlt ; add rsp, 0x2b0 ; pop rbp ; ret
0x00000000004184fc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416466 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401a30 : hlt ; pop rbp ; mov edi, 0x63a2d8 ; jmp rax
0x000000000042933d : idiv bh ; call qword ptr [rcx]
0x0000000000422f43 : idiv bh ; call qword ptr [rdi]
0x000000000042374b : idiv bh ; call qword ptr [rdx]
0x0000000000423bc6 : idiv bh ; call rcx
0x0000000000429020 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000429156 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429356 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004263e2 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000426270 : idiv bh ; jmp qword ptr [rax]
0x00000000004294c1 : idiv bh ; jmp qword ptr [rcx]
0x0000000000424f5c : idiv bh ; jmp qword ptr [rdi]
0x00000000004259f7 : idiv bh ; jmp qword ptr [rsi]
0x0000000000424cf1 : idiv bh ; jmp rbx
0x0000000000423c1f : idiv bh ; jmp rdi
0x0000000000422886 : idiv bh ; jmp rdx
0x000000000042649a : idiv bh ; jmp rsp
0x0000000000424aa8 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000424496 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000425167 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424c87 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042574f : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041bbb3 : imul al ; ret 0x893f
0x000000000042979c : imul eax ; ret 0x483f
0x00000000004212fb : imul eax ; ret 0x893f
0x000000000041418e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000400dd9 : imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x000000000040fd59 : in al, -0x7f ; ret 0xff9f
0x000000000040ff3f : in al, -0x7f ; ret 0xffbf
0x000000000040ffe5 : in al, -0x7f ; ret 0xffc5
0x0000000000410013 : in al, -0x7f ; ret 0xffd5
0x00000000004100e1 : in al, -0x7f ; ret 0xffd8
0x0000000000410277 : in al, -0x7f ; ret 0xffe0
0x000000000043858c : in al, dx ; add al, 0 ; add byte ptr [rax], ah ; std ; jmp qword ptr [rbx]
0x000000000041670f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000438331 : in al, dx ; cld ; jmp qword ptr [rbx]
0x0000000000409e0a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042a2ab : in al, dx ; pop rbp ; ret
0x0000000000407ecb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416164 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004113cf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000429022 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000424498 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040524c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422c22 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411f7a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402df5 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000412e88 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000405168 : inc edi ; test dword ptr [rbp + rdi*8 - 0x66690001], ebx ; ret 0xe9af
0x0000000000433f23 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000436402 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000435512 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000433701 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000434763 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000437ccb : inc esp ; add eax, 0xe1640000 ; cld ; jmp rsp
0x0000000000438c0c : insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000403d2c : insd dword ptr [rdi], dx ; jno 0x403cc6 ; ret 0x4589
0x000000000040c52f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040fb6f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401a23 : ja 0x401a2a ; pop rbp ; ret
0x0000000000401a2f : je 0x401a2d ; pop rbp ; mov edi, 0x63a2d8 ; jmp rax
0x000000000041640c : jg 0x416420 ; xchg eax, edi ; ret 0xd284
0x00000000004294aa : jg 0x4294be ; xchg eax, esp ; ret 0xd284
0x000000000042a8a3 : jg 0x42a8aa ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408439 : jge 0x408433 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000413ca8 : jge 0x413cbf ; ret
0x0000000000414193 : jge 0x4141aa ; ret
0x0000000000415552 : jge 0x41554c ; mov rsi, qword ptr [rbp - 0x18] ; call 0x4017d8
0x00000000004156ad : jge 0x4156b0 ; mov rcx, rax ; mov al, 0 ; call 0x401929
0x0000000000413b7c : jl 0x413b93 ; ret
0x0000000000401a95 : jle 0x401a25 ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040172b : jmp 0x401567
0x000000000040664c : jmp 0x406612
0x00000000004066f4 : jmp 0x4066ba
0x000000000040697f : jmp 0x406945
0x000000000040760b : jmp 0x407616
0x000000000040827b : jmp 0x408286
0x000000000040954c : jmp 0x409557
0x000000000040f51d : jmp 0x412203
0x0000000000411fb1 : jmp 0x412205
0x000000000041418d : jmp 0x414705
0x0000000000414222 : jmp 0x414706
0x0000000000425fe3 : jmp 0x42a2b4
0x0000000000423091 : jmp 0x42a2b5
0x00000000004253eb : jmp 0x42a2b6
0x000000000042cd53 : jmp 0x42e5b1
0x0000000000435b2f : jmp 0x436d0c
0x0000000000436285 : jmp 0x436d0d
0x0000000000436650 : jmp 0x436d0e
0x000000000042e081 : jmp 0xffffffff8cfca4d2
0x00000000004169de : jmp 0xffffffffb7036daa
0x00000000004077ca : jmp 0xffffffffc3e4f06b
0x0000000000406d7b : jmp qword ptr [rax]
0x000000000040574f : jmp qword ptr [rbx]
0x0000000000412180 : jmp qword ptr [rcx]
0x0000000000424f5e : jmp qword ptr [rdi]
0x00000000004126d5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040dc86 : jmp qword ptr [rdx]
0x000000000041073f : jmp qword ptr [rsi]
0x0000000000401a37 : jmp rax
0x00000000004112d2 : jmp rbx
0x0000000000433707 : jmp rcx
0x000000000041196e : jmp rdi
0x0000000000401a77 : jmp rdx
0x00000000004349e2 : jmp rsi
0x0000000000411369 : jmp rsp
0x0000000000401a60 : jne 0x401a67 ; pop rbp ; ret
0x0000000000412e86 : jne 0x412e8f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000415556 : jne 0x415544 ; call 0x4017d4
0x0000000000403d2d : jno 0x403cc5 ; ret 0x4589
0x0000000000403d6f : jno 0x403d07 ; ret 0x4589
0x00000000004046e4 : jno 0x40467c ; ret 0x148a
0x0000000000404702 : jno 0x40469a ; ret 0x8b48
0x00000000004067b7 : jnp 0x4067ba ; ret 0x8916
0x0000000000406a23 : jnp 0x406a26 ; ret 0xb916
0x00000000004130a1 : jo 0x413102 ; ret
0x00000000004131c4 : jo 0x413225 ; ret
0x00000000004132fe : jo 0x41335f ; ret
0x000000000041549c : jo 0x4154fd ; ret
0x000000000041646a : jo 0x4164cb ; ret
0x00000000004183a4 : jo 0x418405 ; ret
0x0000000000436d00 : jo 0x436d14 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406587 : jp 0x40658a ; ret 0x8916
0x0000000000405e24 : js 0x405e33 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004077cc : js 0x407774 ; ret
0x0000000000407813 : js 0x4077bb ; ret
0x000000000040784d : js 0x4077f5 ; ret
0x00000000004121f6 : js 0x41220a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000434b62 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000405211 : ljmp ptr [rsi] ; ret 0x6cd3
0x000000000043864c : lodsb al, byte ptr [rsi] ; add eax, 0x6e00000 ; std ; call qword ptr [rsi]
0x0000000000430c56 : lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000040710d : loope 0x407116 ; movzx eax, cl ; pop rbp ; ret
0x0000000000437cd1 : loope 0x437cd1 ; jmp rsp
0x0000000000437cd0 : loope 0x437cd2 ; jmp rsp
0x0000000000404474 : loopne 0x40447d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409712 : loopne 0x409762 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409711 : loopne 0x409763 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a1ce : loopne 0x40a1d7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004151e0 : loopne 0x4151e9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004155ec : loopne 0x41563c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004155eb : loopne 0x41563d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000435330 : loopne 0x4352c5 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000438650 : loopne 0x43865b ; std ; call qword ptr [rsi]
0x000000000041d9ac : mov ah, 0x47 ; ret 0x8589
0x0000000000423384 : mov ah, 0x47 ; ret 0x88b9
0x0000000000401f20 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000438df0 : mov al, -0x2c ; std ; call rdx
0x0000000000434f39 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000417b2a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004061ef : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004156b2 : mov al, 0 ; call 0x401924
0x000000000040567d : mov al, 0 ; call 0x401964
0x000000000040a38b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000403796 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040751d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004076cd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407ec9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408a21 : mov byte ptr [0x63a3e0], al ; pop rbp ; ret
0x00000000004070dd : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411d48 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401a96 : mov byte ptr [rbx], ah ; add byte ptr [rcx], al ; ret
0x0000000000401a93 : mov byte ptr [rip + 0x23887e], 1 ; ret
0x0000000000407110 : mov dh, -0x3f ; pop rbp ; ret
0x000000000042a38d : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409388 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407523 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000407ff5 : mov dl, -0x47 ; ret
0x00000000004089fd : mov dword ptr [0x63a3d8], edi ; pop rbp ; ret
0x000000000040a047 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409e0b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409f7f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000415522 : mov dword ptr [rbp - 0x10], eax ; call 0x401755
0x0000000000401f1e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403b80 : mov dword ptr [rbp - 0x5c], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401d77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a1fd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402583 : mov eax, 0x6a4b532d ; ret 0x8589
0x00000000004025ce : mov eax, 0x6a4b542d ; ret 0x8589
0x00000000004025b5 : mov eax, 0xe4d3392d ; ret
0x0000000000402600 : mov eax, 0xe4d33a2d ; ret
0x0000000000409cff : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041552b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004091a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406f2b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041520f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004070e1 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041562e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414f00 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415bb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408489 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409710 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004155ea : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409bf4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409cfc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409e05 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409f81 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042a5b0 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041309b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004184fa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416464 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004169a0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041839e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a8f8 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406293 : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004253ed : mov ebp, 0xb800004e ; push rcx ; ret
0x0000000000401abb : mov ebp, esp ; call rax
0x0000000000401a21 : mov ebp, esp ; ja 0x401a2c ; pop rbp ; ret
0x0000000000401551 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x0000000000409e08 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004156b0 : mov ecx, eax ; mov al, 0 ; call 0x401926
0x000000000042cb81 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000401ab5 : mov edi, 0x639e20 ; mov rbp, rsp ; call rax
0x0000000000401a32 : mov edi, 0x63a2d8 ; jmp rax
0x0000000000401a72 : mov edi, 0x63a2d8 ; jmp rdx
0x0000000000415551 : mov edi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rbp - 0x18] ; call 0x4017d9
0x000000000041551f : mov edi, eax ; mov qword ptr [rbp - 0x10], rax ; call 0x401758
0x0000000000436d57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000436d56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042c8d1 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x0000000000415555 : mov esi, dword ptr [rbp - 0x18] ; call 0x4017d5
0x0000000000401a70 : mov esi, eax ; mov edi, 0x63a2d8 ; jmp rdx
0x000000000042c9fe : mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000042c927 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x0000000000415a7c : mov esp, 0x8b48fffe ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000042a2aa : mov esp, ebp ; pop rbp ; ret
0x00000000004089fc : mov qword ptr [0x63a3d8], rdi ; pop rbp ; ret
0x0000000000415521 : mov qword ptr [rbp - 0x10], rax ; call 0x401756
0x000000000040a1fc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401f1f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000434f38 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000402582 : mov r8d, 0x6a4b532d ; ret 0x8589
0x00000000004025cd : mov r8d, 0x6a4b542d ; ret 0x8589
0x00000000004025b4 : mov r8d, 0xe4d3392d ; ret
0x00000000004025ff : mov r8d, 0xe4d33a2d ; ret
0x000000000041552a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004091a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406f2a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041520e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004070e0 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041562d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414eff : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415bb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040970f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004155e9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409bf3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409cfb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042a5af : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041309a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406292 : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401aba : mov rbp, rsp ; call rax
0x0000000000401a20 : mov rbp, rsp ; ja 0x401a2d ; pop rbp ; ret
0x00000000004156af : mov rcx, rax ; mov al, 0 ; call 0x401927
0x000000000041551e : mov rdi, rax ; mov qword ptr [rbp - 0x10], rax ; call 0x401759
0x0000000000415554 : mov rsi, qword ptr [rbp - 0x18] ; call 0x4017d6
0x0000000000401a6f : mov rsi, rax ; mov edi, 0x63a2d8 ; jmp rdx
0x000000000042a2a9 : mov rsp, rbp ; pop rbp ; ret
0x0000000000412e8a : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000412e8b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000043832c : mov word ptr [rdx], es ; add byte ptr [rax], al ; adc ah, ch ; cld ; jmp qword ptr [rbx]
0x00000000004105dc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000040826e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004089d8 : movabs dword ptr [0x5dffff8d30e80063], eax ; ret
0x0000000000405702 : movabs dword ptr [0x920f000000010063], eax ; ret 0xd284
0x0000000000403b82 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041418c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x414706
0x00000000004077cd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041dac3 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x000000000041da8d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000042a499 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042a38c : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409387 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407522 : movzx eax, al ; pop rbp ; ret
0x000000000040710f : movzx eax, cl ; pop rbp ; ret
0x0000000000436d78 : nop dword ptr [rax + rax] ; ret
0x00000000004121f7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000438b2d : or al, byte ptr [rax] ; add al, dh ; stosd dword ptr [rdi], eax ; std ; jmp rdx
0x0000000000438aed : or al, byte ptr [rax] ; add byte ptr [rax - 0x57], al ; std ; jmp qword ptr [rdx]
0x00000000004388ad : or byte ptr [rax], al ; add byte ptr [rax - 0x5a], ah ; std ; jmp qword ptr [rdx]
0x00000000004024b6 : or byte ptr [rax], al ; add byte ptr [rbx - 0x5d247bb], cl ; ret
0x0000000000402beb : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000407066 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042cb82 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x00000000004389cd : or dword ptr [rax], eax ; add byte ptr [rax], dh ; test al, -3 ; jmp qword ptr [rax]
0x0000000000413837 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000400ddb : or eax, 0x40000 ; ret
0x0000000000438ded : or eax, 0xd4b00000 ; std ; call rdx
0x0000000000438e6d : or eax, 0xdf500000 ; std ; jmp rax
0x0000000000438c2d : or eax, dword ptr [rax] ; add al, al ; ret
0x0000000000438bed : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret 0xfffd
0x0000000000413281 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438c0d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000438bec : or r8, qword ptr [rax] ; add byte ptr [rax], ah ; ret 0xfffd
0x0000000000438aec : or r8b, byte ptr [rax] ; add byte ptr [rax - 0x57], al ; std ; jmp qword ptr [rdx]
0x0000000000438dec : or rax, 0xd4b00000 ; std ; call rdx
0x000000000042a335 : out -0x47, al ; ret 0x48e7
0x000000000041d9ab : out -0x4c, al ; ret 0x8589
0x000000000041d9ff : out -0x4c, eax ; ret 0x8589
0x0000000000423383 : out -0x4c, eax ; ret 0x88b9
0x00000000004076cf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040751f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403d6e : outsb dx, byte ptr [rsi] ; jno 0x403d08 ; ret 0x4589
0x00000000004046e3 : outsb dx, byte ptr [rsi] ; jno 0x40467d ; ret 0x148a
0x0000000000404701 : outsb dx, byte ptr [rsi] ; jno 0x40469b ; ret 0x8b48
0x0000000000406de1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436d6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406de3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436d6e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406de5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436d70 : pop r14 ; pop r15 ; ret
0x00000000004058a8 : pop r14 ; pop rbp ; ret
0x0000000000406de7 : pop r15 ; pop rbp ; ret
0x0000000000436d72 : pop r15 ; ret
0x0000000000407d48 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004049cb : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000401a92 : pop rbp ; mov byte ptr [rip + 0x23887e], 1 ; ret
0x0000000000401a31 : pop rbp ; mov edi, 0x63a2d8 ; jmp rax
0x0000000000401a6e : pop rbp ; mov rsi, rax ; mov edi, 0x63a2d8 ; jmp rdx
0x0000000000436d6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406de4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436d6f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a25 : pop rbp ; ret
0x0000000000412521 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004058a7 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004049cc : pop rbx ; pop rbp ; ret
0x00000000004315d9 : pop rbx ; ret 0x1dd
0x0000000000407ff4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000041c618 : pop rcx ; ret 0x891f
0x0000000000422a67 : pop rcx ; ret 0xba1f
0x0000000000406de8 : pop rdi ; pop rbp ; ret
0x00000000004189b7 : pop rdi ; ret
0x000000000040843b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000431585 : pop rdx ; ret 0x1dd
0x0000000000406de6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000436d71 : pop rsi ; pop r15 ; ret
0x00000000004058a9 : pop rsi ; pop rbp ; ret
0x0000000000406de2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436d6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c432 : pop rsp ; ret
0x0000000000407e09 : popfq ; ret 0xd284
0x0000000000429797 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x0000000000411c1f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401f24 : push rax ; pop rbp ; ret
0x000000000041cc37 : push rax ; ret
0x0000000000414aeb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000403b32 : push rbp ; call 0x202bc84
0x00000000004153f3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040fd58 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040ff3e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040ffe4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000410012 : push rbp ; in al, -0x7f ; ret 0xffd5
0x00000000004100e0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000410276 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401ab4 : push rbp ; mov edi, 0x639e20 ; mov rbp, rsp ; call rax
0x0000000000415a81 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000041a52b : push rbx ; ret 0xaf58
0x0000000000404240 : push rcx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000420277 : push rcx ; ret
0x000000000041a4d7 : push rdx ; ret 0xaf58
0x0000000000417d93 : pushfq ; ret 0x8445
0x0000000000417adc : pushfq ; ret 0xd284
0x0000000000400de0 : ret
0x0000000000407599 : ret 0
0x0000000000416f39 : ret 0x10
0x00000000004046e6 : ret 0x148a
0x000000000040201b : ret 0x16
0x0000000000431586 : ret 0x1dd
0x0000000000422857 : ret 0x20
0x0000000000407efb : ret 0x2030
0x0000000000401932 : ret 0x2388
0x0000000000401732 : ret 0x2389
0x0000000000406275 : ret 0x28
0x000000000040f737 : ret 0x2a
0x0000000000412a56 : ret 0x2c1
0x0000000000409680 : ret 0x30
0x000000000042eb85 : ret 0x3617
0x0000000000425cdf : ret 0x3be8
0x00000000004261e8 : ret 0x40
0x000000000041422b : ret 0x4379
0x000000000040c69a : ret 0x43fa
0x0000000000403d2f : ret 0x4589
0x000000000042da9f : ret 0x4810
0x000000000042979e : ret 0x483f
0x000000000042a31b : ret 0x48e7
0x000000000040354e : ret 0x48e9
0x0000000000436806 : ret 0x4eb9
0x0000000000416454 : ret 0x5589
0x0000000000403527 : ret 0x558a
0x00000000004186a3 : ret 0x5e5
0x0000000000404b5e : ret 0x6cd3
0x0000000000422583 : ret 0x6d
0x000000000042ab59 : ret 0x6f69
0x000000000041e223 : ret 0x73
0x000000000041a938 : ret 0x791e
0x000000000041d653 : ret 0x7a
0x000000000042640f : ret 0x7b9
0x0000000000422117 : ret 0x7f76
0x000000000041f9a7 : ret 0x80
0x00000000004054df : ret 0x8148
0x0000000000402df9 : ret 0x8445
0x000000000043288d : ret 0x848e
0x0000000000402588 : ret 0x8589
0x0000000000423386 : ret 0x88b9
0x0000000000406589 : ret 0x8916
0x000000000040c530 : ret 0x891a
0x000000000041c619 : ret 0x891f
0x00000000004078ac : ret 0x8934
0x000000000041bbb5 : ret 0x893f
0x0000000000402316 : ret 0x8942
0x00000000004153f7 : ret 0x8948
0x0000000000404e6f : ret 0x89af
0x00000000004169e1 : ret 0x89b6
0x000000000041e839 : ret 0x89e8
0x00000000004314a7 : ret 0x89fc
0x0000000000407888 : ret 0x8b34
0x0000000000407144 : ret 0x8b42
0x0000000000404704 : ret 0x8b48
0x0000000000427442 : ret 0x8be8
0x0000000000435338 : ret 0x9589
0x0000000000434b66 : ret 0x9ae9
0x0000000000410405 : ret 0xa9b9
0x00000000004113b0 : ret 0xaae8
0x000000000040be82 : ret 0xade6
0x000000000041a4d8 : ret 0xaf58
0x0000000000405b6e : ret 0xb0
0x000000000041d3df : ret 0xb846
0x0000000000406a25 : ret 0xb916
0x000000000040fb70 : ret 0xb91a
0x00000000004030dd : ret 0xb942
0x0000000000419d67 : ret 0xb957
0x000000000040512a : ret 0xb9af
0x0000000000416c9b : ret 0xb9b6
0x0000000000422a68 : ret 0xba1f
0x0000000000401a55 : ret 0xc148
0x000000000040447b : ret 0xd284
0x0000000000411c23 : ret 0xd4e9
0x0000000000425c3e : ret 0xdce8
0x00000000004313a9 : ret 0xe0a5
0x000000000040706f : ret 0xe280
0x0000000000405171 : ret 0xe9af
0x000000000043517e : ret 0xe9fc
0x000000000042bc4d : ret 0xec0b
0x000000000041223c : ret 0xee8
0x00000000004055f7 : ret 0xf40
0x00000000004105e5 : ret 0xf41
0x0000000000425c6f : ret 0xf9b9
0x00000000004188b1 : ret 0xf9e8
0x0000000000419967 : ret 0xfa
0x0000000000424446 : ret 0xfa81
0x00000000004338ea : ret 0xff6b
0x00000000004358b6 : ret 0xff9b
0x000000000040fd5b : ret 0xff9f
0x00000000004116fe : ret 0xffa5
0x0000000000435a9c : ret 0xffbb
0x000000000040ff41 : ret 0xffbf
0x00000000004109ab : ret 0xffc4
0x000000000040ffe7 : ret 0xffc5
0x0000000000410015 : ret 0xffd5
0x00000000004100e3 : ret 0xffd8
0x0000000000410a51 : ret 0xffd9
0x0000000000410279 : ret 0xffe0
0x0000000000425e65 : ret 0xfff7
0x0000000000425e96 : ret 0xfff9
0x000000000040f34e : ret 0xfffa
0x0000000000438bf1 : ret 0xfffd
0x0000000000415527 : ret 0xfffe
0x0000000000405681 : ret 0xffff
0x0000000000400338 : ret 1
0x00000000004108b0 : ret 2
0x00000000004054e2 : ret 4
0x0000000000413868 : ret 5
0x00000000004030d6 : ret 6
0x0000000000405e6a : ret 8
0x0000000000417a84 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418095 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436642 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000040710b : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000409e06 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000415a82 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000401a5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a6b ; pop rbp ; ret
0x000000000042a38e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000409e07 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004153f0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040764c : sahf ; ret 0xd284
0x0000000000414223 : salc ; add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4379
0x000000000041715e : salc ; ret
0x0000000000401a5e : sar eax, 1 ; jne 0x401a69 ; pop rbp ; ret
0x0000000000401a5d : sar rax, 1 ; jne 0x401a6a ; pop rbp ; ret
0x0000000000438c08 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000438be8 : sbb al, 0 ; add byte ptr [rax], al ; or r8, qword ptr [rax] ; add byte ptr [rax], ah ; ret 0xfffd
0x00000000004346d3 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000412eb9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000430fd5 : sbb dl, dh ; ret
0x0000000000414fd3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004103fe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000431029 : sbb edx, esi ; ret
0x00000000004346d2 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000434642 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004025b8 : shl esp, cl ; ret
0x00000000004385d2 : std ; call qword ptr [rdx]
0x00000000004385f2 : std ; call qword ptr [rsi]
0x0000000000438c12 : std ; call rdx
0x00000000004389d2 : std ; jmp qword ptr [rax]
0x0000000000438592 : std ; jmp qword ptr [rbx]
0x00000000004388b2 : std ; jmp qword ptr [rdx]
0x0000000000438e72 : std ; jmp rax
0x0000000000438b32 : std ; jmp rdx
0x0000000000402508 : sti ; ret
0x0000000000438b31 : stosd dword ptr [rdi], eax ; std ; jmp rdx
0x000000000040d447 : sub al, 0x38 ; ret 0x8589
0x0000000000410403 : sub al, 0x38 ; ret 0xa9b9
0x0000000000436dc1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000436dc0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042cd59 : sysenter
0x0000000000414b0b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000434f0f : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004389d1 : test al, -3 ; jmp qword ptr [rax]
0x0000000000417ed8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041309d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x00000000004149e8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000436d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041d3ea : test byte ptr [rbx], ah ; ret 0
0x0000000000402015 : test byte ptr [rcx - 0x7bf05bbb], cl ; ret 0x16
0x0000000000413835 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000402be9 : test byte ptr [rsi - 0x16fffff8], al ; ret 1
0x0000000000419496 : test cl, dh ; ret 0
0x00000000004190de : test dl, bl ; ret 0
0x000000000041f9a0 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x0000000000405097 : test dword ptr [rax + 0x2dfffffd], ecx ; ret 0x6cd3
0x0000000000404e67 : test dword ptr [rax + 0x2dfffffd], ecx ; xchg eax, ebp ; cdq ; ret 0x89af
0x0000000000404e9f : test dword ptr [rax + 0x2dfffffd], ecx ; xchg eax, esi ; cdq ; ret 0x89af
0x000000000041d3e4 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x00000000004261e2 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x000000000040516a : test dword ptr [rbp + rdi*8 - 0x66690001], ebx ; ret 0xe9af
0x000000000041da1b : test dword ptr [rcx + 1], ebp ; ret
0x0000000000414af0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000414858 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000419b58 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x00000000004345eb : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000434f11 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000433f25 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000436404 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000436723 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000435514 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000043561a : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x0000000000433703 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000436647 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x00000000004346d5 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004349de : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000434b5e : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000424aa6 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004245f2 : wait ; ret 0xf40
0x00000000004314a5 : xchg ax, dx ; ret 0x89fc
0x000000000041da6f : xchg byte ptr [rcx + 1], ch ; ret
0x0000000000404e6d : xchg eax, ebp ; cdq ; ret 0x89af
0x0000000000435332 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x000000000040a431 : xchg eax, ebp ; ret
0x0000000000402df8 : xchg eax, ebp ; ret 0x8445
0x000000000040447a : xchg eax, ebp ; ret 0xd284
0x000000000040706e : xchg eax, ebp ; ret 0xe280
0x000000000040710a : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004367f0 : xchg eax, ebx ; ret 0xd284
0x000000000040d42b : xchg eax, ecx ; ret
0x000000000041640e : xchg eax, edi ; ret 0xd284
0x000000000040d57b : xchg eax, edx ; ret
0x0000000000422953 : xchg eax, edx ; ret 0x8445
0x00000000004314a6 : xchg eax, edx ; ret 0x89fc
0x000000000040570a : xchg eax, edx ; ret 0xd284
0x000000000043517d : xchg eax, edx ; ret 0xe9fc
0x0000000000404ea5 : xchg eax, esi ; cdq ; ret 0x89af
0x0000000000405128 : xchg eax, esi ; cdq ; ret 0xb9af
0x000000000040516f : xchg eax, esi ; cdq ; ret 0xe9af
0x0000000000412db2 : xchg eax, esi ; ret
0x00000000004229b7 : xchg eax, esi ; ret 0xd284
0x000000000040a413 : xchg eax, esp ; ret
0x00000000004046e5 : xchg eax, esp ; ret 0x148a
0x0000000000403d2e : xchg eax, esp ; ret 0x4589
0x00000000004113d6 : xchg eax, esp ; ret 0x8445
0x0000000000404703 : xchg eax, esp ; ret 0x8b48
0x000000000040802c : xchg eax, esp ; ret 0xd284
0x00000000004293da : xchg eax, esp ; ret 0xe280
0x00000000004253ea : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x00000000004133b7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409f7d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
