0x0000000000425082 : adc al, -0x7f ; ret 0x76c
0x0000000000424e7d : adc al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000424e8c : adc al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rax
0x000000000046c80d : adc al, 0 ; add byte ptr [rax + 0x34], ah ; std ; jmp qword ptr [rdx]
0x000000000046c6ed : adc al, byte ptr [rax] ; add byte ptr [rax + 0x33], dl ; std ; jmp qword ptr [rax]
0x0000000000456a64 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004569a3 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000425295 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000420a2c : adc byte ptr [rcx + rdi*4 + 0x60], ch ; jmp qword ptr [rdi]
0x000000000044de6c : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046c850 : adc byte ptr [rdi], dh ; std ; call qword ptr [rdx]
0x000000000044320b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004126f1 : adc dword ptr [rsi], 0x60 ; ret 0x8589
0x000000000041266d : adc dword ptr [rsi], 0x60 ; ret 0x858b
0x000000000041298b : adc dword ptr [rsi], 0x60 ; ret 0xde9
0x000000000046c94d : adc eax, 0x37200000 ; std ; call qword ptr [rsi]
0x000000000046c98d : adc eax, 0x38300000 ; std ; call rsp
0x0000000000412ad7 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000455c7c : adc eax, 0xace80000 ; ret 0xfffa
0x0000000000424f4b : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rsi]
0x000000000043f019 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046c6eb : add ah, ah ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x33], dl ; std ; jmp qword ptr [rax]
0x000000000046b5eb : add ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax], ah ; sar ecx, 1 ; jmp qword ptr [rbx]
0x000000000046d5eb : add ah, ah ; and dword ptr [rax], eax ; add al, al ; idiv esi ; call qword ptr [rsi]
0x000000000046cdeb : add ah, ah ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x24], dl ; std ; jmp qword ptr [rbx]
0x000000000046d5cb : add ah, al ; and dword ptr [rax], eax ; add al, al ; idiv dh ; call qword ptr [rbx]
0x000000000046bdcb : add ah, al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x4c], al ; sti ; call qword ptr [rdx]
0x0000000000420a68 : add al, -0x17 ; ret 0x58
0x00000000004076b1 : add al, 0 ; add al, ch ; xlatb ; ret
0x000000000044ca03 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000040f566 : add al, 0 ; add cl, ch ; ret 1
0x00000000004543da : add al, 0x15 ; ret
0x000000000046ca0c : add al, 0x16 ; add byte ptr [rax], al ; and byte ptr [rcx - 3], dl ; jmp rdx
0x0000000000427e17 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000046b70c : add al, 3 ; add byte ptr [rax], al ; jo 0x46b71a ; cli ; call qword ptr [rbx]
0x000000000046b80c : add al, 4 ; add byte ptr [rax], al ; xor byte ptr [rsi], cl ; cli ; call qword ptr [rsi]
0x000000000046b30b : add al, ah ; ret 0xffff
0x000000000046d5cf : add al, al ; idiv dh ; call qword ptr [rbx]
0x000000000046d5ef : add al, al ; idiv esi ; call qword ptr [rsi]
0x000000000046d36f : add al, al ; in eax, -2 ; jmp rax
0x000000000046d3cf : add al, al ; out -2, al ; jmp qword ptr [rdi]
0x000000000044cbf9 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x000000000042eb1c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x000000000041187d : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000442b03 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000430802 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x512db445], cl ; ret 0xe86c
0x000000000042b4b4 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040872b : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004338da : add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ea1d : add al, ch ; in eax, dx ; add r8, qword ptr [rax] ; pop rbp ; ret
0x0000000000455c7e : add al, ch ; lodsb al, byte ptr [rsi] ; ret 0xfffa
0x000000000040a238 : add al, ch ; ret 0xff7e
0x00000000004076b3 : add al, ch ; xlatb ; ret
0x000000000046d3ef : add al, dl ; out -2, al ; jmp qword ptr [rdi]
0x000000000040a237 : add al, r13b ; ret 0xff7e
0x000000000045f346 : add bh, al ; in al, dx ; int1 ; ret
0x000000000042b071 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000044c6fd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000044cbfb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x000000000044ca05 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000044cafb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000442efe : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000442c66 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004638b8 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000463afb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000046388d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000422fbc : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rax]
0x0000000000422fda : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000420cda : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rsi]
0x000000000041efdd : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x0000000000421f34 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x0000000000420af0 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rcx
0x0000000000422701 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x0000000000423a96 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsp
0x0000000000423e8e : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042556f : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rbx]
0x00000000004206d5 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x000000000041eb75 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000422225 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi - 0x162b3d38]
0x0000000000424e7f : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000424e8e : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rax
0x0000000000421e77 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdi
0x000000000042343a : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x00000000004226a3 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x000000000041ef11 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; push rbx ; ret 0x76fb
0x00000000004686ef : add bl, dh ; ret
0x000000000042b17a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000420a39 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046b9af : add byte ptr [rax + 0x1e], ah ; cli ; call qword ptr [rsi]
0x000000000046c6ef : add byte ptr [rax + 0x33], dl ; std ; jmp qword ptr [rax]
0x000000000046c80f : add byte ptr [rax + 0x34], ah ; std ; jmp qword ptr [rdx]
0x000000000046b70f : add byte ptr [rax + 1], dh ; cli ; call qword ptr [rbx]
0x000000000046ccab : add byte ptr [rax + rbx + 0x74900000], ah ; std ; call qword ptr [rbx]
0x000000000046cdef : add byte ptr [rax - 0x24], dl ; std ; jmp qword ptr [rbx]
0x000000000046cd4f : add byte ptr [rax - 0x4b], dl ; std ; jmp qword ptr [rbx]
0x000000000046bd8f : add byte ptr [rax - 0x4c], al ; sti ; call qword ptr [rdx]
0x0000000000435e0f : add byte ptr [rax - 0x75], cl ; jge 0x435da3 ; call 0x4020b7
0x00000000004338c5 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045f61b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043ffcd : add byte ptr [rax - 0x77], cl ; jge 0x43ffd0 ; pop rbp ; ret
0x0000000000406633 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042eb1e : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x000000000046ca0f : add byte ptr [rax], ah ; push rcx ; std ; jmp rdx
0x000000000046b5ef : add byte ptr [rax], ah ; sar ecx, 1 ; jmp qword ptr [rbx]
0x000000000046c84e : add byte ptr [rax], al ; adc byte ptr [rdi], dh ; std ; call qword ptr [rdx]
0x000000000046c94a : add byte ptr [rax], al ; adc eax, 0x37200000 ; std ; call qword ptr [rsi]
0x000000000046ca0a : add byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rax], al ; and byte ptr [rcx - 3], dl ; jmp rdx
0x000000000046b70a : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; jo 0x46b71c ; cli ; call qword ptr [rbx]
0x000000000046b80a : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; xor byte ptr [rsi], cl ; cli ; call qword ptr [rsi]
0x000000000040ea1b : add byte ptr [rax], al ; add al, ch ; in eax, dx ; add r8, qword ptr [rax] ; pop rbp ; ret
0x000000000042b17b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000442efc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000442c64 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004638b6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000463af9 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000423a94 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsp
0x0000000000423e8c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000423438 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x00000000004686ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000435e0d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x435da5 ; call 0x4020b9
0x00000000004338c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045f619 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043ffcb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x43ffd2 ; pop rbp ; ret
0x0000000000406631 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004686eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000406870 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004065d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ffca : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004686ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004501d2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172d8445], cl ; ret
0x0000000000467ea4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x00000000004105d0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x312dc845], cl ; ret
0x000000000045050b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000043ed5e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045c5a7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000427e81 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000043084d : add byte ptr [rax], al ; add byte ptr [rbx + 0x522db445], cl ; ret 0xe86c
0x000000000044fc5a : add byte ptr [rax], al ; add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000458283 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552de045], cl ; ret
0x00000000004583b7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de045], cl ; ret
0x0000000000427b0f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000040b02f : add byte ptr [rax], al ; add byte ptr [rbx + 0x722dbc45], cl ; sysenter
0x000000000044d496 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x00000000004486b7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x000000000040cfeb : add byte ptr [rax], al ; add byte ptr [rbx - 0x32d237bb], cl ; ret
0x00000000004102bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x38d23fbb], cl ; hlt ; ret
0x000000000044ff93 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000467599 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000467515 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000043081b : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x00000000004307d0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000045edfe : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000453335 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c6b845], cl ; ret
0x000000000040b0f2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040caee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000406582 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000457ba2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000406434 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000430ba4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000430023 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ret
0x0000000000467655 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041ec64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f959 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000420fee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000406872 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e8ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000460b9b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004110d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042f4c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042ea44 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000436c4f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004065d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000456a68 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004569a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004317ee : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000466e5d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000043f01b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412ad9 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426410 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044320d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000459eea : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbp ; ret
0x000000000043efd7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b12b : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401eb3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000046ca0e : add byte ptr [rax], al ; and byte ptr [rcx - 3], dl ; jmp rdx
0x000000000046c94e : add byte ptr [rax], al ; and byte ptr [rdi], dh ; std ; call qword ptr [rsi]
0x000000000046b5ee : add byte ptr [rax], al ; and cl, dl ; stc ; jmp qword ptr [rbx]
0x0000000000455c7d : add byte ptr [rax], al ; call 0x401f34
0x000000000046697d : add byte ptr [rax], al ; call 0x401f38
0x000000000046c6ea : add byte ptr [rax], al ; in al, 0x12 ; add byte ptr [rax], al ; push rax ; xor edi, ebp ; jmp qword ptr [rax]
0x000000000046caea : add byte ptr [rax], al ; in al, 0x16 ; add byte ptr [rax], al ; xor byte ptr [rax - 3], ch ; call rdx
0x000000000046cdea : add byte ptr [rax], al ; in al, 0x19 ; add byte ptr [rax], al ; push rax ; fdiv st(5), st(0) ; jmp qword ptr [rbx]
0x000000000046d5ea : add byte ptr [rax], al ; in al, 0x21 ; add byte ptr [rax], al ; sal bh, -2 ; call qword ptr [rsi]
0x000000000046b5ea : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; and cl, dl ; stc ; jmp qword ptr [rbx]
0x0000000000401fc9 : add byte ptr [rax], al ; jmp 0x401ec9
0x00000000004317ea : add byte ptr [rax], al ; jmp 0x4317f9
0x0000000000466e59 : add byte ptr [rax], al ; jmp 0x466e68
0x0000000000467ac9 : add byte ptr [rax], al ; jmp 0x467ad8
0x0000000000467f3f : add byte ptr [rax], al ; jmp 0x46804f
0x000000000046b70e : add byte ptr [rax], al ; jo 0x46b718 ; cli ; call qword ptr [rbx]
0x000000000045bc1c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000045bb9d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004460f9 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000467cd7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044052b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000045a36d : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000440388 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000042653f : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000040f2de : add byte ptr [rax], al ; mov edx, dword ptr [rbp - 0x1c] ; mov rsi, rcx ; call rax
0x000000000043ffcc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040db19 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042751c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000436539 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c557 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000435e0e : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call 0x4020b8
0x000000000046bd8e : add byte ptr [rax], al ; mov spl, -5 ; call qword ptr [rdx]
0x000000000046b9aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x1e600000 ; cli ; call qword ptr [rsi]
0x000000000046bdaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax - 0x4c], al ; sti ; call qword ptr [rdx]
0x000000000046b6ae : add byte ptr [rax], al ; nop ; cli ; stc ; call qword ptr [rax]
0x000000000046ccae : add byte ptr [rax], al ; nop ; je 0x46ccb5 ; call qword ptr [rbx]
0x0000000000407e5f : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ed5f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407b17 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046cdee : add byte ptr [rax], al ; push rax ; fdiv st(5), st(0) ; jmp qword ptr [rbx]
0x000000000046cd4e : add byte ptr [rax], al ; push rax ; mov ch, -3 ; jmp qword ptr [rbx]
0x000000000046beae : add byte ptr [rax], al ; push rax ; ret 0xfffb
0x000000000046c6ee : add byte ptr [rax], al ; push rax ; xor edi, ebp ; jmp qword ptr [rax]
0x00000000004686ee : add byte ptr [rax], al ; ret
0x0000000000400d56 : add byte ptr [rax], al ; ret 0
0x000000000046ae23 : add byte ptr [rax], al ; ret 0xfffc
0x000000000046d5ee : add byte ptr [rax], al ; sal bh, -2 ; call qword ptr [rsi]
0x000000000046d5ce : add byte ptr [rax], al ; sal dh, -2 ; call qword ptr [rbx]
0x000000000046cd4a : add byte ptr [rax], al ; sbb dword ptr [rax], r8d ; add byte ptr [rax - 0x4b], dl ; std ; jmp qword ptr [rbx]
0x000000000046d36e : add byte ptr [rax], al ; shl ch, -2 ; jmp rax
0x000000000046d3ce : add byte ptr [rax], al ; shl dh, -2 ; jmp qword ptr [rdi]
0x000000000046bd8a : add byte ptr [rax], al ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; mov spl, -5 ; call qword ptr [rdx]
0x000000000046c98a : add byte ptr [rax], al ; test byte ptr [rip + 0x38300000], dl ; std ; call rsp
0x000000000046caee : add byte ptr [rax], al ; xor byte ptr [rax - 3], ch ; call rdx
0x000000000046c98e : add byte ptr [rax], al ; xor byte ptr [rax], bh ; std ; call rsp
0x000000000046c5ce : add byte ptr [rax], al ; xor byte ptr [rcx], 0xfd ; jmp qword ptr [rdx]
0x000000000046b80e : add byte ptr [rax], al ; xor byte ptr [rsi], cl ; cli ; call qword ptr [rsi]
0x00000000004167e6 : add byte ptr [rax], bl ; ret 0x8589
0x000000000042279c : add byte ptr [rax], bl ; ret 0x8ce9
0x000000000046c98f : add byte ptr [rax], dh ; cmp ch, bh ; call rsp
0x000000000046c34f : add byte ptr [rax], dl ; je 0x46c353 ; jmp qword ptr [rcx]
0x000000000046b9ab : add byte ptr [rbp + rax + 0x1e600000], ah ; cli ; call qword ptr [rsi]
0x000000000046c98b : add byte ptr [rbp + rdx + 0x38300000], al ; std ; call rsp
0x00000000004501d4 : add byte ptr [rbx + 0x172d8445], cl ; ret
0x0000000000450bfc : add byte ptr [rbx + 0x182d8445], cl ; ret
0x00000000004284e5 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000428527 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000467ea6 : add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000046607f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x466067 ; ret
0x00000000004105d2 : add byte ptr [rbx + 0x312dc845], cl ; ret
0x000000000045050d : add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x00000000004508c3 : add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x000000000043ed60 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044fc11 : add byte ptr [rbx + 0x42d8445], cl ; ret 0xa43c
0x000000000045c5a9 : add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000427e83 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000430804 : add byte ptr [rbx + 0x512db445], cl ; ret 0xe86c
0x000000000043084f : add byte ptr [rbx + 0x522db445], cl ; ret 0xe86c
0x000000000044fc5c : add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000458285 : add byte ptr [rbx + 0x552de045], cl ; ret
0x00000000004583b9 : add byte ptr [rbx + 0x562de045], cl ; ret
0x0000000000407b18 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000427b11 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000040b031 : add byte ptr [rbx + 0x722dbc45], cl ; sysenter
0x000000000044d498 : add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x000000000046b70b : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; jo 0x46b71b ; cli ; call qword ptr [rbx]
0x00000000004486b9 : add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x0000000000452645 : add byte ptr [rbx - 0x20d24fbb], cl ; push rbx ; ret 0x8589
0x0000000000452603 : add byte ptr [rbx - 0x21d24fbb], cl ; push rbx ; ret 0x4589
0x000000000041f391 : add byte ptr [rbx - 0x2436b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x000000000040cfed : add byte ptr [rbx - 0x32d237bb], cl ; ret
0x000000000040cfab : add byte ptr [rbx - 0x33d237bb], cl ; ret
0x00000000004102bf : add byte ptr [rbx - 0x38d23fbb], cl ; hlt ; ret
0x0000000000410274 : add byte ptr [rbx - 0x39d23fbb], cl ; hlt ; ret
0x0000000000450e3b : add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000044ff95 : add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x000000000046759b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000467517 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000043081d : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x00000000004307d2 : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x00000000004081d4 : add byte ptr [rbx - 0x8b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000045ef5e : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000045ee00 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000453337 : add byte ptr [rcx + 0x45c6b845], cl ; ret
0x000000000044c7df : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040b0f4 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040caf0 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000406584 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000457ba4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000406436 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042d45f : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004531d2 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046cd4b : add byte ptr [rcx + rbx], al ; add byte ptr [rax - 0x4b], dl ; std ; jmp qword ptr [rbx]
0x000000000046bdab : add byte ptr [rcx + rcx - 0x4bc00000], ah ; sti ; call qword ptr [rdx]
0x000000000046bd8b : add byte ptr [rcx + rcx - 0x4bc00000], al ; sti ; call qword ptr [rdx]
0x0000000000430ba6 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040f9c6 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402618 : add byte ptr [rcx], al ; ret
0x000000000046d36b : add byte ptr [rdi + rbx], ah ; add al, al ; in eax, -2 ; jmp rax
0x000000000046c34b : add byte ptr [rdi + rcx], al ; add byte ptr [rax], dl ; je 0x46c357 ; jmp qword ptr [rcx]
0x0000000000430025 : add byte ptr [rdi], cl ; mov dh, 0x45 ; ret
0x0000000000467657 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041ec66 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f95b : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000420ff0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000406874 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e901 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000460b9d : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004110d9 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042f4c2 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042ea46 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000436c51 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004065d9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000456a6a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004569a9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000046b6ab : add byte ptr [rdx + rax - 0x5700000], ah ; stc ; call qword ptr [rax]
0x000000000046be8b : add byte ptr [rdx + rcx - 0x40600000], al ; sti ; call rax
0x00000000004083e0 : add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x000000000040a615 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045367e : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042799d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000046ca0b : add byte ptr [rsi + rdx], al ; add byte ptr [rax], al ; and byte ptr [rcx - 3], dl ; jmp rdx
0x000000000046b80b : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; xor byte ptr [rsi], cl ; cli ; call qword ptr [rsi]
0x000000000046c88b : add byte ptr [rsp + rdx + 0x37100000], al ; std ; call qword ptr [rdx]
0x000000000044dcfb : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000402617 : add byte ptr es:[rcx], al ; ret
0x00000000004317f0 : add cl, ch ; ret
0x0000000000466e5f : add cl, ch ; ret 0
0x000000000040f568 : add cl, ch ; ret 1
0x0000000000419f91 : add dl, byte ptr [rcx] ; ret 0x8902
0x000000000042d3fa : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000045f344 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x000000000042b06f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000046b5ed : add dword ptr [rax], eax ; add byte ptr [rax], ah ; sar ecx, 1 ; jmp qword ptr [rbx]
0x000000000043efd5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042653d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000430df7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040cfa9 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x33d237bb], cl ; ret
0x0000000000410272 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x39d23fbb], cl ; hlt ; ret
0x000000000045ef5c : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x00000000004331b3 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004129d3 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004117f0 : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042f356 : add dword ptr [rcx], eax ; ret 0x9589
0x0000000000412a17 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045c8f5 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x00000000004278e1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040ae97 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fb35 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044e749 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410756 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000046308f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ccce : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045a860 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000046b9ad : add eax, 0x1e600000 ; cli ; call qword ptr [rsi]
0x0000000000402614 : add eax, 0x26be3e ; add ebx, esi ; ret
0x0000000000432e41 : add eax, 0x458b0000 ; call 0xffffffffc3a45a81
0x000000000044a43f : add eax, 0x53b80000 ; jrcxz 0x44a4af ; ret 0x8fb9
0x000000000042fdf3 : add eax, 0x5d5b0000 ; ret
0x00000000004460f7 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000447c9f : add eax, 0xb6b80000 ; ret 0x979f
0x0000000000456b3a : add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000046b70d : add eax, dword ptr [rax] ; add byte ptr [rax + 1], dh ; cli ; call qword ptr [rbx]
0x0000000000450e39 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x0000000000426a75 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040ea21 : add eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000427e19 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025db : add eax, edx ; sar rax, 1 ; jne 0x4025ec ; pop rbp ; ret
0x0000000000433779 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402619 : add ebx, esi ; ret
0x000000000045f4bb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000463bc5 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000041bb21 : add edx, dword ptr [rcx] ; ret 0x8902
0x00000000004241b7 : add edx, dword ptr [rcx] ; ret 0x8b02
0x000000000046b711 : add edx, edi ; call qword ptr [rbx]
0x0000000000408d76 : add esi, dword ptr [rdi] ; ret 0x8589
0x000000000040acdf : add esi, dword ptr [rdi] ; ret 0x8b48
0x000000000046cef1 : add esi, edi ; call qword ptr [rcx]
0x000000000040292b : add esp, 0x10 ; pop rbp ; ret
0x000000000040f9c4 : add esp, 0x100 ; pop rbp ; ret
0x0000000000430df4 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000044de6a : add esp, 0x110 ; pop rbp ; ret
0x000000000043f6f7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000464cf5 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000042c3cf : add esp, 0x120 ; pop rbp ; ret
0x000000000043374a : add esp, 0x130 ; pop rbp ; ret
0x000000000044f487 : add esp, 0x140 ; pop rbp ; ret
0x0000000000412201 : add esp, 0x160 ; pop rbp ; ret
0x00000000004278e6 : add esp, 0x18 ; pop rbp ; ret
0x000000000041145a : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000436302 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000040dcee : add esp, 0x20 ; pop rbp ; ret
0x000000000045367c : add esp, 0x200 ; pop rbp ; ret
0x0000000000426327 : add esp, 0x2708 ; pop rbx ; pop rbp ; ret
0x0000000000441b21 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000408582 : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000432da3 : add esp, 0x2f0 ; pop rbp ; ret
0x000000000040c628 : add esp, 0x30 ; pop rbp ; ret
0x0000000000445f11 : add esp, 0x340 ; pop rbp ; ret
0x000000000043546c : add esp, 0x360 ; pop rbp ; ret
0x0000000000448285 : add esp, 0x380 ; pop rbp ; ret
0x000000000040ae9c : add esp, 0x40 ; pop rbp ; ret
0x000000000040adcb : add esp, 0x450 ; pop rbp ; ret
0x0000000000459eed : add esp, 0x48 ; pop rbp ; ret
0x00000000004524e6 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000402b72 : add esp, 0x50 ; pop rbp ; ret
0x0000000000461889 : add esp, 0x520 ; pop rbp ; ret
0x000000000042fdf0 : add esp, 0x538 ; pop rbx ; pop rbp ; ret
0x00000000004571a7 : add esp, 0x5f0 ; pop rbp ; ret
0x00000000004028de : add esp, 0x60 ; pop rbp ; ret
0x0000000000408403 : add esp, 0x70 ; pop rbp ; ret
0x00000000004086f5 : add esp, 0x80 ; pop rbp ; ret
0x0000000000407b13 : add esp, 0x838 ; pop rbx ; pop rbp ; ret
0x000000000040820a : add esp, 0x90 ; pop rbp ; ret
0x000000000040bb86 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000428bb3 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000448970 : add esp, 0xc0 ; pop rbp ; ret
0x000000000043ea34 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000041007e : add esp, 0xd0 ; pop rbp ; ret
0x0000000000457d5d : add esp, 0xe0 ; pop rbp ; ret
0x0000000000407e5b : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401eb6 : add esp, 8 ; ret
0x000000000040ea20 : add r8, qword ptr [rax] ; pop rbp ; ret
0x00000000004451e1 : add r8b, byte ptr [r8] ; add cl, ch ; ret 1
0x0000000000427e18 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025da : add rax, rdx ; sar rax, 1 ; jne 0x4025ed ; pop rbp ; ret
0x0000000000433778 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000045f4ba : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040292a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040f9c3 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000430df3 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000044de69 : add rsp, 0x110 ; pop rbp ; ret
0x000000000043f6f6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000464cf4 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000042c3ce : add rsp, 0x120 ; pop rbp ; ret
0x0000000000433749 : add rsp, 0x130 ; pop rbp ; ret
0x000000000044f486 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000412200 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004278e5 : add rsp, 0x18 ; pop rbp ; ret
0x0000000000411459 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000436301 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000040dced : add rsp, 0x20 ; pop rbp ; ret
0x000000000045367b : add rsp, 0x200 ; pop rbp ; ret
0x0000000000426326 : add rsp, 0x2708 ; pop rbx ; pop rbp ; ret
0x0000000000441b20 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000408581 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000432da2 : add rsp, 0x2f0 ; pop rbp ; ret
0x000000000040c627 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000445f10 : add rsp, 0x340 ; pop rbp ; ret
0x000000000043546b : add rsp, 0x360 ; pop rbp ; ret
0x0000000000448284 : add rsp, 0x380 ; pop rbp ; ret
0x000000000040ae9b : add rsp, 0x40 ; pop rbp ; ret
0x000000000040adca : add rsp, 0x450 ; pop rbp ; ret
0x0000000000459eec : add rsp, 0x48 ; pop rbp ; ret
0x00000000004524e5 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000402b71 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000461888 : add rsp, 0x520 ; pop rbp ; ret
0x000000000042fdef : add rsp, 0x538 ; pop rbx ; pop rbp ; ret
0x00000000004571a6 : add rsp, 0x5f0 ; pop rbp ; ret
0x00000000004028dd : add rsp, 0x60 ; pop rbp ; ret
0x0000000000408402 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004086f4 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000407b12 : add rsp, 0x838 ; pop rbx ; pop rbp ; ret
0x0000000000408209 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040bb85 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000428bb2 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000044896f : add rsp, 0xc0 ; pop rbp ; ret
0x000000000043ea33 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000041007d : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000457d5c : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407e5a : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401eb5 : add rsp, 8 ; ret
0x000000000044056c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000044056b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000044906b : and al, 0xffffffffffffffac ; ret 0x89cc
0x000000000044a604 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000420a2a : and al, 0xffffffffffffffba ; adc byte ptr [rcx + rdi*4 + 0x60], ch ; jmp qword ptr [rdi]
0x000000000046308e : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cccd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000452848 : and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000042d3f8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000458cc2 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000458e1c : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046ca10 : and byte ptr [rcx - 3], dl ; jmp rdx
0x000000000042c3d1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046c950 : and byte ptr [rdi], dh ; std ; call qword ptr [rsi]
0x000000000045c8f3 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000046b5f0 : and cl, dl ; stc ; jmp qword ptr [rbx]
0x000000000042d3f7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000046d5cd : and dword ptr [rax], eax ; add al, al ; idiv dh ; call qword ptr [rbx]
0x000000000046d5ed : and dword ptr [rax], eax ; add al, al ; idiv esi ; call qword ptr [rsi]
0x000000000040cac9 : and eax, 0x40cce0 ; call 0x428d07
0x0000000000428cf5 : and eax, 0x46a110 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040c64f : and eax, 0x66e508 ; pop rbp ; ret
0x000000000040c673 : and eax, 0x66e510 ; pop rbp ; ret
0x000000000041ec22 : and eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x000000000040f01f : call 0x2545b3
0x0000000000406d21 : call 0x401ed7
0x0000000000455c7f : call 0x401f32
0x000000000046697f : call 0x401f36
0x000000000046694c : call 0x401fe6
0x0000000000435e14 : call 0x4020b2
0x000000000045f370 : call 0x402109
0x00000000004514f2 : call 0x402179
0x0000000000435fa2 : call 0x402212
0x000000000040718f : call 0x402419
0x0000000000426252 : call 0x4024d2
0x0000000000465e97 : call 0x402556
0x00000000004106ee : call 0x40f9e7
0x000000000040cace : call 0x428d02
0x000000000045126a : call 0x44d522
0x0000000000433511 : call 0x45a899
0x00000000004532f8 : call 0x45cdb6
0x000000000042abe6 : call 0xffffffff8a051188
0x000000000045b98c : call 0xffffffffc2c3d6c2
0x000000000045b98b : call 0xffffffffc2c3d6c3
0x0000000000432e46 : call 0xffffffffc3a45a7c
0x0000000000432e45 : call 0xffffffffc3a45a7d
0x0000000000432e88 : call 0xffffffffc3a45bbe
0x0000000000432e87 : call 0xffffffffc3a45bbf
0x000000000043ea79 : call 0xffffffffe90673c9
0x000000000043ea78 : call 0xffffffffe90673ca
0x000000000043a4bd : call 0xfffffffff73c2a54
0x0000000000462613 : call 0xfffffffffeeaabe5
0x0000000000462612 : call 0xfffffffffeeaabe6
0x000000000042f3bf : call 0xfffffffffef77991
0x000000000042f3be : call 0xfffffffffef77992
0x00000000004025b3 : call 0xffffffffff408c9f
0x00000000004025f3 : call 0xffffffffff408cdf
0x000000000045e255 : call 0xffffffffff4a682a
0x000000000043cfe9 : call 0xffffffffff5855bb
0x000000000043cfe8 : call 0xffffffffff5855bc
0x000000000043cfe9 : call 0xffffffffff5855bd
0x000000000043cfe8 : call 0xffffffffff5855be
0x0000000000429cd7 : call 0xffffffffff7c2828
0x0000000000429cd6 : call 0xffffffffff7c2829
0x0000000000435ed8 : call 0xffffffffffafe4aa
0x0000000000435ed7 : call 0xffffffffffafe4ab
0x00000000004630ca : call 0xffffffffffc2b69c
0x00000000004630c9 : call 0xffffffffffc2b69d
0x00000000004686c9 : call qword ptr [r12 + rbx*8]
0x0000000000422fc2 : call qword ptr [rax]
0x00000000004626b1 : call qword ptr [rbx]
0x0000000000406919 : call qword ptr [rcx]
0x0000000000420808 : call qword ptr [rdi]
0x0000000000406dbe : call qword ptr [rdx]
0x0000000000407517 : call qword ptr [rsi]
0x00000000004686ca : call qword ptr [rsp + rbx*8]
0x0000000000429d73 : call rax
0x0000000000421f3a : call rbx
0x0000000000412601 : call rcx
0x0000000000434fdc : call rdi
0x000000000040a252 : call rdx
0x0000000000422707 : call rsi
0x0000000000425b63 : call rsp
0x000000000045fde6 : cdq ; jbe 0x45fe0a ; ret
0x000000000046170d : cdq ; jbe 0x461731 ; ret
0x000000000046751c : cdq ; ret
0x000000000042f355 : clc ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000428803 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046613c : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000458793 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044af40 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040bef1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000428453 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000428bb1 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b6e3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004025df : clc ; jne 0x4025e8 ; pop rbp ; ret
0x000000000045cd98 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000045c4b7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042cffe : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407b37 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004271db : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271fb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042721b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043ff6b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043ffab : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043ff8b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004125f9 : clc ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000407b3b : clc ; pop rbp ; ret
0x000000000041f32b : clc ; push rsi ; ret 0x48f3
0x000000000041f304 : clc ; push rsi ; ret 0x81f3
0x000000000041b491 : clc ; push rsi ; ret 0x89f3
0x0000000000415841 : clc ; ret 0xab1b
0x0000000000402957 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000464cf3 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000436271 : cld ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004076ae : cld ; jmp 0x407b24
0x000000000046c352 : cld ; jmp qword ptr [rcx]
0x000000000043cc3d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000044dcfa : cli ; add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000046b752 : cli ; call qword ptr [rax]
0x000000000046b712 : cli ; call qword ptr [rbx]
0x000000000046b812 : cli ; call qword ptr [rsi]
0x0000000000458434 : cli ; inc edi ; in al, 0x56 ; ret
0x000000000045f373 : cli ; inc edi ; in al, dx ; int1 ; ret
0x000000000046bb12 : cli ; jmp rsp
0x000000000046b6b1 : cli ; stc ; call qword ptr [rax]
0x0000000000452845 : cmc ; movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000430e38 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000044e419 : cmovs ecx, dword ptr [rbx - 0x7eb737ab] ; ret 0xffff
0x0000000000426d4c : cmp al, -0x17 ; ret
0x000000000045d85d : cmp al, -0x2a ; ret
0x00000000004508c8 : cmp al, -0x6a ; ret
0x00000000004226ff : cmp al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x00000000004226a1 : cmp al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x0000000000407196 : cmp al, 0x25 ; ret
0x0000000000422b19 : cmp byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x000000000040caec : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407b15 : cmp byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000458fcd : cmp byte ptr [rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x000000000042fdf2 : cmp byte ptr [rip + 0x5d5b0000], al ; ret
0x0000000000458fcc : cmp byte ptr ds:[rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x000000000046c991 : cmp ch, bh ; call rsp
0x000000000040259d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025b0 ; pop rbp ; ret
0x000000000041b475 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000043ef14 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000413985 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004534c2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000425294 : cwde ; adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000412997 : cwde ; add rsp, 0x100 ; pop rbp ; ret
0x000000000045fd92 : cwde ; jbe 0x45fdb6 ; ret
0x00000000004517d1 : cwde ; jmp 0x4524f6
0x00000000004517d0 : cwde ; jmp 0x4524f7
0x000000000046701b : cwde ; js 0x466fc5 ; ret
0x0000000000467062 : cwde ; js 0x46700c ; ret
0x000000000046709c : cwde ; js 0x467046 ; ret
0x000000000042ecd2 : dec dword ptr [rax + 0x69] ; ret 0xa
0x00000000004352d5 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000046b307 : dec dword ptr [rax - 0x1fffffd2] ; ret 0xffff
0x0000000000407193 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004615d2 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000045b91d : dec dword ptr [rax - 0x77] ; jge 0x45b920 ; pop rbp ; ret
0x00000000004419e1 : dec dword ptr [rax - 0x77] ; ret 0x16e8
0x000000000042f23c : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000044148b : dec dword ptr [rax - 0x77] ; ret 0x6ce8
0x000000000043350d : dec dword ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000461608 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004071be : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042198a : dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000043cde2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000043d0ed : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000409e61 : dec dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423ad0 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041f261 : dec dword ptr [rdi + 0x59] ; xlatb ; ret
0x000000000043e5f4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000455ac1 : dec dword ptr [rdi] ; ret 0xc609
0x000000000045af49 : dec dword ptr [rdi] ; test ah, ah ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000045eeef : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000044eedc : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040f562 : dec dword ptr [rdi] ; test byte ptr [rdi], cl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000415572 : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; ret 0
0x0000000000441c43 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004331af : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000414072 : dec dword ptr [rdi] ; test dl, ah ; ret
0x000000000040645e : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000040b58a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000461474 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000409f37 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409f5e : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x0000000000441b03 : dec ebx ; je 0x441ac9 ; ret 0x1ce9
0x000000000040cc91 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cc90 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000451265 : enter -0x74b8, 0x75 ; shr al, -0x4f ; ret 0xffff
0x000000000045130d : enter -0x74b8, 0x75 ; shr al, 9 ; ret 0xffff
0x0000000000427d67 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000045899e : enter -0x79d3, -0xa ; ret 0x89c8
0x0000000000458953 : enter -0x7ad3, -0xa ; ret 0x89c8
0x0000000000427e1a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000457cca : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040ff17 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045e00b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000458c73 : enter 0x612d, 1 ; ret 0x897e
0x000000000042839e : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045a9e4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ff29 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000462a43 : fcmovbe st(0), st(5) ; jmp 0x4630a1
0x000000000045c832 : fcomp qword ptr [rbp - 0x75b54151] ; ret 0x8423
0x000000000046cdf1 : fdiv st(5), st(0) ; jmp qword ptr [rbx]
0x00000000004320e1 : fiadd dword ptr [rdx - 0x4b] ; ret 0x8589
0x0000000000432d0e : fiadd dword ptr [rdx - 0x4b] ; ret 0x94e9
0x0000000000432d54 : fiadd dword ptr [rdx - 0x4b] ; ret 0xb60f
0x0000000000452608 : ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000430bb0 : fimul dword ptr [rdi] ; sahf ; ret
0x000000000045264a : fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000045284b : fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000402637 : fisub word ptr [rsi] ; mov rbp, rsp ; call rax
0x0000000000431f59 : fld dword ptr [rdx - 0x4b] ; ret 0x8589
0x000000000043005c : fld xword ptr [rbp - 0x30] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cc5d : fmul dword ptr [rax + 0x31] ; ret 0x8948
0x0000000000443804 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000410f88 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044d283 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000410f8c : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044d287 : fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000045f61f : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000045755e : fmul dword ptr [rax - 0x7f] ; ret 0x60
0x00000000004615d6 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000042ff33 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x00000000004686cc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000044f417 : fsubr st(0) ; ret
0x00000000004298e4 : fsubr st(1) ; ret 0
0x000000000042a3ac : fucompi st(1) ; ret
0x0000000000402929 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044b09c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf0f : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004125b2 : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000045cd94 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004025b0 : hlt ; pop rbp ; mov edi, 0x66e3e8 ; jmp rax
0x000000000041027a : hlt ; ret
0x0000000000422fc0 : idiv bh ; call qword ptr [rax]
0x0000000000422651 : idiv bh ; call qword ptr [rcx]
0x0000000000420806 : idiv bh ; call qword ptr [rdi]
0x000000000041f3c6 : idiv bh ; call qword ptr [rdx]
0x0000000000420cde : idiv bh ; call qword ptr [rsi]
0x000000000041efe1 : idiv bh ; call rax
0x0000000000421f38 : idiv bh ; call rbx
0x0000000000420af4 : idiv bh ; call rcx
0x0000000000422705 : idiv bh ; call rsi
0x0000000000425b61 : idiv bh ; call rsp
0x000000000041f25f : idiv bh ; dec dword ptr [rdi + 0x59] ; xlatb ; ret
0x0000000000425bf2 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004251c0 : idiv bh ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x00000000004221f1 : idiv bh ; jmp qword ptr [rax]
0x0000000000425573 : idiv bh ; jmp qword ptr [rbx]
0x00000000004206d9 : idiv bh ; jmp qword ptr [rcx]
0x000000000041eb2a : idiv bh ; jmp qword ptr [rdi]
0x00000000004251c6 : idiv bh ; jmp qword ptr [rdx]
0x0000000000422229 : idiv bh ; jmp qword ptr [rsi - 0x162b3d38]
0x0000000000424e83 : idiv bh ; jmp qword ptr [rsi]
0x0000000000424e92 : idiv bh ; jmp rax
0x0000000000422b8c : idiv bh ; jmp rcx
0x0000000000421e7b : idiv bh ; jmp rdi
0x000000000042343e : idiv bh ; jmp rdx
0x00000000004226a7 : idiv bh ; jmp rsi
0x000000000041ef15 : idiv bh ; push rbx ; ret 0x76fb
0x000000000046d5d1 : idiv dh ; call qword ptr [rbx]
0x0000000000423ace : idiv edi ; dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000424232 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423f02 : idiv edi ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x00000000004234ae : idiv edi ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x000000000046d5f1 : idiv esi ; call qword ptr [rsi]
0x0000000000450e38 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000044259e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040c48c : imul eax, dword ptr [rsi + 0xfc44589], -0x7c ; ret 0
0x0000000000463aa6 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000041187b : in al, -0x17 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004338d8 : in al, -0x51 ; add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043c599 : in al, -0x7f ; ret 0xff9f
0x000000000043c77f : in al, -0x7f ; ret 0xffbf
0x000000000043c825 : in al, -0x7f ; ret 0xffc5
0x000000000043c853 : in al, -0x7f ; ret 0xffd5
0x000000000043c921 : in al, -0x7f ; ret 0xffd8
0x000000000043cab7 : in al, -0x7f ; ret 0xffe0
0x0000000000458cc0 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000458e1a : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046c6ec : in al, 0x12 ; add byte ptr [rax], al ; push rax ; xor edi, ebp ; jmp qword ptr [rax]
0x000000000046caec : in al, 0x16 ; add byte ptr [rax], al ; xor byte ptr [rax - 3], ch ; call rdx
0x000000000046cdec : in al, 0x19 ; add byte ptr [rax], al ; push rax ; fdiv st(5), st(0) ; jmp qword ptr [rbx]
0x000000000046d5ec : in al, 0x21 ; add byte ptr [rax], al ; sal bh, -2 ; call qword ptr [rsi]
0x000000000044f485 : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x000000000045e8af : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x000000000040f2e2 : in al, 0x48 ; mov esi, ecx ; call rax
0x0000000000458438 : in al, 0x56 ; ret
0x000000000045cee7 : in al, 0x5d ; ret
0x000000000040686e : in al, 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004065d3 : in al, 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004083de : in al, 0x66 ; add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x000000000040a613 : in al, 0x66 ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004586da : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046b5ec : in al, 1 ; add byte ptr [rax], al ; and cl, dl ; stc ; jmp qword ptr [rbx]
0x00000000004586fb : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045871c : in al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045873d : in al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bcda : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000045367a : in al, dx ; add rsp, 0x200 ; pop rbp ; ret
0x00000000004461cf : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045d099 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044b3fa : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000412600 : in al, dx ; call rcx
0x000000000045f349 : in al, dx ; int1 ; ret
0x000000000043664a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004460fd : in al, dx ; pop rbp ; ret
0x00000000004532a5 : in eax, -0x76 ; push rbp ; ret
0x000000000046d371 : in eax, -2 ; jmp rax
0x000000000040ea1f : in eax, dx ; add r8, qword ptr [rax] ; pop rbp ; ret
0x000000000046771b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044c7ee : inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000043001a : inc dword ptr [rax + 0x4d8801e1] ; ret
0x00000000004531bf : inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000406580 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043dc0f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041ec62 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000420fec : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000406e21 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000456b8f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040ac55 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004647d2 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000405a32 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000040a1a3 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f397 : inc dword ptr [rcx] ; ret 0x9589
0x0000000000409dfe : inc dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040aaf9 : inc dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f353 : inc ecx ; clc ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000458435 : inc edi ; in al, 0x56 ; ret
0x000000000045f374 : inc edi ; in al, dx ; int1 ; ret
0x000000000043f6c8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000044ce64 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000436272 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000435f62 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000042264d : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000420802 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdi]
0x000000000041f3c2 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000420b15 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call rcx
0x00000000004221ed : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000041eb26 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x00000000004251c2 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000422b88 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rcx
0x00000000004234b0 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x0000000000430019 : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x0000000000438d6f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000043c3af : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000040cff2 : int 0xc3
0x0000000000406b53 : int1 ; mov cl, ch ; ret 0xf
0x000000000045ef63 : int1 ; ret
0x00000000004025a3 : ja 0x4025aa ; pop rbp ; ret
0x000000000041eb73 : ja 0x41eb7d ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000042d001 : ja 0x42d04e ; pop rbp ; ret
0x000000000041efdb : jae 0x41efe5 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x000000000045fd93 : jbe 0x45fdb5 ; ret
0x000000000045fde7 : jbe 0x45fe09 ; ret
0x000000000046170e : jbe 0x461730 ; ret
0x00000000004025af : je 0x4025ad ; pop rbp ; mov edi, 0x66e3e8 ; jmp rax
0x0000000000440d32 : je 0x440cf4 ; ret 0x8589
0x0000000000440e12 : je 0x440dd4 ; ret 0x8589
0x0000000000441a00 : je 0x4419c2 ; ret 0x7d81
0x0000000000441b05 : je 0x441ac7 ; ret 0x1ce9
0x000000000046c351 : je 0x46c351 ; jmp qword ptr [rcx]
0x000000000046ccb1 : je 0x46ccb2 ; call qword ptr [rbx]
0x0000000000420a65 : jg 0x420a21 ; add al, -0x17 ; ret 0x58
0x0000000000407b36 : jge 0x407b37 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f01a : jge 0x40f015 ; mov rsi, qword ptr [rbp - 0x18] ; mov edx, dword ptr [rbp - 0x1c] ; call rax
0x00000000004125f8 : jge 0x4125fb ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x00000000004271da : jge 0x4271db ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271fa : jge 0x4271fb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042721a : jge 0x42721b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042cffd : jge 0x42cffe ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000435e12 : jge 0x435da0 ; call 0x4020b4
0x000000000043ff6a : jge 0x43ff6b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043ff8a : jge 0x43ff8b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043ffaa : jge 0x43ffab ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043ffd0 : jge 0x43ffcd ; pop rbp ; ret
0x00000000004420b8 : jge 0x4420cf ; ret
0x00000000004425a3 : jge 0x4425ba ; ret
0x0000000000451264 : jge 0x451236 ; mov rsi, qword ptr [rbp - 0x40] ; call 0x44d528
0x000000000045130c : jge 0x4512de ; mov rsi, qword ptr [rbp - 0x40] ; call 0x44d528
0x000000000045b920 : jge 0x45b91d ; pop rbp ; ret
0x000000000046045a : jge 0x4604d3 ; ret
0x0000000000467c89 : jge 0x467c83 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000441f8c : jl 0x441fa3 ; ret
0x0000000000466035 : jl 0x466011 ; ret
0x0000000000466085 : jl 0x466061 ; ret
0x00000000004604ae : jle 0x460527 ; ret
0x00000000004610dc : jle 0x461155 ; ret
0x000000000040266e : jmp 0x120240c9
0x0000000000401fcb : jmp 0x401ec7
0x00000000004060a8 : jmp 0x407b23
0x000000000040b08b : jmp 0x40b13c
0x000000000040d1f5 : jmp 0x40d379
0x0000000000410400 : jmp 0x410577
0x00000000004232cd : jmp 0x426337
0x0000000000427c62 : jmp 0x427d37
0x0000000000430dc3 : jmp 0x430e06
0x00000000004317ec : jmp 0x4317f7
0x00000000004362a2 : jmp 0x436310
0x000000000043bd5d : jmp 0x43ea43
0x000000000043e7f1 : jmp 0x43ea45
0x000000000044259d : jmp 0x442b15
0x000000000044a721 : jmp 0x44aa33
0x000000000044dd0c : jmp 0x44de78
0x000000000045140b : jmp 0x4524f4
0x00000000004517d2 : jmp 0x4524f5
0x000000000045c782 : jmp 0x45c8d2
0x000000000045f342 : jmp 0x45f487
0x000000000046143f : jmp 0x461897
0x000000000046143e : jmp 0x461898
0x0000000000462a45 : jmp 0x46309f
0x0000000000463853 : jmp 0x463bea
0x0000000000466e5b : jmp 0x466e66
0x0000000000467acb : jmp 0x467ad6
0x0000000000467f41 : jmp 0x46804d
0x000000000042b9e1 : jmp 0x49054331
0x000000000042ba5c : jmp 0x490543ac
0x000000000042cdb5 : jmp 0x49055705
0x000000000042ce30 : jmp 0x49055780
0x00000000004587c5 : jmp 0x7f07892d
0x000000000042ac2b : jmp 0xffffffff8a0511cd
0x000000000045d0de : jmp 0xffffffffb707d4aa
0x000000000046701a : jmp 0xffffffffc3eae8bb
0x000000000042afdf : jmp 0xffffffffea051581
0x00000000004221f3 : jmp qword ptr [rax]
0x0000000000425575 : jmp qword ptr [rbx]
0x00000000004206db : jmp qword ptr [rcx]
0x000000000040349a : jmp qword ptr [rdi]
0x000000000043ef15 : jmp qword ptr [rdx + 0xc2e968]
0x00000000004251c8 : jmp qword ptr [rdx]
0x000000000042222b : jmp qword ptr [rsi - 0x162b3d38]
0x0000000000424e85 : jmp qword ptr [rsi]
0x00000000004025b7 : jmp rax
0x000000000043db12 : jmp rbx
0x0000000000422b8e : jmp rcx
0x00000000004130d1 : jmp rdi
0x00000000004025f7 : jmp rdx
0x000000000040850b : jmp rsi
0x0000000000434f5f : jmp rsp
0x00000000004025e0 : jne 0x4025e7 ; pop rbp ; ret
0x000000000040cc92 : jne 0x40cc8a ; mov rax, rdx ; pop rbp ; ret
0x000000000040d806 : jne 0x40d7fe ; mov rax, rdx ; pop rbp ; ret
0x000000000040f01e : jne 0x40f00d ; mov edx, dword ptr [rbp - 0x1c] ; call rax
0x0000000000412176 : jne 0x412131 ; mov edx, dword ptr [rbp - 0x2c] ; mov rcx, qword ptr [rbp - 0x38] ; call rax
0x00000000004125fc : jne 0x4125f3 ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000427d66 : jne 0x427d39 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000431162 : jne 0x43115a ; mov rax, rdx ; pop rbp ; ret
0x000000000043f6c6 : jne 0x43f6cf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000451268 : jne 0x45122e ; call 0x44d524
0x0000000000451310 : jne 0x4512d6 ; call 0x44d524
0x00000000004532a0 : jne 0x453263 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x00000000004590a9 : jne 0x45908c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045a3a1 : jne 0x45a399 ; mov rax, rdx ; pop rbp ; ret
0x000000000045a792 : jne 0x45a78a ; mov rax, rdx ; pop rbp ; ret
0x0000000000465e95 : jne 0x465e7f ; call 0x402558
0x0000000000422557 : jnp 0x422514 ; ret 0xd23d
0x0000000000422556 : jnp 0x422515 ; ret 0xd23d
0x000000000044ce61 : jnp 0x44cebc ; sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000046a9f5 : jnp 0x46a9f2 ; call qword ptr [rax]
0x0000000000408405 : jo 0x408466 ; ret
0x000000000040b130 : jo 0x40b191 ; ret
0x000000000040bcdc : jo 0x40bd3d ; ret
0x000000000040c447 : jo 0x40c4a8 ; ret
0x000000000040cf13 : jo 0x40cf74 ; ret
0x000000000040d60e : jo 0x40d66f ; ret
0x000000000040d7de : jo 0x40d83f ; ret
0x000000000041075d : jo 0x4107be ; ret
0x0000000000433e87 : jo 0x433ee8 ; ret
0x000000000043f8e1 : jo 0x43f942 ; ret
0x000000000043fa04 : jo 0x43fa65 ; ret
0x000000000043fb3e : jo 0x43fb9f ; ret
0x000000000043ff8f : jo 0x43fff0 ; ret
0x000000000043ff8e : jo 0x43fff1 ; ret
0x00000000004438ac : jo 0x44390d ; ret
0x000000000044af44 : jo 0x44afa5 ; ret
0x000000000044cb24 : jo 0x44caf3 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000044cb23 : jo 0x44caf4 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000044d259 : jo 0x44d2ba ; ret
0x0000000000456b37 : jo 0x456ac3 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000045c1d3 : jo 0x45c234 ; ret
0x000000000046b710 : jo 0x46b716 ; cli ; call qword ptr [rbx]
0x0000000000406b11 : jrcxz 0x406b82 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406ba3 : jrcxz 0x406c14 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448f38 : jrcxz 0x448f9e ; ret 0x8589
0x0000000000448f8c : jrcxz 0x448ff2 ; ret 0x8589
0x000000000044a444 : jrcxz 0x44a4aa ; ret 0x8fb9
0x000000000044a66f : jrcxz 0x44a6d5 ; ret 0x8fb9
0x0000000000406b51 : js 0x406b22 ; int1 ; mov cl, ch ; ret 0xf
0x000000000043ea36 : js 0x43ea4a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046701c : js 0x466fc4 ; ret
0x0000000000467063 : js 0x46700b ; ret
0x000000000046709d : js 0x467045 ; ret
0x000000000045c1fc : lahf ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f2ec : lahf ; ret 0xd284
0x000000000042fb3e : lcall ptr [rax] ; ret
0x000000000040cac7 : lea eax, dword ptr [0x40cce0] ; call 0x428d09
0x000000000040581a : leave ; ret 0x6a7d
0x000000000046b30f : ljmp ptr [rax - 0x5fffffd2] ; ret
0x000000000042fc92 : ljmp ptr [rcx] ; ret
0x0000000000421894 : ljmp ptr [rip + 0xf000000] ; xchg eax, ebp ; ret 0xd284
0x000000000042afde : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051582
0x000000000042afdd : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051583
0x0000000000449018 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x000000000044a605 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000455c80 : lodsb al, byte ptr [rsi] ; ret 0xfffa
0x000000000042b074 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000443efd : loop 0x443f2a ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000443efc : loop 0x443f2b ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045ba79 : loop 0x45bacb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000045bb61 : loop 0x45bbb3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000045c8f4 : loope 0x45c8fd ; movzx eax, cl ; pop rbp ; ret
0x0000000000408584 : loopne 0x40858d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b5bc : loopne 0x40b5c5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ba33 : loopne 0x40ba3c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422a66 : loopne 0x422a93 ; mov ch, -0x17 ; ret 0x38
0x0000000000426fd1 : loopne 0x426fda ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042700b : loopne 0x42705e ; add esp, 0x160 ; pop rbp ; ret
0x00000000004290e7 : loopne 0x4290f0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a380 : loopne 0x42a389 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a3a0 : loopne 0x42a3ee ; mov edi, dword ptr [rcx] ; call rax
0x000000000042a39f : loopne 0x42a3ef ; mov edi, dword ptr [rcx] ; call rax
0x000000000042a46c : loopne 0x42a475 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a504 : loopne 0x42a50d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004319b2 : loopne 0x431a02 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004319b1 : loopne 0x431a03 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000436a0e : loopne 0x436a17 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004404d3 : loopne 0x4404dc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000441b1f : loopne 0x441b72 ; add esp, 0x2d0 ; pop rbp ; ret
0x00000000004435f0 : loopne 0x4435f9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004439fc : loopne 0x443a4c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004439fb : loopne 0x443a4d ; add esp, 0x40 ; pop rbp ; ret
0x000000000044412f : loopne 0x44417f ; add esp, 0x40 ; pop rbp ; ret
0x000000000044412e : loopne 0x444180 ; add esp, 0x40 ; pop rbp ; ret
0x000000000044ce9e : loopne 0x44cea7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044e4a1 : loopne 0x44e4f4 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000457b3f : loopne 0x457b48 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000457ba0 : loopne 0x457baa ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000457d5f : loopne 0x457d66 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000458288 : loopne 0x4582bb ; push rbp ; ret
0x0000000000458287 : loopne 0x4582bc ; push rbp ; ret
0x00000000004583bc : loopne 0x4583ef ; push rsi ; ret
0x00000000004583bb : loopne 0x4583f0 ; push rsi ; ret
0x000000000045a227 : loopne 0x45a22e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045c5ac : loopne 0x45c5df ; ret
0x000000000045c5ab : loopne 0x45c5e0 ; ret
0x0000000000466cac : loopne 0x466cb5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046bd91 : mov ah, -5 ; call qword ptr [rdx]
0x000000000040f957 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000430807 : mov ah, 0x2d ; push rcx ; ret 0xe86c
0x0000000000430852 : mov ah, 0x2d ; push rdx ; ret 0xe86c
0x00000000004307d5 : mov ah, 0x2d ; xchg eax, ebp ; ret
0x0000000000430820 : mov ah, 0x2d ; xchg eax, esi ; ret
0x0000000000402b70 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043618d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042cf28 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004110d5 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041116b : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428bb5 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046694a : mov al, 0 ; call 0x401fe8
0x0000000000452606 : mov al, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000452648 : mov al, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x0000000000465ce3 : mov al, 0x2d ; ret 0xa414
0x0000000000436bcb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000466d6d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000466f1d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000467719 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000443efb : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a87f : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004296e1 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045cdbc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435e13 : mov al, ch ; xchg eax, edi ; ret 0xfffc
0x000000000045bc1f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000045bc1e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000045bb9f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000045bba3 : mov bh, -0x40 ; pop rbp ; ret
0x000000000046b305 : mov bh, -1 ; dec dword ptr [rax - 0x1fffffd2] ; ret 0xffff
0x000000000040c671 : mov byte ptr [0x66e510], al ; pop rbp ; ret
0x000000000045cee1 : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x0000000000460e11 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x000000000043e588 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f75f : mov byte ptr [rcx + 0xf], -0x6e ; ret 0x8041
0x0000000000460b99 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000402613 : mov byte ptr [rip + 0x26be3e], 1 ; ret
0x0000000000422a68 : mov ch, -0x17 ; ret 0x38
0x000000000046cd51 : mov ch, -3 ; jmp qword ptr [rbx]
0x0000000000420a66 : mov ch, 0x4e ; add al, -0x17 ; ret 0x58
0x0000000000406b54 : mov cl, ch ; ret 0xf
0x000000000042d3fd : mov dh, -0x39 ; pop rbp ; ret
0x0000000000412a19 : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045c8f7 : mov dh, -0x3f ; pop rbp ; ret
0x00000000004278e3 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040ae99 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fb37 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044e74b : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410758 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000463091 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ccd0 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000430027 : mov dh, 0x45 ; ret
0x0000000000467845 : mov dl, -0x47 ; ret
0x0000000000407191 : mov dl, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004221ea : mov dl, -1 ; std ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x00000000004416f0 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c64d : mov dword ptr [0x66e508], edi ; pop rbp ; ret
0x000000000040af36 : mov dword ptr [rax + 0x18], 0xffffffff ; pop rbp ; ret
0x0000000000455b3e : mov dword ptr [rax + 0x70], 0xe8e80004 ; ret
0x0000000000436887 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043664b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004367bf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042c189 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042c2fb : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000435f9c : mov dword ptr [rbp - 0x1e0], ecx ; call 0x402218
0x000000000044dd09 : mov dword ptr [rbp - 0x38], eax ; jmp 0x44de7b
0x0000000000402b6e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004083ff : mov dword ptr [rbp - 0x6c], eax ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044a71e : mov dword ptr [rbp - 0x7c], eax ; jmp 0x44aa36
0x0000000000427cb1 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x0000000000428aff : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000402927 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402955 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b35 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043ffcf : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000045cd99 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000045998e : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040aeec : mov dword ptr [rcx + 0x18], edx ; pop rbp ; ret
0x0000000000436a3d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045778f : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004116e7 : mov dword ptr [rcx], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043377c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000428cfa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000045c4b8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042d000 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040dcea : mov dword ptr [rsi + 8], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045f4be : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000421e74 : mov eax, 0xc7000044 ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdi
0x00000000004234ad : mov eax, 0xc7fffff7 ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x000000000043653f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044393b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c01d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cb5e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044361f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bcd6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043fff1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040db1c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004461cd : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045d097 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004460fb : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000443a3e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c4e7 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d230 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000433e81 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042751f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045e8ad : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045cee5 : mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x00000000004319b0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004439fa : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043058d : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000444245 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000436434 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004590af : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000043653c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044052d : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x0000000000436645 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c55a : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000044401f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427d6c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x00000000004367c1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044038a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000043f8db : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044b09a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf0d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000428801 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046613a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000458791 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044af3e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407b39 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004271dd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271fd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042721d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043ff6d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043ffad : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043ff8d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045ba3e : mov eax, edi ; pop rbp ; ret
0x00000000004292d1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc95 : mov eax, edx ; pop rbp ; ret
0x000000000045bba0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000426541 : mov eax, esi ; pop rbp ; ret
0x0000000000421c34 : mov ebp, 0xfffffdef ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045f371 : mov ebp, dword ptr [rip + 0x45c7fffa] ; in al, dx ; int1 ; ret
0x000000000040263b : mov ebp, esp ; call rax
0x00000000004025a1 : mov ebp, esp ; ja 0x4025ac ; pop rbp ; ret
0x0000000000458fcb : mov ebx, 0xb95f383e ; xchg dh, dh ; ret 0x3dc8
0x000000000040c623 : mov ecx, 0x48ffff58 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000429d6d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000436648 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000429cd5 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042a39e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042624c : mov ecx, dword ptr [rbp - 0x2708] ; call 0x4024d8
0x000000000041217c : mov ecx, dword ptr [rbp - 0x38] ; call rax
0x000000000045cd96 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000045badd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000045baad : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402635 : mov edi, 0x66de20 ; mov rbp, rsp ; call rax
0x00000000004025b2 : mov edi, 0x66e3e8 ; jmp rax
0x00000000004025f2 : mov edi, 0x66e3e8 ; jmp rdx
0x0000000000451263 : mov edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x44d529
0x0000000000435e11 : mov edi, dword ptr [rbp - 0x78] ; call 0x4020b5
0x000000000042cffc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004271d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427219 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043ff69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043ffa9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043ff89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000429d71 : mov edi, dword ptr [rcx] ; call rax
0x000000000045f4b8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004106ec : mov edi, eax ; call 0x40f9e9
0x00000000004532f6 : mov edi, eax ; call 0x45cdb8
0x00000000004686c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004686c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000420a2b : mov edx, 0x60b96c10 ; jmp qword ptr [rdi]
0x000000000041eb72 : mov edx, 0xc7000077 ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x00000000004125fe : mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040aee8 : mov edx, dword ptr [rbp - 0x18] ; mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x000000000040f020 : mov edx, dword ptr [rbp - 0x1c] ; call rax
0x000000000040f2e0 : mov edx, dword ptr [rbp - 0x1c] ; mov rsi, rcx ; call rax
0x0000000000412178 : mov edx, dword ptr [rbp - 0x2c] ; mov rcx, qword ptr [rbp - 0x38] ; call rax
0x000000000043fff5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402616 : mov esi, 0xf3010026 ; ret
0x00000000004125fb : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040f01d : mov esi, dword ptr [rbp - 0x18] ; mov edx, dword ptr [rbp - 0x1c] ; call rax
0x0000000000465e94 : mov esi, dword ptr [rbp - 0x20] ; call 0x402559
0x0000000000451267 : mov esi, dword ptr [rbp - 0x40] ; call 0x44d525
0x00000000004025f0 : mov esi, eax ; mov edi, 0x66e3e8 ; jmp rdx
0x00000000004590ac : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000427d69 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040f2e4 : mov esi, ecx ; call rax
0x000000000041f394 : mov esp, 0x1fffffd ; ret 0x9589
0x0000000000459ab3 : mov esp, 0x61cfa42d ; ret
0x0000000000459af5 : mov esp, 0x61cfa52d ; ret
0x0000000000463094 : mov esp, ebp ; pop rbp ; ret
0x000000000040c64c : mov qword ptr [0x66e508], rdi ; pop rbp ; ret
0x000000000040af35 : mov qword ptr [rax + 0x18], -1 ; pop rbp ; ret
0x0000000000407b34 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043ffce : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040aeeb : mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x0000000000436a3c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045778e : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004116e6 : mov qword ptr [rcx], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043377b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042cfff : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dce9 : mov qword ptr [rsi + 8], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045f4bd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000430806 : mov r12b, 0x2d ; push rcx ; ret 0xe86c
0x0000000000430851 : mov r12b, 0x2d ; push rdx ; ret 0xe86c
0x00000000004307d4 : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x000000000043081f : mov r12b, 0x2d ; xchg eax, esi ; ret
0x0000000000402b6f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000459ab2 : mov r12d, 0x61cfa42d ; ret
0x0000000000459af4 : mov r12d, 0x61cfa52d ; ret
0x0000000000452605 : mov r8b, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000452647 : mov r8b, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x0000000000465ce2 : mov r8b, 0x2d ; ret 0xa414
0x000000000044393a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c01c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cb5d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044361e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bcd5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043fff0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040db1b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000443a3d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c4e6 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d22f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000433e80 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042751e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004319af : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004439f9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000444244 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000436433 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004590ae : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000043653b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c559 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000427d6b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000043f8da : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000428800 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407b38 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004271dc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271fc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042721c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043ff6c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043ffac : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043ff8c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045ba3d : mov rax, rdi ; pop rbp ; ret
0x00000000004292d0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc94 : mov rax, rdx ; pop rbp ; ret
0x000000000040263a : mov rbp, rsp ; call rax
0x00000000004025a0 : mov rbp, rsp ; ja 0x4025ad ; pop rbp ; ret
0x0000000000429d6c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000429cd4 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042a39d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042624b : mov rcx, qword ptr [rbp - 0x2708] ; call 0x4024d9
0x000000000041217b : mov rcx, qword ptr [rbp - 0x38] ; call rax
0x000000000045cd95 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000435e10 : mov rdi, qword ptr [rbp - 0x78] ; call 0x4020b6
0x000000000042cffb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004271d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427218 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043ff68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043ffa8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043ff88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000429d70 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004532f5 : mov rdi, rax ; call 0x45cdb9
0x000000000040aee7 : mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x000000000043fff4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004125fa : mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040f01c : mov rsi, qword ptr [rbp - 0x18] ; mov edx, dword ptr [rbp - 0x1c] ; call rax
0x0000000000451266 : mov rsi, qword ptr [rbp - 0x40] ; call 0x44d526
0x00000000004025ef : mov rsi, rax ; mov edi, 0x66e3e8 ; jmp rdx
0x00000000004590ab : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000427d68 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040f2e3 : mov rsi, rcx ; call rax
0x0000000000463093 : mov rsp, rbp ; pop rbp ; ret
0x000000000046bd90 : mov spl, -5 ; call qword ptr [rdx]
0x000000000043f6ca : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000043f6cb : mov word ptr [rax + 0x3a], fs ; ret
0x00000000004226a0 : mov word ptr [rax + rax], dr1 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x000000000043ce1c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000467abe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040bac2 : movabs al, byte ptr [0x8948807d8b480046] ; ret 0xb0
0x0000000000423b89 : movabs dword ptr [0xfff67485c7000027], eax ; call rcx
0x000000000042ff2d : movabs eax, dword ptr [0x970fd8dde9df0003] ; ret 0xd284
0x0000000000424e8b : movabs eax, dword ptr [0xfff67485c7000014] ; jmp rax
0x000000000044056f : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000046b9ac : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x1e600000 ; cli ; call qword ptr [rsi]
0x0000000000408dc9 : movsb byte ptr [rdi], byte ptr [rsi] ; add esi, dword ptr [rdi] ; ret 0x8589
0x000000000040acde : movsb byte ptr [rdi], byte ptr [rsi] ; add esi, dword ptr [rdi] ; ret 0x8b48
0x000000000044259c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x442b16
0x000000000046bdac : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax - 0x4c], al ; sti ; call qword ptr [rdx]
0x0000000000411ac3 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000411cbb : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000430e3c : movsxd rax, ecx ; pop rbp ; ret
0x0000000000452846 : movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x00000000004278e2 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040ae98 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fb36 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044e74a : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410757 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000463090 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cccf : movzx eax, al ; pop rbp ; ret
0x000000000045bba2 : movzx eax, ax ; pop rbp ; ret
0x000000000042d3fc : movzx eax, bh ; pop rbp ; ret
0x0000000000412a18 : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045c8f6 : movzx eax, cl ; pop rbp ; ret
0x000000000042d3fb : movzx eax, dil ; pop rbp ; ret
0x00000000004296e2 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004296e3 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000046b6b0 : nop ; cli ; stc ; call qword ptr [rax]
0x000000000046ccb0 : nop ; je 0x46ccb3 ; call qword ptr [rbx]
0x00000000004686e8 : nop dword ptr [rax + rax] ; ret
0x0000000000425657 : or al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x000000000043ea37 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a233 : or al, 0x25 ; push rsi ; xchg eax, edi ; add al, r13b ; ret 0xff7e
0x000000000041f2ea : or al, 0xf ; lahf ; ret 0xd284
0x000000000041f311 : or al, 0xf ; xchg eax, esp ; ret 0xd284
0x000000000042afdb : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051585
0x0000000000400d50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004508c1 : or byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x0000000000407b16 : or byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045af4d : or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040e8fb : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000430df6 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000426329 : or byte ptr [rdi], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044caf9 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000046bd8d : or dword ptr [rax], eax ; add byte ptr [rax - 0x4c], al ; sti ; call qword ptr [rdx]
0x0000000000441c47 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004517d4 : or eax, 0x9db80000 ; ret
0x00000000004326df : or eax, 0xe9ffffff ; ret
0x0000000000409f5f : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000043fac1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045ba3b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000045bab1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042afda : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051586
0x000000000045ba3a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000435ef7 : out -0x47, eax ; ret 0x614e
0x000000000046d3d1 : out -2, al ; jmp qword ptr [rdi]
0x000000000042d3f9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000042653c : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000466f1f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000466d6f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045bab0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042e0f0 : out dx, eax ; ret
0x0000000000427989 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042b4b3 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004168b5 : outsd dx, dword ptr [rsi] ; ret
0x00000000004686dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004686de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043ed62 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004686e0 : pop r14 ; pop r15 ; ret
0x000000000043ed64 : pop r15 ; pop rbp ; ret
0x00000000004686e2 : pop r15 ; ret
0x0000000000416989 : pop r9 ; xlatb ; ret
0x0000000000467598 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000402612 : pop rbp ; mov byte ptr [rip + 0x26be3e], 1 ; ret
0x00000000004025b1 : pop rbp ; mov edi, 0x66e3e8 ; jmp rax
0x00000000004025ee : pop rbp ; mov rsi, rax ; mov edi, 0x66e3e8 ; jmp rdx
0x00000000004686db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004686df : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025a5 : pop rbp ; ret
0x000000000043ed61 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407b19 : pop rbx ; pop rbp ; ret
0x0000000000467844 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000416936 : pop rcx ; xlatb ; ret
0x00000000004220f4 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414f9d : pop rdi ; jmp qword ptr [rdi]
0x000000000043ed65 : pop rdi ; pop rbp ; ret
0x00000000004686e3 : pop rdi ; ret
0x000000000041cf41 : pop rdi ; ret 0x380c
0x0000000000467c8b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000422a65 : pop rdx ; loopne 0x422a94 ; mov ch, -0x17 ; ret 0x38
0x000000000040436f : pop rdx ; ret
0x000000000045ef5b : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000043ed63 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004686e1 : pop rsi ; pop r15 ; ret
0x00000000004168ff : pop rsi ; ret
0x0000000000418b71 : pop rsi ; ret 0x380c
0x00000000004686dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000438c72 : pop rsp ; ret
0x00000000004279a0 : pop rsp ; ret 0xf66
0x0000000000450e40 : popfq ; ret
0x0000000000467659 : popfq ; ret 0xd284
0x00000000004076b0 : push -0x17fffffc ; xlatb ; ret
0x000000000041696e : push -5 ; ret
0x000000000042186d : push qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043e45f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000043ff6e : push r8 ; pop rbp ; ret
0x0000000000425081 : push rax ; adc al, -0x7f ; ret 0x76c
0x000000000046cdf0 : push rax ; fdiv st(5), st(0) ; jmp qword ptr [rbx]
0x000000000046cd50 : push rax ; mov ch, -3 ; jmp qword ptr [rbx]
0x0000000000402b74 : push rax ; pop rbp ; ret
0x000000000042f917 : push rax ; ret
0x000000000046beb0 : push rax ; ret 0xfffb
0x00000000004238dc : push rax ; sbb al, -0x7f ; ret 1
0x000000000044ce62 : push rax ; sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000046c6f0 : push rax ; xor edi, ebp ; jmp qword ptr [rax]
0x0000000000442efb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000043fff6 : push rbp ; clc ; pop rbp ; ret
0x000000000040cc5c : push rbp ; fmul dword ptr [rax + 0x31] ; ret 0x8948
0x0000000000443803 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000410f87 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044d282 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000410f8b : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044d286 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000045f61e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000045755d : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x60
0x00000000004615d5 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004298e3 : push rbp ; fsubr st(1) ; ret 0
0x000000000043c598 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000043c77e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000043c824 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000043c852 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000043c920 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000043cab6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000040f2e1 : push rbp ; in al, 0x48 ; mov esi, ecx ; call rax
0x00000000004125ff : push rbp ; in al, dx ; call rcx
0x000000000044c7ed : push rbp ; inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000045a872 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000460e10 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000402634 : push rbp ; mov edi, 0x66de20 ; mov rbp, rsp ; call rax
0x00000000004531c4 : push rbp ; ret
0x000000000045411e : push rbp ; ret 0x893c
0x0000000000422fd7 : push rbp ; xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x000000000042b06e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000448f8b : push rbx ; jrcxz 0x448ff3 ; ret 0x8589
0x000000000044a443 : push rbx ; jrcxz 0x44a4ab ; ret 0x8fb9
0x000000000044a66e : push rbx ; jrcxz 0x44a6d6 ; ret 0x8fb9
0x0000000000452609 : push rbx ; ret 0x4589
0x000000000041ef17 : push rbx ; ret 0x76fb
0x000000000045264b : push rbx ; ret 0x8589
0x000000000045284c : push rbx ; ret 0x8948
0x000000000045c1fb : push rcx ; lahf ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041672d : push rcx ; ret 0
0x0000000000430809 : push rcx ; ret 0xe86c
0x000000000046ca11 : push rcx ; std ; jmp rdx
0x000000000041efda : push rdx ; jae 0x41efe6 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x0000000000448f37 : push rdx ; jrcxz 0x448f9f ; ret 0x8589
0x0000000000430854 : push rdx ; ret 0xe86c
0x000000000042264a : push rdx ; sti ; std ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x00000000004583be : push rsi ; ret
0x000000000041f32c : push rsi ; ret 0x48f3
0x000000000041f305 : push rsi ; ret 0x81f3
0x000000000041a622 : push rsi ; ret 0x89f3
0x000000000040a235 : push rsi ; xchg eax, edi ; add al, r13b ; ret 0xff7e
0x000000000044ff9a : pushfq ; ret
0x000000000040b0f7 : pushfq ; ret 0x8445
0x000000000041ec68 : pushfq ; ret 0xd284
0x000000000045baae : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000045bade : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044fe3c : rcr eax, cl ; ret
0x00000000004002e5 : ret
0x0000000000400d58 : ret 0
0x0000000000410f8f : ret 0x10
0x000000000044ca9d : ret 0x108
0x000000000044d28a : ret 0x110
0x0000000000461f3f : ret 0x110a
0x0000000000422bfc : ret 0x15b9
0x00000000004419e4 : ret 0x16e8
0x000000000042198d : ret 0x17
0x000000000044fa15 : ret 0x18
0x0000000000448ba7 : ret 0x1a
0x0000000000415d49 : ret 0x1b97
0x0000000000441b07 : ret 0x1ce9
0x000000000040aa7b : ret 0x20
0x000000000046774b : ret 0x2030
0x000000000042f3f1 : ret 0x205
0x000000000045f8c2 : ret 0x2106
0x0000000000456e69 : ret 0x21b9
0x0000000000403b57 : ret 0x25fa
0x00000000004023d2 : ret 0x26be
0x00000000004021d2 : ret 0x26bf
0x0000000000401fd2 : ret 0x26c0
0x000000000042798a : ret 0x280f
0x000000000042eb1a : ret 0x28b
0x000000000044dce2 : ret 0x294c
0x000000000040bc65 : ret 0x29b9
0x000000000043bf77 : ret 0x2a
0x000000000042f23f : ret 0x2b48
0x000000000043f296 : ret 0x2c1
0x0000000000446823 : ret 0x2c22
0x0000000000421a69 : ret 0x30
0x000000000041ce7e : ret 0x3573
0x0000000000422a6a : ret 0x38
0x0000000000418b72 : ret 0x380c
0x0000000000448a67 : ret 0x3bef
0x0000000000458fd2 : ret 0x3dc8
0x000000000041d6a1 : ret 0x3f
0x0000000000457b89 : ret 0x4172
0x000000000042206a : ret 0x42
0x00000000004186a2 : ret 0x4277
0x0000000000438eda : ret 0x43fa
0x000000000040bc21 : ret 0x4589
0x00000000004310b2 : ret 0x45bf
0x00000000004242e6 : ret 0x482b
0x0000000000458e6d : ret 0x487e
0x000000000040aac0 : ret 0x48a5
0x000000000041f32d : ret 0x48f3
0x000000000044d7ef : ret 0x4cb1
0x00000000004287b4 : ret 0x50e9
0x000000000044e7c6 : ret 0x5589
0x0000000000457602 : ret 0x56ad
0x0000000000420a6a : ret 0x58
0x000000000044b243 : ret 0x5e5
0x0000000000457561 : ret 0x60
0x0000000000435c9f : ret 0x614e
0x000000000041fa6a : ret 0x68
0x000000000041112e : ret 0x68b9
0x000000000040304b : ret 0x6a7d
0x000000000044148e : ret 0x6ce8
0x000000000044d49e : ret 0x709b
0x000000000040bdea : ret 0x7406
0x000000000041347e : ret 0x7494
0x0000000000425084 : ret 0x76c
0x000000000041342a : ret 0x76fb
0x0000000000440942 : ret 0x7961
0x000000000040b830 : ret 0x7ae8
0x0000000000441a02 : ret 0x7d81
0x000000000042f763 : ret 0x8041
0x000000000040aa78 : ret 0x8148
0x000000000040ab19 : ret 0x81a5
0x000000000041f306 : ret 0x81f3
0x000000000042b9e4 : ret 0x8348
0x0000000000456e26 : ret 0x83e9
0x000000000045c838 : ret 0x8423
0x0000000000405a36 : ret 0x8445
0x0000000000407b92 : ret 0x8589
0x0000000000407b62 : ret 0x858b
0x000000000041752d : ret 0x87
0x0000000000407e94 : ret 0x8705
0x000000000045b990 : ret 0x8900
0x0000000000419f93 : ret 0x8902
0x0000000000402671 : ret 0x8911
0x0000000000438d70 : ret 0x891a
0x000000000045c56e : ret 0x8923
0x000000000041900b : ret 0x892b
0x00000000004670fc : ret 0x8934
0x000000000045411f : ret 0x893c
0x0000000000418537 : ret 0x8945
0x000000000040aa39 : ret 0x8948
0x0000000000403634 : ret 0x8959
0x000000000045793c : ret 0x8972
0x00000000004587c8 : ret 0x897e
0x000000000042acdc : ret 0x897f
0x000000000044fb50 : ret 0x8999
0x0000000000408ad7 : ret 0x89a5
0x000000000045d0e1 : ret 0x89b6
0x0000000000458957 : ret 0x89c8
0x0000000000449019 : ret 0x89cc
0x000000000041761f : ret 0x89d4
0x00000000004486c0 : ret 0x89ec
0x000000000041a623 : ret 0x89f3
0x00000000004241b9 : ret 0x8b02
0x00000000004670d8 : ret 0x8b34
0x0000000000406bf2 : ret 0x8b48
0x0000000000405ccd : ret 0x8b59
0x000000000044a606 : ret 0x8bcc
0x00000000004487f2 : ret 0x8bec
0x000000000042279e : ret 0x8ce9
0x000000000044a446 : ret 0x8fb9
0x0000000000432d11 : ret 0x94e9
0x000000000041f399 : ret 0x9589
0x00000000004464dc : ret 0x979f
0x000000000043dbf0 : ret 0x9ae8
0x0000000000407e54 : ret 0x9e9
0x000000000042ecd5 : ret 0xa
0x000000000042833a : ret 0xa3b9
0x0000000000465ce5 : ret 0xa414
0x00000000004514bd : ret 0xa43c
0x000000000046658b : ret 0xa4be
0x00000000004648e6 : ret 0xa4e8
0x000000000042b019 : ret 0xa6e9
0x000000000043cc45 : ret 0xa9b9
0x00000000004157ee : ret 0xab1b
0x000000000041fb74 : ret 0xacb9
0x00000000004386c2 : ret 0xade6
0x0000000000403242 : ret 0xae96
0x000000000042e2b0 : ret 0xaf51
0x0000000000406636 : ret 0xb0
0x0000000000432d57 : ret 0xb60f
0x000000000045b9be : ret 0xb900
0x000000000043c3b0 : ret 0xb91a
0x0000000000429916 : ret 0xb948
0x000000000045d39b : ret 0xb9b6
0x0000000000464bd0 : ret 0xbae8
0x0000000000430b8f : ret 0xbbe8
0x0000000000434f63 : ret 0xbe9
0x000000000045f21e : ret 0xc
0x00000000004025d5 : ret 0xc148
0x0000000000455ac4 : ret 0xc609
0x0000000000414d25 : ret 0xc9
0x00000000004158e9 : ret 0xd23d
0x0000000000406461 : ret 0xd284
0x0000000000431c9d : ret 0xd384
0x000000000043e463 : ret 0xd4e9
0x0000000000435567 : ret 0xd549
0x000000000042afe2 : ret 0xdde9
0x000000000041298e : ret 0xde9
0x000000000040e904 : ret 0xe280
0x000000000043080a : ret 0xe86c
0x000000000045c8a2 : ret 0xe923
0x000000000041eb9b : ret 0xe945
0x000000000042b077 : ret 0xe97f
0x000000000045198f : ret 0xe999
0x000000000042222e : ret 0xe9d4
0x000000000043ea7c : ret 0xee8
0x0000000000428715 : ret 0xefe9
0x0000000000406b56 : ret 0xf
0x00000000004569ac : ret 0xf280
0x0000000000424dd9 : ret 0xf40
0x000000000043ce25 : ret 0xf41
0x00000000004279a1 : ret 0xf66
0x0000000000421b3f : ret 0xf6b9
0x00000000004357ec : ret 0xfb94
0x000000000041f42f : ret 0xfbe9
0x000000000043343a : ret 0xfcf0
0x000000000046588d : ret 0xfde8
0x00000000004295c6 : ret 0xff3
0x000000000040a23a : ret 0xff7e
0x000000000043c59b : ret 0xff9f
0x000000000043df3e : ret 0xffa5
0x000000000043c781 : ret 0xffbf
0x000000000043d1eb : ret 0xffc4
0x000000000043c827 : ret 0xffc5
0x000000000043c855 : ret 0xffd5
0x000000000040e7e1 : ret 0xffd8
0x000000000043d291 : ret 0xffd9
0x000000000043cab9 : ret 0xffe0
0x000000000043bb8e : ret 0xfffa
0x000000000040bcba : ret 0xfffb
0x0000000000435e16 : ret 0xfffc
0x0000000000426254 : ret 0xfffd
0x000000000044881d : ret 0xfffe
0x000000000042f8b3 : ret 0xffff
0x000000000040cad0 : ret 1
0x000000000040ab0d : ret 2
0x0000000000445d4a : ret 3
0x000000000043e577 : ret 4
0x0000000000441c78 : ret 5
0x000000000045038e : ret 6
0x00000000004246fc : ret 7
0x000000000040c424 : ret 8
0x0000000000455095 : ret 9
0x00000000004524e8 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000427c52 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429062 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410080 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000441b23 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004573ef : rol dh, 1 ; ret
0x000000000045c8f2 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004573ee : rol r14b, 1 ; ret
0x0000000000436646 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004025dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025eb ; pop rbp ; ret
0x0000000000463092 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000410759 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4107c2 ; ret
0x000000000044d255 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x44d2be ; ret
0x000000000040ae9a : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040fb38 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000042b1bb : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000457d5b : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x457d6a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045a223 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x45a232 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041007c : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436647 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000042556c : ror byte ptr [rip - 0x7a390000], 0x74 ; idiv bh ; jmp qword ptr [rbx]
0x0000000000443800 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000044ca02 : sahf ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000430bb2 : sahf ; ret
0x000000000040f95d : sahf ; ret 0xd284
0x000000000046d5f0 : sal bh, -2 ; call qword ptr [rsi]
0x000000000045329f : sal byte ptr [rbp - 0x47], 1 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x00000000004025ae : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408ca4
0x000000000046d5d0 : sal dh, -2 ; call qword ptr [rbx]
0x000000000044056a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000425656 : salc ; or al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x000000000045d85e : salc ; ret
0x00000000004108f5 : sar byte ptr [rdi], 1 ; ret
0x00000000004534c3 : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000421987 : sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000435ef4 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x0000000000410940 : sar dword ptr [rdi], 1 ; ret
0x00000000004025de : sar eax, 1 ; jne 0x4025e9 ; pop rbp ; ret
0x000000000046b5f1 : sar ecx, 1 ; jmp qword ptr [rbx]
0x00000000004025dd : sar rax, 1 ; jne 0x4025ea ; pop rbp ; ret
0x00000000004238dd : sbb al, -0x7f ; ret 1
0x000000000045cee3 : sbb al, 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000045cdbe : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000046ae21 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xfffc
0x000000000043f6f9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044e89a : sbb cl, bl ; xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000046cded : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x24], dl ; std ; jmp qword ptr [rbx]
0x000000000046cd4d : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x4b], dl ; std ; jmp qword ptr [rbx]
0x00000000004433e3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000046cd4c : sbb dword ptr [rax], r8d ; add byte ptr [rax - 0x4b], dl ; std ; jmp qword ptr [rbx]
0x000000000043cc3e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004120a0 : sbb eax, 0xa5b9bfaf ; ret
0x000000000044e89d : sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x00000000004338d9 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004103ff : scasd eax, dword ptr [rdi] ; jmp 0x410578
0x000000000040ccca : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045eae5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cccc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000046d370 : shl ch, -2 ; jmp rax
0x000000000046d3d0 : shl dh, -2 ; jmp qword ptr [rdi]
0x00000000004279bf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000045badf : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000045ba78 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000451269 : shr al, -0x4f ; ret 0xffff
0x0000000000451311 : shr al, 9 ; ret 0xffff
0x000000000042e320 : shr byte ptr [rsi + 0xe], cl ; ret
0x000000000042dfd8 : shr dword ptr [rsi + 0xe], 1 ; ret
0x000000000045baaf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000045ba38 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000456b39 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000046a9f6 : stc ; call qword ptr [rax]
0x000000000046b5f2 : stc ; jmp qword ptr [rbx]
0x000000000046ccb2 : std ; call qword ptr [rbx]
0x000000000046c852 : std ; call qword ptr [rdx]
0x000000000046c952 : std ; call qword ptr [rsi]
0x000000000046caf2 : std ; call rdx
0x000000000046c992 : std ; call rsp
0x000000000042264c : std ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x00000000004221ec : std ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000046c6f2 : std ; jmp qword ptr [rax]
0x000000000046cd52 : std ; jmp qword ptr [rbx]
0x000000000046c5d2 : std ; jmp qword ptr [rdx]
0x000000000046ca12 : std ; jmp rdx
0x000000000046bd92 : sti ; call qword ptr [rdx]
0x000000000046be92 : sti ; call rax
0x000000000044ce63 : sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000046be72 : sti ; jmp rsi
0x000000000041696f : sti ; ret
0x00000000004168c7 : sti ; ret 0x8589
0x000000000041fb73 : sti ; ret 0xacb9
0x000000000042264b : sti ; std ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000417186 : stosd dword ptr [rdi], eax ; ret
0x00000000004141d5 : sub al, -0x4d ; ret
0x00000000004168c5 : sub al, 0x28 ; sti ; ret 0x8589
0x0000000000439c87 : sub al, 0x38 ; ret 0x8589
0x000000000043cc43 : sub al, 0x38 ; ret 0xa9b9
0x000000000045854c : sub al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000432e48 : sub al, 0x61 ; ret
0x0000000000423859 : sub al, byte ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000405702 : sub bh, dh ; ret 0x8959
0x0000000000405ccb : sub bh, dh ; ret 0x8b59
0x00000000004168c6 : sub bl, bh ; ret 0x8589
0x000000000041fb72 : sub bl, bh ; ret 0xacb9
0x0000000000440570 : sub cl, al ; pop rbp ; ret
0x000000000045f372 : sub eax, 0x45c7fffa ; in al, dx ; int1 ; ret
0x0000000000423542 : sub eax, 0xbcb80000 ; push -5 ; ret
0x0000000000421895 : sub eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x000000000042653b : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x0000000000403632 : sub esi, edi ; ret 0x8959
0x0000000000468769 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000468768 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040af84 : sysenter
0x000000000045af4b : test ah, ah ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000045eef1 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000442f1b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004639f9 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x00000000004360d6 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045e5d8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044d50b : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042abe4 : test al, 0x2d ; call 0xffffffff8a05118a
0x000000000042abe3 : test al, 0x2d ; call 0xffffffff8a05118b
0x000000000042ac29 : test al, 0x2d ; jmp 0xffffffff8a0511cf
0x000000000042ac28 : test al, 0x2d ; jmp 0xffffffff8a0511d0
0x000000000042aecc : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042acd8 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000046143d : test al, 0x45 ; jmp 0x461899
0x000000000043f8dd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000045411d : test al, 0x55 ; ret 0x893c
0x00000000004284eb : test al, 0x70 ; ret 0x4589
0x00000000004287b2 : test al, 0x70 ; ret 0x50e9
0x0000000000428713 : test al, 0x70 ; ret 0xefe9
0x0000000000442df8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000044eede : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044de68 : test byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004686ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046bd8c : test byte ptr [rcx], cl ; add byte ptr [rax], al ; mov spl, -5 ; call qword ptr [rdx]
0x000000000040f564 : test byte ptr [rdi], cl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000415574 : test byte ptr [rdx], bl ; ret 0
0x0000000000441c45 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000046c98c : test byte ptr [rip + 0x38300000], dl ; std ; call rsp
0x0000000000447dc4 : test ch, cl ; ret
0x0000000000430e36 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004331b1 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000414074 : test dl, ah ; ret
0x000000000041556e : test dword ptr [rax + 0xfffffef], edx ; test byte ptr [rdx], bl ; ret 0
0x000000000041406e : test dword ptr [rax + 0xffffff2], edx ; test dl, ah ; ret
0x000000000042f975 : test dword ptr [rax - 0x75], 0x89488045 ; ret 0x8148
0x000000000040c48a : test dword ptr [rax], edi ; imul eax, dword ptr [rsi + 0xfc44589], -0x7c ; ret 0
0x0000000000408507 : test dword ptr [rbp + rdi*8 - 1], ecx ; jmp rsi
0x00000000004168bf : test dword ptr [rbp + rsi*8 + 0x2c2dffff], ecx ; sub bl, bh ; ret 0x8589
0x0000000000416913 : test dword ptr [rbp + rsi*8 + 0x2d2dffff], ecx ; sub bl, bh ; ret 0x8589
0x000000000041ce77 : test dword ptr [rbp + rsi*8 + 0x2dffff], ecx ; ret 0x3573
0x000000000041692f : test dword ptr [rbp + rsi*8 + 0x4e2dffff], ecx ; pop rcx ; xlatb ; ret
0x0000000000416983 : test dword ptr [rbp + rsi*8 + 0x4f2dffff], ecx ; pop rcx ; xlatb ; ret
0x0000000000418b6b : test dword ptr [rbp + rsi*8 + 0x5e2dffff], ecx ; ret 0x380c
0x0000000000414f97 : test dword ptr [rbp + rsi*8 + 0x5f2dffff], ecx ; jmp qword ptr [rdi]
0x000000000041cf3b : test dword ptr [rbp + rsi*8 + 0x5f2dffff], ecx ; ret 0x380c
0x0000000000414feb : test dword ptr [rbp + rsi*8 + 0x602dffff], ecx ; jmp qword ptr [rdi]
0x000000000041852f : test dword ptr [rbp + rsi*8 + 0x642dffff], ecx ; ret 0x8945
0x000000000041d577 : test dword ptr [rbp + rsi*8 + 0x652dffff], ecx ; ret 0x8945
0x000000000041d40b : test dword ptr [rbp + rsi*8 - 0x23d20001], ecx ; ret 0x4277
0x000000000041869b : test dword ptr [rbp + rsi*8 - 0x24d20001], ecx ; ret 0x4277
0x00000000004171d3 : test dword ptr [rbp + rsi*8 - 0x39d20001], ecx ; stosd dword ptr [rdi], eax ; ret
0x000000000041717f : test dword ptr [rbp + rsi*8 - 0x3ad20001], ecx ; stosd dword ptr [rdi], eax ; ret
0x00000000004169bb : test dword ptr [rbp + rsi*8 - 0x43d20001], ecx ; push -5 ; ret
0x0000000000416967 : test dword ptr [rbp + rsi*8 - 0x44d20001], ecx ; push -5 ; ret
0x0000000000416833 : test dword ptr [rbp + rsi*8 - 0x4ad20001], ecx ; add byte ptr [rax], bl ; ret 0x8589
0x00000000004167df : test dword ptr [rbp + rsi*8 - 0x4bd20001], ecx ; add byte ptr [rax], bl ; ret 0x8589
0x000000000041e33f : test dword ptr [rbp + rsi*8 - 0x57d20001], ecx ; ret
0x000000000041397f : test dword ptr [rbp + rsi*8 - 0x58d20001], ecx ; ret
0x000000000041b46f : test dword ptr [rbp + rsi*8 - 0x59d20001], ecx ; ret
0x000000000041a637 : test dword ptr [rbp + rsi*8 - 0x5ad20001], ecx ; ret
0x000000000041e72f : test dword ptr [rbp + rsi*8 - 0x68d20001], ecx ; ret 0x7494
0x0000000000413477 : test dword ptr [rbp + rsi*8 - 0x69d20001], ecx ; ret 0x7494
0x000000000041b48b : test dword ptr [rbp + rsi*8 - 0x7d20001], ecx ; push rsi ; ret 0x89f3
0x000000000041583b : test dword ptr [rbp + rsi*8 - 0x7d20001], ecx ; ret 0xab1b
0x000000000041a61b : test dword ptr [rbp + rsi*8 - 0x8d20001], ecx ; push rsi ; ret 0x89f3
0x00000000004157e7 : test dword ptr [rbp + rsi*8 - 0x8d20001], ecx ; ret 0xab1b
0x000000000041e783 : test dword ptr [rbp + rsi*8 - 0xcd20001], ecx ; ret 0x76fb
0x0000000000413423 : test dword ptr [rbp + rsi*8 - 0xdd20001], ecx ; ret 0x76fb
0x000000000041d69a : test dword ptr [rbx*8 - 0x7bf00001], ebx ; ret 0x3f
0x000000000044c6ff : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000436274 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000435eda : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000044cbfd : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x000000000042f34f : test dword ptr [rdi + rdi*8 - 1], ebp ; inc ecx ; clc ; add dword ptr [rcx], eax ; ret 0x9589
0x000000000044c7f0 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000044ca07 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000044cafd : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000442f00 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000442c68 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004630cc : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x00000000004638ba : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000441aff : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x441acd ; ret 0x1ce9
0x0000000000463afd : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000046388f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004326de : test dword ptr [rip - 0x16000001], ecx ; ret
0x000000000046440e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000435a20 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x00000000004359b0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000422fbe : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rax]
0x000000000042264f : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000420804 : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdi]
0x000000000041f3c4 : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000420cdc : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rsi]
0x000000000041efdf : test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x0000000000421f36 : test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x0000000000420af2 : test dword ptr [rsi + rsi*8 - 1], esi ; call rcx
0x0000000000422703 : test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x0000000000423a98 : test dword ptr [rsi + rsi*8 - 1], esi ; call rsp
0x000000000041f25d : test dword ptr [rsi + rsi*8 - 1], esi ; dec dword ptr [rdi + 0x59] ; xlatb ; ret
0x00000000004221ef : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000425571 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rbx]
0x00000000004206d7 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x000000000041eb28 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x00000000004251c4 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000422227 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi - 0x162b3d38]
0x0000000000424e81 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000424e90 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rax
0x0000000000422b8a : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rcx
0x0000000000421e79 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdi
0x000000000042343c : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x00000000004226a5 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x000000000041ef13 : test dword ptr [rsi + rsi*8 - 1], esi ; push rbx ; ret 0x76fb
0x0000000000458955 : test esi, esi ; ret 0x89c8
0x0000000000447dc3 : test r13b, r9b ; ret
0x00000000004049c6 : wait ; pop rdx ; ret
0x000000000040c48d : xchg byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000458fd0 : xchg dh, dh ; ret 0x3dc8
0x00000000004589a0 : xchg dh, dh ; ret 0x89c8
0x000000000041f393 : xchg eax, ebp ; mov esp, 0x1fffffd ; ret 0x9589
0x000000000040caf3 : xchg eax, ebp ; ret
0x0000000000406587 : xchg eax, ebp ; ret 0x8445
0x0000000000406876 : xchg eax, ebp ; ret 0xd284
0x000000000040e903 : xchg eax, ebp ; ret 0xe280
0x0000000000421986 : xchg eax, ebp ; sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000045eae6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004662bb : xchg eax, ebx ; ret
0x00000000004051de : xchg eax, ebx ; ret 0x25fa
0x000000000042baf9 : xchg eax, ebx ; ret 0xd284
0x0000000000439c6b : xchg eax, ecx ; ret
0x000000000040a236 : xchg eax, edi ; add al, r13b ; ret 0xff7e
0x000000000041e735 : xchg eax, edi ; ret 0x7494
0x00000000004110db : xchg eax, edi ; ret 0xd284
0x0000000000435e15 : xchg eax, edi ; ret 0xfffc
0x0000000000439dbb : xchg eax, edx ; ret
0x0000000000403b56 : xchg eax, edx ; ret 0x25fa
0x000000000042f762 : xchg eax, edx ; ret 0x8041
0x000000000042f4c4 : xchg eax, edx ; ret 0xd284
0x000000000042f3ea : xchg eax, edx ; ret 0xe280
0x0000000000430822 : xchg eax, esi ; ret
0x0000000000416dbd : xchg eax, esi ; ret 0
0x000000000041347d : xchg eax, esi ; ret 0x7494
0x0000000000406460 : xchg eax, esi ; ret 0xd284
0x0000000000408401 : xchg eax, esp ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000436c53 : xchg eax, esp ; ret
0x0000000000405a35 : xchg eax, esp ; ret 0x8445
0x00000000004065db : xchg eax, esp ; ret 0xd284
0x0000000000456a6c : xchg eax, esp ; ret 0xe280
0x00000000004569ab : xchg eax, esp ; ret 0xf280
0x000000000045c8f1 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000044e89c : xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000040cccb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408400 : xchg eax, r12d ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045ba3c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x00000000004076b5 : xlatb ; ret
0x000000000046c811 : xor al, 0xfffffffffffffffd ; jmp qword ptr [rdx]
0x0000000000423f01 : xor bh, 0xff ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042aece : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042b075 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004532a2 : xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x000000000046caf0 : xor byte ptr [rax - 3], ch ; call rdx
0x000000000046c990 : xor byte ptr [rax], bh ; std ; call rsp
0x00000000004532a3 : xor byte ptr [rbx], dh ; in eax, -0x76 ; push rbp ; ret
0x000000000046c5d0 : xor byte ptr [rcx], 0xfd ; jmp qword ptr [rdx]
0x000000000043374c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000455c7b : xor byte ptr [rip - 0x53180000], dl ; ret 0xfffa
0x000000000046b810 : xor byte ptr [rsi], cl ; cli ; call qword ptr [rsi]
0x000000000042acda : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000043fbf7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000422fba : xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rax]
0x0000000000422fd8 : xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x000000000046c5d1 : xor ebp, edi ; jmp qword ptr [rdx]
0x000000000046c6f1 : xor edi, ebp ; jmp qword ptr [rax]
0x00000000004367bd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
