0x0000000000435cbd : adc al, byte ptr [rax] ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x0000000000423774 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004236b3 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000435cdc : adc al, byte ptr fs:[rax] ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x0000000000435260 : adc bl, bh ; std ; jmp qword ptr [rax]
0x00000000004345cd : adc byte ptr [rax], al ; add ah, ch ; and dh, bh ; jmp rsp
0x000000000041ab7c : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434b20 : adc dh, dl ; cld ; jmp rax
0x0000000000416bfb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414349 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000435cbc : adc r8b, byte ptr [rax] ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x0000000000434e5b : add ah, ah ; add eax, dword ptr [rax] ; add byte ptr [rax], ah ; push rsp ; std ; call qword ptr [rsi]
0x00000000004345cf : add ah, ch ; and dh, bh ; jmp rsp
0x000000000043458f : add ah, ch ; or edi, esi ; jmp rsp
0x000000000043454f : add ah, ch ; or esi, edi ; jmp rsp
0x00000000004343cf : add ah, cl ; and ch, bh ; jmp rsp
0x0000000000419713 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000434ebd : add al, 0 ; add byte ptr [rax], al ; push rdi ; std ; call qword ptr [rsi]
0x00000000004210ea : add al, 0x15 ; ret
0x00000000004293c7 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043537c : add al, 9 ; add byte ptr [rax], al ; and ah, bh ; std ; jmp qword ptr [rdx]
0x0000000000434dff : add al, al ; std ; call qword ptr [rax]
0x0000000000435cbf : add al, al ; sub bh, bh ; call qword ptr [rdx]
0x0000000000419909 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x00000000004063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416423 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041bbf0 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041f0b7 : add al, ch ; ret
0x00000000004316b8 : add al, ch ; ret 0xfd00
0x000000000041e8b8 : add al, ch ; ret 0xfe2e
0x000000000040b0f8 : add al, ch ; ret 0xff67
0x000000000040586c : add al, ch ; scasb al, byte ptr [rdi] ; ret 0xffff
0x00000000004364df : add al, dh ; ret 0xffff
0x000000000042c621 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041940d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000041990b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000419715 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000041980b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000041681e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416586 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000432c8f : add bl, dh ; ret
0x0000000000403d75 : add byte ptr [r8 - 0x77], cl ; ret 0x21e8
0x0000000000403db1 : add byte ptr [r8 - 0x77], cl ; ret 0xe5e8
0x000000000042c72a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000434b1b : add byte ptr [rax + rax - 0x29f00000], ah ; cld ; jmp rax
0x000000000043470f : add byte ptr [rax + rax*8 - 2], cl ; jmp rsp
0x000000000043488f : add byte ptr [rax + rsi*2 - 1], cl ; jmp rsp
0x000000000040af55 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x433c
0x0000000000403d76 : add byte ptr [rax - 0x77], cl ; ret 0x21e8
0x0000000000403db2 : add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x000000000043513f : add byte ptr [rax - 7], al ; std ; jmp qword ptr [rdx]
0x000000000043537f : add byte ptr [rax], ah ; cld ; std ; jmp qword ptr [rdx]
0x0000000000434e5f : add byte ptr [rax], ah ; push rsp ; std ; call qword ptr [rsi]
0x0000000000435cda : add byte ptr [rax], al ; adc al, byte ptr fs:[rax] ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x000000000043525e : add byte ptr [rax], al ; adc bl, bh ; std ; jmp qword ptr [rax]
0x0000000000434b1e : add byte ptr [rax], al ; adc dh, dl ; cld ; jmp rax
0x0000000000435cba : add byte ptr [rax], al ; adc r8b, byte ptr [rax] ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x0000000000434eba : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; push rdi ; std ; call qword ptr [rsi]
0x000000000043537a : add byte ptr [rax], al ; add al, 9 ; add byte ptr [rax], al ; and ah, bh ; std ; jmp qword ptr [rdx]
0x000000000042c72b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041681c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416584 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000432c8d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000432c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004038b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000432c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000434b1d : add byte ptr [rax], al ; add byte ptr [rax], dl ; salc ; cld ; jmp rax
0x000000000041cee2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041d21b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000041408e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428097 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000429431 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000401d17 : add byte ptr [rax], al ; add byte ptr [rbx + 0x512df045], cl ; ret 0x9352
0x000000000041c96a : add byte ptr [rax], al ; add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000424f93 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552de045], cl ; ret
0x00000000004250c7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de045], cl ; ret
0x00000000004290bf : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000404461 : add byte ptr [rax], al ; add byte ptr [rbx + 0x762dc445], cl ; hlt ; ret
0x000000000041a1a6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x0000000000406066 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d237bb], cl ; ret
0x000000000041cca3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000432379 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004322f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040ad33 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d23bbb], cl ; ret
0x000000000041b65f : add byte ptr [rax], al ; add byte ptr [rbx - 0x69172783], cl ; ret
0x000000000041796f : add byte ptr [rax], al ; add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x0000000000420045 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c6b845], cl ; ret
0x00000000004301be : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041b3aa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000405e13 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004248b2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405bbd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000417a0d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000434ebe : add byte ptr [rax], al ; add byte ptr [rdi - 3], dl ; call qword ptr [rsi]
0x0000000000432435 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041ff96 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000430955 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bf9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406219 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041997a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041671a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040bf7f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403e71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405daf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004236b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004364d9 : add byte ptr [rax], al ; add byte ptr [rdx + rbx], ah ; add al, dh ; ret 0xffff
0x0000000000431c3d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041434b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413db0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417c68 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416bfd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426bfa : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbp ; ret
0x0000000000414307 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043537e : add byte ptr [rax], al ; and ah, bh ; std ; jmp qword ptr [rdx]
0x00000000004314fd : add byte ptr [rax], al ; call 0x401788
0x0000000000434d5a : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; mov al, 0x42 ; std ; call qword ptr [rax]
0x000000000043525a : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; adc bl, bh ; std ; jmp qword ptr [rax]
0x00000000004345ce : add byte ptr [rax], al ; in al, dx ; and dh, bh ; jmp rsp
0x000000000043458e : add byte ptr [rax], al ; in al, dx ; or edi, esi ; jmp rsp
0x000000000043454e : add byte ptr [rax], al ; in al, dx ; or esi, edi ; jmp rsp
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x000000000040204b : add byte ptr [rax], al ; jmp 0x40212f
0x0000000000431c39 : add byte ptr [rax], al ; jmp 0x431c48
0x00000000004328a9 : add byte ptr [rax], al ; jmp 0x4328b8
0x000000000043488e : add byte ptr [rax], al ; jo 0x434897 ; jmp rsp
0x0000000000434d5e : add byte ptr [rax], al ; mov al, 0x42 ; std ; call qword ptr [rax]
0x0000000000434e1e : add byte ptr [rax], al ; mov al, 0x4f ; std ; call qword ptr [rsi]
0x0000000000431a4c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004319cd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004360df : add byte ptr [rax], al ; mov bh, bh ; call qword ptr [rsi]
0x0000000000432ab7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042707d : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x00000000004360bf : add byte ptr [rax], al ; mov edi, edi ; call qword ptr [rbx]
0x000000000040a8c9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000428acc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b869 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000417e7c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004043de : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000043480e : add byte ptr [rax], al ; mov word ptr [rdi - 1], es ; jmp rsp
0x0000000000434b1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], dl ; salc ; cld ; jmp rax
0x000000000043541a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; add dh, bh ; jmp rdx
0x0000000000434dbe : add byte ptr [rax], al ; nop ; std ; call qword ptr [rbx]
0x0000000000403f07 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041408f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413d68 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000435c3e : add byte ptr [rax], al ; push rax ; and edi, edi ; jmp qword ptr [rcx]
0x00000000004364be : add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000434ebf : add byte ptr [rax], al ; push rdi ; std ; call qword ptr [rsi]
0x000000000043444e : add byte ptr [rax], al ; pushfq ; pop rdx ; std ; jmp rsp
0x000000000043460e : add byte ptr [rax], al ; pushfq ; sub bh, dh ; jmp rsp
0x0000000000432c8e : add byte ptr [rax], al ; ret
0x0000000000434d1e : add byte ptr [rax], al ; sar byte ptr [rdi], -3 ; jmp qword ptr [rdx]
0x00000000004364da : add byte ptr [rax], al ; sbb al, byte ptr fs:[rax] ; add al, dh ; ret 0xffff
0x0000000000435cbe : add byte ptr [rax], al ; shr byte ptr [rdx], -1 ; call qword ptr [rdx]
0x000000000043513e : add byte ptr [rax], al ; stc ; std ; jmp qword ptr [rdx]
0x000000000043448e : add byte ptr [rax], al ; sub al, 0x6f ; std ; jmp rsp
0x00000000004344ce : add byte ptr [rax], al ; sub al, 0x7a ; std ; jmp rsp
0x0000000000435cfa : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add byte ptr [rax], al ; shr byte ptr [rdx], -1 ; call qword ptr [rdx]
0x000000000043541f : add byte ptr [rax], dh ; add dh, bh ; jmp rdx
0x0000000000434b1f : add byte ptr [rax], dl ; salc ; cld ; jmp rax
0x000000000043525f : add byte ptr [rax], dl ; sti ; std ; jmp qword ptr [rax]
0x000000000041cee4 : add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041d90c : add byte ptr [rbx + 0x182d8445], cl ; ret
0x0000000000429a95 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000429ad7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x00000000004308ef : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x4308d7 ; ret
0x000000000041d21d : add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000041d5d3 : add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x0000000000414090 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c921 : add byte ptr [rbx + 0x42d8445], cl ; ret 0xa43c
0x0000000000428099 : add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000429433 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x0000000000401d19 : add byte ptr [rbx + 0x512df045], cl ; ret 0x9352
0x000000000041c96c : add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000424f95 : add byte ptr [rbx + 0x552de045], cl ; ret
0x00000000004250c9 : add byte ptr [rbx + 0x562de045], cl ; ret
0x0000000000417987 : add byte ptr [rbx + 0x5d2dd045], cl ; test al, -2 ; ret 0x4589
0x0000000000413d69 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004290c1 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000404463 : add byte ptr [rbx + 0x762dc445], cl ; hlt ; ret
0x000000000041a1a8 : add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x0000000000434dfb : add byte ptr [rbx + rax + 0x4dc00000], al ; std ; call qword ptr [rax]
0x0000000000434e1b : add byte ptr [rbx + rax + 0x4fb00000], ah ; std ; call qword ptr [rsi]
0x0000000000406068 : add byte ptr [rbx - 0x15d237bb], cl ; ret
0x000000000041f355 : add byte ptr [rbx - 0x20d24fbb], cl ; push rbx ; ret 0x8589
0x000000000041f313 : add byte ptr [rbx - 0x21d24fbb], cl ; push rbx ; ret 0x4589
0x000000000041db4b : add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000041cca5 : add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x000000000043237b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004322f7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040ad35 : add byte ptr [rbx - 0x68d23bbb], cl ; ret
0x000000000041b661 : add byte ptr [rbx - 0x69172783], cl ; ret
0x0000000000417971 : add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x000000000040498c : add byte ptr [rbx - 0xfb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404b52 : add byte ptr [rbx - 0xff4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000420047 : add byte ptr [rcx + 0x45c6b845], cl ; ret
0x00000000004194ef : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004301c0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041b3ac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000405e15 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004248b4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405bbf : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041fee2 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004348cf : add byte ptr [rcx + rbx*4 - 1], bh ; jmp rsp
0x000000000043537b : add byte ptr [rcx + rcx], al ; add byte ptr [rax], al ; and ah, bh ; std ; jmp qword ptr [rdx]
0x0000000000404b88 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c98 : add byte ptr [rcx], al ; ret
0x0000000000417a0f : add byte ptr [rcx], bh ; ret 0xf40
0x000000000043448f : add byte ptr [rdi + rbp*2], ch ; std ; jmp rsp
0x0000000000434ec0 : add byte ptr [rdi - 3], dl ; call qword ptr [rsi]
0x0000000000432437 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041ff98 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000430957 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bf9f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004038b9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040621b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041997c : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041671c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040bf81 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403e73 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405db1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004236b9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000434d1b : add byte ptr [rdx + rax + 0x3fc00000], ah ; std ; jmp qword ptr [rdx]
0x00000000004364db : add byte ptr [rdx + rbx], ah ; add al, dh ; ret 0xffff
0x00000000004344cf : add byte ptr [rdx + rdi*2], ch ; std ; jmp rsp
0x0000000000435cdb : add byte ptr [rdx + rdx], ah ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x0000000000435cbb : add byte ptr [rdx + rdx], al ; add al, al ; sub bh, bh ; call qword ptr [rdx]
0x000000000042038e : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428f4d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004360db : add byte ptr [rsi + rdx], ah ; add byte ptr [rax], al ; mov bh, bh ; call qword ptr [rsi]
0x00000000004360bb : add byte ptr [rsi + rdx], al ; add byte ptr [rax], al ; mov edi, edi ; call qword ptr [rbx]
0x0000000000434ebb : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; push rdi ; std ; call qword ptr [rsi]
0x000000000041aa0b : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000415569 : add cl, ch ; ret
0x0000000000431c3f : add cl, ch ; ret 0
0x00000000004053ec : add cl, ch ; ret 1
0x0000000000435421 : add dh, bh ; jmp rdx
0x000000000042e9aa : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041f0b5 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000004316b6 : add dword ptr [rax], eax ; add al, ch ; ret 0xfd00
0x000000000042c61f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000414305 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414a2a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415416 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f0b4 : add dword ptr [rax], r8d ; add al, ch ; ret
0x00000000004283e5 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000428e91 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000416b30 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004086cf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417a37 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b459 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419f62 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000427570 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000401c94 : add eax, 0x23569e ; add ebx, esi ; ret
0x000000000042384a : add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000434dfd : add eax, dword ptr [rax] ; add al, al ; std ; call qword ptr [rax]
0x000000000040af53 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x433c
0x0000000000434e5d : add eax, dword ptr [rax] ; add byte ptr [rax], ah ; push rsp ; std ; call qword ptr [rsi]
0x000000000041db49 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x00000000004293c9 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c5b : add eax, edx ; sar rax, 1 ; jne 0x401c6c ; pop rbp ; ret
0x0000000000401c99 : add ebx, esi ; ret
0x0000000000435a61 : add edi, edi ; jmp qword ptr [rsi]
0x0000000000401f7b : add esp, 0x10 ; pop rbp ; ret
0x0000000000404b86 : add esp, 0x100 ; pop rbp ; ret
0x000000000041ab7a : add esp, 0x110 ; pop rbp ; ret
0x0000000000414a27 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004042b8 : add esp, 0x120 ; pop rbp ; ret
0x000000000041c197 : add esp, 0x140 ; pop rbp ; ret
0x000000000042e56e : add esp, 0x160 ; pop rbp ; ret
0x0000000000428e96 : add esp, 0x18 ; pop rbp ; ret
0x00000000004169dc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000408604 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000406413 : add esp, 0x20 ; pop rbp ; ret
0x000000000042038c : add esp, 0x200 ; pop rbp ; ret
0x0000000000405fac : add esp, 0x270 ; pop rbp ; ret
0x00000000004304c3 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000419bac : add esp, 0x2e0 ; pop rbp ; ret
0x00000000004086d4 : add esp, 0x30 ; pop rbp ; ret
0x0000000000407cbb : add esp, 0x370 ; pop rbp ; ret
0x0000000000403f03 : add esp, 0x380 ; pop rbp ; ret
0x000000000040aa37 : add esp, 0x40 ; pop rbp ; ret
0x0000000000426bfd : add esp, 0x48 ; pop rbp ; ret
0x000000000041f1f6 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000402122 : add esp, 0x50 ; pop rbp ; ret
0x0000000000423eb7 : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000401f29 : add esp, 0x60 ; pop rbp ; ret
0x0000000000408cd1 : add esp, 0x70 ; pop rbp ; ret
0x000000000040623a : add esp, 0x80 ; pop rbp ; ret
0x000000000040a266 : add esp, 0x90 ; pop rbp ; ret
0x0000000000409a56 : add esp, 0xa0 ; pop rbp ; ret
0x000000000042a163 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000413d64 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004153d5 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000424a6d : add esp, 0xe0 ; pop rbp ; ret
0x00000000004095b5 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x000000000040b0f7 : add r8b, bpl ; ret 0xff67
0x00000000004293c8 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c5a : add rax, rdx ; sar rax, 1 ; jne 0x401c6d ; pop rbp ; ret
0x0000000000401f7a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b85 : add rsp, 0x100 ; pop rbp ; ret
0x000000000041ab79 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000414a26 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004042b7 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041c196 : add rsp, 0x140 ; pop rbp ; ret
0x000000000042e56d : add rsp, 0x160 ; pop rbp ; ret
0x0000000000428e95 : add rsp, 0x18 ; pop rbp ; ret
0x00000000004169db : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000408603 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000406412 : add rsp, 0x20 ; pop rbp ; ret
0x000000000042038b : add rsp, 0x200 ; pop rbp ; ret
0x0000000000405fab : add rsp, 0x270 ; pop rbp ; ret
0x00000000004304c2 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000419bab : add rsp, 0x2e0 ; pop rbp ; ret
0x00000000004086d3 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000407cba : add rsp, 0x370 ; pop rbp ; ret
0x0000000000403f02 : add rsp, 0x380 ; pop rbp ; ret
0x000000000040aa36 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000426bfc : add rsp, 0x48 ; pop rbp ; ret
0x000000000041f1f5 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000402121 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000423eb6 : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000401f28 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000408cd0 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406239 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a265 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000409a55 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000042a162 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000413d63 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004153d4 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000424a6c : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004095b4 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x0000000000435380 : and ah, bh ; std ; jmp qword ptr [rdx]
0x00000000004065d0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f558 : and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000042e9a8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004259d2 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000425b2c : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004042ba : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004343d1 : and ch, bh ; jmp rsp
0x00000000004283e3 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x00000000004345d1 : and dh, bh ; jmp rsp
0x0000000000428f4a : and dh, byte ptr [rbx + 0xf660000] ; pop rsp ; ret 0xf66
0x000000000042e9a7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000042a2a5 : and eax, 0x434310 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000409ddf : and eax, 0x637350 ; pop rbp ; ret
0x000000000040a28f : and eax, 0x637358 ; pop rbp ; ret
0x000000000040a2b3 : and eax, 0x637360 ; pop rbp ; ret
0x0000000000403cf3 : and eax, 0xb9e124db ; int1 ; ret
0x0000000000401c97 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000435c41 : and edi, edi ; jmp qword ptr [rcx]
0x00000000004314ff : call 0x401786
0x00000000004314cc : call 0x401826
0x000000000041e202 : call 0x401969
0x000000000040586d : call 0x401b22
0x000000000041df7a : call 0x41a232
0x0000000000420008 : call 0x42eae6
0x000000000042c196 : call 0xffffffff8a052738
0x0000000000413da9 : call 0xffffffffe903c6f9
0x0000000000413da8 : call 0xffffffffe903c6fa
0x000000000040f7ed : call 0xfffffffff7397d84
0x000000000042ff85 : call 0xffffffffff47855a
0x0000000000412319 : call 0xffffffffff55a8eb
0x0000000000412318 : call 0xffffffffff55a8ec
0x0000000000412319 : call 0xffffffffff55a8ed
0x0000000000412318 : call 0xffffffffff55a8ee
0x000000000042b287 : call 0xffffffffff7c3dd8
0x000000000042b286 : call 0xffffffffff7c3dd9
0x0000000000432c69 : call qword ptr [r12 + rbx*8]
0x00000000004116a6 : call qword ptr [rax]
0x0000000000434dc3 : call qword ptr [rbx]
0x0000000000402721 : call qword ptr [rcx]
0x0000000000435843 : call qword ptr [rdi]
0x00000000004112d3 : call qword ptr [rdx]
0x000000000041126f : call qword ptr [rsi]
0x0000000000432c6a : call qword ptr [rsp + rbx*8]
0x000000000042b323 : call rax
0x000000000040fa8a : call rbx
0x0000000000421273 : call rcx
0x0000000000429267 : call rdx
0x0000000000416824 : call rsi
0x00000000004322fc : cdq ; ret
0x000000000041e8b2 : cdqe ; jmp 0x41f206
0x0000000000429db3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004309ac : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004254a3 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000430cc0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409dc1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000429a03 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000042a161 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004095b3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401c5f : clc ; jne 0x401c68 ; pop rbp ; ret
0x000000000042eac8 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000427fa7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042e5ae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042878b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004287ab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004287cb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004089f7 : clc ; pop rbp ; ret
0x0000000000408ccf : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000434b22 : cld ; jmp rax
0x0000000000434392 : cld ; jmp rsp
0x0000000000411f6d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000435381 : cld ; std ; jmp qword ptr [rdx]
0x000000000041aa0a : cli ; add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004028a9 : cmc ; jmp rsp
0x000000000041f555 : cmc ; movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000041b129 : cmovs ecx, dword ptr [rbx - 0x7eb737ab] ; ret 0xffff
0x000000000042f58d : cmp al, -0x2a ; ret
0x000000000041d5d8 : cmp al, -0x6a ; ret
0x00000000004347d1 : cmp al, -1 ; jmp rsp
0x000000000040af58 : cmp al, 0x25 ; ret 0x433c
0x000000000040b0f6 : cmp al, 0x43 ; add al, ch ; ret 0xff67
0x0000000000425cdd : cmp byte ptr [rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000425cdc : cmp byte ptr ds:[rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000401c1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c30 ; pop rbp ; ret
0x0000000000414244 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004201d2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000041f0b2 : cwde ; jmp 0x41f205
0x000000000041e4e1 : cwde ; jmp 0x41f206
0x000000000041e4e0 : cwde ; jmp 0x41f207
0x0000000000431dfb : cwde ; js 0x431da5 ; ret
0x0000000000431e42 : cwde ; js 0x431dec ; ret
0x0000000000431e7c : cwde ; js 0x431e26 ; ret
0x00000000004089f3 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000404992 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000412112 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041241d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000407993 : dec dword ptr [rbx - 0x3434b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407b4a : dec dword ptr [rbx - 0x34b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403fb8 : dec dword ptr [rcx + 0x7ce981c1] ; sti ; ret 0x8589
0x0000000000413924 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004227d1 : dec dword ptr [rdi] ; ret 0xc609
0x000000000041bbec : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004053e6 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff7], cl ; ret 1
0x0000000000415563 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040945a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000407554 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004270b0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004270af : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041df75 : enter -0x74b8, 0x75 ; shr al, -0x4f ; ret 0xffff
0x000000000041e01d : enter -0x74b8, 0x75 ; shr al, 9 ; ret 0xffff
0x0000000000429317 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004256ae : enter -0x79d3, -0xa ; ret 0x89c8
0x0000000000425663 : enter -0x7ad3, -0xa ; ret 0x89c8
0x00000000004293ca : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x00000000004249da : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000420157 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042fd3b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425983 : enter 0x612d, 1 ; ret 0x897e
0x000000000040b4cd : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004276f4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415259 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428322 : fcomp qword ptr [rbp - 0x75b54151] ; ret 0x8423
0x0000000000415414 : fcomp st(0) ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f318 : ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041f35a : fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000041f55b : fist word ptr [rbx + 0x4b] ; ret 0x8948
0x00000000004171f4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000419f93 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000419f97 : fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000042426e : fmul dword ptr [rax - 0x7f] ; ret 0x60
0x0000000000432c6c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041c127 : fsubr st(0) ; ret
0x000000000041b664 : fsubr st(0) ; xchg eax, esi ; ret
0x000000000042ae94 : fsubr st(1) ; ret 0
0x000000000042b95c : fucompi st(1) ; ret
0x0000000000401f79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405faa : hlt ; add rsp, 0x270 ; pop rbp ; ret
0x0000000000417b9c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408ef6 : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042eac4 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c30 : hlt ; pop rbp ; mov edi, 0x6372e0 ; jmp rax
0x0000000000401ce3 : hlt ; push rcx ; ret 0x9352
0x0000000000404424 : hlt ; ret
0x000000000041db48 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x0000000000415ebe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004118c9 : in al, -0x7f ; ret 0xff9f
0x0000000000411aaf : in al, -0x7f ; ret 0xffbf
0x0000000000411b55 : in al, -0x7f ; ret 0xffc5
0x0000000000411b83 : in al, -0x7f ; ret 0xffd5
0x0000000000411c51 : in al, -0x7f ; ret 0xffd8
0x0000000000411de7 : in al, -0x7f ; ret 0xffe0
0x00000000004259d0 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000425b2a : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402039 : in al, 0x2d ; ret 0x10f1
0x0000000000404b84 : in al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x000000000041c195 : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x0000000000425148 : in al, 0x56 ; ret
0x000000000042ec17 : in al, 0x5d ; ret
0x00000000004253ea : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042540b : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404acb : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434d5c : in al, 2 ; add byte ptr [rax], al ; mov al, 0x42 ; std ; call qword ptr [rax]
0x000000000042542c : in al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042544d : in al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043525c : in al, 7 ; add byte ptr [rax], al ; adc bl, bh ; std ; jmp qword ptr [rax]
0x000000000042d28a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042038a : in al, dx ; add rsp, 0x200 ; pop rbp ; ret
0x000000000042edc9 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041810a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004345d0 : in al, dx ; and dh, bh ; jmp rsp
0x000000000040b97a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000434590 : in al, dx ; or edi, esi ; jmp rsp
0x0000000000434550 : in al, dx ; or esi, edi ; jmp rsp
0x000000000041ffb5 : in eax, -0x76 ; push rbp ; ret
0x00000000004324fb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004194fe : inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000041fecf : inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000412f3f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000422c72 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004075b3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042389f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040762e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403426 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040738b : inc ebx ; or byte ptr [rsi], cl ; ret 0x2ee9
0x0000000000425145 : inc edi ; in al, 0x56 ; ret
0x00000000004149f8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000419b74 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x00000000004345cb : inc esp ; adc byte ptr [rax], al ; add ah, ch ; and dh, bh ; jmp rsp
0x00000000004344cb : inc esp ; or al, 0 ; add byte ptr [rdx + rdi*2], ch ; std ; jmp rsp
0x00000000004343cb : inc esp ; or byte ptr [rax], al ; add ah, cl ; and ch, bh ; jmp rsp
0x000000000043448b : inc esp ; or eax, dword ptr [rax] ; add byte ptr [rdi + rbp*2], ch ; std ; jmp rsp
0x00000000004348cb : inc esp ; sbb al, 0 ; add byte ptr [rcx + rbx*4 - 1], bh ; jmp rsp
0x000000000043488b : inc esp ; sbb eax, dword ptr [rax] ; add byte ptr [rax + rsi*2 - 1], cl ; jmp rsp
0x000000000043458b : inc esp ; sldt word ptr [rax] ; in al, dx ; or edi, esi ; jmp rsp
0x000000000040e09f : insd dword ptr [rdi], dx ; ret 0x891a
0x00000000004116df : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000040288e : int1 ; ret
0x0000000000406e4c : iretd ; jmp rsi
0x0000000000401c23 : ja 0x401c2a ; pop rbp ; ret
0x000000000042e5b1 : ja 0x42e5fe ; pop rbp ; ret
0x00000000004038b3 : jae 0x403921 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404468 : jbe 0x404460 ; ret
0x00000000004048b3 : jbe 0x4048ab ; ret
0x0000000000401c2f : je 0x401c2d ; pop rbp ; mov edi, 0x6372e0 ; jmp rax
0x000000000040b1a0 : jg 0x40b18d ; ret 0
0x0000000000403d73 : jge 0x403daf ; add byte ptr [r8 - 0x77], cl ; ret 0x21e8
0x0000000000404017 : jge 0x404017 ; ret 0x8589
0x0000000000404294 : jge 0x404294 ; ret 0x23e9
0x00000000004159d8 : jge 0x4159ef ; ret
0x0000000000415ec3 : jge 0x415eda ; ret
0x000000000041df74 : jge 0x41df46 ; mov rsi, qword ptr [rbp - 0x40] ; call 0x41a238
0x000000000041e01c : jge 0x41dfee ; mov rsi, qword ptr [rbp - 0x40] ; call 0x41a238
0x000000000042878a : jge 0x42878b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004287aa : jge 0x4287ab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004287ca : jge 0x4287cb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042e5ad : jge 0x42e5ae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000432a69 : jge 0x432a63 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403fbd : jl 0x403fbd ; ret 0x8589
0x00000000004158ac : jl 0x4158c3 ; ret
0x00000000004308a5 : jl 0x430881 ; ret
0x00000000004308f5 : jl 0x4308d1 ; ret
0x000000000040194b : jmp 0x401747
0x000000000040204d : jmp 0x40212d
0x00000000004048ad : jmp 0x404b96
0x0000000000407801 : jmp 0x407cc9
0x000000000040a5b1 : jmp 0x40a62d
0x000000000040af51 : jmp 0x40b271
0x000000000041108d : jmp 0x413d73
0x0000000000413b21 : jmp 0x413d75
0x0000000000415ebd : jmp 0x416435
0x0000000000419b71 : jmp 0x419bf7
0x000000000041aa1c : jmp 0x41ab88
0x000000000041f0b3 : jmp 0x41f204
0x000000000041e4e2 : jmp 0x41f205
0x000000000042545d : jmp 0x4254b1
0x0000000000428272 : jmp 0x4283c2
0x0000000000429212 : jmp 0x4292e7
0x00000000004316b4 : jmp 0x431838
0x0000000000431c3b : jmp 0x431c46
0x00000000004328ab : jmp 0x4328b6
0x000000000042cf91 : jmp 0x490558e1
0x000000000042d00c : jmp 0x4905595c
0x000000000042e365 : jmp 0x49056cb5
0x000000000042e3e0 : jmp 0x49056d30
0x00000000004254d5 : jmp 0x7f04563d
0x000000000042c1db : jmp 0xffffffff8a05277d
0x000000000042ee0e : jmp 0xffffffffb704f1da
0x0000000000403fbc : jmp 0xffffffffc2a83b41
0x0000000000431dfa : jmp 0xffffffffc3e7969b
0x000000000042c58f : jmp 0xffffffffea052b31
0x00000000004111ad : jmp qword ptr [rax]
0x000000000041231f : jmp qword ptr [rbx]
0x0000000000413cf0 : jmp qword ptr [rcx]
0x0000000000436263 : jmp qword ptr [rdi]
0x0000000000414245 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040f7f6 : jmp qword ptr [rdx]
0x00000000004122af : jmp qword ptr [rsi]
0x0000000000401c37 : jmp rax
0x0000000000412e42 : jmp rbx
0x00000000004077ac : jmp rcx
0x0000000000408315 : jmp rdi
0x0000000000401c77 : jmp rdx
0x0000000000406e4d : jmp rsi
0x00000000004028aa : jmp rsp
0x0000000000401c60 : jne 0x401c67 ; pop rbp ; ret
0x0000000000404423 : jne 0x40441b ; ret
0x00000000004149f6 : jne 0x4149ff ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041df78 : jne 0x41df3e ; call 0x41a234
0x000000000041e020 : jne 0x41dfe6 ; call 0x41a234
0x000000000041ffb0 : jne 0x41ff73 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000425db9 : jne 0x425d9c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004270b1 : jne 0x4270a9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004274a2 : jne 0x42749a ; mov rax, rdx ; pop rbp ; ret
0x0000000000429316 : jne 0x4292e9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004346d1 : jno 0x4346d3 ; jmp rsp
0x0000000000419b72 : jnp 0x419b7a ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000405fae : jo 0x405fb7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407cbd : jo 0x407cc7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408cd3 : jo 0x408d34 ; ret
0x0000000000409bac : jo 0x409c0d ; ret
0x0000000000414c11 : jo 0x414c72 ; ret
0x0000000000414d34 : jo 0x414d95 ; ret
0x0000000000414e6e : jo 0x414ecf ; ret
0x000000000041729c : jo 0x4172fd ; ret
0x0000000000419834 : jo 0x419803 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000419833 : jo 0x419804 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000419f69 : jo 0x419fca ; ret
0x0000000000423847 : jo 0x4237d3 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000427cc3 : jo 0x427d24 ; ret
0x0000000000430cc4 : jo 0x430d25 ; ret
0x0000000000434891 : jo 0x434894 ; jmp rsp
0x0000000000434890 : jo 0x434895 ; jmp rsp
0x00000000004344d1 : jp 0x4344d2 ; jmp rsp
0x0000000000413d66 : js 0x413d7a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000431dfc : js 0x431da4 ; ret
0x0000000000431e43 : js 0x431deb ; ret
0x0000000000431e7d : js 0x431e25 ; ret
0x000000000042c58e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea052b32
0x000000000042c58d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea052b33
0x000000000042c624 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004178ed : loop 0x41791a ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004178ec : loop 0x41791b ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004318a9 : loop 0x4318fb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000431991 : loop 0x4319e3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000403cf6 : loope 0x403cb5 ; int1 ; ret
0x0000000000427ceb : loope 0x427c85 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004283e4 : loope 0x4283ed ; movzx eax, cl ; pop rbp ; ret
0x000000000040616c : loopne 0x406175 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040948c : loopne 0x409495 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409903 : loopne 0x40990c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b25e : loopne 0x40b2b1 ; add esp, 0x100 ; pop rbp ; ret
0x000000000040bd3e : loopne 0x40bd47 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416fe0 : loopne 0x416fe9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004173ec : loopne 0x41743c ; add esp, 0x40 ; pop rbp ; ret
0x00000000004173eb : loopne 0x41743d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000419bae : loopne 0x419bb7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b1b1 : loopne 0x41b204 ; add esp, 0x100 ; pop rbp ; ret
0x000000000042484f : loopne 0x424858 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004248b0 : loopne 0x4248ba ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000424a6f : loopne 0x424a76 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424f98 : loopne 0x424fcb ; push rbp ; ret
0x0000000000424f97 : loopne 0x424fcc ; push rbp ; ret
0x00000000004250cc : loopne 0x4250ff ; push rsi ; ret
0x00000000004250cb : loopne 0x425100 ; push rsi ; ret
0x0000000000426f37 : loopne 0x426f3e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042809c : loopne 0x4280cf ; ret
0x000000000042809b : loopne 0x4280d0 ; ret
0x000000000042a697 : loopne 0x42a6a0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b930 : loopne 0x42b939 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b950 : loopne 0x42b99e ; mov edi, dword ptr [rcx] ; call rax
0x000000000042b94f : loopne 0x42b99f ; mov edi, dword ptr [rcx] ; call rax
0x000000000042ba1c : loopne 0x42ba25 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bab4 : loopne 0x42babd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043182c : loopne 0x431835 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402120 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042e4d8 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ff5a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042a165 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004314ca : mov al, 0 ; call 0x401828
0x000000000040586b : mov al, 0 ; call 0x401b24
0x000000000041f316 : mov al, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041f358 : mov al, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x0000000000434d60 : mov al, 0x42 ; std ; call qword ptr [rax]
0x000000000040befb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000434e20 : mov al, 0x4f ; std ; call qword ptr [rsi]
0x0000000000431b4d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000431cfd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004324f9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004178eb : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042758f : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004089d0 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004065cd : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042eaec : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000431a4f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000431a4e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004319cf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004319d3 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004360e1 : mov bh, bh ; call qword ptr [rsi]
0x0000000000428f4b : mov bl, 0 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040a2b1 : mov byte ptr [0x637360], al ; pop rbp ; ret
0x000000000042ec11 : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x00000000004138b8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403f7c : mov byte ptr [rdx + 0x1a], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c93 : mov byte ptr [rip + 0x23569e], 1 ; ret
0x000000000042e9ad : mov dh, -0x39 ; pop rbp ; ret
0x00000000004283e7 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000428e93 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000416b32 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004086d1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417a39 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b45b : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419f64 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000436261 : mov dh, -1 ; jmp qword ptr [rdi]
0x0000000000432625 : mov dl, -0x47 ; ret
0x0000000000409ddd : mov dword ptr [0x637350], edi ; pop rbp ; ret
0x000000000040a28d : mov dword ptr [0x637358], edi ; pop rbp ; ret
0x000000000040bbb7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b97b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040baef : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042d739 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042d8ab : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x000000000040640f : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041aa19 : mov dword ptr [rbp - 0x38], eax ; jmp 0x41ab8b
0x000000000040211e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e8b1 : mov dword ptr [rbp - 0x68], ecx ; jmp 0x41f207
0x000000000041f0b0 : mov dword ptr [rbp - 0x68], edx ; jmp 0x41f207
0x0000000000429261 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000042a0af : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000401f77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042eac9 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042669e : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd6d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042449f : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a2aa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000427fa8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042e5b0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040b274 : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000040b86f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041732b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ff7 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aa33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041700f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409ba6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a8cc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042edc7 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041742e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416d00 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e7e0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bbba : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042ec15 : mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x00000000004173ea : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b764 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000425dbf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040b86c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000417e7f : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b975 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004043e1 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000042931c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x000000000040baf1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000414c0b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000417b9a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408ef4 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408ccd : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429db1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004309aa : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004254a1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000430cbe : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004089f5 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042878d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004287ad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004287cd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043186e : mov eax, edi ; pop rbp ; ret
0x000000000042a881 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004270b4 : mov eax, edx ; pop rbp ; ret
0x00000000004319d0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x00000000004318e3 : mov eax, esi ; pop rbp ; ret
0x0000000000407802 : mov ebp, 0xb8000004 ; ret 0x36d9
0x00000000004034bd : mov ebp, 0xf6b97007 ; jmp rsp
0x0000000000401cbb : mov ebp, esp ; call rax
0x0000000000401c21 : mov ebp, esp ; ja 0x401c2c ; pop rbp ; ret
0x000000000040b272 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000425cdb : mov ebx, 0xb95f383e ; xchg dh, dh ; ret 0x3dc8
0x000000000042b31d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b978 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042b285 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042b94e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042eac6 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000405869 : mov ecx, eax ; mov al, 0 ; call 0x401b26
0x000000000043190d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004318dd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401cb5 : mov edi, 0x636e20 ; mov rbp, rsp ; call rax
0x0000000000401c32 : mov edi, 0x6372e0 ; jmp rax
0x0000000000401c72 : mov edi, 0x6372e0 ; jmp rdx
0x000000000041df73 : mov edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x41a239
0x000000000042e5ac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000428789 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004287a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004287c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042b321 : mov edi, dword ptr [rcx] ; call rax
0x0000000000420006 : mov edi, eax ; call 0x42eae8
0x0000000000432c67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004360c1 : mov edi, edi ; call qword ptr [rbx]
0x0000000000432c66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041df77 : mov esi, dword ptr [rbp - 0x40] ; call 0x41a235
0x0000000000401c70 : mov esi, eax ; mov edi, 0x6372e0 ; jmp rdx
0x0000000000425dbc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000429319 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004267c3 : mov esp, 0x61cfa42d ; ret
0x0000000000426805 : mov esp, 0x61cfa52d ; ret
0x0000000000407388 : mov esp, 0xc3fffffe ; or byte ptr [rsi], cl ; ret 0x2ee9
0x000000000040b19d : mov esp, 0xe97f79ce ; ret 0
0x0000000000409ddc : mov qword ptr [0x637350], rdi ; pop rbp ; ret
0x000000000040a28c : mov qword ptr [0x637358], rdi ; pop rbp ; ret
0x000000000040640e : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bd6c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042449e : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042e5af : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040211f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004267c2 : mov r12d, 0x61cfa42d ; ret
0x0000000000426804 : mov r12d, 0x61cfa52d ; ret
0x000000000041f315 : mov r8b, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041f357 : mov r8b, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000041732a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ff6 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aa32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041700e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409ba5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a8cb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041742d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416cff : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e7df : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428ace : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004173e9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b763 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000425dbe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040b86b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000417e7e : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004043e0 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000042931b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000414c0a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429db0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004089f4 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042878c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004287ac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004287cc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043186d : mov rax, rdi ; pop rbp ; ret
0x000000000042a880 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004270b3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cba : mov rbp, rsp ; call rax
0x0000000000401c20 : mov rbp, rsp ; ja 0x401c2d ; pop rbp ; ret
0x000000000040b271 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000042b31c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042b284 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042b94d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042eac5 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000405868 : mov rcx, rax ; mov al, 0 ; call 0x401b27
0x000000000042e5ab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000428788 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004287a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004287c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042b320 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000420005 : mov rdi, rax ; call 0x42eae9
0x000000000041df76 : mov rsi, qword ptr [rbp - 0x40] ; call 0x41a236
0x0000000000401c6f : mov rsi, rax ; mov edi, 0x6372e0 ; jmp rdx
0x0000000000425dbb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000429318 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004149fa : mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004149fb : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000434810 : mov word ptr [rdi - 1], es ; jmp rsp
0x000000000041214c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043289e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000403421 : movabs al, byte ptr [0x950f41ffffffff3d] ; ret 0x8445
0x000000000040771d : movabs byte ptr [0xfffebc85c7000005], al ; jmp rax
0x0000000000434b1c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], dl ; salc ; cld ; jmp rax
0x0000000000415ebc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x416436
0x000000000043541c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; add dh, bh ; jmp rdx
0x0000000000431dfd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f556 : movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000428e92 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000416b31 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004086d0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417a38 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b45a : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419f63 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d2 : movzx eax, al ; pop rbp ; ret
0x00000000004319d2 : movzx eax, ax ; pop rbp ; ret
0x000000000042e9ac : movzx eax, bh ; pop rbp ; ret
0x00000000004283e6 : movzx eax, cl ; pop rbp ; ret
0x000000000042e9ab : movzx eax, dil ; pop rbp ; ret
0x00000000004065ce : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004065cf : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000434dc0 : nop ; std ; call qword ptr [rbx]
0x0000000000432c88 : nop dword ptr [rax + rax] ; ret
0x0000000000413d67 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004344cd : or al, 0 ; add byte ptr [rdx + rdi*2], ch ; std ; jmp rsp
0x000000000042c58b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea052b35
0x00000000004343cd : or byte ptr [rax], al ; add ah, cl ; and ch, bh ; jmp rsp
0x000000000041d5d1 : or byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x000000000040738d : or byte ptr [rsi], cl ; ret 0x2ee9
0x0000000000406a95 : or byte ptr [rsi], cl ; ret 0x8589
0x0000000000407359 : or byte ptr [rsi], cl ; ret 0x8b48
0x000000000041e8b5 : or dword ptr [r8], r8d ; add al, ch ; ret 0xfe2e
0x000000000041e8b6 : or dword ptr [rax], eax ; add al, ch ; ret 0xfe2e
0x0000000000419809 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000043537d : or dword ptr [rax], eax ; add byte ptr [rax], ah ; cld ; std ; jmp qword ptr [rdx]
0x000000000043541d : or dword ptr [rax], eax ; add byte ptr [rax], dh ; add dh, bh ; jmp rdx
0x0000000000415567 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004053ea : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041e4e4 : or eax, 0x9db80000 ; ret
0x0000000000414df1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043448d : or eax, dword ptr [rax] ; add byte ptr [rdi + rbp*2], ch ; std ; jmp rsp
0x000000000043186b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000434591 : or edi, esi ; jmp rsp
0x0000000000434551 : or esi, edi ; jmp rsp
0x00000000004318e1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042c58a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea052b36
0x000000000043186a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042e9a9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000431cff : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000431b4f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004318e0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000428f39 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042ca63 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000434491 : outsd dx, dword ptr [rsi] ; std ; jmp rsp
0x0000000000432c7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000432c7e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414092 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432c80 : pop r14 ; pop r15 ; ret
0x0000000000414094 : pop r15 ; pop rbp ; ret
0x0000000000432c82 : pop r15 ; ret
0x0000000000432378 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401c92 : pop rbp ; mov byte ptr [rip + 0x23569e], 1 ; ret
0x0000000000401c31 : pop rbp ; mov edi, 0x6372e0 ; jmp rax
0x0000000000401c6e : pop rbp ; mov rsi, rax ; mov edi, 0x6372e0 ; jmp rdx
0x0000000000432c7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000432c7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c25 : pop rbp ; ret
0x000000000041798c : pop rbp ; test al, -2 ; ret 0x4589
0x00000000004179ba : pop rbp ; test al, -2 ; ret 0x8eb9
0x0000000000414091 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413d6a : pop rbx ; pop rbp ; ret
0x0000000000432624 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000414095 : pop rdi ; pop rbp ; ret
0x0000000000432c83 : pop rdi ; ret
0x0000000000432a6b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000434451 : pop rdx ; std ; jmp rsp
0x0000000000414093 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000432c81 : pop rsi ; pop r15 ; ret
0x0000000000432c7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040dfa2 : pop rsp ; ret
0x0000000000428f50 : pop rsp ; ret 0xf66
0x000000000041db50 : popfq ; ret
0x0000000000432439 : popfq ; ret 0xd284
0x0000000000401f24 : push 0x48fffffc ; add esp, 0x60 ; pop rbp ; ret
0x000000000041378f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000435c40 : push rax ; and edi, edi ; jmp qword ptr [rcx]
0x0000000000402124 : push rax ; pop rbp ; ret
0x00000000004364c0 : push rax ; ret 0xffff
0x000000000041681b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041f0b1 : push rbp ; cwde ; jmp 0x41f206
0x00000000004171f3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000419f92 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000419f96 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000042426d : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x60
0x000000000042ae93 : push rbp ; fsubr st(1) ; ret 0
0x00000000004118c8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x0000000000411aae : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000411b54 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000411b82 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000411c50 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000411de6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004194fd : push rbp ; inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000427582 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000401cb4 : push rbp ; mov edi, 0x636e20 ; mov rbp, rsp ; call rax
0x000000000041fed4 : push rbp ; ret
0x0000000000420e2e : push rbp ; ret 0x893c
0x000000000042c61e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041f319 : push rbx ; ret 0x4589
0x000000000041f35b : push rbx ; ret 0x8589
0x000000000041f55c : push rbx ; ret 0x8948
0x0000000000401ce4 : push rcx ; ret 0x9352
0x0000000000434ec1 : push rdi ; std ; call qword ptr [rsi]
0x0000000000401c96 : push rsi ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004250ce : push rsi ; ret
0x0000000000434e61 : push rsp ; std ; call qword ptr [rsi]
0x0000000000434450 : pushfq ; pop rdx ; std ; jmp rsp
0x000000000041ccaa : pushfq ; ret
0x00000000004301c3 : pushfq ; ret 0x8445
0x000000000041ff9a : pushfq ; ret 0xd284
0x0000000000434610 : pushfq ; sub bh, dh ; jmp rsp
0x00000000004318de : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000043190e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041cb4c : rcr eax, cl ; ret
0x0000000000400284 : ret
0x000000000040b1a2 : ret 0
0x000000000042997f : ret 0x10
0x00000000004197ad : ret 0x108
0x000000000040203b : ret 0x10f1
0x0000000000419f9a : ret 0x110
0x000000000040248d : ret 0x15
0x000000000041c725 : ret 0x18
0x000000000043252b : ret 0x2030
0x0000000000423b79 : ret 0x21b9
0x0000000000403d79 : ret 0x21e8
0x0000000000401b52 : ret 0x2356
0x0000000000401952 : ret 0x2357
0x0000000000401742 : ret 0x2358
0x0000000000404297 : ret 0x23e9
0x0000000000428f3a : ret 0x280f
0x000000000041a9f2 : ret 0x294c
0x0000000000409b35 : ret 0x29b9
0x00000000004112a7 : ret 0x2a
0x00000000004145c6 : ret 0x2c1
0x000000000040738f : ret 0x2ee9
0x0000000000407290 : ret 0x36d9
0x0000000000425ce2 : ret 0x3dc8
0x0000000000424899 : ret 0x4172
0x000000000040ac8b : ret 0x421d
0x00000000004043c3 : ret 0x4240
0x000000000040af5a : ret 0x433c
0x000000000040e20a : ret 0x43fa
0x0000000000409af1 : ret 0x4589
0x0000000000425b7d : ret 0x487e
0x000000000041a4ff : ret 0x4cb1
0x0000000000429d64 : ret 0x50e9
0x000000000041b4d6 : ret 0x5589
0x0000000000424312 : ret 0x56ad
0x0000000000417f53 : ret 0x5e5
0x0000000000424271 : ret 0x60
0x000000000041a1ae : ret 0x709b
0x0000000000409cba : ret 0x7406
0x0000000000412f20 : ret 0x7ae8
0x0000000000423afd : ret 0x8148
0x000000000042cf94 : ret 0x8348
0x0000000000423b36 : ret 0x83e9
0x0000000000428328 : ret 0x8423
0x000000000040342a : ret 0x8445
0x0000000000403fc0 : ret 0x8589
0x000000000040e0a0 : ret 0x891a
0x000000000042805e : ret 0x8923
0x0000000000431edc : ret 0x8934
0x0000000000420e2f : ret 0x893c
0x0000000000404236 : ret 0x8948
0x000000000042464c : ret 0x8972
0x00000000004254d8 : ret 0x897e
0x000000000042c28c : ret 0x897f
0x000000000041c860 : ret 0x8999
0x000000000042ee11 : ret 0x89b6
0x0000000000425667 : ret 0x89c8
0x0000000000431eb8 : ret 0x8b34
0x000000000040735b : ret 0x8b48
0x00000000004179bd : ret 0x8eb9
0x0000000000401ce5 : ret 0x9352
0x00000000004298ea : ret 0xa3b9
0x000000000041e1cd : ret 0xa43c
0x000000000043110b : ret 0xa4be
0x000000000042c5c9 : ret 0xa6e9
0x0000000000411f75 : ret 0xa9b9
0x000000000040d9f2 : ret 0xade6
0x0000000000403bd1 : ret 0xb0
0x00000000004116e0 : ret 0xb91a
0x000000000042aec6 : ret 0xb948
0x000000000042f0cb : ret 0xb9b6
0x0000000000417977 : ret 0xba03
0x0000000000401c55 : ret 0xc148
0x00000000004227d4 : ret 0xc609
0x00000000004038bc : ret 0xd284
0x0000000000413793 : ret 0xd4e9
0x0000000000409700 : ret 0xdae8
0x000000000042c592 : ret 0xdde9
0x0000000000406a94 : ret 0xe08
0x0000000000405db4 : ret 0xe280
0x0000000000403db5 : ret 0xe5e8
0x0000000000428392 : ret 0xe923
0x000000000042c627 : ret 0xe97f
0x000000000041e69f : ret 0xe999
0x0000000000413dac : ret 0xee8
0x0000000000429cc5 : ret 0xefe9
0x00000000004236bc : ret 0xf280
0x0000000000417a11 : ret 0xf40
0x0000000000412155 : ret 0xf41
0x0000000000428f51 : ret 0xf66
0x0000000000407ec2 : ret 0xf81c
0x00000000004316ba : ret 0xfd00
0x0000000000428f2a : ret 0xfd8a
0x000000000042329a : ret 0xfde4
0x000000000041e8ba : ret 0xfe2e
0x000000000042ab76 : ret 0xff3
0x000000000040b4aa : ret 0xff62
0x000000000040b0fa : ret 0xff67
0x00000000004118cb : ret 0xff9f
0x000000000041326e : ret 0xffa5
0x0000000000411ab1 : ret 0xffbf
0x000000000041251b : ret 0xffc4
0x0000000000411b57 : ret 0xffc5
0x0000000000411b85 : ret 0xffd5
0x0000000000411c53 : ret 0xffd8
0x00000000004125c1 : ret 0xffd9
0x0000000000411de9 : ret 0xffe0
0x0000000000405636 : ret 0xfff6
0x0000000000410ebe : ret 0xfffa
0x0000000000409b8a : ret 0xfffb
0x000000000040573f : ret 0xfffd
0x000000000040586f : ret 0xffff
0x00000000004053ee : ret 1
0x0000000000409f74 : ret 2
0x00000000004138a7 : ret 4
0x0000000000415598 : ret 5
0x0000000000404ebc : ret 6
0x000000000042ca31 : ret 7
0x0000000000413f90 : ret 8
0x0000000000421da5 : ret 9
0x0000000000428f24 : rol byte ptr [r8 + rcx*4 - 0x40], -0x18 ; ret 0xfd8a
0x000000000041f1f8 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000428f25 : rol byte ptr [rax + rcx*4 - 0x40], -0x18 ; ret 0xfd8a
0x0000000000429202 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a612 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004153d7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004304c5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004240ff : rol dh, 1 ; ret
0x00000000004283e2 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004240fe : rol r14b, 1 ; ret
0x000000000040b976 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401c5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c6b ; pop rbp ; ret
0x0000000000419f65 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x419fce ; ret
0x0000000000417a3a : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000042c76b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424a6b : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x424a7a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426f33 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x426f42 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b977 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004171f0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000419712 : sahf ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000401c95 : sahf ; push rsi ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000430959 : sahf ; ret 0xd284
0x000000000041ffaf : sal byte ptr [rbp - 0x47], 1 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000434b21 : salc ; cld ; jmp rax
0x000000000042f58e : salc ; ret
0x0000000000434d20 : sar byte ptr [rdi], -3 ; jmp qword ptr [rdx]
0x00000000004201d3 : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000406216 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000401c5e : sar eax, 1 ; jne 0x401c69 ; pop rbp ; ret
0x0000000000401c5d : sar rax, 1 ; jne 0x401c6a ; pop rbp ; ret
0x00000000004364d8 : sbb al, 0 ; add byte ptr [rax], al ; sbb al, byte ptr fs:[rax] ; add al, dh ; ret 0xffff
0x00000000004348cd : sbb al, 0 ; add byte ptr [rcx + rbx*4 - 1], bh ; jmp rsp
0x000000000042ec13 : sbb al, 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000042eaee : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004364dd : sbb al, byte ptr [rax] ; add al, dh ; ret 0xffff
0x0000000000403f7e : sbb al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004364dc : sbb al, byte ptr fs:[rax] ; add al, dh ; ret 0xffff
0x0000000000434751 : sbb bh, bh ; jmp rsp
0x0000000000414a29 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041b5aa : sbb cl, bl ; xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x0000000000416dd3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411f6e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000043488d : sbb eax, dword ptr [rax] ; add byte ptr [rax + rsi*2 - 1], cl ; jmp rsp
0x000000000041b5ad : sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000040586e : scasb al, byte ptr [rdi] ; ret 0xffff
0x00000000004270ea : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004270ec : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000428f6f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000043190f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004318a8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041df79 : shr al, -0x4f ; ret 0xffff
0x000000000041e021 : shr al, 9 ; ret 0xffff
0x0000000000435cc0 : shr byte ptr [rdx], -1 ; call qword ptr [rdx]
0x00000000004318df : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000431868 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000043458d : sldt word ptr [rax] ; in al, dx ; or edi, esi ; jmp rsp
0x0000000000423849 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000435141 : stc ; std ; jmp qword ptr [rdx]
0x0000000000434d62 : std ; call qword ptr [rax]
0x0000000000434dc2 : std ; call qword ptr [rbx]
0x0000000000434e22 : std ; call qword ptr [rsi]
0x0000000000425144 : std ; inc edi ; in al, 0x56 ; ret
0x00000000004344ca : std ; inc esp ; or al, 0 ; add byte ptr [rdx + rdi*2], ch ; std ; jmp rsp
0x00000000004343ca : std ; inc esp ; or byte ptr [rax], al ; add ah, cl ; and ch, bh ; jmp rsp
0x000000000043448a : std ; inc esp ; or eax, dword ptr [rax] ; add byte ptr [rdi + rbp*2], ch ; std ; jmp rsp
0x0000000000435262 : std ; jmp qword ptr [rax]
0x0000000000434d22 : std ; jmp qword ptr [rdx]
0x00000000004343d2 : std ; jmp rsp
0x00000000004089d2 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000434391 : sti ; cld ; jmp rsp
0x0000000000404295 : sti ; ret 0x23e9
0x0000000000403fbe : sti ; ret 0x8589
0x0000000000435261 : sti ; std ; jmp qword ptr [rax]
0x000000000040556d : sub al, 0x2d ; ret
0x000000000040efb7 : sub al, 0x38 ; ret 0x8589
0x0000000000411f73 : sub al, 0x38 ; ret 0xa9b9
0x000000000042525c : sub al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000434490 : sub al, 0x6f ; std ; jmp rsp
0x00000000004344d0 : sub al, 0x7a ; std ; jmp rsp
0x0000000000425142 : sub al, dh ; std ; inc edi ; in al, 0x56 ; ret
0x0000000000435cc1 : sub bh, bh ; call qword ptr [rdx]
0x0000000000434611 : sub bh, dh ; jmp rsp
0x0000000000432d09 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000432d08 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000415444 : test al, -0x28 ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041683b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041798d : test al, -2 ; ret 0x4589
0x00000000004179bb : test al, -2 ; ret 0x8eb9
0x00000000004197dc : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430308 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a21b : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c194 : test al, 0x2d ; call 0xffffffff8a05273a
0x000000000042c193 : test al, 0x2d ; call 0xffffffff8a05273b
0x000000000042c1d9 : test al, 0x2d ; jmp 0xffffffff8a05277f
0x000000000042c1d8 : test al, 0x2d ; jmp 0xffffffff8a052780
0x000000000042c47c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042c288 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000414c0d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000420e2d : test al, 0x55 ; ret 0x893c
0x0000000000429a9b : test al, 0x70 ; ret 0x4589
0x0000000000429d62 : test al, 0x70 ; ret 0x50e9
0x0000000000429cc3 : test al, 0x70 ; ret 0xefe9
0x0000000000416718 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041bbee : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041ab78 : test byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432c8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403e6f : test byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004053e8 : test byte ptr [rcx - 0x16fffff7], cl ; ret 1
0x0000000000415565 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000435cfc : test byte ptr [rdx], dl ; add byte ptr [rax], al ; shr byte ptr [rdx], -1 ; call qword ptr [rdx]
0x000000000041940f : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000041990d : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000419500 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000419717 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000041980d : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000416820 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416588 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000406e9a : test dword ptr [rsi + rdi*8 - 0x2fd20001], esp ; jmp rsi
0x0000000000406e46 : test dword ptr [rsi + rdi*8 - 0x30d20001], esp ; jmp rsi
0x0000000000406ae2 : test dword ptr [rsi + rdi*8 - 0x3cd20001], esp ; or byte ptr [rsi], cl ; ret 0x8589
0x0000000000406a8e : test dword ptr [rsi + rdi*8 - 0x3dd20001], esp ; or byte ptr [rsi], cl ; ret 0x8589
0x0000000000425665 : test esi, esi ; ret 0x89c8
0x0000000000425ce0 : xchg dh, dh ; ret 0x3dc8
0x00000000004256b0 : xchg dh, dh ; ret 0x89c8
0x000000000040bfa1 : xchg eax, ebp ; ret
0x0000000000403429 : xchg eax, ebp ; ret 0x8445
0x00000000004038bb : xchg eax, ebp ; ret 0xd284
0x000000000040621d : xchg eax, ebp ; ret 0xe280
0x0000000000430e3b : xchg eax, ebx ; ret
0x000000000042d0a9 : xchg eax, ebx ; ret 0xd284
0x000000000040ef9b : xchg eax, ecx ; ret
0x000000000040ad3a : xchg eax, edi ; ret
0x000000000041997e : xchg eax, edi ; ret 0xd284
0x000000000040f0eb : xchg eax, edx ; ret
0x000000000041671e : xchg eax, edx ; ret 0xd284
0x0000000000414922 : xchg eax, esi ; ret
0x000000000040bf83 : xchg eax, esp ; ret
0x0000000000405bc2 : xchg eax, esp ; ret 0x8445
0x0000000000403e75 : xchg eax, esp ; ret 0xd284
0x0000000000405db3 : xchg eax, esp ; ret 0xe280
0x00000000004236bb : xchg eax, esp ; ret 0xf280
0x00000000004283e1 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041b5ac : xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x00000000004270eb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043186c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000403d71 : xor al, 0x25 ; jge 0x403db1 ; add byte ptr [r8 - 0x77], cl ; ret 0x21e8
0x0000000000403d74 : xor al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0x21e8
0x0000000000403db0 : xor al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x000000000042c47e : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042c625 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041ffb2 : xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x000000000041ffb3 : xor byte ptr [rbx], dh ; in eax, -0x76 ; push rbp ; ret
0x000000000042c28a : xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000414f27 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000433e21 : xor eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040baed : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000434651 : xor esi, edi ; jmp rsp
