0x00000000004221f0 : adc al, -0x76 ; push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000461c81 : adc al, 0 ; add al, ch ; add edi, esp ; jmp rax
0x0000000000461c51 : adc al, 0 ; add byte ptr [rax - 1], ch ; sti ; jmp qword ptr [rax]
0x0000000000461bd1 : adc al, byte ptr [rax] ; add byte ptr [rax], ch ; sar bl, cl ; jmp qword ptr [rax]
0x0000000000450f24 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000450e63 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000423465 : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000459300 : adc byte ptr [rax - 0x75], cl ; jge 0x4592c2 ; call rax
0x00000000004592ff : adc byte ptr [rax - 0x75], cl ; jge 0x4592c3 ; call rax
0x00000000004595d9 : adc byte ptr [rax - 0x75], cl ; jge 0x45959b ; call rax
0x00000000004595d8 : adc byte ptr [rax - 0x75], cl ; jge 0x45959c ; call rax
0x00000000004632e0 : adc byte ptr [rax - 4], cl ; call rdx
0x0000000000461b81 : adc byte ptr [rax], al ; add al, bl ; jo 0x461b88 ; jmp rax
0x0000000000461b51 : adc byte ptr [rax], al ; add byte ptr [rax], bl ; sti ; jmp qword ptr [rax]
0x00000000004055f0 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d66d : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462ec0 : adc ch, ch ; sti ; jmp rsi
0x0000000000461b91 : adc dword ptr [rax], eax ; add al, cl ; jne 0x461b98 ; jmp qword ptr [rax]
0x000000000044383b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ddae : adc dword ptr [rdx + 0x3d], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000461cc1 : adc eax, 0x1cd80000 ; cld ; jmp rax
0x0000000000442052 : adc eax, 0x2de9 ; add al, ch ; ret
0x0000000000463b7d : adc eax, 0x62800000 ; std ; jmp qword ptr [rdx]
0x0000000000461c91 : adc eax, 0x6b80000 ; cld ; jmp qword ptr [rax]
0x000000000041cb2c : adc eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000046399d : adc eax, dword ptr [rax] ; add al, dh ; iretd ; cld ; jmp qword ptr [rdi]
0x0000000000461c11 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x13], cl ; sti ; jmp qword ptr [rax]
0x0000000000461c41 : adc eax, dword ptr [rax] ; add byte ptr [rax - 2], bh ; sti ; jmp rax
0x00000000004396c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b9d7 : adc eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000462bfb : add ah, ah ; add eax, 0xb3e00000 ; sti ; call qword ptr [rbx]
0x0000000000462bdb : add ah, al ; add eax, 0xb3200000 ; sti ; call rbx
0x00000000004632db : add ah, al ; or al, 0 ; add byte ptr [rax], dl ; cld ; call rdx
0x0000000000446ec3 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000044e89a : add al, 0x15 ; ret
0x000000000042aaf7 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a265 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000046291c : add al, 3 ; add byte ptr [rax], al ; mov al, 0x7e ; cli ; jmp qword ptr [rdx]
0x0000000000462f1c : add al, 9 ; add byte ptr [rax], al ; add bh, ch ; sti ; jmp rcx
0x000000000046353f : add al, ah ; je 0x463543 ; jmp rsi
0x0000000000462bff : add al, ah ; mov bl, -5 ; call qword ptr [rbx]
0x0000000000464c5f : add al, ah ; xor bh, bh ; call qword ptr [rbx]
0x000000000046325f : add al, al ; cld ; call qword ptr [rsi]
0x0000000000462c60 : add al, al ; sti ; call qword ptr [rcx]
0x00000000004621c3 : add al, bh ; sbb edi, esi ; jmp rax
0x0000000000462203 : add al, bl ; and al, 0xfffffffffffffffe ; jmp rax
0x0000000000461f43 : add al, bl ; cld ; jmp rax
0x0000000000461b83 : add al, bl ; jo 0x461b86 ; jmp rax
0x0000000000461e13 : add al, bl ; nop ; cld ; jmp qword ptr [rax]
0x0000000000461cc3 : add al, bl ; sbb al, -4 ; jmp rax
0x00000000004470b9 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000407eba : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443063 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042e194 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004220db : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000461c83 : add al, ch ; add edi, esp ; jmp rax
0x0000000000456581 : add al, ch ; cdq ; mov ebx, 0x33b9fffa ; ret 0xa80b
0x000000000040483e : add al, ch ; cld ; stosd dword ptr [rdi], eax ; add eax, 0xbc50b900 ; ret
0x0000000000462083 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000461d53 : add al, ch ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000041cce7 : add al, ch ; ret
0x0000000000405e7c : add al, ch ; sahf ; ret 0xffff
0x0000000000462103 : add al, ch ; test al, -3 ; jmp rax
0x00000000004620d3 : add al, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000461b93 : add al, cl ; jne 0x461b96 ; jmp qword ptr [rax]
0x0000000000461b13 : add al, cl ; nop ; cli ; jmp qword ptr [rax]
0x0000000000462003 : add al, cl ; xchg ebp, edi ; jmp rax
0x000000000046439f : add al, dh ; fdiv st(5), st(0) ; jmp rdx
0x000000000046399f : add al, dh ; iretd ; cld ; jmp qword ptr [rdi]
0x0000000000463ebf : add al, dh ; jg 0x463ec4 ; jmp qword ptr [rsi]
0x0000000000462b1f : add al, dh ; pop rdi ; sti ; jmp qword ptr [rcx]
0x000000000046317f : add al, dl ; cld ; call qword ptr [rsi]
0x0000000000419be3 : add bh, al ; in al, 0x31 ; ret
0x000000000042dd51 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043e43f : add bh, al ; test dword ptr [rax - 0x2c000002], ecx ; ret 0x39aa
0x0000000000446bbd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000420f6f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x00000000004470bb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000446ec5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000446fbb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000044345e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004431c6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043fe3f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000440416 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000462305 : add bh, bh ; jmp rax
0x0000000000462f20 : add bh, ch ; sti ; jmp rcx
0x000000000045f40f : add bl, dh ; ret
0x000000000042de5a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000461cd3 : add byte ptr [rax + 0x20], ch ; cld ; jmp qword ptr [rax]
0x000000000046313f : add byte ptr [rax + 0x32], ah ; cld ; call qword ptr [rsi]
0x0000000000461a83 : add byte ptr [rax + 0x38], cl ; cli ; jmp rax
0x0000000000461d43 : add byte ptr [rax + 0x55], ch ; cld ; jmp rax
0x0000000000462b1b : add byte ptr [rax + 0x5ff00000], al ; sti ; jmp qword ptr [rcx]
0x0000000000463c9f : add byte ptr [rax + 0x64], dl ; std ; jmp qword ptr [rax]
0x0000000000463dbf : add byte ptr [rax + 0x65], ah ; std ; jmp qword ptr [rdx]
0x000000000046345f : add byte ptr [rax + 0x6a], dl ; cld ; call qword ptr [rdx]
0x0000000000462b9f : add byte ptr [rax + 0x70], ah ; sti ; jmp rbx
0x0000000000461f83 : add byte ptr [rax + 0x7c], ch ; std ; jmp rax
0x000000000041d13f : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x0000000000423506 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x00000000004234be : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000462050 : add byte ptr [rax + rax], ah ; add byte ptr [rax], bh ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x0000000000462633 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cwde ; cli ; stc ; jmp qword ptr [rax]
0x0000000000461c50 : add byte ptr [rax + rax], dl ; add byte ptr [rax - 1], ch ; sti ; jmp qword ptr [rax]
0x0000000000463ebb : add byte ptr [rax + rbx + 0x7ff00000], ah ; std ; jmp qword ptr [rsi]
0x0000000000462ebb : add byte ptr [rax + rcx - 0x12f00000], ah ; sti ; jmp rsi
0x0000000000462e3b : add byte ptr [rax + rcx], ah ; add byte ptr [rax], al ; xor bl, ch ; sti ; jmp qword ptr [rdi]
0x0000000000461c13 : add byte ptr [rax - 0x13], cl ; sti ; jmp qword ptr [rax]
0x0000000000461f03 : add byte ptr [rax - 0x16], ch ; cld ; jmp rax
0x0000000000462153 : add byte ptr [rax - 0x56], ch ; std ; jmp qword ptr [rax]
0x00000000004620c3 : add byte ptr [rax - 0x59], ch ; std ; jmp rax
0x0000000000462093 : add byte ptr [rax - 0x5a], cl ; std ; jmp qword ptr [rax]
0x0000000000417246 : add byte ptr [rax - 0x6bf10000], ah ; ret 0xd284
0x000000000042189d : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004596e1 : add byte ptr [rax - 0x75], cl ; jge 0x45969b ; call rax
0x000000000043c36d : add byte ptr [rax - 0x77], cl ; jge 0x43c370 ; pop rbp ; ret
0x00000000004254f3 : add byte ptr [rax - 0x77], cl ; ret 0x44e8
0x0000000000404816 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000462013 : add byte ptr [rax - 0x78], cl ; std ; jmp qword ptr [rax]
0x0000000000461dd3 : add byte ptr [rax - 0x7c], bh ; cld ; jmp qword ptr [rax]
0x0000000000461dc3 : add byte ptr [rax - 0x7f], bh ; cld ; jmp rax
0x0000000000463fbf : add byte ptr [rax - 0x7f], dl ; std ; jmp qword ptr [rdi]
0x0000000000461c53 : add byte ptr [rax - 1], ch ; sti ; jmp qword ptr [rax]
0x0000000000461c43 : add byte ptr [rax - 2], bh ; sti ; jmp rax
0x0000000000461f50 : add byte ptr [rax], ah ; add byte ptr [rax], al ; sbb ch, dh ; cld ; jmp qword ptr [rax]
0x0000000000462bdf : add byte ptr [rax], ah ; mov bl, -5 ; call rbx
0x00000000004632de : add byte ptr [rax], al ; adc byte ptr [rax - 4], cl ; call rdx
0x0000000000462ebe : add byte ptr [rax], al ; adc ch, ch ; sti ; jmp rsi
0x0000000000463b7a : add byte ptr [rax], al ; adc eax, 0x62800000 ; std ; jmp qword ptr [rdx]
0x000000000046291a : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; mov al, 0x7e ; cli ; jmp qword ptr [rdx]
0x0000000000462f1a : add byte ptr [rax], al ; add al, 9 ; add byte ptr [rax], al ; add bh, ch ; sti ; jmp rcx
0x0000000000462c5e : add byte ptr [rax], al ; add al, al ; sti ; call qword ptr [rcx]
0x0000000000442055 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405e7a : add byte ptr [rax], al ; add al, ch ; sahf ; ret 0xffff
0x000000000042de5b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000044345c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004431c4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000440414 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x0000000000462f1e : add byte ptr [rax], al ; add bh, ch ; sti ; jmp rcx
0x000000000045f40d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000423504 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x00000000004234bc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042189b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000043c36b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x43c372 ; pop rbp ; ret
0x00000000004254f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x44e8
0x0000000000404814 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000045f40b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045e0e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404740 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040526d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c36a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000045f40c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044a692 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041904b : add byte ptr [rax], al ; add byte ptr [rbx + 0x212dbc45], cl ; push rcx ; ret 0x8983
0x000000000041e052 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2b2ddc45], cl ; ret
0x0000000000419b22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x312de045], cl ; ret
0x000000000044a9cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000043940e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000459e37 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000419279 : add byte ptr [rax], al ; add byte ptr [rbx + 0x482dbc45], cl ; ret
0x0000000000417f40 : add byte ptr [rax], al ; add byte ptr [rbx + 0x482dd445], cl ; ret
0x000000000042ab61 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000044a11a : add byte ptr [rax], al ; add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000452743 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000452877 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de045], cl ; ret
0x000000000040ad5b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045de7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x000000000042a7ef : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000405f51 : add byte ptr [rax], al ; add byte ptr [rbx + 0x762dc445], cl ; hlt ; ret
0x0000000000447956 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x0000000000407b56 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d237bb], cl ; ret
0x000000000044a453 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x000000000045eaf9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000045ea75 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004285a3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d23bbb], cl ; ret
0x00000000004445af : add byte ptr [rax], al ; add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x0000000000429c22 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000041dfac : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x0000000000411b03 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x000000000044d7f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c6b845], cl ; ret
0x0000000000459276 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000448b5a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407903 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000452062 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004076ad : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000044464d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000045ebb5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041995b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404b1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043131d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404742 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407d09 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000428285 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004236a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004235c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044335a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041a267 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404e8a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040789f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000450e67 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000043e730 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000428cdf : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000462b5a : add byte ptr [rax], al ; add eax, 0x64a00000 ; sti ; jmp qword ptr [rcx]
0x000000000040526f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041dfc6 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405ec5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044383d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004543aa : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbp ; ret
0x0000000000421ca9 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042816c : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004020c3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000046353a : add byte ptr [rax], al ; and al, 0xf ; add byte ptr [rax], al ; loopne 0x4635bf ; cld ; jmp rsi
0x0000000000462e3a : add byte ptr [rax], al ; and al, 8 ; add byte ptr [rax], al ; xor bl, ch ; sti ; jmp qword ptr [rdi]
0x0000000000462d5e : add byte ptr [rax], al ; and dl, bl ; sti ; jmp qword ptr [rax]
0x0000000000461d52 : add byte ptr [rax], al ; call 0x214619b8
0x0000000000405e7b : add byte ptr [rax], al ; call 0x402124
0x0000000000444ebd : add byte ptr [rax], al ; call 0x402128
0x0000000000461c82 : add byte ptr [rax], al ; call 0xffffffffe1461891
0x0000000000462082 : add byte ptr [rax], al ; call 0xffffffffe1461e33
0x0000000000462102 : add byte ptr [rax], al ; call 0xffffffffe1461eb6
0x00000000004621c2 : add byte ptr [rax], al ; clc ; sbb edi, esi ; jmp rax
0x0000000000462402 : add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ch ; jmp rax
0x0000000000461a82 : add byte ptr [rax], al ; cmp dl, dil ; jmp rax
0x0000000000462092 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000461ad2 : add byte ptr [rax], al ; cwde ; cli ; jmp qword ptr [rax]
0x0000000000461ac2 : add byte ptr [rax], al ; cwde ; cli ; jmp rax
0x0000000000462636 : add byte ptr [rax], al ; cwde ; cli ; stc ; jmp qword ptr [rax]
0x0000000000461e92 : add byte ptr [rax], al ; cwde ; iretd ; cld ; jmp qword ptr [rax]
0x00000000004623c2 : add byte ptr [rax], al ; fcomp dword ptr [rbx - 1] ; jmp rax
0x0000000000462282 : add byte ptr [rax], al ; fcomp dword ptr [rdx - 2] ; jmp rax
0x0000000000461cc2 : add byte ptr [rax], al ; fcomp dword ptr [rsp + rdi*8] ; jmp rax
0x0000000000461b82 : add byte ptr [rax], al ; fdiv dword ptr [rax - 5] ; jmp rax
0x0000000000461f42 : add byte ptr [rax], al ; fdiv st(2) ; cld ; jmp rax
0x0000000000462202 : add byte ptr [rax], al ; fsub dword ptr [rsi + rdi*8] ; jmp rax
0x00000000004649fa : add byte ptr [rax], al ; in al, 0x23 ; add byte ptr [rax], al ; sub bl, -2 ; jmp qword ptr [rsi]
0x0000000000462bfa : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; loopne 0x462bbe ; sti ; call qword ptr [rbx]
0x0000000000461c12 : add byte ptr [rax], al ; in eax, dx ; sti ; jmp qword ptr [rax]
0x00000000004021b9 : add byte ptr [rax], al ; jmp 0x4020d9
0x0000000000428cdb : add byte ptr [rax], al ; jmp 0x428cea
0x000000000045e3b9 : add byte ptr [rax], al ; jmp 0x45e3c8
0x000000000045f029 : add byte ptr [rax], al ; jmp 0x45f038
0x0000000000461c42 : add byte ptr [rax], al ; js 0x461c49 ; sti ; jmp rax
0x0000000000461dc2 : add byte ptr [rax], al ; js 0x461d4c ; cld ; jmp rax
0x0000000000461dd2 : add byte ptr [rax], al ; js 0x461d5f ; cld ; jmp qword ptr [rax]
0x0000000000462bfe : add byte ptr [rax], al ; loopne 0x462bba ; sti ; call qword ptr [rbx]
0x000000000046353e : add byte ptr [rax], al ; loopne 0x4635bb ; cld ; jmp rsi
0x00000000004629be : add byte ptr [rax], al ; mov al, -0x7d ; cli ; call rsp
0x000000000046449e : add byte ptr [rax], al ; mov al, -0xc ; std ; call rdx
0x000000000046355e : add byte ptr [rax], al ; mov al, 0x75 ; cld ; call rax
0x000000000046291e : add byte ptr [rax], al ; mov al, 0x7e ; cli ; jmp qword ptr [rdx]
0x0000000000461c02 : add byte ptr [rax], al ; mov al, bl ; sti ; jmp rax
0x00000000004585cc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000045854d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000462012 : add byte ptr [rax], al ; mov bpl, dil ; jmp qword ptr [rax]
0x0000000000461d92 : add byte ptr [rax], al ; mov byte ptr [rax - 4], ch ; jmp qword ptr [rax]
0x0000000000461d12 : add byte ptr [rax], al ; mov byte ptr [rcx - 4], cl ; jmp qword ptr [rax]
0x0000000000462442 : add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; jmp rax
0x0000000000462182 : add byte ptr [rax], al ; mov dl, ch ; std ; jmp rax
0x000000000045f237 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045482d : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000043bfca : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000043bffa : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c12d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c289 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042198d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c0a1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004002fa : add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x000000000043c36c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000427829 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042a1fc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000430be9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044562c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042189c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000462eba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], dl ; in eax, dx ; sti ; jmp rsi
0x0000000000463eba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add al, dh ; jg 0x463ec9 ; jmp qword ptr [rsi]
0x0000000000463fba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], dl ; std ; jmp qword ptr [rdi]
0x0000000000462f9e : add byte ptr [rax], al ; nop ; sti ; call qword ptr [rbx]
0x000000000046325a : add byte ptr [rax], al ; or al, 0 ; add al, al ; cld ; call qword ptr [rsi]
0x00000000004623d2 : add byte ptr [rax], al ; or byte ptr [rbx - 1], ah ; jmp qword ptr [rax]
0x000000000046317a : add byte ptr [rax], al ; or eax, dword ptr fs:[rax] ; add al, dl ; cld ; call qword ptr [rsi]
0x0000000000462f1f : add byte ptr [rax], al ; out dx, eax ; sti ; jmp rcx
0x0000000000405110 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043940f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a1d7 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ad5c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046345e : add byte ptr [rax], al ; push rax ; push -4 ; call qword ptr [rdx]
0x0000000000463c9e : add byte ptr [rax], al ; push rax ; std ; jmp qword ptr [rax]
0x000000000045f40e : add byte ptr [rax], al ; ret
0x000000000046317e : add byte ptr [rax], al ; sal byte ptr [rsi], 1 ; cld ; call qword ptr [rsi]
0x0000000000462632 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cwde ; cli ; stc ; jmp qword ptr [rax]
0x0000000000461b52 : add byte ptr [rax], al ; sbb byte ptr [rbx - 5], al ; jmp qword ptr [rax]
0x0000000000461f52 : add byte ptr [rax], al ; sbb ch, dh ; cld ; jmp qword ptr [rax]
0x000000000046355a : add byte ptr [rax], al ; sldt word ptr [rax] ; mov al, 0x75 ; cld ; call rax
0x0000000000462192 : add byte ptr [rax], al ; sub al, bh ; std ; jmp qword ptr [rax]
0x0000000000464bff : add byte ptr [rax], al ; sub bh, bh ; call qword ptr [rax]
0x00000000004649fe : add byte ptr [rax], al ; sub bl, -2 ; jmp qword ptr [rsi]
0x0000000000461d82 : add byte ptr [rax], al ; sub byte ptr [rbp - 4], ah ; jmp rax
0x0000000000461b42 : add byte ptr [rax], al ; sub byte ptr [rcx - 5], al ; jmp rax
0x0000000000461f12 : add byte ptr [rax], al ; sub dh, ch ; cld ; jmp qword ptr [rax]
0x0000000000461bd2 : add byte ptr [rax], al ; sub dl, dl ; sti ; jmp qword ptr [rax]
0x0000000000461e82 : add byte ptr [rax], al ; test al, -0x43 ; cld ; jmp rax
0x0000000000461e42 : add byte ptr [rax], al ; test al, -0x61 ; cld ; jmp rax
0x0000000000461fc2 : add byte ptr [rax], al ; test al, -0x7b ; std ; jmp rax
0x0000000000461a92 : add byte ptr [rax], al ; test al, 0x3d ; cli ; jmp qword ptr [rax]
0x0000000000461d02 : add byte ptr [rax], al ; test al, 0x42 ; cld ; jmp rax
0x0000000000461a52 : add byte ptr [rax], al ; test al, 0xe ; cli ; jmp qword ptr [rax]
0x0000000000462f9a : add byte ptr [rax], al ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; nop ; sti ; call qword ptr [rbx]
0x0000000000462b9a : add byte ptr [rax], al ; test byte ptr [rip + 0x70600000], al ; sti ; jmp rbx
0x000000000046439a : add byte ptr [rax], al ; test byte ptr [rip - 0x23100000], bl ; std ; jmp rdx
0x000000000046449a : add byte ptr [rax], al ; test byte ptr [rsi], bl ; add byte ptr [rax], al ; mov al, -0xc ; std ; call rdx
0x000000000046349a : add byte ptr [rax], al ; test byte ptr [rsi], cl ; add byte ptr [rax], al ; push rax ; push -4 ; call qword ptr [rdx]
0x0000000000463c9a : add byte ptr [rax], al ; test byte ptr [rsi], dl ; add byte ptr [rax], al ; push rax ; std ; jmp qword ptr [rax]
0x0000000000462e3e : add byte ptr [rax], al ; xor bl, ch ; sti ; jmp qword ptr [rdi]
0x0000000000462403 : add byte ptr [rax], bh ; push -1 ; jmp rax
0x0000000000462053 : add byte ptr [rax], bh ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x0000000000461d50 : add byte ptr [rax], bl ; add byte ptr [rax], al ; call 0x214619ba
0x0000000000461f53 : add byte ptr [rax], bl ; cmc ; cld ; jmp qword ptr [rax]
0x0000000000461b53 : add byte ptr [rax], bl ; sti ; jmp qword ptr [rax]
0x0000000000462193 : add byte ptr [rax], ch ; clc ; std ; jmp qword ptr [rax]
0x0000000000461d83 : add byte ptr [rax], ch ; cld ; jmp rax
0x0000000000461f13 : add byte ptr [rax], ch ; out dx, al ; cld ; jmp qword ptr [rax]
0x0000000000461bd3 : add byte ptr [rax], ch ; sar bl, cl ; jmp qword ptr [rax]
0x0000000000461b43 : add byte ptr [rax], ch ; sti ; jmp rax
0x0000000000462383 : add byte ptr [rax], ch ; xor bh, bh ; jmp rax
0x0000000000462303 : add byte ptr [rax], cl ; add bh, bh ; jmp rax
0x00000000004623d3 : add byte ptr [rax], cl ; movsxd rdi, edi ; jmp qword ptr [rax]
0x0000000000462143 : add byte ptr [rax], cl ; stosb byte ptr [rdi], al ; std ; jmp rax
0x0000000000462243 : add byte ptr [rax], cl ; sub edi, esi ; jmp rax
0x0000000000461fd3 : add byte ptr [rax], cl ; xchg ch, bh ; jmp qword ptr [rax]
0x0000000000461b50 : add byte ptr [rax], dl ; add byte ptr [rax], al ; sbb byte ptr [rbx - 5], al ; jmp qword ptr [rax]
0x00000000004632df : add byte ptr [rax], dl ; cld ; call rdx
0x0000000000462ebf : add byte ptr [rax], dl ; in eax, dx ; sti ; jmp rsi
0x0000000000462b9b : add byte ptr [rbp + rax + 0x70600000], al ; sti ; jmp rbx
0x000000000046439b : add byte ptr [rbp + rbx - 0x23100000], al ; std ; jmp rdx
0x000000000044a694 : add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000044b0bc : add byte ptr [rbx + 0x182d8445], cl ; ret
0x000000000042b1c5 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042b207 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000041904d : add byte ptr [rbx + 0x212dbc45], cl ; push rcx ; ret 0x8983
0x000000000041e054 : add byte ptr [rbx + 0x2b2ddc45], cl ; ret
0x000000000043c4ff : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x43c4e7 ; ret
0x0000000000419b24 : add byte ptr [rbx + 0x312de045], cl ; ret
0x000000000042911a : add byte ptr [rbx + 0x352dec45], cl ; sub al, -0x4c ; ret
0x0000000000429146 : add byte ptr [rbx + 0x362dec45], cl ; sub al, -0x4c ; ret
0x000000000044a9cd : add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000044ad83 : add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x0000000000439410 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041a1d8 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044a0d1 : add byte ptr [rbx + 0x42d8445], cl ; ret 0xa43c
0x0000000000419230 : add byte ptr [rbx + 0x472dbc45], cl ; ret
0x0000000000459e39 : add byte ptr [rbx + 0x472de045], cl ; ret
0x000000000041927b : add byte ptr [rbx + 0x482dbc45], cl ; ret
0x0000000000417f42 : add byte ptr [rbx + 0x482dd445], cl ; ret
0x000000000042ab63 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000044a11c : add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000452745 : add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000452879 : add byte ptr [rbx + 0x562de045], cl ; ret
0x00000000004445c7 : add byte ptr [rbx + 0x5d2dd045], cl ; test al, -2 ; ret 0x4589
0x000000000040ad5d : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045de80 : add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x000000000042a7f1 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000405f53 : add byte ptr [rbx + 0x762dc445], cl ; hlt ; ret
0x0000000000447958 : add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x00000000004629bb : add byte ptr [rbx + rax - 0x7c500000], ah ; cli ; call rsp
0x000000000046291b : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; mov al, 0x7e ; cli ; jmp qword ptr [rdx]
0x000000000046317b : add byte ptr [rbx + rcx], ah ; add al, dl ; cld ; call qword ptr [rsi]
0x000000000046399b : add byte ptr [rbx + rdx - 0x30100000], al ; cld ; jmp qword ptr [rdi]
0x0000000000407b58 : add byte ptr [rbx - 0x15d237bb], cl ; ret
0x000000000044cb05 : add byte ptr [rbx - 0x20d24fbb], cl ; push rbx ; ret 0x8589
0x000000000044cac3 : add byte ptr [rbx - 0x21d24fbb], cl ; push rbx ; ret 0x4589
0x000000000046431b : add byte ptr [rbx - 0x3e600000], al ; std ; jmp rdi
0x000000000044b2fb : add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000044a455 : add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x000000000045eafb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000045ea77 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004285a5 : add byte ptr [rbx - 0x68d23bbb], cl ; ret
0x000000000042156f : add byte ptr [rbx - 0x6bd243bb], cl ; sbb ch, bh ; ret 0x8589
0x00000000004445b1 : add byte ptr [rbx - 0x71d22fbb], cl ; ret 0xba03
0x0000000000429c24 : add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000041dfae : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x000000000040647c : add byte ptr [rbx - 0xfb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406642 : add byte ptr [rbx - 0xff4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000462010 : add byte ptr [rbx], ah ; add byte ptr [rax], al ; mov bpl, dil ; jmp qword ptr [rax]
0x000000000042076a : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000461c10 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; in eax, dx ; sti ; jmp qword ptr [rax]
0x0000000000411b05 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x000000000044d7f7 : add byte ptr [rcx + 0x45c6b845], cl ; ret
0x0000000000417243 : add byte ptr [rcx + 0xa000ff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000446c9f : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000459278 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000448b5c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407905 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d142 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004076af : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000044d692 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000463fbb : add byte ptr [rcx + rbx - 0x7eb00000], ah ; std ; jmp qword ptr [rdi]
0x0000000000462f9b : add byte ptr [rcx + rcx - 0xd700000], al ; sti ; call qword ptr [rbx]
0x0000000000462f1b : add byte ptr [rcx + rcx], al ; add byte ptr [rax], al ; add bh, ch ; sti ; jmp rcx
0x00000000004246a2 : add byte ptr [rcx - 0xe76b], cl ; dec dword ptr [rax - 0x77] ; ret 0x8d89
0x0000000000406678 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004028a8 : add byte ptr [rcx], al ; ret
0x000000000044464f : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000461d90 : add byte ptr [rcx], bl ; add byte ptr [rax], al ; mov byte ptr [rax - 4], ch ; jmp qword ptr [rax]
0x0000000000462190 : add byte ptr [rcx], ch ; add byte ptr [rax], al ; sub al, bh ; std ; jmp qword ptr [rax]
0x00000000004401d7 : add byte ptr [rdi + 0x3d], bh ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046353b : add byte ptr [rdi + rcx], ah ; add byte ptr [rax], al ; loopne 0x4635be ; cld ; jmp rsi
0x0000000000463dbb : add byte ptr [rdi + rdx + 0x65600000], ah ; std ; jmp qword ptr [rdx]
0x0000000000461f10 : add byte ptr [rdi], bl ; add byte ptr [rax], al ; sub dh, ch ; cld ; jmp qword ptr [rax]
0x000000000043c2ba : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045ebb7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041995d : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404b21 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043131f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404744 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407d0b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000428287 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004236aa : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004235c6 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044335c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041a269 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404e8c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004078a1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000450e69 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000461d10 : add byte ptr [rdi], dl ; add byte ptr [rax], al ; mov byte ptr [rcx - 4], cl ; jmp qword ptr [rax]
0x00000000004630bb : add byte ptr [rdx + rcx + 0x25100000], ah ; cld ; call qword ptr [rcx]
0x0000000000427f4d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000461dd0 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; js 0x461d61 ; cld ; jmp qword ptr [rax]
0x00000000004623d0 : add byte ptr [rdx], dh ; add byte ptr [rax], al ; or byte ptr [rbx - 1], ah ; jmp qword ptr [rax]
0x0000000000461bd0 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; sub dl, dl ; sti ; jmp qword ptr [rax]
0x0000000000461a90 : add byte ptr [rip + 0x3da80000], cl ; cli ; jmp qword ptr [rax]
0x0000000000461c90 : add byte ptr [rip + 0x6b80000], dl ; cld ; jmp qword ptr [rax]
0x0000000000461e90 : add byte ptr [rip - 0x30680000], bl ; cld ; jmp qword ptr [rax]
0x0000000000462090 : add byte ptr [rip - 0x59b80000], ah ; std ; jmp qword ptr [rax]
0x000000000042a67d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000046449b : add byte ptr [rsi + rbx - 0xb500000], al ; std ; call rdx
0x000000000046349b : add byte ptr [rsi + rcx + 0x6a500000], al ; cld ; call qword ptr [rdx]
0x000000000046347b : add byte ptr [rsi + rcx], ah ; add byte ptr [rax + 0x6a], dl ; cld ; call qword ptr [rdx]
0x000000000046345b : add byte ptr [rsi + rcx], al ; add byte ptr [rax + 0x6a], dl ; cld ; call qword ptr [rdx]
0x0000000000463c9b : add byte ptr [rsi + rdx + 0x64500000], al ; std ; jmp qword ptr [rax]
0x0000000000464c5b : add byte ptr [rsi], al ; add al, ah ; xor bh, bh ; call qword ptr [rbx]
0x0000000000461ad0 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; cwde ; cli ; jmp qword ptr [rax]
0x000000000046325b : add byte ptr [rsp + rcx], al ; add al, al ; cld ; call qword ptr [rsi]
0x00000000004481bb : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000457286 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000462101 : add byte ptr es:[rax], al ; call 0xffffffffe1461eb7
0x00000000004028a7 : add byte ptr es:[rcx], al ; ret
0x000000000040473e : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000425645 : add cl, ch ; ret
0x000000000043e732 : add cl, ch ; ret 0
0x00000000004059cc : add cl, ch ; ret 1
0x0000000000428ce1 : add cl, ch ; ret 2
0x000000000042555b : add dh, 0 ; xor bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x00000000004300da : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000042dd4f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000420f6d : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x0000000000439685 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a1d6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000439daa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000456ff8 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043e896 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004222c5 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000427a98 : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004302cb : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042221b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x0000000000421a8b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042135b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000042a5c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000443770 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a1bf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421bb9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000444677 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004282a7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004057ce : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004080c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000417155 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x00000000004028a4 : add eax, 0x263bee ; add ebx, esi ; ret
0x0000000000462b1d : add eax, 0x5ff00000 ; sti ; jmp qword ptr [rcx]
0x0000000000462b5d : add eax, 0x64a00000 ; sti ; jmp qword ptr [rcx]
0x0000000000462b9d : add eax, 0x70600000 ; sti ; jmp rbx
0x0000000000462bdd : add eax, 0xb3200000 ; sti ; call rbx
0x0000000000462bfd : add eax, 0xb3e00000 ; sti ; call qword ptr [rbx]
0x000000000045e10e : add eax, 0xb8000001 ; pop rdi ; pop rdx ; ret
0x0000000000404842 : add eax, 0xbc50b900 ; ret
0x0000000000400335 : add eax, 0xd0a4f270 ; ret
0x0000000000450ffa : add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000042076b : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041922e : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x472dbc45], cl ; ret
0x000000000044b2f9 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x0000000000425643 : add eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004059ca : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045d7e6 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042aaf9 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040286b : add eax, edx ; sar rax, 1 ; jne 0x40287c ; pop rbp ; ret
0x00000000004201aa : add ebp, ecx ; ret
0x00000000004028a9 : add ebx, esi ; ret
0x0000000000419bbc : add edi, eax ; in al, 0x31 ; ret
0x0000000000461c85 : add edi, esp ; jmp rax
0x000000000041f310 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b6b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406676 : add esp, 0x100 ; pop rbp ; ret
0x00000000004055ee : add esp, 0x110 ; pop rbp ; ret
0x0000000000439da7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004575a7 : add esp, 0x11a0 ; pop rbp ; ret
0x00000000004236f8 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000042f0af : add esp, 0x120 ; pop rbp ; ret
0x0000000000455928 : add esp, 0x130 ; pop rbp ; ret
0x0000000000449947 : add esp, 0x140 ; pop rbp ; ret
0x000000000042429a : add esp, 0x150 ; pop rbp ; ret
0x000000000042fc9e : add esp, 0x160 ; pop rbp ; ret
0x0000000000419a14 : add esp, 0x170 ; pop rbp ; ret
0x000000000041f1b0 : add esp, 0x18 ; pop rbp ; ret
0x000000000045f4ab : add esp, 0x18 ; ret
0x000000000041ec24 : add esp, 0x190 ; pop rbp ; ret
0x000000000042e9bc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040a0f4 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004255bb : add esp, 0x1d0 ; pop rbp ; ret
0x000000000043af55 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000407f03 : add esp, 0x20 ; pop rbp ; ret
0x0000000000427f4b : add esp, 0x200 ; pop rbp ; ret
0x000000000045d66b : add esp, 0x210 ; pop rbp ; ret
0x000000000044207d : add esp, 0x260 ; pop rbp ; ret
0x0000000000407a9c : add esp, 0x270 ; pop rbp ; ret
0x000000000045bed3 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004451ea : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000405ec8 : add esp, 0x30 ; pop rbp ; ret
0x00000000004097ab : add esp, 0x370 ; pop rbp ; ret
0x000000000041e0e9 : add esp, 0x40 ; pop rbp ; ret
0x00000000004404ac : add esp, 0x410 ; pop rbp ; ret
0x0000000000417d2b : add esp, 0x440 ; pop rbp ; ret
0x00000000004543ad : add esp, 0x48 ; pop rbp ; ret
0x000000000040510c : add esp, 0x4a0 ; pop rbp ; ret
0x000000000044c9a6 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000402b24 : add esp, 0x50 ; pop rbp ; ret
0x0000000000451667 : add esp, 0x5f0 ; pop rbp ; ret
0x000000000040a9e8 : add esp, 0x60 ; pop rbp ; ret
0x00000000004057d3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000407d2a : add esp, 0x80 ; pop rbp ; ret
0x0000000000418fee : add esp, 0x90 ; pop rbp ; ret
0x000000000041def1 : add esp, 0x958 ; pop rbx ; pop rbp ; ret
0x000000000040ad58 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000043084e : add esp, 0xa0 ; pop rbp ; ret
0x00000000004217d8 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000418232 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004390e4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000429ba2 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000418938 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042487b : add esp, 0xf0 ; pop rbp ; ret
0x0000000000429406 : add esp, 8 ; pop rbp ; ret
0x00000000004020c6 : add esp, 8 ; ret
0x0000000000425642 : add r8, qword ptr [rax] ; add cl, ch ; ret
0x000000000045d7e5 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042aaf8 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040286a : add rax, rdx ; sar rax, 1 ; jne 0x40287d ; pop rbp ; ret
0x000000000041f30f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b6a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406675 : add rsp, 0x100 ; pop rbp ; ret
0x00000000004055ed : add rsp, 0x110 ; pop rbp ; ret
0x0000000000439da6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004575a6 : add rsp, 0x11a0 ; pop rbp ; ret
0x00000000004236f7 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000042f0ae : add rsp, 0x120 ; pop rbp ; ret
0x0000000000455927 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000449946 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000424299 : add rsp, 0x150 ; pop rbp ; ret
0x000000000042fc9d : add rsp, 0x160 ; pop rbp ; ret
0x0000000000419a13 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041f1af : add rsp, 0x18 ; pop rbp ; ret
0x000000000045f4aa : add rsp, 0x18 ; ret
0x000000000041ec23 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042e9bb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040a0f3 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004255ba : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000043af54 : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000407f02 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000427f4a : add rsp, 0x200 ; pop rbp ; ret
0x000000000045d66a : add rsp, 0x210 ; pop rbp ; ret
0x000000000044207c : add rsp, 0x260 ; pop rbp ; ret
0x0000000000407a9b : add rsp, 0x270 ; pop rbp ; ret
0x000000000045bed2 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004451e9 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000405ec7 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004097aa : add rsp, 0x370 ; pop rbp ; ret
0x000000000041e0e8 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004404ab : add rsp, 0x410 ; pop rbp ; ret
0x0000000000417d2a : add rsp, 0x440 ; pop rbp ; ret
0x00000000004543ac : add rsp, 0x48 ; pop rbp ; ret
0x000000000040510b : add rsp, 0x4a0 ; pop rbp ; ret
0x000000000044c9a5 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000402b23 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000451666 : add rsp, 0x5f0 ; pop rbp ; ret
0x000000000040a9e7 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004057d2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000407d29 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000418fed : add rsp, 0x90 ; pop rbp ; ret
0x000000000041def0 : add rsp, 0x958 ; pop rbx ; pop rbp ; ret
0x000000000040ad57 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000043084d : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004217d7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000418231 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004390e3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000429ba1 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000418937 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042487a : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000429405 : add rsp, 8 ; pop rbp ; ret
0x00000000004020c5 : add rsp, 8 ; ret
0x0000000000461cd5 : and ah, bh ; jmp qword ptr [rax]
0x0000000000462081 : and al, 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000462051 : and al, 0 ; add byte ptr [rax], bh ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x000000000046353c : and al, 0xf ; add byte ptr [rax], al ; loopne 0x4635bd ; cld ; jmp rsi
0x0000000000462205 : and al, 0xfffffffffffffffe ; jmp rax
0x00000000004080c0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000462e3c : and al, 8 ; add byte ptr [rax], al ; xor bl, ch ; sti ; jmp qword ptr [rdi]
0x0000000000462001 : and al, byte ptr [rax] ; add al, cl ; xchg ebp, edi ; jmp rax
0x0000000000461fd1 : and al, byte ptr [rax] ; add byte ptr [rax], cl ; xchg ch, bh ; jmp qword ptr [rax]
0x000000000044cd08 : and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x00000000004300d8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000461f81 : and byte ptr [rax], al ; add byte ptr [rax + 0x7c], ch ; std ; jmp rax
0x0000000000461f51 : and byte ptr [rax], al ; add byte ptr [rax], bl ; cmc ; cld ; jmp qword ptr [rax]
0x0000000000453182 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004532dc : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f0b1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421359 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x00000000004300d7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000422219 : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000462d60 : and dl, bl ; sti ; jmp qword ptr [rax]
0x000000000042b9d5 : and eax, 0x461310 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004263af : and eax, 0x6668e8 ; pop rbp ; ret
0x000000000042685f : and eax, 0x6668f0 ; pop rbp ; ret
0x0000000000426883 : and eax, 0x6668f8 ; pop rbp ; ret
0x0000000000462091 : and eax, 0xa6480000 ; std ; jmp qword ptr [rax]
0x00000000004620c1 : and eax, 0xa7680000 ; std ; jmp rax
0x0000000000462011 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x78], cl ; std ; jmp qword ptr [rax]
0x0000000000461d54 : call 0x214619b6
0x000000000041562f : call 0x22415634
0x0000000000405e7d : call 0x402122
0x0000000000444ebf : call 0x402126
0x0000000000444e8c : call 0x4021f6
0x000000000044b9b2 : call 0x402409
0x000000000041ea99 : call 0x402606
0x0000000000406488 : call 0x4026b2
0x000000000041da3b : call 0x41ec67
0x0000000000415960 : call 0x421bd2
0x000000000041e8d0 : call 0x430996
0x0000000000415049 : call 0x441262
0x000000000044b72a : call 0x4479e2
0x000000000044d7b8 : call 0x45a4f6
0x000000000040483f : call 0x45f448
0x000000000042d8c6 : call 0xffffffff8a053e68
0x0000000000461c84 : call 0xffffffffe146188f
0x0000000000462084 : call 0xffffffffe1461e31
0x0000000000462104 : call 0xffffffffe1461eb4
0x0000000000439129 : call 0xffffffffe9061a79
0x0000000000439128 : call 0xffffffffe9061a7a
0x0000000000457045 : call 0xfffffffff011f617
0x0000000000457044 : call 0xfffffffff011f618
0x000000000045727f : call 0xfffffffff016300b
0x0000000000434b6d : call 0xfffffffff73bd104
0x0000000000415050 : call 0xfffffffffb0dd622
0x000000000041504f : call 0xfffffffffb0dd623
0x000000000045b995 : call 0xffffffffff4a3f6a
0x0000000000437699 : call 0xffffffffff57fc6b
0x0000000000437698 : call 0xffffffffff57fc6c
0x0000000000437699 : call 0xffffffffff57fc6d
0x0000000000437698 : call 0xffffffffff57fc6e
0x000000000042c9b7 : call 0xffffffffff7c5508
0x000000000042c9b6 : call 0xffffffffff7c5509
0x000000000045f3e9 : call qword ptr [r12 + rbx*8]
0x000000000041d7cc : call qword ptr [rax]
0x000000000041eb62 : call qword ptr [rbp - 0x1d]
0x00000000004134b8 : call qword ptr [rbx]
0x000000000040d72a : call qword ptr [rcx]
0x00000000004647e3 : call qword ptr [rdi]
0x0000000000436653 : call qword ptr [rdx]
0x000000000042c8e1 : call qword ptr [rsi]
0x000000000045f3ea : call qword ptr [rsp + rbx*8]
0x0000000000459264 : call r8
0x000000000042ca53 : call rax
0x0000000000413d31 : call rbx
0x000000000044ea23 : call rcx
0x000000000043b8eb : call rdi
0x000000000042a997 : call rdx
0x0000000000443464 : call rsi
0x0000000000415028 : call rsp
0x0000000000456583 : cdq ; mov ebx, 0x33b9fffa ; ret 0xa80b
0x000000000045ea7c : cdq ; ret
0x000000000043c130 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000455926 : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000042b4e3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004565ed : clc ; add rsp, 0x200 ; pop rbp ; ret
0x000000000045d669 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x000000000045c4a7 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421195 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000452c53 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045dce0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004583b1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042b133 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000042b891 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000457ba3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004528f3 : clc ; cli ; inc edi ; in al, 0x56 ; ret
0x000000000040286f : clc ; jne 0x402878 ; pop rbp ; ret
0x000000000041ec67 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000045a4d8 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000459d47 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000045d68b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042fcde : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000429ebb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000429edb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429efb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043c30b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043c34b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043c32b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040a4e7 : clc ; pop rbp ; ret
0x00000000004621c4 : clc ; sbb edi, esi ; jmp rax
0x0000000000462195 : clc ; std ; jmp qword ptr [rax]
0x0000000000402b97 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a7bf : cld ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004630c2 : cld ; call qword ptr [rcx]
0x0000000000463462 : cld ; call qword ptr [rdx]
0x0000000000463142 : cld ; call qword ptr [rsi]
0x0000000000463562 : cld ; call rax
0x00000000004632e2 : cld ; call rdx
0x0000000000461c8e : cld ; inc dword ptr [rax] ; adc eax, 0x6b80000 ; cld ; jmp qword ptr [rax]
0x0000000000461f4e : cld ; inc dword ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rax], bl ; cmc ; cld ; jmp qword ptr [rax]
0x0000000000461dce : cld ; inc dword ptr [rax] ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7c], bh ; cld ; jmp qword ptr [rax]
0x0000000000461d4e : cld ; inc dword ptr [rax] ; sbb byte ptr [rax], al ; add al, ch ; pop rdx ; cld ; jmp qword ptr [rax]
0x0000000000461e8e : cld ; inc dword ptr [rax] ; sbb eax, 0xcf980000 ; cld ; jmp qword ptr [rax]
0x0000000000461e0e : cld ; inc dword ptr [rax] ; sbb eax, dword ptr [rax] ; add al, bl ; nop ; cld ; jmp qword ptr [rax]
0x0000000000461c7e : cld ; inc eax ; adc al, 0 ; add al, ch ; add edi, esp ; jmp rax
0x0000000000461cbe : cld ; inc eax ; adc eax, 0x1cd80000 ; cld ; jmp rax
0x0000000000461d7e : cld ; inc eax ; sbb byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; jmp rax
0x0000000000461dbe : cld ; inc eax ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], bh ; cld ; jmp rax
0x0000000000461ebe : cld ; inc eax ; sbb eax, 0xe2b80000 ; cld ; jmp rax
0x0000000000461c96 : cld ; jmp qword ptr [rax]
0x00000000004639a2 : cld ; jmp qword ptr [rdi]
0x0000000000461c86 : cld ; jmp rax
0x0000000000463222 : cld ; jmp rbx
0x0000000000463542 : cld ; jmp rsi
0x00000000004372ed : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000404840 : cld ; stosd dword ptr [rdi], eax ; add eax, 0xbc50b900 ; ret
0x000000000041d13e : cli ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x0000000000427a34 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004481ba : cli ; add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004629c2 : cli ; call rsp
0x0000000000461a8e : cli ; inc dword ptr [rax] ; or eax, 0x3da80000 ; cli ; jmp qword ptr [rax]
0x0000000000461a7e : cli ; inc eax ; or al, 0 ; add byte ptr [rax + 0x38], cl ; cli ; jmp rax
0x0000000000461abe : cli ; inc eax ; or eax, 0x64980000 ; cli ; jmp rax
0x00000000004528f4 : cli ; inc edi ; in al, 0x56 ; ret
0x0000000000461a56 : cli ; jmp qword ptr [rax]
0x0000000000462922 : cli ; jmp qword ptr [rdx]
0x0000000000461a86 : cli ; jmp rax
0x0000000000462639 : cli ; stc ; jmp qword ptr [rax]
0x0000000000461f55 : cmc ; cld ; jmp qword ptr [rax]
0x000000000044cd05 : cmc ; movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x00000000004488d9 : cmovs ecx, dword ptr [rbx - 0x7eb737ab] ; ret 0xffff
0x000000000045af9d : cmp al, -0x2a ; ret
0x000000000044ad88 : cmp al, -0x6a ; ret
0x000000000043c434 : cmp byte ptr [rax], dh ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045348d : cmp byte ptr [rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000462404 : cmp byte ptr [rdx - 1], ch ; jmp rax
0x0000000000402843 : cmp byte ptr [rsi], ah ; jmp rax
0x0000000000402883 : cmp byte ptr [rsi], ah ; jmp rdx
0x000000000045348c : cmp byte ptr ds:[rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000425f43 : cmp ch, byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000461a85 : cmp dl, bh ; jmp rax
0x0000000000461a84 : cmp dl, dil ; jmp rax
0x0000000000425eef : cmp dword ptr [rdi], ebp ; outsb dx, byte ptr [rsi] ; ret
0x000000000040282d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402840 ; pop rbp ; ret
0x000000000043df11 : cmp ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004028a6 : cmp esp, dword ptr [rsi] ; add byte ptr [rcx], al ; ret
0x0000000000462095 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000004395c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000044d982 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x00000000004620d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000004620c5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x000000000040ad5a : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041da3a : cwde ; call 0x41ec68
0x0000000000461ad4 : cwde ; cli ; jmp qword ptr [rax]
0x0000000000461ac4 : cwde ; cli ; jmp rax
0x0000000000462638 : cwde ; cli ; stc ; jmp qword ptr [rax]
0x0000000000461e94 : cwde ; iretd ; cld ; jmp qword ptr [rax]
0x00000000004172fa : cwde ; jmp 0x417d3a
0x000000000041e781 : cwde ; jmp 0x41ec33
0x000000000041e780 : cwde ; jmp 0x41ec34
0x000000000044bc91 : cwde ; jmp 0x44c9b6
0x000000000044bc90 : cwde ; jmp 0x44c9b7
0x000000000045e57b : cwde ; js 0x45e525 ; ret
0x000000000045e5c2 : cwde ; js 0x45e56c ; ret
0x000000000045e5fc : cwde ; js 0x45e5a6 ; ret
0x000000000042624a : cwde ; ret 0x45e9
0x0000000000425eb8 : cwde ; ret 0x8589
0x00000000004261e0 : cwde ; ret 0xafe9
0x000000000041493c : dec dword ptr [rax + 0x39] ; ret 0xf40
0x000000000040a4e3 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004246a8 : dec dword ptr [rax - 0x77] ; ret 0x8d89
0x0000000000406482 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000437492 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000043779d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000414b9c : dec dword ptr [rbx - 0x14c34b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041562c : dec dword ptr [rbx - 0x2174b] ; jmp qword ptr [rcx]
0x0000000000409483 : dec dword ptr [rbx - 0x3434b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040963a : dec dword ptr [rbx - 0x34b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000438ca4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000044ff81 : dec dword ptr [rdi] ; ret 0xc609
0x000000000044939c : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000406ed6 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff7], cl ; ret 1
0x00000000004059c6 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045ce44 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004421a3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041e9a5 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000459687 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x00000000004367d8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000409044 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045725e : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x0000000000411c37 : dec dword ptr [rsi] ; jge 0x411c58 ; ret
0x0000000000411c37 : dec dword ptr [rsi] ; jge 0x411c5a ; ret
0x0000000000456261 : dec eax ; ret 0xd592
0x0000000000422110 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000042210f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004596de : enter -0x74b8, 0 ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004592fc : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x4592c6 ; call rax
0x00000000004595d5 : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x45959f ; call rax
0x000000000045974e : enter -0x74b8, 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x459710 ; call rax
0x000000000044b725 : enter -0x74b8, 0x75 ; shr al, -0x4f ; ret 0xffff
0x000000000044b7cd : enter -0x74b8, 0x75 ; shr al, 9 ; ret 0xffff
0x000000000042aa47 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000452e5e : enter -0x79d3, -0xa ; ret 0x89c8
0x0000000000452e13 : enter -0x7ad3, -0xa ; ret 0x89c8
0x000000000042aafa : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000045218a : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000426151 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045b74b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000426ccb : enter 0x292d, -0x4c ; ret
0x000000000043bfa9 : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x00000000004221dc : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000453133 : enter 0x612d, 1 ; ret 0x897e
0x0000000000461a50 : enter 0xb, 0 ; test al, 0xe ; cli ; jmp qword ptr [rax]
0x0000000000404ed7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000455a94 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043a5d9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004623c4 : fcomp dword ptr [rbx - 1] ; jmp rax
0x0000000000456fa6 : fcomp dword ptr [rdi + rdi*8 - 0x6bf00001] ; ret 0xd284
0x0000000000462284 : fcomp dword ptr [rdx - 2] ; jmp rax
0x0000000000461cc4 : fcomp dword ptr [rsp + rdi*8] ; jmp rax
0x000000000045a0c2 : fcomp qword ptr [rbp - 0x75b54151] ; ret 0x8423
0x0000000000461b84 : fdiv dword ptr [rax - 5] ; jmp rax
0x0000000000461f44 : fdiv st(2) ; cld ; jmp rax
0x00000000004643a1 : fdiv st(5), st(0) ; jmp rdx
0x0000000000461c05 : fdivr st(3) ; jmp rax
0x000000000044cac8 : ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x0000000000427a95 : fild word ptr [rax - 0x49f0fe1e] ; ret 0x8348
0x000000000044cb0a : fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000044cd0b : fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000443e34 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000447743 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000447747 : fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000451a1e : fmul dword ptr [rax - 0x7f] ; ret 0x60
0x0000000000425364 : fmul dword ptr [rax - 0x7f] ; ret 2
0x000000000045f3ec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041ec56 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041ec57 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000462204 : fsub dword ptr [rsi + rdi*8] ; jmp rax
0x00000000004498d7 : fsubr st(0) ; ret
0x0000000000418071 : fsubr st(1) ; ret
0x000000000042c5c4 : fsubr st(1) ; ret 0
0x000000000042d08c : fucompi st(1) ; ret
0x0000000000402b69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004255b9 : hlt ; add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000407a9a : hlt ; add rsp, 0x270 ; pop rbp ; ret
0x000000000044534c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040510a : hlt ; add rsp, 0x4a0 ; pop rbp ; ret
0x0000000000425b63 : hlt ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a9e6 : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000440c98 : hlt ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000041ec6a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000045a4d4 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000402840 : hlt ; pop rbp ; mov edi, 0x666438 ; jmp rax
0x0000000000405f14 : hlt ; ret
0x00000000004644a1 : hlt ; std ; call rdx
0x0000000000456933 : imul ch ; ret
0x000000000044b2f8 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x0000000000442afe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000456987 : imul ebp ; ret
0x00000000004295e8 : in al, -0x17 ; ret
0x000000000041f0ed : in al, -0x17 ; ret 0
0x0000000000436c49 : in al, -0x7f ; ret 0xff9f
0x0000000000436e2f : in al, -0x7f ; ret 0xffbf
0x0000000000436ed5 : in al, -0x7f ; ret 0xffc5
0x0000000000436f03 : in al, -0x7f ; ret 0xffd5
0x0000000000436fd1 : in al, -0x7f ; ret 0xffd8
0x0000000000437167 : in al, -0x7f ; ret 0xffe0
0x0000000000453180 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004532da : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004649fc : in al, 0x23 ; add byte ptr [rax], al ; sub bl, -2 ; jmp qword ptr [rsi]
0x00000000004201a8 : in al, 0x30 ; add ebp, ecx ; ret
0x0000000000419bbf : in al, 0x31 ; ret
0x0000000000406674 : in al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000449945 : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x000000000041e0e7 : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x000000000043e7f0 : in al, 0x48 ; add esp, 0x4a0 ; pop rbp ; ret
0x000000000041f4eb : in al, 0x56 ; ret
0x000000000045a627 : in al, 0x5d ; ret
0x0000000000452b9a : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426dce : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000452bbb : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004065bb : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000452bdc : in al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000452bfd : in al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000462bfc : in al, 5 ; add byte ptr [rax], al ; loopne 0x462bbc ; sti ; call qword ptr [rbx]
0x00000000004236a6 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004235c2 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042e9ba : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000044db3a : in al, dx ; add rsp, 0x200 ; pop rbp ; ret
0x000000000044207b : in al, dx ; add rsp, 0x260 ; pop rbp ; ret
0x000000000045a7d9 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004404aa : in al, dx ; add rsp, 0x410 ; pop rbp ; ret
0x00000000004458ba : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000430cfa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004222c3 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000044d765 : in eax, -0x76 ; push rbp ; ret
0x000000000043c013 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041f53f : in eax, 0x56 ; ret
0x000000000045ec7b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000456934 : in eax, dx ; ret
0x0000000000461c15 : in eax, dx ; sti ; jmp qword ptr [rax]
0x0000000000462ec1 : in eax, dx ; sti ; jmp rsi
0x0000000000446cae : inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000419658 : inc byte ptr [r8 + 0x4d8801e1] ; ret
0x0000000000419659 : inc byte ptr [rax + 0x4d8801e1] ; ret
0x000000000043041d : inc dword ptr [rax + 0x4d8801e1] ; ret
0x00000000004196a5 : inc dword ptr [rax + 0x4d8801e1] ; ret 0x6be9
0x00000000004221f3 : inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000427a32 : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000461c4f : inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax - 1], ch ; sti ; jmp qword ptr [rax]
0x0000000000461bcf : inc dword ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax], ch ; sar bl, cl ; jmp qword ptr [rax]
0x0000000000461b4f : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], bl ; sti ; jmp qword ptr [rax]
0x0000000000461b8f : inc dword ptr [rax] ; adc dword ptr [rax], eax ; add al, cl ; jne 0x461b9a ; jmp qword ptr [rax]
0x0000000000461c8f : inc dword ptr [rax] ; adc eax, 0x6b80000 ; cld ; jmp qword ptr [rax]
0x0000000000461c0f : inc dword ptr [rax] ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x13], cl ; sti ; jmp qword ptr [rax]
0x0000000000459274 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004382bf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041c705 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404b1d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040554f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045104f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040911e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046204f : inc dword ptr [rax] ; and al, 0 ; add byte ptr [rax], bh ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x0000000000461fcf : inc dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], cl ; xchg ch, bh ; jmp qword ptr [rax]
0x0000000000461f4f : inc dword ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rax], bl ; cmc ; cld ; jmp qword ptr [rax]
0x000000000046208f : inc dword ptr [rax] ; and eax, 0xa6480000 ; std ; jmp qword ptr [rax]
0x000000000046200f : inc dword ptr [rax] ; and eax, dword ptr [rax] ; add byte ptr [rax - 0x78], cl ; std ; jmp qword ptr [rax]
0x0000000000461a8f : inc dword ptr [rax] ; or eax, 0x3da80000 ; cli ; jmp qword ptr [rax]
0x0000000000461dcf : inc dword ptr [rax] ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7c], bh ; cld ; jmp qword ptr [rax]
0x0000000000461d4f : inc dword ptr [rax] ; sbb byte ptr [rax], al ; add al, ch ; pop rdx ; cld ; jmp qword ptr [rax]
0x0000000000461e8f : inc dword ptr [rax] ; sbb eax, 0xcf980000 ; cld ; jmp qword ptr [rax]
0x0000000000461e0f : inc dword ptr [rax] ; sbb eax, dword ptr [rax] ; add al, bl ; nop ; cld ; jmp qword ptr [rax]
0x000000000046214f : inc dword ptr [rax] ; sub byte ptr [rax], al ; add byte ptr [rax - 0x56], ch ; std ; jmp qword ptr [rax]
0x000000000046218f : inc dword ptr [rax] ; sub dword ptr [rax], eax ; add byte ptr [rax], ch ; clc ; std ; jmp qword ptr [rax]
0x00000000004623cf : inc dword ptr [rax] ; xor al, byte ptr [rax] ; add byte ptr [rax], cl ; movsxd rdi, edi ; jmp qword ptr [rax]
0x0000000000404317 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004592b2 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x0000000000415751 : inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000413b2d : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000412e63 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043e72e : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000405576 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cc35 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000461c7f : inc eax ; adc al, 0 ; add al, ch ; add edi, esp ; jmp rax
0x0000000000461b7f : inc eax ; adc byte ptr [rax], al ; add al, bl ; jo 0x461b8a ; jmp rax
0x0000000000461cbf : inc eax ; adc eax, 0x1cd80000 ; cld ; jmp rax
0x0000000000461c3f : inc eax ; adc eax, dword ptr [rax] ; add byte ptr [rax - 2], bh ; sti ; jmp rax
0x00000000004620ff : inc eax ; add byte ptr es:[rax], al ; call 0xffffffffe1461eb9
0x000000000046207f : inc eax ; and al, 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000461fff : inc eax ; and al, byte ptr [rax] ; add al, cl ; xchg ebp, edi ; jmp rax
0x0000000000461f7f : inc eax ; and byte ptr [rax], al ; add byte ptr [rax + 0x7c], ch ; std ; jmp rax
0x00000000004620bf : inc eax ; and eax, 0xa7680000 ; std ; jmp rax
0x0000000000461a7f : inc eax ; or al, 0 ; add byte ptr [rax + 0x38], cl ; cli ; jmp rax
0x0000000000461abf : inc eax ; or eax, 0x64980000 ; cli ; jmp rax
0x0000000000417b3f : inc eax ; ret 0x9e1d
0x0000000000461d7f : inc eax ; sbb byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; jmp rax
0x0000000000461dbf : inc eax ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], bh ; cld ; jmp rax
0x0000000000461ebf : inc eax ; sbb eax, 0xe2b80000 ; cld ; jmp rax
0x0000000000461b3f : inc eax ; sldt word ptr [rax] ; sub byte ptr [rcx - 5], al ; jmp rax
0x00000000004621ff : inc eax ; sub al, byte ptr [rax] ; add al, bl ; and al, 0xfffffffffffffffe ; jmp rax
0x00000000004621bf : inc eax ; sub dword ptr [rax], eax ; add al, bh ; sbb edi, esi ; jmp rax
0x000000000046223f : inc eax ; sub eax, dword ptr [rax] ; add byte ptr [rax], cl ; sub edi, esi ; jmp rax
0x00000000004623ff : inc eax ; xor al, byte ptr [rax] ; add byte ptr [rax], bh ; push -1 ; jmp rax
0x000000000046237f : inc eax ; xor byte ptr [rax], al ; add byte ptr [rax], ch ; xor bh, bh ; jmp rax
0x0000000000408e7b : inc ebx ; or byte ptr [rsi], cl ; ret 0x2ee9
0x00000000004528f5 : inc edi ; in al, 0x56 ; ret
0x0000000000439d78 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000447324 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000043041c : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x00000000004196a4 : inc qword ptr [r8 + 0x4d8801e1] ; ret 0x6be9
0x000000000043341f : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000436a5f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000414c39 : insd dword ptr [rdi], dx ; sub byte ptr [rbp - 0x17], dh ; ret 0xe
0x000000000044d7ba : int 0
0x0000000000461e95 : iretd ; cld ; jmp qword ptr [rax]
0x00000000004639a1 : iretd ; cld ; jmp qword ptr [rdi]
0x000000000040893c : iretd ; jmp rsi
0x0000000000402833 : ja 0x40283a ; pop rbp ; ret
0x0000000000425eb7 : ja 0x425e54 ; ret 0x8589
0x000000000042fce1 : ja 0x42fd2e ; pop rbp ; ret
0x00000000004002fe : jbe 0x4002a1 ; ret
0x0000000000405f58 : jbe 0x405f50 ; ret
0x00000000004063a3 : jbe 0x40639b ; ret
0x000000000040283f : je 0x40283d ; pop rbp ; mov edi, 0x666438 ; jmp rax
0x0000000000463541 : je 0x463541 ; jmp rsi
0x00000000004002f8 : jg 0x400303 ; add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x0000000000428a10 : jg 0x4289fd ; ret 0
0x0000000000463ec1 : jg 0x463ec2 ; jmp qword ptr [rsi]
0x000000000040d127 : jge 0x40d144 ; ret
0x000000000040d17b : jge 0x40d198 ; ret
0x00000000004119b0 : jge 0x4119cd ; ret
0x00000000004119e6 : jge 0x411a03 ; ret
0x0000000000411c39 : jge 0x411c56 ; ret
0x0000000000411c39 : jge 0x411c58 ; ret
0x00000000004235c1 : jge 0x4235b7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004236a5 : jge 0x42369b ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000429eba : jge 0x429ebb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000429eda : jge 0x429edb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429efa : jge 0x429efb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042fcdd : jge 0x42fcde ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000043c016 : jge 0x43c013 ; pop rbp ; ret
0x000000000043c30a : jge 0x43c30b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043c32a : jge 0x43c32b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043c34a : jge 0x43c34b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043c370 : jge 0x43c36d ; pop rbp ; ret
0x0000000000442618 : jge 0x44262f ; ret
0x0000000000442b03 : jge 0x442b1a ; ret
0x000000000044b724 : jge 0x44b6f6 ; mov rsi, qword ptr [rbp - 0x40] ; call 0x4479e8
0x000000000044b7cc : jge 0x44b79e ; mov rsi, qword ptr [rbp - 0x40] ; call 0x4479e8
0x0000000000459303 : jge 0x4592bf ; call rax
0x00000000004595dc : jge 0x459598 ; call rax
0x00000000004596e4 : jge 0x459698 ; call rax
0x0000000000459755 : jge 0x459709 ; call rax
0x000000000045d68a : jge 0x45d68d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000045f1e9 : jge 0x45f1e3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000427a2f : jl 0x4279c4 ; push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000043c4b5 : jl 0x43c491 ; ret
0x000000000043c505 : jl 0x43c4e1 ; ret
0x00000000004424ec : jl 0x442503 ; ret
0x0000000000461f85 : jl 0x461f86 ; jmp rax
0x00000000004222b4 : jle 0x4222cd ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000462921 : jle 0x46291f ; jmp qword ptr [rdx]
0x00000000004021bb : jmp 0x4020d7
0x000000000040639d : jmp 0x406686
0x00000000004092f1 : jmp 0x4097b9
0x00000000004155a1 : jmp 0x4155a6
0x0000000000415e3a : jmp 0x415eaa
0x00000000004172fb : jmp 0x417d39
0x000000000041850d : jmp 0x4185ba
0x0000000000419f94 : jmp 0x41a1e4
0x000000000041da5c : jmp 0x41df01
0x000000000041cc21 : jmp 0x41df02
0x000000000041e782 : jmp 0x41ec32
0x0000000000426dbd : jmp 0x426ee7
0x0000000000428cdd : jmp 0x428ce8
0x000000000042a942 : jmp 0x42aa17
0x000000000043640d : jmp 0x4390f3
0x0000000000438ea1 : jmp 0x4390f5
0x0000000000442053 : jmp 0x44208b
0x0000000000442afd : jmp 0x443075
0x00000000004481cc : jmp 0x448338
0x000000000044b8cb : jmp 0x44c9b4
0x000000000044bc92 : jmp 0x44c9b5
0x000000000045a012 : jmp 0x45a162
0x000000000045d56a : jmp 0x45d67b
0x000000000045e10d : jmp 0x45e21f
0x000000000045e10c : jmp 0x45e220
0x000000000045e3bb : jmp 0x45e3c6
0x000000000045f02b : jmp 0x45f036
0x000000000042e6c1 : jmp 0x49057011
0x000000000042e73c : jmp 0x4905708c
0x000000000042fa95 : jmp 0x490583e5
0x000000000042fb10 : jmp 0x49058460
0x0000000000452c85 : jmp 0x7f072ded
0x000000000042d90b : jmp 0xffffffff8a053ead
0x000000000045a81e : jmp 0xffffffffb707abea
0x000000000045e57a : jmp 0xffffffffc3ea5e1b
0x000000000042dcbf : jmp 0xffffffffea054261
0x000000000042532c : jmp 0xffffffffffeb0cf7
0x000000000042532b : jmp 0xffffffffffeb0cf8
0x000000000043652d : jmp qword ptr [rax]
0x0000000000414a00 : jmp qword ptr [rbx]
0x0000000000413b33 : jmp qword ptr [rcx]
0x000000000041d9c0 : jmp qword ptr [rdi - 0x2b]
0x0000000000416c2d : jmp qword ptr [rdi]
0x00000000004395c5 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000412e9a : jmp qword ptr [rdx]
0x0000000000404339 : jmp qword ptr [rsi]
0x0000000000402847 : jmp rax
0x000000000041b369 : jmp rbx
0x000000000040929c : jmp rcx
0x0000000000409e05 : jmp rdi
0x0000000000402887 : jmp rdx
0x000000000040893d : jmp rsi
0x0000000000412677 : jmp rsp
0x0000000000402870 : jne 0x402877 ; pop rbp ; ret
0x0000000000405f13 : jne 0x405f0b ; ret
0x0000000000414c3b : jne 0x414c28 ; ret 0xe
0x000000000041ec69 : jne 0x41ec66 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000422111 : jne 0x422109 ; mov rax, rdx ; pop rbp ; ret
0x000000000042aa46 : jne 0x42aa19 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000430162 : jne 0x43015a ; mov rax, rdx ; pop rbp ; ret
0x0000000000439d76 : jne 0x439d7f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000043e821 : jne 0x43e819 ; mov rax, rdx ; pop rbp ; ret
0x000000000044b728 : jne 0x44b6ee ; call 0x4479e4
0x000000000044b7d0 : jne 0x44b796 ; call 0x4479e4
0x000000000044d760 : jne 0x44d723 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000453569 : jne 0x45354c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000454861 : jne 0x454859 ; mov rax, rdx ; pop rbp ; ret
0x0000000000454c52 : jne 0x454c4a ; mov rax, rdx ; pop rbp ; ret
0x000000000045a3c1 : jne 0x45a3b9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000461b95 : jne 0x461b94 ; jmp qword ptr [rax]
0x00000000004622c5 : jne 0x4622c7 ; jmp rax
0x0000000000463561 : jne 0x463561 ; call rax
0x00000000004057d5 : jo 0x405836 ; ret
0x0000000000407a9e : jo 0x407aa7 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004097ad : jo 0x4097b7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a7c3 : jo 0x40a824 ; ret
0x0000000000419a16 : jo 0x419a1e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a1d5 : jo 0x41a1e0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421092 : jo 0x42109d ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421e12 : jo 0x421e73 ; ret
0x0000000000421ff9 : jo 0x42205a ; ret
0x0000000000428171 : jo 0x4281d2 ; ret
0x00000000004296ae : jo 0x42970f ; ret
0x0000000000429ea6 : jo 0x429f07 ; ret
0x0000000000439f91 : jo 0x439ff2 ; ret
0x000000000043a0b4 : jo 0x43a115 ; ret
0x000000000043a1ee : jo 0x43a24f ; ret
0x000000000043be61 : jo 0x43bec2 ; ret
0x000000000043c32f : jo 0x43c390 ; ret
0x000000000043c32e : jo 0x43c391 ; ret
0x0000000000443edc : jo 0x443f3d ; ret
0x0000000000446fe4 : jo 0x446fb3 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000446fe3 : jo 0x446fb4 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000447719 : jo 0x44777a ; ret
0x0000000000450ff7 : jo 0x450f83 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000457253 : jo 0x457212 ; imul ebp ; ret
0x000000000045819c : jo 0x4581fd ; ret
0x0000000000459a63 : jo 0x459ac4 ; ret
0x000000000045dce4 : jo 0x45dd45 ; ret
0x0000000000461b85 : jo 0x461b84 ; jmp rax
0x0000000000462ba1 : jo 0x462ba0 ; jmp rbx
0x0000000000458a47 : jp 0x458a72 ; ret
0x0000000000458a9b : jp 0x458ac6 ; ret
0x000000000045963f : jp 0x45966a ; ret
0x000000000041eb64 : jrcxz 0x41eb51 ; ret 0
0x00000000004220d9 : jrcxz 0x422103 ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425f0b : js 0x425ea8 ; ret 0x8589
0x00000000004261df : js 0x42617c ; ret 0xafe9
0x0000000000426249 : js 0x4261e6 ; ret 0x45e9
0x00000000004390e6 : js 0x4390fa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045e57c : js 0x45e524 ; ret
0x000000000045e5c3 : js 0x45e56b ; ret
0x000000000045e5fd : js 0x45e5a5 ; ret
0x0000000000461c44 : js 0x461c47 ; sti ; jmp rax
0x0000000000461dc4 : js 0x461d4a ; cld ; jmp rax
0x0000000000461dd4 : js 0x461d5d ; cld ; jmp qword ptr [rax]
0x0000000000461e45 : lahf ; cld ; jmp rax
0x0000000000414c37 : lcall ptr [rbx - 0x168ad793] ; ret 0xe
0x0000000000415afb : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415afa : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045d569 : leave ; jmp 0x45d67c
0x000000000041792a : ljmp ptr [rbx + 0x1d] ; ret 0xe962
0x000000000041e8cf : lodsb al, byte ptr [rsi] ; call 0x430997
0x000000000042dcbe : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054262
0x000000000042dcbd : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054263
0x000000000042dd54 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000447322 : lodsd eax, dword ptr [rsi] ; sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000042221a : loop 0x422221 ; movzx eax, dl ; pop rbp ; ret
0x000000000042221a : loop 0x422223 ; movzx eax, dl ; pop rbp ; ret
0x000000000044452d : loop 0x44455a ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044452c : loop 0x44455b ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000458429 : loop 0x45847b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000458511 : loop 0x458563 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000461ec5 : loop 0x461ec5 ; jmp rax
0x000000000042135a : loope 0x421363 ; movzx eax, cl ; pop rbp ; ret
0x000000000045a184 : loope 0x45a18d ; movzx eax, cl ; pop rbp ; ret
0x000000000040580f : loopne 0x40579c ; ret 0x89e8
0x000000000040580e : loopne 0x40579d ; ret 0x89e8
0x0000000000407c5c : loopne 0x407c65 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415de7 : loopne 0x415e18 ; ret
0x0000000000415de6 : loopne 0x415e19 ; ret
0x000000000041893a : loopne 0x418941 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e008 : loopne 0x41e037 ; ret
0x000000000041e007 : loopne 0x41e038 ; ret
0x0000000000427adb : loopne 0x427b2b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000427ada : loopne 0x427b2c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000428ace : loopne 0x428b21 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000429ba0 : loopne 0x429bf3 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000429ea2 : loopne 0x429ef2 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000429ea1 : loopne 0x429ef3 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042bdc7 : loopne 0x42bdd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d060 : loopne 0x42d069 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d080 : loopne 0x42d0ce ; mov edi, dword ptr [rcx] ; call rax
0x000000000042d07f : loopne 0x42d0cf ; mov edi, dword ptr [rcx] ; call rax
0x000000000042d14c : loopne 0x42d155 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d1e4 : loopne 0x42d1ed ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004310be : loopne 0x4310c7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043af57 : loopne 0x43af5f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043f9fe : loopne 0x43fa07 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000440458 : loopne 0x440461 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443c20 : loopne 0x443c29 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044402c : loopne 0x44407c ; add esp, 0x40 ; pop rbp ; ret
0x000000000044402b : loopne 0x44407d ; add esp, 0x40 ; pop rbp ; ret
0x00000000004451ec : loopne 0x4451f5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044735e : loopne 0x447367 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000448961 : loopne 0x4489b4 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000451fff : loopne 0x452008 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000452060 : loopne 0x45206a ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045221f : loopne 0x452226 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000452748 : loopne 0x45277b ; push rbp ; ret
0x0000000000452747 : loopne 0x45277c ; push rbp ; ret
0x000000000045287c : loopne 0x4528af ; push rsi ; ret
0x000000000045287b : loopne 0x4528b0 ; push rsi ; ret
0x00000000004546e7 : loopne 0x4546ee ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004561ad : loopne 0x4561b6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000457a7c : loopne 0x457a85 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000457ef3 : loopne 0x457efc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000459e3c : loopne 0x459e6f ; ret
0x0000000000459e3b : loopne 0x459e70 ; ret
0x0000000000462c00 : loopne 0x462bb8 ; sti ; call qword ptr [rbx]
0x0000000000463540 : loopne 0x4635b9 ; cld ; jmp rsi
0x0000000000402d40 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004629c0 : mov al, -0x7d ; cli ; call rsp
0x00000000004644a0 : mov al, -0xc ; std ; call rdx
0x000000000042fc08 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045b96a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004217da : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444e8a : mov al, 0 ; call 0x4021f8
0x0000000000406486 : mov al, 0 ; call 0x4026b4
0x0000000000442051 : mov al, 0x15 ; jmp 0x44208d
0x000000000044cac6 : mov al, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000044cb08 : mov al, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x0000000000421e0e : mov al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000043127b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000463560 : mov al, 0x75 ; cld ; call rax
0x0000000000462920 : mov al, 0x7e ; cli ; jmp qword ptr [rdx]
0x00000000004222c4 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000461c04 : mov al, bl ; sti ; jmp rax
0x000000000042195d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045e47d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045ec79 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f2a5 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415e9a : mov al, byte ptr [rbp - 0x1a] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044452b : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000454d3f : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419bf0 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a4c0 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004080bd : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a4fc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004585cf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004585ce : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000045854f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000043c2bc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000458553 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000462495 : mov bh, bh ; jmp qword ptr [rax]
0x0000000000462485 : mov bh, bh ; jmp rax
0x0000000000462c01 : mov bl, -5 ; call qword ptr [rbx]
0x0000000000462be1 : mov bl, -5 ; call rbx
0x0000000000462014 : mov bpl, dil ; jmp qword ptr [rax]
0x0000000000426881 : mov byte ptr [0x6668f8], al ; pop rbp ; ret
0x000000000045a621 : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x0000000000429ad2 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000461d94 : mov byte ptr [rax - 4], ch ; jmp qword ptr [rax]
0x0000000000438c38 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000461d14 : mov byte ptr [rcx - 4], cl ; jmp qword ptr [rax]
0x0000000000415b57 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028a3 : mov byte ptr [rip + 0x263bee], 1 ; ret
0x0000000000462444 : mov byte ptr [rsi - 1], ch ; jmp rax
0x0000000000462015 : mov ch, bh ; jmp qword ptr [rax]
0x00000000004300dd : mov dh, -0x39 ; pop rbp ; ret
0x0000000000427a9a : mov dh, -0x3e ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004302cd : mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042221d : mov dh, -0x3e ; pop rbp ; ret
0x0000000000421a8d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042135d : mov dh, -0x3f ; pop rbp ; ret
0x000000000042a5c3 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000443772 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a1c1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421bbb : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000444679 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004282a9 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004057d0 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004080c3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000418081 : mov dh, -0x46 ; mov edx, 0x60aa37ba ; ret
0x000000000045eda5 : mov dl, -0x47 ; ret
0x0000000000462184 : mov dl, ch ; std ; jmp rax
0x00000000004263ad : mov dword ptr [0x6668e8], edi ; pop rbp ; ret
0x000000000042685d : mov dword ptr [0x6668f0], edi ; pop rbp ; ret
0x0000000000430f37 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000430cfb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000430e6f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042ee69 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042efdb : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000407eff : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ec6c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x0000000000427ad9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ec55 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004481c9 : mov dword ptr [rbp - 0x38], eax ; jmp 0x44833b
0x0000000000402d3e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418c23 : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045925e : mov dword ptr [rbp - 0x5d8], eax ; call r8
0x00000000004593f8 : mov dword ptr [rbp - 0x5e4], ecx ; call rdx
0x000000000045951f : mov dword ptr [rbp - 0x5ec], ecx ; call rdx
0x000000000041e77f : mov dword ptr [rbp - 0x68], eax ; jmp 0x41ec35
0x000000000042a991 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000042b7df : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000402b67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ec68 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402b95 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c015 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000045a4d9 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000453e4e : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004310ed : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000451c4f : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ab45 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ab95 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b9da : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000459d48 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042fce0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000045d68c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004222b3 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045692e : mov eax, 0x2dffffef ; imul ch ; ret
0x0000000000456982 : mov eax, 0x2dffffef ; imul ebp ; ret
0x00000000004568f6 : mov eax, 0x2dffffef ; ret
0x0000000000430494 : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004592fe : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000459750 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004596e0 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000430bef : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000443f6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aae7 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427993 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000443c4f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421ff3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043c391 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042782c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000045a7d7 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044406e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426f92 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f1c7 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042ff10 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a1ff : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041e0e5 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045a625 : mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000044402a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000429ea0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429772 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430ae4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045356f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000430bec : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044562f : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000430cf5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000045482f : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000041f1ac : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042aa4c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000430e71 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043bfcc : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000421e0c : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000439f8b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044534a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425b61 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a9e4 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a7bd : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b4e1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045c4a5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421193 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000452c51 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045dcde : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a4e5 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000429ebd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000429edd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429efd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043c30d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043c34d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043c32d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043bffc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c12f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004583ee : mov eax, edi ; pop rbp ; ret
0x000000000042bfb1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ee1d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422114 : mov eax, edx ; pop rbp ; ret
0x000000000042198f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c0a3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000458550 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041f313 : mov eax, esi ; pop rbp ; ret
0x00000000004092f2 : mov ebp, 0xb8000004 ; ret 0x36d9
0x0000000000415044 : mov ebp, 0xffffff58 ; call 0x441267
0x00000000004028cb : mov ebp, esp ; call rax
0x0000000000402831 : mov ebp, esp ; ja 0x40283c ; pop rbp ; ret
0x0000000000430492 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000043c012 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000456584 : mov ebx, 0x33b9fffa ; ret 0xa80b
0x000000000045348b : mov ebx, 0xb95f383e ; xchg dh, dh ; ret 0x3dc8
0x000000000041e8d1 : mov ebx, 0xba000120 ; ret 0x1103
0x000000000041244d : mov ecx, 0x61d375b9 ; ret
0x000000000042ca4d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000430cf8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c9b5 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042d07e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045a4d6 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000045848d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000045845d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004401d8 : mov edi, 0x3d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004028c5 : mov edi, 0x665e20 ; mov rbp, rsp ; call rax
0x0000000000402842 : mov edi, 0x666438 ; jmp rax
0x0000000000402882 : mov edi, 0x666438 ; jmp rdx
0x00000000004121da : mov edi, 0xb9f26e27 ; ret 0xe32a
0x000000000044b723 : mov edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x4479e9
0x0000000000459302 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x00000000004596e3 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x0000000000415043 : mov edi, dword ptr [rbp - 0xa8] ; call 0x441268
0x000000000042fcdc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000429eb9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000429ed9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429ef9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043c309 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043c349 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043c329 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042ca51 : mov edi, dword ptr [rcx] ; call rax
0x000000000044d7b6 : mov edi, eax ; call 0x45a4f8
0x000000000045f3e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045f3e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000419958 : mov edx, 0x3d ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000418084 : mov edx, 0x60aa37ba ; ret
0x000000000041ea96 : mov edx, dword ptr [rbp - 0x48] ; call 0x402609
0x000000000041e8cd : mov edx, dword ptr [rbp - 0x54] ; call 0x430999
0x000000000043c395 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406484 : mov edx, eax ; mov al, 0 ; call 0x4026b6
0x000000000041595a : mov esi, dword ptr [rbp - 0x178] ; call 0x421bd8
0x000000000044b727 : mov esi, dword ptr [rbp - 0x40] ; call 0x4479e5
0x0000000000402880 : mov esi, eax ; mov edi, 0x666438 ; jmp rdx
0x000000000045356c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042aa49 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004002fc : mov esp, 0x439e7650 ; ret
0x0000000000419142 : mov esp, 0x43f952d ; ret 0x4589
0x0000000000419184 : mov esp, 0x43f962d ; ret 0x8589
0x0000000000453f73 : mov esp, 0x61cfa42d ; ret
0x0000000000453fb5 : mov esp, 0x61cfa52d ; ret
0x0000000000421620 : mov esp, 0xb8000001 ; xchg eax, esp ; sbb ch, bh ; ret 0x34b9
0x0000000000408e78 : mov esp, 0xc3fffffe ; or byte ptr [rsi], cl ; ret 0x2ee9
0x0000000000428a0d : mov esp, 0xe97f79ce ; ret 0
0x0000000000421572 : mov esp, 0xfd18942d ; ret 0x8589
0x0000000000461e05 : mov esp, dr1 ; jmp rax
0x00000000004263ac : mov qword ptr [0x6668e8], rdi ; pop rbp ; ret
0x000000000042685c : mov qword ptr [0x6668f0], rdi ; pop rbp ; ret
0x0000000000407efe : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ec6b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000043c014 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004310ec : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000451c4e : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ab44 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ab94 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fcdf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000402d3f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000419141 : mov r12d, 0x43f952d ; ret 0x4589
0x0000000000419183 : mov r12d, 0x43f962d ; ret 0x8589
0x0000000000453f72 : mov r12d, 0x61cfa42d ; ret
0x0000000000453fb4 : mov r12d, 0x61cfa52d ; ret
0x0000000000421571 : mov r12d, 0xfd18942d ; ret 0x8589
0x000000000044cac5 : mov r8b, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000044cb07 : mov r8b, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x0000000000421e0d : mov r8b, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x00000000004592fd : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000045974f : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004596df : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000443f6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aae6 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427992 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000443c4e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421ff2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043c390 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042782b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000044406d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426f91 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f1c6 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042ff0f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a1fe : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000444029 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000429e9f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429771 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430ae3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045356e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000430beb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044562e : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041f1ab : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042aa4b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000421e0b : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000439f8a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b4e0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a4e4 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000429ebc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000429edc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429efc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043c30c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043c34c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043c32c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004583ed : mov rax, rdi ; pop rbp ; ret
0x000000000042bfb0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ee1c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422113 : mov rax, rdx ; pop rbp ; ret
0x000000000041f312 : mov rax, rsi ; pop rbp ; ret
0x00000000004028ca : mov rbp, rsp ; call rax
0x0000000000402830 : mov rbp, rsp ; ja 0x40283d ; pop rbp ; ret
0x0000000000430491 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000043c011 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042ca4c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042c9b4 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042d07d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045a4d5 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000459301 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004596e2 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000415042 : mov rdi, qword ptr [rbp - 0xa8] ; call 0x441269
0x000000000042fcdb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000429eb8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000429ed8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000429ef8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043c308 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043c348 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043c328 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042ca50 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044d7b5 : mov rdi, rax ; call 0x45a4f9
0x000000000043c394 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406483 : mov rdx, rax ; mov al, 0 ; call 0x4026b7
0x0000000000415959 : mov rsi, qword ptr [rbp - 0x178] ; call 0x421bd9
0x000000000044b726 : mov rsi, qword ptr [rbp - 0x40] ; call 0x4479e6
0x000000000040287f : mov rsi, rax ; mov edi, 0x666438 ; jmp rdx
0x000000000045356b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042aa48 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000439d7a : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000426247 : mov word ptr [r8 - 0x68], dr1 ; ret 0x45e9
0x00000000004261dd : mov word ptr [r8 - 0x68], dr1 ; ret 0xafe9
0x0000000000439d7b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000426248 : mov word ptr [rax - 0x68], dr1 ; ret 0x45e9
0x00000000004261de : mov word ptr [rax - 0x68], dr1 ; ret 0xafe9
0x00000000004374cc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000045f01e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040920d : movabs byte ptr [0xfffebc85c7000005], al ; jmp rax
0x000000000041780f : movabs dword ptr [0x1d6bb80000051ee9], eax ; ret 0xb962
0x000000000043b76c : movabs dword ptr [0x814890558b48749f], eax ; ret 0x13
0x000000000040c53d : movabs eax, dword ptr [0x840ffffff8808589] ; ret
0x0000000000442afc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x443076
0x0000000000462ebc : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], dl ; in eax, dx ; sti ; jmp rsi
0x000000000045e57d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000463ebc : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add al, dh ; jg 0x463ec7 ; jmp qword ptr [rsi]
0x0000000000463fbc : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], dl ; std ; jmp qword ptr [rdi]
0x0000000000461e55 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000462085 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000429401 : movsx eax, byte ptr [rbp - 5] ; add rsp, 8 ; pop rbp ; ret
0x00000000004623d5 : movsxd rdi, edi ; jmp qword ptr [rax]
0x000000000044cd06 : movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000042a5c2 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000443771 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a1c0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421bba : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000444678 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004282a8 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004057cf : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004080c2 : movzx eax, al ; pop rbp ; ret
0x0000000000458552 : movzx eax, ax ; pop rbp ; ret
0x00000000004300dc : movzx eax, bh ; pop rbp ; ret
0x0000000000421a8c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042135c : movzx eax, cl ; pop rbp ; ret
0x000000000043c2bb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004300db : movzx eax, dil ; pop rbp ; ret
0x0000000000427a99 : movzx eax, dl ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004302cc : movzx eax, dl ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042221c : movzx eax, dl ; pop rbp ; ret
0x00000000004080be : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004080bf : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000461e15 : nop ; cld ; jmp qword ptr [rax]
0x0000000000461b15 : nop ; cli ; jmp qword ptr [rax]
0x0000000000462fa0 : nop ; sti ; call qword ptr [rbx]
0x000000000045f408 : nop dword ptr [rax + rax] ; ret
0x000000000046325d : or al, 0 ; add al, al ; cld ; call qword ptr [rsi]
0x0000000000461a81 : or al, 0 ; add byte ptr [rax + 0x38], cl ; cli ; jmp rax
0x00000000004632dd : or al, 0 ; add byte ptr [rax], dl ; cld ; call rdx
0x00000000004390e7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042dcbb : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054265
0x000000000043bfac : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x00000000004221df : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x0000000000462ebd : or byte ptr [rax], al ; add byte ptr [rax], dl ; in eax, dx ; sti ; jmp rsi
0x000000000044ad81 : or byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x000000000043c464 : or byte ptr [rax], dh ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004623d4 : or byte ptr [rbx - 1], ah ; jmp qword ptr [rax]
0x00000000004251bc : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000427a7c : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043bfad : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x00000000004221e0 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000408e7d : or byte ptr [rsi], cl ; ret 0x2ee9
0x0000000000408585 : or byte ptr [rsi], cl ; ret 0x8589
0x0000000000408e49 : or byte ptr [rsi], cl ; ret 0x8b48
0x0000000000446fb9 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000462f1d : or dword ptr [rax], eax ; add byte ptr [rax], al ; out dx, eax ; sti ; jmp rcx
0x000000000041def4 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004421a7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000406eda : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000461a91 : or eax, 0x3da80000 ; cli ; jmp qword ptr [rax]
0x0000000000461ac1 : or eax, 0x64980000 ; cli ; jmp rax
0x000000000044bc94 : or eax, 0x9db80000 ; ret
0x000000000045725f : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000046317d : or eax, dword ptr [rax] ; add al, dl ; cld ; call qword ptr [rsi]
0x000000000046313d : or eax, dword ptr [rax] ; add byte ptr [rax + 0x32], ah ; cld ; call qword ptr [rsi]
0x000000000043a171 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046317c : or eax, dword ptr fs:[rax] ; add al, dl ; cld ; call qword ptr [rsi]
0x00000000004583eb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000458461 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042dcba : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea054266
0x00000000004583ea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000461ed5 : out -4, al ; jmp qword ptr [rax]
0x0000000000415e9c : out 0x24, al ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000415e38 : out 1, al ; jmp 0x415eac
0x0000000000415e37 : out 1, al ; jmp 0x415ead
0x00000000004300d9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000045e47f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000461f15 : out dx, al ; cld ; jmp qword ptr [rax]
0x00000000004028a5 : out dx, al ; cmp esp, dword ptr [rsi] ; add byte ptr [rcx], al ; ret
0x000000000042195f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000458460 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000462f21 : out dx, eax ; sti ; jmp rcx
0x0000000000425ef1 : outsb dx, byte ptr [rsi] ; ret
0x000000000042a669 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042e193 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045f3fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045f3fe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000439412 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045f400 : pop r14 ; pop r15 ; ret
0x0000000000415aff : pop r14 ; pop rbp ; ret
0x0000000000439414 : pop r15 ; pop rbp ; ret
0x000000000045f402 : pop r15 ; ret
0x000000000045eaf8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041def3 : pop rax ; or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004028a2 : pop rbp ; mov byte ptr [rip + 0x263bee], 1 ; ret
0x0000000000402841 : pop rbp ; mov edi, 0x666438 ; jmp rax
0x000000000040287e : pop rbp ; mov rsi, rax ; mov edi, 0x666438 ; jmp rdx
0x000000000045f3fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000045f3ff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402835 : pop rbp ; ret
0x000000000040f267 : pop rbp ; ret 0x891b
0x0000000000412f22 : pop rbp ; ret 0xb91b
0x00000000004445cc : pop rbp ; test al, -2 ; ret 0x4589
0x00000000004445fa : pop rbp ; test al, -2 ; ret 0x8eb9
0x0000000000439411 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415afe : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ad5e : pop rbx ; pop rbp ; ret
0x000000000045eda4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000043bc08 : pop rcx ; ret 0x28b9
0x000000000043b3bb : pop rcx ; ret 0x8589
0x00000000004572ad : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439415 : pop rdi ; pop rbp ; ret
0x000000000045de85 : pop rdi ; pop rdx ; ret
0x000000000045f403 : pop rdi ; ret
0x0000000000462b21 : pop rdi ; sti ; jmp qword ptr [rcx]
0x000000000045f1eb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000461d55 : pop rdx ; cld ; jmp qword ptr [rax]
0x000000000045de86 : pop rdx ; ret
0x0000000000439413 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045f401 : pop rsi ; pop r15 ; ret
0x0000000000415b00 : pop rsi ; pop rbp ; ret
0x000000000041bc0d : pop rsi ; ret
0x000000000045f3fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000433322 : pop rsp ; ret
0x000000000042a680 : pop rsp ; ret 0xf66
0x0000000000440413 : popfq ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000044b300 : popfq ; ret
0x0000000000441431 : popfq ; ret 0xb657
0x000000000045ebb9 : popfq ; ret 0xd284
0x000000000041d432 : push -0x17 ; ret 0xa
0x0000000000462415 : push -1 ; jmp qword ptr [rax]
0x0000000000462405 : push -1 ; jmp rax
0x0000000000463461 : push -4 ; call qword ptr [rdx]
0x000000000041659d : push 0x1d ; ret 0x8962
0x000000000043e894 : push 0x48000172 ; add esp, 0x20 ; pop rbp ; ret
0x000000000045e0e7 : push 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043d9b5 : push 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000438b0f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000043c30e : push r8 ; pop rbp ; ret
0x0000000000405e79 : push rax ; add byte ptr [rax], al ; add al, ch ; sahf ; ret 0xffff
0x00000000004002fd : push rax ; jbe 0x4002a2 ; ret
0x0000000000402b26 : push rax ; pop rbp ; ret
0x0000000000463460 : push rax ; push -4 ; call qword ptr [rdx]
0x0000000000463ca0 : push rax ; std ; jmp qword ptr [rax]
0x000000000044345b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000043c396 : push rbp ; clc ; pop rbp ; ret
0x0000000000461d45 : push rbp ; cld ; jmp rax
0x000000000041da39 : push rbp ; cwde ; call 0x41ec69
0x0000000000427a94 : push rbp ; fild word ptr [rax - 0x49f0fe1e] ; ret 0x8348
0x0000000000443e33 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000447742 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000447746 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000451a1d : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x60
0x0000000000425363 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x000000000042c5c3 : push rbp ; fsubr st(1) ; ret 0
0x0000000000436c48 : push rbp ; in al, -0x7f ; ret 0xff9f
0x0000000000436e2e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000436ed4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000436f02 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000436fd0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000437166 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000446cad : push rbp ; inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004221f2 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000427a31 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000041eb63 : push rbp ; jrcxz 0x41eb52 ; ret 0
0x000000000041e8ce : push rbp ; lodsb al, byte ptr [rsi] ; call 0x430998
0x0000000000429ad1 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004028c4 : push rbp ; mov edi, 0x665e20 ; mov rbp, rsp ; call rax
0x000000000043c010 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000419670 : push rbp ; ret
0x000000000044e5de : push rbp ; ret 0x893c
0x000000000042dd4e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000044cac9 : push rbx ; ret 0x4589
0x000000000044cb0b : push rbx ; ret 0x8589
0x000000000044cd0c : push rbx ; ret 0x8948
0x0000000000419053 : push rcx ; ret 0x8983
0x000000000041966c : push rcx ; ret 0x8a83
0x0000000000423464 : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041f4ec : push rsi ; ret
0x000000000044a45a : pushfq ; ret
0x000000000045927b : pushfq ; ret 0x8445
0x000000000041995f : pushfq ; ret 0xd284
0x0000000000461c80 : rcl byte ptr [rax + rax], 0 ; call 0xffffffffe1461893
0x0000000000461b80 : rcl byte ptr [rax], 0 ; add al, bl ; jo 0x461b89 ; jmp rax
0x0000000000461c40 : rcl byte ptr [rbx], 0 ; add byte ptr [rax - 2], bh ; sti ; jmp rax
0x0000000000461d40 : rcl byte ptr [rdi], 0 ; add byte ptr [rax + 0x55], ch ; cld ; jmp rax
0x0000000000461cc0 : rcl byte ptr [rip + 0x1cd80000], -4 ; jmp rax
0x000000000045845e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000045848e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000461e80 : rcr byte ptr [rax + rax], 0 ; test al, -0x43 ; cld ; jmp rax
0x0000000000461d80 : rcr byte ptr [rax], 0 ; add byte ptr [rax], ch ; cld ; jmp rax
0x0000000000461dc0 : rcr byte ptr [rcx], 0 ; add byte ptr [rax - 0x7f], bh ; cld ; jmp rax
0x0000000000461f40 : rcr byte ptr [rdi], 0 ; add al, bl ; cld ; jmp rax
0x0000000000461ec0 : rcr byte ptr [rip - 0x1d480000], -4 ; jmp rax
0x0000000000461f00 : rcr byte ptr [rsi], 0 ; add byte ptr [rax - 0x16], ch ; cld ; jmp rax
0x000000000044a2fc : rcr eax, cl ; ret
0x0000000000400301 : ret
0x0000000000415962 : ret 0
0x000000000042b0af : ret 0x10
0x0000000000446f5d : ret 0x108
0x000000000044774a : ret 0x110
0x000000000041e672 : ret 0x1103
0x00000000004196b7 : ret 0x124
0x000000000042505c : ret 0x13
0x0000000000449ed5 : ret 0x18
0x000000000041d55a : ret 0x1cd
0x0000000000458bb2 : ret 0x1f85
0x000000000045ecab : ret 0x2030
0x0000000000451329 : ret 0x21b9
0x00000000004027c2 : ret 0x263b
0x00000000004025c2 : ret 0x263c
0x00000000004023c2 : ret 0x263d
0x00000000004021c2 : ret 0x263e
0x000000000042a66a : ret 0x280f
0x000000000043bc09 : ret 0x28b9
0x00000000004481a2 : ret 0x294c
0x0000000000458125 : ret 0x29b9
0x000000000041303d : ret 0x2a
0x0000000000439946 : ret 0x2c1
0x0000000000440640 : ret 0x2e42
0x0000000000408e7f : ret 0x2ee9
0x000000000041d9c4 : ret 0x30e9
0x000000000043aa61 : ret 0x31e9
0x000000000041e708 : ret 0x344c
0x0000000000421628 : ret 0x34b9
0x0000000000408d80 : ret 0x36d9
0x0000000000422f31 : ret 0x3948
0x000000000043c83d : ret 0x39aa
0x00000000004101ee : ret 0x3bcc
0x0000000000453492 : ret 0x3dc8
0x0000000000411c3d : ret 0x3e
0x0000000000452049 : ret 0x4172
0x00000000004284fb : ret 0x421d
0x0000000000429c2a : ret 0x42ab
0x000000000043358a : ret 0x43fa
0x00000000004254f6 : ret 0x44e8
0x0000000000419147 : ret 0x4589
0x000000000042624c : ret 0x45e9
0x0000000000418003 : ret 0x47e8
0x000000000045332d : ret 0x487e
0x0000000000413a91 : ret 0x48e0
0x0000000000423509 : ret 0x4a8b
0x0000000000447caf : ret 0x4cb1
0x000000000040d426 : ret 0x4e
0x000000000042b494 : ret 0x50e9
0x00000000004196f8 : ret 0x51ba
0x0000000000448c86 : ret 0x5589
0x0000000000455609 : ret 0x558a
0x0000000000451ac2 : ret 0x56ad
0x0000000000445703 : ret 0x5e5
0x0000000000451a21 : ret 0x60
0x0000000000457cf0 : ret 0x6ae8
0x00000000004196ab : ret 0x6be9
0x000000000044795e : ret 0x709b
0x0000000000419e63 : ret 0x70bc
0x00000000004252d4 : ret 0x71b9
0x000000000041d97b : ret 0x71be
0x000000000043b16d : ret 0x7256
0x00000000004582aa : ret 0x7406
0x000000000040e0d6 : ret 0x78
0x0000000000425dbb : ret 0x7dbc
0x00000000004512ad : ret 0x8148
0x0000000000427a9b : ret 0x8348
0x00000000004512e6 : ret 0x83e9
0x000000000045a0c8 : ret 0x8423
0x000000000040431b : ret 0x8445
0x0000000000408587 : ret 0x8589
0x0000000000433420 : ret 0x891a
0x000000000040f268 : ret 0x891b
0x0000000000459dfe : ret 0x8923
0x000000000045e65c : ret 0x8934
0x000000000044e5df : ret 0x893c
0x000000000041d39b : ret 0x8948
0x000000000041acdb : ret 0x894b
0x000000000041d491 : ret 0x894d
0x000000000041659f : ret 0x8962
0x0000000000451dfc : ret 0x8972
0x0000000000452c88 : ret 0x897e
0x000000000042d9bc : ret 0x897f
0x0000000000419054 : ret 0x8983
0x000000000044a010 : ret 0x8999
0x000000000045a821 : ret 0x89b6
0x0000000000452e17 : ret 0x89c8
0x0000000000405811 : ret 0x89e8
0x000000000041966d : ret 0x8a83
0x000000000045e638 : ret 0x8b34
0x0000000000408e4b : ret 0x8b48
0x000000000041436d : ret 0x8d88
0x00000000004246ab : ret 0x8d89
0x00000000004445fd : ret 0x8eb9
0x000000000041e44c : ret 0x907e
0x000000000041da03 : ret 0x97e8
0x000000000041e98f : ret 0x97e9
0x00000000004382a0 : ret 0x9ae8
0x000000000041605e : ret 0x9e1d
0x000000000041d434 : ret 0xa
0x000000000042b01a : ret 0xa3b9
0x000000000044b97d : ret 0xa43c
0x0000000000444acb : ret 0xa4be
0x000000000042dcf9 : ret 0xa6e9
0x0000000000455c8e : ret 0xa80b
0x00000000004372f5 : ret 0xa9b9
0x0000000000432d72 : ret 0xade6
0x00000000004261e2 : ret 0xafe9
0x0000000000404819 : ret 0xb0
0x000000000041dbe7 : ret 0xb3e8
0x0000000000441432 : ret 0xb657
0x0000000000436a60 : ret 0xb91a
0x0000000000412f23 : ret 0xb91b
0x000000000042c5f6 : ret 0xb948
0x000000000041c465 : ret 0xb94b
0x0000000000417818 : ret 0xb962
0x000000000045aadb : ret 0xb9b6
0x00000000004445b7 : ret 0xba03
0x000000000041c159 : ret 0xc
0x0000000000414b66 : ret 0xc084
0x0000000000402865 : ret 0xc148
0x000000000042221e : ret 0xc35d
0x000000000044ff84 : ret 0xc609
0x0000000000404747 : ret 0xd284
0x0000000000438b13 : ret 0xd4e9
0x0000000000455d52 : ret 0xd592
0x0000000000456a4c : ret 0xd957
0x000000000042dcc2 : ret 0xdde9
0x0000000000414c3d : ret 0xe
0x0000000000408584 : ret 0xe08
0x00000000004078a4 : ret 0xe280
0x000000000040c3ea : ret 0xe32a
0x000000000041e771 : ret 0xe4b9
0x0000000000418165 : ret 0xe5e8
0x0000000000419685 : ret 0xe900
0x000000000045a132 : ret 0xe923
0x000000000041792d : ret 0xe962
0x000000000042dd57 : ret 0xe97f
0x000000000044be4f : ret 0xe999
0x000000000043912c : ret 0xee8
0x000000000042b3f5 : ret 0xefe9
0x000000000042828a : ret 0xf280
0x000000000041493f : ret 0xf40
0x00000000004374d5 : ret 0xf41
0x00000000004155a5 : ret 0xf5e8
0x000000000042a681 : ret 0xf66
0x00000000004099b2 : ret 0xf81c
0x000000000044c75a : ret 0xfb5e
0x000000000044973a : ret 0xfb8c
0x000000000041de3a : ret 0xfe45
0x000000000042c2a6 : ret 0xff3
0x0000000000436c4b : ret 0xff9f
0x00000000004385ee : ret 0xffa5
0x000000000040663a : ret 0xffbc
0x0000000000436e31 : ret 0xffbf
0x000000000043789b : ret 0xffc4
0x0000000000436ed7 : ret 0xffc5
0x0000000000436f05 : ret 0xffd5
0x0000000000436fd3 : ret 0xffd8
0x0000000000437941 : ret 0xffd9
0x0000000000437169 : ret 0xffe0
0x0000000000407126 : ret 0xfff6
0x000000000043623e : ret 0xfffa
0x000000000045817a : ret 0xfffb
0x000000000040722f : ret 0xfffd
0x0000000000405e7f : ret 0xffff
0x00000000004059ce : ret 1
0x000000000041504b : ret 2
0x000000000045d1b9 : ret 3
0x000000000042507b : ret 4
0x00000000004421d8 : ret 5
0x00000000004069ac : ret 6
0x000000000042e161 : ret 7
0x000000000041f8cb : ret 8
0x000000000044f555 : ret 9
0x0000000000447321 : retf ; lodsd eax, dword ptr [rsi] ; sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000044c9a8 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000426dfa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405c40 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429e3a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000429ba4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004255bd : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045bed5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004518af : rol dh, 1 ; ret
0x0000000000421358 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000411b08 : rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x00000000004518ae : rol r14b, 1 ; ret
0x0000000000430cf6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000461a80 : ror byte ptr [rax + rax], 0 ; cmp dl, dil ; jmp rax
0x000000000040286c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40287b ; pop rbp ; ret
0x0000000000418b51 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x00000000004057d1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40583a ; ret
0x0000000000447715 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x44777e ; ret
0x0000000000421bbc : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000044467a : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004055ec : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042de9b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419a12 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x419a22 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000418936 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x418945 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043af53 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x43af63 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045221b : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x45222a ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004546e3 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x4546f2 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004217d6 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430cf7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000461b40 : ror byte ptr [rdi], 0 ; add byte ptr [rax], ch ; sti ; jmp rax
0x0000000000461ac0 : ror byte ptr [rip + 0x64980000], -6 ; jmp rax
0x0000000000443e30 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000446ec2 : sahf ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x00000000004002ff : sahf ; ret
0x0000000000411b0b : sahf ; ret 0x8445
0x0000000000441485 : sahf ; ret 0xb657
0x0000000000404b23 : sahf ; ret 0xd284
0x0000000000405e7e : sahf ; ret 0xffff
0x0000000000462380 : sal byte ptr [rax], 0 ; add byte ptr [rax], ch ; xor bh, bh ; jmp rax
0x000000000044d75f : sal byte ptr [rbp - 0x47], 1 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000462400 : sal byte ptr [rdx], 0 ; add byte ptr [rax], bh ; push -1 ; jmp rax
0x00000000004624c0 : sal byte ptr [rip - 0x5ae80000], -1 ; jmp rax
0x0000000000463180 : sal byte ptr [rsi], 1 ; cld ; call qword ptr [rsi]
0x000000000040283e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; cmp byte ptr [rsi], ah ; jmp rax
0x000000000045af9e : salc ; ret
0x0000000000461bd5 : sar bl, cl ; jmp qword ptr [rax]
0x0000000000413cac : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000407d06 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x000000000040286e : sar eax, 1 ; jne 0x402879 ; pop rbp ; ret
0x000000000040286d : sar rax, 1 ; jne 0x40287a ; pop rbp ; ret
0x0000000000461cc5 : sbb al, -4 ; jmp rax
0x0000000000462634 : sbb al, 0 ; add byte ptr [rax], al ; cwde ; cli ; stc ; jmp qword ptr [rax]
0x000000000045a623 : sbb al, 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000045a4fe : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000461dd1 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7c], bh ; cld ; jmp qword ptr [rax]
0x00000000004528f2 : sbb bh, al ; cli ; inc edi ; in al, 0x56 ; ret
0x0000000000459752 : sbb byte ptr [rax - 0x75], cl ; jge 0x45970c ; call rax
0x0000000000459751 : sbb byte ptr [rax - 0x75], cl ; jge 0x45970d ; call rax
0x0000000000461d51 : sbb byte ptr [rax], al ; add al, ch ; pop rdx ; cld ; jmp qword ptr [rax]
0x0000000000463ebd : sbb byte ptr [rax], al ; add al, dh ; jg 0x463ec6 ; jmp qword ptr [rsi]
0x0000000000461d81 : sbb byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; jmp rax
0x0000000000461b54 : sbb byte ptr [rbx - 5], al ; jmp qword ptr [rax]
0x0000000000439da9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421626 : sbb ch, bh ; ret 0x34b9
0x0000000000421575 : sbb ch, bh ; ret 0x8589
0x0000000000461f54 : sbb ch, dh ; cld ; jmp qword ptr [rax]
0x0000000000448d5a : sbb cl, bl ; xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x0000000000461dc1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], bh ; cld ; jmp rax
0x0000000000463fbd : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], dl ; std ; jmp qword ptr [rdi]
0x0000000000443a13 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004372ee : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000043be9f : sbb eax, 0x48fffc66 ; add esp, 0x20 ; pop rbp ; ret
0x000000000046431d : sbb eax, 0xc1a00000 ; std ; jmp rdi
0x0000000000461e91 : sbb eax, 0xcf980000 ; cld ; jmp qword ptr [rax]
0x000000000046439d : sbb eax, 0xdcf00000 ; std ; jmp rdx
0x0000000000461ec1 : sbb eax, 0xe2b80000 ; cld ; jmp rax
0x0000000000461e11 : sbb eax, dword ptr [rax] ; add al, bl ; nop ; cld ; jmp qword ptr [rax]
0x0000000000448d5d : sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x00000000004621c5 : sbb edi, esi ; jmp rax
0x000000000042bfd4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422216 : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000462080 : shl byte ptr [rax + rax], 0 ; call 0xffffffffe1461e35
0x0000000000461f80 : shl byte ptr [rax], 0 ; add byte ptr [rax + 0x7c], ch ; std ; jmp rax
0x000000000042bfd6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000462140 : shl byte ptr [rdi], 0 ; add byte ptr [rax], cl ; stosb byte ptr [rdi], al ; std ; jmp rax
0x0000000000462000 : shl byte ptr [rdx], 0 ; add al, cl ; xchg ebp, edi ; jmp rax
0x00000000004620c0 : shl byte ptr [rip - 0x58980000], -3 ; jmp rax
0x0000000000462100 : shl byte ptr [rsi], 0 ; add al, ch ; test al, -3 ; jmp rax
0x000000000042a69f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000045848f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000458428 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000044b729 : shr al, -0x4f ; ret 0xffff
0x000000000044b7d1 : shr al, 9 ; ret 0xffff
0x0000000000462280 : shr byte ptr [rax + rax], 0 ; fcomp dword ptr [rdx - 2] ; jmp rax
0x0000000000462240 : shr byte ptr [rbx], 0 ; add byte ptr [rax], cl ; sub edi, esi ; jmp rax
0x00000000004621c0 : shr byte ptr [rcx], 0 ; add al, bh ; sbb edi, esi ; jmp rax
0x0000000000462200 : shr byte ptr [rdx], 0 ; add al, bl ; and al, 0xfffffffffffffffe ; jmp rax
0x00000000004622c0 : shr byte ptr [rip + 0x75680000], -2 ; jmp rax
0x0000000000462300 : shr byte ptr [rsi], 0 ; add byte ptr [rax], cl ; add bh, bh ; jmp rax
0x000000000045845f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004583e8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000046353d : sldt word ptr [rax] ; loopne 0x4635bc ; cld ; jmp rsi
0x000000000046355d : sldt word ptr [rax] ; mov al, 0x75 ; cld ; call rax
0x0000000000461b41 : sldt word ptr [rax] ; sub byte ptr [rcx - 5], al ; jmp rax
0x0000000000450ff9 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000046263a : stc ; jmp qword ptr [rax]
0x0000000000464102 : std ; call qword ptr [rdx]
0x00000000004644a2 : std ; call rdx
0x000000000046204e : std ; inc dword ptr [rax] ; and al, 0 ; add byte ptr [rax], bh ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x0000000000461fce : std ; inc dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], cl ; xchg ch, bh ; jmp qword ptr [rax]
0x000000000046208e : std ; inc dword ptr [rax] ; and eax, 0xa6480000 ; std ; jmp qword ptr [rax]
0x000000000046200e : std ; inc dword ptr [rax] ; and eax, dword ptr [rax] ; add byte ptr [rax - 0x78], cl ; std ; jmp qword ptr [rax]
0x000000000046214e : std ; inc dword ptr [rax] ; sub byte ptr [rax], al ; add byte ptr [rax - 0x56], ch ; std ; jmp qword ptr [rax]
0x000000000046218e : std ; inc dword ptr [rax] ; sub dword ptr [rax], eax ; add byte ptr [rax], ch ; clc ; std ; jmp qword ptr [rax]
0x00000000004620fe : std ; inc eax ; add byte ptr es:[rax], al ; call 0xffffffffe1461eba
0x000000000046207e : std ; inc eax ; and al, 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000461ffe : std ; inc eax ; and al, byte ptr [rax] ; add al, cl ; xchg ebp, edi ; jmp rax
0x0000000000461f7e : std ; inc eax ; and byte ptr [rax], al ; add byte ptr [rax + 0x7c], ch ; std ; jmp rax
0x00000000004620be : std ; inc eax ; and eax, 0xa7680000 ; std ; jmp rax
0x0000000000461f96 : std ; jmp qword ptr [rax]
0x0000000000463fc2 : std ; jmp qword ptr [rdi]
0x0000000000463b82 : std ; jmp qword ptr [rdx]
0x0000000000463ec2 : std ; jmp qword ptr [rsi]
0x0000000000461f86 : std ; jmp rax
0x0000000000464322 : std ; jmp rdi
0x00000000004643a2 : std ; jmp rdx
0x0000000000421627 : std ; ret 0x34b9
0x0000000000421576 : std ; ret 0x8589
0x0000000000400334 : sti ; add eax, 0xd0a4f270 ; ret
0x0000000000429404 : sti ; add rsp, 8 ; pop rbp ; ret
0x000000000040a4c2 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000462c02 : sti ; call qword ptr [rbx]
0x0000000000462c62 : sti ; call qword ptr [rcx]
0x0000000000462be2 : sti ; call rbx
0x0000000000461c4e : sti ; inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax - 1], ch ; sti ; jmp qword ptr [rax]
0x0000000000461bce : sti ; inc dword ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax], ch ; sar bl, cl ; jmp qword ptr [rax]
0x0000000000461b4e : sti ; inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], bl ; sti ; jmp qword ptr [rax]
0x0000000000461b8e : sti ; inc dword ptr [rax] ; adc dword ptr [rax], eax ; add al, cl ; jne 0x461b9b ; jmp qword ptr [rax]
0x0000000000461c0e : sti ; inc dword ptr [rax] ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x13], cl ; sti ; jmp qword ptr [rax]
0x0000000000461b7e : sti ; inc eax ; adc byte ptr [rax], al ; add al, bl ; jo 0x461b8b ; jmp rax
0x0000000000461c3e : sti ; inc eax ; adc eax, dword ptr [rax] ; add byte ptr [rax - 2], bh ; sti ; jmp rax
0x0000000000461b3e : sti ; inc eax ; sldt word ptr [rax] ; sub byte ptr [rcx - 5], al ; jmp rax
0x0000000000447323 : sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000461b56 : sti ; jmp qword ptr [rax]
0x0000000000462b22 : sti ; jmp qword ptr [rcx]
0x0000000000462e42 : sti ; jmp qword ptr [rdi]
0x0000000000461b46 : sti ; jmp rax
0x0000000000462ba2 : sti ; jmp rbx
0x0000000000462f22 : sti ; jmp rcx
0x0000000000462ec2 : sti ; jmp rsi
0x0000000000462155 : stosb byte ptr [rdi], al ; std ; jmp qword ptr [rax]
0x0000000000462145 : stosb byte ptr [rdi], al ; std ; jmp rax
0x0000000000404841 : stosd dword ptr [rdi], eax ; add eax, 0xbc50b900 ; ret
0x0000000000449738 : sub al, -0x18 ; ret 0xfb8c
0x0000000000429120 : sub al, -0x4c ; ret
0x000000000040705d : sub al, 0x2d ; ret
0x0000000000434337 : sub al, 0x38 ; ret 0x8589
0x00000000004372f3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000452a0c : sub al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000462194 : sub al, bh ; std ; jmp qword ptr [rax]
0x0000000000462201 : sub al, byte ptr [rax] ; add al, bl ; and al, 0xfffffffffffffffe ; jmp rax
0x0000000000464c01 : sub bh, bh ; call qword ptr [rax]
0x0000000000464a00 : sub bl, -2 ; jmp qword ptr [rsi]
0x0000000000462151 : sub byte ptr [rax], al ; add byte ptr [rax - 0x56], ch ; std ; jmp qword ptr [rax]
0x0000000000414c3a : sub byte ptr [rbp - 0x17], dh ; ret 0xe
0x0000000000461d84 : sub byte ptr [rbp - 4], ah ; jmp rax
0x0000000000461b44 : sub byte ptr [rcx - 5], al ; jmp rax
0x0000000000419957 : sub byte ptr [rdx + 0x3d], bh ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000461f14 : sub dh, ch ; cld ; jmp qword ptr [rax]
0x0000000000461bd4 : sub dl, dl ; sti ; jmp qword ptr [rax]
0x00000000004621c1 : sub dword ptr [rax], eax ; add al, bh ; sbb edi, esi ; jmp rax
0x0000000000462191 : sub dword ptr [rax], eax ; add byte ptr [rax], ch ; clc ; std ; jmp qword ptr [rax]
0x0000000000442054 : sub eax, 0xe8000000 ; ret
0x0000000000462241 : sub eax, dword ptr [rax] ; add byte ptr [rax], cl ; sub edi, esi ; jmp rax
0x000000000041f30d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000462355 : sub edi, edi ; jmp qword ptr [rax]
0x0000000000462245 : sub edi, esi ; jmp rax
0x000000000045f4b1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000045f4b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044347b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000461e84 : test al, -0x43 ; cld ; jmp rax
0x0000000000461e44 : test al, -0x61 ; cld ; jmp rax
0x0000000000461fc4 : test al, -0x7b ; std ; jmp rax
0x00000000004445cd : test al, -2 ; ret 0x4589
0x00000000004445fb : test al, -2 ; ret 0x8eb9
0x0000000000462105 : test al, -3 ; jmp rax
0x000000000041dc40 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045bd18 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004479cb : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042d8c4 : test al, 0x2d ; call 0xffffffff8a053e6a
0x000000000042d8c3 : test al, 0x2d ; call 0xffffffff8a053e6b
0x000000000042d909 : test al, 0x2d ; jmp 0xffffffff8a053eaf
0x000000000042d908 : test al, 0x2d ; jmp 0xffffffff8a053eb0
0x000000000042dbac : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042d9b8 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000461a94 : test al, 0x3d ; cli ; jmp qword ptr [rax]
0x0000000000461d04 : test al, 0x42 ; cld ; jmp rax
0x0000000000418c25 : test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000439f8d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000044e5dd : test al, 0x55 ; ret 0x893c
0x000000000042b1cb : test al, 0x70 ; ret 0x4589
0x000000000042b492 : test al, 0x70 ; ret 0x50e9
0x000000000042b3f3 : test al, 0x70 ; ret 0xefe9
0x0000000000443358 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000461a54 : test al, 0xe ; cli ; jmp qword ptr [rax]
0x0000000000461dd5 : test bh, ah ; jmp qword ptr [rax]
0x000000000044939e : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000448328 : test byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045f40a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000425641 : test byte ptr [rbx + rax], cl ; add cl, ch ; ret
0x0000000000406ed8 : test byte ptr [rcx - 0x16fffff7], cl ; ret 1
0x0000000000462f9c : test byte ptr [rcx], cl ; add byte ptr [rax], al ; nop ; sti ; call qword ptr [rbx]
0x00000000004059c8 : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045ce46 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004421a5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000462b9c : test byte ptr [rip + 0x70600000], al ; sti ; jmp rbx
0x000000000046439c : test byte ptr [rip - 0x23100000], bl ; std ; jmp rdx
0x000000000046449c : test byte ptr [rsi], bl ; add byte ptr [rax], al ; mov al, -0xc ; std ; call rdx
0x000000000046349c : test byte ptr [rsi], cl ; add byte ptr [rax], al ; push rax ; push -4 ; call qword ptr [rdx]
0x0000000000463c9c : test byte ptr [rsi], dl ; add byte ptr [rax], al ; push rax ; std ; jmp qword ptr [rax]
0x000000000045692d : test dword ptr [rax + 0x2dffffef], edi ; imul ch ; ret
0x0000000000456981 : test dword ptr [rax + 0x2dffffef], edi ; imul ebp ; ret
0x00000000004568f5 : test dword ptr [rax + 0x2dffffef], edi ; ret
0x000000000040d724 : test dword ptr [rax + 0x2dfffffa], ecx ; call qword ptr [rcx]
0x000000000040c128 : test dword ptr [rax + 0x2dfffffa], ecx ; ret
0x00000000004101e8 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0x3bcc
0x000000000040c3e4 : test dword ptr [rax + 0x2dfffffa], ecx ; ret 0xe32a
0x000000000041c152 : test dword ptr [rax + rdi*8 - 0x7bf00001], ebp ; ret 0xc
0x000000000041d554 : test dword ptr [rax - 0x17000009], ecx ; ret 0x1cd
0x000000000043e441 : test dword ptr [rax - 0x2c000002], ecx ; ret 0x39aa
0x0000000000446bbf : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000420f71 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rax
0x00000000004470bd : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000446cb0 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000446ec7 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000446fbd : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000043b8e7 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdi
0x0000000000443460 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004431c8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042550f : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x000000000040898a : test dword ptr [rsi + rdi*8 - 0x2fd20001], esp ; jmp rsi
0x0000000000408936 : test dword ptr [rsi + rdi*8 - 0x30d20001], esp ; jmp rsi
0x00000000004085d2 : test dword ptr [rsi + rdi*8 - 0x3cd20001], esp ; or byte ptr [rsi], cl ; ret 0x8589
0x000000000040857e : test dword ptr [rsi + rdi*8 - 0x3dd20001], esp ; or byte ptr [rsi], cl ; ret 0x8589
0x000000000043fe41 : test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000440418 : test dword ptr [rsi + rdi*8 - 1], ebp ; call rsp
0x000000000043d251 : test dword ptr [rsp + rdi*8 - 0x7bf00001], esi ; ret
0x0000000000461fc5 : test edi, ebp ; jmp rax
0x0000000000452e15 : test esi, esi ; ret 0x89c8
0x0000000000414c38 : wait ; insd dword ptr [rdi], dx ; sub byte ptr [rbp - 0x17], dh ; ret 0xe
0x0000000000461fd5 : xchg ch, bh ; jmp qword ptr [rax]
0x0000000000453490 : xchg dh, dh ; ret 0x3dc8
0x0000000000452e60 : xchg dh, dh ; ret 0x89c8
0x0000000000431321 : xchg eax, ebp ; ret
0x000000000040431a : xchg eax, ebp ; ret 0x8445
0x0000000000404746 : xchg eax, ebp ; ret 0xd284
0x0000000000407d0d : xchg eax, ebp ; ret 0xe280
0x0000000000428289 : xchg eax, ebp ; ret 0xf280
0x0000000000462055 : xchg eax, ebp ; std ; jmp qword ptr [rax]
0x00000000004447fb : xchg eax, ebx ; ret
0x00000000004236ac : xchg eax, ebx ; ret 0xd284
0x000000000043431b : xchg eax, ecx ; ret
0x00000000004201a7 : xchg eax, edi ; in al, 0x30 ; add ebp, ecx ; ret
0x00000000004285aa : xchg eax, edi ; ret
0x00000000004235c8 : xchg eax, edi ; ret 0xd284
0x000000000043bfaf : xchg eax, edi ; ret 0xe280
0x000000000043446b : xchg eax, edx ; ret
0x000000000044335e : xchg eax, edx ; ret 0xd284
0x0000000000421357 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000400333 : xchg eax, edx ; sti ; add eax, 0xd0a4f270 ; ret
0x0000000000439ca2 : xchg eax, esi ; ret
0x00000000004230b7 : xchg eax, esi ; ret 0x8445
0x00000000004241de : xchg eax, esi ; ret 0xd284
0x000000000041a26b : xchg eax, esp ; ret
0x00000000004076b2 : xchg eax, esp ; ret 0x8445
0x0000000000404e8e : xchg eax, esp ; ret 0xd284
0x00000000004078a3 : xchg eax, esp ; ret 0xe280
0x0000000000450e6b : xchg eax, esp ; ret 0xf280
0x000000000045a181 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000421625 : xchg eax, esp ; sbb ch, bh ; ret 0x34b9
0x0000000000421574 : xchg eax, esp ; sbb ch, bh ; ret 0x8589
0x0000000000448d5c : xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000042bfd5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000462005 : xchg ebp, edi ; jmp rax
0x00000000004583ec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000462401 : xor al, byte ptr [rax] ; add byte ptr [rax], bh ; push -1 ; jmp rax
0x00000000004623d1 : xor al, byte ptr [rax] ; add byte ptr [rax], cl ; movsxd rdi, edi ; jmp qword ptr [rax]
0x0000000000463141 : xor bh, ah ; call qword ptr [rsi]
0x000000000042555e : xor bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rax
0x0000000000464c61 : xor bh, bh ; call qword ptr [rbx]
0x0000000000462385 : xor bh, bh ; jmp rax
0x000000000042dbae : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042dd55 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000462e40 : xor bl, ch ; sti ; jmp qword ptr [rdi]
0x000000000044d762 : xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000462381 : xor byte ptr [rax], al ; add byte ptr [rax], ch ; xor bh, bh ; jmp rax
0x000000000044d763 : xor byte ptr [rbx], dh ; in eax, -0x76 ; push rbp ; ret
0x000000000045592a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d9ba : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000043a2a7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000430e6d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
