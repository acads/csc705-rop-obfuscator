0x00000000004019c3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401e3d : adc eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401ecf : add bl, dh ; ret
0x0000000000401ecd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040161e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401992 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004006e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400799 : add byte ptr [rax], al ; jmp 0x4006f9
0x0000000000401e3f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401071 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401ece : add byte ptr [rax], al ; ret
0x0000000000400898 : add byte ptr [rcx], al ; ret
0x0000000000401620 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401994 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000401442 : add cl, ch ; ret 1
0x0000000000400894 : add eax, 0x202816 ; add ebx, esi ; ret
0x0000000000401440 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040085b : add eax, edx ; sar rax, 1 ; jne 0x40086c ; pop rbp ; ret
0x0000000000400899 : add ebx, esi ; ret
0x00000000004019c1 : add esp, 0x110 ; pop rbp ; ret
0x000000000040106d : add esp, 0x120 ; pop rbp ; ret
0x000000000040119b : add esp, 0x20 ; pop rbp ; ret
0x0000000000401121 : add esp, 0x30 ; pop rbp ; ret
0x0000000000401d72 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004006e6 : add esp, 8 ; ret
0x000000000040085a : add rax, rdx ; sar rax, 1 ; jne 0x40086d ; pop rbp ; ret
0x00000000004019c0 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040106c : add rsp, 0x120 ; pop rbp ; ret
0x000000000040119a : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401120 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d71 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004006e5 : add rsp, 8 ; ret
0x0000000000400897 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040106f : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016d3 : call 0x48d95b
0x0000000000401ea9 : call qword ptr [r12 + rbx*8]
0x0000000000401eaa : call qword ptr [rsp + rbx*8]
0x00000000004008bd : call rax
0x000000000040206b : call rsp
0x000000000040085f : clc ; jne 0x400868 ; pop rbp ; ret
0x000000000040081d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400830 ; pop rbp ; ret
0x00000000004016cd : cmp esp, dword ptr [rcx + 0x558bcc6f] ; call 0x48d961
0x0000000000400833 : cwde ; xor byte ptr [rax], ah ; jmp rax
0x0000000000400873 : cwde ; xor byte ptr [rax], ah ; jmp rdx
0x0000000000401032 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040143c : dec dword ptr [rdi] ; test bl, cl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401eac : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040106b : hlt ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000400830 : hlt ; pop rbp ; mov edi, 0x603098 ; jmp rax
0x0000000000401c51 : in al, -0x7f ; ret 1
0x0000000000401cf5 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000400fee : inc dword ptr [rcx] ; ret 0xfa81
0x0000000000400823 : ja 0x40082a ; pop rbp ; ret
0x000000000040082f : je 0x40082d ; pop rbp ; mov edi, 0x603098 ; jmp rax
0x000000000040079b : jmp 0x4006f7
0x0000000000400837 : jmp rax
0x0000000000400877 : jmp rdx
0x0000000000400860 : jne 0x400867 ; pop rbp ; ret
0x0000000000401885 : loopne 0x40188e ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401990 : loopne 0x401999 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000400893 : mov byte ptr [rip + 0x202816], 1 ; ret
0x0000000000401197 : mov dword ptr [rdx + 0x10], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e42 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040111d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004008bb : mov ebp, esp ; call rax
0x0000000000400821 : mov ebp, esp ; ja 0x40082c ; pop rbp ; ret
0x00000000004008b5 : mov edi, 0x602e20 ; mov rbp, rsp ; call rax
0x0000000000400832 : mov edi, 0x603098 ; jmp rax
0x0000000000400872 : mov edi, 0x603098 ; jmp rdx
0x0000000000401ea7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000401ea6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400870 : mov esi, eax ; mov edi, 0x603098 ; jmp rdx
0x0000000000401196 : mov qword ptr [rdx + 0x10], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e41 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040111c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004008ba : mov rbp, rsp ; call rax
0x0000000000400820 : mov rbp, rsp ; ja 0x40082d ; pop rbp ; ret
0x000000000040086f : mov rsi, rax ; mov edi, 0x603098 ; jmp rdx
0x0000000000401ec8 : nop dword ptr [rax + rax] ; ret
0x0000000000401ebc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401ebe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401ec0 : pop r14 ; pop r15 ; ret
0x0000000000401ec2 : pop r15 ; ret
0x0000000000400892 : pop rbp ; mov byte ptr [rip + 0x202816], 1 ; ret
0x0000000000400831 : pop rbp ; mov edi, 0x603098 ; jmp rax
0x000000000040086e : pop rbp ; mov rsi, rax ; mov edi, 0x603098 ; jmp rdx
0x0000000000401ebb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401ebf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400825 : pop rbp ; ret
0x0000000000401ec3 : pop rdi ; ret
0x0000000000401ec1 : pop rsi ; pop r15 ; ret
0x0000000000401ebd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004016d2 : push rbp ; call 0x48d95c
0x0000000000401c50 : push rbp ; in al, -0x7f ; ret 1
0x00000000004008b4 : push rbp ; mov edi, 0x602e20 ; mov rbp, rsp ; call rax
0x00000000004006e9 : ret
0x0000000000400faf : ret 0
0x00000000004007a2 : ret 0x2028
0x0000000000401b2a : ret 0x4589
0x0000000000401bb5 : ret 0x8b48
0x0000000000401035 : ret 0xb0
0x0000000000400855 : ret 0xc148
0x0000000000401623 : ret 0xd284
0x0000000000401997 : ret 0xf280
0x0000000000400ff0 : ret 0xfa81
0x0000000000400e6d : ret 1
0x00000000004016d5 : ret 8
0x000000000040161c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040085c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40086b ; pop rbp ; ret
0x000000000040082e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; cwde ; xor byte ptr [rax], ah ; jmp rax
0x000000000040085e : sar eax, 1 ; jne 0x400869 ; pop rbp ; ret
0x000000000040085d : sar rax, 1 ; jne 0x40086a ; pop rbp ; ret
0x0000000000400896 : sub byte ptr [rax], ah ; add byte ptr [rcx], al ; ret
0x0000000000401ed5 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401ed4 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040143e : test bl, cl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401eca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401622 : xchg eax, ebp ; ret 0xd284
0x0000000000401996 : xchg eax, ebp ; ret 0xf280
0x0000000000400834 : xor byte ptr [rax], ah ; jmp rax
0x0000000000400874 : xor byte ptr [rax], ah ; jmp rdx
