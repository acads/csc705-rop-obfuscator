0x0000000000407044 : adc al, -0x17 ; ret 2
0x00000000004058be : adc al, 0x25 ; and byte ptr [rsi + 0x63480066], ah ; ret 0x8b48
0x0000000000441f58 : adc al, 0x6a ; add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000468cfd : adc al, byte ptr [rax] ; add byte ptr [rax - 0x69], dl ; cld ; call rdx
0x0000000000468f20 : adc bh, al ; cld ; jmp qword ptr [rbx]
0x0000000000450ed2 : adc byte ptr [rax - 0x77], cl ; loopne 0x450eb9 ; cmp al, ch ; ret
0x0000000000464706 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004646f7 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000413382 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x1ef
0x00000000004132d5 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004646f6 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x00000000004691e0 : adc byte ptr [rcx], cl ; std ; call qword ptr [rax]
0x0000000000467de0 : adc byte ptr [rdi - 6], dl ; call qword ptr [rax]
0x000000000043698d : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d801 : adc dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040d742 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000468c1d : adc dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; cld ; jmp rdx
0x000000000043233b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004641cd : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x000000000042df69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410e08 : adc esi, eax ; ret
0x0000000000468c1b : add ah, al ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; cld ; jmp rdx
0x000000000046951b : add ah, al ; sbb al, byte ptr [rax] ; add al, al ; mov ch, bh ; jmp qword ptr [rcx]
0x000000000046941b : add ah, al ; sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; sbb al, -3 ; jmp rax
0x0000000000468a1b : add ah, al ; sldt word ptr [rax] ; jo 0x468a89 ; cld ; jmp qword ptr [rax]
0x000000000040c7f4 : add al, -0x2a ; pop rbp ; ret
0x00000000004691a1 : add al, -3 ; call qword ptr [rbx]
0x0000000000406352 : add al, 0 ; add cl, ch ; ret 1
0x000000000046925c : add al, 0x18 ; add byte ptr [rax], al ; push rax ; or edi, ebp ; jmp qword ptr [rdi]
0x0000000000455a8d : add al, 0x24 ; mov al, 0 ; call 0x401d26
0x00000000004163a7 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000046805c : add al, 6 ; add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x00000000004531b5 : add al, 8 ; add al, ch ; ret
0x000000000046919f : add al, ah ; add al, -3 ; call qword ptr [rbx]
0x000000000046951f : add al, al ; mov ch, bh ; jmp qword ptr [rcx]
0x0000000000467d7f : add al, al ; push rdx ; cli ; call qword ptr [rdi]
0x0000000000465161 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000405c76 : add al, byte ptr [rax] ; add al, ch ; push rdx ; ret 0xffff
0x00000000004438b5 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000040e1e1 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041d44c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x000000000040d87d : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431c33 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041f132 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x512db445], cl ; ret 0xe86c
0x000000000040f0f7 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000419a44 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000410b5b : add al, ch ; call qword ptr [rcx]
0x0000000000455a26 : add al, ch ; hlt ; ret 0xfffa
0x0000000000405c78 : add al, ch ; push rdx ; ret 0xffff
0x00000000004438b7 : add al, ch ; ret
0x0000000000413388 : add al, ch ; ret 0x1ef
0x000000000040e288 : add al, ch ; ret 0x240
0x00000000004071b8 : add al, ch ; ret 0x97
0x0000000000454458 : add al, ch ; ret 0xfad8
0x0000000000445078 : add al, ch ; ret 0xfbcb
0x00000000004250c8 : add al, ch ; ret 0xfdcf
0x0000000000410b5a : add al, r13b ; call qword ptr [rcx]
0x000000000043cb86 : add bh, al ; in al, dx ; int1 ; ret
0x0000000000419601 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000040e26f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040e1e3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000043202e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000431d96 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004410f8 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000044133b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004410cd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000463029 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004651bf : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000463fd4 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000465085 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000046463d : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000046341c : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000468060 : add bh, dl ; cli ; call qword ptr [rdx]
0x00000000004657bf : add bl, dh ; ret
0x000000000041970a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000468a1f : add byte ptr [rax + 0x5f], dh ; cld ; jmp qword ptr [rax]
0x00000000004058c3 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000046923f : add byte ptr [rax + 0xb], al ; std ; jmp qword ptr [rdi]
0x000000000046925f : add byte ptr [rax + 0xb], dl ; std ; jmp qword ptr [rdi]
0x00000000004109e5 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000046925b : add byte ptr [rax + rbx], al ; add byte ptr [rax], al ; push rax ; or edi, ebp ; jmp qword ptr [rdi]
0x000000000046815f : add byte ptr [rax - 0x1e], ah ; cli ; call rax
0x0000000000467f9f : add byte ptr [rax - 0x36], dl ; cli ; jmp rbx
0x0000000000467b5f : add byte ptr [rax - 0x55], ah ; stc ; jmp qword ptr [rdi]
0x0000000000468cff : add byte ptr [rax - 0x69], dl ; cld ; call rdx
0x0000000000405bad : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x465f
0x000000000040c76b : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000441f45 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000043ce5b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000040c7f1 : add byte ptr [rax - 0x77], cl ; add al, -0x2a ; pop rbp ; ret
0x000000000045293b : add byte ptr [rax - 0x77], cl ; ret 0x3ce8
0x00000000004529dc : add byte ptr [rax - 0x77], cl ; ret 0x9be8
0x0000000000405ea7 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041d44e : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x0000000000468c1f : add byte ptr [rax - 0x80], al ; cld ; jmp rdx
0x00000000004690ff : add byte ptr [rax - 0xc], dl ; cld ; call rdx
0x00000000004695bf : add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x0000000000468f1e : add byte ptr [rax], al ; adc bh, al ; cld ; jmp qword ptr [rbx]
0x00000000004691de : add byte ptr [rax], al ; adc byte ptr [rcx], cl ; std ; call qword ptr [rax]
0x0000000000467dde : add byte ptr [rax], al ; adc byte ptr [rdi - 6], dl ; call qword ptr [rax]
0x000000000046925a : add byte ptr [rax], al ; add al, 0x18 ; add byte ptr [rax], al ; push rax ; or edi, ebp ; jmp qword ptr [rdi]
0x000000000046805a : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x0000000000413386 : add byte ptr [rax], al ; add al, ch ; ret 0x1ef
0x000000000040e286 : add byte ptr [rax], al ; add al, ch ; ret 0x240
0x00000000004071b6 : add byte ptr [rax], al ; add al, ch ; ret 0x97
0x000000000041970b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000043202c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000431d94 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004410f6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000441339 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000463027 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004650f1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000046463b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000464685 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000046805e : add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x00000000004657bd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004109e3 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040c769 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000441f43 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000043ce59 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000405ea5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000413384 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x1ef
0x000000000040e284 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x240
0x00000000004071b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x97
0x00000000004657bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040e282 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x240
0x00000000004071b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x97
0x0000000000400bf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040535e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004052b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000400bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000458394 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000040d596 : add byte ptr [rax], al ; add byte ptr [rbx + 0x322dd445], cl ; ret 0x2e75
0x000000000040d6ca : add byte ptr [rax], al ; add byte ptr [rbx + 0x332dd445], cl ; ret 0x2e75
0x0000000000457013 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000042dcae : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416411 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041f17d : add byte ptr [rax], al ; add byte ptr [rbx + 0x522db445], cl ; ret 0xe86c
0x000000000040ccec : add byte ptr [rax], al ; add byte ptr [rbx + 0x612de045], cl ; ret 0xa5f1
0x000000000041609f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000406b47 : add byte ptr [rax], al ; add byte ptr [rbx + 0x712df445], cl ; ret 0xa18e
0x00000000004332a7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x0000000000457a89 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000457a05 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041f14b : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000041f100 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000040c48b : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ad227bb], cl ; ret 0x7770
0x000000000040c3af : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bd227bb], cl ; ret 0x7770
0x000000000043c63e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000411240 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040f005 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041f54d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000408318 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xf45
0x0000000000414564 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000042cb61 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041f4d4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000043736f : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0xe280
0x000000000041e953 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ret
0x00000000004224aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041e3da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000434a1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041bd93 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004082fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000000405360 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bb73 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000415725 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000043e3db : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000043bb9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041ddf0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041d374 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000425b9f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040500e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004382a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f91e : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045734d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000046913e : add byte ptr [rax], al ; add dh, bh ; cld ; call qword ptr [rax]
0x0000000000467f9a : add byte ptr [rax], al ; add eax, 0xca500000 ; cli ; jmp rbx
0x000000000042df6b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004215c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004330f1 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043233d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004081ee : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cc9b : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401b13 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000467c7a : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; cmp byte ptr [rsi], -6 ; jmp rsi
0x000000000046807a : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x000000000045588f : add byte ptr [rax], al ; call 0x401b74
0x00000000004058fe : add byte ptr [rax], al ; call 0x401b84
0x0000000000444d6d : add byte ptr [rax], al ; call 0x401b88
0x0000000000405c77 : add byte ptr [rax], al ; call 0x401ed4
0x0000000000467c7e : add byte ptr [rax], al ; cmp byte ptr [rsi], -6 ; jmp rsi
0x000000000046913a : add byte ptr [rax], al ; in al, 0x16 ; add byte ptr [rax], al ; add dh, bh ; cld ; call qword ptr [rax]
0x000000000046923a : add byte ptr [rax], al ; in al, 0x17 ; add byte ptr [rax], al ; or edi, ebp ; jmp qword ptr [rdi]
0x0000000000467e3a : add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; mov al, 0x65 ; cli ; call qword ptr [rdx]
0x000000000046813a : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; nop ; loope 0x468146 ; jmp rsi
0x0000000000401b69 : add byte ptr [rax], al ; jmp 0x401b29
0x0000000000411162 : add byte ptr [rax], al ; jmp 0x41174f
0x000000000041f91a : add byte ptr [rax], al ; jmp 0x41f929
0x0000000000457349 : add byte ptr [rax], al ; jmp 0x457358
0x0000000000457fb9 : add byte ptr [rax], al ; jmp 0x457fc8
0x000000000045842f : add byte ptr [rax], al ; jmp 0x45853f
0x0000000000468a1e : add byte ptr [rax], al ; jo 0x468a86 ; cld ; jmp qword ptr [rax]
0x0000000000467f1e : add byte ptr [rax], al ; loopne 0x467eed ; cli ; call qword ptr [rsi]
0x000000000046919e : add byte ptr [rax], al ; loopne 0x4691ab ; std ; call qword ptr [rbx]
0x0000000000467e3e : add byte ptr [rax], al ; mov al, 0x65 ; cli ; call qword ptr [rdx]
0x0000000000439f0c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000439e8d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000435747 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004581c7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000459336 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415279 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000415aac : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000425489 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000458fed : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000040c76a : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000468cfa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x69], dl ; cld ; call rdx
0x00000000004690de : add byte ptr [rax], al ; nop ; cld ; jmp rax
0x0000000000467fde : add byte ptr [rax], al ; nop ; iretd ; cli ; call qword ptr [rsi]
0x000000000046813e : add byte ptr [rax], al ; nop ; loope 0x468142 ; jmp rsi
0x000000000046923e : add byte ptr [rax], al ; or edi, ebp ; jmp qword ptr [rdi]
0x0000000000405ede : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042dcaf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bae7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004690fe : add byte ptr [rax], al ; push rax ; hlt ; cld ; call rdx
0x000000000046925e : add byte ptr [rax], al ; push rax ; or edi, ebp ; jmp qword ptr [rdi]
0x0000000000468cfe : add byte ptr [rax], al ; push rax ; xchg eax, edi ; cld ; call rdx
0x0000000000400bf6 : add byte ptr [rax], al ; ret
0x00000000004695ba : add byte ptr [rax], al ; sbb eax, dword ptr fs:[rax] ; add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x0000000000467dda : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; adc byte ptr [rdi - 6], dl ; call qword ptr [rax]
0x00000000004691da : add byte ptr [rax], al ; test byte ptr [rdi], dl ; add byte ptr [rax], al ; adc byte ptr [rcx], cl ; std ; call qword ptr [rax]
0x0000000000467fda : add byte ptr [rax], al ; test byte ptr [rip - 0x30700000], al ; cli ; call qword ptr [rsi]
0x00000000004690da : add byte ptr [rax], al ; test byte ptr [rsi], dl ; add byte ptr [rax], al ; nop ; cld ; jmp rax
0x000000000046770e : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000046805f : add byte ptr [rax], al ; xlatb ; cli ; call qword ptr [rdx]
0x000000000046941f : add byte ptr [rax], dh ; sbb al, -3 ; jmp rax
0x00000000004691df : add byte ptr [rax], dl ; or ebp, edi ; call qword ptr [rax]
0x0000000000467ddf : add byte ptr [rax], dl ; push rdi ; cli ; call qword ptr [rax]
0x0000000000467fdb : add byte ptr [rbp + rax - 0x30700000], al ; cli ; call qword ptr [rsi]
0x0000000000467f9b : add byte ptr [rbp + rax], al ; add byte ptr [rax - 0x36], dl ; cli ; jmp rbx
0x0000000000416a75 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000416ab7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000458396 : add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000044415f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x444147 ; ret
0x000000000040d598 : add byte ptr [rbx + 0x322dd445], cl ; ret 0x2e75
0x000000000040d6cc : add byte ptr [rbx + 0x332dd445], cl ; ret 0x2e75
0x0000000000457015 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x000000000042dcb0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416413 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041f134 : add byte ptr [rbx + 0x512db445], cl ; ret 0xe86c
0x000000000041f17f : add byte ptr [rbx + 0x522db445], cl ; ret 0xe86c
0x000000000040bae8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000421391 : add byte ptr [rbx + 0x5e2db845], cl ; sbb dh, cl ; ret
0x000000000040ccee : add byte ptr [rbx + 0x612de045], cl ; ret 0xa5f1
0x00000000004160a1 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000406b49 : add byte ptr [rbx + 0x712df445], cl ; ret 0xa18e
0x0000000000406c5a : add byte ptr [rbx + 0x722df445], cl ; ret 0xa18e
0x00000000004061fb : add byte ptr [rbx + 0x7a2dc845], cl ; xchg eax, ebp ; ret
0x00000000004062f5 : add byte ptr [rbx + 0x7b2dc845], cl ; xchg eax, ebp ; ret
0x000000000040bc3d : add byte ptr [rbx + 0x7c2db445], cl ; leave ; cli ; ret 0x8589
0x000000000040bc88 : add byte ptr [rbx + 0x7d2db445], cl ; leave ; cli ; ret 0x8589
0x00000000004219f2 : add byte ptr [rbx + 0xc2d9045], cl ; test al, 0x58 ; ret 0x8589
0x0000000000421a3d : add byte ptr [rbx + 0xd2d9045], cl ; test al, 0x58 ; ret 0x8589
0x0000000000467ddb : add byte ptr [rbx + rax + 0x57100000], al ; cli ; call qword ptr [rax]
0x00000000004695bb : add byte ptr [rbx + rbx], ah ; add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x00000000004332a9 : add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x00000000004111af : add byte ptr [rbx - 0x2634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004116e2 : add byte ptr [rbx - 0x2bb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000457a8b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000457a07 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041f14d : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000041f102 : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000040c48d : add byte ptr [rbx - 0x7ad227bb], cl ; ret 0x7770
0x000000000040c3b1 : add byte ptr [rbx - 0x7bd227bb], cl ; ret 0x7770
0x000000000043c79e : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000043c640 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000407dde : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411242 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040f007 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041f54f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040831a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xf45
0x000000000044f650 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000414566 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000042cb63 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041bd8f : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041f4d6 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000405246 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418aff : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004021c8 : add byte ptr [rcx], al ; ret
0x0000000000437371 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0xe280
0x00000000004691db : add byte ptr [rdi + rdx + 0x9100000], al ; std ; call qword ptr [rax]
0x000000000046919b : add byte ptr [rdi + rdx], al ; add al, ah ; add al, -3 ; call qword ptr [rbx]
0x000000000041e955 : add byte ptr [rdi], cl ; mov dh, 0x45 ; ret
0x00000000004224ac : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004132d7 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000434a1f : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041bd95 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004082fc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000000405362 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bb75 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000415727 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000043e3dd : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000043bb9f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041ddf2 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041d376 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000425ba1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405010 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004382a7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000467c7b : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; cmp byte ptr [rsi], -6 ; jmp rsi
0x0000000000468cfb : add byte ptr [rdx + rdx - 0x68b00000], ah ; cld ; call rdx
0x000000000043ab0d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415f2d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000046807b : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x000000000046805b : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x000000000046809b : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; xlatb ; cli ; call qword ptr [rdx]
0x00000000004688fb : add byte ptr [rsi + rcx + 0x5da00000], ah ; cld ; jmp qword ptr [rdx]
0x00000000004690fb : add byte ptr [rsi + rdx - 0xbb00000], ah ; cld ; call rdx
0x00000000004690db : add byte ptr [rsi + rdx - 0xc700000], al ; cld ; jmp rax
0x0000000000405edc : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004021c7 : add byte ptr es:[rcx], al ; ret
0x000000000041f920 : add cl, ch ; ret
0x000000000045734f : add cl, ch ; ret 0
0x0000000000406354 : add cl, ch ; ret 1
0x0000000000469140 : add dh, bh ; cld ; call qword ptr [rax]
0x000000000041b98a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000043cb84 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x00000000004195ff : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000040e26d : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000467b5d : add dword ptr [rax], eax ; add byte ptr [rax - 0x55], ah ; stc ; jmp qword ptr [rdi]
0x000000000042df25 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f727 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406c58 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x722df445], cl ; ret 0xa18e
0x000000000043c79c : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000441833 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000043ce70 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041dc86 : add dword ptr [rcx], eax ; ret 0x9589
0x000000000041bb7b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415e71 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040c8ec : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045708b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415747 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004145f1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004408cf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d374 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004021c4 : add eax, 0x26848e ; add ebx, esi ; ret
0x00000000004414c1 : add eax, 0x458b0000 ; call 0xffffffffc3a54101
0x000000000043502f : add eax, 0x53b80000 ; jrcxz 0x43509f ; ret 0x8fb9
0x000000000041e723 : add eax, 0x5d5b0000 ; ret
0x00000000004058fd : add eax, 0x7be80000 ; ret 0xffff
0x0000000000459334 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x0000000000435745 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000463026 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000467f9d : add eax, 0xca500000 ; cli ; jmp rbx
0x0000000000467fdd : add eax, 0xcf900000 ; cli ; call qword ptr [rsi]
0x0000000000467d7d : add eax, dword ptr [rax] ; add al, al ; push rdx ; cli ; call qword ptr [rdi]
0x0000000000405bab : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x465f
0x0000000000467ddd : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; push rdi ; cli ; call qword ptr [rax]
0x0000000000436b06 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004163a9 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040218b : add eax, edx ; sar rax, 1 ; jne 0x40219c ; pop rbp ; ret
0x0000000000441df9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004021c9 : add ebx, esi ; ret
0x000000000043ccfb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000441405 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000040246b : add esp, 0x10 ; pop rbp ; ret
0x0000000000418afd : add esp, 0x100 ; pop rbp ; ret
0x000000000041f724 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000042e647 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000442ce5 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000041a95f : add esp, 0x120 ; pop rbp ; ret
0x0000000000441dca : add esp, 0x130 ; pop rbp ; ret
0x0000000000406960 : add esp, 0x140 ; pop rbp ; ret
0x0000000000438f2a : add esp, 0x150 ; pop rbp ; ret
0x000000000041b54e : add esp, 0x160 ; pop rbp ; ret
0x0000000000415e76 : add esp, 0x18 ; pop rbp ; ret
0x00000000004371ea : add esp, 0x180 ; pop rbp ; ret
0x000000000041a26c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e3df : add esp, 0x1c0 ; pop rbp ; ret
0x000000000042f365 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000425252 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000416d95 : add esp, 0x20 ; pop rbp ; ret
0x000000000043ab0b : add esp, 0x200 ; pop rbp ; ret
0x000000000043698b : add esp, 0x210 ; pop rbp ; ret
0x000000000042282a : add esp, 0x250 ; pop rbp ; ret
0x000000000040f0f4 : add esp, 0x258 ; pop rbx ; pop rbp ; ret
0x0000000000420e36 : add esp, 0x260 ; pop rbp ; ret
0x00000000004105c5 : add esp, 0x2b0 ; pop rbp ; ret
0x0000000000430c51 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000044509a : add esp, 0x2e0 ; pop rbp ; ret
0x00000000004149e6 : add esp, 0x30 ; pop rbp ; ret
0x00000000004243bc : add esp, 0x360 ; pop rbp ; ret
0x0000000000435615 : add esp, 0x380 ; pop rbp ; ret
0x000000000040c8f1 : add esp, 0x40 ; pop rbp ; ret
0x0000000000408046 : add esp, 0x430 ; pop rbp ; ret
0x0000000000402426 : add esp, 0x50 ; pop rbp ; ret
0x000000000043f0c9 : add esp, 0x520 ; pop rbp ; ret
0x000000000041e720 : add esp, 0x538 ; pop rbx ; pop rbp ; ret
0x000000000041438f : add esp, 0x550 ; pop rbp ; ret
0x0000000000414936 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405eda : add esp, 0x600 ; pop rbp ; ret
0x000000000040cc9e : add esp, 0x70 ; pop rbp ; ret
0x000000000045cfe3 : add esp, 0x7f8 ; pop rbp ; ret
0x000000000040c2dc : add esp, 0x80 ; pop rbp ; ret
0x00000000004162b8 : add esp, 0x90 ; pop rbp ; ret
0x000000000040bae3 : add esp, 0x998 ; pop rbx ; pop rbp ; ret
0x0000000000410969 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040d34a : add esp, 0xb0 ; pop rbp ; ret
0x0000000000433560 : add esp, 0xc0 ; pop rbp ; ret
0x000000000042d984 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040bfd9 : add esp, 0xd0 ; pop rbp ; ret
0x000000000046573e : add esp, 0xd70 ; pop rbp ; ret
0x0000000000407304 : add esp, 0xe0 ; pop rbp ; ret
0x000000000041907c : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401b16 : add esp, 8 ; ret
0x0000000000436b05 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004163a8 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040218a : add rax, rdx ; sar rax, 1 ; jne 0x40219d ; pop rbp ; ret
0x0000000000441df8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000043ccfa : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040246a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000418afc : add rsp, 0x100 ; pop rbp ; ret
0x000000000041f723 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000042e646 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000442ce4 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000041a95e : add rsp, 0x120 ; pop rbp ; ret
0x0000000000441dc9 : add rsp, 0x130 ; pop rbp ; ret
0x000000000040695f : add rsp, 0x140 ; pop rbp ; ret
0x0000000000438f29 : add rsp, 0x150 ; pop rbp ; ret
0x000000000041b54d : add rsp, 0x160 ; pop rbp ; ret
0x0000000000415e75 : add rsp, 0x18 ; pop rbp ; ret
0x00000000004371e9 : add rsp, 0x180 ; pop rbp ; ret
0x000000000041a26b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e3de : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000042f364 : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000425251 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000416d94 : add rsp, 0x20 ; pop rbp ; ret
0x000000000043ab0a : add rsp, 0x200 ; pop rbp ; ret
0x000000000043698a : add rsp, 0x210 ; pop rbp ; ret
0x0000000000422829 : add rsp, 0x250 ; pop rbp ; ret
0x000000000040f0f3 : add rsp, 0x258 ; pop rbx ; pop rbp ; ret
0x0000000000420e35 : add rsp, 0x260 ; pop rbp ; ret
0x00000000004105c4 : add rsp, 0x2b0 ; pop rbp ; ret
0x0000000000430c50 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000445099 : add rsp, 0x2e0 ; pop rbp ; ret
0x00000000004149e5 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004243bb : add rsp, 0x360 ; pop rbp ; ret
0x0000000000435614 : add rsp, 0x380 ; pop rbp ; ret
0x000000000040c8f0 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000408045 : add rsp, 0x430 ; pop rbp ; ret
0x0000000000402425 : add rsp, 0x50 ; pop rbp ; ret
0x000000000043f0c8 : add rsp, 0x520 ; pop rbp ; ret
0x000000000041e71f : add rsp, 0x538 ; pop rbx ; pop rbp ; ret
0x000000000041438e : add rsp, 0x550 ; pop rbp ; ret
0x0000000000414935 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405ed9 : add rsp, 0x600 ; pop rbp ; ret
0x000000000040cc9d : add rsp, 0x70 ; pop rbp ; ret
0x000000000045cfe2 : add rsp, 0x7f8 ; pop rbp ; ret
0x000000000040c2db : add rsp, 0x80 ; pop rbp ; ret
0x00000000004162b7 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040bae2 : add rsp, 0x998 ; pop rbx ; pop rbp ; ret
0x0000000000410968 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d349 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000043355f : add rsp, 0xc0 ; pop rbp ; ret
0x000000000042d983 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040bfd8 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000046573d : add rsp, 0xd70 ; pop rbp ; ret
0x0000000000407303 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041907b : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401b15 : add rsp, 8 ; ret
0x0000000000433c5b : and al, 0xffffffffffffffac ; ret 0x89cc
0x00000000004351f4 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x00000000004408ce : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d373 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000467c7c : and al, 2 ; add byte ptr [rax], al ; cmp byte ptr [rsi], -6 ; jmp rsi
0x000000000046807c : and al, 6 ; add byte ptr [rax], al ; add bh, dl ; cli ; call qword ptr [rdx]
0x000000000041b988 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041a961 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004058c0 : and byte ptr [rsi + 0x63480066], ah ; ret 0x8b48
0x000000000041b987 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000417285 : and eax, 0x466980 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041460f : and eax, 0x66a700 ; pop rbp ; ret
0x0000000000414633 : and eax, 0x66a708 ; pop rbp ; ret
0x000000000046341a : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000455891 : call 0x401b72
0x0000000000405900 : call 0x401b82
0x0000000000444d6f : call 0x401b86
0x0000000000444d3c : call 0x401c46
0x0000000000455a27 : call 0x401d22
0x000000000043cbb0 : call 0x401d69
0x000000000040be4a : call 0x401e98
0x0000000000405c79 : call 0x401ed2
0x0000000000443e87 : call 0x402106
0x0000000000441b91 : call 0x4373d9
0x0000000000420aff : call 0xa0acdbf
0x0000000000419176 : call 0xffffffff8a03f718
0x000000000045b89d : call 0xffffffffc2857219
0x00000000004384cc : call 0xffffffffc2c1a202
0x00000000004384cb : call 0xffffffffc2c1a203
0x00000000004414c6 : call 0xffffffffc3a540fc
0x00000000004414c5 : call 0xffffffffc3a540fd
0x0000000000441508 : call 0xffffffffc3a5423e
0x0000000000441507 : call 0xffffffffc3a5423f
0x000000000042d9c9 : call 0xffffffffe9056319
0x000000000042d9c8 : call 0xffffffffe905631a
0x000000000042940d : call 0xfffffffff73b19a4
0x0000000000408035 : call 0xfffffffffd350607
0x0000000000408034 : call 0xfffffffffd350608
0x000000000043fe53 : call 0xfffffffffee88425
0x000000000043fe52 : call 0xfffffffffee88426
0x000000000041dcef : call 0xfffffffffef662c1
0x000000000041dcee : call 0xfffffffffef662c2
0x0000000000402163 : call 0xffffffffff408811
0x00000000004021a3 : call 0xffffffffff408851
0x000000000043bde5 : call 0xffffffffff4843ba
0x000000000042bf39 : call 0xffffffffff57450b
0x000000000042bf38 : call 0xffffffffff57450c
0x000000000042bf39 : call 0xffffffffff57450d
0x000000000042bf38 : call 0xffffffffff57450e
0x0000000000418267 : call 0xffffffffff7b0db8
0x0000000000418266 : call 0xffffffffff7b0db9
0x0000000000424e28 : call 0xffffffffffaed3fa
0x0000000000424e27 : call 0xffffffffffaed3fb
0x000000000044090a : call 0xffffffffffc08edc
0x0000000000440909 : call 0xffffffffffc08edd
0x0000000000465799 : call qword ptr [r12 + rbx*8]
0x000000000040a96d : call qword ptr [rax]
0x000000000040d98f : call qword ptr [rbx]
0x0000000000410b5d : call qword ptr [rcx]
0x0000000000410c80 : call qword ptr [rdi]
0x000000000042aef3 : call qword ptr [rdx]
0x0000000000418191 : call qword ptr [rsi]
0x000000000046579a : call qword ptr [rsp + rbx*8]
0x0000000000418303 : call rax
0x000000000041400b : call rbx
0x000000000040aaee : call rcx
0x000000000040e1e9 : call rdi
0x0000000000416247 : call rdx
0x000000000040b4d4 : call rsi
0x00000000004093a8 : call rsp
0x000000000043d626 : cdq ; jbe 0x43d64a ; ret
0x000000000043ef4d : cdq ; jbe 0x43ef71 ; ret
0x0000000000457a0c : cdq ; ret
0x000000000041dc85 : clc ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000416d93 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000436989 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x000000000042f4d7 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d4e1 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043a782 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000444530 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000439cf1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004169e3 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000410967 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000417141 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004394e3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040218f : clc ; jne 0x402198 ; pop rbp ; ret
0x000000000040d4f6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004369ab : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041b58e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041576b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041578b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004157ab : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c76f : clc ; pop rbp ; ret
0x0000000000402497 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000442ce3 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000469142 : cld ; call qword ptr [rax]
0x0000000000468ea2 : cld ; call qword ptr [rbx]
0x0000000000468d02 : cld ; call rdx
0x000000000043cbb3 : cld ; inc edi ; in al, dx ; int1 ; ret
0x0000000000468a22 : cld ; jmp qword ptr [rax]
0x0000000000468f22 : cld ; jmp qword ptr [rbx]
0x0000000000468902 : cld ; jmp qword ptr [rdx]
0x00000000004690e2 : cld ; jmp rax
0x0000000000468c22 : cld ; jmp rdx
0x000000000042bb8d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000467de2 : cli ; call qword ptr [rax]
0x0000000000467d82 : cli ; call qword ptr [rdi]
0x0000000000467e42 : cli ; call qword ptr [rdx]
0x0000000000467f22 : cli ; call qword ptr [rsi]
0x0000000000468162 : cli ; call rax
0x0000000000467fa2 : cli ; jmp rbx
0x0000000000467c82 : cli ; jmp rsi
0x000000000040bc44 : cli ; ret 0x8589
0x000000000040beeb : cli ; ret 0xbaba
0x000000000041f768 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000043b3ed : cmp al, -0x2a ; ret
0x000000000044a7c4 : cmp al, -0x2e ; ret
0x0000000000405bb0 : cmp al, 0x25 ; ret 0x465f
0x0000000000450ed7 : cmp al, ch ; ret
0x0000000000414562 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041e722 : cmp byte ptr [rip + 0x5d5b0000], al ; ret
0x0000000000467c80 : cmp byte ptr [rsi], -6 ; jmp rsi
0x0000000000420f4d : cmp ch, byte ptr [rdx + 0x3d] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004645a8 : cmp dh, -1 ; call qword ptr [rax]
0x0000000000463d73 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000464705 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000040214d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402160 ; pop rbp ; ret
0x000000000045ebde : cmp esi, dword ptr [rdi] ; ret 0x8589
0x00000000004635a4 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x00000000004058c1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000040c7ef : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; add al, -0x2a ; pop rbp ; ret
0x000000000040535c : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004052b1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407ddc : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405244 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044a817 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x000000000042de64 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000043d5d2 : cwde ; jbe 0x43d5f6 ; ret
0x000000000045750b : cwde ; js 0x4574b5 ; ret
0x0000000000457552 : cwde ; js 0x4574fc ; ret
0x000000000045758c : cwde ; js 0x457536 ; ret
0x000000000045b43d : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000040bae5 : cwde ; or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407c3c : dec byte ptr [rdi] ; pushfq ; ret 0xd284
0x000000000040e11d : dec dword ptr [rax + 0x39] ; ret 0xf40
0x000000000041d602 : dec dword ptr [rax + 0x69] ; ret 0xa
0x0000000000424225 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000043ee12 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000455a8a : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x401d29
0x0000000000456fa8 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043845d : dec dword ptr [rax - 0x77] ; jge 0x438460 ; pop rbp ; ret
0x000000000041db6c : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x0000000000441b8d : dec dword ptr [rax - 0x77] ; ret 0x3ae8
0x00000000004305bb : dec dword ptr [rax - 0x77] ; ret 0x4ce8
0x00000000004517aa : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000043ee48 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004111b5 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000430b11 : dec dword ptr [rax - 0x77] ; ret 0xf6e8
0x000000000044f5a9 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044f554 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000462057 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000413d50 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000042c03d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000045c3d5 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000046461c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000463d76 : dec dword ptr [rcx] ; ret 0x9589
0x000000000042d544 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000437a89 : dec dword ptr [rdi] ; test ah, ah ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000043c72f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000421b77 : dec dword ptr [rdi] ; test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000044a0e8 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x0000000000436164 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000430d73 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040634e : dec dword ptr [rdi] ; test byte ptr [rsi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000406c68 : dec dword ptr [rdi] ; test cl, bl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000446194 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x000000000044182f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000445ddc : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x000000000046522e : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x000000000044f6b5 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000405493 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000043ecb4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000430c33 : dec ebx ; je 0x430bf9 ; ret 0x1ce9
0x000000000041ba11 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041ba10 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004162f7 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004163aa : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000040ef95 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bb9b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004061fe : enter 0x7a2d, 0x2e ; xchg eax, ebp ; ret
0x00000000004062f8 : enter 0x7b2d, 0x2e ; xchg eax, ebp ; ret
0x0000000000406540 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004131a5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042ee79 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000440283 : fcmovbe st(0), st(5) ; jmp 0x4408e1
0x000000000041f4e0 : fimul dword ptr [rdi] ; sahf ; ret
0x000000000041e98c : fld xword ptr [rbp - 0x30] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432934 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000441f49 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000043ce5f : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043ee16 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004111da : fmul dword ptr [rcx + rdi*4 + 0x5d] ; call qword ptr [rdi]
0x00000000004512f0 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x000000000041e863 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000046579c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000417e74 : fsubr st(1) ; ret 0
0x000000000041893c : fucompi st(1) ; ret
0x0000000000402469 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004451fc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000438716 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000469101 : hlt ; cld ; call rdx
0x0000000000402160 : hlt ; pop rbp ; mov edi, 0x66a5e8 ; jmp rax
0x000000000041ea0d : hlt ; ret
0x0000000000455a28 : hlt ; ret 0xfffa
0x000000000045603d : idiv bh ; call qword ptr [rcx]
0x000000000044fc43 : idiv bh ; call qword ptr [rdi]
0x000000000045044b : idiv bh ; call qword ptr [rdx]
0x00000000004508c6 : idiv bh ; call rcx
0x0000000000455d20 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000455e56 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000456056 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004530e2 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000452f70 : idiv bh ; jmp qword ptr [rax]
0x00000000004561c1 : idiv bh ; jmp qword ptr [rcx]
0x0000000000451c5c : idiv bh ; jmp qword ptr [rdi]
0x00000000004526f7 : idiv bh ; jmp qword ptr [rsi]
0x00000000004519f1 : idiv bh ; jmp rbx
0x000000000045091f : idiv bh ; jmp rdi
0x000000000044f586 : idiv bh ; jmp rdx
0x000000000045319a : idiv bh ; jmp rsp
0x00000000004517a8 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000451196 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000451e67 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000451987 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000045244f : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004488b3 : imul al ; ret 0x893f
0x000000000045649c : imul eax ; ret 0x483f
0x000000000044dffb : imul eax ; ret 0x893f
0x0000000000405c75 : imul eax, dword ptr [rdx], 0x52e80000 ; ret 0xffff
0x00000000004316ce : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000417287 : imul eax, dword ptr [rsi], 0x5d104f89 ; ret
0x00000000004412e6 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000042b4e9 : in al, -0x7f ; ret 0xff9f
0x000000000042b6cf : in al, -0x7f ; ret 0xffbf
0x000000000042b775 : in al, -0x7f ; ret 0xffc5
0x000000000042b7a3 : in al, -0x7f ; ret 0xffd5
0x000000000042b871 : in al, -0x7f ; ret 0xffd8
0x000000000042ba07 : in al, -0x7f ; ret 0xffe0
0x000000000046913c : in al, 0x16 ; add byte ptr [rax], al ; add dh, bh ; cld ; call qword ptr [rax]
0x000000000046923c : in al, 0x17 ; add byte ptr [rax], al ; or edi, ebp ; jmp qword ptr [rdi]
0x000000000040259d : in al, 0x2d ; ret
0x000000000045895f : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000467e3c : in al, 3 ; add byte ptr [rax], al ; mov al, 0x65 ; cli ; call qword ptr [rdx]
0x000000000046813c : in al, 6 ; add byte ptr [rax], al ; nop ; loope 0x468144 ; jmp rsi
0x0000000000450ed1 : in al, dx ; adc byte ptr [rax - 0x77], cl ; loopne 0x450eba ; cmp al, ch ; ret
0x000000000041a26a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000422828 : in al, dx ; add rsp, 0x250 ; pop rbp ; ret
0x000000000043581f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ed8 : in al, dx ; add rsp, 0x600 ; pop rbp ; ret
0x000000000043a1ef : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043cb89 : in al, dx ; int1 ; ret
0x000000000042559a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411744 : in al, dx ; pop rbp ; ret
0x0000000000402564 : in al, dx ; ret
0x0000000000457c0b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407c01 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407bff : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bccd : inc dword ptr [rax + 0x4d8801e1] ; ret
0x000000000042cb5f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000455d22 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000451198 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a419 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043e450 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040a8cf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407d90 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000040499c : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000040feae : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041dc83 : inc ecx ; clc ; add dword ptr [rcx], eax ; ret 0x9589
0x000000000043cbb4 : inc edi ; in al, dx ; int1 ; ret
0x000000000042e618 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004251c2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000424eb2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000462963 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000464e42 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000463f52 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000462141 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x00000000004631a3 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004531b3 : inc esi ; add al, 8 ; add al, ch ; ret
0x000000000041bccc : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x0000000000427cbf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000042b2ff : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000043c7a3 : int1 ; ret
0x0000000000467fe1 : iretd ; cli ; call qword ptr [rsi]
0x0000000000402153 : ja 0x40215a ; pop rbp ; ret
0x000000000041b591 : ja 0x41b5de ; pop rbp ; ret
0x000000000043d5d3 : jbe 0x43d5f5 ; ret
0x000000000043d627 : jbe 0x43d649 ; ret
0x000000000043ef4e : jbe 0x43ef70 ; ret
0x000000000040215f : je 0x40215d ; pop rbp ; mov edi, 0x66a5e8 ; jmp rax
0x000000000041318f : je 0x4131d4 ; pop rsi ; xor ecx, ebp ; call qword ptr [rcx]
0x000000000042fe62 : je 0x42fe24 ; ret 0x8589
0x000000000042ff42 : je 0x42ff04 ; ret 0x8589
0x0000000000430b30 : je 0x430af2 ; ret 0x7d81
0x0000000000430c35 : je 0x430bf7 ; ret 0x1ce9
0x000000000042256b : jg 0x42257f ; xchg eax, esp ; ret 0xd284
0x00000000004226de : jg 0x4226f2 ; xchg eax, esp ; ret 0xd284
0x0000000000422796 : jg 0x4227aa ; xchg eax, esp ; ret 0xd284
0x00000000004386bc : jg 0x4386d0 ; xchg eax, edi ; ret 0xd284
0x00000000004561aa : jg 0x4561be ; xchg eax, esp ; ret 0xd284
0x00000000004592e3 : jg 0x4592ea ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004032a0 : jge 0x403294 ; jmp 0x40326a
0x0000000000404ffd : jge 0x404ff1 ; jmp 0x404fc7
0x000000000040bc8d : jge 0x40bc5b ; cli ; ret 0x8589
0x000000000040bee9 : jge 0x40beb7 ; cli ; ret 0xbaba
0x000000000041576a : jge 0x41576b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041578a : jge 0x41578b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004157aa : jge 0x4157ab ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041b58d : jge 0x41b58e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004251bf : jge 0x425193 ; std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004311e8 : jge 0x4311ff ; ret
0x00000000004316d3 : jge 0x4316ea ; ret
0x00000000004369aa : jge 0x4369ad ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000438460 : jge 0x43845d ; pop rbp ; ret
0x000000000043dc9a : jge 0x43dd13 ; ret
0x0000000000458179 : jge 0x458173 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040324c : jl 0x403240 ; jmp 0x403216
0x000000000040bc42 : jl 0x40bc10 ; cli ; ret 0x8589
0x00000000004310bc : jl 0x4310d3 ; ret
0x0000000000444115 : jl 0x4440f1 ; ret
0x0000000000444165 : jl 0x444141 ; ret
0x000000000043dcee : jle 0x43dd67 ; ret
0x000000000043e91c : jle 0x43e995 ; ret
0x0000000000401b6b : jmp 0x401b27
0x000000000040324e : jmp 0x403214
0x00000000004032a2 : jmp 0x403268
0x0000000000404fff : jmp 0x404fc5
0x0000000000404dd5 : jmp 0x405ee8
0x0000000000405ba9 : jmp 0x405eeb
0x0000000000411164 : jmp 0x41174d
0x0000000000413666 : jmp 0x41439f
0x00000000004161f2 : jmp 0x4162c7
0x000000000041f6f3 : jmp 0x41f736
0x000000000041f91c : jmp 0x41f927
0x00000000004223f8 : jmp 0x422838
0x00000000004251f2 : jmp 0x425260
0x000000000042acad : jmp 0x42d993
0x000000000042d741 : jmp 0x42d995
0x00000000004316cd : jmp 0x431c45
0x0000000000435311 : jmp 0x435623
0x000000000043688a : jmp 0x43699b
0x000000000043cb82 : jmp 0x43ccc7
0x000000000043ec7f : jmp 0x43f0d7
0x000000000043ec7e : jmp 0x43f0d8
0x0000000000440285 : jmp 0x4408df
0x0000000000441093 : jmp 0x44142a
0x00000000004438b3 : jmp 0x443b49
0x0000000000454135 : jmp 0x456fb4
0x000000000044fd91 : jmp 0x456fb5
0x00000000004520eb : jmp 0x456fb6
0x000000000045734b : jmp 0x457356
0x0000000000457fbb : jmp 0x457fc6
0x0000000000458431 : jmp 0x45853d
0x000000000045b793 : jmp 0x45cff1
0x000000000046456f : jmp 0x46574c
0x0000000000464cc5 : jmp 0x46574d
0x0000000000465090 : jmp 0x46574e
0x0000000000419f71 : jmp 0x490428c1
0x0000000000419fec : jmp 0x4904293c
0x000000000041b345 : jmp 0x49043c95
0x000000000041b3c0 : jmp 0x49043d10
0x00000000004191bb : jmp 0xffffffff8a03f75d
0x000000000045cac1 : jmp 0xffffffff8cff8f12
0x000000000043ac6e : jmp 0xffffffffb705b03a
0x000000000045750a : jmp 0xffffffffc3e9edab
0x000000000041956f : jmp 0xffffffffea03fb11
0x0000000000408e14 : jmp qword ptr [rax]
0x000000000040a9b2 : jmp qword ptr [rbx]
0x000000000042d910 : jmp qword ptr [rcx]
0x0000000000413fb6 : jmp qword ptr [rdi]
0x000000000042de65 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000429416 : jmp qword ptr [rdx]
0x000000000042becf : jmp qword ptr [rsi]
0x0000000000402167 : jmp rax
0x00000000004115a9 : jmp rbx
0x0000000000441341 : jmp rcx
0x00000000004114af : jmp rdi
0x00000000004021a7 : jmp rdx
0x000000000040b8ff : jmp rsi
0x000000000040a52f : jmp rsp
0x0000000000402190 : jne 0x402197 ; pop rbp ; ret
0x00000000004162f6 : jne 0x4162c9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041ba12 : jne 0x41ba0a ; mov rax, rdx ; pop rbp ; ret
0x000000000042e616 : jne 0x42e61f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000043ac31 : jne 0x43ac29 ; mov rax, rdx ; pop rbp ; ret
0x0000000000443e85 : jne 0x443e6f ; call 0x402108
0x00000000004062fa : jnp 0x40632d ; xchg eax, ebp ; ret
0x00000000004068f5 : jnp 0x406928 ; xchg eax, ebp ; ret
0x000000000040cca0 : jo 0x40cd01 ; ret
0x000000000040d036 : jo 0x40d097 ; ret
0x00000000004145f8 : jo 0x414659 ; ret
0x0000000000415611 : jo 0x415672 ; ret
0x00000000004214b6 : jo 0x421477 ; pop rsi ; sbb dh, cl ; ret
0x0000000000422dd7 : jo 0x422e38 ; ret
0x000000000042e831 : jo 0x42e892 ; ret
0x000000000042e954 : jo 0x42e9b5 ; ret
0x000000000042ea8e : jo 0x42eaef ; ret
0x00000000004329dc : jo 0x432a3d ; ret
0x000000000043871a : jo 0x43877b ; ret
0x0000000000439adc : jo 0x439b3d ; ret
0x000000000043a4c3 : jo 0x43a524 ; ret
0x0000000000444534 : jo 0x444595 ; ret
0x0000000000465740 : jo 0x465754 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000468a20 : jo 0x468a84 ; cld ; jmp qword ptr [rax]
0x0000000000406200 : jp 0x406233 ; xchg eax, ebp ; ret
0x0000000000433b28 : jrcxz 0x433b8e ; ret 0x8589
0x0000000000433b7c : jrcxz 0x433be2 ; ret 0x8589
0x0000000000435034 : jrcxz 0x43509a ; ret 0x8fb9
0x000000000043525f : jrcxz 0x4352c5 ; ret 0x8fb9
0x000000000042d986 : js 0x42d99a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045750c : js 0x4574b4 ; ret
0x0000000000457553 : js 0x4574fb ; ret
0x000000000045758d : js 0x457535 ; ret
0x000000000041e46e : lcall ptr [rax] ; ret
0x00000000004635a2 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x000000000040bc43 : leave ; cli ; ret 0x8589
0x000000000040beea : leave ; cli ; ret 0xbaba
0x0000000000436889 : leave ; jmp 0x43699c
0x00000000004251c0 : leave ; std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x000000000041e5c2 : ljmp ptr [rcx] ; ret
0x000000000041956e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea03fb12
0x000000000041956d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea03fb13
0x000000000045f696 : lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000433c08 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x00000000004351f5 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000419604 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x00000000004058fc : loop 0x405909 ; add byte ptr [rax], al ; call 0x401b86
0x0000000000439d69 : loop 0x439dbb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000439e51 : loop 0x439ea3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000468161 : loop 0x46815f ; call rax
0x0000000000468141 : loope 0x46813f ; jmp rsi
0x0000000000406941 : loopne 0x40694a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407306 : loopne 0x40730d ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407ef2 : loopne 0x407efb ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c23d : loopne 0x40c246 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c53d : loopne 0x40c546 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d348 : loopne 0x40d39b ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041089d : loopne 0x4108a6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041438d : loopne 0x4143e0 ; add esp, 0x550 ; pop rbp ; ret
0x0000000000417677 : loopne 0x417680 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418910 : loopne 0x418919 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418930 : loopne 0x41897e ; mov edi, dword ptr [rcx] ; call rax
0x000000000041892f : loopne 0x41897f ; mov edi, dword ptr [rcx] ; call rax
0x00000000004189fc : loopne 0x418a05 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418a94 : loopne 0x418a9d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041fae2 : loopne 0x41fb32 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041fae1 : loopne 0x41fb33 ; add esp, 0x20 ; pop rbp ; ret
0x000000000042595e : loopne 0x425967 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f367 : loopne 0x42f36f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430c4f : loopne 0x430ca2 ; add esp, 0x2d0 ; pop rbp ; ret
0x0000000000432720 : loopne 0x432729 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000432b2c : loopne 0x432b7c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000432b2b : loopne 0x432b7d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000432f5f : loopne 0x432faf ; add esp, 0x40 ; pop rbp ; ret
0x0000000000432f5e : loopne 0x432fb0 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004370e8 : loopne 0x4370d4 ; ret 0xfcad
0x00000000004393bc : loopne 0x4393c5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439833 : loopne 0x43983c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044509c : loopne 0x4450a5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000450ed5 : loopne 0x450eb6 ; cmp al, ch ; ret
0x0000000000463d70 : loopne 0x463d05 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000467f20 : loopne 0x467eeb ; cli ; call qword ptr [rsi]
0x00000000004691a0 : loopne 0x4691a9 ; std ; call qword ptr [rbx]
0x000000000040bc8b : mov ah, 0x2d ; jge 0x40bc5d ; cli ; ret 0x8589
0x000000000040bc40 : mov ah, 0x2d ; jl 0x40bc12 ; cli ; ret 0x8589
0x000000000041f137 : mov ah, 0x2d ; push rcx ; ret 0xe86c
0x000000000041f182 : mov ah, 0x2d ; push rdx ; ret 0xe86c
0x000000000040bbd2 : mov ah, 0x2d ; ret 0x22fb
0x000000000041f105 : mov ah, 0x2d ; xchg eax, ebp ; ret
0x000000000041f150 : mov ah, 0x2d ; xchg eax, esi ; ret
0x000000000044a6ac : mov ah, 0x47 ; ret 0x8589
0x0000000000450084 : mov ah, 0x47 ; ret 0x88b9
0x00000000004026b0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000463979 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004250dd : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000405658 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bdba : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d34c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444d3a : mov al, 0 ; call 0x401c48
0x0000000000455a25 : mov al, 0 ; call 0x401d24
0x0000000000443cd3 : mov al, 0x2d ; ret 0xa414
0x0000000000425b1b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000467e40 : mov al, 0x65 ; cli ; call qword ptr [rdx]
0x00000000004105c7 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045725d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045740d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000457c09 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417c71 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000439f0f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000439f0e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000439e8f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000439e93 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000414631 : mov byte ptr [0x66a708], al ; pop rbp ; ret
0x0000000000410b77 : mov byte ptr [rax + 0x2c], 1 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043e651 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x000000000042131a : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a49e : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d4f7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041e08f : mov byte ptr [rcx + 0xf], -0x6e ; ret 0x8041
0x000000000043e3d9 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004021c3 : mov byte ptr [rip + 0x26848e], 1 ; ret
0x0000000000469521 : mov ch, bh ; jmp qword ptr [rcx]
0x0000000000405c73 : mov cl, ch ; imul eax, dword ptr [rdx], 0x52e80000 ; ret 0xffff
0x00000000004058fa : mov cl, ch ; loop 0x40590b ; add byte ptr [rax], al ; call 0x401b88
0x000000000041b98d : mov dh, -0x39 ; pop rbp ; ret
0x000000000041bb7d : mov dh, -0x3e ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415e73 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040c8ee : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045708d : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415749 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004145f3 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004408d1 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d376 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041e957 : mov dh, 0x45 ; ret
0x00000000004214b5 : mov dh, byte ptr [rax - 0x46] ; pop rsi ; sbb dh, cl ; ret
0x0000000000457d35 : mov dl, -0x47 ; ret
0x0000000000430820 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412820 : mov dl, dl ; ret
0x000000000041460d : mov dword ptr [0x66a700], edi ; pop rbp ; ret
0x00000000004257d7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042559b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042570f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041a719 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000041a88b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x00000000004026ae : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004223f5 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42283b
0x0000000000404dd2 : mov dword ptr [rbp - 0x78], eax ; jmp 0x405eeb
0x000000000043530e : mov dword ptr [rbp - 0x7c], eax ; jmp 0x435626
0x0000000000416241 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000041708f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000402467 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402495 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043845f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042598d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000441dfc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000041728a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041b590 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004369ac : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040c7f3 : mov dword ptr [rsi + rdx*8], eax ; pop rbp ; ret
0x000000000043ccfe : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000455a8c : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x401d27
0x0000000000421394 : mov eax, 0xce185e2d ; ret
0x000000000042548f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000432a6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432d2d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004153e3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004440e8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043274f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439ad6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041173f : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041527c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043581d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000435749 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000432b6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004149e2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041aa77 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004211b0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b7c0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422dd1 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415aaf : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045895d : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041fae0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432b2a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041eebd : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433075 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425384 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042548c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000425595 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000432e4f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004162fc : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000425711 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000458ff0 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042e82b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004451fa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000438714 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416d91 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042f4d5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d4df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043a780 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044452e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c76d : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041576d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041578d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004157ad : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000439d2e : mov eax, edi ; pop rbp ; ret
0x0000000000417861 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ba15 : mov eax, edx ; pop rbp ; ret
0x0000000000439e90 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000439da3 : mov eax, esi ; pop rbp ; ret
0x00000000004520ed : mov ebp, 0xb800004e ; push rcx ; ret
0x00000000004021eb : mov ebp, esp ; call rax
0x0000000000402151 : mov ebp, esp ; ja 0x40215c ; pop rbp ; ret
0x00000000004182fd : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000425598 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000418265 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041892e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000439dcd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000439d9d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000467709 : mov edi, 0x1cfcfffc ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000045b5c1 : mov edi, 0x3fb94980 ; ret 0x6f69
0x00000000004021e5 : mov edi, 0x669e20 ; mov rbp, rsp ; call rax
0x0000000000402162 : mov edi, 0x66a5e8 ; jmp rax
0x00000000004021a2 : mov edi, 0x66a5e8 ; jmp rdx
0x000000000041b58c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415769 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000415789 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004157a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000418301 : mov edi, dword ptr [rcx] ; call rax
0x000000000043ccf8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000455a23 : mov edi, eax ; mov al, 0 ; call 0x401d26
0x0000000000465797 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000465796 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000045b311 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x0000000000443e84 : mov esi, dword ptr [rbp - 0x20] ; call 0x402109
0x00000000004021a0 : mov esi, eax ; mov edi, 0x66a5e8 ; jmp rdx
0x00000000004162f9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000045b43e : mov esp, 0x3fb90afd ; ret 0x6f69
0x000000000045b367 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x0000000000411743 : mov esp, ebp ; pop rbp ; ret
0x000000000041460c : mov qword ptr [0x66a700], rdi ; pop rbp ; ret
0x000000000043845e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042598c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000441dfb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041b58f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c7f2 : mov qword ptr [rsi + rdx*8], rax ; pop rbp ; ret
0x000000000043ccfd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000455a8b : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x401d28
0x000000000040bc8a : mov r12b, 0x2d ; jge 0x40bc5e ; cli ; ret 0x8589
0x000000000040bc3f : mov r12b, 0x2d ; jl 0x40bc13 ; cli ; ret 0x8589
0x000000000041f136 : mov r12b, 0x2d ; push rcx ; ret 0xe86c
0x000000000041f181 : mov r12b, 0x2d ; push rdx ; ret 0xe86c
0x000000000040bbd1 : mov r12b, 0x2d ; ret 0x22fb
0x000000000041f104 : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x000000000041f14f : mov r12b, 0x2d ; xchg eax, esi ; ret
0x00000000004026af : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000463978 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000443cd2 : mov r8b, 0x2d ; ret 0xa414
0x0000000000421393 : mov r8d, 0xce185e2d ; ret
0x0000000000405c72 : mov r9b, r13b ; imul eax, dword ptr [rdx], 0x52e80000 ; ret 0xffff
0x0000000000432a6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432d2c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004153e2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004440e7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043274e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439ad5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041173e : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041527b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000432b6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004149e1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041aa76 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004211af : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b7bf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422dd0 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415aae : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041fadf : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432b29 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433074 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425383 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042548b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004162fb : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000458fef : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042e82a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416d90 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d4de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c76c : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041576c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041578c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004157ac : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000439d2d : mov rax, rdi ; pop rbp ; ret
0x0000000000417860 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ba14 : mov rax, rdx ; pop rbp ; ret
0x00000000004021ea : mov rbp, rsp ; call rax
0x0000000000402150 : mov rbp, rsp ; ja 0x40215d ; pop rbp ; ret
0x00000000004182fc : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000418264 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041892d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041b58b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415768 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000415788 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004157a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000418300 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000455a22 : mov rdi, rax ; mov al, 0 ; call 0x401d27
0x000000000040219f : mov rsi, rax ; mov edi, 0x66a5e8 ; jmp rdx
0x00000000004162f8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000411742 : mov rsp, rbp ; pop rbp ; ret
0x000000000042e61a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042e61b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000413b1a : mov word ptr [rdx], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bd6c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x0000000000457fae : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004115a0 : movabs dword ptr [0xfffe7085c7000001], eax ; jmp rbx
0x0000000000468cfc : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x69], dl ; cld ; call rdx
0x00000000004316cc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x431c46
0x000000000045750d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000412adc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe4af
0x000000000044a7c3 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x000000000044a78d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000457199 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041f76c : movsxd rax, ecx ; pop rbp ; ret
0x0000000000415e72 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000040c8ed : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045708c : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415748 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004145f2 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004408d0 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d375 : movzx eax, al ; pop rbp ; ret
0x0000000000439e92 : movzx eax, ax ; pop rbp ; ret
0x000000000041b98c : movzx eax, bh ; pop rbp ; ret
0x000000000040d4fa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041b98b : movzx eax, dil ; pop rbp ; ret
0x000000000041bb7c : movzx eax, dl ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000417c72 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000417c73 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004690e0 : nop ; cld ; jmp rax
0x0000000000467fe0 : nop ; iretd ; cli ; call qword ptr [rsi]
0x0000000000468140 : nop ; loope 0x468140 ; jmp rsi
0x00000000004657b8 : nop dword ptr [rax + rax] ; ret
0x000000000042d987 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004219f7 : or al, 0xffffffffffffffa8 ; pop rax ; ret 0x8589
0x000000000041956b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea03fb15
0x0000000000400bf0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000421b7b : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000437a8d : or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000045b5c2 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x000000000041f726 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004114d0 : or byte ptr [rsi - 0x39ee5546], dl ; ret
0x000000000040bae6 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000430d77 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004214b4 : or eax, 0x5eba708a ; sbb dh, cl ; ret
0x000000000042ea11 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004691e1 : or ebp, edi ; call qword ptr [rax]
0x0000000000469241 : or edi, ebp ; jmp qword ptr [rdi]
0x0000000000439d2b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000439da1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041956a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea03fb16
0x0000000000439d2a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000457035 : out -0x47, al ; ret 0x48e7
0x0000000000424e47 : out -0x47, eax ; ret 0x614e
0x000000000044a6ab : out -0x4c, al ; ret 0x8589
0x000000000044a6ff : out -0x4c, eax ; ret 0x8589
0x0000000000450083 : out -0x4c, eax ; ret 0x88b9
0x0000000000420afd : out 0x6e, al ; call 0xa0acdc1
0x000000000041b989 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000045740f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045725f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040324d : out dx, eax ; jmp 0x403215
0x00000000004032a1 : out dx, eax ; jmp 0x403269
0x0000000000404ffe : out dx, eax ; jmp 0x404fc6
0x0000000000439da0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041ca20 : out dx, eax ; ret
0x0000000000420afe : outsb dx, byte ptr [rsi] ; call 0xa0acdc0
0x0000000000415f19 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000419a43 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004657ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004657ae : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042dcb2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004657b0 : pop r14 ; pop r15 ; ret
0x000000000042dcb4 : pop r15 ; pop rbp ; ret
0x00000000004657b2 : pop r15 ; ret
0x000000000040f0f6 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000457a88 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000042249c : pop rax ; ret 0x3bb9
0x00000000004219f9 : pop rax ; ret 0x8589
0x00000000004110df : pop rbp ; call qword ptr [rdi]
0x0000000000468901 : pop rbp ; cld ; jmp qword ptr [rdx]
0x00000000004021c2 : pop rbp ; mov byte ptr [rip + 0x26848e], 1 ; ret
0x0000000000402161 : pop rbp ; mov edi, 0x66a5e8 ; jmp rax
0x000000000040219e : pop rbp ; mov rsi, rax ; mov edi, 0x66a5e8 ; jmp rdx
0x00000000004657ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004657af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402155 : pop rbp ; ret
0x000000000042dcb1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bae9 : pop rbx ; pop rbp ; ret
0x0000000000460019 : pop rbx ; ret 0x1dd
0x0000000000457d34 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000449318 : pop rcx ; ret 0x891f
0x000000000044f767 : pop rcx ; ret 0xba1f
0x0000000000468a21 : pop rdi ; cld ; jmp qword ptr [rax]
0x000000000042dcb5 : pop rdi ; pop rbp ; ret
0x00000000004456b7 : pop rdi ; ret
0x000000000045817b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000045ffc5 : pop rdx ; ret 0x1dd
0x000000000043c79b : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000042dcb3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004657b1 : pop rsi ; pop r15 ; ret
0x0000000000421396 : pop rsi ; sbb dh, cl ; ret
0x0000000000413191 : pop rsi ; xor ecx, ebp ; call qword ptr [rcx]
0x0000000000410c7f : pop rsp ; call qword ptr [rdi]
0x00000000004657ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000427bc2 : pop rsp ; ret
0x0000000000415f30 : pop rsp ; ret 0xf66
0x00000000004224ae : popfq ; ret 0xd284
0x0000000000456497 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x0000000000445073 : push -0x4f000001 ; add al, ch ; ret 0xfbcb
0x0000000000405f85 : push 0x480066a6 ; add esp, 0x10 ; pop rbp ; ret
0x000000000042d3af : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000041318e : push qword ptr [rsi + rdi + 0x5e] ; xor ecx, ebp ; call qword ptr [rcx]
0x0000000000469100 : push rax ; hlt ; cld ; call rdx
0x0000000000469260 : push rax ; or edi, ebp ; jmp qword ptr [rdi]
0x0000000000402428 : push rax ; pop rbp ; ret
0x000000000041e247 : push rax ; ret
0x0000000000468d00 : push rax ; xchg eax, edi ; cld ; call rdx
0x000000000043202b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000432933 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000441f48 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000043ce5e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043ee15 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000417e73 : push rbp ; fsubr st(1) ; ret 0
0x000000000042b4e8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000042b6ce : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000042b774 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000042b7a2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000042b870 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000042ba06 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000043e650 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004058f9 : push rbp ; mov cl, ch ; loop 0x40590c ; add byte ptr [rax], al ; call 0x401b89
0x00000000004021e4 : push rbp ; mov edi, 0x669e20 ; mov rbp, rsp ; call rax
0x000000000041bb6a : push rbp ; ret
0x00000000004195fe : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000433b7b : push rbx ; jrcxz 0x433be3 ; ret 0x8589
0x0000000000435033 : push rbx ; jrcxz 0x43509b ; ret 0x8fb9
0x000000000043525e : push rbx ; jrcxz 0x4352c6 ; ret 0x8fb9
0x000000000044722b : push rbx ; ret 0xaf58
0x000000000043cbb2 : push rcx ; cld ; inc edi ; in al, dx ; int1 ; ret
0x000000000044cf77 : push rcx ; ret
0x000000000041f139 : push rcx ; ret 0xe86c
0x0000000000467de1 : push rdi ; cli ; call qword ptr [rax]
0x0000000000467d81 : push rdx ; cli ; call qword ptr [rdi]
0x0000000000433b27 : push rdx ; jrcxz 0x433b8f ; ret 0x8589
0x00000000004471d7 : push rdx ; ret 0xaf58
0x000000000041f184 : push rdx ; ret 0xe86c
0x0000000000405c7a : push rdx ; ret 0xffff
0x0000000000411245 : pushfq ; ret 0x8445
0x0000000000407c3e : pushfq ; ret 0xd284
0x0000000000439d9e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000439dce : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000400bf8 : ret
0x0000000000417e76 : ret 0
0x000000000041695f : ret 0x10
0x000000000043f77f : ret 0x110a
0x000000000040a726 : ret 0x13
0x0000000000467e64 : ret 0x14
0x0000000000409638 : ret 0x18
0x0000000000433797 : ret 0x1a
0x0000000000430c37 : ret 0x1ce9
0x000000000045ffc6 : ret 0x1dd
0x000000000041338a : ret 0x1ef
0x000000000044f557 : ret 0x20
0x0000000000457c3b : ret 0x2030
0x000000000041dd21 : ret 0x205
0x000000000043d102 : ret 0x2106
0x000000000040bbd4 : ret 0x22fb
0x000000000040e28a : ret 0x240
0x0000000000401f72 : ret 0x2682
0x0000000000401d72 : ret 0x2683
0x0000000000401b72 : ret 0x2684
0x0000000000415f1a : ret 0x280f
0x000000000041d44a : ret 0x28b
0x000000000040b2fe : ret 0x28f5
0x0000000000439a65 : ret 0x29b9
0x000000000042aec7 : ret 0x2a
0x000000000041db6f : ret 0x2b48
0x000000000042e1e6 : ret 0x2c1
0x000000000040d59e : ret 0x2e75
0x000000000041fa51 : ret 0x30
0x000000000040ff93 : ret 0x34e9
0x000000000045d5c5 : ret 0x3617
0x00000000004455b1 : ret 0x39e8
0x0000000000441b90 : ret 0x3ae8
0x000000000042249d : ret 0x3bb9
0x0000000000433657 : ret 0x3bef
0x000000000040510f : ret 0x3c81
0x000000000045293e : ret 0x3ce8
0x000000000040ff52 : ret 0x3d
0x0000000000402570 : ret 0x3fc5
0x0000000000452ee8 : ret 0x40
0x00000000004206a9 : ret 0x413e
0x0000000000427e2a : ret 0x43fa
0x0000000000416780 : ret 0x4589
0x0000000000405bb2 : ret 0x465f
0x000000000045c4df : ret 0x4810
0x000000000045649e : ret 0x483f
0x000000000045701b : ret 0x48e7
0x00000000004305be : ret 0x4ce8
0x000000000044387d : ret 0x4de8
0x0000000000465246 : ret 0x4eb9
0x0000000000416d44 : ret 0x50e9
0x0000000000438704 : ret 0x5589
0x00000000004453a3 : ret 0x5e5
0x0000000000424bef : ret 0x614e
0x00000000004038c0 : ret 0x61a3
0x00000000004122c4 : ret 0x63db
0x00000000004049f7 : ret 0x68b9
0x000000000044f283 : ret 0x6d
0x0000000000459599 : ret 0x6f69
0x000000000044af23 : ret 0x73
0x0000000000439bea : ret 0x7406
0x000000000040c3b7 : ret 0x7770
0x0000000000447638 : ret 0x791e
0x000000000042fa72 : ret 0x7961
0x000000000044a353 : ret 0x7a
0x00000000004206a0 : ret 0x7ae8
0x000000000045310f : ret 0x7b9
0x0000000000430b32 : ret 0x7d81
0x000000000044ee17 : ret 0x7f76
0x000000000044c6a7 : ret 0x80
0x000000000041e093 : ret 0x8041
0x000000000041e2ac : ret 0x8148
0x000000000041bb7e : ret 0x8348
0x00000000004049a0 : ret 0x8445
0x00000000004612cd : ret 0x848e
0x00000000004031a7 : ret 0x8589
0x0000000000422345 : ret 0x85e8
0x0000000000450086 : ret 0x88b9
0x00000000004384d0 : ret 0x8900
0x000000000045debe : ret 0x8916
0x0000000000427cc0 : ret 0x891a
0x0000000000449319 : ret 0x891f
0x00000000004575ec : ret 0x8934
0x00000000004201a7 : ret 0x893e
0x00000000004488b5 : ret 0x893f
0x000000000040d745 : ret 0x8948
0x000000000041926c : ret 0x897f
0x000000000043ac71 : ret 0x89b6
0x0000000000433c09 : ret 0x89cc
0x000000000044b539 : ret 0x89e8
0x00000000004332b0 : ret 0x89ec
0x000000000045fee7 : ret 0x89fc
0x000000000042cb40 : ret 0x8ae8
0x00000000004575c8 : ret 0x8b34
0x00000000004058c6 : ret 0x8b48
0x00000000004351f6 : ret 0x8bcc
0x000000000041f4bf : ret 0x8be8
0x00000000004333e2 : ret 0x8bec
0x0000000000424dc8 : ret 0x8ce9
0x0000000000408f10 : ret 0x8d6b
0x0000000000435036 : ret 0x8fb9
0x0000000000407876 : ret 0x9155
0x000000000041dc88 : ret 0x9589
0x0000000000407c22 : ret 0x958a
0x00000000004071ba : ret 0x97
0x0000000000413ee1 : ret 0x99e8
0x00000000004635a6 : ret 0x9ae9
0x00000000004529df : ret 0x9be8
0x000000000041fe09 : ret 0x9c8
0x000000000041d605 : ret 0xa
0x0000000000406b4f : ret 0xa18e
0x00000000004168ca : ret 0xa3b9
0x0000000000443cd5 : ret 0xa414
0x000000000044497b : ret 0xa4be
0x000000000040ccf4 : ret 0xa5f1
0x00000000004195a9 : ret 0xa6e9
0x000000000042bb95 : ret 0xa9b9
0x00000000004089d0 : ret 0xac55
0x0000000000427612 : ret 0xade6
0x0000000000442bc0 : ret 0xae8
0x0000000000408278 : ret 0xaef2
0x000000000041cbe0 : ret 0xaf51
0x00000000004471d8 : ret 0xaf58
0x0000000000405eaa : ret 0xb0
0x000000000044a0df : ret 0xb846
0x00000000004384fe : ret 0xb900
0x000000000042b300 : ret 0xb91a
0x0000000000417ea6 : ret 0xb948
0x0000000000446a67 : ret 0xb957
0x000000000043af2b : ret 0xb9b6
0x000000000044f768 : ret 0xba1f
0x000000000040b69a : ret 0xba48
0x000000000040beec : ret 0xbaba
0x0000000000423eb3 : ret 0xbe9
0x000000000043ca5e : ret 0xc
0x0000000000402185 : ret 0xc148
0x0000000000410e23 : ret 0xc5aa
0x0000000000439630 : ret 0xcae8
0x0000000000405013 : ret 0xd284
0x000000000042d3b3 : ret 0xd4e9
0x00000000004244b7 : ret 0xd549
0x0000000000419572 : ret 0xdde9
0x0000000000407c6a : ret 0xdee9
0x000000000045fde9 : ret 0xe0a5
0x000000000041bb78 : ret 0xe280
0x000000000041205d : ret 0xe4af
0x000000000041f13a : ret 0xe86c
0x0000000000419607 : ret 0xe97f
0x0000000000463bbe : ret 0xe9fc
0x000000000045a68d : ret 0xec0b
0x000000000042d9cc : ret 0xee8
0x0000000000416ca5 : ret 0xefe9
0x000000000041572a : ret 0xf280
0x000000000040b669 : ret 0xf40
0x000000000042bd75 : ret 0xf41
0x000000000040831e : ret 0xf45
0x00000000004428d6 : ret 0xf4e8
0x0000000000415f31 : ret 0xf66
0x0000000000430b14 : ret 0xf6e8
0x0000000000413a74 : ret 0xf7ba
0x0000000000421beb : ret 0xf9b5
0x000000000045296f : ret 0xf9b9
0x0000000000446667 : ret 0xfa
0x0000000000451146 : ret 0xfa81
0x000000000045445a : ret 0xfad8
0x000000000042473c : ret 0xfb94
0x000000000044507a : ret 0xfbcb
0x00000000004370ea : ret 0xfcad
0x00000000004250ca : ret 0xfdcf
0x000000000042083a : ret 0xfe13
0x000000000040b728 : ret 0xff2
0x0000000000417b56 : ret 0xff3
0x000000000046232a : ret 0xff6b
0x00000000004642f6 : ret 0xff9b
0x0000000000422210 : ret 0xff9f
0x000000000042ce8e : ret 0xffa5
0x00000000004644dc : ret 0xffbb
0x000000000042223b : ret 0xffbf
0x000000000042c13b : ret 0xffc4
0x000000000042b777 : ret 0xffc5
0x000000000042b7a5 : ret 0xffd5
0x000000000042b873 : ret 0xffd8
0x000000000042c1e1 : ret 0xffd9
0x000000000042228b : ret 0xffdb
0x00000000004222b6 : ret 0xffe0
0x0000000000452b65 : ret 0xfff7
0x0000000000452b96 : ret 0xfff9
0x000000000042aade : ret 0xfffa
0x00000000004067c6 : ret 0xfffb
0x000000000041d451 : ret 0xfffd
0x000000000043340d : ret 0xfffe
0x0000000000405902 : ret 0xffff
0x0000000000406356 : ret 1
0x0000000000407046 : ret 2
0x00000000004364d9 : ret 3
0x0000000000410107 : ret 4
0x0000000000430da8 : ret 5
0x0000000000435b0e : ret 6
0x0000000000419a11 : ret 7
0x000000000042dbb0 : ret 8
0x0000000000440985 : ret 9
0x000000000040ebfe : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004175f2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040bfdb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430c53 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465082 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000425596 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040218c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40219b ; pop rbp ; ret
0x00000000004408d2 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000422342 : ror byte ptr [rax - 0x77], 1 ; ret 0x85e8
0x00000000004145f4 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41465d ; ret
0x000000000040c8ef : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000045708e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000041974b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f363 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x42f373 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425597 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000432930 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000437373 : ror dword ptr [rdi], -0x62 ; ret 0xe280
0x000000000041f4e2 : sahf ; ret
0x0000000000434a21 : sahf ; ret 0xd284
0x0000000000437375 : sahf ; ret 0xe280
0x000000000040215e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408816
0x000000000040c7f5 : salc ; pop rbp ; ret
0x000000000043b3ee : salc ; ret
0x0000000000424e44 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x000000000041bb70 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x000000000040218e : sar eax, 1 ; jne 0x402199 ; pop rbp ; ret
0x000000000040218d : sar rax, 1 ; jne 0x40219a ; pop rbp ; ret
0x0000000000469421 : sbb al, -3 ; jmp rax
0x000000000046951d : sbb al, byte ptr [rax] ; add al, al ; mov ch, bh ; jmp qword ptr [rcx]
0x0000000000463113 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000046925d : sbb byte ptr [rax], al ; add byte ptr [rax + 0xb], dl ; std ; jmp qword ptr [rdi]
0x000000000042e649 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421397 : sbb dh, cl ; ret
0x000000000045fa15 : sbb dl, dh ; ret
0x0000000000432513 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000046941d : sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; sbb al, -3 ; jmp rax
0x000000000042bb8e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004695bd : sbb eax, dword ptr [rax] ; add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x00000000004695bc : sbb eax, dword ptr fs:[rax] ; add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x000000000045fa69 : sbb edx, esi ; ret
0x0000000000463112 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000040d370 : setb al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417884 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000458b95 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d372 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000463082 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000415f4f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000439dcf : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000439d68 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000409140 : shld esp, esp, cl ; ret
0x000000000041cc50 : shr byte ptr [rsi + 0xe], cl ; ret
0x000000000041c908 : shr dword ptr [rsi + 0xe], 1 ; ret
0x0000000000439d9f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000439d28 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000468a1d : sldt word ptr [rax] ; jo 0x468a87 ; cld ; jmp qword ptr [rax]
0x0000000000467b62 : stc ; jmp qword ptr [rdi]
0x00000000004691e2 : std ; call qword ptr [rax]
0x00000000004691a2 : std ; call qword ptr [rbx]
0x00000000004695c2 : std ; call qword ptr [rsi]
0x00000000004251c1 : std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000469522 : std ; jmp qword ptr [rcx]
0x0000000000469242 : std ; jmp qword ptr [rdi]
0x0000000000469422 : std ; jmp rax
0x0000000000410e5b : stosb byte ptr [rdi], al ; adc esi, eax ; ret
0x0000000000411f0c : stosb byte ptr [rdi], al ; ret
0x00000000004695c1 : stosb byte ptr [rdi], al ; std ; call qword ptr [rsi]
0x000000000043cbb1 : stosd dword ptr [rdi], eax ; push rcx ; cld ; inc edi ; in al, dx ; int1 ; ret
0x0000000000412c2c : stosd dword ptr [rdi], eax ; ret
0x0000000000467b61 : stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rdi]
0x0000000000428bd7 : sub al, 0x38 ; ret 0x8589
0x000000000042bb93 : sub al, 0x38 ; ret 0xa9b9
0x00000000004414c8 : sub al, 0x61 ; ret
0x0000000000410b79 : sub al, 1 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cb41 : sub byte ptr [r15], cl ; xchg eax, edx ; ret 0x8b48
0x0000000000417286 : sub byte ptr [rcx + 0x46], 0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040cb42 : sub byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x0000000000465821 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000465820 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000045b799 : sysenter
0x0000000000437a8b : test ah, ah ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000043c731 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000043204b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000441239 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000046394f : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000405692 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043c168 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000419174 : test al, 0x2d ; call 0xffffffff8a03f71a
0x0000000000419173 : test al, 0x2d ; call 0xffffffff8a03f71b
0x00000000004191b9 : test al, 0x2d ; jmp 0xffffffff8a03f75f
0x00000000004191b8 : test al, 0x2d ; jmp 0xffffffff8a03f760
0x000000000041945c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000419268 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000043ec7d : test al, 0x45 ; jmp 0x43f0d9
0x0000000000420e34 : test al, 0x48 ; add esp, 0x260 ; pop rbp ; ret
0x000000000042e82d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042249b : test al, 0x58 ; ret 0x3bb9
0x00000000004219f8 : test al, 0x58 ; ret 0x8589
0x0000000000416a7b : test al, 0x70 ; ret 0x4589
0x0000000000416d42 : test al, 0x70 ; ret 0x50e9
0x0000000000416ca3 : test al, 0x70 ; ret 0xefe9
0x0000000000431f28 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000421b79 : test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x00000000004657ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044a0ea : test byte ptr [rbx], ah ; ret 0
0x0000000000467ddc : test byte ptr [rbx], al ; add byte ptr [rax], al ; adc byte ptr [rdi - 6], dl ; call qword ptr [rax]
0x00000000004691dc : test byte ptr [rdi], dl ; add byte ptr [rax], al ; adc byte ptr [rcx], cl ; std ; call qword ptr [rax]
0x0000000000436166 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000430d75 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000467fdc : test byte ptr [rip - 0x30700000], al ; cli ; call qword ptr [rsi]
0x00000000004021c6 : test byte ptr [rsi], ah ; add byte ptr [rcx], al ; ret
0x0000000000406350 : test byte ptr [rsi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004690dc : test byte ptr [rsi], dl ; add byte ptr [rax], al ; nop ; cld ; jmp rax
0x0000000000435154 : test ch, cl ; ret
0x0000000000406c6a : test cl, bl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000446196 : test cl, dh ; ret 0
0x000000000041f766 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000441831 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000445dde : test dl, bl ; ret 0
0x000000000044c6a0 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x000000000044a0e4 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x0000000000452ee2 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x000000000041e2a5 : test dword ptr [rax - 0x75], 0x89488045 ; ret 0x8148
0x000000000044a71b : test dword ptr [rcx + 1], ebp ; ret
0x000000000040e271 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040e1e5 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004251c4 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000424e2a : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000041dc7f : test dword ptr [rdi + rdi*8 - 1], ebp ; inc ecx ; clc ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000432030 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000431d98 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000044090c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x00000000004410fa : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000430c2f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x430bfd ; ret 0x1ce9
0x000000000044133d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004410cf : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000446858 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x00000000004423fe : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000412c26 : test dword ptr [rsi + rdi*8 - 0x54d20001], ebx ; ret
0x0000000000411f06 : test dword ptr [rsi + rdi*8 - 0x55d20001], ebx ; ret
0x0000000000412ad6 : test dword ptr [rsi + rdi*8 - 0x5bd20001], ebx ; ret 0xe4af
0x0000000000412056 : test dword ptr [rsi + rdi*8 - 0x5cd20001], ebx ; ret 0xe4af
0x0000000000424970 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x0000000000424900 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x000000000046302b : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000463951 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000462965 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000464e44 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000465163 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000463f54 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000046405a : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x0000000000462143 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000465087 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000463115 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000046341e : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000046359e : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x00000000004517a6 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000435153 : test r13b, r9b ; ret
0x00000000004512f2 : wait ; ret 0xf40
0x000000000045fee5 : xchg ax, dx ; ret 0x89fc
0x000000000044a76f : xchg byte ptr [rcx + 1], ch ; ret
0x0000000000463d72 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000445072 : xchg eax, ebp ; push -0x4f000001 ; add al, ch ; ret 0xfbcb
0x0000000000406202 : xchg eax, ebp ; ret
0x000000000041f552 : xchg eax, ebp ; ret 0x8445
0x00000000004082fe : xchg eax, ebp ; ret 0x8b48
0x0000000000405364 : xchg eax, ebp ; ret 0xd284
0x000000000041bb77 : xchg eax, ebp ; ret 0xe280
0x0000000000415729 : xchg eax, ebp ; ret 0xf280
0x000000000040b668 : xchg eax, ebp ; ret 0xf40
0x000000000040831d : xchg eax, ebp ; ret 0xf45
0x0000000000458b96 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004446ab : xchg eax, ebx ; ret
0x000000000040b7e0 : xchg eax, ebx ; ret 0xd284
0x0000000000428bbb : xchg eax, ecx ; ret
0x0000000000468d01 : xchg eax, edi ; cld ; call rdx
0x0000000000407f89 : xchg eax, edi ; ret 0x8445
0x000000000041e865 : xchg eax, edi ; ret 0xd284
0x0000000000428d0b : xchg eax, edx ; ret
0x000000000041e092 : xchg eax, edx ; ret 0x8041
0x000000000044f653 : xchg eax, edx ; ret 0x8445
0x000000000045fee6 : xchg eax, edx ; ret 0x89fc
0x000000000040cb44 : xchg eax, edx ; ret 0x8b48
0x000000000041ddf4 : xchg eax, edx ; ret 0xd284
0x000000000041dd1a : xchg eax, edx ; ret 0xe280
0x0000000000463bbd : xchg eax, edx ; ret 0xe9fc
0x000000000040d371 : xchg eax, edx ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041f152 : xchg eax, esi ; ret
0x000000000041d378 : xchg eax, esi ; ret 0xd284
0x00000000004223f7 : xchg eax, esp ; jmp 0x422839
0x00000000004114cf : xchg eax, esp ; or byte ptr [rsi - 0x39ee5546], dl ; ret
0x0000000000407d93 : xchg eax, esp ; ret
0x000000000040499f : xchg eax, esp ; ret 0x8445
0x0000000000405012 : xchg eax, esp ; ret 0xd284
0x00000000004382a9 : xchg eax, esp ; ret 0xe280
0x0000000000417885 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004223f6 : xchg eax, r12d ; jmp 0x42283a
0x0000000000412740 : xchg edx, edx ; ret
0x0000000000468061 : xlatb ; cli ; call qword ptr [rdx]
0x0000000000439d2c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000041945e : xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000419605 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000441dcc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004520ea : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x000000000041926a : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000042eb47 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004223f9 : xor eax, 0xb8000004 ; ret
0x0000000000413192 : xor ecx, ebp ; call qword ptr [rcx]
0x000000000042570d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
