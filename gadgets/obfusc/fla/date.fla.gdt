0x000000000043f2a0 : adc al, -0x54 ; std ; jmp rsp
0x0000000000418902 : adc al, -0x7f ; ret 0x76c
0x00000000004186fd : adc al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi]
0x000000000041870c : adc al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rax
0x0000000000418b15 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000040570a : adc byte ptr [rbx], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x43dc
0x00000000004142ac : adc byte ptr [rcx + rdi*4 + 0x60], ch ; jmp qword ptr [rdi]
0x00000000004039f4 : adc byte ptr [rdx], 0x64 ; add byte ptr [rax - 0x77], cl ; ret 0xf0e8
0x000000000043843b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422a6b : adc eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x0000000000406357 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041ec88 : adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x00000000004187cb : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rsi]
0x0000000000435b79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b61 : adc esp, dword ptr [rax + rax + 0x5d] ; ret
0x0000000000403e17 : adc esp, dword ptr [rax + rax - 0x7f] ; ret 1
0x0000000000403a4d : adc esp, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043f803 : add ah, al ; add dword ptr [rax], eax ; add al, cl ; pop rsp ; cld ; call qword ptr [rbx]
0x000000000043f35f : add ah, dh ; fdivp st(6) ; jmp rsp
0x000000000043f21f : add ah, dl ; pop rbx ; cld ; jmp rsp
0x00000000004142e8 : add al, -0x17 ; ret 0x58
0x0000000000429dc0 : add al, 0 ; add byte ptr [rbx - 0x66d25bbb], cl ; ret 0xf61d
0x000000000043f1dd : add al, 0 ; add byte ptr [rsi + rbp - 4], dl ; jmp rsp
0x0000000000405b82 : add al, 0x25 ; push 0x5d006413 ; ret
0x000000000043f787 : add al, bl ; push rbp ; cld ; jmp qword ptr [rbx]
0x0000000000404825 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000043f8c5 : add al, byte ptr [rax] ; add al, cl ; cld ; call qword ptr [rsi]
0x000000000042573a : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437d33 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004045d2 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040541d : add al, ch ; in eax, dx ; ret
0x000000000043f7a7 : add al, ch ; push rbp ; cld ; call qword ptr [rax]
0x0000000000404827 : add al, ch ; ret
0x000000000043f8c7 : add al, cl ; cld ; call qword ptr [rsi]
0x000000000043f807 : add al, cl ; pop rsp ; cld ; call qword ptr [rbx]
0x000000000042a2f9 : add bh, al ; mov r8b, 0x38 ; ret
0x0000000000424056 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000423e76 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x0000000000424556 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x000000000043812e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000437e96 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041683c : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rax]
0x000000000041685a : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x000000000041455a : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rsi]
0x000000000041285d : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x00000000004157b4 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x0000000000414370 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rcx
0x0000000000415f81 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x0000000000417316 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsp
0x000000000041770e : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000418def : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000413f55 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x00000000004123f5 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000415aa5 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi - 0x162b3d38]
0x00000000004186ff : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi]
0x000000000041870e : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rax
0x00000000004156f7 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdi
0x0000000000416cba : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x0000000000415f23 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x0000000000412791 : add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; push rbx ; ret 0x76fb
0x000000000041e907 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rax]
0x000000000041eb58 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rbx]
0x000000000041eb8b : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000422707 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000042252c : add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp rsi
0x000000000043c4cf : add bl, dh ; ret
0x0000000000428bef : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004142b9 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e9a4 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040570c : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x43dc
0x0000000000436cbd : add byte ptr [rax - 0x77], cl ; jge 0x436cc0 ; pop rbp ; ret
0x000000000042a85e : add byte ptr [rax - 0x77], cl ; mov r8d, 0x9ab045c7 ; ret 0xf61d
0x0000000000423ec2 : add byte ptr [rax - 0x77], cl ; or bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x0000000000403c87 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004039f7 : add byte ptr [rax - 0x77], cl ; ret 0xf0e8
0x000000000043f29e : add byte ptr [rax], al ; adc al, -0x54 ; std ; jmp rsp
0x0000000000424b6b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000043812c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000437e94 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000417314 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsp
0x000000000041770c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000416cb8 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x000000000043c4cd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041e9a2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000436cbb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x436cc2 ; pop rbp ; ret
0x0000000000403c85 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043c4cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400920 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000043db2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d7
0x0000000000400922 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000403a4f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436cba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043c4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000043db2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d7
0x0000000000400924 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000429b36 : add byte ptr [rax], al ; add byte ptr [rbx + 0x372da445], cl ; ret
0x00000000004358be : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004251d9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4d2ddc45], cl ; ret
0x0000000000425129 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2ddc45], cl ; push rsi ; ret
0x00000000004252e1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6b2ddc45], cl ; push rsi ; ret
0x0000000000439f99 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000429e0b : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d25bbb], cl ; ret 0xf61d
0x0000000000439f15 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000042c216 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72bb3], cl ; ret 0x8ce8
0x000000000043c14e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405153 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000434771 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004250bb : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000043a055 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004246cf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x00000000004124e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ec45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041486e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403a51 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bccd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043802a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004289ef : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000042d7af : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040520e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427377 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041a09e : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043985d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000043f782 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, bl ; push rbp ; cld ; jmp qword ptr [rbx]
0x000000000043f7a2 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, ch ; push rbp ; cld ; call qword ptr [rax]
0x0000000000435b7b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004255e9 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000406359 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419c90 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419edb : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000435b37 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401693 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043f862 : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; call 0x1743f4d8
0x000000000043f7a6 : add byte ptr [rax], al ; call 0x1143f407
0x000000000043f866 : add byte ptr [rax], al ; call 0x1743f4d4
0x000000000043f786 : add byte ptr [rax], al ; fcom dword ptr [rbp - 4] ; jmp qword ptr [rbx]
0x000000000043f35e : add byte ptr [rax], al ; hlt ; fdivp st(6) ; jmp rsp
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x000000000041a09a : add byte ptr [rax], al ; jmp 0x41a0a9
0x0000000000426fc0 : add byte ptr [rax], al ; jmp 0x426fcf
0x0000000000439859 : add byte ptr [rax], al ; jmp 0x439868
0x000000000043a4c9 : add byte ptr [rax], al ; jmp 0x43a4d8
0x00000000004400c6 : add byte ptr [rax], al ; mov byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x000000000043a6d7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000419dbf : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000436cbc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406199 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042d099 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402003 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004358bf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422a6c : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000419bab : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043f1de : add byte ptr [rax], al ; push rsp ; cld ; jmp rsp
0x000000000043c4ce : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 0
0x000000000043db2e : add byte ptr [rax], al ; ret 0x43d7
0x0000000000400926 : add byte ptr [rax], al ; ret 2
0x00000000004400c2 : add byte ptr [rax], al ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; mov byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x000000000043f3de : add byte ptr [rax], al ; xchg eax, esp ; jb 0x43f3e7 ; jmp rsp
0x000000000040a066 : add byte ptr [rax], bl ; ret 0x8589
0x000000000041601c : add byte ptr [rax], bl ; ret 0x8ce9
0x0000000000429b38 : add byte ptr [rbx + 0x372da445], cl ; ret
0x000000000042a0b0 : add byte ptr [rbx + 0x382da445], cl ; ret
0x00000000004358c0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000422a6d : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000425199 : add byte ptr [rbx + 0x4c2ddc45], cl ; ret
0x00000000004251db : add byte ptr [rbx + 0x4d2ddc45], cl ; ret
0x0000000000419bac : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042512b : add byte ptr [rbx + 0x6a2ddc45], cl ; push rsi ; ret
0x00000000004252e3 : add byte ptr [rbx + 0x6b2ddc45], cl ; push rsi ; ret
0x000000000043f49f : add byte ptr [rbx + rdi*2 - 1], dh ; jmp rsp
0x0000000000412c11 : add byte ptr [rbx - 0x2436b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x00000000004043c7 : add byte ptr [rbx - 0x4234b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000439f9b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000429e0d : add byte ptr [rbx - 0x65d25bbb], cl ; ret 0xf61d
0x0000000000439f17 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000429dc2 : add byte ptr [rbx - 0x66d25bbb], cl ; ret 0xf61d
0x000000000042c218 : add byte ptr [rbx - 0x76b72bb3], cl ; ret 0x8ce8
0x000000000043c150 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405155 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000434773 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000043f7a3 : add byte ptr [rcx + rax], ah ; add al, ch ; push rbp ; cld ; call qword ptr [rax]
0x000000000043f783 : add byte ptr [rcx + rax], al ; add al, bl ; push rbp ; cld ; jmp qword ptr [rbx]
0x000000000043817e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004250bd : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x0000000000424f87 : add byte ptr [rcx], bh ; ret 0xf40
0x000000000043e7b7 : add byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 1], cl ; jmp rcx
0x000000000043e7bb : add byte ptr [rdi + rdi*8 - 1], cl ; jmp rcx
0x000000000043a057 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004246d1 : add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x00000000004124e6 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ec47 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000414870 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403a53 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bccf : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043802c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ec8b : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000042d7b1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405210 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427379 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043f8c3 : add byte ptr [rdx + rax + 0x65c80000], al ; cld ; call qword ptr [rsi]
0x000000000043f863 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; call 0x1743f4d7
0x000000000043db27 : add byte ptr [rdx], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d7
0x000000000043f1df : add byte ptr [rsi + rbp - 4], dl ; jmp rsp
0x000000000043f29f : add byte ptr [rsp + rbp*4], dl ; std ; jmp rsp
0x000000000043f41f : add byte ptr [rsp + rsi*2 - 1], dh ; jmp rsp
0x000000000043f2df : add byte ptr [rsp - 2], al ; jmp rsp
0x000000000042a39b : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004039f6 : add byte ptr fs:[rax - 0x77], cl ; ret 0xf0e8
0x0000000000403a4e : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004289ee : add byte ptr fs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000041a0a0 : add cl, ch ; ret
0x000000000043985f : add cl, ch ; ret 0
0x00000000004045d4 : add cl, ch ; ret 1
0x000000000040d811 : add dl, byte ptr [rcx] ; ret 0x8902
0x000000000042a0ad : add dword ptr [r8], r8d ; add byte ptr [rbx + 0x382da445], cl ; ret
0x0000000000422592 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000043f785 : add dword ptr [rax], eax ; add al, bl ; push rbp ; cld ; jmp qword ptr [rbx]
0x000000000043f7a5 : add dword ptr [rax], eax ; add al, ch ; push rbp ; cld ; call qword ptr [rax]
0x000000000043f805 : add dword ptr [rax], eax ; add al, cl ; pop rsp ; cld ; call qword ptr [rbx]
0x0000000000435b35 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000419dbd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000042a0ae : add dword ptr [rax], eax ; add byte ptr [rbx + 0x382da445], cl ; ret
0x0000000000425197 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x4c2ddc45], cl ; ret
0x000000000043625a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e7b9 : add dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 1], cl ; jmp rcx
0x000000000041ec89 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000404d7b : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f784 : add dword ptr [rax], r8d ; add al, bl ; push rbp ; cld ; jmp qword ptr [rbx]
0x00000000004221d7 : add dword ptr [rbp + 1], ecx ; ret 0x894c
0x000000000042953a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439771 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043f7a4 : add dword ptr fs:[rax], eax ; add al, ch ; push rbp ; cld ; call qword ptr [rax]
0x0000000000401c04 : add eax, 0x23f74e ; add ebx, esi ; ret
0x000000000043f21d : add eax, 0x5bd40000 ; cld ; jmp rsp
0x0000000000428388 : add eax, 0xc7b80000 ; ret
0x0000000000422705 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000042a398 : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x000000000040f3a1 : add edx, dword ptr [rcx] ; ret 0x8902
0x0000000000417a37 : add edx, dword ptr [rcx] ; ret 0x8b02
0x000000000040204b : add esp, 0x10 ; pop rbp ; ret
0x000000000043817c : add esp, 0x100 ; pop rbp ; ret
0x0000000000436257 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042b602 : add esp, 0x160 ; pop rbp ; ret
0x00000000004255ec : add esp, 0x18 ; pop rbp ; ret
0x00000000004382ec : add esp, 0x1a0 ; pop rbp ; ret
0x000000000042c494 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040635c : add esp, 0x20 ; pop rbp ; ret
0x0000000000419ba7 : add esp, 0x2708 ; pop rbx ; pop rbp ; ret
0x000000000042aa48 : add esp, 0x290 ; pop rbp ; ret
0x000000000043c453 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000419c93 : add esp, 0x30 ; pop rbp ; ret
0x0000000000424b81 : add esp, 0x370 ; pop rbp ; ret
0x0000000000406307 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404463 : add esp, 0x430 ; pop rbp ; ret
0x0000000000402222 : add esp, 0x50 ; pop rbp ; ret
0x0000000000405e86 : add esp, 0x60 ; pop rbp ; ret
0x000000000040592a : add esp, 0x70 ; pop rbp ; ret
0x0000000000401fff : add esp, 0x80 ; pop rbp ; ret
0x0000000000428887 : add esp, 0x860 ; pop rbp ; ret
0x0000000000429342 : add esp, 0x88 ; pop rbp ; ret
0x000000000043b172 : add esp, 0x90 ; pop rbp ; ret
0x00000000004057d6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000404d4d : add esp, 0xc0 ; pop rbp ; ret
0x0000000000435594 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000042b013 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000404a68 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401696 : add esp, 8 ; ret
0x000000000040541c : add r8b, bpl ; in eax, dx ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x000000000040204a : add rsp, 0x10 ; pop rbp ; ret
0x000000000043817b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000436256 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042b601 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004255eb : add rsp, 0x18 ; pop rbp ; ret
0x00000000004382eb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042c493 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040635b : add rsp, 0x20 ; pop rbp ; ret
0x0000000000419ba6 : add rsp, 0x2708 ; pop rbx ; pop rbp ; ret
0x000000000042aa47 : add rsp, 0x290 ; pop rbp ; ret
0x000000000043c452 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000419c92 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000424b80 : add rsp, 0x370 ; pop rbp ; ret
0x0000000000406306 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404462 : add rsp, 0x430 ; pop rbp ; ret
0x0000000000402221 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000405e85 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405929 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401ffe : add rsp, 0x80 ; pop rbp ; ret
0x0000000000428886 : add rsp, 0x860 ; pop rbp ; ret
0x0000000000429341 : add rsp, 0x88 ; pop rbp ; ret
0x000000000043b171 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004057d5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404d4c : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000435593 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000042b012 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000404a67 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401695 : add rsp, 8 ; ret
0x0000000000427aa2 : and al, 0x10 ; call 0x428a88
0x0000000000427aa1 : and al, 0x10 ; call 0x428a89
0x00000000004142aa : and al, 0xffffffffffffffba ; adc byte ptr [rcx + rdi*4 + 0x60], ch ; jmp qword ptr [rdi]
0x0000000000439770 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043f864 : and al, 2 ; add byte ptr [rax], al ; call 0x1743f4d6
0x0000000000405b5f : and eax, 0x641360 ; pop rbp ; ret
0x0000000000405b83 : and eax, 0x641368 ; pop rbp ; ret
0x00000000004124a2 : and eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x0000000000401c07 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000043f7a8 : call 0x1143f405
0x000000000043f868 : call 0x1743f4d2
0x00000000004056cb : call 0x4018d2
0x000000000040571e : call 0x401942
0x0000000000427aa4 : call 0x428a86
0x0000000000405708 : call 0x4367d9
0x0000000000403f36 : call 0xffffffffd654ca8a
0x00000000004355d9 : call 0xffffffffe905df29
0x00000000004355d8 : call 0xffffffffe905df2a
0x000000000043101d : call 0xfffffffff73b95b4
0x0000000000401ba3 : call 0xffffffffff407fbe
0x0000000000401be3 : call 0xffffffffff407ffe
0x000000000043bf15 : call 0xffffffffff4844ea
0x0000000000433b49 : call 0xffffffffff57c11b
0x0000000000433b48 : call 0xffffffffff57c11c
0x0000000000433b49 : call 0xffffffffff57c11d
0x0000000000433b48 : call 0xffffffffff57c11e
0x0000000000422a92 : call 0xffffffffffaeb064
0x0000000000422a92 : call 0xffffffffffaeb067
0x000000000043c4a9 : call qword ptr [r12 + rbx*8]
0x0000000000416842 : call qword ptr [rax]
0x000000000041eb5e : call qword ptr [rbx]
0x0000000000415ed3 : call qword ptr [rcx]
0x0000000000414088 : call qword ptr [rdi]
0x0000000000412c48 : call qword ptr [rdx]
0x0000000000414560 : call qword ptr [rsi]
0x000000000043c4aa : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x0000000000422499 : call rbx
0x0000000000403cb1 : call rcx
0x00000000004042b1 : call rdx
0x0000000000415f87 : call rsi
0x00000000004193e3 : call rsp
0x0000000000439f1c : cdq ; ret
0x0000000000429dc7 : cdq ; ret 0xf61d
0x0000000000424b7f : clc ; add rsp, 0x370 ; pop rbp ; ret
0x0000000000436c44 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439030 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405b41 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042b011 : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x0000000000405333 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x00000000004250b7 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x000000000042aa66 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042560c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000424bd3 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000404477 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436c5b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c9b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436c7b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040447b : clc ; pop rbp ; ret
0x0000000000412bab : clc ; push rsi ; ret 0x48f3
0x0000000000412b84 : clc ; push rsi ; ret 0x81f3
0x000000000040ed11 : clc ; push rsi ; ret 0x89f3
0x00000000004090c1 : clc ; ret 0xab1b
0x0000000000402077 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f7aa : cld ; call qword ptr [rax]
0x000000000043f80a : cld ; call qword ptr [rbx]
0x000000000043f86a : cld ; call qword ptr [rsi]
0x000000000043f1da : cld ; inc esp ; add al, 0 ; add byte ptr [rsi + rbp - 4], dl ; jmp rsp
0x000000000043f21a : cld ; inc esp ; add eax, 0x5bd40000 ; cld ; jmp rsp
0x000000000043f78a : cld ; jmp qword ptr [rbx]
0x000000000043f1e2 : cld ; jmp rsp
0x000000000043379d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000426b36 : cmc ; xchg eax, ebx ; ret 0x893e
0x00000000004287a0 : cmc ; xchg eax, ebx ; ret 0x8b3e
0x000000000043b51d : cmp al, -0x2a ; ret
0x0000000000415f7f : cmp al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x0000000000415f21 : cmp al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x0000000000405418 : cmp al, 0x25 ; jne 0x405400 ; add r8b, bpl ; in eax, dx ; ret
0x0000000000416399 : cmp byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x00000000004222a7 : cmp eax, 0xb37b79b9 ; ret 0x7d81
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x000000000040ecf5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000435a74 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000407205 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000420417 : cmpsd dword ptr [rsi], dword ptr [rdi] ; test byte ptr [rbp + 0xd34b94f], cl ; ret 0x8bca
0x0000000000418b14 : cwde ; adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000439a1b : cwde ; js 0x4399c5 ; ret
0x0000000000439a62 : cwde ; js 0x439a0c ; ret
0x0000000000439a9c : cwde ; js 0x439a46 ; ret
0x00000000004285a5 : dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000420e04 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x00000000004043cd : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041520a : dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000428498 : dec dword ptr [rax - 0x7f] ; ret 0xca00
0x00000000004271ba : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000433c4d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000417350 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000412ae1 : dec dword ptr [rdi + 0x59] ; xlatb ; ret
0x0000000000435154 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004045ce : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000408df2 : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; ret 0
0x0000000000436e73 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004078f2 : dec dword ptr [rdi] ; test dl, ah ; ret
0x000000000042a028 : dec dword ptr [rdi] ; test dl, al ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000422875 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004051da : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000403756 : enter -0x4660, -0x1d ; ret
0x000000000042bfeb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bccb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042917a : enter 0x18, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042bf05 : enter 0x3d48, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042920b : enter 0xc, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429249 : enter 0xc, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000424b56 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439654 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000436a89 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043f788 : fcom dword ptr [rbp - 4] ; jmp qword ptr [rbx]
0x000000000043f361 : fdivp st(6) ; jmp rsp
0x00000000004285dc : fimul dword ptr [rcx + 0x63] ; ret 0x948
0x00000000004285d9 : fld dword ptr [rbp + 0x31] ; fimul dword ptr [rcx + 0x63] ; ret 0x948
0x0000000000438a34 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000043c4ac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000402049 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043918c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404461 : hlt ; add rsp, 0x430 ; pop rbp ; ret
0x000000000042caaf : hlt ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000043f360 : hlt ; fdivp st(6) ; jmp rsp
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6412e8 ; jmp rax
0x0000000000426ae2 : hlt ; xchg eax, ebx ; ret 0x893e
0x0000000000416840 : idiv bh ; call qword ptr [rax]
0x0000000000415ed1 : idiv bh ; call qword ptr [rcx]
0x0000000000414086 : idiv bh ; call qword ptr [rdi]
0x0000000000412c46 : idiv bh ; call qword ptr [rdx]
0x000000000041455e : idiv bh ; call qword ptr [rsi]
0x0000000000412861 : idiv bh ; call rax
0x00000000004157b8 : idiv bh ; call rbx
0x0000000000414374 : idiv bh ; call rcx
0x0000000000415f85 : idiv bh ; call rsi
0x00000000004193e1 : idiv bh ; call rsp
0x0000000000412adf : idiv bh ; dec dword ptr [rdi + 0x59] ; xlatb ; ret
0x0000000000419472 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418a40 : idiv bh ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000415a71 : idiv bh ; jmp qword ptr [rax]
0x0000000000418df3 : idiv bh ; jmp qword ptr [rbx]
0x0000000000413f59 : idiv bh ; jmp qword ptr [rcx]
0x00000000004123aa : idiv bh ; jmp qword ptr [rdi]
0x0000000000418a46 : idiv bh ; jmp qword ptr [rdx]
0x0000000000415aa9 : idiv bh ; jmp qword ptr [rsi - 0x162b3d38]
0x0000000000418703 : idiv bh ; jmp qword ptr [rsi]
0x0000000000418712 : idiv bh ; jmp rax
0x000000000041640c : idiv bh ; jmp rcx
0x00000000004156fb : idiv bh ; jmp rdi
0x0000000000416cbe : idiv bh ; jmp rdx
0x0000000000415f27 : idiv bh ; jmp rsi
0x0000000000412795 : idiv bh ; push rbx ; ret 0x76fb
0x00000000004285a3 : idiv edi ; dec dword ptr [rax + 9] ; ret 0x8b48
0x000000000041734e : idiv edi ; dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000417ab2 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417782 : idiv edi ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000416d2e : idiv edi ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x000000000042805b : idiv edi ; lcall ptr [rcx + 0x634cfef7] ; ret 0x894c
0x0000000000422704 : imul eax, dword ptr [rbx], 0 ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x00000000004377ce : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004330f9 : in al, -0x7f ; ret 0xff9f
0x00000000004332df : in al, -0x7f ; ret 0xffbf
0x0000000000433385 : in al, -0x7f ; ret 0xffc5
0x00000000004333b3 : in al, -0x7f ; ret 0xffd5
0x0000000000433481 : in al, -0x7f ; ret 0xffd8
0x0000000000433617 : in al, -0x7f ; ret 0xffe0
0x00000000004394ea : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042d1aa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043a11b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040541f : in eax, dx ; ret
0x000000000043476f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004124e2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041486c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403c34 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004123c5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042778c : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403654 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000412c17 : inc dword ptr [rcx] ; ret 0x9589
0x0000000000436228 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000042490a : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000415ecd : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000414082 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000412c42 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000414395 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; call rcx
0x0000000000415a6d : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x00000000004123a6 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000418a42 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000416408 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rcx
0x0000000000416d30 : inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x000000000042251d : inc edi ; test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rbx]
0x000000000041e9ae : inc edi ; test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x000000000043f1db : inc esp ; add al, 0 ; add byte ptr [rsi + rbp - 4], dl ; jmp rsp
0x000000000043f21b : inc esp ; add eax, 0x5bd40000 ; cld ; jmp rsp
0x000000000043f35b : inc esp ; or al, byte ptr [rax] ; add ah, dh ; fdivp st(6) ; jmp rsp
0x000000000043f2db : inc esp ; or byte ptr [rax], al ; add byte ptr [rsp - 2], al ; jmp rsp
0x0000000000424909 : inc r15 ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042f8cf : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000432f0f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000041a988 : int 0xc3
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x00000000004123f3 : ja 0x4123fd ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000404d79 : jae 0x404dd5 ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041285b : jae 0x412865 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x000000000043db28 : jb 0x43db32 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d7
0x000000000043f3e1 : jb 0x43f3e4 ; jmp rsp
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6412e8 ; jmp rax
0x000000000043f421 : je 0x43f424 ; jmp rsp
0x00000000004142e5 : jg 0x4142a1 ; add al, -0x17 ; ret 0x58
0x0000000000404476 : jge 0x404477 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405717 : jge 0x4056a2 ; mov rdx, rax ; mov al, 0 ; call 0x401949
0x000000000041ec86 : jge 0x41ec64 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000042239b : jge 0x422379 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x0000000000422894 : jge 0x422872 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000042560b : jge 0x42560c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004289ec : jge 0x4289c6 ; add byte ptr fs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000428bed : jge 0x428be7 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000436c5a : jge 0x436c5b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c7a : jge 0x436c7b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000436c9a : jge 0x436c9b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436cc0 : jge 0x436cbd ; pop rbp ; ret
0x00000000004372e8 : jge 0x4372ff ; ret
0x00000000004377d3 : jge 0x4377ea ; ret
0x000000000043a689 : jge 0x43a683 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004371bc : jl 0x4371d3 ; ret
0x00000000004017eb : jmp 0x4016a7
0x0000000000404823 : jmp 0x404a76
0x0000000000416b4d : jmp 0x419bb7
0x000000000041a09c : jmp 0x41a0a7
0x000000000041f1c9 : jmp 0x422a79
0x00000000004240fd : jmp 0x424b90
0x0000000000426fc2 : jmp 0x426fcd
0x0000000000428386 : jmp 0x428896
0x000000000042a2f5 : jmp 0x42aa59
0x000000000042c0bb : jmp 0x42c4a2
0x00000000004328bd : jmp 0x4355a3
0x0000000000435351 : jmp 0x4355a5
0x00000000004377cd : jmp 0x437d45
0x000000000043985b : jmp 0x439866
0x000000000043a4cb : jmp 0x43a4d6
0x000000000043ad9e : jmp 0xffffffffb705b16a
0x0000000000439a1a : jmp 0xffffffffc3e812bb
0x0000000000415a73 : jmp qword ptr [rax]
0x0000000000418df5 : jmp qword ptr [rbx]
0x0000000000413f5b : jmp qword ptr [rcx]
0x000000000040881e : jmp qword ptr [rdi]
0x0000000000435a75 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000418a48 : jmp qword ptr [rdx]
0x0000000000415aab : jmp qword ptr [rsi - 0x162b3d38]
0x0000000000418705 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x0000000000434672 : jmp rbx
0x000000000041640e : jmp rcx
0x0000000000406951 : jmp rdi
0x0000000000401be7 : jmp rdx
0x0000000000415f29 : jmp rsi
0x0000000000434709 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x000000000040541a : jne 0x4053fe ; add r8b, bpl ; in eax, dx ; ret
0x000000000042560f : jne 0x425604 ; pop rbp ; ret
0x0000000000436226 : jne 0x43622f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000415dd7 : jnp 0x415d94 ; ret 0xd23d
0x0000000000415dd6 : jnp 0x415d95 ; ret 0xd23d
0x000000000041b7f9 : jnp 0x41b7b0 ; ret 0x8589
0x000000000041b84d : jnp 0x41b804 ; ret 0x8589
0x0000000000422175 : jnp 0x42212c ; ret 0xba
0x00000000004222aa : jnp 0x422261 ; ret 0x7d81
0x00000000004222ce : jnp 0x422285 ; ret 0x6348
0x000000000043f4a1 : jnp 0x43f4a4 ; jmp rsp
0x000000000043f461 : jns 0x43f464 ; jmp rsp
0x000000000040592c : jo 0x40598d ; ret
0x0000000000424b83 : jo 0x424b8d ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428a75 : jo 0x428ad6 ; ret
0x0000000000436441 : jo 0x4364a2 ; ret
0x0000000000436564 : jo 0x4365c5 ; ret
0x000000000043669e : jo 0x4366ff ; ret
0x0000000000436c7f : jo 0x436ce0 ; ret
0x0000000000436c7e : jo 0x436ce1 ; ret
0x0000000000438adc : jo 0x438b3d ; ret
0x0000000000439034 : jo 0x439095 ; ret
0x0000000000435596 : js 0x4355aa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000439a1c : js 0x4399c4 ; ret
0x0000000000439a63 : js 0x439a0b ; ret
0x0000000000439a9d : js 0x439a45 ; ret
0x0000000000412b6c : lahf ; ret 0xd284
0x000000000042805d : lcall ptr [rcx + 0x634cfef7] ; ret 0x894c
0x0000000000420419 : lea ecx, dword ptr [rdi - 0x47] ; xor al, 0xd ; ret 0x8bca
0x0000000000415114 : ljmp ptr [rip + 0xf000000] ; xchg eax, ebp ; ret 0xd284
0x0000000000428bee : lock add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404822 : lodsb al, byte ptr [rsi] ; jmp 0x404a77
0x0000000000404821 : lodsb al, byte ptr [rsi] ; jmp 0x404a78
0x000000000043f2a1 : lodsb al, byte ptr [rsi] ; std ; jmp rsp
0x000000000040520c : loopne 0x405215 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405683 : loopne 0x40568c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004162e6 : loopne 0x416313 ; mov ch, -0x17 ; ret 0x38
0x000000000041a262 : loopne 0x41a2b2 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041a261 : loopne 0x41a2b3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000042d56e : loopne 0x42d577 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000438820 : loopne 0x438829 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000438c2c : loopne 0x438c7c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000438c2b : loopne 0x438c7d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000402220 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042a865 : mov al, -0x66 ; ret 0xf61d
0x0000000000403c59 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043beea : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040571c : mov al, 0 ; call 0x401944
0x000000000042a2fc : mov al, 0x38 ; ret
0x000000000042d72b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043976d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043991d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043a119 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405b81 : mov byte ptr [0x641368], al ; pop rbp ; ret
0x00000000004250b8 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x00000000004350e8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429344 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042aa67 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004400c8 : mov byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x0000000000401c03 : mov byte ptr [rip + 0x23f74e], 1 ; ret
0x00000000004162e8 : mov ch, -0x17 ; ret 0x38
0x00000000004142e6 : mov ch, 0x4e ; add al, -0x17 ; ret 0x58
0x000000000041cc6c : mov ch, 0x51 ; ret
0x000000000042953c : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439773 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041e16c : mov dh, 0x51 ; ret
0x000000000043a245 : mov dl, -0x47 ; ret
0x0000000000405b5d : mov dword ptr [0x641360], edi ; pop rbp ; ret
0x000000000042d3e7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042d1ab : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042d31f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042560e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000040221e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404820 : mov dword ptr [rbp - 0x54], ecx ; jmp 0x404a79
0x00000000004056c5 : mov dword ptr [rbp - 0x74], eax ; mov dword ptr [rbp - 0x78], ecx ; call 0x4018d8
0x000000000042c0b8 : mov dword ptr [rbp - 0x78], eax ; jmp 0x42c4a5
0x00000000004056c8 : mov dword ptr [rbp - 0x78], ecx ; call 0x4018d5
0x0000000000402047 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402075 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042560a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000404475 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436cbf : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042d59d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000424bd5 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x00000000004023b6 : mov eax, 0x2dfffffe ; stosb byte ptr [rdi], al ; ret
0x000000000040240a : mov eax, 0x2dfffffe ; stosd dword ptr [rdi], eax ; ret
0x000000000042a862 : mov eax, 0x9ab045c7 ; ret 0xf61d
0x00000000004156f4 : mov eax, 0xc7000044 ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdi
0x0000000000416d2d : mov eax, 0xc7fffff7 ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x000000000042c591 : mov eax, 0xea1f532d ; ret 0x4589
0x000000000042c5d3 : mov eax, 0xea1f542d ; ret 0x4589
0x000000000042d09f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000438b6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406303 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043884f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405926 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000436ce1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040619c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000438c6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438540 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d3ea : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041a260 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438c2a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042cf94 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428a6f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042d09c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042d1a5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042d321 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043643b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043918a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436c42 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043902e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404479 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436c5d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c9d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436c7d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000419dc1 : mov eax, esi ; pop rbp ; ret
0x000000000041ffb2 : mov ebp, 0xb800002a ; xchg eax, edx ; ret 0xff89
0x00000000004154b4 : mov ebp, 0xfffffdef ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000401691 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x000000000042d1a8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x640e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6412e8 ; jmp rax
0x0000000000401be2 : mov edi, 0x6412e8 ; jmp rdx
0x000000000042a870 : mov edi, 0xb94abb2a ; ret 0xf751
0x0000000000436c59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436c79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043c4a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043c4a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004142ab : mov edx, 0x60b96c10 ; jmp qword ptr [rdi]
0x00000000004123f2 : mov edx, 0xc7000077 ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000403935 : mov edx, 0xe3b9f79d ; ret
0x0000000000424bd1 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000436ce5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040571a : mov edx, eax ; mov al, 0 ; call 0x401946
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6412e8 ; jmp rdx
0x0000000000412c14 : mov esp, 0x1fffffd ; ret 0x9589
0x000000000040395d : mov esp, 0xe3b95f26 ; ret
0x0000000000405b5c : mov qword ptr [0x641360], rdi ; pop rbp ; ret
0x000000000042560d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000425609 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000404474 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436cbe : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042d59c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000424bd4 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040221f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042a864 : mov r8b, -0x66 ; ret 0xf61d
0x000000000042a2fb : mov r8b, 0x38 ; ret
0x000000000042a861 : mov r8d, 0x9ab045c7 ; ret 0xf61d
0x000000000042c590 : mov r8d, 0xea1f532d ; ret 0x4589
0x000000000042c5d2 : mov r8d, 0xea1f542d ; ret 0x4589
0x0000000000438b6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406302 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043884e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405925 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000436ce0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040619b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000438c6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043853f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a25f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438c29 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042cf93 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428a6e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042d09b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043643a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404478 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436c5c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c9c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436c7c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x0000000000436c58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436c78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000424bd0 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000436ce4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405719 : mov rdx, rax ; mov al, 0 ; call 0x401947
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6412e8 ; jmp rdx
0x000000000043622a : mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004056c6 : mov word ptr [r9 + 0xe8884d], cs ; ret 0xffff
0x000000000043622b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000415f20 : mov word ptr [rax + rax], dr1 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x000000000041ee0e : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042247e : mov word ptr [rbx], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004056c7 : mov word ptr [rcx + 0xe8884d], cs ; ret 0xffff
0x000000000043397c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043a4be : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000042c3c8 : movabs byte ptr [0x8148c8558b482be0], al ; ret 1
0x000000000042744b : movabs byte ptr [0xfffffbac85c7fffd], al ; ret
0x0000000000427409 : movabs dword ptr [0xb91a41d1a1bafffd], eax ; ret
0x0000000000417409 : movabs dword ptr [0xfff67485c7000027], eax ; call rcx
0x000000000041870b : movabs eax, dword ptr [0xfff67485c7000014] ; jmp rax
0x00000000004377cc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x437d46
0x0000000000439a1d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040debd : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000042953b : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439772 : movzx eax, al ; pop rbp ; ret
0x000000000042aa6a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401c06 : mul dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x0000000000401c05 : mul qword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x00000000004056c4 : nop ; mov dword ptr [rbp - 0x74], eax ; mov dword ptr [rbp - 0x78], ecx ; call 0x4018d9
0x000000000043c4c8 : nop dword ptr [rax + rax] ; ret
0x0000000000418ed7 : or al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x0000000000435597 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004039f2 : or al, 0x25 ; adc byte ptr [rdx], 0x64 ; add byte ptr [rax - 0x77], cl ; ret 0xf0e8
0x0000000000412b6a : or al, 0xf ; lahf ; ret 0xd284
0x0000000000412b91 : or al, 0xf ; xchg eax, esp ; ret 0xd284
0x000000000043f35d : or al, byte ptr [rax] ; add ah, dh ; fdivp st(6) ; jmp rsp
0x0000000000423ec5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x0000000000405718 : or byte ptr [rax - 0x77], 0xc2 ; mov al, 0 ; call 0x401948
0x000000000043f2dd : or byte ptr [rax], al ; add byte ptr [rsp - 2], al ; jmp rsp
0x000000000042a02c : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000427373 : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000419ba9 : or byte ptr [rdi], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000436e77 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000424054 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000436621 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004248bf : out -0x39, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000419dbc : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000043991f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043976f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a135 : outsd dx, dword ptr [rsi] ; ret
0x000000000043c4bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043c4be : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004358c2 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c4c0 : pop r14 ; pop r15 ; ret
0x0000000000422a6f : pop r14 ; pop rbp ; ret
0x00000000004358c4 : pop r15 ; pop rbp ; ret
0x000000000043c4c2 : pop r15 ; ret
0x000000000040a209 : pop r9 ; xlatb ; ret
0x0000000000439f98 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x23f74e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6412e8 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6412e8 ; jmp rdx
0x000000000043c4bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043c4bf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x000000000043f221 : pop rbx ; cld ; jmp rsp
0x00000000004358c1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422a6e : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000419bad : pop rbx ; pop rbp ; ret
0x000000000043a244 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040a1b6 : pop rcx ; xlatb ; ret
0x0000000000415974 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040881d : pop rdi ; jmp qword ptr [rdi]
0x00000000004358c5 : pop rdi ; pop rbp ; ret
0x000000000043c4c3 : pop rdi ; ret
0x00000000004107c1 : pop rdi ; ret 0x380c
0x000000000043a68b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004162e5 : pop rdx ; loopne 0x416314 ; mov ch, -0x17 ; ret 0x38
0x00000000004358c3 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043c4c1 : pop rsi ; pop r15 ; ret
0x0000000000422a70 : pop rsi ; pop rbp ; ret
0x000000000040a17f : pop rsi ; ret
0x000000000040c3f1 : pop rsi ; ret 0x380c
0x0000000000427376 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043f809 : pop rsp ; cld ; call qword ptr [rbx]
0x000000000043c4bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422f63 : pop rsp ; ret
0x000000000043a059 : popfq ; ret 0xd284
0x000000000040a1ee : push -5 ; ret
0x0000000000425130 : push 0x56 ; ret
0x0000000000405b84 : push 0x5d006413 ; ret
0x00000000004150ed : push qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434fbf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000436c5e : push r8 ; pop rbp ; ret
0x0000000000418901 : push rax ; adc al, -0x7f ; ret 0x76c
0x0000000000402224 : push rax ; pop rbp ; ret
0x000000000041715c : push rax ; sbb al, -0x7f ; ret 1
0x000000000043812b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000424bd2 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000436ce6 : push rbp ; clc ; pop rbp ; ret
0x000000000043f7a9 : push rbp ; cld ; call qword ptr [rax]
0x000000000043f789 : push rbp ; cld ; jmp qword ptr [rbx]
0x0000000000438a33 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004330f8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004332de : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000433384 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004333b2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000433480 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000433616 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401c24 : push rbp ; mov edi, 0x640e20 ; mov rbp, rsp ; call rax
0x000000000042879f : push rbp ; xchg eax, ebx ; ret 0x8b3e
0x0000000000416857 : push rbp ; xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000412797 : push rbx ; ret 0x76fb
0x0000000000404d7a : push rcx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cc6d : push rcx ; ret
0x0000000000409fad : push rcx ; ret 0
0x000000000041285a : push rdx ; jae 0x412866 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x0000000000425131 : push rsi ; ret
0x0000000000412bac : push rsi ; ret 0x48f3
0x0000000000412b85 : push rsi ; ret 0x81f3
0x000000000040dea2 : push rsi ; ret 0x89f3
0x000000000043f1e0 : push rsp ; cld ; jmp rsp
0x000000000043c153 : pushfq ; ret 0x8445
0x00000000004246d3 : pushfq ; ret 0x8b48
0x00000000004124e8 : pushfq ; ret 0xd284
0x00000000004209a9 : pushfq ; ret 0xe280
0x0000000000401699 : ret
0x0000000000400718 : ret 0
0x000000000043b2f9 : ret 0x10
0x0000000000427ebe : ret 0x14c
0x000000000041647c : ret 0x15b9
0x000000000041520d : ret 0x17
0x00000000004095c9 : ret 0x1b97
0x000000000043a14b : ret 0x2030
0x000000000041ef52 : ret 0x21b9
0x000000000041d319 : ret 0x227b
0x00000000004019f2 : ret 0x23f7
0x00000000004017f2 : ret 0x23f8
0x000000000041d6f8 : ret 0x25
0x00000000004058b5 : ret 0x29b9
0x0000000000432ad7 : ret 0x2a
0x0000000000420e07 : ret 0x2b48
0x0000000000435df6 : ret 0x2c1
0x00000000004152e9 : ret 0x30
0x000000000041cda0 : ret 0x320f
0x000000000041a774 : ret 0x3241
0x00000000004257be : ret 0x3347
0x000000000042b7ff : ret 0x3361
0x00000000004106fe : ret 0x3573
0x000000000041e258 : ret 0x36
0x00000000004162ea : ret 0x38
0x000000000040c3f2 : ret 0x380c
0x0000000000410f21 : ret 0x3f
0x00000000004158ea : ret 0x42
0x000000000040bf22 : ret 0x4277
0x000000000043db30 : ret 0x43d7
0x0000000000405711 : ret 0x43dc
0x000000000042fa3a : ret 0x43fa
0x0000000000405871 : ret 0x4589
0x000000000042c4d8 : ret 0x458b
0x0000000000417b66 : ret 0x482b
0x0000000000412bad : ret 0x48f3
0x000000000041a978 : ret 0x4b
0x000000000041b318 : ret 0x4c
0x00000000004142ea : ret 0x58
0x0000000000439333 : ret 0x5e5
0x00000000004222d0 : ret 0x6348
0x00000000004132ea : ret 0x68
0x000000000041a705 : ret 0x71cc
0x0000000000405a3a : ret 0x7406
0x0000000000406cfe : ret 0x7494
0x0000000000418904 : ret 0x76c
0x0000000000406caa : ret 0x76fb
0x00000000004222ac : ret 0x7d81
0x000000000041a1de : ret 0x8148
0x0000000000412b86 : ret 0x81f3
0x0000000000403658 : ret 0x8445
0x000000000040a068 : ret 0x8589
0x000000000040adad : ret 0x87
0x000000000040d813 : ret 0x8902
0x000000000042f8d0 : ret 0x891a
0x000000000040c88b : ret 0x892b
0x0000000000439afc : ret 0x8934
0x0000000000426ae4 : ret 0x893e
0x000000000040bdb7 : ret 0x8945
0x000000000041e9a7 : ret 0x8948
0x00000000004221da : ret 0x894c
0x0000000000422be3 : ret 0x8975
0x000000000043ada1 : ret 0x89b6
0x000000000041bb0a : ret 0x89ca
0x000000000040ae9f : ret 0x89d4
0x000000000040dea3 : ret 0x89f3
0x0000000000405480 : ret 0x8ae8
0x0000000000417a39 : ret 0x8b02
0x0000000000439ad8 : ret 0x8b34
0x00000000004287a2 : ret 0x8b3e
0x000000000041e98c : ret 0x8b48
0x0000000000422a9b : ret 0x8b75
0x000000000042041e : ret 0x8bca
0x000000000042c21e : ret 0x8ce8
0x000000000041601e : ret 0x8ce9
0x00000000004285df : ret 0x948
0x0000000000412c19 : ret 0x9589
0x00000000004337a5 : ret 0xa9b9
0x0000000000434750 : ret 0xaae8
0x000000000040906e : ret 0xab1b
0x00000000004133f4 : ret 0xacb9
0x000000000042f222 : ret 0xade6
0x0000000000403c8a : ret 0xb0
0x0000000000432f10 : ret 0xb91a
0x000000000043b05b : ret 0xb9b6
0x0000000000422177 : ret 0xba
0x0000000000401bc5 : ret 0xc148
0x00000000004085a5 : ret 0xc9
0x000000000042849b : ret 0xca00
0x0000000000409169 : ret 0xd23d
0x0000000000403a56 : ret 0xd284
0x0000000000434fc3 : ret 0xd4e9
0x0000000000426bfa : ret 0xdccb
0x00000000004209aa : ret 0xe280
0x000000000042bb63 : ret 0xe886
0x000000000041241b : ret 0xe945
0x000000000042405f : ret 0xe975
0x0000000000415aae : ret 0xe9d4
0x00000000004355dc : ret 0xee8
0x0000000000418bea : ret 0xf
0x00000000004039fa : ret 0xf0e8
0x0000000000418659 : ret 0xf40
0x0000000000433985 : ret 0xf41
0x0000000000429dc8 : ret 0xf61d
0x00000000004153bf : ret 0xf6b9
0x000000000042a01f : ret 0xf751
0x00000000004261b2 : ret 0xfb5a
0x0000000000412caf : ret 0xfbe9
0x000000000041c6a1 : ret 0xff89
0x00000000004330fb : ret 0xff9f
0x0000000000434a9e : ret 0xffa5
0x00000000004332e1 : ret 0xffbf
0x0000000000433d4b : ret 0xffc4
0x0000000000433387 : ret 0xffc5
0x000000000041eb06 : ret 0xffc8
0x00000000004333b5 : ret 0xffd5
0x0000000000433483 : ret 0xffd8
0x0000000000433df1 : ret 0xffd9
0x0000000000433619 : ret 0xffe0
0x00000000004326ee : ret 0xfffa
0x000000000040590a : ret 0xfffb
0x000000000041eae3 : ret 0xfffe
0x00000000004056cd : ret 0xffff
0x0000000000403e1b : ret 1
0x0000000000400928 : ret 2
0x00000000004350d7 : ret 4
0x0000000000436ea8 : ret 5
0x0000000000417f7c : ret 7
0x00000000004357c0 : ret 8
0x000000000042a378 : rol byte ptr [rax + rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000424e35 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040428c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043be44 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b015 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c455 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d1a6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x00000000004206fb : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000427dbf : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x16000005], ebx ; ret
0x000000000042d1a7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000418dec : ror byte ptr [rip - 0x7a390000], 0x74 ; idiv bh ; jmp qword ptr [rbx]
0x0000000000438a30 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004286aa : ror dword ptr [rcx + 0x63], 1 ; ret 0x948
0x000000000041ec49 : sahf ; ret 0xd284
0x00000000004285a2 : sal bh, -1 ; dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000401b9e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407fc3
0x0000000000418ed6 : salc ; or al, 0 ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x000000000043b51e : salc ; ret
0x0000000000415207 : sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x000000000041715d : sbb al, -0x7f ; ret 1
0x0000000000422fb5 : sbb bl, ah ; pop rsp ; ret
0x0000000000436259 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000438613 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043379e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000422f61 : sbb esp, ebx ; pop rsp ; ret
0x0000000000422be2 : scasd eax, dword ptr [rdi] ; ret 0x8975
0x0000000000422a9a : scasd eax, dword ptr [rdi] ; ret 0x8b75
0x000000000042405e : scasd eax, dword ptr [rdi] ; ret 0xe975
0x00000000004289ed : shl byte ptr [rax + rax], 1 ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x000000000042a39a : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000427375 : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043f2a2 : std ; jmp rsp
0x000000000040a1ef : sti ; ret
0x000000000040a147 : sti ; ret 0x8589
0x00000000004133f3 : sti ; ret 0xacb9
0x00000000004023bb : stosb byte ptr [rdi], al ; ret
0x00000000004022dd : stosd dword ptr [rdi], eax ; ret
0x0000000000407a55 : sub al, -0x4d ; ret
0x000000000040a145 : sub al, 0x28 ; sti ; ret 0x8589
0x00000000004307e7 : sub al, 0x38 ; ret 0x8589
0x00000000004337a3 : sub al, 0x38 ; ret 0xa9b9
0x00000000004170d9 : sub al, byte ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000040a146 : sub bl, bh ; ret 0x8589
0x00000000004133f2 : sub bl, bh ; ret 0xacb9
0x00000000004250b9 : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x0000000000416dc2 : sub eax, 0xbcb80000 ; push -5 ; ret
0x0000000000415115 : sub eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x0000000000403754 : sub eax, ebx ; enter -0x4660, -0x1d ; ret
0x0000000000419dbb : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x000000000043c511 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043c510 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000043814b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000404092 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a493 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b509 : test al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043643d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000438028 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004243d1 : test al, 9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043c4ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000420418 : test byte ptr [rbp + 0xd34b94f], cl ; ret 0x8bca
0x00000000004045d0 : test byte ptr [rdx], bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000408df4 : test byte ptr [rdx], bl ; ret 0
0x00000000004400c4 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; mov byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x0000000000436e75 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004078f4 : test dl, ah ; ret
0x000000000042a02a : test dl, al ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004023b5 : test dword ptr [rax + 0x2dfffffe], edi ; stosb byte ptr [rdi], al ; ret
0x0000000000402409 : test dword ptr [rax + 0x2dfffffe], edi ; stosd dword ptr [rdi], eax ; ret
0x0000000000408dee : test dword ptr [rax + 0xfffffef], edx ; test byte ptr [rdx], bl ; ret 0
0x00000000004078ee : test dword ptr [rax + 0xffffff2], edx ; test dl, ah ; ret
0x0000000000427dc2 : test dword ptr [rax - 0x16000005], ebx ; ret
0x000000000040a13f : test dword ptr [rbp + rsi*8 + 0x2c2dffff], ecx ; sub bl, bh ; ret 0x8589
0x000000000040a193 : test dword ptr [rbp + rsi*8 + 0x2d2dffff], ecx ; sub bl, bh ; ret 0x8589
0x00000000004106f7 : test dword ptr [rbp + rsi*8 + 0x2dffff], ecx ; ret 0x3573
0x000000000040a1af : test dword ptr [rbp + rsi*8 + 0x4e2dffff], ecx ; pop rcx ; xlatb ; ret
0x000000000040a203 : test dword ptr [rbp + rsi*8 + 0x4f2dffff], ecx ; pop rcx ; xlatb ; ret
0x000000000040c3eb : test dword ptr [rbp + rsi*8 + 0x5e2dffff], ecx ; ret 0x380c
0x0000000000408817 : test dword ptr [rbp + rsi*8 + 0x5f2dffff], ecx ; jmp qword ptr [rdi]
0x00000000004107bb : test dword ptr [rbp + rsi*8 + 0x5f2dffff], ecx ; ret 0x380c
0x000000000040886b : test dword ptr [rbp + rsi*8 + 0x602dffff], ecx ; jmp qword ptr [rdi]
0x000000000040bdaf : test dword ptr [rbp + rsi*8 + 0x642dffff], ecx ; ret 0x8945
0x0000000000410df7 : test dword ptr [rbp + rsi*8 + 0x652dffff], ecx ; ret 0x8945
0x0000000000410c8b : test dword ptr [rbp + rsi*8 - 0x23d20001], ecx ; ret 0x4277
0x000000000040bf1b : test dword ptr [rbp + rsi*8 - 0x24d20001], ecx ; ret 0x4277
0x000000000040aa53 : test dword ptr [rbp + rsi*8 - 0x39d20001], ecx ; stosd dword ptr [rdi], eax ; ret
0x000000000040a9ff : test dword ptr [rbp + rsi*8 - 0x3ad20001], ecx ; stosd dword ptr [rdi], eax ; ret
0x000000000040a23b : test dword ptr [rbp + rsi*8 - 0x43d20001], ecx ; push -5 ; ret
0x000000000040a1e7 : test dword ptr [rbp + rsi*8 - 0x44d20001], ecx ; push -5 ; ret
0x000000000040a0b3 : test dword ptr [rbp + rsi*8 - 0x4ad20001], ecx ; add byte ptr [rax], bl ; ret 0x8589
0x000000000040a05f : test dword ptr [rbp + rsi*8 - 0x4bd20001], ecx ; add byte ptr [rax], bl ; ret 0x8589
0x0000000000411bbf : test dword ptr [rbp + rsi*8 - 0x57d20001], ecx ; ret
0x00000000004071ff : test dword ptr [rbp + rsi*8 - 0x58d20001], ecx ; ret
0x000000000040ecef : test dword ptr [rbp + rsi*8 - 0x59d20001], ecx ; ret
0x000000000040deb7 : test dword ptr [rbp + rsi*8 - 0x5ad20001], ecx ; ret
0x0000000000411faf : test dword ptr [rbp + rsi*8 - 0x68d20001], ecx ; ret 0x7494
0x0000000000406cf7 : test dword ptr [rbp + rsi*8 - 0x69d20001], ecx ; ret 0x7494
0x000000000040ed0b : test dword ptr [rbp + rsi*8 - 0x7d20001], ecx ; push rsi ; ret 0x89f3
0x00000000004090bb : test dword ptr [rbp + rsi*8 - 0x7d20001], ecx ; ret 0xab1b
0x000000000040de9b : test dword ptr [rbp + rsi*8 - 0x8d20001], ecx ; push rsi ; ret 0x89f3
0x0000000000409067 : test dword ptr [rbp + rsi*8 - 0x8d20001], ecx ; ret 0xab1b
0x0000000000412003 : test dword ptr [rbp + rsi*8 - 0xcd20001], ecx ; ret 0x76fb
0x0000000000406ca3 : test dword ptr [rbp + rsi*8 - 0xdd20001], ecx ; ret 0x76fb
0x00000000004265b8 : test dword ptr [rbx + rdi*8 - 0x38d20001], ecx ; ret
0x0000000000426564 : test dword ptr [rbx + rdi*8 - 0x39d20001], ecx ; ret
0x000000000042879b : test dword ptr [rbx + rdi*8 - 0x6c0a0001], ebp ; ret 0x8b3e
0x0000000000426b30 : test dword ptr [rbx + rdi*8 - 0xad20001], ecx ; xchg eax, ebx ; ret 0x893e
0x0000000000426adc : test dword ptr [rbx + rdi*8 - 0xbd20001], ecx ; xchg eax, ebx ; ret 0x893e
0x0000000000410f1a : test dword ptr [rbx*8 - 0x7bf00001], ebx ; ret 0x3f
0x000000000042490c : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000422a94 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004248c1 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000423e78 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsp
0x0000000000424558 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rcx
0x0000000000438130 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000437e98 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041683e : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rax]
0x0000000000415ecf : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000414084 : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000412c44 : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x000000000041455c : test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rsi]
0x000000000041285f : test dword ptr [rsi + rsi*8 - 1], esi ; call rax
0x00000000004157b6 : test dword ptr [rsi + rsi*8 - 1], esi ; call rbx
0x0000000000414372 : test dword ptr [rsi + rsi*8 - 1], esi ; call rcx
0x0000000000415f83 : test dword ptr [rsi + rsi*8 - 1], esi ; call rsi
0x0000000000417318 : test dword ptr [rsi + rsi*8 - 1], esi ; call rsp
0x0000000000412add : test dword ptr [rsi + rsi*8 - 1], esi ; dec dword ptr [rdi + 0x59] ; xlatb ; ret
0x0000000000415a6f : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000418df1 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000413f57 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x00000000004123a8 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000418a44 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000415aa7 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi - 0x162b3d38]
0x0000000000418701 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000418710 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rax
0x000000000041640a : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rcx
0x00000000004156f9 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdi
0x0000000000416cbc : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rdx
0x0000000000415f25 : test dword ptr [rsi + rsi*8 - 1], esi ; jmp rsi
0x0000000000412793 : test dword ptr [rsi + rsi*8 - 1], esi ; push rbx ; ret 0x76fb
0x0000000000427ecb : test dword ptr [rsp + rdi*8 - 1], ebx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041e909 : test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rax]
0x000000000041eb5a : test dword ptr [rsp + rsi*8 - 1], esi ; call qword ptr [rbx]
0x000000000041eb8d : test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000422709 : test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000041e9b0 : test dword ptr [rsp + rsi*8 - 1], esi ; jmp qword ptr [rdx]
0x000000000042252e : test dword ptr [rsp + rsi*8 - 1], esi ; jmp rsi
0x00000000004250ba : test eax, 0x1000000 ; pop rbp ; ret
0x0000000000412c13 : xchg eax, ebp ; mov esp, 0x1fffffd ; ret 0x9589
0x0000000000414872 : xchg eax, ebp ; ret
0x0000000000403657 : xchg eax, ebp ; ret 0x8445
0x0000000000403a55 : xchg eax, ebp ; ret 0xd284
0x00000000004285a1 : xchg eax, ebp ; sal bh, -1 ; dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000415206 : xchg eax, ebp ; sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000426ae3 : xchg eax, ebx ; ret 0x893e
0x00000000004287a1 : xchg eax, ebx ; ret 0x8b3e
0x00000000004307cb : xchg eax, ecx ; ret
0x000000000041c6a0 : xchg eax, ecx ; ret 0xff89
0x0000000000411fb5 : xchg eax, edi ; ret 0x7494
0x000000000043bcd1 : xchg eax, edi ; ret 0xd284
0x0000000000425196 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x4c2ddc45], cl ; ret
0x000000000043091b : xchg eax, edx ; ret
0x000000000043802e : xchg eax, edx ; ret 0xd284
0x000000000041c6f4 : xchg eax, edx ; ret 0xff89
0x0000000000436152 : xchg eax, esi ; ret
0x000000000040a63d : xchg eax, esi ; ret 0
0x0000000000406cfd : xchg eax, esi ; ret 0x7494
0x000000000041ec8d : xchg eax, esi ; ret 0xd284
0x000000000043f3e0 : xchg eax, esp ; jb 0x43f3e5 ; jmp rsp
0x000000000042d7b3 : xchg eax, esp ; ret
0x0000000000434776 : xchg eax, esp ; ret 0x8445
0x00000000004051dc : xchg eax, esp ; ret 0xd284
0x000000000042737b : xchg eax, esp ; ret 0xe280
0x0000000000425738 : xchg ecx, ebp ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425737 : xchg r9d, r13d ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a1b7 : xlatb ; ret
0x000000000040570f : xor al, 0x25 ; ret 0x43dc
0x000000000041bb5c : xor al, 0xd ; ret 0x89ca
0x000000000042041c : xor al, 0xd ; ret 0x8bca
0x0000000000417781 : xor bh, 0xff ; inc edi ; test dword ptr [rsi + rsi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000436757 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000429dbf : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x66d25bbb], cl ; ret 0xf61d
0x000000000041683a : xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rax]
0x0000000000416858 : xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rsi*8 - 1], esi ; call qword ptr [rdx]
0x000000000042d31d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
