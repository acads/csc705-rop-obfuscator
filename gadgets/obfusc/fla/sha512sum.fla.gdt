0x00000000004037d2 : adc al, 0x25 ; ret
0x000000000040376a : adc al, 0x25 ; ret 0x62a2
0x0000000000427ed9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xffff
0x0000000000421d2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f6d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040930d : adc ecx, ebp ; ret 0
0x00000000004033d9 : add al, -0x7b ; fidiv word ptr [rsi - 0x17] ; ret
0x00000000004282a1 : add al, -2 ; call rdi
0x000000000040346e : add al, 0x25 ; ret
0x00000000004033f3 : add al, 0x25 ; ret 0x62a2
0x00000000004281bc : add al, 2 ; add byte ptr [rax], al ; sar dh, -3 ; call qword ptr [rsi]
0x000000000042825f : add al, ah ; add bh, dh ; call rdi
0x000000000042825d : add al, byte ptr [rax] ; add al, ah ; add bh, dh ; call rdi
0x0000000000421623 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040735e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x5cd253bb], cl ; ret 0x8908
0x000000000040527c : add al, ch ; ret 0xffff
0x0000000000421a1e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000421786 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000409380 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x0000000000415980 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; jmp rsp
0x0000000000428261 : add bh, dh ; call rdi
0x000000000042692f : add bl, dh ; ret
0x0000000000409218 : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000427fd3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; jmp rax
0x00000000004154c7 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x00000000004058e1 : add byte ptr [rax - 0x77], cl ; ret 0x16e8
0x0000000000405867 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x00000000004057ed : add byte ptr [rax - 0x77], cl ; ret 0xae8
0x00000000004154d2 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004152a1 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004152fd : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004281ba : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; sar dh, -3 ; call qword ptr [rsi]
0x0000000000421a1c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000421784 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041597e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebp ; jmp rsp
0x000000000042692d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004154c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x00000000004154d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000042692b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408477 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042692c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f41e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c4a : add byte ptr [rax], al ; add byte ptr [rbx + 0x7f2dc845], cl ; ret
0x0000000000407471 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5bd253bb], cl ; ret 0x8908
0x0000000000426019 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000425f95 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000042542e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000406adf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000041e2d1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004260d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040383d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004164c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041732d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040357d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406d60 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004152a2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000409351 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000408977 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041730f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405730 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407dab : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004258dd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041f6db : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f140 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416225 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408d00 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f697 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042315d : add byte ptr [rax], al ; call 0x4013b8
0x0000000000427fd6 : add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; jmp rax
0x000000000042889a : add byte ptr [rax], al ; in al, 8 ; add byte ptr [rax], al ; nop ; jp 0x4288ab ; jmp qword ptr [rdx]
0x0000000000427bc6 : add byte ptr [rax], al ; ja 0x427bd3 ; add byte ptr [rax], al ; mov al, -0x69 ; std ; call qword ptr [rax]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000405ce1 : add byte ptr [rax], al ; jmp 0x405ee3
0x0000000000407da7 : add byte ptr [rax], al ; jmp 0x407db6
0x00000000004258d9 : add byte ptr [rax], al ; jmp 0x4258e8
0x0000000000426549 : add byte ptr [rax], al ; jmp 0x426558
0x00000000004280fe : add byte ptr [rax], al ; loopne 0x4280e4 ; std ; jmp rsi
0x0000000000427bca : add byte ptr [rax], al ; mov al, -0x69 ; std ; call qword ptr [rax]
0x0000000000426757 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000415f99 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000416bf9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070ae : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000042825a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ah ; add bh, dh ; call rdi
0x000000000042889e : add byte ptr [rax], al ; nop ; jp 0x4288a7 ; jmp qword ptr [rdx]
0x0000000000427bd2 : add byte ptr [rax], al ; nop ; wait ; std ; jmp rax
0x0000000000403da1 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f41f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414cee : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004288fe : add byte ptr [rax], al ; push rax ; jge 0x428907 ; jmp rdx
0x0000000000427c02 : add byte ptr [rax], al ; push rax ; ret 0xfffd
0x000000000042692e : add byte ptr [rax], al ; ret
0x0000000000427edb : add byte ptr [rax], al ; ret 0xffff
0x00000000004281be : add byte ptr [rax], al ; sar dh, -3 ; call qword ptr [rsi]
0x0000000000427fd2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; jmp rax
0x00000000004251e1 : add byte ptr [rbx + 0x36e8b87d], cl ; ret
0x000000000041f420 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000414cef : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405c4c : add byte ptr [rbx + 0x7f2dc845], cl ; ret
0x0000000000403d60 : add byte ptr [rbx - 0x3a74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407473 : add byte ptr [rbx - 0x5bd253bb], cl ; ret 0x8908
0x0000000000407360 : add byte ptr [rbx - 0x5cd253bb], cl ; ret 0x8908
0x0000000000406476 : add byte ptr [rbx - 0x62d253bb], cl ; jae 0x406444 ; ret
0x000000000040642b : add byte ptr [rbx - 0x63d253bb], cl ; jae 0x4063f9 ; ret
0x000000000042601b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000425f97 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000425430 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000406ae1 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040921b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000406ca7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421a6e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x00000000004260d7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040383f : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004164c2 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041732f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040357f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406d62 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004152a4 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000409353 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000408979 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417311 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405732 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e8b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000427bc7 : add byte ptr [rdi], dh ; add byte ptr [rax], al ; mov al, -0x69 ; std ; call qword ptr [rax]
0x00000000004281bb : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; sar dh, -3 ; call qword ptr [rsi]
0x000000000040774a : add cl, ch ; ret
0x00000000004258df : add cl, ch ; ret 0
0x00000000004066b0 : add cl, ch ; ret 1
0x000000000040346c : add dh, al ; add al, 0x25 ; ret
0x00000000004033f1 : add dh, al ; add al, 0x25 ; ret 0x62a2
0x000000000041f695 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041fdba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405375 : add dword ptr [rcx], eax ; call 0x4015f4
0x0000000000406f8d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004257f1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x228aae ; add ebx, esi ; ret
0x00000000004066ae : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x000000000040342e : add esi, eax ; add al, 0x25 ; ret 0x62a2
0x0000000000403e00 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401acb : add esp, 0x10 ; pop rbp ; ret
0x0000000000421a6c : add esp, 0x100 ; pop rbp ; ret
0x000000000041fdb7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040790b : add esp, 0x120 ; pop rbp ; ret
0x000000000041551c : add esp, 0x130 ; pop rbp ; ret
0x0000000000406d91 : add esp, 0x150 ; pop rbp ; ret
0x0000000000415c1b : add esp, 0x170 ; pop rbp ; ret
0x0000000000421bdc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041614d : add esp, 0x20 ; pop rbp ; ret
0x00000000004093cd : add esp, 0x230 ; pop rbp ; ret
0x0000000000425733 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000042348a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000416228 : add esp, 0x30 ; pop rbp ; ret
0x0000000000405a52 : add esp, 0x390 ; pop rbp ; ret
0x0000000000403d9d : add esp, 0x3c0 ; pop rbp ; ret
0x000000000040870d : add esp, 0x40 ; pop rbp ; ret
0x0000000000401a80 : add esp, 0x50 ; pop rbp ; ret
0x00000000004083b6 : add esp, 0x60 ; pop rbp ; ret
0x000000000041ff9f : add esp, 0x70 ; pop rbp ; ret
0x0000000000408071 : add esp, 0x78 ; pop rbp ; ret
0x000000000042060c : add esp, 0x80 ; pop rbp ; ret
0x00000000004062b9 : add esp, 0x90 ; pop rbp ; ret
0x0000000000405ed3 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000414cea : add esp, 0xab8 ; pop rbx ; pop rbp ; ret
0x000000000041660f : add esp, 0xb0 ; pop rbp ; ret
0x000000000041f0f4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000403dff : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401aca : add rsp, 0x10 ; pop rbp ; ret
0x0000000000421a6b : add rsp, 0x100 ; pop rbp ; ret
0x000000000041fdb6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040790a : add rsp, 0x120 ; pop rbp ; ret
0x000000000041551b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406d90 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000415c1a : add rsp, 0x170 ; pop rbp ; ret
0x0000000000421bdb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041614c : add rsp, 0x20 ; pop rbp ; ret
0x00000000004093cc : add rsp, 0x230 ; pop rbp ; ret
0x0000000000425732 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000423489 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000416227 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405a51 : add rsp, 0x390 ; pop rbp ; ret
0x0000000000403d9c : add rsp, 0x3c0 ; pop rbp ; ret
0x000000000040870c : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a7f : add rsp, 0x50 ; pop rbp ; ret
0x00000000004083b5 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041ff9e : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408070 : add rsp, 0x78 ; pop rbp ; ret
0x000000000042060b : add rsp, 0x80 ; pop rbp ; ret
0x00000000004062b8 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405ed2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000414ce9 : add rsp, 0xab8 ; pop rbx ; pop rbp ; ret
0x000000000041660e : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041f0f3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x00000000004257f0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040790d : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040537d : and dl, byte ptr [rbp + 0x1bbaebaa] ; sbb ecx, ecx ; ret
0x0000000000403767 : and eax, 0x25148a31 ; ret 0x62a2
0x0000000000405267 : and eax, 0x427019 ; call 0x4014a7
0x00000000004033ec : and eax, 0x62a2c1 ; add dh, al ; add al, 0x25 ; ret 0x62a2
0x0000000000403429 : and eax, 0x62a2c1 ; add esi, eax ; add al, 0x25 ; ret 0x62a2
0x000000000040808f : and eax, 0x62a2e0 ; pop rbp ; ret
0x00000000004080b3 : and eax, 0x62a2e8 ; pop rbp ; ret
0x000000000042315f : call 0x4013b6
0x000000000042312c : call 0x401416
0x000000000040526c : call 0x4014a2
0x000000000040527d : call 0x4014c2
0x000000000041533e : call 0x4015c2
0x0000000000405316 : call 0x4015f2
0x00000000004253f4 : call 0x401632
0x0000000000405df1 : call 0x401697
0x0000000000403d19 : call 0x422627
0x0000000000403d19 : call 0x422628
0x000000000041f139 : call 0xffffffffe9047a89
0x000000000041f138 : call 0xffffffffe9047a8a
0x000000000041ab7d : call 0xfffffffff73a3114
0x00000000004251f5 : call 0xffffffffff46d7ca
0x000000000041d6a9 : call 0xffffffffff565c7b
0x000000000041d6a8 : call 0xffffffffff565c7c
0x000000000041d6a9 : call 0xffffffffff565c7d
0x000000000041d6a8 : call 0xffffffffff565c7e
0x0000000000426909 : call qword ptr [r12 + rbx*8]
0x000000000040b98b : call qword ptr [rax]
0x0000000000409386 : call qword ptr [rcx]
0x00000000004023f0 : call qword ptr [rdi]
0x000000000040c86e : call qword ptr [rdx]
0x000000000041c5ff : call qword ptr [rsi]
0x000000000042690a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x00000000004025c0 : call rbx
0x0000000000402359 : call rcx
0x00000000004094f5 : call rdi
0x0000000000428443 : call rdx
0x0000000000421a24 : call rsi
0x0000000000425f9c : cdq ; ret
0x0000000000424042 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422920 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x0000000000403e17 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040872f : clc ; mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000403e1b : clc ; pop rbp ; ret
0x00000000004275a2 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000041d2fd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000405880 : cmp ah, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004247fd : cmp al, -0x2a ; ret
0x0000000000405314 : cmp al, 1 ; call 0x4015f4
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x000000000041f5d4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000425a9b : cwde ; js 0x425a45 ; ret
0x0000000000425ae2 : cwde ; js 0x425a8c ; ret
0x0000000000425b1c : cwde ; js 0x425ac6 ; ret
0x0000000000427fd8 : cwde ; xchg eax, ebx ; std ; jmp rax
0x000000000041523b : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x0000000000405809 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403d66 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404efb : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041d7ad : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000405371 : dec dword ptr [rdi] ; mov dh, 0x7c ; add dword ptr [rcx], eax ; call 0x4015f8
0x000000000041ecb4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000414ee4 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffb], ah ; ret 1
0x0000000000420763 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041c7e8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004058b1 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424fab : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000405975 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004152a0 : fadd dword ptr [rax + 0xf000000] ; xchg eax, ebx ; ret 0xd284
0x00000000004152fc : fadd dword ptr [rax + 0xf000000] ; xchg eax, edi ; ret 0xd284
0x0000000000405949 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004153f1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040572e : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004205e9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004283e1 : fdivr st(6) ; call qword ptr [rsi]
0x0000000000408cfe : fiadd word ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033db : fidiv word ptr [rsi - 0x17] ; ret
0x0000000000422324 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000042690c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004059c8 : fnsave dword ptr [rax - 0x76] ; adc al, 0x25 ; ret
0x0000000000401ac9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004093cb : hlt ; add rsp, 0x230 ; pop rbp ; ret
0x0000000000403d9b : hlt ; add rsp, 0x3c0 ; pop rbp ; ret
0x00000000004235ec : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x62a280 ; jmp rax
0x0000000000402012 : hlt ; ret 0x8589
0x00000000004030ec : hlt ; ret 0xe3b9
0x00000000004210be : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000402fb4 : in al, -0x3d ; ret
0x000000000041cc59 : in al, -0x7f ; ret 0xff9f
0x000000000041ce3f : in al, -0x7f ; ret 0xffbf
0x000000000041cee5 : in al, -0x7f ; ret 0xffc5
0x000000000041cf13 : in al, -0x7f ; ret 0xffd5
0x000000000041cfe1 : in al, -0x7f ; ret 0xffd8
0x000000000041d177 : in al, -0x7f ; ret 0xffe0
0x0000000000427528 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x000000000042889c : in al, 8 ; add byte ptr [rax], al ; nop ; jp 0x4288a9 ; jmp qword ptr [rdx]
0x000000000042394a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000416d0a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042619b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427582 : in eax, dx ; leave ; ret 0x3b81
0x0000000000402455 : in eax, dx ; ret 0x8978
0x0000000000403901 : in eax, dx ; ret 0xb978
0x00000000004037ed : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004037eb : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e2cf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000403c4c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040934f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000409252 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403095 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000041fd88 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041942f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041ca6f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x0000000000427bc8 : ja 0x427bd1 ; add byte ptr [rax], al ; mov al, -0x69 ; std ; call qword ptr [rax]
0x0000000000428661 : ja 0x428664 ; jmp qword ptr [rdx]
0x0000000000406431 : jae 0x4063f3 ; ret
0x000000000040647c : jae 0x40643e ; ret
0x0000000000406b20 : jae 0x406ae2 ; ret
0x00000000004033dc : jbe 0x4033c9 ; ret
0x000000000042757f : jbe 0x42756e ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x62a280 ; jmp rax
0x0000000000402011 : jge 0x402009 ; ret 0x8589
0x000000000040209d : jge 0x402095 ; ret 0x8589
0x00000000004030eb : jge 0x4030e3 ; ret 0xe3b9
0x0000000000403e16 : jge 0x403e17 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408732 : jge 0x40872a ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041529f : jge 0x415281 ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004152fb : jge 0x4152dd ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000420bd8 : jge 0x420bef ; ret
0x00000000004210c3 : jge 0x4210da ; ret
0x00000000004253ee : jge 0x425394 ; mov rsi, qword ptr [rbp - 0x50] ; call 0x401638
0x0000000000426709 : jge 0x426703 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000428901 : jge 0x428904 ; jmp rdx
0x0000000000420aac : jl 0x420ac3 ; ret
0x000000000040151b : jmp 0x401377
0x000000000040338c : jmp 0x403dab
0x0000000000403468 : jmp 0x403dad
0x0000000000405ce3 : jmp 0x405ee1
0x0000000000406c92 : jmp 0x406d9f
0x0000000000407da9 : jmp 0x407db4
0x0000000000407eec : jmp 0x40807c
0x000000000041c41d : jmp 0x41f103
0x000000000041eeb1 : jmp 0x41f105
0x00000000004210bd : jmp 0x421635
0x00000000004258db : jmp 0x4258e6
0x000000000042654b : jmp 0x426556
0x000000000042407e : jmp 0xffffffffb704444a
0x0000000000425a9a : jmp 0xffffffffc3e6d33b
0x0000000000405445 : jmp qword ptr [rax]
0x000000000041d6af : jmp qword ptr [rbx]
0x000000000041f080 : jmp qword ptr [rcx]
0x000000000040e076 : jmp qword ptr [rdi]
0x000000000041f5d5 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000405287 : jmp qword ptr [rdx]
0x000000000041d63f : jmp qword ptr [rsi]
0x00000000004017a7 : jmp rax
0x000000000040bd52 : jmp rbx
0x0000000000414277 : jmp rdi
0x00000000004017e7 : jmp rdx
0x0000000000428103 : jmp rsi
0x000000000040bbed : jmp rsp
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x000000000041fd86 : jne 0x41fd8f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004253f2 : jne 0x4253a8 ; call 0x401634
0x0000000000405865 : jno 0x4058ae ; add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x00000000004058df : jno 0x405928 ; add byte ptr [rax - 0x77], cl ; ret 0x16e8
0x0000000000428781 : jns 0x428784 ; jmp qword ptr [rax]
0x00000000004057eb : jo 0x405834 ; add byte ptr [rax - 0x77], cl ; ret 0xae8
0x00000000004059c9 : jo 0x405959 ; adc al, 0x25 ; ret
0x0000000000415c1d : jo 0x415c25 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415c7d : jo 0x415c85 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ffa1 : jo 0x420002 ; ret
0x00000000004200c4 : jo 0x420125 ; ret
0x00000000004201fe : jo 0x42025f ; ret
0x00000000004223cc : jo 0x42242d ; ret
0x0000000000422924 : jo 0x422985 ; ret
0x00000000004275a4 : jo 0x427534 ; ret 0xbe30
0x00000000004288a1 : jp 0x4288a4 ; jmp qword ptr [rdx]
0x0000000000408073 : js 0x4080d4 ; ret
0x000000000041f0f6 : js 0x41f10a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000425a9c : js 0x425a44 ; ret
0x0000000000425ae3 : js 0x425a8b ; ret
0x0000000000425b1d : js 0x425ac5 ; ret
0x0000000000427ed7 : lcall ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xffff
0x0000000000405265 : lea edi, dword ptr [0x427019] ; call 0x4014a9
0x00000000004043c5 : leave ; ret
0x0000000000427585 : leave ; ret 0x3b81
0x0000000000413cd4 : ljmp ptr [rbp + 0x39] ; xchg eax, edx ; ret 0x15e9
0x00000000004057d8 : loopne 0x4057c4 ; ret 0x17
0x00000000004057bd : loopne 0x4057c6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408975 : loopne 0x4089ee ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041614b : loopne 0x41619b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041614a : loopne 0x41619c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004170ce : loopne 0x4170d7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422110 : loopne 0x422119 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042251c : loopne 0x42256c ; add esp, 0x40 ; pop rbp ; ret
0x000000000042251b : loopne 0x42256d ; add esp, 0x40 ; pop rbp ; ret
0x000000000042348c : loopne 0x423495 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428100 : loopne 0x4280e2 ; std ; jmp rsi
0x000000000040783a : mov ah, -0x5c ; ret 0xe908
0x0000000000401c70 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401806 : mov ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000427bcc : mov al, -0x69 ; std ; call qword ptr [rax]
0x00000000004251ca : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416611 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042312a : mov al, 0 ; call 0x401418
0x000000000040527b : mov al, 0 ; call 0x4014c4
0x0000000000405def : mov al, 0 ; call 0x401699
0x000000000041728b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004257ed : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042599d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426199 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a652 : mov bh, 8 ; ret 0x891d
0x00000000004080b1 : mov byte ptr [0x62a2e8], al ; pop rbp ; ret
0x000000000040383b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040357b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401803 : mov byte ptr [rip + 0x228aae], 1 ; ret
0x0000000000427471 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000402454 : mov ch, ch ; ret 0x8978
0x0000000000406f8f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004257f3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000405373 : mov dh, 0x7c ; add dword ptr [rcx], eax ; call 0x4015f6
0x00000000004262c5 : mov dl, -0x47 ; ret
0x000000000040808d : mov dword ptr [0x62a2e0], edi ; pop rbp ; ret
0x0000000000408474 : mov dword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000416f47 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000416d0b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000416e7f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000415338 : mov dword ptr [rbp - 0x110], ecx ; call 0x4015c8
0x0000000000416149 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ee9 : mov dword ptr [rbp - 0x34], eax ; jmp 0x40807f
0x0000000000401c6e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ac7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403e15 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004170fd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408735 : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000427c00 : mov eax, 0x50000004 ; ret 0xfffd
0x0000000000414cec : mov eax, 0x5b00000a ; pop rbp ; ret
0x0000000000405df3 : mov eax, 0x7fbeffff ; ret
0x0000000000407837 : mov eax, 0xa4b445c7 ; ret 0xe908
0x0000000000416bff : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042245b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408709 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042213f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040806d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000415f9c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042255e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421e30 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416f4a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042251a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416af4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416bfc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416d05 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004070b1 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000416e81 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041ff9b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004235ea : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000424040 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042291e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e19 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403e03 : mov eax, esi ; pop rbp ; ret
0x0000000000402fec : mov ebp, ebp ; ret 0x8978
0x0000000000403900 : mov ebp, ebp ; ret 0xb978
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000416d08 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x62a280 ; jmp rax
0x00000000004017e2 : mov edi, 0x62a280 ; jmp rdx
0x0000000000408731 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004253ed : mov edi, dword ptr [rbp - 0x64] ; mov rsi, qword ptr [rbp - 0x50] ; call 0x401639
0x0000000000405279 : mov edi, eax ; mov al, 0 ; call 0x4014c6
0x0000000000426907 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000426906 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042752b : mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004253f1 : mov esi, dword ptr [rbp - 0x50] ; call 0x401635
0x00000000004017e0 : mov esi, eax ; mov edi, 0x62a280 ; jmp rdx
0x00000000004030e5 : mov esp, 0xb800000c ; push 0x7d ; hlt ; ret 0xe3b9
0x000000000040808c : mov qword ptr [0x62a2e0], rdi ; pop rbp ; ret
0x0000000000408473 : mov qword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000415337 : mov qword ptr [rbp - 0x110], rcx ; call 0x4015c9
0x0000000000403e14 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004170fc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408734 : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000407839 : mov r12b, -0x5c ; ret 0xe908
0x0000000000401c6f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407836 : mov r8d, 0xa4b445c7 ; ret 0xe908
0x000000000042245a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408708 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042213e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040806c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000415f9b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042255d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421e2f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422519 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416af3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416bfb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070b0 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000041ff9a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e18 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403e02 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000408730 : mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000405278 : mov rdi, rax ; mov al, 0 ; call 0x4014c7
0x00000000004253f0 : mov rsi, qword ptr [rbp - 0x50] ; call 0x401636
0x00000000004017df : mov rsi, rax ; mov edi, 0x62a280 ; jmp rdx
0x000000000041fd8a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041fd8b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000041d4dc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000042653e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000406c59 : movabs byte ptr [0x940f000000000062], al ; ret 0xd284
0x0000000000406ca5 : movabs byte ptr [0x950f000000010062], al ; ret 0xd284
0x000000000040c44e : movabs eax, dword ptr [0xfff9fc85c7000088] ; call qword ptr [rax]
0x000000000042825c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ah ; add bh, dh ; call rdi
0x00000000004210bc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x421636
0x0000000000425a9d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000407478 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8908
0x000000000040783b : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe908
0x0000000000406f8e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004257f2 : movzx eax, al ; pop rbp ; ret
0x0000000000405372 : movzx edi, byte ptr [rcx + rax + 1] ; call 0x4015f7
0x0000000000405312 : movzx edi, byte ptr [rcx + rax] ; call 0x4015f6
0x00000000004288a0 : nop ; jp 0x4288a5 ; jmp qword ptr [rdx]
0x0000000000427bd4 : nop ; wait ; std ; jmp rax
0x0000000000426928 : nop dword ptr [rax + rax] ; ret
0x000000000041f0f7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406c90 : or al, 0xffffffffffffffc0 ; jmp 0x406da1
0x0000000000414ced : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406f6d : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042757d : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000420767 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040346a : or dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret
0x0000000000420181 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427580 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000042599f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004257ef : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042752a : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x000000000042691c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042691e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f422 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426920 : pop r14 ; pop r15 ; ret
0x000000000041f424 : pop r15 ; pop rbp ; ret
0x0000000000426922 : pop r15 ; ret
0x00000000004154cf : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000426018 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x00000000004023ac : pop rbp ; call rcx
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x228aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x62a280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x62a280 ; jmp rdx
0x000000000042691b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042691f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x000000000041f421 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414cf0 : pop rbx ; pop rbp ; ret
0x0000000000427474 : pop rbx ; ret 0x3956
0x00000000004262c4 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004058de : pop rdi ; jno 0x405929 ; add byte ptr [rax - 0x77], cl ; ret 0x16e8
0x000000000041f425 : pop rdi ; pop rbp ; ret
0x0000000000426923 : pop rdi ; ret
0x000000000042670b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041f423 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426921 : pop rsi ; pop r15 ; ret
0x0000000000406ade : pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000402358 : pop rsp ; call rcx
0x000000000042691d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419332 : pop rsp ; ret
0x000000000040647b : popfq ; jae 0x40643f ; ret
0x0000000000406b1f : popfq ; jae 0x406ae3 ; ret
0x00000000004260d9 : popfq ; ret 0xd284
0x000000000042757e : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040209c : push 0x7d ; hlt ; ret 0x8589
0x00000000004030ea : push 0x7d ; hlt ; ret 0xe3b9
0x000000000041eb1f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000408476 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428900 : push rax ; jge 0x428905 ; jmp rdx
0x0000000000401a82 : push rax ; pop rbp ; ret
0x0000000000427c04 : push rax ; ret 0xfffd
0x0000000000421a1b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000422323 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041cc58 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041ce3e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000041cee4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000041cf12 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000041cfe0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000041d176 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401824 : push rbp ; mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x000000000041523e : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x0000000000402082 : push rsp ; ret
0x0000000000406430 : pushfq ; jae 0x4063f4 ; ret
0x00000000004253ef : pushfq ; mov rsi, qword ptr [rbp - 0x50] ; call 0x401637
0x0000000000425433 : pushfq ; ret 0x8445
0x0000000000403841 : pushfq ; ret 0xd284
0x0000000000401361 : ret
0x000000000040930f : ret 0
0x00000000004245d9 : ret 0x10
0x0000000000413cd8 : ret 0x15e9
0x00000000004058e4 : ret 0x16e8
0x00000000004057da : ret 0x17
0x0000000000402ae4 : ret 0x1ef
0x0000000000412d2d : ret 0x1f
0x00000000004261cb : ret 0x2030
0x0000000000427659 : ret 0x21c0
0x0000000000401722 : ret 0x228a
0x0000000000401522 : ret 0x228b
0x000000000041c637 : ret 0x2a
0x000000000041f956 : ret 0x2c1
0x0000000000427475 : ret 0x3956
0x0000000000427586 : ret 0x3b81
0x0000000000407093 : ret 0x4240
0x000000000041959a : ret 0x43fa
0x0000000000415242 : ret 0x58
0x0000000000423793 : ret 0x5e5
0x00000000004033f5 : ret 0x62a2
0x000000000040b14e : ret 0x6c
0x0000000000404974 : ret 0x7214
0x00000000004154d5 : ret 0x80
0x0000000000406ae5 : ret 0x8041
0x0000000000403099 : ret 0x8445
0x0000000000402013 : ret 0x8589
0x0000000000407367 : ret 0x8908
0x0000000000419430 : ret 0x891a
0x000000000040a654 : ret 0x891d
0x0000000000425b7c : ret 0x8934
0x000000000041532f : ret 0x8948
0x0000000000402456 : ret 0x8978
0x0000000000424081 : ret 0x89b6
0x00000000004079bf : ret 0x8a7d
0x0000000000425b58 : ret 0x8b34
0x00000000004051a5 : ret 0x8b48
0x000000000040586a : ret 0x90e8
0x000000000040aa7a : ret 0x9797
0x0000000000422d6b : ret 0xa4be
0x0000000000427530 : ret 0xa88f
0x000000000041d305 : ret 0xa9b9
0x000000000041e2b0 : ret 0xaae8
0x0000000000418d82 : ret 0xade6
0x00000000004057f0 : ret 0xae8
0x0000000000406782 : ret 0xae80
0x00000000004035ab : ret 0xb0
0x000000000040ad36 : ret 0xb8af
0x000000000041ca70 : ret 0xb91a
0x0000000000403902 : ret 0xb978
0x000000000042433b : ret 0xb9b6
0x00000000004275a7 : ret 0xbe30
0x00000000004017c5 : ret 0xc148
0x0000000000403582 : ret 0xd284
0x000000000041eb23 : ret 0xd4e9
0x000000000040aab3 : ret 0xda05
0x0000000000408cdb : ret 0xdfe8
0x0000000000403e8e : ret 0xe280
0x00000000004030ed : ret 0xe3b9
0x000000000040783d : ret 0xe908
0x00000000004149f8 : ret 0xe91d
0x0000000000404107 : ret 0xeb78
0x000000000041f13c : ret 0xee8
0x000000000041d4e5 : ret 0xf41
0x0000000000416aea : ret 0xfea8
0x000000000041cc5b : ret 0xff9f
0x000000000041e5fe : ret 0xffa5
0x000000000041ce41 : ret 0xffbf
0x000000000041d8ab : ret 0xffc4
0x000000000041cee7 : ret 0xffc5
0x000000000041cf15 : ret 0xffd5
0x000000000041cfe3 : ret 0xffd8
0x000000000041d951 : ret 0xffd9
0x000000000041d179 : ret 0xffe0
0x000000000041c24e : ret 0xfffa
0x0000000000405edc : ret 0xfffb
0x00000000004253f6 : ret 0xfffd
0x0000000000415340 : ret 0xfffe
0x000000000040526e : ret 0xffff
0x00000000004038a5 : ret 1
0x000000000041d7b0 : ret 2
0x000000000040738a : ret 3
0x000000000041ec37 : ret 4
0x0000000000420798 : ret 5
0x000000000041f320 : ret 8
0x00000000004164ea : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000425124 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425735 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416d06 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x0000000000406f90 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000407909 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041523f : ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x0000000000416d07 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000422320 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004164c4 : sahf ; ret 0xd284
0x00000000004275a3 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004247fe : salc ; ret
0x0000000000403765 : salc ; xor byte ptr [rip + 0x25148a31], ah ; ret 0x62a2
0x00000000004281c0 : sar dh, -3 ; call qword ptr [rsi]
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x0000000000427bfd : sar ebp, -1 ; mov eax, 0x50000004 ; ret 0xfffd
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000427fd4 : sbb al, 0 ; add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; jmp rax
0x00000000004043c3 : sbb bl, byte ptr [rbx] ; leave ; ret
0x000000000041fdb9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042759e : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x42753a ; ret 0xbe30
0x0000000000421f03 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d2fe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000406b1a : sbb eax, 0xb9de2350 ; popfq ; jae 0x406ae8 ; ret
0x0000000000404417 : sbb ebx, dword ptr [rbx] ; leave ; ret
0x00000000004043c4 : sbb ecx, ecx ; ret
0x0000000000427581 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x0000000000401805 : scasb al, byte ptr [rdi] ; mov ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004057ea : scasd eax, dword ptr [rdi] ; jo 0x405835 ; add byte ptr [rax - 0x77], cl ; ret 0xae8
0x0000000000406add : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000427bce : std ; call qword ptr [rax]
0x00000000004281c2 : std ; call qword ptr [rsi]
0x0000000000427bd6 : std ; jmp rax
0x0000000000428102 : std ; jmp rsi
0x000000000041a347 : sub al, 0x38 ; ret 0x8589
0x000000000041d303 : sub al, 0x38 ; ret 0xa9b9
0x0000000000403dfd : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000042695d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042695c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000421a3b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042759f : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000425578 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ff9d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000421918 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042692a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414ee6 : test byte ptr [rbp - 0x16fffffb], ah ; ret 1
0x0000000000420765 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000421a20 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000421788 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000040ab93 : test dword ptr [rdx], ebx ; ret
0x0000000000409382 : test dword ptr [rsi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x0000000000415982 : test dword ptr [rsi + rdi*8 - 1], ebp ; jmp rsp
0x00000000004033da : test ebx, esi ; jbe 0x4033cb ; ret
0x000000000040ace2 : test qword ptr [r10], rbx ; ret
0x000000000040ab92 : test qword ptr [rdx], rbx ; ret
0x0000000000403763 : ud2b ; salc ; xor byte ptr [rip + 0x25148a31], ah ; ret 0x62a2
0x000000000040930c : wait ; adc ecx, ebp ; ret 0
0x0000000000427bd5 : wait ; std ; jmp rax
0x000000000040587f : xchg eax, ebp ; cmp ah, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000417331 : xchg eax, ebp ; ret
0x0000000000403098 : xchg eax, ebp ; ret 0x8445
0x0000000000403581 : xchg eax, ebp ; ret 0xd284
0x0000000000406d64 : xchg eax, ebp ; ret 0xe280
0x0000000000422a9b : xchg eax, ebx ; ret
0x00000000004152a6 : xchg eax, ebx ; ret 0xd284
0x0000000000427fd9 : xchg eax, ebx ; std ; jmp rax
0x000000000041a32b : xchg eax, ecx ; ret
0x00000000004275a0 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004275a1 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000409355 : xchg eax, edi ; ret 0xd284
0x0000000000427bcd : xchg eax, edi ; std ; call qword ptr [rax]
0x000000000041a47b : xchg eax, edx ; ret
0x0000000000413cd7 : xchg eax, edx ; ret 0x15e9
0x0000000000406af9 : xchg eax, edx ; ret 0x8445
0x000000000040abb0 : xchg eax, edx ; ret 0x8589
0x000000000040897b : xchg eax, edx ; ret 0xd284
0x000000000041fcb2 : xchg eax, esi ; ret
0x0000000000417313 : xchg eax, esp ; ret
0x0000000000406ae4 : xchg eax, esp ; ret 0x8041
0x000000000040921e : xchg eax, esp ; ret 0x8445
0x0000000000405734 : xchg eax, esp ; ret 0xd284
0x0000000000403e8d : xchg eax, esp ; ret 0xe280
0x00000000004058dc : xor al, 0x25 ; pop rdi ; jno 0x40592b ; add byte ptr [rax - 0x77], cl ; ret 0x16e8
0x00000000004057e8 : xor al, 0x25 ; scasd eax, dword ptr [rdi] ; jo 0x405837 ; add byte ptr [rax - 0x77], cl ; ret 0xae8
0x00000000004037ce : xor byte ptr [rbp + rbx*4 - 0x76], cl ; adc al, 0x25 ; ret
0x000000000041551e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004093cf : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403766 : xor byte ptr [rip + 0x25148a31], ah ; ret 0x62a2
0x00000000004202b7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000416e7d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
