0x00000000004054c3 : adc al, -0x1d ; and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000041240b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fac9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004176f5 : add al, 0 ; add byte ptr [rax], cl ; mov edi, edi ; jmp qword ptr [rdx]
0x000000000041716b : add al, ah ; ret 0xffff
0x0000000000416f83 : add al, al ; xchg bh, bh ; call rax
0x00000000004173d7 : add al, bh ; mov bh, -2 ; call qword ptr [rsi]
0x0000000000417817 : add al, bl ; mov edi, dr1 ; jmp qword ptr [rax]
0x0000000000411d03 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406382 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004173b7 : add al, ch ; mov bh, -2 ; jmp qword ptr [rdi]
0x0000000000411ce7 : add al, ch ; ret
0x0000000000417193 : add al, dl ; loopne 0x41719a ; call qword ptr [rax]
0x00000000004120fe : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411e66 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000416f55 : add bh, bh ; call qword ptr [rax]
0x0000000000416f45 : add bh, bh ; call rax
0x000000000041649f : add bl, dh ; ret
0x000000000040287a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000416f44 : add byte ptr [rax], -1 ; call rax
0x0000000000416f93 : add byte ptr [rax], ah ; mov edi, dr1 ; call qword ptr [rax]
0x00000000004120fc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411e64 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041649d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402878 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000416f42 : add byte ptr [rax], al ; add byte ptr [rax], -1 ; call rax
0x000000000041649b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004025f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041649c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f80e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415b89 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000415b05 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004147ce : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040e6c1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000415c45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000402799 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404e0b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000415488 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040771d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004025f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041434d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411ffa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004076ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040e17b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404fed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041544d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004173b2 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, ch ; mov bh, -2 ; jmp qword ptr [rdi]
0x00000000004173d2 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, bh ; mov bh, -2 ; call qword ptr [rsi]
0x000000000040facb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f530 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415008 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041240d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fa87 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004011b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000417936 : add byte ptr [rax], al ; call 0x234178cf
0x00000000004173b6 : add byte ptr [rax], al ; call 0x28417279
0x0000000000417a56 : add byte ptr [rax], al ; call 0x284179f2
0x00000000004173d6 : add byte ptr [rax], al ; clc ; mov bh, -2 ; call qword ptr [rsi]
0x0000000000417a52 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; call 0x284179f6
0x00000000004012c9 : add byte ptr [rax], al ; jmp 0x4011c9
0x0000000000415449 : add byte ptr [rax], al ; jmp 0x415458
0x00000000004160b9 : add byte ptr [rax], al ; jmp 0x4160c8
0x00000000004162c7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000410a2a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410b5d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410cb9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bbd : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ad1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041812a : add byte ptr [rax], al ; mov esp, 0xa000000e ; jrcxz 0x41813b ; call qword ptr [rax]
0x0000000000403219 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406fe9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416f52 : add byte ptr [rax], al ; nop ; add bh, bh ; call qword ptr [rax]
0x0000000000402b5a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f80f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f4e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041649e : add byte ptr [rax], al ; ret
0x00000000004171d2 : add byte ptr [rax], al ; shr cl, -1 ; call qword ptr [rax]
0x00000000004176f2 : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add byte ptr [rax], cl ; mov edi, edi ; jmp qword ptr [rdx]
0x00000000004176f7 : add byte ptr [rax], cl ; mov edi, edi ; jmp qword ptr [rdx]
0x000000000040f810 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f4e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415b8b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000415b07 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004147d0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040e6c3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004173d3 : add byte ptr [rcx + rax], ah ; add al, bh ; mov bh, -2 ; call qword ptr [rsi]
0x0000000000402b75 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004173b3 : add byte ptr [rcx + rax], al ; add al, ch ; mov bh, -2 ; jmp qword ptr [rdi]
0x000000000041214e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004015e8 : add byte ptr [rcx], al ; ret
0x0000000000410cea : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415c47 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040279b : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404e0d : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000041548a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040771f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004025fa : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041434f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000411ffc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000407701 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040e17d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404fef : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401e67 : add cl, ch ; ret
0x000000000041544f : add cl, ch ; ret 0
0x0000000000406384 : add cl, ch ; ret 1
0x00000000004173d5 : add dword ptr [rax], eax ; add al, bh ; mov bh, -2 ; call qword ptr [rsi]
0x00000000004173b5 : add dword ptr [rax], eax ; add al, ch ; mov bh, -2 ; jmp qword ptr [rdi]
0x000000000040fa85 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004101aa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004173b4 : add dword ptr [rax], r8d ; add al, ch ; mov bh, -2 ; jmp qword ptr [rdi]
0x0000000000402b77 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004173d4 : add dword ptr fs:[rax], eax ; add al, bh ; mov bh, -2 ; call qword ptr [rsi]
0x00000000004015e4 : add eax, 0x217cae ; add ebx, esi ; ret
0x0000000000405791 : add eax, 0x58b80000 ; ret
0x00000000004015ab : add eax, edx ; sar rax, 1 ; jne 0x4015bc ; pop rbp ; ret
0x00000000004015e9 : add ebx, esi ; ret
0x000000000040183b : add esp, 0x10 ; pop rbp ; ret
0x000000000041214c : add esp, 0x100 ; pop rbp ; ret
0x00000000004101a7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004122bc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040f533 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402b56 : add esp, 0x230 ; pop rbp ; ret
0x0000000000414ad3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041500b : add esp, 0x30 ; pop rbp ; ret
0x0000000000403387 : add esp, 0x40 ; pop rbp ; ret
0x0000000000405d03 : add esp, 0x450 ; pop rbp ; ret
0x00000000004017f4 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402f06 : add esp, 0x60 ; pop rbp ; ret
0x000000000041038f : add esp, 0x70 ; pop rbp ; ret
0x00000000004109fc : add esp, 0x80 ; pop rbp ; ret
0x00000000004137f2 : add esp, 0x90 ; pop rbp ; ret
0x0000000000406dae : add esp, 0xa0 ; pop rbp ; ret
0x000000000040f4e4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000405ebd : add esp, 0xd0 ; pop rbp ; ret
0x00000000004069f6 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004011b6 : add esp, 8 ; ret
0x00000000004015aa : add rax, rdx ; sar rax, 1 ; jne 0x4015bd ; pop rbp ; ret
0x000000000040183a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041214b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004101a6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004122bb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040f532 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b55 : add rsp, 0x230 ; pop rbp ; ret
0x0000000000414ad2 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041500a : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403386 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405d02 : add rsp, 0x450 ; pop rbp ; ret
0x00000000004017f3 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f05 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041038e : add rsp, 0x70 ; pop rbp ; ret
0x00000000004109fb : add rsp, 0x80 ; pop rbp ; ret
0x00000000004137f1 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406dad : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f4e3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000405ebc : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004069f5 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004011b5 : add rsp, 8 ; ret
0x00000000004054c5 : and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x0000000000402b76 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015e7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000402bdf : and eax, 0x6192a0 ; pop rbp ; ret
0x0000000000402c03 : and eax, 0x6192a8 ; pop rbp ; ret
0x0000000000417938 : call 0x234178cd
0x00000000004173b8 : call 0x28417277
0x0000000000417a58 : call 0x284179f0
0x0000000000415284 : call 0x4014d2
0x000000000040f529 : call 0xffffffffe9037e79
0x000000000040f528 : call 0xffffffffe9037e7a
0x000000000040af6d : call 0xfffffffff7393504
0x0000000000414595 : call 0xffffffffff45cb6a
0x000000000040da99 : call 0xffffffffff55606b
0x000000000040da98 : call 0xffffffffff55606c
0x000000000040da99 : call 0xffffffffff55606d
0x000000000040da98 : call 0xffffffffff55606e
0x0000000000416479 : call qword ptr [r12 + rbx*8]
0x000000000040ce26 : call qword ptr [rax]
0x000000000040eab5 : call qword ptr [rcx]
0x0000000000404203 : call qword ptr [rdi]
0x000000000040ca53 : call qword ptr [rdx]
0x000000000040c9ef : call qword ptr [rsi]
0x000000000041647a : call qword ptr [rsp + rbx*8]
0x000000000040160d : call rax
0x000000000040b20a : call rbx
0x00000000004056b1 : call rdi
0x0000000000405c4f : call rdx
0x0000000000412104 : call rsi
0x000000000040507d : call rsp
0x0000000000415b0c : cdq ; ret
0x0000000000410b60 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b54 : clc ; add rsp, 0x230 ; pop rbp ; ret
0x00000000004133e2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000414de0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004015af : clc ; jne 0x4015b8 ; pop rbp ; ret
0x00000000004173d8 : clc ; mov bh, -2 ; call qword ptr [rsi]
0x0000000000402b97 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b8c : clc ; pop rbp ; ret
0x0000000000401867 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d16 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405d19 : cld ; pop rbp ; ret
0x000000000040d6ed : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000413b9d : cmp al, -0x2a ; ret
0x000000000040156d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401580 ; pop rbp ; ret
0x000000000040f9c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041560b : cwde ; js 0x4155b5 ; ret
0x0000000000415652 : cwde ; js 0x4155fc ; ret
0x000000000041568c : cwde ; js 0x415636 ; ret
0x0000000000402b88 : dec dword ptr [rax - 0x77] ; jge 0x402b8b ; pop rbp ; ret
0x00000000004114c7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040d892 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040db9d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040f0a4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040637e : dec dword ptr [rdi] ; test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000410e43 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040cbd8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040271b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041434b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040281e : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412e54 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004109d9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417185 : fdiv st(7), st(0) ; call rax
0x0000000000412a04 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415280 : fmul dword ptr [rbx + 0x47e8d455] ; ret 0xfffe
0x000000000041647c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401839 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414f3c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401580 : hlt ; pop rbp ; mov edi, 0x619240 ; jmp rax
0x000000000041179e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040d049 : in al, -0x7f ; ret 0xff9f
0x000000000040d22f : in al, -0x7f ; ret 0xffbf
0x000000000040d2d5 : in al, -0x7f ; ret 0xffc5
0x00000000004054c8 : in al, -0x7f ; ret 0xffd0
0x000000000040d303 : in al, -0x7f ; ret 0xffd5
0x000000000040d3d1 : in al, -0x7f ; ret 0xffd8
0x000000000040d567 : in al, -0x7f ; ret 0xffe0
0x0000000000417a54 : in al, 7 ; add byte ptr [rax], al ; call 0x284179f4
0x000000000041314f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004070fa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b73 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000405d13 : in eax, -0x77 ; jge 0x405d1b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000410a43 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000415d0b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e6bf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040cc81 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f26a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402470 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000405545 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000405b84 : inc dword ptr [rcx] ; jmp 0x405d13
0x0000000000410178 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000406381 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040981f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040ce5f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401573 : ja 0x40157a ; pop rbp ; ret
0x000000000040157f : je 0x40157d ; pop rbp ; mov edi, 0x619240 ; jmp rax
0x0000000000402b8b : jge 0x402b88 ; pop rbp ; ret
0x0000000000402b96 : jge 0x402b97 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d15 : jge 0x405d19 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000410a46 : jge 0x410a43 ; pop rbp ; ret
0x00000000004112b8 : jge 0x4112cf ; ret
0x00000000004117a3 : jge 0x4117ba ; ret
0x0000000000416279 : jge 0x416273 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004015e6 : jl 0x40160e ; add byte ptr [rcx], al ; ret
0x000000000041118c : jl 0x4111a3 ; ret
0x00000000004012cb : jmp 0x4011c7
0x0000000000405b53 : jmp 0x405d11
0x000000000040578f : jmp 0x405d12
0x000000000040c80d : jmp 0x40f4f3
0x000000000040f2a1 : jmp 0x40f4f5
0x000000000041179d : jmp 0x411d15
0x000000000041544b : jmp 0x415456
0x00000000004160bb : jmp 0x4160c6
0x000000000041341e : jmp 0xffffffffb70337ea
0x000000000041560a : jmp 0xffffffffc3e5ceab
0x000000000040c92d : jmp qword ptr [rax]
0x000000000040da9f : jmp qword ptr [rbx]
0x00000000004065a5 : jmp qword ptr [rcx]
0x00000000004173bb : jmp qword ptr [rdi]
0x000000000040f9c5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040af76 : jmp qword ptr [rdx]
0x000000000040da2f : jmp qword ptr [rsi]
0x0000000000401587 : jmp rax
0x0000000000405aa8 : jmp rbx
0x0000000000405358 : jmp rdi
0x00000000004015c7 : jmp rdx
0x000000000040e659 : jmp rsp
0x00000000004015b0 : jne 0x4015b7 ; pop rbp ; ret
0x0000000000410176 : jne 0x41017f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041527f : jne 0x415260 ; mov edx, dword ptr [rbp - 0x2c] ; call 0x4014d7
0x0000000000410391 : jo 0x4103f2 ; ret
0x00000000004104b4 : jo 0x410515 ; ret
0x00000000004105ee : jo 0x41064f ; ret
0x0000000000412aac : jo 0x412b0d ; ret
0x0000000000414de4 : jo 0x414e45 ; ret
0x0000000000418131 : jrcxz 0x418134 ; call qword ptr [rax]
0x000000000040f4e6 : js 0x40f4fa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041560c : js 0x4155b4 ; ret
0x0000000000415653 : js 0x4155fb ; ret
0x000000000041568d : js 0x415635 ; ret
0x00000000004069f8 : loopne 0x4069ff ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004074be : loopne 0x4074c7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004127f0 : loopne 0x4127f9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412bfc : loopne 0x412c4c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000412bfb : loopne 0x412c4d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000417195 : loopne 0x417198 ; call qword ptr [rax]
0x0000000000406635 : mov ah, -0x17 ; ret
0x0000000000401a10 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041456a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b74 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040767b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000416f40 : mov al, 6 ; add byte ptr [rax], al ; add byte ptr [rax], -1 ; call rax
0x000000000041535d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041550d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415d09 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410cec : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417115 : mov bh, -1 ; call qword ptr [rax]
0x00000000004173d9 : mov bh, -2 ; call qword ptr [rsi]
0x00000000004173b9 : mov bh, -2 ; jmp qword ptr [rdi]
0x0000000000402c01 : mov byte ptr [0x6192a8], al ; pop rbp ; ret
0x000000000040f038 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004015e3 : mov byte ptr [rip + 0x217cae], 1 ; ret
0x0000000000417105 : mov ch, -1 ; call rax
0x0000000000402b79 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415e35 : mov dl, -0x47 ; ret
0x0000000000402bdd : mov dword ptr [0x6192a0], edi ; pop rbp ; ret
0x0000000000407337 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004070fb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040726f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401a0e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401837 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401865 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d14 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402b95 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b8a : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004074ed : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406fef : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405d7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403383 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041281f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040321c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000412c3e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412510 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040733a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412bfa : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ee4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406fec : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070f5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407271 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041038b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414f3a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405d17 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004133e0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000414dde : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402b99 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410a2c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410b5f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410cbb : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bbf : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ad3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040160b : mov ebp, esp ; call rax
0x0000000000401571 : mov ebp, esp ; ja 0x40157c ; pop rbp ; ret
0x0000000000405d12 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000410a42 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004070f8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401605 : mov edi, 0x618e20 ; mov rbp, rsp ; call rax
0x0000000000401582 : mov edi, 0x619240 ; jmp rax
0x00000000004015c2 : mov edi, 0x619240 ; jmp rdx
0x0000000000416f95 : mov edi, dr1 ; call qword ptr [rax]
0x0000000000417819 : mov edi, dr1 ; jmp qword ptr [rax]
0x0000000000416477 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004176f9 : mov edi, edi ; jmp qword ptr [rdx]
0x0000000000416476 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000415281 : mov edx, dword ptr [rbp - 0x2c] ; call 0x4014d5
0x000000000041527e : mov esi, dword ptr [rbp - 0x28] ; mov edx, dword ptr [rbp - 0x2c] ; call 0x4014d8
0x00000000004015c0 : mov esi, eax ; mov edi, 0x619240 ; jmp rdx
0x000000000041812c : mov esp, 0xa000000e ; jrcxz 0x418139 ; call qword ptr [rax]
0x0000000000401607 : mov fs, word ptr [rcx] ; mov rbp, rsp ; call rax
0x0000000000402bdc : mov qword ptr [0x6192a0], rdi ; pop rbp ; ret
0x0000000000402b94 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b89 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004074ec : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406634 : mov r12b, -0x17 ; ret
0x0000000000401a0f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405d7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403382 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041281e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040321b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000412c3d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041250f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412bf9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ee3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406feb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041038a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402b98 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040160a : mov rbp, rsp ; call rax
0x0000000000401570 : mov rbp, rsp ; ja 0x40157d ; pop rbp ; ret
0x0000000000410a41 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041527d : mov rsi, qword ptr [rbp - 0x28] ; mov edx, dword ptr [rbp - 0x2c] ; call 0x4014d9
0x00000000004015bf : mov rsi, rax ; mov edi, 0x619240 ; jmp rdx
0x000000000041017a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041017b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040560a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d8cc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004160ae : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041179c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x411d16
0x000000000041560d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000402b78 : movzx eax, al ; pop rbp ; ret
0x0000000000410ceb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416f54 : nop ; add bh, bh ; call qword ptr [rax]
0x0000000000416498 : nop dword ptr [rax + rax] ; ret
0x000000000040f4e7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404fe9 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000404e07 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000410e47 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000410571 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041550f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041535f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041648c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041648e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f812 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416490 : pop r14 ; pop r15 ; ret
0x000000000040f814 : pop r15 ; pop rbp ; ret
0x0000000000416492 : pop r15 ; ret
0x0000000000415b88 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000040461f : pop rax ; ret
0x00000000004015e2 : pop rbp ; mov byte ptr [rip + 0x217cae], 1 ; ret
0x0000000000401581 : pop rbp ; mov edi, 0x619240 ; jmp rax
0x00000000004015be : pop rbp ; mov rsi, rax ; mov edi, 0x619240 ; jmp rdx
0x000000000041648b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041648f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401575 : pop rbp ; ret
0x000000000040f811 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f4ea : pop rbx ; pop rbp ; ret
0x0000000000415e34 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040f815 : pop rdi ; pop rbp ; ret
0x0000000000416493 : pop rdi ; ret
0x000000000041627b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040f813 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416491 : pop rsi ; pop r15 ; ret
0x000000000041648d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409722 : pop rsp ; ret
0x0000000000415c49 : popfq ; ret 0xd284
0x0000000000411804 : push -0x17000002 ; ret
0x000000000041717f : push qword ptr [rax + 0x6000000f] ; fdiv st(7), st(0) ; call rax
0x0000000000416f7f : push qword ptr [rax - 0x3ffffff9] ; xchg bh, bh ; call rax
0x0000000000416eff : push qword ptr [rax - 0x4ffffffb] ; ret
0x00000000004170ff : push qword ptr [rax - 0x5ffffff3] ; mov ch, -1 ; call rax
0x0000000000416f3f : push qword ptr [rax - 0x7ffffffa] ; add bh, bh ; call rax
0x000000000040ef0f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004017f6 : push rax ; pop rbp ; ret
0x00000000004120fb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412a03 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040d048 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040d22e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040d2d4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004054c7 : push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000040d302 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040d3d0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040d566 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401604 : push rbp ; mov edi, 0x618e20 ; mov rbp, rsp ; call rax
0x0000000000410a40 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004045cb : push rdi ; ret
0x00000000004147d3 : pushfq ; ret 0x8445
0x000000000040279d : pushfq ; ret 0xd284
0x0000000000404e0f : pushfq ; ret 0xe280
0x00000000004011b9 : ret
0x000000000040f9c9 : ret 0
0x0000000000413979 : ret 0x10
0x0000000000415d3b : ret 0x2030
0x00000000004014d2 : ret 0x217c
0x00000000004012d2 : ret 0x217d
0x000000000040ca27 : ret 0x2a
0x000000000040fd46 : ret 0x2c1
0x000000000040998a : ret 0x43fa
0x00000000004028fb : ret 0x4589
0x000000000040e6a0 : ret 0x5ae8
0x00000000004150e3 : ret 0x5e5
0x00000000004044b3 : ret 0x83a1
0x0000000000402474 : ret 0x8445
0x000000000040a739 : ret 0x8589
0x0000000000409820 : ret 0x891a
0x00000000004156ec : ret 0x8934
0x0000000000412a07 : ret 0x8948
0x0000000000413421 : ret 0x89b6
0x00000000004156c8 : ret 0x8b34
0x000000000040e685 : ret 0x8b48
0x000000000040d6f5 : ret 0xa9b9
0x0000000000409172 : ret 0xade6
0x0000000000402623 : ret 0xb0
0x000000000040ce60 : ret 0xb91a
0x00000000004136db : ret 0xb9b6
0x00000000004015a5 : ret 0xc148
0x00000000004025fd : ret 0xd284
0x000000000040ef13 : ret 0xd4e9
0x0000000000403b67 : ret 0xd58d
0x0000000000404e10 : ret 0xe280
0x000000000040f52c : ret 0xee8
0x000000000040d8d5 : ret 0xf41
0x000000000040d04b : ret 0xff9f
0x0000000000406c2a : ret 0xffa5
0x000000000040d231 : ret 0xffbf
0x000000000040dc9b : ret 0xffc4
0x000000000040d2d7 : ret 0xffc5
0x00000000004054ca : ret 0xffd0
0x000000000040d305 : ret 0xffd5
0x000000000040d3d3 : ret 0xffd8
0x000000000040dd41 : ret 0xffd9
0x000000000040d569 : ret 0xffe0
0x000000000040c63e : ret 0xfffa
0x0000000000415286 : ret 0xfffe
0x000000000041716d : ret 0xffff
0x0000000000406386 : ret 1
0x000000000040639a : ret 2
0x000000000040f027 : ret 4
0x0000000000410e78 : ret 5
0x0000000000401d38 : ret 6
0x000000000040f710 : ret 8
0x0000000000401c89 : ret 9
0x00000000004069c8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004144c4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405ebf : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414ad5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004070f6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004015ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4015bb ; pop rbp ; ret
0x00000000004070f7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000412a00 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041548c : sahf ; ret 0xd284
0x0000000000413b9e : salc ; ret
0x00000000004015ae : sar eax, 1 ; jne 0x4015b9 ; pop rbp ; ret
0x00000000004015ad : sar rax, 1 ; jne 0x4015ba ; pop rbp ; ret
0x00000000004101a9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004125e3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d6ee : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004011b1 : sbb eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004015e5 : scasb al, byte ptr [rdi] ; jl 0x40160f ; add byte ptr [rcx], al ; ret
0x00000000004171d4 : shr cl, -1 ; call qword ptr [rax]
0x0000000000404feb : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000040a737 : sub al, 0x38 ; ret 0x8589
0x000000000040d6f3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000404fec : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004164e1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004164e0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041211b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000417c79 : test al, -1 ; call rdx
0x0000000000414918 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041038d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000411ff8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004176f4 : test byte ptr [rax + rax], al ; add byte ptr [rax], cl ; mov edi, edi ; jmp qword ptr [rdx]
0x000000000041649a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406380 : test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000410e45 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000412100 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000411e68 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000416f85 : xchg bh, bh ; call rax
0x0000000000407721 : xchg eax, ebp ; ret
0x0000000000402473 : xchg eax, ebp ; ret 0x8445
0x00000000004025fc : xchg eax, ebp ; ret 0xd284
0x000000000040a71b : xchg eax, ecx ; ret
0x0000000000414351 : xchg eax, edi ; ret 0xd284
0x000000000040a86b : xchg eax, edx ; ret
0x0000000000404d94 : xchg eax, edx ; ret 0x8445
0x0000000000411ffe : xchg eax, edx ; ret 0xd284
0x00000000004100a2 : xchg eax, esi ; ret
0x0000000000407703 : xchg eax, esp ; ret
0x000000000040e6c6 : xchg eax, esp ; ret 0x8445
0x000000000040cbda : xchg eax, esp ; ret 0xd284
0x0000000000404ff1 : xchg eax, esp ; ret 0xe280
0x0000000000402b58 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004106a7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040726d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
