0x000000000040bb63 : adc al, -0x64 ; ret
0x000000000041060f : adc al, -1 ; inc edi ; cwde ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x0000000000404afa : adc al, 0x25 ; mov eax, 0x81006396 ; ret 1
0x0000000000436ac9 : adc byte ptr [rax], al ; add al, dl ; add edi, edi ; call rax
0x0000000000436ad9 : adc byte ptr [rax], al ; add byte ptr [rax], ah ; add bh, bh ; call qword ptr [rax]
0x000000000041161a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004262eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421919 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000436ec3 : add ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax], cl ; std ; jmp qword ptr [rcx]
0x00000000004370c3 : add ah, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x2a], bl ; std ; call qword ptr [rbx]
0x0000000000436fa3 : add ah, al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x3d], ch ; std ; call qword ptr [rax]
0x0000000000437185 : add al, 0 ; add byte ptr [rax - 0x21], bl ; std ; call qword ptr [rsi]
0x0000000000437125 : add al, 0 ; add byte ptr [rax - 0x24], bh ; std ; call qword ptr [rsi]
0x00000000004121e0 : add al, 0 ; add byte ptr [rbx + 0x3a2dbc45], cl ; ret 0x2f73
0x000000000042bba3 : add al, 0 ; add cl, ch ; ret 1
0x0000000000425869 : add al, 0x24 ; mov al, 0 ; call 0x401af6
0x0000000000436fa5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x3d], ch ; std ; call qword ptr [rax]
0x0000000000436f85 : add al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x0000000000425be3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411010 : add al, byte ptr [rax] ; add byte ptr [rbx + 0xa2da445], cl ; ret 0x9c11
0x00000000004055f5 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x41d247bb], cl ; ret
0x000000000041246a : add al, byte ptr [rax] ; add byte ptr [rbx - 0x65d243bb], cl ; pop rsp ; ret
0x0000000000405546 : add al, byte ptr [rax] ; add byte ptr [rbx - 0xfd247bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x8928
0x00000000004055f4 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x41d247bb], cl ; ret
0x00000000004257f5 : add al, ch ; cmc ; ret 0xfffd
0x00000000004256ff : add al, ch ; jmp 0x4256c9
0x0000000000410d50 : add al, ch ; pop rdx ; or eax, 0x45c7ffff ; clc ; ret 0x2f93
0x0000000000404077 : add al, ch ; ret
0x0000000000436c1b : add al, dh ; sar edi, cl ; call qword ptr [rax]
0x0000000000436acb : add al, dl ; add edi, edi ; call rax
0x000000000043681b : add al, dl ; stc ; cld ; call qword ptr [rax]
0x0000000000407a9f : add bh, ah ; ret
0x000000000042bff6 : add bh, al ; in al, dx ; int1 ; ret
0x0000000000425fde : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000425d46 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000430568 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x00000000004307ab : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000043053d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000436add : add bh, bh ; call qword ptr [rax]
0x00000000004352ef : add bl, dh ; ret
0x0000000000436e47 : add byte ptr [rax + 3], ch ; std ; call rax
0x00000000004368db : add byte ptr [rax - 0x1e], dh ; std ; call qword ptr [rax]
0x0000000000437187 : add byte ptr [rax - 0x21], bl ; std ; call qword ptr [rsi]
0x0000000000437127 : add byte ptr [rax - 0x24], bh ; std ; call qword ptr [rsi]
0x00000000004370c7 : add byte ptr [rax - 0x2a], bl ; std ; call qword ptr [rbx]
0x0000000000437067 : add byte ptr [rax - 0x31], bh ; std ; call qword ptr [rax]
0x000000000043689b : add byte ptr [rax - 0x34], al ; std ; call qword ptr [rax]
0x000000000043688b : add byte ptr [rax - 0x35], al ; std ; call rax
0x0000000000436fa7 : add byte ptr [rax - 0x3d], ch ; std ; call qword ptr [rax]
0x00000000004313b5 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042c2cb : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000043691b : add byte ptr [rax - 8], dh ; std ; call qword ptr [rax]
0x0000000000436adb : add byte ptr [rax], ah ; add bh, bh ; call qword ptr [rax]
0x000000000043699b : add byte ptr [rax], ah ; mov cl, -2 ; call qword ptr [rax]
0x0000000000437122 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax - 0x24], bh ; std ; call qword ptr [rsi]
0x0000000000425fdc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000425d44 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000430566 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x00000000004307a9 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x00000000004352ed : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004313b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042c2c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x00000000004352eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004002f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004002f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000404922 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004048ce : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004002f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000043684a : add byte ptr [rax], al ; add byte ptr [rax], bh ; std ; call rax
0x0000000000436cfd : add byte ptr [rax], al ; add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x0000000000411e11 : add byte ptr [rax], al ; add byte ptr [rbx + 0x12dbc45], cl ; ret
0x0000000000401e41 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2df045], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89b5
0x0000000000401e6d : add byte ptr [rax], al ; add byte ptr [rbx + 0x1d2df045], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89b5
0x0000000000434754 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000041222b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2dbc45], cl ; ret 0x2f73
0x000000000042165e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406243 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552df045], cl ; ret 0x89c0
0x0000000000411136 : add byte ptr [rax], al ; add byte ptr [rbx + 0xb2da445], cl ; ret 0x9c11
0x00000000004054b0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10d247bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x8928
0x0000000000402bb1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x11d25fbb], cl ; ret 0x89cd
0x0000000000406602 : add byte ptr [rax], al ; add byte ptr [rbx - 0x27d20fbb], cl ; ret 0xf720
0x0000000000406472 : add byte ptr [rax], al ; add byte ptr [rbx - 0x28d20fbb], cl ; ret 0xf720
0x0000000000405401 : add byte ptr [rax], al ; add byte ptr [rbx - 0x42d247bb], cl ; ret
0x0000000000433e49 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000433dc5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041233e : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d243bb], cl ; pop rsp ; ret
0x0000000000410bf6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d20fbb], cl ; ret
0x00000000004132c1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x000000000042baae : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x000000000042b48e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000403fdf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000420511 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004133bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000433f05 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405bd2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004283dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041956d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404924 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406fa2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408ee2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042d84b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042b00d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425eda : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041954f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004048d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043370d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000436e42 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rax + 3], ch ; std ; call rax
0x00000000004132fb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421380 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413400 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004262ed : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004218d7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004017fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000437a02 : add byte ptr [rax], al ; and al, 0xd ; add byte ptr [rax], al ; call 0x2443792b
0x0000000000437102 : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; mov dl, bl ; std ; call qword ptr [rax]
0x0000000000437686 : add byte ptr [rax], al ; call 0x23437540
0x0000000000437a06 : add byte ptr [rax], al ; call 0x24437927
0x000000000043684b : add byte ptr [rax], al ; cmp ch, bh ; call rax
0x0000000000436ec2 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; or byte ptr [rcx - 3], al ; jmp qword ptr [rcx]
0x0000000000436fc2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004370c2 : add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; pop rax ; salc ; std ; call qword ptr [rbx]
0x0000000000401879 : add byte ptr [rax], al ; jmp 0x401819
0x0000000000433709 : add byte ptr [rax], al ; jmp 0x433718
0x0000000000434379 : add byte ptr [rax], al ; jmp 0x434388
0x00000000004347ef : add byte ptr [rax], al ; jmp 0x4348ff
0x00000000004368da : add byte ptr [rax], al ; jo 0x4368c5 ; std ; call qword ptr [rax]
0x000000000043691a : add byte ptr [rax], al ; jo 0x43691b ; std ; call qword ptr [rax]
0x0000000000437066 : add byte ptr [rax], al ; js 0x43703e ; std ; call qword ptr [rax]
0x0000000000437126 : add byte ptr [rax], al ; js 0x43710b ; std ; call qword ptr [rsi]
0x000000000043680a : add byte ptr [rax], al ; mov al, -0x46 ; cld ; call rax
0x0000000000437106 : add byte ptr [rax], al ; mov dl, bl ; std ; call qword ptr [rax]
0x0000000000429107 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000434587 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004153e9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000418e39 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000437182 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x21], bl ; std ; call qword ptr [rsi]
0x0000000000436f82 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x0000000000436bda : add byte ptr [rax], al ; or ah, 0xff ; call qword ptr [rax]
0x0000000000436ec6 : add byte ptr [rax], al ; or byte ptr [rcx - 3], al ; jmp qword ptr [rcx]
0x0000000000436fc6 : add byte ptr [rax], al ; pop rax ; ret
0x00000000004370c6 : add byte ptr [rax], al ; pop rax ; salc ; std ; call qword ptr [rbx]
0x0000000000404b67 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042165f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421338 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004368ca : add byte ptr [rax], al ; rcr ch ; std ; call rax
0x00000000004002f6 : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 2
0x000000000043688a : add byte ptr [rax], al ; retf ; std ; call rax
0x0000000000436a5a : add byte ptr [rax], al ; ror bl, -2 ; call qword ptr [rax]
0x000000000043681a : add byte ptr [rax], al ; sar cl, 1 ; cld ; call qword ptr [rax]
0x0000000000436c4a : add byte ptr [rax], al ; sbb ah, -1 ; call rax
0x0000000000436e66 : add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; call qword ptr [rdx]
0x0000000000437062 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; js 0x437042 ; std ; call qword ptr [rax]
0x0000000000436e62 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; call qword ptr [rdx]
0x000000000043690a : add byte ptr [rax], al ; xor ah, ch ; std ; call rax
0x000000000043684c : add byte ptr [rax], bh ; std ; call rax
0x0000000000436f87 : add byte ptr [rax], bl ; ret
0x0000000000436ec7 : add byte ptr [rax], cl ; std ; jmp qword ptr [rcx]
0x000000000043690b : add byte ptr [rax], dh ; in al, dx ; std ; call rax
0x000000000043685b : add byte ptr [rax], dh ; std ; call qword ptr [rax]
0x0000000000436cff : add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x0000000000411e13 : add byte ptr [rbx + 0x12dbc45], cl ; ret
0x0000000000401e43 : add byte ptr [rbx + 0x1c2df045], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89b5
0x0000000000401e6f : add byte ptr [rbx + 0x1d2df045], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89b5
0x0000000000434756 : add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000411dc8 : add byte ptr [rbx + 0x2dbc45], cl ; ret
0x00000000004121e2 : add byte ptr [rbx + 0x3a2dbc45], cl ; ret 0x2f73
0x000000000041222d : add byte ptr [rbx + 0x3b2dbc45], cl ; ret 0x2f73
0x0000000000421660 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406245 : add byte ptr [rbx + 0x552df045], cl ; ret 0x89c0
0x0000000000421339 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411012 : add byte ptr [rbx + 0xa2da445], cl ; ret 0x9c11
0x0000000000411138 : add byte ptr [rbx + 0xb2da445], cl ; ret 0x9c11
0x0000000000437063 : add byte ptr [rbx + rax - 0x30880000], al ; std ; call qword ptr [rax]
0x00000000004054b2 : add byte ptr [rbx - 0x10d247bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x8928
0x0000000000402bb3 : add byte ptr [rbx - 0x11d25fbb], cl ; ret 0x89cd
0x0000000000402b68 : add byte ptr [rbx - 0x12d25fbb], cl ; ret 0x89cd
0x0000000000406604 : add byte ptr [rbx - 0x27d20fbb], cl ; ret 0xf720
0x0000000000406474 : add byte ptr [rbx - 0x28d20fbb], cl ; ret 0xf720
0x00000000004055f7 : add byte ptr [rbx - 0x41d247bb], cl ; ret
0x0000000000405403 : add byte ptr [rbx - 0x42d247bb], cl ; ret
0x0000000000402aeb : add byte ptr [rbx - 0x5ed25fbb], cl ; mov ch, 0x66 ; ret 0x8589
0x0000000000402aa0 : add byte ptr [rbx - 0x5fd25fbb], cl ; mov ch, 0x66 ; ret 0x8589
0x0000000000433e4b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041246c : add byte ptr [rbx - 0x65d243bb], cl ; pop rsp ; ret
0x0000000000433dc7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000412340 : add byte ptr [rbx - 0x66d243bb], cl ; pop rsp ; ret
0x0000000000410bf8 : add byte ptr [rbx - 0x68d20fbb], cl ; ret
0x00000000004132c3 : add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x000000000042bc0e : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000042bab0 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000405548 : add byte ptr [rbx - 0xfd247bb], cl ; lodsd eax, dword ptr [rsi] ; ret 0x8928
0x0000000000412780 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b490 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000403fe1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000420513 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000408fce : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408ede : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000436e63 : add byte ptr [rcx + rax + 0x7180000], al ; std ; call qword ptr [rdx]
0x0000000000436e43 : add byte ptr [rcx + rax], ah ; add byte ptr [rax + 3], ch ; std ; call rax
0x000000000040e1af : add byte ptr [rcx + rdi*4 - 0x61], bl ; ret 0x4988
0x0000000000406a54 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401dd8 : add byte ptr [rcx], al ; ret
0x00000000004133c1 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000433f07 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405bd4 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004283df : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041956f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404926 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406fa4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408ee4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042d84d : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042b00f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425edc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000419551 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004048d2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004109e0 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437183 : add byte ptr [rsp + rax - 0x20a80000], ah ; std ; call qword ptr [rsi]
0x0000000000437103 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; mov dl, bl ; std ; call qword ptr [rax]
0x0000000000437123 : add byte ptr [rsp + rax], al ; add byte ptr [rax - 0x24], bh ; std ; call qword ptr [rsi]
0x0000000000412115 : add cl, ch ; ret
0x000000000043370f : add cl, ch ; ret 0
0x000000000040377f : add cl, ch ; ret 1
0x000000000042bff4 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x0000000000436e45 : add dword ptr [rax], eax ; add byte ptr [rax + 3], ch ; std ; call rax
0x00000000004218d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000436ec5 : add dword ptr [rax], eax ; add byte ptr [rax], cl ; std ; jmp qword ptr [rcx]
0x0000000000421ffa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042bc0c : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000040673f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000430ca3 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004161d7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fd3f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433621 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000436e44 : add dword ptr fs:[rax], eax ; add byte ptr [rax + 3], ch ; std ; call rax
0x0000000000401dd4 : add eax, 0x2375be ; add ebx, esi ; ret
0x0000000000430931 : add eax, 0x458b0000 ; call 0xffffffffc3a43571
0x00000000004099c0 : add eax, 0x79b80000 ; add bh, ah ; ret
0x0000000000429105 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004289ef : add eax, 0xb6b80000 ; ret 0x979f
0x0000000000436809 : add eax, 0xbab00000 ; cld ; call rax
0x0000000000436819 : add eax, 0xf9d00000 ; cld ; call qword ptr [rax]
0x00000000004370c5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x2a], bl ; std ; call qword ptr [rbx]
0x0000000000437065 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x31], bh ; std ; call qword ptr [rax]
0x0000000000405654 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004017f9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401d9b : add eax, edx ; sar rax, 1 ; jne 0x401dac ; pop rbp ; ret
0x0000000000431269 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401dd9 : add ebx, esi ; ret
0x000000000042c16b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000430875 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000436e49 : add edi, ebp ; call rax
0x0000000000436acd : add edi, edi ; call rax
0x000000000040209b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406a52 : add esp, 0x100 ; pop rbp ; ret
0x0000000000411618 : add esp, 0x110 ; pop rbp ; ret
0x0000000000421ff7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000432155 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000042c126 : add esp, 0x120 ; pop rbp ; ret
0x000000000043123a : add esp, 0x130 ; pop rbp ; ret
0x000000000041602d : add esp, 0x160 ; pop rbp ; ret
0x000000000042619c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040afb4 : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000418c02 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000421383 : add esp, 0x20 ; pop rbp ; ret
0x00000000004109de : add esp, 0x200 ; pop rbp ; ret
0x0000000000406190 : add esp, 0x260 ; pop rbp ; ret
0x0000000000424c01 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000413403 : add esp, 0x30 ; pop rbp ; ret
0x000000000041328f : add esp, 0x360 ; pop rbp ; ret
0x0000000000428fd5 : add esp, 0x380 ; pop rbp ; ret
0x0000000000415557 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404b63 : add esp, 0x430 ; pop rbp ; ret
0x0000000000409f85 : add esp, 0x460 ; pop rbp ; ret
0x000000000040204c : add esp, 0x50 ; pop rbp ; ret
0x000000000042e539 : add esp, 0x520 ; pop rbp ; ret
0x0000000000413534 : add esp, 0x60 ; pop rbp ; ret
0x000000000040f89a : add esp, 0x6b0 ; pop rbp ; ret
0x0000000000414b7a : add esp, 0x70 ; pop rbp ; ret
0x0000000000413e3e : add esp, 0x80 ; pop rbp ; ret
0x000000000040b3e4 : add esp, 0x90 ; pop rbp ; ret
0x0000000000407573 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040719d : add esp, 0xc0 ; pop rbp ; ret
0x0000000000421334 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000413b5f : add esp, 0xe0 ; pop rbp ; ret
0x0000000000414585 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004017fe : add esp, 8 ; ret
0x0000000000401d9a : add rax, rdx ; sar rax, 1 ; jne 0x401dad ; pop rbp ; ret
0x0000000000431268 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042c16a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040209a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406a51 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000411617 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000421ff6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000432154 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000042c125 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000431239 : add rsp, 0x130 ; pop rbp ; ret
0x000000000041602c : add rsp, 0x160 ; pop rbp ; ret
0x000000000042619b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040afb3 : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000418c01 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000421382 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004109dd : add rsp, 0x200 ; pop rbp ; ret
0x000000000040618f : add rsp, 0x260 ; pop rbp ; ret
0x0000000000424c00 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000413402 : add rsp, 0x30 ; pop rbp ; ret
0x000000000041328e : add rsp, 0x360 ; pop rbp ; ret
0x0000000000428fd4 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000415556 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404b62 : add rsp, 0x430 ; pop rbp ; ret
0x0000000000409f84 : add rsp, 0x460 ; pop rbp ; ret
0x000000000040204b : add rsp, 0x50 ; pop rbp ; ret
0x000000000042e538 : add rsp, 0x520 ; pop rbp ; ret
0x0000000000413533 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040f899 : add rsp, 0x6b0 ; pop rbp ; ret
0x0000000000414b79 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000413e3d : add rsp, 0x80 ; pop rbp ; ret
0x000000000040b3e3 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407572 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040719c : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000421333 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000413b5e : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000414584 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004017fd : add rsp, 8 ; ret
0x0000000000437a04 : and al, 0xd ; add byte ptr [rax], al ; call 0x24437929
0x000000000042fd3e : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433620 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000437104 : and al, 4 ; add byte ptr [rax], al ; mov dl, bl ; std ; call qword ptr [rax]
0x000000000042c128 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414daf : and eax, 0x639a88 ; pop rbp ; ret
0x0000000000414dd3 : and eax, 0x639a90 ; pop rbp ; ret
0x0000000000401dd7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000437688 : call 0x2343753e
0x0000000000437a08 : call 0x24437925
0x00000000004256e8 : call 0x4019b2
0x000000000042c020 : call 0x401a19
0x0000000000410d51 : call 0x401ab8
0x0000000000401faa : call 0x401ab9
0x00000000004257f6 : call 0x401af2
0x00000000004232da : call 0x401be6
0x00000000004332f7 : call 0x401d16
0x0000000000431001 : call 0x4299c9
0x0000000000430936 : call 0xffffffffc3a4356c
0x0000000000430935 : call 0xffffffffc3a4356d
0x0000000000430978 : call 0xffffffffc3a436ae
0x0000000000430977 : call 0xffffffffc3a436af
0x0000000000421379 : call 0xffffffffe9049cc9
0x0000000000421378 : call 0xffffffffe9049cca
0x000000000041cdbd : call 0xfffffffff73a5354
0x000000000042f2c3 : call 0xfffffffffee77895
0x000000000042f2c2 : call 0xfffffffffee77896
0x000000000042b255 : call 0xffffffffff47382a
0x000000000041f8e9 : call 0xffffffffff567ebb
0x000000000041f8e8 : call 0xffffffffff567ebc
0x000000000041f8e9 : call 0xffffffffff567ebd
0x000000000041f8e8 : call 0xffffffffff567ebe
0x00000000004187d8 : call 0xffffffffffae0daa
0x00000000004187d7 : call 0xffffffffffae0dab
0x000000000042fd7a : call 0xffffffffffbf834c
0x000000000042fd79 : call 0xffffffffffbf834d
0x00000000004352c9 : call qword ptr [r12 + rbx*8]
0x000000000040859a : call qword ptr [rax]
0x000000000040e329 : call qword ptr [rbx]
0x0000000000420905 : call qword ptr [rcx]
0x000000000042f499 : call qword ptr [rdi]
0x000000000040ece2 : call qword ptr [rdx]
0x000000000040ef33 : call qword ptr [rsi]
0x00000000004352ca : call qword ptr [rsp + rbx*8]
0x0000000000401dfd : call rax
0x000000000040f34b : call rbx
0x000000000043056e : call rcx
0x00000000004178dc : call rdi
0x000000000043784b : call rdx
0x000000000040f2db : call rsi
0x000000000042ca96 : cdq ; jbe 0x42caba ; ret
0x000000000042e3bd : cdq ; jbe 0x42e3e1 ; ret
0x0000000000412345 : cdq ; pop rsp ; ret
0x0000000000433dcc : cdq ; ret
0x0000000000404b61 : clc ; add rsp, 0x430 ; pop rbp ; ret
0x000000000042a0a2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004294f0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414d91 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000414583 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401d9f : clc ; jne 0x401da8 ; pop rbp ; ret
0x0000000000413316 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000410d58 : clc ; ret 0x2f93
0x000000000043691d : clc ; std ; call qword ptr [rax]
0x00000000004020c7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432153 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000413e3c : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043681e : cld ; call qword ptr [rax]
0x000000000043680e : cld ; call rax
0x0000000000436816 : cld ; push rax ; add eax, 0xf9d00000 ; cld ; call qword ptr [rax]
0x0000000000407aa0 : cld ; ret
0x000000000041f53d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000406601 : cli ; add byte ptr [rax], al ; add byte ptr [rbx - 0x27d20fbb], cl ; ret 0xf720
0x00000000004257f7 : cmc ; ret 0xfffd
0x0000000000415d6c : cmp al, -0x17 ; ret
0x000000000042a85d : cmp al, -0x2a ; ret
0x0000000000401fb1 : cmp al, 0x25 ; ret
0x000000000043684d : cmp ch, bh ; call rax
0x0000000000401d5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d70 ; pop rbp ; ret
0x0000000000421814 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000042ca42 : cwde ; jbe 0x42ca66 ; ret
0x00000000004338cb : cwde ; js 0x433875 ; ret
0x0000000000433912 : cwde ; js 0x4338bc ; ret
0x000000000043394c : cwde ; js 0x4338f6 ; ret
0x0000000000410614 : cwde ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000040f723 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000401fae : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000042e282 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000425866 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x401af9
0x0000000000424ac1 : dec dword ptr [rax - 0x77] ; ret 0x66e8
0x000000000042e2b8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004149ca : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000430ffd : dec dword ptr [rax - 0x77] ; ret 0xbae8
0x000000000042456b : dec dword ptr [rax - 0x77] ; ret 0xbce8
0x000000000041f6e2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041f9ed : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000420ef4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000042bb9f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000412510 : dec dword ptr [rdi] ; test bl, dh ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000405650 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040a703 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffa], bh ; ret 1
0x0000000000424d23 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000430c9f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004093b1 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000042e124 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000424be3 : dec ebx ; je 0x424ba9 ; ret 0x1ce9
0x00000000004235ad : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b00b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000405db3 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405bd0 : enter 3, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000413dd0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041642d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429b14 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ad21 : fadd qword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000422829 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004119e5 : fcmovb st(0), st(7) ; ret 0x89c6
0x0000000000412a65 : fcmovb st(0), st(7) ; ret 0xb9c6
0x000000000042f6f3 : fcmovbe st(0), st(5) ; jmp 0x42fd51
0x0000000000437129 : fdiv st(5), st(0) ; call qword ptr [rsi]
0x0000000000436c4d : fdiv st(7), st(0) ; call rax
0x000000000041199a : fld st(7) ; ret 0x89c6
0x00000000004268e4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004313b9 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042c2cf : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042e286 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004352cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000402099 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042964c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401d70 : hlt ; pop rbp ; mov edi, 0x639338 ; jmp rax
0x0000000000412c2d : imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x000000000042567e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000430756 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000041ee99 : in al, -0x7f ; ret 0xff9f
0x000000000041f07f : in al, -0x7f ; ret 0xffbf
0x000000000041f125 : in al, -0x7f ; ret 0xffc5
0x000000000041f153 : in al, -0x7f ; ret 0xffd5
0x000000000041f221 : in al, -0x7f ; ret 0xffd8
0x000000000041f3b7 : in al, -0x7f ; ret 0xffe0
0x0000000000434d1f : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000436ec4 : in al, 1 ; add byte ptr [rax], al ; or byte ptr [rcx - 3], al ; jmp qword ptr [rcx]
0x0000000000436fc4 : in al, 2 ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004370c4 : in al, 3 ; add byte ptr [rax], al ; pop rax ; salc ; std ; call qword ptr [rbx]
0x00000000004291df : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004299aa : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000413b5d : in al, dx ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042bff9 : in al, dx ; int1 ; ret
0x0000000000418f4a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042910b : in al, dx ; pop rbp ; ret
0x000000000043690d : in al, dx ; std ; call rax
0x0000000000433fcb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402b6d : in eax, dx ; ret 0x89cd
0x0000000000406fb7 : inc dword ptr [rax + 0x558801e2] ; ret
0x000000000042050f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041ead1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408fd0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408ee0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042d8c0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004210ba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403989 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000409383 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000040dc89 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000410d55 : inc edi ; clc ; ret 0x2f93
0x0000000000410611 : inc edi ; cwde ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000042c024 : inc edi ; in al, dx ; int1 ; ret
0x0000000000421fc8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000418b72 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000418862 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x000000000041b66f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041ecaf : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000042bc13 : int1 ; ret
0x0000000000437069 : iretd ; std ; call qword ptr [rax]
0x0000000000401d63 : ja 0x401d6a ; pop rbp ; ret
0x00000000004359c6 : jb 0x435a2c ; outsb dx, byte ptr [rsi] ; ret
0x00000000004359c5 : jb 0x435a2d ; outsb dx, byte ptr [rsi] ; ret
0x000000000042ca43 : jbe 0x42ca65 ; ret
0x000000000042ca97 : jbe 0x42cab9 ; ret
0x000000000042e3be : jbe 0x42e3e0 ; ret
0x0000000000401d6f : je 0x401d6d ; pop rbp ; mov edi, 0x639338 ; jmp rax
0x0000000000423e12 : je 0x423dd4 ; ret 0x8589
0x0000000000423ef2 : je 0x423eb4 ; ret 0x8589
0x0000000000424ae0 : je 0x424aa2 ; ret 0x7d81
0x0000000000424be5 : je 0x424ba7 ; ret 0x1ce9
0x0000000000404030 : jg 0x404044 ; xchg eax, esi ; ret 0xd284
0x000000000040417e : jg 0x404192 ; xchg eax, esi ; ret 0xd284
0x0000000000412c2b : jge 0x412c01 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000412c72 : jge 0x412c48 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000412cb9 : jge 0x412c8f ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000412d00 : jge 0x412cd6 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000412d47 : jge 0x412d1d ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000425198 : jge 0x4251af ; ret
0x0000000000425683 : jge 0x42569a ; ret
0x000000000042d10a : jge 0x42d183 ; ret
0x0000000000434539 : jge 0x434533 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000436b9d : jge 0x436ba0 ; call qword ptr [rax]
0x000000000042506c : jl 0x425083 ; ret
0x000000000042d15e : jle 0x42d1d7 ; ret
0x000000000042dd8c : jle 0x42de05 ; ret
0x000000000040187b : jmp 0x401817
0x0000000000405a4a : jmp 0x40619e
0x000000000040ec83 : jmp 0x40f8a9
0x00000000004129b9 : jmp 0x41329e
0x0000000000418ba2 : jmp 0x418c10
0x000000000041e65d : jmp 0x421343
0x00000000004210f1 : jmp 0x421345
0x0000000000425701 : jmp 0x4256c7
0x000000000042567d : jmp 0x425bf5
0x000000000042bff2 : jmp 0x42c137
0x000000000042e0ef : jmp 0x42e547
0x000000000042e0ee : jmp 0x42e548
0x000000000042f6f5 : jmp 0x42fd4f
0x0000000000430503 : jmp 0x43089a
0x000000000043370b : jmp 0x433716
0x000000000043437b : jmp 0x434386
0x00000000004347f1 : jmp 0x4348fd
0x000000000042a0de : jmp 0xffffffffb704a4aa
0x00000000004232dc : jmp 0xffffffffc2fc32e2
0x00000000004338ca : jmp 0xffffffffc3e7b16b
0x000000000041e77d : jmp qword ptr [rax]
0x000000000041f8ef : jmp qword ptr [rbx]
0x0000000000408fe3 : jmp qword ptr [rcx]
0x0000000000431e67 : jmp qword ptr [rdi]
0x0000000000421815 : jmp qword ptr [rdx + 0xc2e968]
0x000000000041cdc6 : jmp qword ptr [rdx]
0x000000000040f47b : jmp qword ptr [rsi]
0x0000000000401d77 : jmp rax
0x000000000040e8ba : jmp rbx
0x00000000004307b1 : jmp rcx
0x000000000040f820 : jmp rdi
0x0000000000401db7 : jmp rdx
0x0000000000430543 : jmp rsi
0x000000000041785f : jmp rsp
0x0000000000401da0 : jne 0x401da7 ; pop rbp ; ret
0x0000000000401dd6 : jne 0x401e00 ; add byte ptr [rcx], al ; ret
0x0000000000421fc6 : jne 0x421fcf ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004232d8 : jne 0x4232b2 ; call 0x401be8
0x00000000004332f5 : jne 0x4332df ; call 0x401d18
0x0000000000409cc1 : jnp 0x409cef ; push rsp ; shr cl, cl ; ret
0x0000000000407af2 : jns 0x407af9 ; cld ; ret
0x00000000004099c4 : jns 0x4099cb ; cld ; ret
0x0000000000414b7c : jo 0x414bdd ; ret
0x0000000000416787 : jo 0x4167e8 ; ret
0x00000000004221e1 : jo 0x422242 ; ret
0x0000000000422304 : jo 0x422365 ; ret
0x000000000042243e : jo 0x42249f ; ret
0x000000000042698c : jo 0x4269ed ; ret
0x00000000004294f4 : jo 0x429555 ; ret
0x00000000004368dc : jo 0x4368c3 ; std ; call qword ptr [rax]
0x000000000043691c : jo 0x436919 ; std ; call qword ptr [rax]
0x0000000000407a9e : js 0x407aa5 ; cld ; ret
0x0000000000421336 : js 0x42134a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004338cc : js 0x433874 ; ret
0x0000000000433913 : js 0x4338bb ; ret
0x000000000043394d : js 0x4338f5 ; ret
0x0000000000437068 : js 0x43703c ; std ; call qword ptr [rax]
0x0000000000437128 : js 0x437109 ; std ; call qword ptr [rsi]
0x000000000040d70f : lahf ; ret 0x4988
0x00000000004133c3 : lahf ; ret 0xd284
0x0000000000436ad8 : lock adc byte ptr [rax], al ; add byte ptr [rax], ah ; add bh, bh ; call qword ptr [rax]
0x00000000004368d8 : lock or byte ptr [rax], al ; add byte ptr [rax - 0x1e], dh ; std ; call qword ptr [rax]
0x0000000000436918 : lock or dword ptr [rax], eax ; add byte ptr [rax - 8], dh ; std ; call qword ptr [rax]
0x00000000004054b8 : lodsd eax, dword ptr [rsi] ; ret 0x8928
0x0000000000405da9 : lodsd eax, dword ptr [rsi] ; ret 0xb928
0x00000000004368dd : loop 0x4368de ; call qword ptr [rax]
0x0000000000413b61 : loopne 0x413b68 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041445c : loopne 0x414465 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004148d3 : loopne 0x4148dc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415ff1 : loopne 0x415ffa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041602b : loopne 0x41607e ; add esp, 0x160 ; pop rbp ; ret
0x000000000041930e : loopne 0x419317 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424bff : loopne 0x424c52 ; add esp, 0x2d0 ; pop rbp ; ret
0x00000000004266d0 : loopne 0x4266d9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426adc : loopne 0x426b2c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000426adb : loopne 0x426b2d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000426dff : loopne 0x426e4f ; add esp, 0x40 ; pop rbp ; ret
0x0000000000426dfe : loopne 0x426e50 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000402270 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043680c : mov al, -0x46 ; cld ; call rax
0x0000000000418a8d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000418999 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b22a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004257f4 : mov al, 0 ; call 0x401af4
0x0000000000436c48 : mov al, 0x16 ; add byte ptr [rax], al ; sbb ah, -1 ; call rax
0x0000000000433143 : mov al, 0x2d ; ret 0xa414
0x00000000004194cb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000436808 : mov al, 5 ; add byte ptr [rax], al ; mov al, -0x46 ; cld ; call rax
0x0000000000436848 : mov al, 6 ; add byte ptr [rax], al ; add byte ptr [rax], bh ; std ; call rax
0x000000000040f89c : mov al, 6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436888 : mov al, 7 ; add byte ptr [rax], al ; retf ; std ; call rax
0x00000000004368c8 : mov al, 8 ; add byte ptr [rax], al ; rcr ch ; std ; call rax
0x0000000000436908 : mov al, 9 ; add byte ptr [rax], al ; xor ah, ch ; std ; call rax
0x000000000043361d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004337cd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433fc9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000437ce9 : mov bh, -1 ; call qword ptr [rsi]
0x0000000000414dd1 : mov byte ptr [0x639a90], al ; pop rbp ; ret
0x000000000042dac1 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000420e88 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413317 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042d849 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000401dd3 : mov byte ptr [rip + 0x2375be], 1 ; ret
0x0000000000404ca5 : mov ch, -0x2f ; ret 0x8980
0x0000000000403ade : mov ch, 0x66 ; ret 0x558b
0x0000000000402aa6 : mov ch, 0x66 ; ret 0x8589
0x000000000043699d : mov cl, -2 ; call qword ptr [rax]
0x0000000000404ce7 : mov dh, -0x2f ; ret 0x8980
0x000000000040613b : mov dh, -0x2f ; ret 0xe980
0x00000000004161d9 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fd41 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433623 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004340f5 : mov dl, -0x47 ; ret
0x0000000000437108 : mov dl, bl ; std ; call qword ptr [rax]
0x00000000004247d0 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406fcb : mov dl, byte ptr [rdx - 0x76] ; push rbp ; ret
0x0000000000414dad : mov dword ptr [0x639a88], edi ; pop rbp ; ret
0x0000000000419187 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000418f4b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004190bf : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004256e2 : mov dword ptr [rbp - 0x198], eax ; call 0x4019b8
0x0000000000425724 : mov dword ptr [rbp - 0x1a8], eax ; call 0x4019b8
0x000000000042576e : mov dword ptr [rbp - 0x1b8], eax ; call 0x4019b8
0x0000000000405a47 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x4061a1
0x000000000040226e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000413fc7 : mov dword ptr [rbp - 0x5c], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402097 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020c5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041933d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043126c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000042c16e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000425868 : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x401af7
0x0000000000404afc : mov eax, 0x81006396 ; ret 1
0x0000000000418e3f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000426a1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415553 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433558 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004266ff : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000414b76 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004153ec : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004291dd : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000429109 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000426b1e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004263f0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416781 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041918a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000434d1d : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426ada : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426f15 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418d34 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418e3c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418f45 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000426cef : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004190c1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004221db : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042964a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042a0a0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004294ee : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413531 : mov eax, ecx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418b6f : mov ebp, 0xc7fffe8c ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000401dfb : mov ebp, esp ; call rax
0x0000000000401d61 : mov ebp, esp ; ja 0x401d6c ; pop rbp ; ret
0x0000000000418f48 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041352f : mov ecx, eax ; mov eax, ecx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401df5 : mov edi, 0x638e20 ; mov rbp, rsp ; call rax
0x0000000000401d72 : mov edi, 0x639338 ; jmp rax
0x0000000000401db2 : mov edi, 0x639338 ; jmp rdx
0x000000000042c168 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004352c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004352c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040a706 : mov edx, 0xe9000006 ; ret 1
0x0000000000401dd5 : mov esi, 0x1002375 ; ret
0x0000000000418b70 : mov esi, dr1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004332f4 : mov esi, dword ptr [rbp - 0x20] ; call 0x401d19
0x00000000004232d7 : mov esi, dword ptr [rbp - 0x30] ; call 0x401be9
0x00000000004257f2 : mov esi, eax ; mov al, 0 ; call 0x401af6
0x0000000000401db0 : mov esi, eax ; mov edi, 0x639338 ; jmp rdx
0x000000000042fd44 : mov esp, ebp ; pop rbp ; ret
0x0000000000401df7 : mov fs, word ptr [rbx] ; mov rbp, rsp ; call rax
0x0000000000414dac : mov qword ptr [0x639a88], rdi ; pop rbp ; ret
0x00000000004256e1 : mov qword ptr [rbp - 0x198], rax ; call 0x4019b9
0x0000000000425723 : mov qword ptr [rbp - 0x1a8], rax ; call 0x4019b9
0x000000000042576d : mov qword ptr [rbp - 0x1b8], rax ; call 0x4019b9
0x000000000041933c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043126b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042c16d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000425867 : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x401af8
0x000000000040226f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000433142 : mov r8b, 0x2d ; ret 0xa414
0x0000000000426a1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415552 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433557 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004266fe : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000414b75 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004153eb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000426b1d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004263ef : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416780 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000426ad9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426f14 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418d33 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418e3b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004221da : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401dfa : mov rbp, rsp ; call rax
0x0000000000401d60 : mov rbp, rsp ; ja 0x401d6d ; pop rbp ; ret
0x00000000004257f1 : mov rsi, rax ; mov al, 0 ; call 0x401af7
0x0000000000401daf : mov rsi, rax ; mov edi, 0x639338 ; jmp rdx
0x000000000042fd43 : mov rsp, rbp ; pop rbp ; ret
0x0000000000421fca : mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000421fcb : mov word ptr [rax + 0x3a], fs ; ret
0x000000000041f71c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043436e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000412e7a : movabs byte ptr [0x5c9ac045c7fffeec], al ; ret
0x0000000000437184 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x21], bl ; std ; call qword ptr [rsi]
0x0000000000436f84 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x0000000000413fc9 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042567c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x425bf6
0x00000000004338cd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000401e49 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89b5
0x0000000000401e25 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x8bb5
0x00000000004161d8 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fd40 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433622 : movzx eax, al ; pop rbp ; ret
0x000000000041331a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004352e8 : nop dword ptr [rax + rax] ; ret
0x0000000000436bdc : or ah, 0xff ; call qword ptr [rax]
0x0000000000421337 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004368d9 : or byte ptr [rax], al ; add byte ptr [rax - 0x1e], dh ; std ; call qword ptr [rax]
0x0000000000412113 : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000412514 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000406f9e : or byte ptr [rcx + 0xaf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000436ec8 : or byte ptr [rcx - 3], al ; jmp qword ptr [rcx]
0x0000000000436919 : or dword ptr [rax], eax ; add byte ptr [rax - 8], dh ; std ; call qword ptr [rax]
0x0000000000436909 : or dword ptr [rax], eax ; add byte ptr [rax], dh ; in al, dx ; std ; call rax
0x0000000000411dc6 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x2dbc45], cl ; ret
0x0000000000424d27 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000410d53 : or eax, 0x45c7ffff ; clc ; ret 0x2f93
0x0000000000406c1f : or eax, 0x48ffffac ; add esp, 0x50 ; pop rbp ; ret
0x0000000000436999 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; mov cl, -2 ; call qword ptr [rax]
0x00000000004233b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004223c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004187f7 : out -0x47, eax ; ret 0x614e
0x00000000004337cf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402bb8 : out dx, al ; ret 0x89cd
0x0000000000403b91 : out dx, al ; ret 0xb9cd
0x000000000043361f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004054b7 : out dx, eax ; lodsd eax, dword ptr [rsi] ; ret 0x8928
0x00000000004359c8 : outsb dx, byte ptr [rsi] ; ret
0x00000000004352dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004352de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421662 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004352e0 : pop r14 ; pop r15 ; ret
0x0000000000421664 : pop r15 ; pop rbp ; ret
0x00000000004352e2 : pop r15 ; ret
0x0000000000433e48 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000436fc8 : pop rax ; ret
0x00000000004370c8 : pop rax ; salc ; std ; call qword ptr [rbx]
0x0000000000401dd2 : pop rbp ; mov byte ptr [rip + 0x2375be], 1 ; ret
0x0000000000401d71 : pop rbp ; mov edi, 0x639338 ; jmp rax
0x0000000000401dae : pop rbp ; mov rsi, rax ; mov edi, 0x639338 ; jmp rdx
0x00000000004352db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004352df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401d65 : pop rbp ; ret
0x0000000000421661 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042133a : pop rbx ; pop rbp ; ret
0x00000000004340f4 : pop rcx ; mov dl, -0x47 ; ret
0x000000000042c022 : pop rcx ; std ; inc edi ; in al, dx ; int1 ; ret
0x0000000000421665 : pop rdi ; pop rbp ; ret
0x00000000004352e3 : pop rdi ; ret
0x000000000043453b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000410d52 : pop rdx ; or eax, 0x45c7ffff ; clc ; ret 0x2f93
0x000000000042bc0b : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000421663 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004352e1 : pop rsi ; pop r15 ; ret
0x00000000004352dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412346 : pop rsp ; ret
0x0000000000433f09 : popfq ; ret 0xd284
0x00000000004256e4 : push -0x17000002 ; ret
0x000000000040f81d : push -0x18000001 ; ret 0x7f8b
0x0000000000436907 : push qword ptr [rax + 0x30000009] ; in al, dx ; std ; call rax
0x0000000000436887 : push qword ptr [rax + 0x40000007] ; retf ; std ; call rax
0x0000000000436c07 : push qword ptr [rax + 0x70000015] ; sar bh, cl ; call rax
0x0000000000436847 : push qword ptr [rax + 6] ; cmp ch, bh ; call rax
0x0000000000436ac7 : push qword ptr [rax - 0x2ffffff0] ; add edi, edi ; call rax
0x0000000000436c47 : push qword ptr [rax - 0x7fffffea] ; fdiv st(7), st(0) ; call rax
0x0000000000420d5f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000436ad7 : push rax ; adc byte ptr [rax], al ; add byte ptr [rax], ah ; add bh, bh ; call qword ptr [rax]
0x0000000000436817 : push rax ; add eax, 0xf9d00000 ; cld ; call qword ptr [rax]
0x00000000004368d7 : push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x1e], dh ; std ; call qword ptr [rax]
0x0000000000436917 : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 8], dh ; std ; call qword ptr [rax]
0x0000000000436997 : push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], ah ; mov cl, -2 ; call qword ptr [rax]
0x000000000040204e : push rax ; pop rbp ; ret
0x0000000000425fdb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004268e3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004313b8 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042c2ce : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042e285 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000041ee98 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041f07e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000041f124 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000041f152 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000041f220 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000041f3b6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000406fb6 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x000000000042dac0 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000401df4 : push rbp ; mov edi, 0x638e20 ; mov rbp, rsp ; call rax
0x0000000000406fbc : push rbp ; ret
0x000000000040624a : push rbp ; ret 0x89c0
0x0000000000409cc3 : push rsp ; shr cl, cl ; ret
0x000000000040bb64 : pushfq ; ret
0x000000000042b493 : pushfq ; ret 0x8445
0x0000000000405bd6 : pushfq ; ret 0xd284
0x00000000004368cc : rcr ch ; std ; call rax
0x00000000004002f8 : ret
0x00000000004166c4 : ret 0
0x000000000042a639 : ret 0x10
0x000000000042ebef : ret 0x110a
0x000000000040e081 : ret 0x148
0x000000000042c2d2 : ret 0x18
0x0000000000403919 : ret 0x1cd6
0x0000000000424be7 : ret 0x1ce9
0x0000000000411ac6 : ret 0x1da0
0x0000000000433ffb : ret 0x2030
0x000000000042c572 : ret 0x2106
0x0000000000401c82 : ret 0x2375
0x0000000000401a82 : ret 0x2376
0x0000000000401882 : ret 0x2377
0x0000000000414b05 : ret 0x29b9
0x000000000041e877 : ret 0x2a
0x0000000000421b96 : ret 0x2c1
0x0000000000427573 : ret 0x2c22
0x00000000004121e8 : ret 0x2f73
0x0000000000410b37 : ret 0x2f93
0x000000000041b7da : ret 0x43fa
0x0000000000414ac1 : ret 0x4589
0x000000000040b950 : ret 0x4988
0x0000000000408f55 : ret 0x5589
0x0000000000403ae0 : ret 0x558b
0x00000000004297f3 : ret 0x5e5
0x000000000041859f : ret 0x614e
0x0000000000424ac4 : ret 0x66e8
0x00000000004227ba : ret 0x73
0x0000000000414c8a : ret 0x7406
0x0000000000423a22 : ret 0x7961
0x0000000000424ae2 : ret 0x7d81
0x000000000040b50c : ret 0x7f8b
0x00000000004186eb : ret 0x8148
0x000000000040398d : ret 0x8445
0x0000000000431d46 : ret 0x84e8
0x0000000000402aa8 : ret 0x8589
0x000000000041b670 : ret 0x891a
0x00000000004054b9 : ret 0x8928
0x00000000004339ac : ret 0x8934
0x0000000000409120 : ret 0x8945
0x000000000040f726 : ret 0x8948
0x0000000000411afa : ret 0x895c
0x0000000000404ca7 : ret 0x8980
0x0000000000401e4a : ret 0x89b5
0x000000000042a0e1 : ret 0x89b6
0x000000000041196a : ret 0x89bd
0x000000000040624b : ret 0x89c0
0x000000000041199c : ret 0x89c6
0x0000000000402b6f : ret 0x89cd
0x0000000000433988 : ret 0x8b34
0x0000000000409f0e : ret 0x8b48
0x0000000000401e26 : ret 0x8bb5
0x0000000000412fd2 : ret 0x8bbd
0x0000000000418778 : ret 0x8ce9
0x000000000042722c : ret 0x979f
0x0000000000432030 : ret 0x9ae8
0x0000000000411018 : ret 0x9c11
0x000000000040d9bb : ret 0xa
0x0000000000433145 : ret 0xa414
0x00000000004229ec : ret 0xa51c
0x000000000041f545 : ret 0xa9b9
0x000000000041afc2 : ret 0xade6
0x00000000004132c9 : ret 0xb0
0x0000000000407917 : ret 0xb158
0x000000000041ecb0 : ret 0xb91a
0x0000000000405daa : ret 0xb928
0x000000000042a39b : ret 0xb9b6
0x0000000000412a67 : ret 0xb9c6
0x0000000000403b93 : ret 0xb9cd
0x0000000000431000 : ret 0xbae8
0x000000000042456e : ret 0xbce8
0x000000000040af54 : ret 0xbe0f
0x0000000000422d33 : ret 0xbe10
0x0000000000417863 : ret 0xbe9
0x000000000042bece : ret 0xc
0x0000000000401d95 : ret 0xc148
0x00000000004050e8 : ret 0xc6c5
0x00000000004204f0 : ret 0xcae8
0x0000000000404033 : ret 0xd284
0x0000000000420d63 : ret 0xd4e9
0x0000000000417e67 : ret 0xd549
0x00000000004146d0 : ret 0xdae8
0x0000000000432ced : ret 0xdde8
0x0000000000406fa7 : ret 0xe280
0x0000000000411409 : ret 0xe6b9
0x0000000000412ea7 : ret 0xe95c
0x000000000040613d : ret 0xe980
0x000000000042137c : ret 0xee8
0x0000000000408ee7 : ret 0xf280
0x000000000041f725 : ret 0xf41
0x000000000040647a : ret 0xf720
0x00000000004180ec : ret 0xfb94
0x000000000041ee9b : ret 0xff9f
0x000000000042083e : ret 0xffa5
0x000000000041f081 : ret 0xffbf
0x000000000041faeb : ret 0xffc4
0x000000000041f127 : ret 0xffc5
0x000000000041f155 : ret 0xffd5
0x000000000041f223 : ret 0xffd8
0x000000000041fb91 : ret 0xffd9
0x0000000000413125 : ret 0xffdd
0x000000000041f3b9 : ret 0xffe0
0x000000000041e48e : ret 0xfffa
0x0000000000414b5a : ret 0xfffb
0x00000000004256ea : ret 0xfffd
0x000000000042e289 : ret 0xffff
0x0000000000403781 : ret 1
0x0000000000400718 : ret 2
0x0000000000410620 : ret 3
0x0000000000408aa2 : ret 4
0x0000000000424d58 : ret 5
0x000000000040a18e : ret 6
0x0000000000421560 : ret 8
0x000000000042fdf5 : ret 9
0x000000000043688d : retf ; std ; call rax
0x000000000042b184 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040afb6 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424c03 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436a5c : ror bl, -2 ; call qword ptr [rax]
0x0000000000418f46 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000406168 : ror byte ptr [r8 - 0x3bba38f0], 1 ; mov dh, -0x2f ; ret 0xe980
0x0000000000401d9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401dab ; pop rbp ; ret
0x0000000000406169 : ror byte ptr [rax - 0x3bba38f0], 1 ; mov dh, -0x2f ; ret 0xe980
0x000000000042fd42 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004161da : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000418f47 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004268e0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000413530 : ror dword ptr [rcx - 0x3b7cb738], 0x60 ; pop rbp ; ret
0x000000000041060e : sahf ; adc al, -1 ; inc edi ; cwde ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000040b94f : sahf ; ret 0x4988
0x00000000004283e1 : sahf ; ret 0xd284
0x000000000042a85e : salc ; ret
0x00000000004370c9 : salc ; std ; call qword ptr [rbx]
0x0000000000436c0d : sar bh, cl ; call rax
0x000000000043681c : sar cl, 1 ; cld ; call qword ptr [rax]
0x00000000004187f4 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x0000000000401d9e : sar eax, 1 ; jne 0x401da9 ; pop rbp ; ret
0x0000000000436c1d : sar edi, cl ; call qword ptr [rax]
0x0000000000401d9d : sar rax, 1 ; jne 0x401daa ; pop rbp ; ret
0x0000000000436c4c : sbb ah, -1 ; call rax
0x0000000000401e48 : sbb al, -0x5b ; ret 0x89b5
0x0000000000436fc0 : sbb al, 0 ; add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000436f80 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x0000000000421ff9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000436e68 : sbb byte ptr [rdi], al ; std ; call qword ptr [rdx]
0x00000000004264c3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f53e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000407916 : scasd eax, dword ptr [rdi] ; ret 0xb158
0x0000000000434f55 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000434f57 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409cc4 : shr cl, cl ; ret
0x000000000043681d : stc ; cld ; call qword ptr [rax]
0x000000000043685e : std ; call qword ptr [rax]
0x00000000004370ca : std ; call qword ptr [rbx]
0x0000000000436e6a : std ; call qword ptr [rdx]
0x000000000043712a : std ; call qword ptr [rsi]
0x000000000043684e : std ; call rax
0x000000000042c023 : std ; inc edi ; in al, dx ; int1 ; ret
0x0000000000436eca : std ; jmp qword ptr [rcx]
0x0000000000436906 : std ; push qword ptr [rax + 0x30000009] ; in al, dx ; std ; call rax
0x0000000000436886 : std ; push qword ptr [rax + 0x40000007] ; retf ; std ; call rax
0x0000000000436846 : std ; push qword ptr [rax + 6] ; cmp ch, bh ; call rax
0x00000000004368d6 : std ; push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x1e], dh ; std ; call qword ptr [rax]
0x0000000000436916 : std ; push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 8], dh ; std ; call qword ptr [rax]
0x00000000004121df : sti ; add al, 0 ; add byte ptr [rbx + 0x3a2dbc45], cl ; ret 0x2f73
0x000000000040fbe9 : stosb byte ptr [rdi], al ; xchg eax, edi ; ret
0x0000000000436d01 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x000000000040fc3d : stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000041c587 : sub al, 0x38 ; ret 0x8589
0x000000000041f543 : sub al, 0x38 ; ret 0xa9b9
0x0000000000430938 : sub al, 0x61 ; ret
0x0000000000437b49 : sub edi, edi ; jmp rax
0x0000000000435331 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000435330 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042bba1 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000425ffb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004306a9 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x00000000004189d6 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b5d8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e0ed : test al, 0x45 ; jmp 0x42e549
0x00000000004221dd : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000425ed8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000412512 : test bl, dh ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004352ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000437064 : test byte ptr [rbx], al ; add byte ptr [rax], al ; js 0x437040 ; std ; call qword ptr [rax]
0x0000000000436e64 : test byte ptr [rcx], al ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; call qword ptr [rdx]
0x0000000000405652 : test byte ptr [rdi], bh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040a705 : test byte ptr [rdx - 0x16fffffa], bh ; ret 1
0x0000000000424d25 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000428b14 : test ch, cl ; ret
0x0000000000430ca1 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000418b74 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004187da : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000425fe0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000425d48 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042fd7c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000043056a : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000424bdf : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x424bad ; ret 0x1ce9
0x00000000004307ad : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000043053f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000043186e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000418320 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x00000000004182b0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000428b13 : test r13b, r9b ; ret
0x0000000000419571 : xchg eax, ebp ; ret
0x000000000040398c : xchg eax, ebp ; ret 0x8445
0x0000000000404928 : xchg eax, ebp ; ret 0xd284
0x0000000000406fa6 : xchg eax, ebp ; ret 0xe280
0x0000000000408ee6 : xchg eax, ebp ; ret 0xf280
0x0000000000434f56 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042d84f : xchg eax, ebx ; ret 0xd284
0x000000000041c56b : xchg eax, ecx ; ret
0x000000000040fbea : xchg eax, edi ; ret
0x000000000042b011 : xchg eax, edi ; ret 0xd284
0x000000000041c6bb : xchg eax, edx ; ret
0x0000000000425ede : xchg eax, edx ; ret 0xd284
0x0000000000410a42 : xchg eax, esi ; ret
0x0000000000404032 : xchg eax, esi ; ret 0xd284
0x0000000000409386 : xchg eax, esp ; ret
0x000000000040dc8c : xchg eax, esp ; ret 0x8445
0x00000000004048d4 : xchg eax, esp ; ret 0xd284
0x0000000000406479 : xlatb ; ret 0xf720
0x000000000043690c : xor ah, ch ; std ; call rax
0x000000000043123c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004224f7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000436b5d : xor edi, edi ; call qword ptr [rax]
0x00000000004190bd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
