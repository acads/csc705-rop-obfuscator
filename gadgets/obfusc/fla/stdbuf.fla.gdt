0x00000000004453c9 : adc al, -3 ; call qword ptr [rbx]
0x00000000004446a5 : adc al, 0 ; add ah, al ; std ; std ; jmp rsp
0x0000000000444bc9 : adc bh, ah ; call qword ptr [rsi]
0x0000000000419f30 : adc byte ptr [rax - 0x75], cl ; jge 0x419ef2 ; call rax
0x0000000000419f2f : adc byte ptr [rax - 0x75], cl ; jge 0x419ef3 ; call rax
0x000000000041a209 : adc byte ptr [rax - 0x75], cl ; jge 0x41a1cb ; call rax
0x000000000041a208 : adc byte ptr [rax - 0x75], cl ; jge 0x41a1cc ; call rax
0x00000000004422d6 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004422c7 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x00000000004422c6 : adc byte ptr [rax], r8b ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x0000000000408dde : adc byte ptr [rsi - 0x75], ah ; or al, 0x25 ; ret 0x443c
0x00000000004445e5 : adc dword ptr [rax], eax ; add ah, dl ; std ; jmp rsp
0x0000000000415c2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000441d9d : adc eax, 0x1fb80000 ; lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000412059 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000444529 : adc edi, ebp ; jmp rsp
0x0000000000445563 : add ah, ah ; or eax, 0x55080000 ; std ; jmp rax
0x0000000000444527 : add ah, al ; adc edi, ebp ; jmp rsp
0x00000000004446e7 : add ah, al ; and al, 0xffffffffffffffff ; jmp rsp
0x0000000000445143 : add ah, al ; or dword ptr [rax], eax ; add byte ptr [rax], cl ; hlt ; cld ; jmp rdx
0x00000000004446a7 : add ah, al ; std ; std ; jmp rsp
0x00000000004442e7 : add ah, dl ; in al, dx ; sti ; jmp rsp
0x00000000004445e7 : add ah, dl ; std ; jmp rsp
0x0000000000444329 : add al, -4 ; jmp rsp
0x0000000000444bc5 : add al, 0 ; add al, bh ; adc bh, ah ; call qword ptr [rsi]
0x000000000041c153 : add al, 0 ; add cl, ch ; ret 1
0x0000000000445484 : add al, 0xd ; add byte ptr [rax], al ; call 0xffffffffd34451ce
0x0000000000444bc7 : add al, bh ; adc bh, ah ; call qword ptr [rsi]
0x0000000000445707 : add al, bh ; loop 0x44570c ; call qword ptr [rsi]
0x0000000000442d31 : add al, bh ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x00000000004232d5 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000402f58 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415523 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000445487 : add al, ch ; cmp bh, ch ; call rdx
0x0000000000444ea7 : add al, ch ; fdivr st(4) ; jmp qword ptr [rdx]
0x00000000004232d7 : add al, ch ; ret
0x0000000000433018 : add al, ch ; ret 0xfce7
0x00000000004456a7 : add al, ch ; ret 0xfffd
0x000000000041c5a6 : add bh, al ; in al, dx ; int1 ; ret
0x000000000041591e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000415686 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000420b18 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000420d5b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000420aed : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000440bf9 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000442d8f : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000441ba4 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000442c55 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000044220d : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000440fec : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000044338f : add bl, dh ; ret
0x0000000000444b07 : add byte ptr [rax + 0xa], cl ; cld ; call qword ptr [rsi]
0x000000000040691e : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041a311 : add byte ptr [rax - 0x75], cl ; jge 0x41a2cb ; call rax
0x0000000000421965 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041c87b : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x00000000004316bb : add byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x000000000043175c : add byte ptr [rax - 0x77], cl ; ret 0xabe8
0x0000000000444567 : add byte ptr [rax - 3], al ; jmp rsp
0x0000000000444bc2 : add byte ptr [rax], al ; add al, 0 ; add al, bh ; adc bh, ah ; call qword ptr [rsi]
0x0000000000445482 : add byte ptr [rax], al ; add al, 0xd ; add byte ptr [rax], al ; call 0xffffffffd34451d0
0x000000000041591c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000415684 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000420b16 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000420d59 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000440bf7 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000442cc1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x000000000044220b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000442255 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000044338d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040691c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000421963 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041c879 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000044338b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402dd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044338c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000435f94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000435d93 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x0000000000411d9e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404ca9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000404c25 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004068b2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000040277c : add byte ptr [rax], al ; add byte ptr [rbx - 0x9d247bb], cl ; ret
0x00000000004021db : add byte ptr [rax], al ; add byte ptr [rbx - 0xad247bb], cl ; ret
0x000000000041c05e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000404186 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004091cf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000410c51 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000404d65 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004037ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004045a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000409cad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402dd6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ddfb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041b5bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000403682 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409c8f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004033cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434e56 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040456d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041205b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411ac0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424048 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415c2d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412017 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401653 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444ea2 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; call 0x23444b8e
0x0000000000444566 : add byte ptr [rax], al ; and bpl, r15b ; jmp rsp
0x0000000000444ea6 : add byte ptr [rax], al ; call 0x23444b8a
0x0000000000445486 : add byte ptr [rax], al ; call 0xffffffffd34451cc
0x0000000000444bc6 : add byte ptr [rax], al ; clc ; adc bh, ah ; call qword ptr [rsi]
0x0000000000445706 : add byte ptr [rax], al ; clc ; loop 0x44570d ; call qword ptr [rsi]
0x0000000000445406 : add byte ptr [rax], al ; cmp byte ptr [rsi], dh ; std ; jmp qword ptr [rbx]
0x00000000004453c6 : add byte ptr [rax], al ; cwde ; adc al, -3 ; call qword ptr [rbx]
0x0000000000445562 : add byte ptr [rax], al ; in al, 0xd ; add byte ptr [rax], al ; or byte ptr [rbp - 3], dl ; jmp rax
0x0000000000444326 : add byte ptr [rax], al ; je 0x444333 ; cld ; jmp rsp
0x00000000004444e6 : add byte ptr [rax], al ; je 0x4444d8 ; cld ; jmp rsp
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x0000000000404569 : add byte ptr [rax], al ; jmp 0x404578
0x00000000004051d9 : add byte ptr [rax], al ; jmp 0x4051e8
0x000000000043602f : add byte ptr [rax], al ; jmp 0x43613f
0x0000000000444466 : add byte ptr [rax], al ; mov ah, -0x1c ; cld ; jmp rsp
0x0000000000444626 : add byte ptr [rax], al ; mov ah, 0x7a ; std ; jmp rsp
0x0000000000418b57 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004053e7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403208 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000436f06 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004061c9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409579 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436bbd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000040691d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000445222 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; or edi, ebp ; call rdx
0x0000000000445146 : add byte ptr [rax], al ; or ah, dh ; cld ; jmp rdx
0x0000000000445566 : add byte ptr [rax], al ; or byte ptr [rbp - 3], dl ; jmp rax
0x0000000000444b06 : add byte ptr [rax], al ; or dil, spl ; call qword ptr [rsi]
0x0000000000402ead : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411d9f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411a78 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444426 : add byte ptr [rax], al ; push rsi ; cld ; jmp rsp
0x000000000044338e : add byte ptr [rax], al ; ret
0x0000000000445226 : add byte ptr [rax], al ; sbb byte ptr [rbx], cl ; std ; call rdx
0x00000000004443e6 : add byte ptr [rax], al ; sub r15b, spl ; jmp rsp
0x0000000000445402 : add byte ptr [rax], al ; test byte ptr [rax + rax], cl ; add byte ptr [rax], bh ; std ; jmp qword ptr [rbx]
0x0000000000444b02 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; or dil, spl ; call qword ptr [rsi]
0x0000000000445702 : add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rax], al ; clc ; loop 0x445711 ; call qword ptr [rsi]
0x00000000004445a6 : add byte ptr [rax], al ; xchg eax, esp ; and edi, ebp ; jmp rsp
0x00000000004444a6 : add byte ptr [rax], al ; xor al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x0000000000445407 : add byte ptr [rax], bh ; std ; jmp qword ptr [rbx]
0x0000000000445227 : add byte ptr [rax], bl ; or edi, ebp ; call rdx
0x0000000000445147 : add byte ptr [rax], cl ; hlt ; cld ; jmp rdx
0x0000000000445567 : add byte ptr [rax], cl ; push rbp ; std ; jmp rax
0x0000000000435f96 : add byte ptr [rbx + 0x262db845], cl ; ret
0x0000000000435d95 : add byte ptr [rbx + 0x412dd445], cl ; ret 0x48e7
0x0000000000411da0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411a79 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444b03 : add byte ptr [rbx + rax + 0xa480000], al ; cld ; call qword ptr [rsi]
0x0000000000404cab : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000404c27 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004068b4 : add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000040277e : add byte ptr [rbx - 0x9d247bb], cl ; ret
0x00000000004021dd : add byte ptr [rbx - 0xad247bb], cl ; ret
0x000000000041c1be : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000041c060 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x0000000000445483 : add byte ptr [rcx + 0x3ae80000], al ; std ; call rdx
0x0000000000404188 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004091d1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042e3d0 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000410c53 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004444e7 : add byte ptr [rcx + rbp*8 - 4], dh ; jmp rsp
0x000000000041596e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x0000000000444ea3 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; call 0x23444b8d
0x0000000000445703 : add byte ptr [rdi + rcx - 0x1d080000], al ; std ; call qword ptr [rsi]
0x0000000000404d67 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004037bc : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004045aa : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000409caf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402dd8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ddfd : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041b5bf : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000403684 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409c91 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004033ce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434e58 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004444a7 : add byte ptr [rdi], dh ; cld ; jmp rsp
0x00000000004443e7 : add byte ptr [rdx + rbp - 4], al ; jmp rsp
0x0000000000445223 : add byte ptr [rdx + rcx + 0xb180000], ah ; std ; call rdx
0x000000000042355d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444427 : add byte ptr [rsi + rdx*2 - 4], al ; jmp rsp
0x0000000000444327 : add byte ptr [rsp + rax - 4], dh ; jmp rsp
0x0000000000444bc3 : add byte ptr [rsp + rax], al ; add al, bh ; adc bh, ah ; call qword ptr [rsi]
0x0000000000445403 : add byte ptr [rsp + rcx + 0x36380000], al ; std ; jmp qword ptr [rbx]
0x0000000000402dd3 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414669 : add cl, ch ; ret
0x000000000040456f : add cl, ch ; ret 0
0x000000000040264d : add cl, ch ; ret 1
0x000000000041c5a4 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x0000000000412015 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041273a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c1bc : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000421253 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041c890 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000435e0b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004202ef : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404481 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bc4 : add eax, 0x24476e ; add ebx, esi ; ret
0x0000000000420ee1 : add eax, 0x458b0000 ; call 0xffffffffc3a33b21
0x000000000041843f : add eax, 0x53b80000 ; jrcxz 0x4184af ; ret 0x8fb9
0x0000000000436f04 : add eax, 0x8b000000 ; clc ; pop rbp ; ret
0x0000000000403206 : add eax, 0x8b000000 ; hlt ; pop rbp ; ret
0x0000000000418b55 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000440bf6 : add eax, 0xc7000000 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x00000000004442e5 : add eax, 0xecd40000 ; sti ; jmp rsp
0x0000000000444b05 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xa], cl ; cld ; call qword ptr [rsi]
0x000000000040264b : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x0000000000421819 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x000000000041c71b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000420e25 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000401e7b : add esp, 0x10 ; pop rbp ; ret
0x000000000041596c : add esp, 0x100 ; pop rbp ; ret
0x0000000000412737 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000422705 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000041c6d6 : add esp, 0x120 ; pop rbp ; ret
0x00000000004217ea : add esp, 0x130 ; pop rbp ; ret
0x00000000004043bf : add esp, 0x180 ; pop rbp ; ret
0x0000000000415adc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402ea9 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000409342 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000411ac3 : add esp, 0x20 ; pop rbp ; ret
0x000000000042355b : add esp, 0x200 ; pop rbp ; ret
0x0000000000414541 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000405936 : add esp, 0x30 ; pop rbp ; ret
0x00000000004084ac : add esp, 0x360 ; pop rbp ; ret
0x0000000000418a25 : add esp, 0x380 ; pop rbp ; ret
0x0000000000406337 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401e34 : add esp, 0x50 ; pop rbp ; ret
0x000000000041eae9 : add esp, 0x520 ; pop rbp ; ret
0x000000000041a3bf : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000403445 : add esp, 0x60 ; pop rbp ; ret
0x0000000000406ec5 : add esp, 0x70 ; pop rbp ; ret
0x000000000043abb3 : add esp, 0x7f8 ; pop rbp ; ret
0x0000000000405c16 : add esp, 0x80 ; pop rbp ; ret
0x000000000040388d : add esp, 0x90 ; pop rbp ; ret
0x0000000000403d2d : add esp, 0xa0 ; pop rbp ; ret
0x00000000004239ea : add esp, 0xc0 ; pop rbp ; ret
0x0000000000411a74 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000406832 : add esp, 0xd0 ; pop rbp ; ret
0x000000000044330e : add esp, 0xd70 ; pop rbp ; ret
0x0000000000401656 : add esp, 8 ; ret
0x0000000000421979 : add qword ptr [r8], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x0000000000421818 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041c71a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401e7a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041596b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000412736 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000422704 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000041c6d5 : add rsp, 0x120 ; pop rbp ; ret
0x00000000004217e9 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004043be : add rsp, 0x180 ; pop rbp ; ret
0x0000000000415adb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402ea8 : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000409341 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000411ac2 : add rsp, 0x20 ; pop rbp ; ret
0x000000000042355a : add rsp, 0x200 ; pop rbp ; ret
0x0000000000414540 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000405935 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004084ab : add rsp, 0x360 ; pop rbp ; ret
0x0000000000418a24 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000406336 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401e33 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041eae8 : add rsp, 0x520 ; pop rbp ; ret
0x000000000041a3be : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000403444 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406ec4 : add rsp, 0x70 ; pop rbp ; ret
0x000000000043abb2 : add rsp, 0x7f8 ; pop rbp ; ret
0x0000000000405c15 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040388c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000403d2c : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004239e9 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000411a73 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000406831 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044330d : add rsp, 0xd70 ; pop rbp ; ret
0x0000000000401655 : add rsp, 8 ; ret
0x0000000000401bc7 : and al, 0 ; add ebx, esi ; ret
0x000000000041706b : and al, 0xffffffffffffffac ; ret 0x89cc
0x0000000000418604 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000433016 : and al, 0xffffffffffffffb0 ; add al, ch ; ret 0xfce7
0x00000000004446e9 : and al, 0xffffffffffffffff ; jmp rsp
0x00000000004202ee : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404480 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000444ea4 : and al, 7 ; add byte ptr [rax], al ; call 0x23444b8c
0x0000000000444568 : and bpl, r15b ; jmp rsp
0x000000000041c6d8 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444569 : and ch, bh ; jmp rsp
0x000000000040555f : and eax, 0x646390 ; pop rbp ; ret
0x0000000000405583 : and eax, 0x646398 ; pop rbp ; ret
0x0000000000440fea : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x00000000004445a9 : and edi, ebp ; jmp rsp
0x0000000000444ea8 : call 0x23444b88
0x00000000004353ca : call 0x4016a2
0x000000000041c5d0 : call 0x401819
0x00000000004356ee : call 0x401962
0x0000000000435717 : call 0x4019b2
0x0000000000405803 : call 0x401a22
0x00000000004238a7 : call 0x401b06
0x00000000004215b1 : call 0x418db9
0x000000000043946d : call 0xffffffffc2834de9
0x0000000000420ee6 : call 0xffffffffc3a33b1c
0x0000000000420ee5 : call 0xffffffffc3a33b1d
0x0000000000420f28 : call 0xffffffffc3a33c5e
0x0000000000420f27 : call 0xffffffffc3a33c5f
0x0000000000445488 : call 0xffffffffd34451ca
0x0000000000411ab9 : call 0xffffffffe903a409
0x0000000000411ab8 : call 0xffffffffe903a40a
0x000000000040d4fd : call 0xfffffffff7395a94
0x000000000041f873 : call 0xfffffffffee67e45
0x000000000041f872 : call 0xfffffffffee67e46
0x000000000041b805 : call 0xffffffffff463dda
0x0000000000410029 : call 0xffffffffff5585fb
0x0000000000410028 : call 0xffffffffff5585fc
0x0000000000410029 : call 0xffffffffff5585fd
0x0000000000410028 : call 0xffffffffff5585fe
0x0000000000408f18 : call 0xffffffffffad14ea
0x0000000000408f17 : call 0xffffffffffad14eb
0x000000000042032a : call 0xffffffffffbe88fc
0x0000000000420329 : call 0xffffffffffbe88fd
0x0000000000443369 : call qword ptr [r12 + rbx*8]
0x00000000004043b4 : call qword ptr [rax]
0x000000000041f911 : call qword ptr [rbx]
0x0000000000411045 : call qword ptr [rcx]
0x000000000041fa49 : call qword ptr [rdi]
0x000000000040efe3 : call qword ptr [rdx]
0x00000000004092b8 : call qword ptr [rsi]
0x000000000044336a : call qword ptr [rsp + rbx*8]
0x0000000000419e94 : call r8
0x0000000000401bed : call rax
0x0000000000408f1e : call rbx
0x0000000000420b1e : call rcx
0x000000000040801c : call rdi
0x000000000041a02e : call rdx
0x0000000000415924 : call rsi
0x0000000000440539 : call rsp
0x000000000041d046 : cdq ; jbe 0x41d06a ; ret
0x000000000041e96d : cdq ; jbe 0x41e991 ; ret
0x0000000000404c2c : cdq ; ret
0x0000000000444bc8 : clc ; adc bh, ah ; call qword ptr [rsi]
0x0000000000402ea7 : clc ; add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000403443 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000423e20 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x0000000000445708 : clc ; loop 0x44570b ; call qword ptr [rsi]
0x0000000000406922 : clc ; pop rbp ; ret
0x0000000000401ea7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422703 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000444b0a : cld ; call qword ptr [rsi]
0x00000000004444a2 : cld ; inc esp ; or al, 0 ; add byte ptr [rdi], dh ; cld ; jmp rsp
0x0000000000444422 : cld ; inc esp ; or al, byte ptr [rax] ; add byte ptr [rsi + rdx*2 - 4], al ; jmp rsp
0x00000000004443e2 : cld ; inc esp ; or dword ptr [rax], eax ; add byte ptr [rdx + rbp - 4], al ; jmp rsp
0x00000000004444e2 : cld ; inc esp ; or eax, 0xe9740000 ; cld ; jmp rsp
0x0000000000402875 : cld ; jmp 0x402eb9
0x0000000000444fca : cld ; jmp qword ptr [rax]
0x0000000000444eaa : cld ; jmp qword ptr [rdx]
0x0000000000444b8a : cld ; jmp rbx
0x000000000044514a : cld ; jmp rdx
0x000000000044432a : cld ; jmp rsp
0x000000000040fc7d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004021e2 : cmc ; ret
0x000000000041ae0d : cmp al, -0x2a ; ret
0x0000000000429544 : cmp al, -0x2e ; ret
0x0000000000445489 : cmp bh, ch ; call rdx
0x0000000000445408 : cmp byte ptr [rsi], dh ; std ; jmp qword ptr [rbx]
0x0000000000442178 : cmp dh, -1 ; call qword ptr [rax]
0x0000000000441943 : cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x00000000004422d5 : cmp eax, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x000000000041c5d1 : cmp edx, dword ptr [rdx - 2] ; inc edi ; in al, dx ; int1 ; ret
0x000000000043c7ae : cmp esi, dword ptr [rdi] ; ret 0x8589
0x0000000000441174 : cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000429597 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, -0x2e ; ret
0x0000000000411f54 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000402a92 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov edi, 0xcfe3b975 ; ret
0x00000000004453c8 : cwde ; adc al, -3 ; call qword ptr [rbx]
0x000000000041cff2 : cwde ; jbe 0x41d016 ; ret
0x000000000040472b : cwde ; js 0x4046d5 ; ret
0x0000000000404772 : cwde ; js 0x40471c ; ret
0x00000000004047ac : cwde ; js 0x404756 ; ret
0x000000000043900d : cwde ; mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000408315 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000041e832 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000435d28 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000413eab : dec dword ptr [rax - 0x77] ; ret 0x5ce8
0x0000000000414401 : dec dword ptr [rax - 0x77] ; ret 0x6e8
0x000000000043052a : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041e868 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000414ce7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004215ad : dec dword ptr [rax - 0x77] ; ret 0xfae8
0x000000000042e329 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042e2d4 : dec dword ptr [rax - 0x7f] ; ret 0x20
0x000000000043fc27 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040fe22 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041012d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000439fa5 : dec dword ptr [rax - 0x7f] ; ret 4
0x00000000004421ec : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000441946 : dec dword ptr [rcx] ; ret 0x9589
0x0000000000411634 : dec dword ptr [rdi] ; ret 0x8589
0x000000000041c14f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000428e68 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; ret 0
0x0000000000414663 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000424f14 : dec dword ptr [rdi] ; test cl, dh ; ret 0
0x000000000042124f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000424b5c : dec dword ptr [rdi] ; test dl, bl ; ret 0
0x0000000000442dfe : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x000000000040339a : dec dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000041a2b7 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x000000000042e435 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000040f168 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041e6d4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000414523 : dec ebx ; je 0x4144e9 ; ret 0x1ce9
0x000000000041a30e : enter -0x74b8, 0 ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000419f2c : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x419ef6 ; call rax
0x000000000041a205 : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x41a1cf ; call rax
0x000000000041a37e : enter -0x74b8, 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x41a340 ; call rax
0x000000000041b5bb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000406b6d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418f04 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004033ca : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403414 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412f69 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041fca3 : fcmovbe st(0), st(5) ; jmp 0x420301
0x0000000000445a21 : fcos ; call qword ptr [rax]
0x0000000000444ea9 : fdivr st(4) ; jmp qword ptr [rdx]
0x000000000041c88e : ficomp word ptr [rcx + rax - 0x3b7cb800] ; push rax ; pop rbp ; ret
0x0000000000416224 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000421969 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041c87f : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000041e836 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000430070 : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x0000000000430045 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000044336c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000421978 : hlt ; add qword ptr [r8], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423f7c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419136 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000445149 : hlt ; cld ; jmp rdx
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x6462e0 ; jmp rax
0x000000000040320c : hlt ; pop rbp ; ret
0x0000000000434dbd : idiv bh ; call qword ptr [rcx]
0x000000000042e9c3 : idiv bh ; call qword ptr [rdi]
0x000000000042f1cb : idiv bh ; call qword ptr [rdx]
0x000000000042f646 : idiv bh ; call rcx
0x0000000000434aa0 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000434bd6 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000434dd6 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431e62 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000431cf0 : idiv bh ; jmp qword ptr [rax]
0x0000000000434f41 : idiv bh ; jmp qword ptr [rcx]
0x00000000004309dc : idiv bh ; jmp qword ptr [rdi]
0x0000000000431477 : idiv bh ; jmp qword ptr [rsi]
0x0000000000430771 : idiv bh ; jmp rbx
0x000000000042f69f : idiv bh ; jmp rdi
0x000000000042e306 : idiv bh ; jmp rdx
0x0000000000431f1a : idiv bh ; jmp rsp
0x0000000000430528 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042ff16 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000430be7 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430707 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004311cf : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427633 : imul al ; ret 0x893f
0x000000000043521c : imul eax ; ret 0x483f
0x000000000042cd7b : imul eax ; ret 0x893f
0x0000000000414fbe : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000420d06 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000040f5d9 : in al, -0x7f ; ret 0xff9f
0x000000000040f7bf : in al, -0x7f ; ret 0xffbf
0x000000000040f865 : in al, -0x7f ; ret 0xffc5
0x000000000040f893 : in al, -0x7f ; ret 0xffd5
0x000000000040f961 : in al, -0x7f ; ret 0xffd8
0x000000000040faf7 : in al, -0x7f ; ret 0xffe0
0x0000000000444469 : in al, -4 ; jmp rsp
0x00000000004037b8 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043655f : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000445564 : in al, 0xd ; add byte ptr [rax], al ; or byte ptr [rbp - 3], dl ; jmp rax
0x0000000000418c2f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004194df : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041c5a9 : in al, dx ; int1 ; ret
0x000000000040968a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000418b5b : in al, dx ; pop rbp ; ret
0x00000000004442e9 : in al, dx ; sti ; jmp rsp
0x0000000000404e2b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419ea4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000410c4f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000434aa2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042ff18 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f211 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041de70 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004117fa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402855 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004221e2 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000041c4bb : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000419ee2 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x000000000041c5d4 : inc edi ; in al, dx ; int1 ; ret
0x0000000000412708 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004092b2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000408fa2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000440533 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000442a12 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000441b22 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000043fd11 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000440d73 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x00000000004446a3 : inc esp ; adc al, 0 ; add ah, al ; std ; std ; jmp rsp
0x00000000004445e3 : inc esp ; adc dword ptr [rax], eax ; add ah, dl ; std ; jmp rsp
0x00000000004442e3 : inc esp ; add eax, 0xecd40000 ; sti ; jmp rsp
0x00000000004444a3 : inc esp ; or al, 0 ; add byte ptr [rdi], dh ; cld ; jmp rsp
0x0000000000444423 : inc esp ; or al, byte ptr [rax] ; add byte ptr [rsi + rdx*2 - 4], al ; jmp rsp
0x00000000004443e3 : inc esp ; or dword ptr [rax], eax ; add byte ptr [rdx + rbp - 4], al ; jmp rsp
0x00000000004444e3 : inc esp ; or eax, 0xe9740000 ; cld ; jmp rsp
0x0000000000444563 : inc esp ; sldt word ptr [rax] ; and bpl, r15b ; jmp rsp
0x0000000000402874 : insd dword ptr [rdi], dx ; cld ; jmp 0x402eba
0x000000000040bdaf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040f3ef : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004356ef : insd dword ptr [rdi], dx ; ret 0xfffc
0x00000000004092af : int 0x83
0x000000000041c1c3 : int1 ; ret
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x00000000004438f9 : jb 0x443962 ; jns 0x443904 ; push rax ; ret
0x00000000004438f8 : jb 0x443963 ; jns 0x443905 ; push rax ; ret
0x000000000041cff3 : jbe 0x41d015 ; ret
0x000000000041d047 : jbe 0x41d069 ; ret
0x000000000041e96e : jbe 0x41e990 ; ret
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x6462e0 ; jmp rax
0x0000000000413752 : je 0x413714 ; ret 0x8589
0x0000000000413832 : je 0x4137f4 ; ret 0x8589
0x0000000000414420 : je 0x4143e2 ; ret 0x7d81
0x0000000000414525 : je 0x4144e7 ; ret 0x1ce9
0x0000000000444328 : je 0x444331 ; cld ; jmp rsp
0x00000000004444e8 : je 0x4444d6 ; cld ; jmp rsp
0x00000000004190dc : jg 0x4190f0 ; xchg eax, edi ; ret 0xd284
0x0000000000434f2a : jg 0x434f3e ; xchg eax, esp ; ret 0xd284
0x0000000000436eb3 : jg 0x436eba ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405399 : jge 0x405393 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000414ad8 : jge 0x414aef ; ret
0x0000000000414fc3 : jge 0x414fda ; ret
0x0000000000419f33 : jge 0x419eef ; call rax
0x000000000041a20c : jge 0x41a1c8 ; call rax
0x000000000041a314 : jge 0x41a2c8 ; call rax
0x000000000041a385 : jge 0x41a339 ; call rax
0x000000000041d6ba : jge 0x41d733 ; ret
0x00000000004149ac : jl 0x4149c3 ; ret
0x000000000041d70e : jle 0x41d787 ; ret
0x000000000041e33c : jle 0x41e3b5 ; ret
0x000000000040182b : jmp 0x401667
0x0000000000402876 : jmp 0x402eb8
0x0000000000402ac4 : jmp 0x402eb9
0x000000000040456b : jmp 0x404576
0x00000000004051db : jmp 0x4051e6
0x00000000004092e2 : jmp 0x409350
0x000000000040ed9d : jmp 0x411a83
0x0000000000411831 : jmp 0x411a85
0x0000000000414fbd : jmp 0x415535
0x0000000000418721 : jmp 0x418a33
0x000000000041c5a2 : jmp 0x41c6e7
0x000000000041e69f : jmp 0x41eaf7
0x000000000041e69e : jmp 0x41eaf8
0x000000000041fca5 : jmp 0x4202ff
0x0000000000420ab3 : jmp 0x420e4a
0x00000000004232d3 : jmp 0x423569
0x0000000000432eb5 : jmp 0x435d34
0x000000000042eb11 : jmp 0x435d35
0x0000000000430e6b : jmp 0x435d36
0x0000000000436031 : jmp 0x43613d
0x0000000000439363 : jmp 0x43abc1
0x000000000044213f : jmp 0x44331c
0x0000000000442895 : jmp 0x44331d
0x0000000000442c60 : jmp 0x44331e
0x0000000000401c1e : jmp 0x5b02ab5c
0x000000000043a691 : jmp 0xffffffff8cfd6ae2
0x000000000041a68e : jmp 0xffffffffb703aa5a
0x000000000040472a : jmp 0xffffffffc3e4bfcb
0x000000000040eebd : jmp qword ptr [rax]
0x000000000041002f : jmp qword ptr [rbx]
0x0000000000411a00 : jmp qword ptr [rcx]
0x0000000000422417 : jmp qword ptr [rdi]
0x0000000000411f55 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000403d91 : jmp qword ptr [rdx]
0x000000000040ffbf : jmp qword ptr [rsi]
0x0000000000401b67 : jmp rax
0x0000000000410b52 : jmp rbx
0x0000000000420d61 : jmp rcx
0x00000000004111ee : jmp rdi
0x0000000000401ba7 : jmp rdx
0x0000000000420af3 : jmp rsi
0x0000000000407f9f : jmp rsp
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x0000000000402a94 : jne 0x402a53 ; jrcxz 0x402a6b ; ret
0x00000000004057fc : jne 0x4057a7 ; mov rcx, rax ; mov al, 0 ; call 0x401a29
0x0000000000412706 : jne 0x41270f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004238a5 : jne 0x42388f ; call 0x401b08
0x00000000004438fc : jns 0x443901 ; push rax ; ret
0x00000000004438fb : jns 0x443902 ; push rax ; ret
0x0000000000406ec7 : jo 0x406f28 ; ret
0x0000000000412921 : jo 0x412982 ; ret
0x0000000000412a44 : jo 0x412aa5 ; ret
0x0000000000412b7e : jo 0x412bdf ; ret
0x00000000004162cc : jo 0x41632d ; ret
0x000000000041913a : jo 0x41919b ; ret
0x0000000000423e24 : jo 0x423e85 ; ret
0x0000000000443310 : jo 0x443324 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419677 : jp 0x4196a2 ; ret
0x00000000004196cb : jp 0x4196f6 ; ret
0x000000000041a26f : jp 0x41a29a ; ret
0x0000000000444629 : jp 0x44462a ; jmp rsp
0x0000000000402625 : jrcxz 0x4025f8 ; ret
0x0000000000402a96 : jrcxz 0x402a69 ; ret
0x0000000000416f38 : jrcxz 0x416f9e ; ret 0x8589
0x0000000000416f8c : jrcxz 0x416ff2 ; ret 0x8589
0x0000000000418444 : jrcxz 0x4184aa ; ret 0x8fb9
0x000000000041866f : jrcxz 0x4186d5 ; ret 0x8fb9
0x00000000004042ff : js 0x4042ec ; ret 0
0x000000000040472c : js 0x4046d4 ; ret
0x0000000000404773 : js 0x40471b ; ret
0x00000000004047ad : js 0x404755 ; ret
0x0000000000411a76 : js 0x411a8a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000441172 : lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x00000000004042fb : lcall ptr [rcx - 0x75] ; stc ; js 0x4042f0 ; ret 0
0x000000000043d266 : lodsb al, byte ptr [rsi] ; jmp rbx
0x0000000000417018 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x0000000000418605 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000402337 : loop 0x40230a ; ret
0x0000000000445709 : loop 0x44570a ; call qword ptr [rsi]
0x0000000000403c3e : loopne 0x403c47 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406830 : loopne 0x406883 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000409a4e : loopne 0x409a57 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041453f : loopne 0x414592 ; add esp, 0x2d0 ; pop rbp ; ret
0x0000000000416010 : loopne 0x416019 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041641c : loopne 0x41646c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041641b : loopne 0x41646d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041684f : loopne 0x41689f ; add esp, 0x40 ; pop rbp ; ret
0x000000000041684e : loopne 0x4168a0 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000441940 : loopne 0x4418d5 ; xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000444468 : mov ah, -0x1c ; cld ; jmp rsp
0x000000000042942c : mov ah, 0x47 ; ret 0x8589
0x000000000042ee04 : mov ah, 0x47 ; ret 0x88b9
0x0000000000402050 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000444628 : mov ah, 0x7a ; std ; jmp rsp
0x0000000000441549 : mov al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004091cd : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004090d9 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041b7da : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405801 : mov al, 0 ; call 0x401a24
0x00000000004236f3 : mov al, 0x2d ; ret 0xa414
0x0000000000409c0b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000402eab : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040447d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040462d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404e29 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405581 : mov byte ptr [0x646398], al ; pop rbp ; ret
0x0000000000406762 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041e071 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004115c8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041ddf9 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000401bc3 : mov byte ptr [rip + 0x24476e], 1 ; ret
0x0000000000435e0d : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004202f1 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404483 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000404f55 : mov dl, -0x47 ; ret
0x0000000000414110 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040555d : mov dword ptr [0x646390], edi ; pop rbp ; ret
0x00000000004098c7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040968b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004097ff : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004353c4 : mov dword ptr [rbp - 0x21bc], eax ; call 0x4016a8
0x000000000040204e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000419e8e : mov dword ptr [rbp - 0x5d8], eax ; call r8
0x000000000041a028 : mov dword ptr [rbp - 0x5e4], ecx ; call rdx
0x000000000041a14f : mov dword ptr [rbp - 0x5ec], ecx ; call rdx
0x000000000041871e : mov dword ptr [rbp - 0x7c], eax ; jmp 0x418a36
0x0000000000401e77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ea5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409a7d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042181c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000041c71e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000419f2e : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041a380 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000041a310 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000040957f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041635b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406333 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423b08 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041603f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004061cc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000418c2d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418b59 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041645e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405932 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415d30 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ec1 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004053e9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043655d : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041641a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406402 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416965 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409474 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040957c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409685 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041673f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409801 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000436bc0 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041291b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423f7a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419134 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040320a : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000403441 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000423e1e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406920 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000430e6d : mov ebp, 0xb800004e ; push rcx ; ret
0x00000000004356e9 : mov ebp, 0xfffff648 ; call 0x401967
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x000000000040317f : mov ecx, 0xcf6f24b9 ; ret
0x0000000000409688 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004057ff : mov ecx, eax ; mov al, 0 ; call 0x401a26
0x0000000000439191 : mov edi, 0x3fb94980 ; ret 0x6f69
0x0000000000401be5 : mov edi, 0x645e20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x6462e0 ; jmp rax
0x0000000000401ba2 : mov edi, 0x6462e0 ; jmp rdx
0x0000000000402a93 : mov edi, 0xcfe3b975 ; ret
0x0000000000419f32 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000041a313 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x00000000004356e8 : mov edi, dword ptr [rbp - 0x9b8] ; call 0x401968
0x000000000041c718 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004042fd : mov edi, ecx ; js 0x4042ee ; ret 0
0x0000000000443367 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000443366 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000438ee1 : mov esi, 0x3fb91b29 ; ret 0x6f69
0x00000000004238a4 : mov esi, dword ptr [rbp - 0x20] ; call 0x401b09
0x0000000000435711 : mov esi, dword ptr [rbp - 0x9b8] ; call 0x4019b8
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x6462e0 ; jmp rdx
0x000000000043900e : mov esp, 0x3fb90afd ; ret 0x6f69
0x0000000000438f37 : mov esp, 0x3fb9d511 ; ret 0x6f69
0x00000000004202f4 : mov esp, ebp ; pop rbp ; ret
0x000000000040555c : mov qword ptr [0x646390], rdi ; pop rbp ; ret
0x0000000000409a7c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042181b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041c71d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040204f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000441548 : mov r8b, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x00000000004236f2 : mov r8b, 0x2d ; ret 0xa414
0x0000000000419f2d : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041a37f : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000041a30f : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000041635a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406332 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423b07 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041603e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004061cb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041645d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405931 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415d2f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ec0 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000416419 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406401 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416964 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409473 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040957b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436bbf : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041291a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040691f : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x00000000004057fe : mov rcx, rax ; mov al, 0 ; call 0x401a27
0x0000000000419f31 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041a312 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004356e7 : mov rdi, qword ptr [rbp - 0x9b8] ; call 0x401969
0x0000000000435710 : mov rsi, qword ptr [rbp - 0x9b8] ; call 0x4019b9
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x6462e0 ; jmp rdx
0x00000000004202f3 : mov rsp, rbp ; pop rbp ; ret
0x000000000041270a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041270b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040fe5c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004051ce : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000414fbc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x415536
0x0000000000445224 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; or edi, ebp ; call rdx
0x000000000040472d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000429543 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, -0x2e ; ret
0x000000000042950d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000435f19 : movsx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000435e0c : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004202f0 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404482 : movzx eax, al ; pop rbp ; ret
0x0000000000443388 : nop dword ptr [rax + rax] ; ret
0x0000000000445148 : or ah, dh ; cld ; jmp rdx
0x0000000000445405 : or al, 0 ; add byte ptr [rax], bh ; std ; jmp qword ptr [rbx]
0x0000000000411a77 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004444a5 : or al, 0 ; add byte ptr [rdi], dh ; cld ; jmp rsp
0x0000000000408de1 : or al, 0x25 ; ret 0x443c
0x0000000000445225 : or al, byte ptr [rax] ; add byte ptr [rax], bl ; or edi, ebp ; call rdx
0x0000000000444425 : or al, byte ptr [rax] ; add byte ptr [rsi + rdx*2 - 4], al ; jmp rsp
0x0000000000444b09 : or bh, ah ; call qword ptr [rsi]
0x000000000040317e : or bh, byte ptr [rcx - 0x3090db47] ; ret
0x0000000000445568 : or byte ptr [rbp - 3], dl ; jmp rax
0x0000000000439192 : or byte ptr [rcx - 0x47], 0x3f ; ret 0x6f69
0x0000000000444b08 : or dil, spl ; call qword ptr [rsi]
0x0000000000445145 : or dword ptr [rax], eax ; add byte ptr [rax], cl ; hlt ; cld ; jmp rdx
0x00000000004443e5 : or dword ptr [rax], eax ; add byte ptr [rdx + rbp - 4], al ; jmp rsp
0x0000000000414667 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000445485 : or eax, 0x3ae80000 ; std ; call rdx
0x0000000000445565 : or eax, 0x55080000 ; std ; jmp rax
0x00000000004444e5 : or eax, 0xe9740000 ; cld ; jmp rsp
0x0000000000412b01 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000445229 : or edi, ebp ; call rdx
0x0000000000435db5 : out -0x47, al ; ret 0x48e7
0x0000000000408f37 : out -0x47, eax ; ret 0x614e
0x000000000042942b : out -0x4c, al ; ret 0x8589
0x000000000042947f : out -0x4c, eax ; ret 0x8589
0x000000000042ee03 : out -0x4c, eax ; ret 0x88b9
0x00000000004444a9 : out -4, eax ; jmp rsp
0x000000000040462f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040447f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401bc5 : outsb dx, byte ptr [rsi] ; and al, 0 ; add ebx, esi ; ret
0x000000000044337c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044337e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411da2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000443380 : pop r14 ; pop r15 ; ret
0x0000000000411da4 : pop r15 ; pop rbp ; ret
0x0000000000443382 : pop r15 ; ret
0x0000000000404ca8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000040317d : pop rax ; or bh, byte ptr [rcx - 0x3090db47] ; ret
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x24476e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x6462e0 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x6462e0 ; jmp rdx
0x000000000044337b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044337f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b55 : pop rbp ; ret
0x0000000000411da1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411a7a : pop rbx ; pop rbp ; ret
0x000000000043dbe9 : pop rbx ; ret 0x1dd
0x0000000000404f54 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004042fc : pop rcx ; mov edi, ecx ; js 0x4042ef ; ret 0
0x0000000000428098 : pop rcx ; ret 0x891f
0x000000000042e4e7 : pop rcx ; ret 0xba1f
0x0000000000411da5 : pop rdi ; pop rbp ; ret
0x0000000000424437 : pop rdi ; ret
0x000000000040539b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043db95 : pop rdx ; ret 0x1dd
0x000000000041c1bb : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000411da3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000443381 : pop rsi ; pop r15 ; ret
0x000000000044337d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bcb2 : pop rsp ; ret
0x0000000000404d69 : popfq ; ret 0xd284
0x0000000000435217 : push -0x46fe63d8 ; imul eax ; ret 0x483f
0x000000000041149f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401e36 : push rax ; pop rbp ; ret
0x00000000004286b7 : push rax ; ret
0x000000000041591b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416223 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000421968 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041c87e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000041e835 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000040f5d8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040f7be : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040f864 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040f892 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040f960 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040faf6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000406761 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041e070 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000401be4 : push rbp ; mov edi, 0x645e20 ; mov rbp, rsp ; call rax
0x0000000000445569 : push rbp ; std ; jmp rax
0x0000000000416f8b : push rbx ; jrcxz 0x416ff3 ; ret 0x8589
0x0000000000418443 : push rbx ; jrcxz 0x4184ab ; ret 0x8fb9
0x000000000041866e : push rbx ; jrcxz 0x4186d6 ; ret 0x8fb9
0x0000000000425fab : push rbx ; ret 0xaf58
0x000000000042bcf7 : push rcx ; ret
0x0000000000416f37 : push rdx ; jrcxz 0x416f9f ; ret 0x8589
0x0000000000425f57 : push rdx ; ret 0xaf58
0x0000000000444429 : push rsi ; cld ; jmp rsp
0x000000000041c88f : pushfq ; add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040418b : pushfq ; ret 0x8445
0x00000000004037be : pushfq ; ret 0xd284
0x0000000000401659 : ret
0x0000000000404301 : ret 0
0x000000000041abe9 : ret 0x10
0x000000000041f19f : ret 0x110a
0x000000000041c882 : ret 0x18
0x0000000000416ba7 : ret 0x1a
0x00000000004225e0 : ret 0x1ae8
0x0000000000414527 : ret 0x1ce9
0x000000000043db96 : ret 0x1dd
0x00000000004197e2 : ret 0x1f85
0x000000000042e2d7 : ret 0x20
0x0000000000404e5b : ret 0x2030
0x000000000041cb22 : ret 0x2106
0x0000000000401a32 : ret 0x2447
0x0000000000401832 : ret 0x2448
0x000000000040efb7 : ret 0x2a
0x00000000004122d6 : ret 0x2c1
0x000000000043b195 : ret 0x3617
0x0000000000416a67 : ret 0x3bef
0x0000000000431c68 : ret 0x40
0x00000000004068ba : ret 0x42ab
0x000000000040bf1a : ret 0x43fa
0x0000000000408de3 : ret 0x443c
0x000000000043a0af : ret 0x4810
0x000000000043521e : ret 0x483f
0x0000000000435d9b : ret 0x48e7
0x00000000004316be : ret 0x4ce8
0x00000000004222f6 : ret 0x4e8
0x0000000000442e16 : ret 0x4eb9
0x0000000000419124 : ret 0x5589
0x0000000000413eae : ret 0x5ce8
0x000000000042329d : ret 0x5de8
0x0000000000424123 : ret 0x5e5
0x0000000000408cdf : ret 0x614e
0x000000000042e003 : ret 0x6d
0x0000000000414404 : ret 0x6e8
0x0000000000437169 : ret 0x6f69
0x0000000000429ca3 : ret 0x73
0x00000000004263b8 : ret 0x791e
0x0000000000413362 : ret 0x7961
0x00000000004290d3 : ret 0x7a
0x0000000000410c30 : ret 0x7ae8
0x0000000000431e8f : ret 0x7b9
0x0000000000414422 : ret 0x7d81
0x000000000042db97 : ret 0x7f76
0x000000000042b427 : ret 0x80
0x0000000000408e2b : ret 0x8148
0x0000000000402859 : ret 0x8445
0x000000000043ee9d : ret 0x848e
0x0000000000407500 : ret 0x8589
0x000000000042ee06 : ret 0x88b9
0x000000000043ba8e : ret 0x8916
0x000000000040bdb0 : ret 0x891a
0x0000000000428099 : ret 0x891f
0x000000000040480c : ret 0x8934
0x0000000000427635 : ret 0x893f
0x0000000000406765 : ret 0x8948
0x0000000000401c21 : ret 0x895a
0x000000000041a691 : ret 0x89b6
0x0000000000417019 : ret 0x89cc
0x0000000000424331 : ret 0x89e8
0x000000000043dab7 : ret 0x89fc
0x00000000004047e8 : ret 0x8b34
0x0000000000410c15 : ret 0x8b48
0x0000000000418606 : ret 0x8bcc
0x0000000000432ec2 : ret 0x8be8
0x0000000000408eb8 : ret 0x8ce9
0x0000000000419e7d : ret 0x8d89
0x0000000000418446 : ret 0x8fb9
0x0000000000441948 : ret 0x9589
0x0000000000441176 : ret 0x9ae9
0x000000000041f776 : ret 0xa
0x00000000004236f5 : ret 0xa414
0x000000000040fc85 : ret 0xa9b9
0x000000000043175f : ret 0xabe8
0x000000000040b702 : ret 0xade6
0x0000000000425f58 : ret 0xaf58
0x0000000000402b53 : ret 0xb0
0x0000000000428e5f : ret 0xb846
0x000000000040f3f0 : ret 0xb91a
0x00000000004257e7 : ret 0xb957
0x000000000041a94b : ret 0xb9b6
0x000000000042e4e8 : ret 0xba1f
0x0000000000407fa3 : ret 0xbe9
0x000000000041c47e : ret 0xc
0x0000000000401b85 : ret 0xc148
0x0000000000402ddb : ret 0xd284
0x00000000004114a3 : ret 0xd4e9
0x00000000004085a7 : ret 0xd549
0x0000000000403512 : ret 0xdc2d
0x000000000043d9b9 : ret 0xe0a5
0x0000000000434e5b : ret 0xe280
0x000000000044178e : ret 0xe9fc
0x000000000043825d : ret 0xec0b
0x0000000000402256 : ret 0xec32
0x0000000000411abc : ret 0xee8
0x0000000000430073 : ret 0xf40
0x000000000040fe65 : ret 0xf41
0x00000000004316ef : ret 0xf9b9
0x00000000004253e7 : ret 0xfa
0x000000000042fec6 : ret 0xfa81
0x00000000004215b0 : ret 0xfae8
0x000000000040882c : ret 0xfb94
0x000000000043301a : ret 0xfce7
0x000000000043fefa : ret 0xff6b
0x0000000000441ec6 : ret 0xff9b
0x000000000040f5db : ret 0xff9f
0x0000000000410f7e : ret 0xffa5
0x00000000004420ac : ret 0xffbb
0x000000000040f7c1 : ret 0xffbf
0x000000000041022b : ret 0xffc4
0x000000000040f867 : ret 0xffc5
0x000000000040f895 : ret 0xffd5
0x000000000040f963 : ret 0xffd8
0x00000000004102d1 : ret 0xffd9
0x000000000040faf9 : ret 0xffe0
0x00000000004318e5 : ret 0xfff7
0x0000000000431916 : ret 0xfff9
0x000000000040ebce : ret 0xfffa
0x00000000004353cc : ret 0xfffc
0x00000000004456a9 : ret 0xfffd
0x0000000000405805 : ret 0xffff
0x000000000040264f : ret 1
0x0000000000410130 : ret 2
0x00000000004115b7 : ret 4
0x0000000000414698 : ret 5
0x0000000000411ca0 : ret 8
0x00000000004203a5 : ret 9
0x0000000000419dfe : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041b734 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406834 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414543 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000442c52 : rol byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000409686 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x00000000004202f2 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000435e0e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000409687 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416220 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004045ac : sahf ; ret 0xd284
0x000000000041ae0e : salc ; ret
0x0000000000408f34 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x0000000000440ce3 : sbb bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x000000000041a382 : sbb byte ptr [rax - 0x75], cl ; jge 0x41a33c ; call rax
0x000000000041a381 : sbb byte ptr [rax - 0x75], cl ; jge 0x41a33d ; call rax
0x0000000000445228 : sbb byte ptr [rbx], cl ; std ; call rdx
0x0000000000412739 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043d5e5 : sbb dl, dh ; ret
0x0000000000415e03 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fc7e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000043d639 : sbb edx, esi ; ret
0x0000000000440ce2 : sbb r15b, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000436795 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436797 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000440c52 : shl byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000444565 : sldt word ptr [rax] ; and bpl, r15b ; jmp rsp
0x0000000000445705 : sldt word ptr [rax] ; clc ; loop 0x44570e ; call qword ptr [rsi]
0x00000000004042fe : stc ; js 0x4042ed ; ret 0
0x00000000004453ca : std ; call qword ptr [rbx]
0x000000000044570a : std ; call qword ptr [rsi]
0x000000000044522a : std ; call rdx
0x00000000004446a2 : std ; inc esp ; adc al, 0 ; add ah, al ; std ; std ; jmp rsp
0x00000000004445e2 : std ; inc esp ; adc dword ptr [rax], eax ; add ah, dl ; std ; jmp rsp
0x0000000000444562 : std ; inc esp ; sldt word ptr [rax] ; and bpl, r15b ; jmp rsp
0x000000000044540a : std ; jmp qword ptr [rbx]
0x000000000044566a : std ; jmp qword ptr [rcx]
0x000000000044556a : std ; jmp rax
0x000000000044452a : std ; jmp rsp
0x00000000004446a9 : std ; std ; jmp rsp
0x00000000004442e2 : sti ; inc esp ; add eax, 0xecd40000 ; sti ; jmp rsp
0x00000000004442ea : sti ; jmp rsp
0x000000000040ccc7 : sub al, 0x38 ; ret 0x8589
0x000000000040fc83 : sub al, 0x38 ; ret 0xa9b9
0x0000000000420ee8 : sub al, 0x61 ; ret
0x00000000004443e9 : sub bh, ah ; jmp rsp
0x00000000004433d1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004443e8 : sub r15b, spl ; jmp rsp
0x00000000004433d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000439369 : sysenter
0x000000000041c151 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000041593b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000420c59 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000044151f : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000409116 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bb88 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e69d : test al, 0x45 ; jmp 0x41eaf9
0x000000000041291d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000415818 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000445404 : test byte ptr [rax + rax], cl ; add byte ptr [rax], bh ; std ; jmp qword ptr [rbx]
0x000000000044338a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000428e6a : test byte ptr [rbx], ah ; ret 0
0x0000000000444b04 : test byte ptr [rbx], al ; add byte ptr [rax], al ; or dil, spl ; call qword ptr [rsi]
0x0000000000445704 : test byte ptr [rdi], cl ; add byte ptr [rax], al ; clc ; loop 0x44570f ; call qword ptr [rsi]
0x0000000000414665 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000418564 : test ch, cl ; ret
0x0000000000424f16 : test cl, dh ; ret 0
0x0000000000421251 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000424b5e : test dl, bl ; ret 0
0x000000000042b420 : test dword ptr [0xffffffff840fffff], esi ; ret 0x80
0x0000000000428e64 : test dword ptr [rax + 0xfffffea], ebx ; test byte ptr [rbx], ah ; ret 0
0x0000000000431c62 : test dword ptr [rax - 0x1600000b], esi ; ret 0x40
0x000000000042949b : test dword ptr [rcx + 1], ebp ; ret
0x0000000000402fae : test dword ptr [rcx - 0x7bf01bbb], ecx ; ret
0x00000000004092b4 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000408f1a : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000415920 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000415688 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042032c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x0000000000420b1a : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000041451f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x4144ed ; ret 0x1ce9
0x0000000000420d5d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000420aef : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004255d8 : test dword ptr [rdx + rsi*8 - 0x7bf00001], ebp ; ret 0
0x0000000000421e1e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x0000000000408a60 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x00000000004089f0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000440bfb : test dword ptr [rsi + rdi*8 - 1], edx ; call rcx
0x0000000000441521 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsi
0x0000000000440535 : test dword ptr [rsi + rdi*8 - 1], edx ; call rsp
0x0000000000442a14 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000442d33 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000441b24 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000441c2a : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rbx
0x000000000043fd13 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rcx
0x0000000000442c57 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdi
0x0000000000440ce5 : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rdx
0x0000000000440fee : test dword ptr [rsi + rdi*8 - 1], edx ; jmp rsi
0x000000000044116e : test dword ptr [rsi + rdi*8 - 1], edx ; lcall ptr [rbx] ; cmp esi, dword ptr [rdi] ; ret 0x9ae9
0x0000000000430526 : test ecx, eax ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000418563 : test r13b, r9b ; ret
0x0000000000430072 : wait ; ret 0xf40
0x000000000043dab5 : xchg ax, dx ; ret 0x89fc
0x00000000004294ef : xchg byte ptr [rcx + 1], ch ; ret
0x0000000000441942 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rcx] ; ret 0x9589
0x0000000000409cb1 : xchg eax, ebp ; ret
0x0000000000402858 : xchg eax, ebp ; ret 0x8445
0x0000000000402dda : xchg eax, ebp ; ret 0xd284
0x0000000000436796 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041ddff : xchg eax, ebx ; ret 0xd284
0x000000000040ccab : xchg eax, ecx ; ret
0x000000000040339c : xchg eax, edi ; ret 0xd284
0x000000000040cdfb : xchg eax, edx ; ret
0x000000000042e3d3 : xchg eax, edx ; ret 0x8445
0x000000000043dab6 : xchg eax, edx ; ret 0x89fc
0x0000000000403686 : xchg eax, edx ; ret 0xd284
0x000000000044178d : xchg eax, edx ; ret 0xe9fc
0x000000000040277b : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x9d247bb], cl ; ret
0x0000000000412632 : xchg eax, esi ; ret
0x000000000042e437 : xchg eax, esi ; ret 0xd284
0x00000000004445a8 : xchg eax, esp ; and edi, ebp ; jmp rsp
0x0000000000409c93 : xchg eax, esp ; ret
0x0000000000410c56 : xchg eax, esp ; ret 0x8445
0x00000000004033d0 : xchg eax, esp ; ret 0xd284
0x0000000000434e5a : xchg eax, esp ; ret 0xe280
0x0000000000435718 : xchg eax, esp ; ret 0xfffc
0x00000000004444a8 : xor al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x00000000004217ec : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430e6a : xor cl, byte ptr [rbp - 0x17] ; mov ebp, 0xb800004e ; push rcx ; ret
0x000000000040276a : xor dh, dh ; ret
0x0000000000412c37 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004097fd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004021f8 : xor esi, esi ; ret
