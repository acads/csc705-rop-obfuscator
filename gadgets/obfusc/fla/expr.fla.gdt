0x000000000041416d : adc byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041416c : adc byte ptr [rax], r8b ; add cl, ch ; ret 1
0x000000000041733b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411989 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f253 : add ah, ah ; or al, byte ptr [rax] ; add byte ptr [rax], cl ; push -1 ; jmp rdx
0x00000000004017e4 : add ah, byte ptr [rdx] ; jmp rax
0x0000000000401824 : add ah, byte ptr [rdx] ; jmp rdx
0x0000000000407851 : add ah, byte ptr [rdx] ; pop rbp ; ret
0x000000000041eb74 : add al, 4 ; add byte ptr [rax], al ; sub byte ptr [rsi - 2], ch ; jmp qword ptr [rdi]
0x000000000041ec74 : add al, 5 ; add byte ptr [rax], al ; pop rax ; mov edi, esi ; call qword ptr [rcx]
0x000000000041ef74 : add al, 8 ; add byte ptr [rax], al ; xor rdi, rdi ; jmp qword ptr [rdx]
0x0000000000402198 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416c33 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404a1d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000403084 : add bh, al ; in al, dx ; lahf ; xchg eax, ebp ; ret
0x0000000000414d63 : add bh, al ; mov r12b, 0x39 ; pop rbp ; ret
0x000000000041702e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416d96 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000406918 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041d34f : add bl, dh ; ret
0x000000000041e78b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and byte ptr [rsi + rdi*8], ch ; jmp rax
0x000000000041ef73 : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; xor rdi, rdi ; jmp qword ptr [rdx]
0x0000000000407682 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x41e2
0x00000000004051b7 : add byte ptr [rax - 0x75], cl ; jge 0x4051ab ; call 0x4013d7
0x0000000000404e4e : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x902cfa6
0x00000000004024fa : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004045cc : add byte ptr [rax - 0x77], cl ; ret 0xbe8
0x00000000004026da : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000041e78f : add byte ptr [rax], ah ; sub al, -2 ; jmp rax
0x000000000041eb72 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; sub byte ptr [rsi - 2], ch ; jmp qword ptr [rdi]
0x000000000041ec72 : add byte ptr [rax], al ; add al, 5 ; add byte ptr [rax], al ; pop rax ; mov edi, esi ; call qword ptr [rcx]
0x000000000041ef72 : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; xor rdi, rdi ; jmp qword ptr [rdx]
0x0000000000403082 : add byte ptr [rax], al ; add bh, al ; in al, dx ; lahf ; xchg eax, ebp ; ret
0x000000000041702c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416d94 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000406916 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041d34d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000407680 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x41e2
0x00000000004051b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4051ad ; call 0x4013d9
0x0000000000404e4c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x902cfa8
0x00000000004024f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004045ca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbe8
0x00000000004026d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000041e78d : add byte ptr [rax], al ; add byte ptr [rax], ah ; sub al, -2 ; jmp rax
0x000000000041d34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400470 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400472 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400474 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412952 : add byte ptr [rax], al ; add byte ptr [rbx + 0x382da445], cl ; pop rbp ; ret
0x0000000000414302 : add byte ptr [rax], al ; add byte ptr [rbx + 0x392da445], cl ; pop rbp ; ret
0x00000000004020e8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004155a9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x522dd445], cl ; jmp qword ptr [rsi]
0x0000000000403697 : add byte ptr [rax], al ; add byte ptr [rbx + 0x702dd445], cl ; scasb al, byte ptr [rdi] ; ret
0x00000000004039b7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x712dd445], cl ; scasb al, byte ptr [rdi] ; ret
0x0000000000402feb : add byte ptr [rax], al ; add byte ptr [rbx - 0x60d217bb], cl ; xchg eax, ebp ; ret
0x000000000041ca39 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041c9b5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041b67e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004054b0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041caf5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041b3c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004058ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000418db5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004095dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404d5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406f7a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000416f2a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040203b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000414614 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004095bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404397 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402aaf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004081be : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041c2fd : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000405460 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004113f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041beb8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041733d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411947 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004013a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041e892 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; cmp al, -2 ; jmp qword ptr [rdi]
0x000000000041e78e : add byte ptr [rax], al ; and byte ptr [rsi + rdi*8], ch ; jmp rax
0x00000000004051e5 : add byte ptr [rax], al ; call 0x4013f4
0x000000000041e896 : add byte ptr [rax], al ; cmp al, -2 ; jmp qword ptr [rdi]
0x000000000041f252 : add byte ptr [rax], al ; in al, 0xa ; add byte ptr [rax], al ; or byte ptr [rdx - 1], ch ; jmp rdx
0x000000000041f552 : add byte ptr [rax], al ; in al, 0xd ; add byte ptr [rax], al ; pop rax ; mov cl, -1 ; jmp rax
0x00000000004014d9 : add byte ptr [rax], al ; jmp 0x4013b9
0x00000000004081ba : add byte ptr [rax], al ; jmp 0x4081c9
0x000000000041c2f9 : add byte ptr [rax], al ; jmp 0x41c308
0x000000000041cf69 : add byte ptr [rax], al ; jmp 0x41cf78
0x000000000041e686 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000419ac9 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041d177 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040577a : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000407e89 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408ea9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004051b6 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x18] ; call 0x4013d8
0x000000000041f256 : add byte ptr [rax], al ; or byte ptr [rdx - 1], ch ; jmp rdx
0x000000000041f1b2 : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax], ch ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x000000000041e8b6 : add byte ptr [rax], al ; pop rax ; cmp al, -2 ; jmp qword ptr [rdi]
0x000000000041f556 : add byte ptr [rax], al ; pop rax ; mov cl, -1 ; jmp rax
0x000000000041ec76 : add byte ptr [rax], al ; pop rax ; mov edi, esi ; call qword ptr [rcx]
0x000000000040219a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004020e9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004113a8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400476 : add byte ptr [rax], al ; ret
0x000000000041e78a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and byte ptr [rsi + rdi*8], ch ; jmp rax
0x000000000041f1b6 : add byte ptr [rax], al ; sub byte ptr [rdi + rdi*8], dh ; jmp qword ptr [rdx]
0x000000000041eb76 : add byte ptr [rax], al ; sub byte ptr [rsi - 2], ch ; jmp qword ptr [rdi]
0x000000000041ef76 : add byte ptr [rax], al ; xor rdi, rdi ; jmp qword ptr [rdx]
0x000000000041f097 : add byte ptr [rax], bl ; xor edi, edi ; jmp qword ptr [rax]
0x000000000041f1b7 : add byte ptr [rax], ch ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x000000000041f257 : add byte ptr [rax], cl ; push -1 ; jmp rdx
0x0000000000412954 : add byte ptr [rbx + 0x382da445], cl ; pop rbp ; ret
0x0000000000414304 : add byte ptr [rbx + 0x392da445], cl ; pop rbp ; ret
0x00000000004020ea : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415560 : add byte ptr [rbx + 0x512dd445], cl ; jmp qword ptr [rsi]
0x00000000004155ab : add byte ptr [rbx + 0x522dd445], cl ; jmp qword ptr [rsi]
0x00000000004113a9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403699 : add byte ptr [rbx + 0x702dd445], cl ; scasb al, byte ptr [rdi] ; ret
0x00000000004039b9 : add byte ptr [rbx + 0x712dd445], cl ; scasb al, byte ptr [rdi] ; ret
0x0000000000403d08 : add byte ptr [rbx - 0x1a34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407122 : add byte ptr [rbx - 0x2634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402fed : add byte ptr [rbx - 0x60d217bb], cl ; xchg eax, ebp ; ret
0x000000000041ca3b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041c9b7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000402c41 : add byte ptr [rbx - 0x7ad223bb], cl ; jne 0x402cbc ; ret 0x4589
0x0000000000402bff : add byte ptr [rbx - 0x7bd223bb], cl ; jne 0x402c7a ; ret 0x4589
0x0000000000414610 : add byte ptr [rcx + 0x9f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x000000000041b680 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041988a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004054b2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041e893 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; cmp al, -2 ; jmp qword ptr [rdi]
0x000000000041707e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401848 : add byte ptr [rcx], al ; ret
0x000000000041caf7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041b3ca : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405901 : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000418db7 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004095df : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404d5e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406f7c : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000416f2c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040203d : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000414616 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004095c1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404399 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402ab1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f1b3 : add byte ptr [rdx + rcx], al ; add byte ptr [rax], ch ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x000000000041eb73 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; sub byte ptr [rsi - 2], ch ; jmp qword ptr [rdi]
0x000000000040346e : add cl, ch ; ret
0x000000000041c2ff : add cl, ch ; ret 0
0x0000000000404a1f : add cl, ch ; ret 1
0x0000000000411945 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041206a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040480c : add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405929 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x3144
0x000000000040782c : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024d8 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000402f90 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004047d4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040575d : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x0000000000401844 : add eax, 0x21ea86 ; add ebx, esi ; ret
0x0000000000414d61 : add eax, 0x45c70000 ; mov ah, 0x39 ; pop rbp ; ret
0x0000000000419ac7 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000405778 : add eax, 0x8b000000 ; loopne 0x4057e5 ; ret
0x000000000041555e : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x512dd445], cl ; jmp qword ptr [rsi]
0x000000000040180b : add eax, edx ; sar rax, 1 ; jne 0x40181c ; pop rbp ; ret
0x0000000000401849 : add ebx, esi ; ret
0x0000000000401b4b : add esp, 0x10 ; pop rbp ; ret
0x000000000041707c : add esp, 0x100 ; pop rbp ; ret
0x0000000000412067 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040697f : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403bb3 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004054c1 : add esp, 0x20 ; pop rbp ; ret
0x00000000004088be : add esp, 0x230 ; pop rbp ; ret
0x00000000004071be : add esp, 0x270 ; pop rbp ; ret
0x000000000041b983 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000040309e : add esp, 0x30 ; pop rbp ; ret
0x00000000004198e1 : add esp, 0x340 ; pop rbp ; ret
0x0000000000402f95 : add esp, 0x40 ; pop rbp ; ret
0x00000000004152d1 : add esp, 0x490 ; pop rbp ; ret
0x0000000000401cf2 : add esp, 0x50 ; pop rbp ; ret
0x0000000000401b04 : add esp, 0x60 ; pop rbp ; ret
0x00000000004024a8 : add esp, 0x70 ; pop rbp ; ret
0x00000000004042d7 : add esp, 0x80 ; pop rbp ; ret
0x0000000000402b76 : add esp, 0x90 ; pop rbp ; ret
0x0000000000415c4f : add esp, 0x98 ; pop rbp ; ret
0x0000000000408c6e : add esp, 0xa0 ; pop rbp ; ret
0x00000000004113a4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000404c96 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004013a6 : add esp, 8 ; ret
0x0000000000418bb1 : add r8b, byte ptr [r8] ; add cl, ch ; ret 1
0x000000000040180a : add rax, rdx ; sar rax, 1 ; jne 0x40181d ; pop rbp ; ret
0x0000000000401b4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041707b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000412066 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040697e : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403bb2 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004054c0 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004088bd : add rsp, 0x230 ; pop rbp ; ret
0x00000000004071bd : add rsp, 0x270 ; pop rbp ; ret
0x000000000041b982 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000040309d : add rsp, 0x30 ; pop rbp ; ret
0x00000000004198e0 : add rsp, 0x340 ; pop rbp ; ret
0x0000000000402f94 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004152d0 : add rsp, 0x490 ; pop rbp ; ret
0x0000000000401cf1 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b03 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004024a7 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004042d6 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000402b75 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000415c4e : add rsp, 0x98 ; pop rbp ; ret
0x0000000000408c6d : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004113a3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000404c95 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004013a5 : add rsp, 8 ; ret
0x0000000000403e3f : and al, 0xffffffffffffffb9 ; jno 0x403df5 ; ret
0x000000000041e894 : and al, 1 ; add byte ptr [rax], al ; cmp al, -2 ; jmp qword ptr [rdi]
0x00000000004047d3 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e790 : and byte ptr [rsi + rdi*8], ch ; jmp rax
0x00000000004024d6 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000401847 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000414cee : and dword ptr [rbx - 0x47], 0x39 ; pop rbp ; ret
0x000000000040784f : and eax, 0x6202e0 ; pop rbp ; ret
0x0000000000407873 : and eax, 0x6202e8 ; pop rbp ; ret
0x00000000004025a2 : call 0x1e88e7d6
0x00000000004025a1 : call 0x1e88e7d7
0x00000000004051bb : call 0x261ab
0x00000000004051bc : call 0x4013d2
0x00000000004051e7 : call 0x4013f2
0x0000000000401a42 : call 0x4015d9
0x0000000000405436 : call 0x401702
0x0000000000407631 : call 0x4021b9
0x0000000000404e52 : call 0x902cfa2
0x0000000000402ff0 : call 0xffffffffc3d5cf26
0x0000000000402fef : call 0xffffffffc3d5cf27
0x00000000004113e9 : call 0xffffffffe9039d39
0x00000000004113e8 : call 0xffffffffe9039d3a
0x000000000040ce2d : call 0xfffffffff73953c4
0x000000000041b445 : call 0xffffffffff463a1a
0x000000000040f959 : call 0xffffffffff557f2b
0x000000000040f958 : call 0xffffffffff557f2c
0x000000000040f959 : call 0xffffffffff557f2d
0x000000000040f958 : call 0xffffffffff557f2e
0x000000000041d329 : call qword ptr [r12 + rbx*8]
0x000000000040ece6 : call qword ptr [rax]
0x0000000000410975 : call qword ptr [rcx]
0x000000000040e913 : call qword ptr [rdx]
0x000000000040e8af : call qword ptr [rsi]
0x000000000041d32a : call qword ptr [rsp + rbx*8]
0x000000000040186d : call rax
0x00000000004070d9 : call rbx
0x000000000041f33b : call rdx
0x0000000000417034 : call rsi
0x000000000041c9bc : cdq ; ret
0x000000000041a292 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004076ed : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040180f : clc ; jne 0x401818 ; pop rbp ; ret
0x0000000000403113 : clc ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x00000000004077db : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004077d7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000403127 : clc ; pop rbp ; ret
0x000000000040f5ad : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041aa4d : cmp al, -0x2a ; ret
0x000000000041e899 : cmp al, -2 ; jmp qword ptr [rdi]
0x0000000000401a49 : cmp al, 0x25 ; ret
0x0000000000407638 : cmp al, 0x25 ; ret 0x41e2
0x0000000000401aff : cmp eax, 0x48fffffc ; add esp, 0x60 ; pop rbp ; ret
0x00000000004017cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017e0 ; pop rbp ; ret
0x0000000000411884 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041c4bb : cwde ; js 0x41c465 ; ret
0x000000000041c502 : cwde ; js 0x41c4ac ; ret
0x000000000041c53c : cwde ; js 0x41c4e6 ; ret
0x0000000000405932 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000401a46 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000407635 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x41e2
0x0000000000403d0e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f752 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040fa5d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040542f : dec dword ptr [rdi] ; mov esi, 0xb0ff4d ; call 0x401709
0x0000000000410f64 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000404a19 : dec dword ptr [rdi] ; test al, cl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000415d73 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000403468 : dec dword ptr [rdi] ; test cl, bh ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000405a90 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000405be4 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004058fd : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000041b1fb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040590e : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000408b0d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419d04 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404d5a : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404ddb : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404e1a : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412899 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e3e : fisub dword ptr [rcx + rdi*4] ; jno 0x403df6 ; ret
0x0000000000417934 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041d32c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403f1b : fnstcw word ptr [rsp + rdx*4 - 0x47] ; jno 0x403ed5 ; ret
0x0000000000401b49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041bdec : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415c4d : hlt ; add rsp, 0x98 ; pop rbp ; ret
0x00000000004017e0 : hlt ; pop rbp ; mov edi, 0x620270 ; jmp rax
0x00000000004166ce : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000403e88 : imul esp, dword ptr [rdx], -0x47 ; jno 0x403e40 ; ret
0x0000000000403063 : imul esp, ebx, 0x45c7ffff ; in al, dx ; lahf ; xchg eax, ebp ; ret
0x000000000040ef09 : in al, -0x7f ; ret 0xff9f
0x000000000040f0ef : in al, -0x7f ; ret 0xffbf
0x000000000040f195 : in al, -0x7f ; ret 0xffc5
0x000000000040f1c3 : in al, -0x7f ; ret 0xffd5
0x000000000040f291 : in al, -0x7f ; ret 0xffd8
0x000000000040f427 : in al, -0x7f ; ret 0xffe0
0x0000000000404395 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f254 : in al, 0xa ; add byte ptr [rax], al ; or byte ptr [rdx - 1], ch ; jmp rdx
0x000000000041f554 : in al, 0xd ; add byte ptr [rax], al ; pop rax ; mov cl, -1 ; jmp rax
0x0000000000419b9f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004152cf : in al, dx ; add rsp, 0x490 ; pop rbp ; ret
0x0000000000419fff : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000403069 : in al, dx ; lahf ; xchg eax, ebp ; ret
0x0000000000408fba : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000419acd : in al, dx ; pop rbp ; ret
0x0000000000402527 : in al, dx ; ret 0x1e48
0x0000000000403123 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041cbbb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041057f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040eb41 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041112a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406f55 : inc dword ptr [rcx + 0xf] ; sahf ; ret 0x8445
0x0000000000408790 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000403066 : inc edi ; in al, dx ; lahf ; xchg eax, ebp ; ret
0x0000000000412038 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040b6df : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040ed1f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000041355d : int 0x80
0x00000000004043ca : iretd ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0x00000000004017d3 : ja 0x4017da ; pop rbp ; ret
0x000000000040480a : jb 0x404848 ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017df : je 0x4017dd ; pop rbp ; mov edi, 0x620270 ; jmp rax
0x0000000000403112 : jge 0x403112 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000403126 : jge 0x403123 ; pop rbp ; ret
0x00000000004043c6 : jge 0x404351 ; mov rdi, rcx ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0x00000000004051ba : jge 0x4051a8 ; call 0x4013d4
0x00000000004077da : jge 0x4077da ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004161e8 : jge 0x4161ff ; ret
0x00000000004166d3 : jge 0x4166ea ; ret
0x000000000041d129 : jge 0x41d123 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004160bc : jl 0x4160d3 ; ret
0x0000000000403e3c : jle 0x403e5d ; fisub dword ptr [rcx + rdi*4] ; jno 0x403df8 ; ret
0x00000000004014db : jmp 0x4013b7
0x000000000040767e : jmp 0x4076fd
0x00000000004081bc : jmp 0x4081c7
0x000000000040e6cd : jmp 0x4113b3
0x0000000000411161 : jmp 0x4113b5
0x00000000004166cd : jmp 0x416c45
0x000000000041c2fb : jmp 0x41c306
0x000000000041cf6b : jmp 0x41cf76
0x000000000041a2ce : jmp 0xffffffffb703a69a
0x0000000000404091 : jmp 0xffffffffc2b26ac0
0x000000000041c4ba : jmp 0xffffffffc3e63d5b
0x000000000040e7ed : jmp qword ptr [rax]
0x000000000040f95f : jmp qword ptr [rbx]
0x0000000000411330 : jmp qword ptr [rcx]
0x000000000041e89b : jmp qword ptr [rdi]
0x0000000000411885 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040ce36 : jmp qword ptr [rdx]
0x000000000040f8ef : jmp qword ptr [rsi]
0x00000000004017e7 : jmp rax
0x0000000000406ec0 : jmp rbx
0x0000000000406728 : jmp rcx
0x0000000000410b1e : jmp rdi
0x0000000000401827 : jmp rdx
0x0000000000410519 : jmp rsp
0x0000000000401810 : jne 0x401817 ; pop rbp ; ret
0x0000000000402c05 : jne 0x402c74 ; ret 0x4589
0x0000000000402c47 : jne 0x402cb6 ; ret 0x4589
0x0000000000402d48 : jne 0x402db7 ; ret 0xf9ba
0x0000000000412036 : jne 0x41203f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004039be : jno 0x403970 ; ret
0x0000000000403e41 : jno 0x403df3 ; ret
0x0000000000403e66 : jno 0x403e18 ; ret
0x0000000000403e8b : jno 0x403e3d ; ret
0x0000000000403efa : jno 0x403eac ; ret
0x0000000000403f1f : jno 0x403ed1 ; ret
0x0000000000403f44 : jno 0x403ef6 ; ret
0x00000000004013a1 : jnp 0x4013ad ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004024aa : jo 0x40250b ; ret
0x0000000000402e4c : jo 0x402ead ; ret
0x000000000040369e : jo 0x403650 ; ret
0x000000000040598e : jo 0x4059ef ; ret
0x00000000004071c0 : jo 0x4071c9 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004076f1 : jo 0x407752 ; ret
0x0000000000412251 : jo 0x4122b2 ; ret
0x0000000000412374 : jo 0x4123d5 ; ret
0x00000000004124ae : jo 0x41250f ; ret
0x00000000004179dc : jo 0x417a3d ; ret
0x000000000041bc94 : jo 0x41bcf5 ; ret
0x0000000000403064 : jrcxz 0x40306d ; inc edi ; in al, dx ; lahf ; xchg eax, ebp ; ret
0x00000000004077c3 : jrcxz 0x4077f0 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004077c2 : jrcxz 0x4077f1 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004113a6 : js 0x4113ba ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c4bc : js 0x41c464 ; ret
0x000000000041c503 : js 0x41c4ab ; ret
0x000000000041c53d : js 0x41c4e5 ; ret
0x0000000000402ff2 : lahf ; xchg eax, ebp ; ret
0x0000000000406f51 : lea esi, dword ptr [rsi + rdi*8 - 1] ; inc dword ptr [rcx + 0xf] ; sahf ; ret 0x8445
0x000000000041e683 : ljmp ptr [rdx + rdx] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000041e688 : lodsb al, byte ptr [rsi] ; ret
0x00000000004024d7 : loope 0x4024e0 ; movzx eax, cl ; pop rbp ; ret
0x00000000004044be : loopne 0x4044f2 ; xchg byte ptr [rsi], dl ; push rbp ; ret
0x00000000004044bd : loopne 0x4044f3 ; xchg byte ptr [rsi], dl ; push rbp ; ret
0x0000000000404c98 : loopne 0x404c9f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040577e : loopne 0x4057df ; ret
0x000000000040577d : loopne 0x4057e0 ; ret
0x000000000040697d : loopne 0x4069d0 ; add esp, 0x1a0 ; pop rbp ; ret
0x0000000000408382 : loopne 0x4083d2 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408381 : loopne 0x4083d3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040937e : loopne 0x409387 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417720 : loopne 0x417729 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417b2c : loopne 0x417b7c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000417b2b : loopne 0x417b7d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000414d66 : mov ah, 0x39 ; pop rbp ; ret
0x0000000000401cf0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041b41a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405434 : mov al, 0 ; call 0x401704
0x000000000040953b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041c20d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c3bd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041cbb9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004077c1 : mov al, byte ptr [rbp - 0x1d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004047d0 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403f42 : mov bh, -0x47 ; jno 0x403ef8 ; ret
0x000000000041ec59 : mov bh, dh ; call rax
0x0000000000407871 : mov byte ptr [0x6202e8], al ; pop rbp ; ret
0x0000000000410ef8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401843 : mov byte ptr [rip + 0x21ea86], 1 ; ret
0x000000000041f559 : mov cl, -1 ; jmp rax
0x000000000040782e : mov dh, -0x3f ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024da : mov dh, -0x3f ; pop rbp ; ret
0x0000000000402f92 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004047d6 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041cce5 : mov dl, -0x47 ; ret
0x000000000041ed19 : mov dr1, esi ; call qword ptr [rsi]
0x000000000040784d : mov dword ptr [0x6202e0], edi ; pop rbp ; ret
0x00000000004091f7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000408fbb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040912f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401cee : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403125 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004093ad : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004052f7 : mov dword ptr [rcx], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405989 : mov dword ptr [rcx], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405c38 : mov dword ptr [rcx], eax ; pop rbp ; ret
0x0000000000403115 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000405aba : mov dword ptr [rdx], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c32 : mov eax, 0xe84d8b48 ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000408eaf : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004030f3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ff3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040565c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407431 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004024a4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407e8c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000419b9d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419acb : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000417b6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417440 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004091fa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000408380 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417b2a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040577c : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000408da4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408eac : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408fb5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409131 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041224b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041bdea : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a290 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004076eb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004077dd : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x00000000004054be : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415945 : mov ebp, 0xb9bca7a5 ; push rdx ; jmp qword ptr [rsi]
0x000000000040186b : mov ebp, esp ; call rax
0x00000000004017d1 : mov ebp, esp ; ja 0x4017dc ; pop rbp ; ret
0x0000000000403122 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000407b71 : mov ebx, 0x48ffff98 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000408fb8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405c34 : mov ecx, dword ptr [rbp - 0x18] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000041e681 : mov edi, 0x122cffff ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000401865 : mov edi, 0x61fe20 ; mov rbp, rsp ; call rax
0x00000000004017e2 : mov edi, 0x620270 ; jmp rax
0x0000000000401822 : mov edi, 0x620270 ; jmp rdx
0x00000000004051b9 : mov edi, dword ptr [rbp - 0x18] ; call 0x4013d5
0x0000000000403111 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x00000000004077d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004043c9 : mov edi, ecx ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0x000000000041d327 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041ec79 : mov edi, esi ; call qword ptr [rcx]
0x000000000041ecb9 : mov edi, esi ; call qword ptr [rsi]
0x000000000041d326 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004043cc : mov edx, dword ptr [rbp - 0x80] ; call rax
0x0000000000404e73 : mov edx, dword ptr [rbp - 0xd8] ; call rax
0x0000000000405431 : mov esi, 0xb0ff4d ; call 0x401707
0x0000000000401820 : mov esi, eax ; mov edi, 0x620270 ; jmp rdx
0x0000000000404e70 : mov esi, edx ; mov rdx, qword ptr [rbp - 0xd8] ; call rax
0x000000000040784c : mov qword ptr [0x6202e0], rdi ; pop rbp ; ret
0x0000000000403124 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004093ac : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004052f6 : mov qword ptr [rcx], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405988 : mov qword ptr [rcx], rax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405c37 : mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000403114 : mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000405ab9 : mov qword ptr [rdx], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414d65 : mov r12b, 0x39 ; pop rbp ; ret
0x0000000000401cef : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004030f2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ff2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040565b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407430 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004024a3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407e8b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000417b6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041743f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040837f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417b29 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408da3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408eab : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041224a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004076ea : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004077dc : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040186a : mov rbp, rsp ; call rax
0x00000000004017d0 : mov rbp, rsp ; ja 0x4017dd ; pop rbp ; ret
0x0000000000403121 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000405c33 : mov rcx, qword ptr [rbp - 0x18] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x00000000004051b8 : mov rdi, qword ptr [rbp - 0x18] ; call 0x4013d6
0x0000000000403110 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x00000000004077d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004043c8 : mov rdi, rcx ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0x00000000004043cb : mov rdx, qword ptr [rbp - 0x80] ; call rax
0x0000000000404e72 : mov rdx, qword ptr [rbp - 0xd8] ; call rax
0x000000000040181f : mov rsi, rax ; mov edi, 0x620270 ; jmp rdx
0x000000000041203a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041203b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040f78c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041cf5e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004166cc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x416c46
0x000000000041c4bd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405430 : movsx ecx, byte ptr [rbp - 1] ; mov al, 0 ; call 0x401708
0x0000000000402f91 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004047d5 : movzx eax, al ; pop rbp ; ret
0x000000000040782d : movzx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024d9 : movzx eax, cl ; pop rbp ; ret
0x000000000041d348 : nop dword ptr [rax + rax] ; ret
0x00000000004113a7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004128f2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f1b5 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x000000000041f255 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; push -1 ; jmp rdx
0x000000000040346c : or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004043c7 : or byte ptr [rax - 0x77], 0xcf ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0x0000000000402aab : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f258 : or byte ptr [rdx - 1], ch ; jmp rdx
0x000000000041f095 : or dword ptr [rax], eax ; add byte ptr [rax], bl ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000415d77 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000412431 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f1b4 : or r8b, byte ptr [rax] ; add byte ptr [rax], ch ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x000000000041c3bf : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c20f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406915 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000041d33c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d33e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004020ec : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d340 : pop r14 ; pop r15 ; ret
0x00000000004020ee : pop r15 ; pop rbp ; ret
0x000000000041d342 : pop r15 ; ret
0x000000000041ca38 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000041e8b8 : pop rax ; cmp al, -2 ; jmp qword ptr [rdi]
0x000000000041f558 : pop rax ; mov cl, -1 ; jmp rax
0x000000000041ec78 : pop rax ; mov edi, esi ; call qword ptr [rcx]
0x0000000000401842 : pop rbp ; mov byte ptr [rip + 0x21ea86], 1 ; ret
0x00000000004017e1 : pop rbp ; mov edi, 0x620270 ; jmp rax
0x000000000040181e : pop rbp ; mov rsi, rax ; mov edi, 0x620270 ; jmp rdx
0x000000000041d33b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d33f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017d5 : pop rbp ; ret
0x00000000004020eb : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004113aa : pop rbx ; pop rbp ; ret
0x000000000041cce4 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004020ef : pop rdi ; pop rbp ; ret
0x000000000041d343 : pop rdi ; ret
0x000000000041d12b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004020ed : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041d341 : pop rsi ; pop r15 ; ret
0x000000000041d33d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b5e2 : pop rsp ; ret
0x000000000041caf9 : popfq ; ret 0xd284
0x0000000000403e61 : popfq ; xor byte ptr fs:[rcx + rdi*4 + 0x71], cl ; scasb al, byte ptr [rdi] ; ret
0x0000000000416734 : push -0x17000002 ; ret
0x00000000004141e0 : push -0x77 ; test dword ptr [rbx + rdi*8 - 0x7bf00001], ebp ; ret
0x000000000041f259 : push -1 ; jmp rdx
0x0000000000410dcf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000401cf4 : push rax ; pop rbp ; ret
0x000000000041702b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000404e51 : push rbp ; call 0x902cfa3
0x0000000000417933 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040ef08 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040f0ee : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040f194 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040f1c2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040f290 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040f426 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401864 : push rbp ; mov edi, 0x61fe20 ; mov rbp, rsp ; call rax
0x0000000000403120 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004044c2 : push rbp ; ret
0x0000000000415565 : push rcx ; jmp qword ptr [rsi]
0x00000000004155b0 : push rdx ; jmp qword ptr [rsi]
0x000000000041e680 : pushfq ; mov edi, 0x122cffff ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000041b683 : pushfq ; ret 0x8445
0x000000000041b3cc : pushfq ; ret 0xd284
0x000000000040575f : pushfq ; ret 0xe280
0x0000000000400478 : ret
0x000000000040501c : ret 0
0x000000000041a829 : ret 0x10
0x0000000000414ec2 : ret 0x11e9
0x0000000000402528 : ret 0x1e48
0x0000000000412ede : ret 0x1f
0x000000000041cbeb : ret 0x2030
0x00000000004016e2 : ret 0x21ea
0x00000000004014e2 : ret 0x21eb
0x0000000000412add : ret 0x24
0x000000000040e8e7 : ret 0x2a
0x0000000000411c06 : ret 0x2c1
0x00000000004082f0 : ret 0x30
0x000000000040592d : ret 0x3144
0x000000000040763a : ret 0x41e2
0x000000000040b84a : ret 0x43fa
0x0000000000402c07 : ret 0x4589
0x0000000000410560 : ret 0x4ae8
0x00000000004087bf : ret 0x558b
0x000000000041bf93 : ret 0x5e5
0x00000000004082fe : ret 0x8148
0x00000000004042fc : ret 0x81b9
0x00000000004054b6 : ret 0x8445
0x0000000000408521 : ret 0x8589
0x000000000040b6e0 : ret 0x891a
0x000000000041c59c : ret 0x8934
0x0000000000417937 : ret 0x8948
0x000000000041a2d1 : ret 0x89b6
0x000000000041c578 : ret 0x8b34
0x0000000000410545 : ret 0x8b48
0x0000000000414e35 : ret 0x9ee9
0x000000000040f5b5 : ret 0xa9b9
0x000000000040b032 : ret 0xade6
0x0000000000402066 : ret 0xb0
0x000000000040ed20 : ret 0xb91a
0x000000000041a58b : ret 0xb9b6
0x00000000004045cf : ret 0xbe8
0x0000000000401805 : ret 0xc148
0x00000000004128ee : ret 0xc189
0x000000000041387d : ret 0xcb5b
0x0000000000402040 : ret 0xd284
0x0000000000410dd3 : ret 0xd4e9
0x00000000004026dd : ret 0xde8
0x0000000000413afa : ret 0xe
0x0000000000402ab4 : ret 0xe280
0x00000000004113ec : ret 0xee8
0x000000000040f795 : ret 0xf41
0x0000000000402d4a : ret 0xf9ba
0x000000000040ef0b : ret 0xff9f
0x00000000004108ae : ret 0xffa5
0x000000000040f0f1 : ret 0xffbf
0x000000000040fb5b : ret 0xffc4
0x000000000040f197 : ret 0xffc5
0x000000000040f1c5 : ret 0xffd5
0x000000000040f293 : ret 0xffd8
0x000000000040fc01 : ret 0xffd9
0x000000000040f429 : ret 0xffe0
0x000000000040e4fe : ret 0xfffa
0x00000000004051be : ret 0xffff
0x0000000000404a21 : ret 1
0x000000000040fa60 : ret 2
0x000000000041971a : ret 3
0x0000000000410ee7 : ret 4
0x0000000000415da8 : ret 5
0x0000000000404e55 : ret 8
0x000000000040591f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004058db : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b985 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004024d5 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000404a1c : rol dword ptr [rdx], 0 ; add cl, ch ; ret 1
0x0000000000408fb6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040180c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40181b ; pop rbp ; ret
0x0000000000402f93 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408fb7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000417930 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000406f58 : sahf ; ret 0x8445
0x0000000000418db9 : sahf ; ret 0xd284
0x0000000000404e71 : salc ; mov rdx, qword ptr [rbp - 0xd8] ; call rax
0x000000000041aa4e : salc ; ret
0x000000000040180e : sar eax, 1 ; jne 0x401819 ; pop rbp ; ret
0x000000000040180d : sar rax, 1 ; jne 0x40181a ; pop rbp ; ret
0x000000000041e78c : sbb al, 0 ; add byte ptr [rax], al ; and byte ptr [rsi + rdi*8], ch ; jmp rax
0x0000000000412069 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000403e3d : sbb dl, bl ; and al, 0xffffffffffffffb9 ; jno 0x403df7 ; ret
0x0000000000417513 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f5ae : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000040369f : scasb al, byte ptr [rdi] ; ret
0x0000000000402aad : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000041e791 : sub al, -2 ; jmp rax
0x000000000041e684 : sub al, 0x12 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040c5f7 : sub al, 0x38 ; ret 0x8589
0x000000000040f5b3 : sub al, 0x38 ; ret 0xa9b9
0x000000000041f1b8 : sub byte ptr [rdi + rdi*8], dh ; jmp qword ptr [rdx]
0x000000000041eb78 : sub byte ptr [rsi - 2], ch ; jmp qword ptr [rdi]
0x0000000000402aae : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000041d37d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041d37c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041704b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041b7c8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041224d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000416f28 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404a1b : test al, cl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041d34a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402c04 : test byte ptr [rbp + 0x6b], dh ; ret 0x4589
0x0000000000415d75 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040346a : test cl, bh ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000402c46 : test dword ptr [rbp + 0x6b], esi ; ret 0x4589
0x0000000000402d47 : test dword ptr [rbp + 0x6b], esi ; ret 0xf9ba
0x00000000004141e2 : test dword ptr [rbx + rdi*8 - 0x7bf00001], ebp ; ret
0x0000000000417030 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416d98 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000406724 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000403081 : wait ; add byte ptr [rax], al ; add bh, al ; in al, dx ; lahf ; xchg eax, ebp ; ret
0x00000000004044c0 : xchg byte ptr [rsi], dl ; push rbp ; ret
0x0000000000401845 : xchg dl, ch ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000402ff3 : xchg eax, ebp ; ret
0x0000000000408793 : xchg eax, ebp ; ret 0x8445
0x0000000000404d60 : xchg eax, ebp ; ret 0xd284
0x000000000040c5db : xchg eax, ecx ; ret
0x0000000000406f7e : xchg eax, edi ; ret 0xd284
0x000000000040c72b : xchg eax, edx ; ret
0x0000000000416f2e : xchg eax, edx ; ret 0xd284
0x0000000000411f62 : xchg eax, esi ; ret
0x000000000040203f : xchg eax, esi ; ret 0xd284
0x0000000000414618 : xchg eax, esi ; ret 0xe280
0x00000000004095c3 : xchg eax, esp ; ret
0x00000000004054b5 : xchg eax, esp ; ret 0x8445
0x000000000040439b : xchg eax, esp ; ret 0xd284
0x0000000000402ab3 : xchg eax, esp ; ret 0xe280
0x00000000004024d4 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041f1b9 : xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x0000000000403e63 : xor byte ptr [rcx + rdi*4 + 0x71], cl ; scasb al, byte ptr [rdi] ; ret
0x00000000004088c0 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403e62 : xor byte ptr fs:[rcx + rdi*4 + 0x71], cl ; scasb al, byte ptr [rdi] ; ret
0x0000000000412567 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f099 : xor edi, edi ; jmp qword ptr [rax]
0x000000000041ef79 : xor edi, edi ; jmp qword ptr [rdx]
0x000000000040912d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041ef78 : xor rdi, rdi ; jmp qword ptr [rdx]
