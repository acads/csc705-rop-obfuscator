0x00000000004368e9 : adc al, -1 ; call rax
0x00000000004368c9 : adc al, -1 ; jmp rsi
0x0000000000435081 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x1d], ah ; std ; call rax
0x0000000000436765 : adc al, byte ptr [rax] ; add byte ptr [rax], ch ; add bh, bh ; jmp qword ptr [rcx]
0x000000000041f274 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f1b3 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000435011 : adc byte ptr [rax], al ; add byte ptr [rax - 0x37], ah ; std ; call qword ptr [rax]
0x0000000000435001 : adc byte ptr [rax], al ; add byte ptr [rax], al ; leave ; std ; call rax
0x000000000041667c : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434e54 : adc byte ptr [rcx], ch ; std ; call qword ptr [rax]
0x0000000000435244 : adc byte ptr [rdi + rdi*8], bl ; call rax
0x00000000004307bd : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405750 : adc dl, byte ptr [rdx + 0x3d] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412f1b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004368e5 : adc eax, dword ptr [rax] ; add al, bh ; adc al, -1 ; call rax
0x00000000004350d1 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x14], al ; std ; call qword ptr [rax]
0x0000000000410289 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004368c5 : adc eax, dword ptr [rax] ; add byte ptr [rax], ch ; adc al, -1 ; jmp rsi
0x00000000004252ce : adc eax, dword ptr [rcx - 0x100f43] ; jmp qword ptr [rsi]
0x00000000004368c4 : adc eax, dword ptr fs:[rax] ; add byte ptr [rax], ch ; adc al, -1 ; jmp rsi
0x0000000000434e15 : adc edi, ebp ; call qword ptr [rax]
0x00000000004356e9 : adc edi, ebp ; call qword ptr [rsi]
0x0000000000436223 : add ah, al ; or al, 0 ; add byte ptr [rax], bh ; idiv ch ; call qword ptr [rcx]
0x0000000000415213 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000435965 : add al, 0 ; add byte ptr [rax - 0x50], bl ; std ; jmp qword ptr [rdx]
0x000000000041cbea : add al, 0x15 ; ret
0x0000000000406a32 : add al, 0x25 ; cwde ; and dword ptr [rbx], 0x5d ; ret
0x0000000000427dc7 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000435964 : add al, 4 ; add byte ptr [rax], al ; pop rax ; mov al, -3 ; jmp qword ptr [rdx]
0x00000000004354d3 : add al, al ; in al, -1 ; call qword ptr [rax]
0x00000000004368e7 : add al, bh ; adc al, -1 ; call rax
0x0000000000437207 : add al, bl ; ret 0xffff
0x0000000000415409 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000412813 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004176f0 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000403cad : add al, ch ; int 0xdd
0x00000000004254a0 : add al, ch ; pop rdx ; ret 0xfffd
0x0000000000428028 : add al, ch ; ret 0xfd96
0x00000000004055d8 : add al, ch ; ret 0xffff
0x0000000000405444 : add al, ch ; salc ; ret
0x0000000000436067 : add al, cl ; iretd ; std ; call rdx
0x0000000000436f87 : add al, cl ; mov ah, -1 ; jmp qword ptr [rdi]
0x0000000000436507 : add al, cl ; mov bl, -2 ; jmp qword ptr [rsi]
0x0000000000435283 : add al, dh ; sub bh, bh ; call rax
0x00000000004353c3 : add al, dh ; test al, -1 ; call rax
0x0000000000435313 : add al, dl ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000435143 : add al, dl ; xor esi, edi ; call rax
0x0000000000406887 : add bh, al ; fsubr dword ptr [r9 + 0x69] ; ret 0xe95c
0x000000000042b021 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000414f0d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000041540b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000415215 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000041530b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000412c0e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412976 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000436769 : add bh, bh ; jmp qword ptr [rcx]
0x00000000004337ef : add bl, dh ; ret
0x000000000042b12a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000434e13 : add byte ptr [rax + 0x13], al ; std ; call qword ptr [rax]
0x00000000004350d3 : add byte ptr [rax - 0x14], al ; std ; call qword ptr [rax]
0x0000000000435083 : add byte ptr [rax - 0x1d], ah ; std ; call rax
0x0000000000435013 : add byte ptr [rax - 0x37], ah ; std ; call qword ptr [rax]
0x0000000000434f53 : add byte ptr [rax - 0x3f], ah ; std ; call qword ptr [rax]
0x0000000000434f13 : add byte ptr [rax - 0x41], dl ; std ; call qword ptr [rax]
0x0000000000434ec3 : add byte ptr [rax - 0x44], al ; std ; call rax
0x0000000000435ca7 : add byte ptr [rax - 0x49], bl ; std ; jmp qword ptr [rdi]
0x0000000000435cc7 : add byte ptr [rax - 0x49], ch ; std ; jmp qword ptr [rdi]
0x0000000000435c87 : add byte ptr [rax - 0x49], cl ; std ; jmp qword ptr [rdi]
0x0000000000435a83 : add byte ptr [rax - 0x4dd80000], ah ; std ; jmp qword ptr [rax]
0x0000000000435967 : add byte ptr [rax - 0x50], bl ; std ; jmp qword ptr [rdx]
0x0000000000434e93 : add byte ptr [rax - 0x51], dl ; std ; call qword ptr [rax]
0x0000000000403ad5 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000434e03 : add byte ptr [rax - 0xb], dl ; cld ; call rax
0x0000000000434e43 : add byte ptr [rax], ah ; and al, 0xfffffffffffffffd ; call rax
0x00000000004354c3 : add byte ptr [rax], ah ; loopne 0x4354ca ; call rax
0x0000000000434dd3 : add byte ptr [rax], ah ; sar esp, 1 ; call qword ptr [rax]
0x0000000000434e52 : add byte ptr [rax], al ; adc byte ptr [rcx], ch ; std ; call qword ptr [rax]
0x0000000000435242 : add byte ptr [rax], al ; adc byte ptr [rdi + rdi*8], bl ; call rax
0x00000000004368c2 : add byte ptr [rax], al ; adc eax, dword ptr fs:[rax] ; add byte ptr [rax], ch ; adc al, -1 ; jmp rsi
0x0000000000434e12 : add byte ptr [rax], al ; adc edi, ebp ; call qword ptr [rax]
0x0000000000435962 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; pop rax ; mov al, -3 ; jmp qword ptr [rdx]
0x000000000042549e : add byte ptr [rax], al ; add al, ch ; pop rdx ; ret 0xfffd
0x0000000000428026 : add byte ptr [rax], al ; add al, ch ; ret 0xfd96
0x000000000042b12b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000412c0c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412974 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004337ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403ad3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004337eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000432269 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405064 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406098 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004003bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004189e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172d8445], cl ; ret
0x0000000000418d1b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000040ffce : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426a97 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000427e31 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041846a : add byte ptr [rax], al ; add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000420a93 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000420bc7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de045], cl ; ret
0x0000000000431ffe : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x0000000000427abf : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000415ca6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x00000000004187a3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000432ed9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000432e55 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040421e : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75f8b], cl ; ret 0xb0
0x00000000004042c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x000000000041bb45 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c6b845], cl ; ret
0x000000000042ebbe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000416eaa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004164e3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004203b2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040ee81 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000432f95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041ba96 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f765 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000407edd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403cd8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414ff3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041547a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000412b0a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000407ebf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403a8b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f278 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f1b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000434f42 : add byte ptr [rax], al ; add cl, al ; std ; call rax
0x000000000043279d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000435002 : add byte ptr [rax], al ; add cl, cl ; std ; call rax
0x0000000000434f92 : add byte ptr [rax], al ; add dh, -3 ; call qword ptr [rax]
0x000000000041028b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fcf0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d1d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412f1d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004226fa : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbp ; ret
0x0000000000410247 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004016b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000435c82 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; mov dil, -3 ; jmp qword ptr [rdi]
0x0000000000435092 : add byte ptr [rax], al ; and al, ch ; std ; call qword ptr [rax]
0x0000000000434dd2 : add byte ptr [rax], al ; and cl, dl ; cld ; call qword ptr [rax]
0x0000000000434f82 : add byte ptr [rax], al ; and dh, al ; std ; call rax
0x0000000000435252 : add byte ptr [rax], al ; and dil, dil ; call qword ptr [rax]
0x000000000042542a : add byte ptr [rax], al ; call 0x401704
0x000000000043166d : add byte ptr [rax], al ; call 0x401708
0x00000000004368e6 : add byte ptr [rax], al ; clc ; adc al, -1 ; call rax
0x0000000000436226 : add byte ptr [rax], al ; cmp dh, dh ; std ; call qword ptr [rcx]
0x00000000004367e6 : add byte ptr [rax], al ; cwde ; or edi, edi ; call qword ptr [rdx]
0x0000000000436be6 : add byte ptr [rax], al ; fsub dword ptr [rdi - 1] ; call qword ptr [rbx]
0x0000000000436c06 : add byte ptr [rax], al ; fsubr dword ptr [rax - 1] ; call qword ptr [rsi]
0x00000000004350d2 : add byte ptr [rax], al ; in al, dx ; std ; call qword ptr [rax]
0x00000000004017c9 : add byte ptr [rax], al ; jmp 0x4016c9
0x0000000000404e97 : add byte ptr [rax], al ; jmp 0x4057f2
0x0000000000432799 : add byte ptr [rax], al ; jmp 0x4327a8
0x0000000000433409 : add byte ptr [rax], al ; jmp 0x433418
0x0000000000435003 : add byte ptr [rax], al ; leave ; std ; call rax
0x0000000000434fd2 : add byte ptr [rax], al ; loopne 0x434fa2 ; std ; call qword ptr [rax]
0x00000000004325ac : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000043252d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004362e6 : add byte ptr [rax], al ; mov byte ptr [rsi + rdi*8], cl ; call qword ptr [rdi]
0x0000000000435c86 : add byte ptr [rax], al ; mov dil, -3 ; jmp qword ptr [rdi]
0x0000000000435382 : add byte ptr [rax], al ; mov dr1, edi ; call rax
0x0000000000433617 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000422b7d : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000041134a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004113bd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004117c9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004115e1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407049 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004274cc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004077a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000437202 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000435102 : add byte ptr [rax], al ; or byte ptr [rdi], 0xfe ; call rax
0x0000000000435966 : add byte ptr [rax], al ; pop rax ; mov al, -3 ; jmp qword ptr [rdx]
0x0000000000435ca6 : add byte ptr [rax], al ; pop rax ; mov bh, -3 ; jmp qword ptr [rdi]
0x000000000040402d : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ffcf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fca8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000434e02 : add byte ptr [rax], al ; push rax ; cmc ; cld ; call rax
0x0000000000434e92 : add byte ptr [rax], al ; push rax ; scasd eax, dword ptr [rdi] ; std ; call qword ptr [rax]
0x00000000004003be : add byte ptr [rax], al ; ret
0x0000000000435193 : add byte ptr [rax], al ; ret 0xfffe
0x00000000004356e6 : add byte ptr [rax], al ; sbb byte ptr [rbx], dl ; std ; call qword ptr [rsi]
0x00000000004354d2 : add byte ptr [rax], al ; shl ah, -1 ; call qword ptr [rax]
0x0000000000435312 : add byte ptr [rax], al ; shl byte ptr [rbx - 1], 1 ; call qword ptr [rax]
0x00000000004368c6 : add byte ptr [rax], al ; sub byte ptr [rdi + rdi*8], dl ; jmp rsi
0x0000000000435512 : add byte ptr [rax], al ; sub dl, -1 ; jmp qword ptr [rax]
0x00000000004368e2 : add byte ptr [rax], al ; test byte ptr [rbx], dl ; add byte ptr [rax], al ; clc ; adc al, -1 ; call rax
0x00000000004356e2 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; sbb byte ptr [rbx], dl ; std ; call qword ptr [rsi]
0x00000000004367e2 : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add byte ptr [rax], al ; cwde ; or edi, edi ; call qword ptr [rdx]
0x0000000000436be2 : add byte ptr [rax], al ; test byte ptr [rsi], dl ; add byte ptr [rax], al ; fsub dword ptr [rdi - 1] ; call qword ptr [rbx]
0x0000000000435352 : add byte ptr [rax], al ; test dil, dil ; call qword ptr [rax]
0x0000000000436227 : add byte ptr [rax], bh ; idiv ch ; call qword ptr [rcx]
0x0000000000435c67 : add byte ptr [rax], bh ; mov bh, -3 ; jmp qword ptr [rdi]
0x0000000000435ba7 : add byte ptr [rax], bh ; mov bl, -3 ; jmp qword ptr [rdx]
0x00000000004356e7 : add byte ptr [rax], bl ; adc edi, ebp ; call qword ptr [rsi]
0x00000000004368c7 : add byte ptr [rax], ch ; adc al, -1 ; jmp rsi
0x0000000000436767 : add byte ptr [rax], ch ; add bh, bh ; jmp qword ptr [rcx]
0x0000000000435a87 : add byte ptr [rax], ch ; mov dl, -3 ; jmp qword ptr [rax]
0x0000000000435483 : add byte ptr [rax], dl ; fcos ; call rax
0x00000000004351d3 : add byte ptr [rax], dl ; fdivp st(6) ; call qword ptr [rax]
0x0000000000435243 : add byte ptr [rax], dl ; sbb al, -1 ; call rax
0x0000000000434e53 : add byte ptr [rax], dl ; sub ebp, edi ; call qword ptr [rax]
0x000000000041138f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000000004189e4 : add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041940c : add byte ptr [rbx + 0x182d8445], cl ; ret
0x0000000000428495 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x00000000004284d7 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042f6ff : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x42f6e7 ; ret
0x0000000000418d1d : add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x00000000004190d3 : add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x000000000040ffd0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000418421 : add byte ptr [rbx + 0x42d8445], cl ; ret 0xa43c
0x0000000000426a99 : add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000427e33 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041846c : add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x0000000000420a95 : add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000420bc9 : add byte ptr [rbx + 0x562de045], cl ; ret
0x000000000040fca9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000432000 : add byte ptr [rbx + 0x5f2d9845], cl ; pop rdx ; ret
0x0000000000427ac1 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x0000000000415ca8 : add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x00000000004368c3 : add byte ptr [rbx + rdx], ah ; add byte ptr [rax], ch ; adc al, -1 ; jmp rsi
0x000000000041ae55 : add byte ptr [rbx - 0x20d24fbb], cl ; push rbx ; ret 0x8589
0x000000000041ae13 : add byte ptr [rbx - 0x21d24fbb], cl ; push rbx ; ret 0x4589
0x000000000041964b : add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x00000000004187a5 : add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000432edb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000432e57 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000404220 : add byte ptr [rbx - 0x76b75f8b], cl ; ret 0xb0
0x00000000004042c5 : add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x000000000041bb47 : add byte ptr [rcx + 0x45c6b845], cl ; ret
0x0000000000414fef : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042ebc0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000416eac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004164e5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004203b4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040ee83 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041b9e2 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004356e3 : add byte ptr [rcx + rax + 0x13180000], al ; std ; call qword ptr [rsi]
0x0000000000412c5e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x0000000000435cc3 : add byte ptr [rdi + rax], ah ; add byte ptr [rax - 0x49], ch ; std ; jmp qword ptr [rdi]
0x0000000000435c83 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; mov dil, -3 ; jmp qword ptr [rdi]
0x0000000000435ca3 : add byte ptr [rdi + rax], al ; add byte ptr [rax - 0x49], bl ; std ; jmp qword ptr [rdi]
0x00000000004117fa : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432f97 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041ba98 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f767 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000407edf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403cda : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414ff5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041547c : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000412b0c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000407ec1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403a8d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f27a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f1b9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041be8e : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042794d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000435ba3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], bh ; mov bl, -3 ; jmp qword ptr [rdx]
0x0000000000435963 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; pop rax ; mov al, -3 ; jmp qword ptr [rdx]
0x000000000041650b : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000423b55 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434f44 : add cl, al ; std ; call rax
0x0000000000411959 : add cl, ch ; ret
0x000000000043279f : add cl, ch ; ret 0
0x000000000040319b : add cl, ch ; ret 1
0x0000000000435004 : add cl, cl ; std ; call rax
0x0000000000434f94 : add dh, -3 ; call qword ptr [rax]
0x000000000042d3aa : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000042b01f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000410245 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004356e5 : add dword ptr [rax], eax ; add byte ptr [rax], bl ; adc edi, ebp ; call qword ptr [rsi]
0x000000000041096a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000426de5 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000427891 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000416f59 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004042e7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413c0f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000423070 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000401c04 : add eax, 0x23672e ; add ebx, esi ; ret
0x0000000000435a85 : add eax, 0xb2280000 ; std ; jmp qword ptr [rax]
0x000000000043228e : add eax, 0xb8000001 ; pop rdi ; pop rdx ; ret
0x000000000041f34a : add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000419649 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x00000000004063e6 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000430936 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427dc9 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000401f0b : add esp, 0x10 ; pop rbp ; ret
0x0000000000412c5c : add esp, 0x100 ; pop rbp ; ret
0x000000000041667a : add esp, 0x110 ; pop rbp ; ret
0x0000000000423e09 : add esp, 0x1120 ; pop rbp ; ret
0x0000000000410967 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042c37f : add esp, 0x120 ; pop rbp ; ret
0x0000000000417c97 : add esp, 0x140 ; pop rbp ; ret
0x00000000004069e4 : add esp, 0x150 ; pop rbp ; ret
0x000000000042cf6e : add esp, 0x160 ; pop rbp ; ret
0x00000000004060e0 : add esp, 0x170 ; pop rbp ; ret
0x0000000000427896 : add esp, 0x18 ; pop rbp ; ret
0x0000000000412dcc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040fcf3 : add esp, 0x20 ; pop rbp ; ret
0x000000000041be8c : add esp, 0x200 ; pop rbp ; ret
0x00000000004307bb : add esp, 0x210 ; pop rbp ; ret
0x00000000004057e2 : add esp, 0x2b0 ; pop rbp ; ret
0x000000000042eec3 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004156ac : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000415d20 : add esp, 0x30 ; pop rbp ; ret
0x0000000000404029 : add esp, 0x3a0 ; pop rbp ; ret
0x00000000004071b7 : add esp, 0x40 ; pop rbp ; ret
0x00000000004226fd : add esp, 0x48 ; pop rbp ; ret
0x000000000041acf6 : add esp, 0x4c0 ; pop rbp ; ret
0x00000000004020e2 : add esp, 0x50 ; pop rbp ; ret
0x000000000041f9b7 : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000401ec4 : add esp, 0x60 ; pop rbp ; ret
0x00000000004042ec : add esp, 0x70 ; pop rbp ; ret
0x00000000004111bc : add esp, 0x80 ; pop rbp ; ret
0x0000000000420d5e : add esp, 0x90 ; pop rbp ; ret
0x000000000040756e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000428b63 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040fca4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000411315 : add esp, 0xd0 ; pop rbp ; ret
0x000000000042056d : add esp, 0xe0 ; pop rbp ; ret
0x0000000000422f6c : add esp, 0xf0 ; pop rbp ; ret
0x00000000004016b6 : add esp, 8 ; ret
0x00000000004055d7 : add r8b, bpl ; ret 0xffff
0x0000000000405443 : add r8b, bpl ; salc ; ret
0x0000000000430935 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427dc8 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401f0a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000412c5b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000416679 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000423e08 : add rsp, 0x1120 ; pop rbp ; ret
0x0000000000410966 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042c37e : add rsp, 0x120 ; pop rbp ; ret
0x0000000000417c96 : add rsp, 0x140 ; pop rbp ; ret
0x00000000004069e3 : add rsp, 0x150 ; pop rbp ; ret
0x000000000042cf6d : add rsp, 0x160 ; pop rbp ; ret
0x00000000004060df : add rsp, 0x170 ; pop rbp ; ret
0x0000000000427895 : add rsp, 0x18 ; pop rbp ; ret
0x0000000000412dcb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040fcf2 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041be8b : add rsp, 0x200 ; pop rbp ; ret
0x00000000004307ba : add rsp, 0x210 ; pop rbp ; ret
0x00000000004057e1 : add rsp, 0x2b0 ; pop rbp ; ret
0x000000000042eec2 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004156ab : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000415d1f : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404028 : add rsp, 0x3a0 ; pop rbp ; ret
0x00000000004071b6 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004226fc : add rsp, 0x48 ; pop rbp ; ret
0x000000000041acf5 : add rsp, 0x4c0 ; pop rbp ; ret
0x00000000004020e1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041f9b6 : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000401ec3 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004042eb : add rsp, 0x70 ; pop rbp ; ret
0x00000000004111bb : add rsp, 0x80 ; pop rbp ; ret
0x0000000000420d5d : add rsp, 0x90 ; pop rbp ; ret
0x000000000040756d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000428b62 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040fca3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000411314 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042056c : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000422f6b : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004016b5 : add rsp, 8 ; ret
0x0000000000434e45 : and al, 0xfffffffffffffffd ; call rax
0x0000000000413c0e : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435c84 : and al, 7 ; add byte ptr [rax], al ; mov dil, -3 ; jmp qword ptr [rdi]
0x0000000000435481 : and al, byte ptr [rax] ; add byte ptr [rax], dl ; fcos ; call rax
0x000000000041b058 : and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000435094 : and al, ch ; std ; call qword ptr [rax]
0x000000000042d3a8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000435255 : and bh, bh ; call qword ptr [rax]
0x00000000004214d2 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042162c : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042c381 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423e0b : and byte ptr [rcx], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426de3 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000434dd4 : and cl, dl ; cld ; call qword ptr [rax]
0x0000000000434f84 : and dh, al ; std ; call rax
0x000000000042d3a7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000435254 : and dil, dil ; call qword ptr [rax]
0x0000000000403198 : and dword ptr [rax + rax], ecx ; add cl, ch ; ret 1
0x0000000000405062 : and dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406096 : and dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406a11 : and dword ptr [rbx], 0x5d ; ret
0x00000000004055d4 : and eax, 0x4340ca ; call 0x401827
0x0000000000428ca5 : and eax, 0x434c50 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000406a0f : and eax, 0x638390 ; pop rbp ; ret
0x0000000000406a33 : and eax, 0x638398 ; pop rbp ; ret
0x0000000000401c06 : and eax, dword ptr [eax] ; add ebx, esi ; ret
0x00000000004354d1 : and eax, dword ptr [rax] ; add al, al ; in al, -1 ; call qword ptr [rax]
0x00000000004354c1 : and eax, dword ptr [rax] ; add byte ptr [rax], ah ; loopne 0x4354cc ; call rax
0x0000000000401c07 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000401c05 : and eax, dword ptr cs:[eax] ; add ebx, esi ; ret
0x000000000042542c : call 0x401702
0x000000000043166f : call 0x401706
0x000000000043163c : call 0x401776
0x00000000004055d9 : call 0x401822
0x0000000000419d02 : call 0x4018c9
0x0000000000403c5b : call 0x401a88
0x0000000000425473 : call 0x411682
0x0000000000419a7a : call 0x415d32
0x000000000041bb08 : call 0x42d4e6
0x00000000004260a9 : call 0x42f4b6
0x00000000004253dc : call 0x42f5b7
0x000000000042ab96 : call 0xffffffff8a051138
0x000000000040fce9 : call 0xffffffffe9038639
0x000000000040fce8 : call 0xffffffffe903863a
0x000000000040b72d : call 0xfffffffff7393cc4
0x000000000042e985 : call 0xffffffffff476f5a
0x000000000040e259 : call 0xffffffffff55682b
0x000000000040e258 : call 0xffffffffff55682c
0x000000000040e259 : call 0xffffffffff55682d
0x000000000040e258 : call 0xffffffffff55682e
0x0000000000429c87 : call 0xffffffffff7c27d8
0x0000000000429c86 : call 0xffffffffff7c27d9
0x00000000004337c9 : call qword ptr [r12 + rbx*8]
0x000000000040d5e6 : call qword ptr [rax]
0x0000000000404180 : call qword ptr [rbx]
0x000000000040f275 : call qword ptr [rcx]
0x00000000004362eb : call qword ptr [rdi]
0x000000000040d213 : call qword ptr [rdx]
0x000000000040d1af : call qword ptr [rsi]
0x00000000004337ca : call qword ptr [rsp + rbx*8]
0x0000000000429d23 : call rax
0x000000000040b9ca : call rbx
0x000000000041cd73 : call rcx
0x0000000000427c67 : call rdx
0x0000000000412c14 : call rsi
0x0000000000432e5c : cdq ; ret
0x00000000004368e8 : clc ; adc al, -1 ; call rax
0x00000000004113c0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004069e2 : clc ; add rsp, 0x150 ; pop rbp ; ret
0x00000000004287b3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004307b9 : clc ; add rsp, 0x210 ; pop rbp ; ret
0x000000000042f497 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f7bc : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420fa3 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000430e30 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000428403 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000428b61 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x000000000042d4c8 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004269a7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004307db : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042cfae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000404047 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042718b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271ab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004271cb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040404b : clc ; pop rbp ; ret
0x0000000000401f37 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434dd6 : cld ; call qword ptr [rax]
0x0000000000434e06 : cld ; call rax
0x0000000000411396 : cld ; pop rbp ; ret
0x0000000000434dfe : cld ; push qword ptr [rax + 0x50000008] ; cmc ; cld ; call rax
0x000000000040dead : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000432140 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041650a : cli ; add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000434e05 : cmc ; cld ; call rax
0x000000000041b055 : cmc ; movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000416c29 : cmovs ecx, dword ptr [rbx - 0x7eb737ab] ; ret 0xffff
0x000000000042df8d : cmp al, -0x2a ; ret
0x00000000004190d8 : cmp al, -0x6a ; ret
0x000000000040543f : cmp al, 0x25 ; mov word ptr [rcx + 0x43], es ; add al, ch ; salc ; ret
0x0000000000406a0e : cmp al, 0x25 ; nop ; and dword ptr [rbx], 0x5d ; ret
0x00000000004217dd : cmp byte ptr [rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x00000000004217dc : cmp byte ptr ds:[rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000436228 : cmp dh, dh ; std ; call qword ptr [rcx]
0x000000000042470e : cmp dword ptr [rcx - 0x100f43], eax ; jmp qword ptr [rsi]
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x00000000004266ec : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410184 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041bcd2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000406a34 : cwde ; and dword ptr [rbx], 0x5d ; ret
0x0000000000419fe1 : cwde ; jmp 0x41ad06
0x0000000000419fe0 : cwde ; jmp 0x41ad07
0x000000000043295b : cwde ; js 0x432905 ; ret
0x00000000004329a2 : cwde ; js 0x43294c ; ret
0x00000000004329dc : cwde ; js 0x432986 ; ret
0x00000000004367e8 : cwde ; or edi, edi ; call qword ptr [rdx]
0x0000000000405f70 : dec dword ptr [rax - 0x77] ; ret 0x67e8
0x0000000000411fd7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405fba : dec dword ptr [rax - 0x77] ; ret 0xdde8
0x000000000040e052 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040e35d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040f864 : dec dword ptr [rdi] ; ret 0x8589
0x000000000041e2d1 : dec dword ptr [rdi] ; ret 0xc609
0x00000000004063e2 : dec dword ptr [rdi] ; test bl, ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004176ec : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000404ccb : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffff6], dl ; ret 1
0x0000000000403195 : dec dword ptr [rdi] ; test byte ptr [rcx], ah ; or al, 0 ; add cl, ch ; ret 1
0x000000000042ff94 : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000411953 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040d398 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000423b2d : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x0000000000422bb0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000422baf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000419a75 : enter -0x74b8, 0x75 ; shr al, -0x4f ; ret 0xffff
0x0000000000419b1d : enter -0x74b8, 0x75 ; shr al, 9 ; ret 0xffff
0x0000000000427d17 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004211ae : enter -0x79d3, -0xa ; ret 0x89c8
0x0000000000421163 : enter -0x7ad3, -0xa ; ret 0x89c8
0x0000000000427dca : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x00000000004204da : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000403cd6 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e73b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000421483 : enter 0x612d, 1 ; ret 0x897e
0x000000000040740d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403b0c : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403aaa : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411199 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403a89 : fcom qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000426d22 : fcomp qword ptr [rbp - 0x75b54151] ; ret 0x8423
0x0000000000435485 : fcos ; call rax
0x00000000004351c5 : fdiv st(6), st(0) ; call rax
0x00000000004351d5 : fdivp st(6) ; call qword ptr [rax]
0x000000000041ae18 : ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041ae5a : fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000041b05b : fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000413514 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415a93 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000415a97 : fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000041fd6e : fmul dword ptr [rax - 0x7f] ; ret 0x60
0x00000000004337cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000436be8 : fsub dword ptr [rdi - 1] ; call qword ptr [rbx]
0x0000000000406889 : fsubr dword ptr [r9 + 0x69] ; ret 0xe95c
0x0000000000436c08 : fsubr dword ptr [rax - 1] ; call qword ptr [rsi]
0x000000000040688a : fsubr dword ptr [rcx + 0x69] ; ret 0xe95c
0x0000000000417c27 : fsubr st(0) ; ret
0x0000000000429894 : fsubr st(1) ; ret 0
0x000000000042a35c : fucompi st(1) ; ret
0x0000000000401f09 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423e07 : hlt ; add rsp, 0x1120 ; pop rbp ; ret
0x0000000000431afc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d4c4 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6382d0 ; jmp rax
0x0000000000436229 : idiv ch ; call qword ptr [rcx]
0x0000000000419648 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x00000000004122ae : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000415671 : imul eax, eax, -2 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000040d809 : in al, -0x7f ; ret 0xff9f
0x000000000040d9ef : in al, -0x7f ; ret 0xffbf
0x000000000040da95 : in al, -0x7f ; ret 0xffc5
0x000000000040dac3 : in al, -0x7f ; ret 0xffd5
0x000000000040db91 : in al, -0x7f ; ret 0xffd8
0x000000000040dd27 : in al, -0x7f ; ret 0xffe0
0x00000000004354d5 : in al, -1 ; call qword ptr [rax]
0x00000000004214d0 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042162a : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401fb7 : in al, 0x2d ; mov gs, word ptr [rcx - 0x41] ; ret
0x0000000000417c95 : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x00000000004060de : in al, 0x48 ; add esp, 0x170 ; pop rbp ; ret
0x0000000000420c48 : in al, 0x56 ; ret
0x000000000042d617 : in al, 0x5d ; ret
0x0000000000420eea : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420f0b : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420f2c : in al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420f4d : in al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bc8a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041be8a : in al, dx ; add rsp, 0x200 ; pop rbp ; ret
0x000000000042d7c9 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004263ef : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004078ba : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004350d5 : in al, dx ; std ; call qword ptr [rax]
0x000000000041bab5 : in eax, -0x76 ; push rbp ; ret
0x0000000000411393 : in eax, -0x77 ; jge 0x411398 ; pop rbp ; ret
0x0000000000411553 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000043305b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414ffe : inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000041b9cf : inc dword ptr [rax + 0x558801e2] ; ret
0x000000000043213e : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000040ee7f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041e772 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040d441 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f39f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040fa2a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004033a3 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000423b06 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423adf : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420c45 : inc edi ; in al, 0x56 ; ret
0x0000000000410938 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000415674 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000409fdf : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040d61f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000042470d : int 0x39
0x0000000000403caf : int 0xdd
0x0000000000436069 : iretd ; std ; call rdx
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x000000000042cfb1 : ja 0x42cffe ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6382d0 ; jmp rax
0x0000000000404046 : jge 0x404047 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411395 : jge 0x411396 ; pop rbp ; ret
0x0000000000411556 : jge 0x411553 ; pop rbp ; ret
0x0000000000411dc8 : jge 0x411ddf ; ret
0x00000000004122b3 : jge 0x4122ca ; ret
0x0000000000419a74 : jge 0x419a46 ; mov rsi, qword ptr [rbp - 0x40] ; call 0x415d38
0x0000000000419b1c : jge 0x419aee ; mov rsi, qword ptr [rbp - 0x40] ; call 0x415d38
0x00000000004253da : jge 0x4253b5 ; call 0x42f5b9
0x000000000042546d : jge 0x42545f ; mov rsi, qword ptr [rbp - 0x20] ; call 0x411688
0x000000000042718a : jge 0x42718b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271aa : jge 0x4271ab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004271ca : jge 0x4271cb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042cfad : jge 0x42cfae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004307da : jge 0x4307dd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004335c9 : jge 0x4335c3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004002db : jl 0x400321 ; ret
0x0000000000411c9c : jl 0x411cb3 ; ret
0x000000000042f6b5 : jl 0x42f691 ; ret
0x000000000042f705 : jl 0x42f6e1 ; ret
0x00000000004017cb : jmp 0x4016c7
0x0000000000404239 : jmp 0x4042f9
0x0000000000404e99 : jmp 0x4057f0
0x0000000000406d31 : jmp 0x406ce5
0x000000000040cfcd : jmp 0x40fcb3
0x000000000040fa61 : jmp 0x40fcb5
0x00000000004122ad : jmp 0x412825
0x000000000041651c : jmp 0x416688
0x0000000000419c1b : jmp 0x41ad04
0x0000000000419fe2 : jmp 0x41ad05
0x000000000042537b : jmp 0x425598
0x0000000000426c72 : jmp 0x426dc2
0x0000000000427c12 : jmp 0x427ce7
0x0000000000428024 : jmp 0x4280b1
0x00000000004306ba : jmp 0x4307cb
0x000000000043228d : jmp 0x43239f
0x000000000043228c : jmp 0x4323a0
0x000000000043279b : jmp 0x4327a6
0x000000000043340b : jmp 0x433416
0x000000000042b991 : jmp 0x490542e1
0x000000000042ba0c : jmp 0x4905435c
0x000000000042cd65 : jmp 0x490556b5
0x000000000042cde0 : jmp 0x49055730
0x0000000000420fd5 : jmp 0x7f04113d
0x000000000042abdb : jmp 0xffffffff8a05117d
0x000000000042d80e : jmp 0xffffffffb704dbda
0x000000000043295a : jmp 0xffffffffc3e7a1fb
0x000000000042af8f : jmp 0xffffffffea051531
0x000000000040d0ed : jmp qword ptr [rax]
0x000000000040e25f : jmp qword ptr [rbx]
0x000000000040fc30 : jmp qword ptr [rcx]
0x0000000000435c6b : jmp qword ptr [rdi]
0x0000000000410185 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040b736 : jmp qword ptr [rdx]
0x000000000040e1ef : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x000000000040ed82 : jmp rbx
0x000000000040f41e : jmp rdi
0x0000000000401be7 : jmp rdx
0x00000000004368cb : jmp rsi
0x000000000040ee19 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x0000000000410936 : jne 0x41093f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000419a78 : jne 0x419a3e ; call 0x415d34
0x0000000000419b20 : jne 0x419ae6 ; call 0x415d34
0x000000000041bab0 : jne 0x41ba73 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x00000000004218b9 : jne 0x42189c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000422bb1 : jne 0x422ba9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000422fa2 : jne 0x422f9a ; mov rax, rdx ; pop rbp ; ret
0x0000000000425471 : jne 0x425457 ; call 0x411684
0x0000000000427d16 : jne 0x427ce9 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004042ee : jo 0x40434f ; ret
0x00000000004060e2 : jo 0x4060ea ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410b51 : jo 0x410bb2 ; ret
0x0000000000410c74 : jo 0x410cd5 ; ret
0x0000000000410dae : jo 0x410e0f ; ret
0x00000000004135bc : jo 0x41361d ; ret
0x0000000000415334 : jo 0x415303 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000415333 : jo 0x415304 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000415a69 : jo 0x415aca ; ret
0x000000000041f347 : jo 0x41f2d3 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004266c3 : jo 0x426724 ; ret
0x0000000000430e34 : jo 0x430e95 ; ret
0x0000000000435085 : jrcxz 0x435086 ; call rax
0x000000000040fca6 : js 0x40fcba ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043295c : js 0x432904 ; ret
0x00000000004329a3 : js 0x43294b ; ret
0x00000000004329dd : js 0x432985 ; ret
0x00000000004055d2 : lea edi, dword ptr [0x4340ca] ; call 0x401829
0x00000000004306b9 : leave ; jmp 0x4307cc
0x0000000000435015 : leave ; std ; call qword ptr [rax]
0x0000000000435005 : leave ; std ; call rax
0x0000000000435010 : lock adc byte ptr [rax], al ; add byte ptr [rax - 0x37], ah ; std ; call qword ptr [rax]
0x000000000042549d : lock add byte ptr [rax], al ; add al, ch ; pop rdx ; ret 0xfffd
0x0000000000434e10 : lock or byte ptr [rax], al ; add byte ptr [rax + 0x13], al ; std ; call qword ptr [rax]
0x0000000000434e50 : lock or dword ptr [rax], eax ; add byte ptr [rax], dl ; sub ebp, edi ; call qword ptr [rax]
0x000000000042af8e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051532
0x000000000042af8d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051533
0x000000000040611e : lodsb al, byte ptr [rsi] ; ret 0x458b
0x0000000000406313 : lodsb al, byte ptr [rsi] ; ret 0x8589
0x000000000042b024 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000413c0d : loop 0x413c3a ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413c0c : loop 0x413c3b ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000432409 : loop 0x43245b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004324f1 : loop 0x432543 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000426de4 : loope 0x426ded ; movzx eax, cl ; pop rbp ; ret
0x0000000000407c7e : loopne 0x407c87 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413300 : loopne 0x413309 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041370c : loopne 0x41375c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041370b : loopne 0x41375d ; add esp, 0x40 ; pop rbp ; ret
0x00000000004156ae : loopne 0x4156b7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416cb1 : loopne 0x416d04 ; add esp, 0x100 ; pop rbp ; ret
0x000000000042034f : loopne 0x420358 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004203b0 : loopne 0x4203ba ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000042056f : loopne 0x420576 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420a98 : loopne 0x420acb ; push rbp ; ret
0x0000000000420a97 : loopne 0x420acc ; push rbp ; ret
0x0000000000420bcc : loopne 0x420bff ; push rsi ; ret
0x0000000000420bcb : loopne 0x420c00 ; push rsi ; ret
0x0000000000422a37 : loopne 0x422a3e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426a9c : loopne 0x426acf ; ret
0x0000000000426a9b : loopne 0x426ad0 ; ret
0x0000000000429097 : loopne 0x4290a0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a330 : loopne 0x42a339 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a350 : loopne 0x42a39e ; mov edi, dword ptr [rcx] ; call rax
0x000000000042a34f : loopne 0x42a39f ; mov edi, dword ptr [rcx] ; call rax
0x000000000042a41c : loopne 0x42a425 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a4b4 : loopne 0x42a4bd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043199c : loopne 0x4319a5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434fd4 : loopne 0x434fa0 ; std ; call qword ptr [rax]
0x00000000004354c5 : loopne 0x4354c8 ; call rax
0x0000000000436f69 : mov ah, -1 ; jmp qword ptr [rdi]
0x00000000004020e0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405f20 : mov al, -0x17 ; ret 1
0x0000000000435969 : mov al, -3 ; jmp qword ptr [rdx]
0x000000000042ced8 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e95a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428b65 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043163a : mov al, 0 ; call 0x401778
0x0000000000435000 : mov al, 0x10 ; add byte ptr [rax], al ; add cl, cl ; std ; call rax
0x0000000000435100 : mov al, 0x14 ; add byte ptr [rax], al ; or byte ptr [rdi], 0xfe ; call rax
0x0000000000435240 : mov al, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi + rdi*8], bl ; call rax
0x0000000000435380 : mov al, 0x1e ; add byte ptr [rax], al ; mov dr1, edi ; call rax
0x000000000041ae16 : mov al, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041ae58 : mov al, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x0000000000407e3b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000434f40 : mov al, 0xd ; add byte ptr [rax], al ; add cl, al ; std ; call rax
0x0000000000434f80 : mov al, 0xe ; add byte ptr [rax], al ; and dh, al ; std ; call rax
0x00000000004057e4 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434e00 : mov al, 8 ; add byte ptr [rax], al ; push rax ; cmc ; cld ; call rax
0x00000000004326ad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043285d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433059 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413c0b : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042308f : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429691 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042d4ec : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004325af : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004325ae : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000043252f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004117fc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432533 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000435c69 : mov bh, -3 ; jmp qword ptr [rdi]
0x0000000000436509 : mov bl, -2 ; jmp qword ptr [rsi]
0x0000000000435ba9 : mov bl, -3 ; jmp qword ptr [rdx]
0x0000000000406a31 : mov byte ptr [0x638398], al ; pop rbp ; ret
0x000000000042d611 : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000040f7f8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401c03 : mov byte ptr [rip + 0x23672e], 1 ; ret
0x00000000004362e8 : mov byte ptr [rsi + rdi*8], cl ; call qword ptr [rdi]
0x000000000042f68b : mov cl, 0x17 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d3ad : mov dh, -0x39 ; pop rbp ; ret
0x0000000000426de7 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000427893 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000416f5b : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004042e9 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413c11 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000435c88 : mov dil, -3 ; jmp qword ptr [rdi]
0x0000000000433185 : mov dl, -0x47 ; ret
0x0000000000435a89 : mov dl, -3 ; jmp qword ptr [rax]
0x0000000000435385 : mov dr1, edi ; call rax
0x0000000000406a0d : mov dword ptr [0x638390], edi ; pop rbp ; ret
0x0000000000407af7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004078bb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407a2f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042c139 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x0000000000425442 : mov dword ptr [rbp - 0x1118], ecx ; call 0x401708
0x000000000042c2ab : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000428021 : mov dword ptr [rbp - 0x24], eax ; jmp 0x4280b4
0x00000000004260a6 : mov dword ptr [rbp - 0x34], eax ; call 0x42f4b9
0x0000000000416519 : mov dword ptr [rbp - 0x38], eax ; jmp 0x41668b
0x00000000004020de : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427c61 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x0000000000428aaf : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000401f07 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f35 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411394 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404045 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411555 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042d4c9 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042219e : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407cad : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ff9f : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428caa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004269a8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042cfb0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004307dc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004077af : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041364b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004071b3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041332f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004266bd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040704c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042d7c7 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041374e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413020 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d1e0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407afa : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042d615 : mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000041370a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004076a4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004218bf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004077ac : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004078b5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000422b7f : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000427d1c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000407a31 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000410b4b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000431afa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004287b1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042f495 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f7ba : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420fa1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000430e2e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404049 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042718d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271ad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004271cd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041134c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004113bf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004323ce : mov eax, edi ; pop rbp ; ret
0x00000000004117cb : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422bb4 : mov eax, edx ; pop rbp ; ret
0x00000000004115e3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432530 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000432443 : mov eax, esi ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000411392 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000411552 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004217db : mov ebx, 0xb95f383e ; xchg dh, dh ; ret 0x3dc8
0x0000000000429d1d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004078b8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000429c85 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042a34e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042d4c6 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000043246d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000043243d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x637e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6382d0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6382d0 ; jmp rdx
0x000000000042546c : mov edi, dword ptr [rbp - 0x18] ; mov rsi, qword ptr [rbp - 0x20] ; call 0x411689
0x0000000000419a73 : mov edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x415d39
0x000000000042cfac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427189 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004271c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000429d21 : mov edi, dword ptr [rcx] ; call rax
0x000000000041bb06 : mov edi, eax ; call 0x42d4e8
0x00000000004337c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004337c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000425470 : mov esi, dword ptr [rbp - 0x20] ; call 0x411685
0x0000000000419a77 : mov esi, dword ptr [rbp - 0x40] ; call 0x415d35
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6382d0 ; jmp rdx
0x00000000004218bc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000427d19 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004222c3 : mov esp, 0x61cfa42d ; ret
0x0000000000422305 : mov esp, 0x61cfa52d ; ret
0x0000000000402050 : mov esp, 0xb9fffff6 ; mov gs, word ptr [rcx - 0x41] ; ret
0x0000000000401fb9 : mov gs, word ptr [rcx - 0x41] ; ret
0x0000000000406a0c : mov qword ptr [0x638390], rdi ; pop rbp ; ret
0x0000000000404044 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411554 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000407cac : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ff9e : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042cfaf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004020df : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004222c2 : mov r12d, 0x61cfa42d ; ret
0x0000000000422304 : mov r12d, 0x61cfa52d ; ret
0x0000000000405f1f : mov r8b, -0x17 ; ret 1
0x000000000041ae15 : mov r8b, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041ae57 : mov r8b, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000041364a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004071b2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041332e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040704b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041374d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041301f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d1df : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004274ce : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000413709 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004076a3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004218be : mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004077ab : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000427d1b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000410b4a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004287b0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404048 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042718c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271ac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004271cc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000411380 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004323cd : mov rax, rdi ; pop rbp ; ret
0x0000000000429280 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422bb3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x0000000000411391 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000411551 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000429d1c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000429c84 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042a34d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042d4c5 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042cfab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427188 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004271a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004271c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000429d20 : mov rdi, qword ptr [rcx] ; call rax
0x000000000041bb05 : mov rdi, rax ; call 0x42d4e9
0x000000000042546f : mov rsi, qword ptr [rbp - 0x20] ; call 0x411686
0x0000000000419a76 : mov rsi, qword ptr [rbp - 0x40] ; call 0x415d36
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6382d0 ; jmp rdx
0x00000000004218bb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000427d18 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041093a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041093b : mov word ptr [rax + 0x3a], fs ; ret
0x0000000000405441 : mov word ptr [rcx + 0x43], es ; add al, ch ; salc ; ret
0x000000000040e08c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004333fe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004122ac : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x412826
0x000000000043295d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000437204 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000435315 : movsxd rdi, edi ; call qword ptr [rax]
0x000000000041b056 : movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000427892 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000416f5a : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004042e8 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413c10 : movzx eax, al ; pop rbp ; ret
0x0000000000432532 : movzx eax, ax ; pop rbp ; ret
0x000000000042d3ac : movzx eax, bh ; pop rbp ; ret
0x0000000000426de6 : movzx eax, cl ; pop rbp ; ret
0x00000000004117fb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d3ab : movzx eax, dil ; pop rbp ; ret
0x0000000000429692 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000429693 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000406a10 : nop ; and dword ptr [rbx], 0x5d ; ret
0x00000000004337e8 : nop dword ptr [rax + rax] ; ret
0x0000000000434f11 : or al, 0 ; add byte ptr [rax - 0x41], dl ; std ; call qword ptr [rax]
0x0000000000436225 : or al, 0 ; add byte ptr [rax], bh ; idiv ch ; call qword ptr [rcx]
0x000000000040fca7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403199 : or al, 0 ; add cl, ch ; ret 1
0x00000000004362e9 : or al, 0xfffffffffffffffe ; call qword ptr [rdi]
0x0000000000434e91 : or al, byte ptr [rax] ; add byte ptr [rax - 0x51], dl ; std ; call qword ptr [rax]
0x0000000000404ccf : or al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042af8b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051535
0x0000000000420c43 : or bh, dh ; inc edi ; in al, 0x56 ; ret
0x0000000000403a9f : or bl, byte ptr [rdi - 0x7f] ; push -0x47 ; ret 0x5de3
0x0000000000434e11 : or byte ptr [rax], al ; add byte ptr [rax + 0x13], al ; std ; call qword ptr [rax]
0x0000000000434e01 : or byte ptr [rax], al ; add byte ptr [rax - 0xb], dl ; cld ; call rax
0x00000000004190d1 : or byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x0000000000435104 : or byte ptr [rdi], 0xfe ; call rax
0x0000000000415309 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000434e41 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; and al, 0xfffffffffffffffd ; call rax
0x0000000000434e51 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; sub ebp, edi ; call qword ptr [rax]
0x0000000000411957 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000419fe4 : or eax, 0x9db80000 ; ret
0x0000000000434f41 : or eax, 0xc1000000 ; std ; call rax
0x0000000000434f51 : or eax, 0xc1600000 ; std ; call qword ptr [rax]
0x0000000000423b2e : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000436065 : or eax, dword ptr [rax] ; add al, cl ; iretd ; std ; call rdx
0x0000000000434ec1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x44], al ; std ; call rax
0x0000000000410d31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004367e9 : or edi, edi ; call qword ptr [rdx]
0x00000000004323cb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000432441 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042af8a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051536
0x00000000004323ca : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042d3a9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000043285f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004326af : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432440 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000427939 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042b463 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004337dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042470b : pop r13 ; int 0x39
0x00000000004337de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ffd2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004337e0 : pop r14 ; pop r15 ; ret
0x000000000040ffd4 : pop r15 ; pop rbp ; ret
0x00000000004337e2 : pop r15 ; ret
0x0000000000432ed8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000435968 : pop rax ; mov al, -3 ; jmp qword ptr [rdx]
0x0000000000435ca8 : pop rax ; mov bh, -3 ; jmp qword ptr [rdi]
0x000000000042470c : pop rbp ; int 0x39
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x23672e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6382d0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6382d0 ; jmp rdx
0x00000000004337db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004337df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x000000000040ffd1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fcaa : pop rbx ; pop rbp ; ret
0x0000000000433184 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000423b7c : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ffd5 : pop rdi ; pop rbp ; ret
0x0000000000432005 : pop rdi ; pop rdx ; ret
0x00000000004337e3 : pop rdi ; ret
0x00000000004335cb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000432006 : pop rdx ; ret
0x00000000004254a2 : pop rdx ; ret 0xfffd
0x000000000040ffd3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004337e1 : pop rsi ; pop r15 ; ret
0x00000000004337dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409ee2 : pop rsp ; ret
0x0000000000427950 : pop rsp ; ret 0xf66
0x0000000000419650 : popfq ; ret
0x0000000000432f99 : popfq ; ret 0xd284
0x0000000000403aa2 : push -0x47 ; ret 0x5de3
0x000000000043523f : push qword ptr [rax + 0x10000019] ; sbb al, -1 ; call rax
0x000000000043547f : push qword ptr [rax + 0x10000022] ; fcos ; call rax
0x0000000000434fff : push qword ptr [rax + 0x10] ; leave ; std ; call rax
0x0000000000434e3f : push qword ptr [rax + 0x20000009] ; and al, 0xfffffffffffffffd ; call rax
0x00000000004354bf : push qword ptr [rax + 0x20000023] ; loopne 0x4354ce ; call rax
0x000000000043537f : push qword ptr [rax + 0x4000001e] ; mov dr1, edi ; call rax
0x0000000000434dff : push qword ptr [rax + 0x50000008] ; cmc ; cld ; call rax
0x000000000043507f : push qword ptr [rax + 0x60000012] ; jrcxz 0x43508c ; call rax
0x000000000043513f : push qword ptr [rax - 0x2fffffeb] ; xor esi, edi ; call rax
0x00000000004351bf : push qword ptr [rax - 0x5fffffe9] ; fdiv st(6), st(0) ; call rax
0x0000000000434e7f : push qword ptr [rax - 0x5ffffff6] ; xor ch, bh ; call rax
0x00000000004353bf : push qword ptr [rax - 0xfffffe1] ; test al, -1 ; call rax
0x000000000043527f : push qword ptr [rax - 0xfffffe6] ; sub bh, bh ; call rax
0x000000000040f6cf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000043500f : push rax ; adc byte ptr [rax], al ; add byte ptr [rax - 0x37], ah ; std ; call qword ptr [rax]
0x00000000004350cf : push rax ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x14], al ; std ; call qword ptr [rax]
0x00000000004354cf : push rax ; and eax, dword ptr [rax] ; add al, al ; in al, -1 ; call qword ptr [rax]
0x0000000000434e04 : push rax ; cmc ; cld ; call rax
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000434f0f : push rax ; or al, 0 ; add byte ptr [rax - 0x41], dl ; std ; call qword ptr [rax]
0x0000000000434e8f : push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x51], dl ; std ; call qword ptr [rax]
0x0000000000434e0f : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x13], al ; std ; call qword ptr [rax]
0x0000000000434e4f : push rax ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; sub ebp, edi ; call qword ptr [rax]
0x0000000000434f4f : push rax ; or eax, 0xc1600000 ; std ; call qword ptr [rax]
0x00000000004020e4 : push rax ; pop rbp ; ret
0x000000000043530f : push rax ; sbb al, 0 ; add al, dl ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000434e94 : push rax ; scasd eax, dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000434fcf : push rax ; sldt word ptr [rax] ; loopne 0x434fa5 ; std ; call qword ptr [rax]
0x0000000000412c0b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000413513 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415a92 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x0000000000415a96 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x000000000041fd6d : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x60
0x0000000000429893 : push rbp ; fsubr st(1) ; ret 0
0x000000000040d808 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040d9ee : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040da94 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040dac2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040db90 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040dd26 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000414ffd : push rbp ; inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000423082 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x000000000043213d : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401c24 : push rbp ; mov edi, 0x637e20 ; mov rbp, rsp ; call rax
0x0000000000411390 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000411550 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041b9d4 : push rbp ; ret
0x000000000041c92e : push rbp ; ret 0x893c
0x000000000042b01e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041ae19 : push rbx ; ret 0x4589
0x000000000041ae5b : push rbx ; ret 0x8589
0x000000000041b05c : push rbx ; ret 0x8948
0x00000000004266eb : push rcx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420bce : push rsi ; ret
0x00000000004187aa : pushfq ; ret
0x000000000042ebc3 : pushfq ; ret 0x8445
0x000000000041ba9a : pushfq ; ret 0xd284
0x000000000043243e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000043246e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041864c : rcr eax, cl ; ret
0x00000000004002dd : ret
0x0000000000410189 : ret 0
0x000000000042837f : ret 0x10
0x00000000004152ad : ret 0x108
0x0000000000415a9a : ret 0x110
0x0000000000418225 : ret 0x18
0x000000000043308b : ret 0x2030
0x000000000041f679 : ret 0x21b9
0x00000000004019d2 : ret 0x2367
0x00000000004017d2 : ret 0x2368
0x000000000042793a : ret 0x280f
0x00000000004164f2 : ret 0x294c
0x000000000040d1e7 : ret 0x2a
0x0000000000410506 : ret 0x2c1
0x000000000040ee60 : ret 0x3ae8
0x000000000040681b : ret 0x3d5c
0x00000000004217e2 : ret 0x3dc8
0x0000000000425972 : ret 0x3ecb
0x0000000000420399 : ret 0x4172
0x000000000040a14a : ret 0x43fa
0x000000000041ae1b : ret 0x4589
0x000000000040611f : ret 0x458b
0x00000000004067e5 : ret 0x485c
0x000000000042167d : ret 0x487e
0x0000000000415fff : ret 0x4cb1
0x0000000000428764 : ret 0x50e9
0x0000000000416fd6 : ret 0x5589
0x000000000041fe12 : ret 0x56ad
0x0000000000404bfa : ret 0x5955
0x0000000000402b4c : ret 0x5de3
0x0000000000431ca3 : ret 0x5e5
0x000000000041fd71 : ret 0x60
0x0000000000405f73 : ret 0x67e8
0x0000000000415cae : ret 0x709b
0x000000000041f5fd : ret 0x8148
0x000000000042b994 : ret 0x8348
0x000000000041f636 : ret 0x83e9
0x0000000000426d28 : ret 0x8423
0x00000000004033a7 : ret 0x8445
0x0000000000406314 : ret 0x8589
0x0000000000409fe0 : ret 0x891a
0x0000000000426a5e : ret 0x8923
0x0000000000432a3c : ret 0x8934
0x000000000041c92f : ret 0x893c
0x0000000000413517 : ret 0x8948
0x0000000000406184 : ret 0x895c
0x000000000042014c : ret 0x8972
0x0000000000420fd8 : ret 0x897e
0x000000000042ac8c : ret 0x897f
0x0000000000418360 : ret 0x8999
0x000000000042d811 : ret 0x89b6
0x0000000000421167 : ret 0x89c8
0x0000000000402b99 : ret 0x89f9
0x0000000000432a18 : ret 0x8b34
0x000000000040ee45 : ret 0x8b48
0x0000000000425ac2 : ret 0x91ca
0x00000000004254ea : ret 0x9f
0x00000000004282ea : ret 0xa3b9
0x0000000000419ccd : ret 0xa43c
0x000000000043127b : ret 0xa4be
0x000000000042afc9 : ret 0xa6e9
0x000000000040deb5 : ret 0xa9b9
0x0000000000409932 : ret 0xade6
0x000000000040569c : ret 0xb0
0x000000000040d620 : ret 0xb91a
0x00000000004298c6 : ret 0xb948
0x000000000042dacb : ret 0xb9b6
0x0000000000401bc5 : ret 0xc148
0x000000000041e2d4 : ret 0xc609
0x0000000000403a90 : ret 0xd284
0x000000000040f6d3 : ret 0xd4e9
0x0000000000405fbd : ret 0xdde8
0x000000000042af92 : ret 0xdde9
0x0000000000414ff8 : ret 0xe280
0x0000000000402412 : ret 0xe549
0x0000000000426d92 : ret 0xe923
0x000000000040688d : ret 0xe95c
0x000000000042b027 : ret 0xe97f
0x000000000041a19f : ret 0xe999
0x00000000004033c2 : ret 0xe9f9
0x000000000040fcec : ret 0xee8
0x00000000004286c5 : ret 0xefe9
0x000000000041f1bc : ret 0xf280
0x000000000040e095 : ret 0xf41
0x0000000000427951 : ret 0xf66
0x0000000000424abe : ret 0xfa78
0x000000000043230a : ret 0xfcf6
0x000000000042802a : ret 0xfd96
0x0000000000417a1a : ret 0xfe9c
0x000000000041255a : ret 0xfef2
0x0000000000429576 : ret 0xff3
0x000000000040d80b : ret 0xff9f
0x000000000040f1ae : ret 0xffa5
0x000000000040d9f1 : ret 0xffbf
0x000000000040e45b : ret 0xffc4
0x000000000040da97 : ret 0xffc5
0x000000000040dac5 : ret 0xffd5
0x000000000040db93 : ret 0xffd8
0x000000000040e501 : ret 0xffd9
0x000000000040dd29 : ret 0xffe0
0x000000000040cdfe : ret 0xfffa
0x000000000042542e : ret 0xfffd
0x0000000000425475 : ret 0xfffe
0x00000000004055db : ret 0xffff
0x000000000040319d : ret 1
0x000000000040e360 : ret 2
0x0000000000430309 : ret 3
0x00000000004059fa : ret 4
0x00000000004059c8 : ret 5
0x00000000004046c0 : ret 6
0x000000000042b431 : ret 7
0x000000000040fed0 : ret 8
0x000000000041d8a5 : ret 9
0x000000000041acf8 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000427c02 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405df0 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411317 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042794b : rol byte ptr [rax], cl ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042eec5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041fbff : rol dh, 1 ; ret
0x0000000000426de2 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041fbfe : rol r14b, 1 ; ret
0x00000000004078b6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x00000000004042ea : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404353 ; ret
0x0000000000415a65 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x415ace ; ret
0x000000000042b16b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042056b : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x42057a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422a33 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x422a42 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004057e0 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004078b7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000413510 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000415212 : sahf ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000042f769 : sahf ; ret 0xd284
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x000000000041baaf : sal byte ptr [rbp - 0x47], 1 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000405446 : salc ; ret
0x000000000043518c : sar byte ptr [rdi + 0x16f0fffe], 0 ; add byte ptr [rax], al ; ret 0xfffe
0x000000000041bcd3 : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000434dd5 : sar esp, 1 ; call qword ptr [rax]
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000435245 : sbb al, -1 ; call rax
0x0000000000437205 : sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000435311 : sbb al, 0 ; add al, dl ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000437200 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add al, bl ; ret 0xffff
0x000000000042d613 : sbb al, 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000042d4ee : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000436f85 : sbb al, byte ptr [rax] ; add al, cl ; mov ah, -1 ; jmp qword ptr [rdi]
0x0000000000435281 : sbb al, byte ptr [rax] ; add al, dh ; sub bh, bh ; call rax
0x00000000004356e8 : sbb byte ptr [rbx], dl ; std ; call qword ptr [rsi]
0x0000000000410969 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004170aa : sbb cl, bl ; xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x00000000004130f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000435241 : sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; sbb al, -1 ; call rax
0x000000000040deae : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x00000000004170ad : sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x0000000000434e95 : scasd eax, dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000422bea : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004354d4 : shl ah, -1 ; call qword ptr [rax]
0x0000000000435314 : shl byte ptr [rbx - 1], 1 ; call qword ptr [rax]
0x0000000000422bec : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042796f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000043246f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000432408 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000419a79 : shr al, -0x4f ; ret 0xffff
0x0000000000419b21 : shr al, 9 ; ret 0xffff
0x000000000043243f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004323c8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000434fd1 : sldt word ptr [rax] ; loopne 0x434fa3 ; std ; call qword ptr [rax]
0x000000000041f349 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000434e16 : std ; call qword ptr [rax]
0x000000000043622a : std ; call qword ptr [rcx]
0x00000000004356ea : std ; call qword ptr [rsi]
0x0000000000434e46 : std ; call rax
0x000000000043606a : std ; call rdx
0x0000000000435a8a : std ; jmp qword ptr [rax]
0x0000000000435c6a : std ; jmp qword ptr [rdi]
0x000000000043596a : std ; jmp qword ptr [rdx]
0x0000000000435f8a : std ; jmp rdx
0x0000000000434ffe : std ; push qword ptr [rax + 0x10] ; leave ; std ; call rax
0x0000000000434e3e : std ; push qword ptr [rax + 0x20000009] ; and al, 0xfffffffffffffffd ; call rax
0x000000000043507e : std ; push qword ptr [rax + 0x60000012] ; jrcxz 0x43508d ; call rax
0x0000000000434e7e : std ; push qword ptr [rax - 0x5ffffff6] ; xor ch, bh ; call rax
0x000000000043500e : std ; push rax ; adc byte ptr [rax], al ; add byte ptr [rax - 0x37], ah ; std ; call qword ptr [rax]
0x00000000004350ce : std ; push rax ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x14], al ; std ; call qword ptr [rax]
0x0000000000434f0e : std ; push rax ; or al, 0 ; add byte ptr [rax - 0x41], dl ; std ; call qword ptr [rax]
0x0000000000434e8e : std ; push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x51], dl ; std ; call qword ptr [rax]
0x0000000000434e0e : std ; push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x13], al ; std ; call qword ptr [rax]
0x0000000000434e4e : std ; push rax ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; sub ebp, edi ; call qword ptr [rax]
0x0000000000434f4e : std ; push rax ; or eax, 0xc1600000 ; std ; call qword ptr [rax]
0x0000000000434fce : std ; push rax ; sldt word ptr [rax] ; loopne 0x434fa6 ; std ; call qword ptr [rax]
0x0000000000420c42 : stosb byte ptr [rdi], al ; or bh, dh ; inc edi ; in al, 0x56 ; ret
0x000000000040aef7 : sub al, 0x38 ; ret 0x8589
0x000000000040deb3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000420d5c : sub al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000435285 : sub bh, bh ; call rax
0x00000000004368c8 : sub byte ptr [rdi + rdi*8], dl ; jmp rsi
0x0000000000435514 : sub dl, -1 ; jmp qword ptr [rax]
0x0000000000434e55 : sub ebp, edi ; call qword ptr [rax]
0x0000000000433869 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000433868 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000432308 : test al, -0x18 ; ret 0xfcf6
0x0000000000412c2b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004353c5 : test al, -1 ; call rax
0x00000000004152dc : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ed08 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415d1b : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042ab94 : test al, 0x2d ; call 0xffffffff8a05113a
0x000000000042ab93 : test al, 0x2d ; call 0xffffffff8a05113b
0x000000000042abd9 : test al, 0x2d ; jmp 0xffffffff8a05117f
0x000000000042abd8 : test al, 0x2d ; jmp 0xffffffff8a051180
0x000000000042ae7c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042ac88 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000410b4d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041c92d : test al, 0x55 ; ret 0x893c
0x000000000042849b : test al, 0x70 ; ret 0x4589
0x0000000000428762 : test al, 0x70 ; ret 0x50e9
0x00000000004286c3 : test al, 0x70 ; ret 0xefe9
0x0000000000412b08 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000435355 : test bh, bh ; call qword ptr [rax]
0x00000000004063e4 : test bl, ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004176ee : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000416678 : test byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004337ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404ccd : test byte ptr [rbp - 0x16fffff6], dl ; ret 1
0x00000000004368e4 : test byte ptr [rbx], dl ; add byte ptr [rax], al ; clc ; adc al, -1 ; call rax
0x0000000000403197 : test byte ptr [rcx], ah ; or al, 0 ; add cl, ch ; ret 1
0x00000000004356e4 : test byte ptr [rcx], al ; add byte ptr [rax], al ; sbb byte ptr [rbx], dl ; std ; call qword ptr [rsi]
0x000000000042ff96 : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000411955 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004367e4 : test byte ptr [rdx], dl ; add byte ptr [rax], al ; cwde ; or edi, edi ; call qword ptr [rdx]
0x0000000000436be4 : test byte ptr [rsi], dl ; add byte ptr [rax], al ; fsub dword ptr [rdi - 1] ; call qword ptr [rbx]
0x0000000000435354 : test dil, dil ; call qword ptr [rax]
0x0000000000414f0f : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000041540d : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000415000 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000415217 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000041530d : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000412c10 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000412978 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000421165 : test esi, esi ; ret 0x89c8
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x00000000004217e0 : xchg dh, dh ; ret 0x3dc8
0x00000000004211b0 : xchg dh, dh ; ret 0x89c8
0x0000000000404cce : xchg eax, ebp ; or al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000407ee1 : xchg eax, ebp ; ret
0x00000000004033a6 : xchg eax, ebp ; ret 0x8445
0x0000000000403cdc : xchg eax, ebp ; ret 0xd284
0x0000000000414ff7 : xchg eax, ebp ; ret 0xe280
0x0000000000430fab : xchg eax, ebx ; ret
0x000000000042baa9 : xchg eax, ebx ; ret 0xd284
0x000000000040aedb : xchg eax, ecx ; ret
0x000000000041547e : xchg eax, edi ; ret 0xd284
0x000000000040b02b : xchg eax, edx ; ret
0x0000000000412b0e : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000410862 : xchg eax, esi ; ret
0x0000000000407ec3 : xchg eax, esp ; ret
0x000000000040ee86 : xchg eax, esp ; ret 0x8445
0x0000000000403a8f : xchg eax, esp ; ret 0xd284
0x000000000041f27c : xchg eax, esp ; ret 0xe280
0x000000000041f1bb : xchg eax, esp ; ret 0xf280
0x0000000000426de1 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004170ac : xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x0000000000422beb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004323cc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000042ae7e : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042b025 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041bab2 : xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x0000000000424852 : xor byte ptr [rax + 0x3d], bl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bab3 : xor byte ptr [rbx], dh ; in eax, -0x76 ; push rbp ; ret
0x0000000000434e85 : xor ch, bh ; call rax
0x000000000042ac8a : xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000410e67 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407a2d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000435145 : xor esi, edi ; call rax
