0x000000000040f5eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cfc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414ceb : add ah, ah ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov bh, bh ; jmp qword ptr [rdx]
0x0000000000414e0f : add al, ah ; mov edi, edi ; jmp qword ptr [rax]
0x000000000040eee3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000414f2f : add al, dh ; mov edi, dr1 ; jmp qword ptr [rdx]
0x000000000040f2de : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f046 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041367f : add bl, dh ; ret
0x000000000040e64e : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4137
0x000000000040f2dc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f044 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041367d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041367b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000413ca4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x103baa1
0x000000000041367c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041398c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x000000000040171d : add byte ptr [rax], al ; add byte ptr [rbx + 0x262df045], cl ; ret
0x000000000040cd0e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412d69 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000412ce5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041217e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000402828 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000040bbc1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000412e25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000411ec8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000412668 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404c1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402b88 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411cfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f1da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404bff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040b67b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004037fe : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041262d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040cfcb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ca30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403635 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f5ed : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf87 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040123b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413ca6 : add byte ptr [rax], al ; call 0x103ba9f
0x0000000000401439 : add byte ptr [rax], al ; jmp 0x401259
0x00000000004037fa : add byte ptr [rax], al ; jmp 0x403809
0x0000000000412629 : add byte ptr [rax], al ; jmp 0x412638
0x0000000000413299 : add byte ptr [rax], al ; jmp 0x4132a8
0x00000000004134a7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004033a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004044e9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401fb4 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cd0f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c9e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000414a4e : add byte ptr [rax], al ; push rax ; out -2, al ; call qword ptr [rsi]
0x000000000041367e : add byte ptr [rax], al ; ret
0x000000000041398e : add byte ptr [rax], al ; ret 0x9796
0x00000000004145e3 : add byte ptr [rax], al ; sar dh, 1 ; jmp qword ptr [rax]
0x0000000000414aae : add byte ptr [rax], al ; shr dl, -2 ; call rdx
0x0000000000414cef : add byte ptr [rax], dl ; mov bh, bh ; jmp qword ptr [rdx]
0x000000000040171f : add byte ptr [rbx + 0x262df045], cl ; ret
0x000000000040cd10 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c9e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412d6b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000412ce7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x0000000000413987 : add byte ptr [rbx], bl ; mov al, -0x2c ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000412180 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040282a : add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000040bbc3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040f32e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401688 : add byte ptr [rcx], al ; ret
0x0000000000412e27 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000411eca : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041266a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404c1f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402b8a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411cff : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040f1dc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404c01 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040b67d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403800 : add cl, ch ; ret
0x000000000041262f : add cl, ch ; ret 0
0x000000000040cf85 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6aa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402d4c : add dword ptr [rax], eax ; pop rbp ; ret
0x0000000000412541 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401684 : add eax, 0x214c16 ; add ebx, esi ; ret
0x00000000004145e1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; sar dh, 1 ; jmp qword ptr [rax]
0x0000000000414ced : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov bh, bh ; jmp qword ptr [rdx]
0x000000000040164b : add eax, edx ; sar rax, 1 ; jne 0x40165c ; pop rbp ; ret
0x0000000000401689 : add ebx, esi ; ret
0x00000000004018ab : add esp, 0x10 ; pop rbp ; ret
0x000000000040f32c : add esp, 0x100 ; pop rbp ; ret
0x0000000000402d48 : add esp, 0x101a0 ; pop rbp ; ret
0x000000000040d6a7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040f49c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040355d : add esp, 0x20 ; pop rbp ; ret
0x0000000000403efe : add esp, 0x230 ; pop rbp ; ret
0x0000000000412483 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000403638 : add esp, 0x30 ; pop rbp ; ret
0x0000000000401857 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401a52 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403096 : add esp, 0x60 ; pop rbp ; ret
0x000000000040d88f : add esp, 0x70 ; pop rbp ; ret
0x000000000040defc : add esp, 0x80 ; pop rbp ; ret
0x00000000004111a2 : add esp, 0x90 ; pop rbp ; ret
0x00000000004042ae : add esp, 0xa0 ; pop rbp ; ret
0x000000000040c9e4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000401fb0 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040123e : add esp, 8 ; ret
0x000000000040164a : add rax, rdx ; sar rax, 1 ; jne 0x40165d ; pop rbp ; ret
0x00000000004018aa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040f32b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000402d47 : add rsp, 0x101a0 ; pop rbp ; ret
0x000000000040d6a6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000040f49b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040355c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403efd : add rsp, 0x230 ; pop rbp ; ret
0x0000000000412482 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000403637 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401856 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a51 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403095 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040d88e : add rsp, 0x70 ; pop rbp ; ret
0x000000000040defb : add rsp, 0x80 ; pop rbp ; ret
0x00000000004111a1 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004042ad : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040c9e3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000401faf : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040123d : add rsp, 8 ; ret
0x0000000000412540 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401687 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000402d6f : and eax, 0x6162a8 ; pop rbp ; ret
0x0000000000402d93 : and eax, 0x6162b0 ; pop rbp ; ret
0x0000000000401686 : and qword ptr [rax], r8 ; add ebx, esi ; ret
0x0000000000413ca8 : call 0x103ba9d
0x0000000000412144 : call 0x4014d9
0x000000000040ca29 : call 0xffffffffe9035379
0x000000000040ca28 : call 0xffffffffe903537a
0x000000000040846d : call 0xfffffffff7390a04
0x0000000000411f45 : call 0xffffffffff45a51a
0x000000000040af99 : call 0xffffffffff55356b
0x000000000040af98 : call 0xffffffffff55356c
0x000000000040af99 : call 0xffffffffff55356d
0x000000000040af98 : call 0xffffffffff55356e
0x0000000000413659 : call qword ptr [r12 + rbx*8]
0x000000000040a326 : call qword ptr [rax]
0x000000000040bfb5 : call qword ptr [rcx]
0x0000000000402003 : call qword ptr [rdi]
0x0000000000409f53 : call qword ptr [rdx]
0x0000000000409eef : call qword ptr [rsi]
0x000000000041365a : call qword ptr [rsp + rbx*8]
0x00000000004016ad : call rax
0x000000000040870a : call rbx
0x0000000000414ab3 : call rdx
0x000000000040f2e4 : call rsi
0x0000000000412cec : cdq ; ret
0x0000000000410d92 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004101e0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401fae : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040164f : clc ; jne 0x401658 ; pop rbp ; ret
0x000000000040abed : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041154d : cmp al, -0x2a ; ret
0x000000000040160d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401620 ; pop rbp ; ret
0x000000000040cec4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x00000000004127eb : cwde ; js 0x412795 ; ret
0x0000000000412832 : cwde ; js 0x4127dc ; ret
0x000000000041286c : cwde ; js 0x412816 ; ret
0x0000000000412148 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000040e6a7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ad92 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040b09d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000040c5a4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040e023 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040a0d8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000411cfb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040414d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000410804 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ded9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fbe4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000041365c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004018a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041033c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401620 : hlt ; pop rbp ; mov edi, 0x616248 ; jmp rax
0x000000000040e97e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000040a549 : in al, -0x7f ; ret 0xff9f
0x000000000040a72f : in al, -0x7f ; ret 0xffbf
0x000000000040a7d5 : in al, -0x7f ; ret 0xffc5
0x000000000040a803 : in al, -0x7f ; ret 0xffd5
0x000000000040a8d1 : in al, -0x7f ; ret 0xffd8
0x000000000040aa67 : in al, -0x7f ; ret 0xffe0
0x000000000041069a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004045fa : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000412eeb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bbbf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000402b86 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c76a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403dd0 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040d678 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000406d1f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000040a35f : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000401613 : ja 0x40161a ; pop rbp ; ret
0x000000000040161f : je 0x40161d ; pop rbp ; mov edi, 0x616248 ; jmp rax
0x0000000000413ed0 : je 0x413f07 ; mov al, -0x7f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e498 : jge 0x40e4af ; ret
0x000000000040e983 : jge 0x40e99a ; ret
0x0000000000413459 : jge 0x413453 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040e36c : jl 0x40e383 ; ret
0x000000000040143b : jmp 0x401257
0x00000000004037fc : jmp 0x403807
0x0000000000409d0d : jmp 0x40c9f3
0x000000000040c7a1 : jmp 0x40c9f5
0x000000000040e97d : jmp 0x40eef5
0x000000000040e64a : jmp 0x40eef6
0x000000000041262b : jmp 0x412636
0x000000000041329b : jmp 0x4132a6
0x0000000000410dce : jmp 0xffffffffb703119a
0x00000000004127ea : jmp 0xffffffffc3e5a08b
0x0000000000409e2d : jmp qword ptr [rax]
0x000000000040af9f : jmp qword ptr [rbx]
0x000000000040c970 : jmp qword ptr [rcx]
0x000000000040cec5 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000408476 : jmp qword ptr [rdx]
0x000000000040af2f : jmp qword ptr [rsi]
0x0000000000401627 : jmp rax
0x000000000040bac2 : jmp rbx
0x000000000040c15e : jmp rdi
0x0000000000401667 : jmp rdx
0x000000000040bb59 : jmp rsp
0x0000000000401650 : jne 0x401657 ; pop rbp ; ret
0x000000000040d676 : jne 0x40d67f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040d891 : jo 0x40d8f2 ; ret
0x000000000040d9b4 : jo 0x40da15 ; ret
0x000000000040daee : jo 0x40db4f ; ret
0x000000000040fc8c : jo 0x40fced ; ret
0x00000000004101e4 : jo 0x410245 ; ret
0x00000000004149f1 : jrcxz 0x4149f3 ; call qword ptr [rsi]
0x000000000040c9e6 : js 0x40c9fa ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004127ec : js 0x412794 ; ret
0x0000000000412833 : js 0x4127db ; ret
0x000000000041286d : js 0x412815 ; ret
0x000000000040baf3 : lea ebp, dword ptr [rax - 0x1700000d] ; ret
0x000000000040355b : loopne 0x4035ab ; add esp, 0x20 ; pop rbp ; ret
0x000000000040355a : loopne 0x4035ac ; add esp, 0x20 ; pop rbp ; ret
0x00000000004039c2 : loopne 0x403a12 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004039c1 : loopne 0x403a13 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004049be : loopne 0x4049c7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f9d0 : loopne 0x40f9d9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040fddc : loopne 0x40fe2c ; add esp, 0x40 ; pop rbp ; ret
0x000000000040fddb : loopne 0x40fe2d ; add esp, 0x40 ; pop rbp ; ret
0x00000000004023d0 : mov ah, -0xa ; ret 0x8968
0x0000000000401a50 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000413989 : mov al, -0x2c ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000413ed2 : mov al, -0x7f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411f1a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404b7b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041253d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004126ed : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412ee9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414cf1 : mov bh, bh ; jmp qword ptr [rdx]
0x0000000000402d91 : mov byte ptr [0x6162b0], al ; pop rbp ; ret
0x0000000000413ca3 : mov byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x103baa2
0x000000000040c538 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401683 : mov byte ptr [rip + 0x214c16], 1 ; ret
0x0000000000402638 : mov ch, -0xa ; ret 0x8968
0x00000000004029d3 : mov ch, -0xa ; ret 0xba68
0x0000000000412543 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413015 : mov dl, -0x47 ; ret
0x0000000000402d6d : mov dword ptr [0x6162a8], edi ; pop rbp ; ret
0x0000000000404837 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004045fb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040476f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000403559 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a4e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004018a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004049ed : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004044ef : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040fd1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403513 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f9ff : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004033ac : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040fe1e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f6f0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040483a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004039c0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fdda : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004043e4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004044ec : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004045f5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404771 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040d88b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041033a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410d90 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004101de : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016ab : mov ebp, esp ; call rax
0x0000000000401611 : mov ebp, esp ; ja 0x40161c ; pop rbp ; ret
0x00000000004045f8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016a5 : mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000401622 : mov edi, 0x616248 ; jmp rax
0x0000000000401662 : mov edi, 0x616248 ; jmp rdx
0x0000000000414f31 : mov edi, dr1 ; jmp qword ptr [rdx]
0x0000000000413657 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000414e11 : mov edi, edi ; jmp qword ptr [rax]
0x0000000000413656 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401660 : mov esi, eax ; mov edi, 0x616248 ; jmp rdx
0x0000000000402d6c : mov qword ptr [0x6162a8], rdi ; pop rbp ; ret
0x00000000004049ec : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a4f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040fd1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403512 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f9fe : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004033ab : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040fe1d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f6ef : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004039bf : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fdd9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004043e3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004044eb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d88a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016aa : mov rbp, rsp ; call rax
0x0000000000401610 : mov rbp, rsp ; ja 0x40161d ; pop rbp ; ret
0x000000000040165f : mov rsi, rax ; mov edi, 0x616248 ; jmp rdx
0x000000000040d67a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000040d67b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040adcc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000041328e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000040e97c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x40eef6
0x00000000004127ed : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000412542 : movzx eax, al ; pop rbp ; ret
0x0000000000413678 : nop dword ptr [rax + rax] ; ret
0x000000000040c9e7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e64c : or byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4137
0x000000000040e027 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040da71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414a51 : out -2, al ; call qword ptr [rsi]
0x00000000004126ef : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041253f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041366c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041366e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040cd12 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413670 : pop r14 ; pop r15 ; ret
0x000000000040cd14 : pop r15 ; pop rbp ; ret
0x0000000000413672 : pop r15 ; ret
0x0000000000412d68 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401682 : pop rbp ; mov byte ptr [rip + 0x214c16], 1 ; ret
0x0000000000401621 : pop rbp ; mov edi, 0x616248 ; jmp rax
0x000000000040165e : pop rbp ; mov rsi, rax ; mov edi, 0x616248 ; jmp rdx
0x000000000041366b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041366f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401615 : pop rbp ; ret
0x000000000041398b : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x000000000040cd11 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c9ea : pop rbx ; pop rbp ; ret
0x0000000000413014 : pop rcx ; mov dl, -0x47 ; ret
0x000000000040cd15 : pop rdi ; pop rbp ; ret
0x0000000000413673 : pop rdi ; ret
0x000000000041345b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040cd13 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000413671 : pop rsi ; pop r15 ; ret
0x000000000041366d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406c22 : pop rsp ; ret
0x0000000000412e29 : popfq ; ret 0xd284
0x000000000040c40f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004145e0 : push rax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; sar dh, 1 ; jmp qword ptr [rax]
0x0000000000414a50 : push rax ; out -2, al ; call qword ptr [rsi]
0x0000000000401a54 : push rax ; pop rbp ; ret
0x000000000040f2db : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040fbe3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040a548 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000040a72e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000040a7d4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000040a802 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000040a8d0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000040aa66 : push rbp ; in al, -0x7f ; ret 0xffe0
0x00000000004016a4 : push rbp ; mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000412183 : pushfq ; ret 0x8445
0x0000000000411ecc : pushfq ; ret 0xd284
0x0000000000401241 : ret
0x000000000040cec9 : ret 0
0x0000000000411329 : ret 0x10
0x0000000000412f1b : ret 0x2030
0x0000000000401442 : ret 0x214c
0x0000000000409f27 : ret 0x2a
0x000000000040d246 : ret 0x2c1
0x0000000000403931 : ret 0x30
0x000000000040e653 : ret 0x4137
0x0000000000406e8a : ret 0x43fa
0x0000000000403dff : ret 0x558b
0x00000000004104e3 : ret 0x5e5
0x000000000040393f : ret 0x8148
0x000000000040282e : ret 0x8445
0x0000000000403b61 : ret 0x8589
0x0000000000406d20 : ret 0x891a
0x00000000004128cc : ret 0x8934
0x000000000040fbe7 : ret 0x8948
0x00000000004023d2 : ret 0x8968
0x0000000000410dd1 : ret 0x89b6
0x00000000004128a8 : ret 0x8b34
0x000000000040bb85 : ret 0x8b48
0x0000000000413990 : ret 0x9796
0x000000000040abf5 : ret 0xa9b9
0x0000000000406672 : ret 0xade6
0x000000000040bba0 : ret 0xae8
0x00000000004028a1 : ret 0xb0
0x000000000040a360 : ret 0xb91a
0x000000000041108b : ret 0xb9b6
0x00000000004029d5 : ret 0xba68
0x0000000000402a2b : ret 0xbd89
0x0000000000401645 : ret 0xc148
0x0000000000402b8d : ret 0xd284
0x000000000040c413 : ret 0xd4e9
0x000000000040ca2c : ret 0xee8
0x000000000040add5 : ret 0xf41
0x0000000000409f7a : ret 0xff73
0x000000000040a54b : ret 0xff9f
0x000000000040beee : ret 0xffa5
0x000000000040a731 : ret 0xffbf
0x000000000040b19b : ret 0xffc4
0x000000000040a7d7 : ret 0xffc5
0x000000000040a805 : ret 0xffd5
0x000000000040a8d3 : ret 0xffd8
0x000000000040b241 : ret 0xffd9
0x000000000040aa69 : ret 0xffe0
0x0000000000409b3e : ret 0xfffa
0x0000000000403942 : ret 0xffff
0x000000000040ad95 : ret 1
0x000000000040b0a0 : ret 2
0x000000000040c527 : ret 4
0x000000000040e058 : ret 5
0x000000000040cc10 : ret 8
0x0000000000411e74 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412485 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004045f6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040164c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40165b ; pop rbp ; ret
0x00000000004045f7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040fbe0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040e64b : sahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4137
0x000000000041266c : sahf ; ret 0xd284
0x000000000041154e : salc ; ret
0x00000000004145e5 : sar dh, 1 ; jmp qword ptr [rax]
0x000000000040164e : sar eax, 1 ; jne 0x401659 ; pop rbp ; ret
0x000000000040164d : sar rax, 1 ; jne 0x40165a ; pop rbp ; ret
0x000000000040d6a9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f7c3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040abee : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000413988 : sbb esi, dword ptr [rax + 0x5bd4] ; add byte ptr [rax], al ; ret 0x9796
0x0000000000414ab0 : shr dl, -2 ; call rdx
0x0000000000407c37 : sub al, 0x38 ; ret 0x8589
0x000000000040abf3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000413ed1 : sub eax, 0x81b0 ; add byte ptr [rax], al ; ret
0x00000000004136ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004136ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f2fb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004122c8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d88d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040f1d8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041367a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e025 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004023ca : test dword ptr [rax + 0x2dfffeff], ecx ; mov ah, -0xa ; ret 0x8968
0x0000000000402632 : test dword ptr [rax + 0x2dfffeff], ecx ; mov ch, -0xa ; ret 0x8968
0x000000000040f2e0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040f048 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000404c21 : xchg eax, ebp ; ret
0x0000000000403dd3 : xchg eax, ebp ; ret 0x8445
0x0000000000402b8c : xchg eax, ebp ; ret 0xd284
0x0000000000407c1b : xchg eax, ecx ; ret
0x000000000040282d : xchg eax, edi ; ret 0x8445
0x0000000000411d01 : xchg eax, edi ; ret 0xd284
0x0000000000407d6b : xchg eax, edx ; ret
0x000000000040f1de : xchg eax, edx ; ret 0xd284
0x000000000040d5a2 : xchg eax, esi ; ret
0x0000000000404c03 : xchg eax, esp ; ret
0x000000000040bbc6 : xchg eax, esp ; ret 0x8445
0x000000000040a0da : xchg eax, esp ; ret 0xd284
0x000000000041214b : xor al, 0x25 ; ret
0x000000000040e651 : xor al, 0x25 ; ret 0x4137
0x0000000000403f00 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dba7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401239 : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040476d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
