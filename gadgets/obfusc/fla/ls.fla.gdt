0x000000000045a7a7 : adc al, -0x7f ; ret 0x76c
0x000000000046ccd9 : adc al, -4 ; call qword ptr [rsi]
0x0000000000422333 : adc al, 0x25 ; js 0x42233f ; add byte ptr [eax - 0x7f], cl ; ret 1
0x000000000042fc59 : adc al, 0x7a ; ret 0x8589
0x000000000046cc15 : adc al, byte ptr [rax] ; add al, bl ; or bh, ah ; call qword ptr [rax]
0x000000000046cc35 : adc al, byte ptr [rax] ; add al, cl ; or al, 0xfffffffffffffffc ; call qword ptr [rsi]
0x000000000046c9d5 : adc byte ptr [rax], al ; add al, bh ; ret
0x000000000046c995 : adc byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0xfffb
0x000000000046c9b5 : adc byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000041d17b : adc byte ptr [rax], al ; add byte ptr [rbx + 0x1e2d9445], cl ; call rsp
0x000000000046c9b4 : adc byte ptr [rax], r8b ; add byte ptr [rax], bl ; ret
0x000000000046e620 : adc byte ptr [rbp - 1], bh ; call qword ptr [rax]
0x000000000046b990 : adc byte ptr [rbp - 7], ah ; call rax
0x00000000004236bc : adc byte ptr [rsi], bh ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046c9d4 : adc byte ptr fs:[rax], al ; add al, bh ; ret
0x000000000041d17a : adc byte ptr ss:[rax], al ; add byte ptr [rbx + 0x1e2d9445], cl ; call rsp
0x000000000045d58b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000046ce95 : adc eax, 0x4e980000 ; cld ; call qword ptr [rdx]
0x000000000045a2cd : adc eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rsi]
0x000000000046ccd5 : adc eax, dword ptr [rax] ; add al, ch ; adc al, -4 ; call qword ptr [rsi]
0x0000000000449f39 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046ccd4 : adc eax, dword ptr fs:[rax] ; add al, ch ; adc al, -4 ; call qword ptr [rsi]
0x000000000046e053 : add ah, ah ; add byte ptr es:[rax], al ; call 0x2446df83
0x000000000046dd53 : add ah, ah ; and eax, dword ptr [rax] ; add byte ptr [rax], bh ; fdiv st(6), st(0) ; call rsi
0x000000000046d753 : add ah, ah ; sbb eax, 0xcf180000 ; std ; jmp qword ptr [rdx]
0x000000000046cc33 : add ah, al ; adc al, byte ptr [rax] ; add al, cl ; or al, 0xfffffffffffffffc ; call qword ptr [rsi]
0x000000000046bc33 : add ah, al ; add al, byte ptr [rax] ; add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rcx]
0x000000000046bdd5 : add al, 0 ; add byte ptr [rax - 0x12], bh ; cli ; call rbx
0x0000000000413282 : add al, 0 ; add cl, ch ; ret
0x000000000040d50a : add al, 0 ; add cl, ch ; ret 1
0x000000000046cf74 : add al, 0x16 ; add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp rsi
0x000000000046d574 : add al, 0x1c ; add byte ptr [rax], al ; cwde ; cmp al, -3 ; call qword ptr [rbx]
0x000000000046d874 : add al, 0x1f ; add byte ptr [rax], al ; call 0x2146d654
0x000000000042d28d : add al, 0x25 ; ret 0x46a6
0x0000000000432977 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000046cf97 : add al, bh ; pop rcx ; cld ; call rax
0x000000000046c9d7 : add al, bh ; ret
0x000000000046d6b7 : add al, bh ; ret 0xfffd
0x000000000046d997 : add al, bh ; sar ebp, 1 ; jmp qword ptr [rdx]
0x000000000046cc17 : add al, bl ; or bh, ah ; call qword ptr [rax]
0x000000000046d697 : add al, bl ; ret 0xfffd
0x000000000046c7d7 : add al, bl ; stosb byte ptr [rdi], al ; sti ; call qword ptr [rsi]
0x000000000043967c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x0000000000467a28 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000405168 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046bc15 : add al, byte ptr [rax] ; add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rdi]
0x000000000046bc35 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rcx]
0x000000000045ce83 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042aeb3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x442da045], cl ; ret
0x000000000043b362 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x512db445], cl ; ret 0xe86c
0x0000000000436014 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041b9bb : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046ccd7 : add al, ch ; adc al, -4 ; call qword ptr [rsi]
0x0000000000404fbe : add al, ch ; lodsb al, byte ptr [rsi] ; ret
0x000000000040b0a7 : add al, ch ; ret
0x0000000000419a18 : add al, ch ; ret 0xfe8a
0x000000000046d877 : add al, ch ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000046cc37 : add al, cl ; or al, 0xfffffffffffffffc ; call qword ptr [rsi]
0x0000000000435bd1 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000042b8c5 : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000428228 : add bh, al ; shl r14b, 1 ; mov dl, 0x30 ; ret
0x000000000041fdbf : add bh, al ; test dword ptr [rdi + rbx*8 - 1], ebx ; call qword ptr [rdi]
0x000000000045d27e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000045cfe6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004582fc : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x00000000004577d6 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000045732c : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000457567 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000045b18c : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rcx
0x000000000045562d : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000045767d : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000045aeb2 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x00000000004576c2 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000045b388 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000454fd0 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004553b2 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x0000000000457e23 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x0000000000459162 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdx
0x0000000000458094 : add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x0000000000416031 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x0000000000415502 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415547 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x00000000004158a3 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004662df : add bl, dh ; ret
0x00000000004223d3 : add byte ptr [eax - 0x77], cl ; fadd st(7) ; pushfq ; ret 0xe2f
0x0000000000422337 : add byte ptr [eax - 0x7f], cl ; ret 1
0x0000000000421c48 : add byte ptr [eax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b48e : add byte ptr [eax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422edd : add byte ptr [r8], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000435cda : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000456a93 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a4ba : add byte ptr [rax + 0x2d], cl ; lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000046bfb7 : add byte ptr [rax + 0x49], cl ; sti ; call qword ptr [rax]
0x000000000041b375 : add byte ptr [rax + 1], cl ; xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000046b98b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; adc byte ptr [rbp - 7], ah ; call rax
0x0000000000422c3c : add byte ptr [rax + rax], cl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046e193 : add byte ptr [rax + rbp], ah ; add byte ptr [rax], al ; mov byte ptr [rcx - 1], cl ; jmp qword ptr [rdi]
0x000000000046c9d3 : add byte ptr [rax + rdx], ah ; add al, bh ; ret
0x000000000046c9b3 : add byte ptr [rax + rdx], al ; add byte ptr [rax], bl ; ret
0x000000000046bdd7 : add byte ptr [rax - 0x12], bh ; cli ; call rbx
0x000000000041e2ae : add byte ptr [rax - 0x49f0fe1e], al ; ret 0x4589
0x0000000000419f81 : add byte ptr [rax - 0x49f0fe1f], al ; shr eax, 1 ; ret
0x000000000046be93 : add byte ptr [rax - 0x4f80000], ah ; cli ; jmp qword ptr [rbx]
0x000000000042d28a : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x46a6
0x00000000004153a5 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000042f7fe : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000415ebb : add byte ptr [rax - 0x75], cl ; jge 0x415e77 ; call 0x4021b7
0x0000000000465d39 : add byte ptr [rax - 0x75], cl ; jge 0x465d35 ; call 0x402017
0x00000000004121d3 : add byte ptr [rax - 0x75], cl ; loopne 0x41222a ; mov esp, ebp ; pop rbp ; ret
0x00000000004223d4 : add byte ptr [rax - 0x77], cl ; fadd st(7) ; pushfq ; ret 0xe2f
0x000000000044b20d : add byte ptr [rax - 0x77], cl ; jge 0x44b210 ; pop rbp ; ret
0x000000000043967e : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x0000000000422338 : add byte ptr [rax - 0x7f], cl ; ret 1
0x000000000046d993 : add byte ptr [rax], ah ; add byte ptr [rax], al ; clc ; sar ebp, 1 ; jmp qword ptr [rdx]
0x000000000046e5ef : add byte ptr [rax], ah ; jge 0x46e5f6 ; call qword ptr [rax]
0x000000000046c9b2 : add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add byte ptr [rax], bl ; ret
0x000000000046e61e : add byte ptr [rax], al ; adc byte ptr [rbp - 1], bh ; call qword ptr [rax]
0x000000000046b98e : add byte ptr [rax], al ; adc byte ptr [rbp - 7], ah ; call rax
0x000000000046c9d2 : add byte ptr [rax], al ; adc byte ptr fs:[rax], al ; add al, bh ; ret
0x000000000046ceb2 : add byte ptr [rax], al ; adc eax, 0x4e980000 ; cld ; call qword ptr [rdx]
0x000000000046ccd2 : add byte ptr [rax], al ; adc eax, dword ptr fs:[rax] ; add al, ch ; adc al, -4 ; call qword ptr [rsi]
0x000000000046bdd2 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax - 0x12], bh ; cli ; call rbx
0x000000000046cf72 : add byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp rsi
0x000000000046d572 : add byte ptr [rax], al ; add al, 0x1c ; add byte ptr [rax], al ; cwde ; cmp al, -3 ; call qword ptr [rbx]
0x000000000046d872 : add byte ptr [rax], al ; add al, 0x1f ; add byte ptr [rax], al ; call 0x2146d656
0x000000000040b0a5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000435cdb : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000042b976 : add byte ptr [rax], al ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041fdbd : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbx*8 - 1], ebx ; call qword ptr [rdi]
0x000000000045d27c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000045cfe4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004577d4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x00000000004587a8 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000045aeb0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000454fce : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004662dd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000046c9d1 : add byte ptr [rax], al ; add byte ptr [rax + rdx], ah ; add al, bh ; ret
0x000000000046c9b1 : add byte ptr [rax], al ; add byte ptr [rax + rdx], al ; add byte ptr [rax], bl ; ret
0x000000000041e2ac : add byte ptr [rax], al ; add byte ptr [rax - 0x49f0fe1e], al ; ret 0x4589
0x000000000042d288 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x46a6
0x000000000042f7fc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000465d37 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x465d37 ; call 0x402019
0x000000000044b20b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x44b212 ; pop rbp ; ret
0x00000000004662db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004008e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400778 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000004008e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040077a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000004210af : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000404465 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041b944 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404634 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404074 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e629 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044b20a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004008e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040077c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000046b98d : add byte ptr [rax], al ; add byte ptr [rax], dl ; stc ; call rax
0x0000000000421904 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; ret 0x8b4d
0x000000000046d6b1 : add byte ptr [rax], al ; add byte ptr [rbp + rbx], al ; add al, bh ; ret 0xfffd
0x000000000041d1c6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1f2d9445], cl ; call rsp
0x000000000043ba50 : add byte ptr [rax], al ; add byte ptr [rbx + 0x292dac45], cl ; ret 0x17a6
0x000000000043bb9f : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2dac45], cl ; ret 0x17a6
0x0000000000449c7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042a3f5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432da045], cl ; ret
0x00000000004329e1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000043b3ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x522db445], cl ; ret 0xe86c
0x000000000043266f : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000041d6c1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x72d9445], cl ; ret 0xd5bb
0x000000000042990a : add byte ptr [rax], al ; add byte ptr [rbx + 0x792dd845], cl ; ret 0x9cb3
0x000000000042994c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2dd845], cl ; ret 0x9cb3
0x0000000000460357 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x000000000042596e : add byte ptr [rax], al ; add byte ptr [rbx - 0x16d223bb], cl ; xlatb ; ret
0x0000000000425e40 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3ad223bb], cl ; ret 0x934a
0x00000000004635d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000463555 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041af31 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d233bb], cl ; ret 0x6c7c
0x000000000043b37b : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000043b330 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000042f792 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x0000000000427978 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d217bb], cl ; pop rbp ; ret 0x8943
0x0000000000428142 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cd233bb], cl ; ret
0x00000000004280be : add byte ptr [rax], al ; add byte ptr [rbx - 0x7dd233bb], cl ; ret
0x0000000000425942 : add byte ptr [rax], al ; add byte ptr [rbx - 0xed223bb], cl ; ret
0x0000000000425900 : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd223bb], cl ; ret
0x00000000004305a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000040c605 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404b96 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000440857 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000404467 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000409b2c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004099ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004040b9 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000043ab83 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ret
0x000000000041fdf1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040410a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411508 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000404a10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000437fc3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040425d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e473 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042c207 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041fe28 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041b554 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004395a4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000441b6f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404076 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411054 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000415256 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043089a : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000042e84f : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000046beb2 : add byte ptr [rax], al ; add eax, 0xfb180000 ; cli ; call qword ptr [rax]
0x0000000000467a2a : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000041b374 : add byte ptr [rax], al ; add rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004272a1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417f3c : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e62b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427a35 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000449ef7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ae16 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042f219 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401e93 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000046cc92 : add byte ptr [rax], al ; and al, 0x13 ; add byte ptr [rax], al ; test al, 0xf ; cld ; jmp rbx
0x000000000046ce92 : add byte ptr [rax], al ; and al, 0x15 ; add byte ptr [rax], al ; cwde ; cld ; call qword ptr [rdx]
0x000000000046cf92 : add byte ptr [rax], al ; and al, 0x16 ; add byte ptr [rax], al ; clc ; pop rcx ; cld ; call rax
0x000000000046d992 : add byte ptr [rax], al ; and al, 0x20 ; add byte ptr [rax], al ; clc ; sar ebp, 1 ; jmp qword ptr [rdx]
0x000000000046e192 : add byte ptr [rax], al ; and al, 0x28 ; add byte ptr [rax], al ; mov byte ptr [rcx - 1], cl ; jmp qword ptr [rdi]
0x000000000046be92 : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; or bl, bh ; cli ; jmp qword ptr [rbx]
0x000000000046bf92 : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; mov byte ptr [rax - 5], cl ; call rdx
0x000000000046e5ee : add byte ptr [rax], al ; and byte ptr [rbp - 1], bh ; call qword ptr [rax]
0x000000000046ccd6 : add byte ptr [rax], al ; call 0x1746c8f6
0x000000000046d876 : add byte ptr [rax], al ; call 0x2146d652
0x000000000046e056 : add byte ptr [rax], al ; call 0x2446df80
0x000000000046e0f6 : add byte ptr [rax], al ; call 0x2446e047
0x000000000046e4d6 : add byte ptr [rax], al ; call 0xffffffffe146e444
0x000000000046cf96 : add byte ptr [rax], al ; clc ; pop rcx ; cld ; call rax
0x000000000046c9d6 : add byte ptr [rax], al ; clc ; ret
0x000000000046d6b6 : add byte ptr [rax], al ; clc ; ret 0xfffd
0x000000000046d996 : add byte ptr [rax], al ; clc ; sar ebp, 1 ; jmp qword ptr [rdx]
0x000000000046bdf6 : add byte ptr [rax], al ; cmp al, dh ; cli ; call rbx
0x000000000046ce96 : add byte ptr [rax], al ; cwde ; cld ; call qword ptr [rdx]
0x000000000046d576 : add byte ptr [rax], al ; cwde ; cmp al, -3 ; call qword ptr [rbx]
0x000000000046de16 : add byte ptr [rax], al ; cwde ; loopne 0x46de1e ; jmp rdx
0x000000000046cc16 : add byte ptr [rax], al ; fmul dword ptr [rdx] ; cld ; call qword ptr [rax]
0x000000000046d752 : add byte ptr [rax], al ; in al, 0x1d ; add byte ptr [rax], al ; sbb bh, cl ; std ; jmp qword ptr [rdx]
0x000000000046e052 : add byte ptr [rax], al ; in al, 0x26 ; add byte ptr [rax], al ; call 0x2446df84
0x000000000046e5ea : add byte ptr [rax], al ; jl 0x46e623 ; add byte ptr [rax], al ; and byte ptr [rbp - 1], bh ; call qword ptr [rax]
0x0000000000401fe9 : add byte ptr [rax], al ; jmp 0x401ea9
0x0000000000415252 : add byte ptr [rax], al ; jmp 0x415261
0x00000000004216aa : add byte ptr [rax], al ; jmp 0x421af9
0x000000000042e84b : add byte ptr [rax], al ; jmp 0x42e85a
0x000000000043cfca : add byte ptr [rax], al ; jmp 0x43cfd9
0x000000000043d34a : add byte ptr [rax], al ; jmp 0x43d359
0x000000000045b911 : add byte ptr [rax], al ; jmp 0x45b989
0x0000000000462e99 : add byte ptr [rax], al ; jmp 0x462ea8
0x0000000000463b09 : add byte ptr [rax], al ; jmp 0x463b18
0x000000000046bdd6 : add byte ptr [rax], al ; js 0x46bdcd ; cli ; call rbx
0x000000000046e61a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub al, 0 ; add byte ptr [rax], dl ; jge 0x46e62b ; call qword ptr [rax]
0x0000000000462cac : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000462c2d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000046bf96 : add byte ptr [rax], al ; mov byte ptr [rax - 5], cl ; call rdx
0x000000000046e196 : add byte ptr [rax], al ; mov byte ptr [rcx - 1], cl ; jmp qword ptr [rdi]
0x0000000000460057 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000463d17 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045be5b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000045bcb8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000044ae9a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044afcd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044b129 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044af41 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045baaf : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000044b20c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042e4c9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043207c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000441459 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042f7fd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000465d38 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x402018
0x0000000000415eba : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x50] ; call 0x4021b8
0x000000000046cc12 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, bl ; or bh, ah ; call qword ptr [rax]
0x000000000046bc12 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rdi]
0x000000000046be96 : add byte ptr [rax], al ; or bl, bh ; cli ; jmp qword ptr [rbx]
0x00000000004050bf : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000449c7f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cae6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046b426 : add byte ptr [rax], al ; pop rsp ; ret 0xfffc
0x00000000004008e6 : add byte ptr [rax], al ; ret
0x000000000040077e : add byte ptr [rax], al ; ret 3
0x000000000046b98a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc byte ptr [rbp - 7], ah ; call rax
0x000000000046d756 : add byte ptr [rax], al ; sbb bh, cl ; std ; jmp qword ptr [rdx]
0x000000000046beb6 : add byte ptr [rax], al ; sbb bl, bh ; cli ; call qword ptr [rax]
0x000000000046bfb6 : add byte ptr [rax], al ; sti ; call qword ptr [rax]
0x000000000046cf76 : add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp rsi
0x000000000046db16 : add byte ptr [rax], al ; sub ch, dl ; std ; jmp qword ptr [rdi]
0x000000000046dbf6 : add byte ptr [rax], al ; test al, -0x2b ; std ; call qword ptr [rdx]
0x000000000046cc96 : add byte ptr [rax], al ; test al, 0xf ; cld ; jmp rbx
0x000000000046cbd6 : add byte ptr [rax], al ; test al, 6 ; cld ; call qword ptr [rbx]
0x000000000046e0f2 : add byte ptr [rax], al ; test byte ptr [rdi], ah ; add byte ptr [rax], al ; call 0x2446e04b
0x000000000046dbf2 : add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; test al, -0x2b ; std ; call qword ptr [rdx]
0x000000000046dd57 : add byte ptr [rax], bh ; fdiv st(6), st(0) ; call rsi
0x000000000046c997 : add byte ptr [rax], bh ; ret 0xfffb
0x000000000046bc17 : add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rdi]
0x000000000046d757 : add byte ptr [rax], bl ; iretd ; std ; jmp qword ptr [rdx]
0x000000000046c9b7 : add byte ptr [rax], bl ; ret
0x000000000046beb7 : add byte ptr [rax], bl ; sti ; cli ; call qword ptr [rax]
0x000000000046bc37 : add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rcx]
0x000000000046cf77 : add byte ptr [rax], ch ; pop rcx ; cld ; jmp rsi
0x000000000046be97 : add byte ptr [rax], cl ; sti ; cli ; jmp qword ptr [rbx]
0x000000000046e61f : add byte ptr [rax], dl ; jge 0x46e626 ; call qword ptr [rax]
0x000000000046b98f : add byte ptr [rax], dl ; stc ; call rax
0x000000000042299d : add byte ptr [rax], r8b ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421906 : add byte ptr [rbp + 1], cl ; ret 0x8b4d
0x000000000046beb3 : add byte ptr [rbp + rax], al ; add byte ptr [rax], bl ; sti ; cli ; call qword ptr [rax]
0x000000000046d6b3 : add byte ptr [rbp + rbx], al ; add al, bh ; ret 0xfffd
0x0000000000433045 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000433087 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000041d17d : add byte ptr [rbx + 0x1e2d9445], cl ; call rsp
0x000000000041d1c8 : add byte ptr [rbx + 0x1f2d9445], cl ; call rsp
0x000000000043ba52 : add byte ptr [rbx + 0x292dac45], cl ; ret 0x17a6
0x000000000043bba1 : add byte ptr [rbx + 0x2a2dac45], cl ; ret 0x17a6
0x000000000042ec8a : add byte ptr [rbx + 0x352dec45], cl ; sub al, -0x4c ; ret
0x000000000042ecb6 : add byte ptr [rbx + 0x362dec45], cl ; sub al, -0x4c ; ret
0x0000000000449c80 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042a3f7 : add byte ptr [rbx + 0x432da045], cl ; ret
0x000000000042aeb5 : add byte ptr [rbx + 0x442da045], cl ; ret
0x00000000004329e3 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000043b364 : add byte ptr [rbx + 0x512db445], cl ; ret 0xe86c
0x000000000043b3af : add byte ptr [rbx + 0x522db445], cl ; ret 0xe86c
0x0000000000423478 : add byte ptr [rbx + 0x5d2ddc45], cl ; and byte ptr [rcx], al ; ret 0x4589
0x000000000040cae7 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043edc1 : add byte ptr [rbx + 0x5e2db845], cl ; sbb dh, cl ; ret
0x00000000004234ba : add byte ptr [rbx + 0x5e2ddc45], cl ; and byte ptr [rcx], al ; ret 0x4589
0x000000000041d678 : add byte ptr [rbx + 0x62d9445], cl ; ret 0xd5bb
0x0000000000432671 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x000000000041d6c3 : add byte ptr [rbx + 0x72d9445], cl ; ret 0xd5bb
0x000000000042990c : add byte ptr [rbx + 0x792dd845], cl ; ret 0x9cb3
0x000000000042994e : add byte ptr [rbx + 0x7a2dd845], cl ; ret 0x9cb3
0x000000000043f422 : add byte ptr [rbx + 0xc2d9045], cl ; test al, 0x58 ; ret 0x8589
0x000000000043f46d : add byte ptr [rbx + 0xd2d9045], cl ; test al, 0x58 ; ret 0x8589
0x000000000046ccd3 : add byte ptr [rbx + rdx], ah ; add al, ch ; adc al, -4 ; call qword ptr [rsi]
0x000000000046cc93 : add byte ptr [rbx + rdx], ah ; add byte ptr [rax], al ; test al, 0xf ; cld ; jmp rbx
0x0000000000460359 : add byte ptr [rbx - 0x15d24bbb], cl ; ret 0x89ec
0x0000000000425970 : add byte ptr [rbx - 0x16d223bb], cl ; xlatb ; ret
0x000000000042592e : add byte ptr [rbx - 0x17d223bb], cl ; xlatb ; ret
0x00000000004280ec : add byte ptr [rbx - 0x19d233bb], cl ; mov dl, 0x30 ; ret
0x00000000004554d9 : add byte ptr [rbx - 0x2436b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x000000000041724b : add byte ptr [rbx - 0x3874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000425e42 : add byte ptr [rbx - 0x3ad223bb], cl ; ret 0x934a
0x00000000004635db : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000463557 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041af33 : add byte ptr [rbx - 0x68d233bb], cl ; ret 0x6c7c
0x000000000043b37d : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000043b332 : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000042f794 : add byte ptr [rbx - 0x72d20fbb], cl ; ret 0x42ab
0x000000000042797a : add byte ptr [rbx - 0x72d217bb], cl ; pop rbp ; ret 0x8943
0x0000000000428144 : add byte ptr [rbx - 0x7cd233bb], cl ; ret
0x00000000004280c0 : add byte ptr [rbx - 0x7dd233bb], cl ; ret
0x0000000000425944 : add byte ptr [rbx - 0xed223bb], cl ; ret
0x0000000000425902 : add byte ptr [rbx - 0xfd223bb], cl ; ret
0x0000000000412823 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404381 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411bfa : add byte ptr [rbx], bh ; test dword ptr [rsp + rdi*8 - 1], edx ; dec dword ptr [rdi] ; pushfq ; ret 0xd284
0x00000000004305a4 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x0000000000411051 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040c607 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404b98 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000440859 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000404469 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000409b2e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000437fbf : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000427a55 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000046db13 : add byte ptr [rcx - 0x2ad80000], ah ; std ; jmp qword ptr [rdi]
0x00000000004099ee : add byte ptr [rcx - 0x77], al ; ret
0x000000000045a8c0 : add byte ptr [rcx - 0x7a383fbb], cl ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000045a46e : add byte ptr [rcx - 0x7a3847bb], cl ; push rsp ; idiv edi ; call rdx
0x0000000000404331 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004206e5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402628 : add byte ptr [rcx], al ; ret
0x00000000004040bb : add byte ptr [rcx], bh ; ret 0xf40
0x000000000046d873 : add byte ptr [rdi + rbx], al ; add byte ptr [rax], al ; call 0x2146d655
0x000000000044b15a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043ab85 : add byte ptr [rdi], cl ; mov dh, 0x45 ; ret
0x000000000041fdf3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040410c : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041150a : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000404a12 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000437fc5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040425f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e475 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042c209 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000041fe2a : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041b556 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004395a6 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000441b71 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404078 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411057 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004258bc : add byte ptr [rdi], dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046ce93 : add byte ptr [rdx + 0x4e980000], ah ; cld ; call qword ptr [rdx]
0x000000000046bc13 : add byte ptr [rdx + rax - 0x59e80000], ah ; cli ; jmp qword ptr [rdi]
0x000000000046cc13 : add byte ptr [rdx + rdx + 0xad80000], ah ; cld ; call qword ptr [rax]
0x000000000046dc13 : add byte ptr [rdx - 0x2a580000], ah ; std ; call qword ptr [rdx]
0x000000000046dbf3 : add byte ptr [rdx - 0x2a580000], al ; std ; call qword ptr [rdx]
0x0000000000410bf8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404500 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430675 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410bb3 : add byte ptr [rip + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x00000000004324fd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000046bf93 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; mov byte ptr [rax - 5], cl ; call rdx
0x000000000046bfb3 : add byte ptr [rsi + rax], al ; add byte ptr [rax + 0x49], cl ; sti ; call qword ptr [rax]
0x000000000046c7d3 : add byte ptr [rsi + rcx], ah ; add al, bl ; stosb byte ptr [rdi], al ; sti ; call qword ptr [rsi]
0x000000000046cf93 : add byte ptr [rsi + rdx], ah ; add byte ptr [rax], al ; clc ; pop rcx ; cld ; call rax
0x000000000046cf73 : add byte ptr [rsi + rdx], al ; add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp rsi
0x000000000040defd : add byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046bdf3 : add byte ptr [rsp + rax - 0xfc80000], al ; cli ; call rbx
0x000000000046bdd3 : add byte ptr [rsp + rax], ah ; add byte ptr [rax - 0x12], bh ; cli ; call rbx
0x000000000046e5eb : add byte ptr [rsp + rbp], bh ; add byte ptr [rax], ah ; jge 0x46e5fa ; call qword ptr [rax]
0x000000000046d573 : add byte ptr [rsp + rbx], al ; add byte ptr [rax], al ; cwde ; cmp al, -3 ; call qword ptr [rbx]
0x00000000004243dd : add byte ptr cs:[rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004236bd : add byte ptr ds:[rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004290cf : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046e055 : add byte ptr es:[rax], al ; call 0x2446df81
0x0000000000402627 : add byte ptr es:[rcx], al ; ret
0x0000000000423bfd : add byte ptr ss:[rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413284 : add cl, ch ; ret
0x000000000043089c : add cl, ch ; ret 0
0x000000000040d50c : add cl, ch ; ret 1
0x000000000042e851 : add cl, ch ; ret 2
0x000000000041faf9 : add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xff9f
0x000000000041fb27 : add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xffbf
0x000000000041fb7d : add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xffdb
0x000000000041fbab : add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xffe0
0x0000000000437f5a : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000435bcf : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041602f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x0000000000449ef5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045baad : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000043b957 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042592c : add dword ptr [rax], eax ; add byte ptr [rbx - 0x17d223bb], cl ; xlatb ; ret
0x0000000000439eb6 : add dword ptr [rcx], eax ; ret 0x9589
0x000000000040e47b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x000000000042915b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427893 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432441 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041c531 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004292f1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e1d6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426bb2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042be96 : add dword ptr [rdi], esp ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d911 : add dword ptr [rdi], esp ; pop rbp ; ret
0x0000000000402624 : add eax, 0x26d00e ; add ebx, esi ; ret
0x00000000004620df : add eax, 0x53b80000 ; jrcxz 0x46214f ; ret 0x8fb9
0x000000000043a953 : add eax, 0x5d5b0000 ; ret
0x000000000045b386 : add eax, 0x85c70000 ; push rsp ; idiv edi ; jmp qword ptr [rdx]
0x0000000000460055 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000045f93f : add eax, 0xb6b80000 ; ret 0x979f
0x000000000040b0a4 : add eax, 0xe8000000 ; ret
0x000000000042b0d5 : add eax, 0xf000000 ; xchg eax, edx ; ret 0xd284
0x0000000000410bb4 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000046be95 : add eax, 0xfb080000 ; cli ; jmp qword ptr [rbx]
0x000000000046beb5 : add eax, 0xfb180000 ; cli ; call qword ptr [rax]
0x0000000000415eb9 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; jge 0x415e79 ; call 0x4021b9
0x0000000000467a2c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000431166 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000432979 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025eb : add eax, edx ; sar rax, 1 ; jne 0x4025fc ; pop rbp ; ret
0x0000000000402629 : add ebx, esi ; ret
0x0000000000440297 : add ecx, dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405165 : add ecx, dword ptr [rcx + rbp*8 + 2] ; pop rbp ; ret
0x0000000000457710 : add edi, eax ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000041b377 : add edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e4a6 : add esp, 0x10 ; pop rbp ; ret
0x00000000004206e3 : add esp, 0x100 ; pop rbp ; ret
0x000000000043b954 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000044a617 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000436f2f : add esp, 0x120 ; pop rbp ; ret
0x00000000004225a5 : add esp, 0x130 ; pop rbp ; ret
0x000000000042cb2a : add esp, 0x150 ; pop rbp ; ret
0x0000000000437b1e : add esp, 0x160 ; pop rbp ; ret
0x000000000041c3d3 : add esp, 0x170 ; pop rbp ; ret
0x0000000000432446 : add esp, 0x18 ; pop rbp ; ret
0x000000000041a9c1 : add esp, 0x18f0 ; pop rbp ; ret
0x000000000041b64d : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000431809 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000417f3f : add esp, 0x20 ; pop rbp ; ret
0x0000000000430673 : add esp, 0x200 ; pop rbp ; ret
0x000000000045b89d : add esp, 0x2068 ; pop rbx ; pop rbp ; ret
0x000000000044025a : add esp, 0x250 ; pop rbp ; ret
0x000000000040df69 : add esp, 0x260 ; pop rbp ; ret
0x0000000000465a93 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000040e62e : add esp, 0x30 ; pop rbp ; ret
0x000000000041ebe4 : add esp, 0x330 ; pop rbp ; ret
0x000000000045ff25 : add esp, 0x380 ; pop rbp ; ret
0x0000000000417519 : add esp, 0x3a0 ; pop rbp ; ret
0x0000000000421135 : add esp, 0x3c0 ; pop rbp ; ret
0x000000000041c536 : add esp, 0x40 ; pop rbp ; ret
0x000000000041b98d : add esp, 0x460 ; pop rbp ; ret
0x00000000004050bb : add esp, 0x4e0 ; pop rbp ; ret
0x0000000000416d12 : add esp, 0x50 ; pop rbp ; ret
0x000000000043a950 : add esp, 0x538 ; pop rbx ; pop rbp ; ret
0x000000000040e1db : add esp, 0x60 ; pop rbp ; ret
0x0000000000426d11 : add esp, 0x70 ; pop rbp ; ret
0x0000000000416219 : add esp, 0x750 ; pop rbp ; ret
0x0000000000412422 : add esp, 0x80 ; pop rbp ; ret
0x0000000000413aa1 : add esp, 0x90 ; pop rbp ; ret
0x0000000000417b34 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041784c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040cae2 : add esp, 0xb78 ; pop rbx ; pop rbp ; ret
0x0000000000416674 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041d040 : add esp, 0xc4 ; pop rbp ; ret
0x0000000000449954 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000041298c : add esp, 0xd0 ; pop rbp ; ret
0x000000000041309d : add esp, 0xf0 ; pop rbp ; ret
0x000000000042ef76 : add esp, 8 ; pop rbp ; ret
0x0000000000401e96 : add esp, 8 ; ret
0x0000000000432978 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025ea : add rax, rdx ; sar rax, 1 ; jne 0x4025fd ; pop rbp ; ret
0x000000000041b376 : add rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e4a5 : add rsp, 0x10 ; pop rbp ; ret
0x00000000004206e2 : add rsp, 0x100 ; pop rbp ; ret
0x000000000043b953 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000044a616 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000436f2e : add rsp, 0x120 ; pop rbp ; ret
0x00000000004225a4 : add rsp, 0x130 ; pop rbp ; ret
0x000000000042cb29 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000437b1d : add rsp, 0x160 ; pop rbp ; ret
0x000000000041c3d2 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000432445 : add rsp, 0x18 ; pop rbp ; ret
0x000000000041a9c0 : add rsp, 0x18f0 ; pop rbp ; ret
0x000000000041b64c : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000431808 : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000417f3e : add rsp, 0x20 ; pop rbp ; ret
0x0000000000430672 : add rsp, 0x200 ; pop rbp ; ret
0x000000000045b89c : add rsp, 0x2068 ; pop rbx ; pop rbp ; ret
0x0000000000440259 : add rsp, 0x250 ; pop rbp ; ret
0x000000000040df68 : add rsp, 0x260 ; pop rbp ; ret
0x0000000000465a92 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000040e62d : add rsp, 0x30 ; pop rbp ; ret
0x000000000041ebe3 : add rsp, 0x330 ; pop rbp ; ret
0x000000000045ff24 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000417518 : add rsp, 0x3a0 ; pop rbp ; ret
0x0000000000421134 : add rsp, 0x3c0 ; pop rbp ; ret
0x000000000041c535 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041b98c : add rsp, 0x460 ; pop rbp ; ret
0x00000000004050ba : add rsp, 0x4e0 ; pop rbp ; ret
0x0000000000416d11 : add rsp, 0x50 ; pop rbp ; ret
0x000000000043a94f : add rsp, 0x538 ; pop rbx ; pop rbp ; ret
0x000000000040e1da : add rsp, 0x60 ; pop rbp ; ret
0x0000000000426d10 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000416218 : add rsp, 0x750 ; pop rbp ; ret
0x0000000000412421 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000413aa0 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000417b33 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041784b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040cae1 : add rsp, 0xb78 ; pop rbx ; pop rbp ; ret
0x0000000000416673 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041d03f : add rsp, 0xc4 ; pop rbp ; ret
0x0000000000449953 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000041298b : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041309c : add rsp, 0xf0 ; pop rbp ; ret
0x000000000042ef75 : add rsp, 8 ; pop rbp ; ret
0x0000000000401e95 : add rsp, 8 ; ret
0x000000000045be9c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000045be9b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000459482 : and al, 0 ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000046cc94 : and al, 0x13 ; add byte ptr [rax], al ; test al, 0xf ; cld ; jmp rbx
0x000000000046ce94 : and al, 0x15 ; add byte ptr [rax], al ; cwde ; cld ; call qword ptr [rdx]
0x000000000046cf94 : and al, 0x16 ; add byte ptr [rax], al ; clc ; pop rcx ; cld ; call rax
0x000000000046d994 : and al, 0x20 ; add byte ptr [rax], al ; clc ; sar ebp, 1 ; jmp qword ptr [rdx]
0x000000000046e194 : and al, 0x28 ; add byte ptr [rax], al ; mov byte ptr [rcx - 1], cl ; jmp qword ptr [rdi]
0x0000000000460d0b : and al, 0xffffffffffffffac ; ret 0x89cc
0x00000000004622a4 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000426bb1 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046be94 : and al, 5 ; add byte ptr [rax], al ; or bl, bh ; cli ; jmp qword ptr [rbx]
0x000000000046bf94 : and al, 6 ; add byte ptr [rax], al ; mov byte ptr [rax - 5], cl ; call rdx
0x00000000004324fa : and al, byte ptr [rdx + 0xf660003] ; pop rsp ; ret 0xf66
0x0000000000437f58 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000042b965 : and bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046d995 : and byte ptr [rax], al ; add al, bh ; sar ebp, 1 ; jmp qword ptr [rdx]
0x000000000045b8a0 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046e5f0 : and byte ptr [rbp - 1], bh ; call qword ptr [rax]
0x000000000042609c : and byte ptr [rbx], cl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000436f31 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042347e : and byte ptr [rcx], al ; ret 0x4589
0x00000000004235dc : and byte ptr [rcx], al ; ret 0x558a
0x0000000000437f57 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040e479 : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000459481 : and dword ptr [rax + rax], esp ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x0000000000433855 : and eax, 0x46a7c0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040a5b4 : and eax, 0x58b80000 ; popfq ; stc ; out -0x47, al ; ret
0x000000000042d90f : and eax, 0x6701a0 ; pop rbp ; ret
0x000000000042d933 : and eax, 0x6701a8 ; pop rbp ; ret
0x000000000041dfe9 : and eax, 0xe9000009 ; ret 1
0x0000000000454e58 : and eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x000000000046dd55 : and eax, dword ptr [rax] ; add byte ptr [rax], bh ; fdiv st(6), st(0) ; call rsi
0x000000000043c16e : call 0x110642be
0x000000000043c25d : call 0x110643ad
0x000000000043cbae : call 0x11064cfe
0x000000000043cc9d : call 0x11064ded
0x000000000046ccd8 : call 0x1746c8f4
0x000000000046d878 : call 0x2146d650
0x000000000046e058 : call 0x2446df7e
0x000000000046e0f8 : call 0x2446e045
0x000000000043058f : call 0x401f26
0x0000000000465d3e : call 0x402012
0x0000000000415e25 : call 0x4020c2
0x0000000000415ec0 : call 0x4021b2
0x0000000000466244 : call 0x402482
0x0000000000425f91 : call 0x426af6
0x0000000000412f47 : call 0x42f232
0x000000000045b01b : call 0x47ff72a9
0x0000000000425f90 : call 0x4dba84
0x000000000043e52f : call 0xa0ca7ef
0x0000000000425025 : call 0xf0509df
0x00000000004502a8 : call 0xffffffff85cec536
0x0000000000451508 : call 0xffffffff85ced796
0x0000000000435746 : call 0xffffffff8a05bce8
0x000000000042797d : call 0xffffffffc2a006b3
0x000000000042797c : call 0xffffffffc2a006b4
0x0000000000404873 : call 0xffffffffca7cd3c9
0x0000000000429ba3 : call 0xffffffffe09826f7
0x000000000046e4d8 : call 0xffffffffe146e442
0x0000000000449999 : call 0xffffffffe90722e9
0x0000000000449998 : call 0xffffffffe90722ea
0x00000000004453dd : call 0xfffffffff73cd974
0x0000000000439f1f : call 0xfffffffffef824f1
0x0000000000439f1e : call 0xfffffffffef824f2
0x0000000000465555 : call 0xffffffffff4adb2a
0x0000000000447f09 : call 0xffffffffff5904db
0x0000000000447f08 : call 0xffffffffff5904dc
0x0000000000447f09 : call 0xffffffffff5904dd
0x0000000000447f08 : call 0xffffffffff5904de
0x0000000000434837 : call 0xffffffffff7cd388
0x0000000000434836 : call 0xffffffffff7cd389
0x00000000004662b9 : call qword ptr [r12 + rbx*8]
0x000000000045a770 : call qword ptr [rax - 0x163dcb52]
0x00000000004395a2 : call qword ptr [rax]
0x0000000000404d7a : call qword ptr [rbx]
0x0000000000439756 : call qword ptr [rcx]
0x000000000041fdc5 : call qword ptr [rdi]
0x00000000004109b7 : call qword ptr [rdx]
0x0000000000404f62 : call qword ptr [rsi]
0x00000000004662ba : call qword ptr [rsp + rbx*8]
0x00000000004348d3 : call rax
0x000000000040c9a3 : call rbx
0x000000000040b79c : call rcx
0x00000000004044b1 : call rdi
0x000000000040f435 : call rdx
0x000000000040c395 : call rsi
0x000000000040c2be : call rsp
0x000000000041faf8 : cdq ; add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xff9f
0x000000000041fb26 : cdq ; add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xffbf
0x000000000041fb7c : cdq ; add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xffdb
0x000000000041fbaa : cdq ; add dl, byte ptr [rbp - 0x7e03aa75] ; ret 0xffe0
0x000000000045a978 : cdq ; or ebp, dword ptr [rdi - 0x5bc746ce] ; ret
0x000000000046355c : cdq ; ret
0x0000000000404fbc : clc ; add al, ch ; lodsb al, byte ptr [rsi] ; ret
0x00000000004048d6 : clc ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c227 : clc ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c24f : clc ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439eb5 : clc ; add dword ptr [rcx], eax ; ret 0x9589
0x000000000044afd0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000433363 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045b97a : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050b9 : clc ; add rsp, 0x4e0 ; pop rbp ; ret
0x0000000000431a22 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004643a2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000465da0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042d8f1 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000432fb3 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000433711 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000043c3cf : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000042d0e3 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004025ef : clc ; jne 0x4025f8 ; pop rbp ; ret
0x0000000000420906 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000044121c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000437b5e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042bea7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000431d3b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000431d5b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000431d7b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044b1ab : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000044b1eb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044b1cb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041b37b : clc ; pop rbp ; ret
0x000000000046cf98 : clc ; pop rcx ; cld ; call rax
0x000000000046c9d8 : clc ; ret
0x000000000046d6b8 : clc ; ret 0xfffd
0x000000000046d998 : clc ; sar ebp, 1 ; jmp qword ptr [rdx]
0x0000000000416b37 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422961 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000046cc1a : cld ; call qword ptr [rax]
0x000000000046cbda : cld ; call qword ptr [rbx]
0x000000000046ce9a : cld ; call qword ptr [rdx]
0x000000000046cc3a : cld ; call qword ptr [rsi]
0x000000000046cf9a : cld ; call rax
0x000000000046cc9a : cld ; jmp rbx
0x000000000046cf7a : cld ; jmp rsi
0x0000000000447b5d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041c4cc : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046beba : cli ; call qword ptr [rax]
0x000000000046bd5a : cli ; call rbx
0x0000000000457364 : cli ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000045ad3b : cli ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000046be9a : cli ; jmp qword ptr [rbx]
0x000000000046bc3a : cli ; jmp qword ptr [rcx]
0x000000000046bc1a : cli ; jmp qword ptr [rdi]
0x000000000046bd3a : cli ; jmp rcx
0x000000000041b942 : cmc ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040bd6b : cmc ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043b998 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000464b5d : cmp al, -0x2a ; ret
0x000000000046d579 : cmp al, -3 ; call qword ptr [rbx]
0x0000000000404fb9 : cmp al, 0x25 ; push rax ; clc ; add al, ch ; lodsb al, byte ptr [rsi] ; ret
0x00000000004153a8 : cmp al, 0x25 ; ret
0x0000000000457e21 : cmp al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000046bdf8 : cmp al, dh ; cli ; call rbx
0x0000000000458092 : cmp byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000043a952 : cmp byte ptr [rip + 0x5d5b0000], al ; ret
0x000000000043e97d : cmp ch, byte ptr [rdx + 0x3d] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426cee : cmp dword ptr [rax - 0x75], ecx ; loopne 0x426d44 ; mov esi, dword ptr [rcx] ; call rax
0x00000000004270ee : cmp dword ptr [rax - 0x75], ecx ; loopne 0x427144 ; mov esi, dword ptr [rcx] ; call rax
0x000000000042724e : cmp dword ptr [rax - 0x75], ecx ; loopne 0x4272a4 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000427801 : cmp dword ptr [rax - 0x75], ecx ; ror byte ptr [r8 - 0x75], 0x31 ; call rax
0x00000000004040b4 : cmp eax, 0xba1e36 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x00000000004025ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025c0 ; pop rbp ; ret
0x000000000046bc39 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rcx]
0x000000000046bc19 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rdi]
0x0000000000449e34 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000425a27 : cvttps2pi mm1, qword ptr [rcx - 0x7bf05fbb] ; ret
0x000000000041c3d1 : cwde ; add rsp, 0x170 ; pop rbp ; ret
0x000000000043058e : cwde ; call 0x401f27
0x000000000046ce98 : cwde ; cld ; call qword ptr [rdx]
0x000000000046d578 : cwde ; cmp al, -3 ; call qword ptr [rbx]
0x000000000046305b : cwde ; js 0x463005 ; ret
0x00000000004630a2 : cwde ; js 0x46304c ; ret
0x00000000004630dc : cwde ; js 0x463086 ; ret
0x000000000046de18 : cwde ; loopne 0x46de1c ; jmp rdx
0x000000000041fc86 : dec dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0x4ee8
0x000000000041c384 : dec dword ptr [rax + 0x39] ; ret 0xf40
0x000000000040bf97 : dec dword ptr [rax + 0x39] ; ret 0xf41
0x000000000041b550 : dec dword ptr [rax + 0x3d] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000439832 : dec dword ptr [rax + 0x69] ; ret 0xa
0x0000000000419d1a : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000420325 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000439d9c : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000040c5e1 : dec dword ptr [rax - 0x77] ; ret 0x66e8
0x0000000000417251 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000045784c : dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000447d02 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000044800d : dec dword ptr [rax - 0x7f] ; ret 2
0x0000000000430166 : dec dword ptr [rbx - 0x1cb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004301ce : dec dword ptr [rbx - 0x1d76b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000430236 : dec dword ptr [rbx - 0x1e36b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000043029e : dec dword ptr [rbx - 0x1ef6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000045a89a : dec dword ptr [rcx - 0x7a3843bb] ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000045a448 : dec dword ptr [rcx - 0x7a384bbb] ; push rsp ; idiv edi ; call rdx
0x00000000004593d7 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411b78 : dec dword ptr [rdi] ; pushfq ; ret 0xd284
0x000000000043016c : dec dword ptr [rdi] ; ret 0x4589
0x0000000000449514 : dec dword ptr [rdi] ; ret 0x8589
0x000000000040d506 : dec dword ptr [rdi] ; test ah, cl ; add al, 0 ; add cl, ch ; ret 1
0x000000000043f5a7 : dec dword ptr [rdi] ; test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000431162 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffd], dh ; ret 1
0x000000000042aef5 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff8], dl ; ret 1
0x000000000045bfc3 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041dfe6 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff7], ah ; ret 1
0x0000000000409b83 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004127b4 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040e370 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040e36f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000420322 : enter -0x21, -1 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412f43 : enter -0x74b8, 0x30 ; call 0x42f236
0x0000000000412f42 : enter -0x74b8, 0x30 ; call 0x42f237
0x00000000004328c7 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000045aa9d : enter -0x7a39, 0x54 ; idiv edi ; jmp rdi
0x000000000043297a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000042c1df : enter -1, -1 ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000041c21f : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041c0e3 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046530b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004108ed : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e43c : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042c205 : enter 0xa1, 0 ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000432efe : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bcb0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044ae49 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004223d8 : fadd st(7) ; pushfq ; ret 0xe2f
0x000000000041533b : fadd st(7) ; test dword ptr [rsp + rdi*8 - 1], ecx ; call rbx
0x0000000000415366 : fadd st(7), st(0) ; test dword ptr [rsp + rdi*8 - 1], ecx ; call rbx
0x000000000046dd59 : fdiv st(6), st(0) ; call rsi
0x000000000043b710 : fimul dword ptr [rdi] ; sahf ; ret
0x000000000043abbc : fld xword ptr [rbp - 0x30] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045db84 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000466240 : fmul dword ptr [rbx + 0x37e8d455] ; ret 0xfff9
0x000000000043aa93 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000046cc18 : fmul dword ptr [rdx] ; cld ; call qword ptr [rax]
0x00000000004662bc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042b481 : fsub st(1), st(0) ; ret 9
0x0000000000434444 : fsubr st(1) ; ret 0
0x0000000000434f0c : fucompi st(1) ; ret
0x000000000040defb : hlt ; add byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004290ce : hlt ; add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ccc7 : hlt ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000416b09 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000465efc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004025c0 : hlt ; pop rbp ; mov edi, 0x66f5d8 ; jmp rax
0x00000000004290f3 : hlt ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ac3d : hlt ; ret
0x000000000045a23a : idiv bh ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000045a76e : idiv edi ; call qword ptr [rax - 0x163dcb52]
0x000000000045b1c8 : idiv edi ; call qword ptr [rax]
0x0000000000458300 : idiv edi ; call qword ptr [rcx]
0x0000000000457714 : idiv edi ; call qword ptr [rdi]
0x0000000000455675 : idiv edi ; call qword ptr [rdx]
0x0000000000457330 : idiv edi ; call qword ptr [rsi]
0x000000000045756b : idiv edi ; call rbx
0x000000000045b190 : idiv edi ; call rcx
0x0000000000456860 : idiv edi ; call rdi
0x000000000045a44f : idiv edi ; call rdx
0x0000000000458c12 : idiv edi ; call rsi
0x0000000000455631 : idiv edi ; call rsp
0x0000000000459a48 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045a124 : idiv edi ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x000000000045b3a6 : idiv edi ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000457681 : idiv edi ; jmp qword ptr [rax]
0x000000000045ae9c : idiv edi ; jmp qword ptr [rcx]
0x00000000004576c6 : idiv edi ; jmp qword ptr [rdi]
0x000000000045b38c : idiv edi ; jmp qword ptr [rdx]
0x0000000000454fd4 : idiv edi ; jmp qword ptr [rsi]
0x00000000004553b6 : idiv edi ; jmp rax
0x0000000000457e27 : idiv edi ; jmp rcx
0x000000000045aaa1 : idiv edi ; jmp rdi
0x0000000000459166 : idiv edi ; jmp rdx
0x0000000000458098 : idiv edi ; jmp rsp
0x000000000046def9 : idiv esi ; call rdx
0x000000000045c91e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000043c16a : imul ecx, dword ptr [rax - 0x75], 0x8148e855 ; ret 0x10
0x00000000004281d3 : imul ecx, dword ptr [rdi], 0xe6b90000 ; mov dl, 0x30 ; ret
0x0000000000415b96 : imul esi ; sub rax, -0x44a38c47 ; ret
0x000000000042f158 : in al, -0x17 ; ret
0x00000000004474b9 : in al, -0x7f ; ret 0xff9f
0x000000000044769f : in al, -0x7f ; ret 0xffbf
0x0000000000447745 : in al, -0x7f ; ret 0xffc5
0x0000000000447773 : in al, -0x7f ; ret 0xffd5
0x0000000000447841 : in al, -0x7f ; ret 0xffd8
0x00000000004479d7 : in al, -0x7f ; ret 0xffe0
0x0000000000450318 : in al, 0x16 ; ret 0x8589
0x0000000000455b0c : in al, 0x16 ; ret 0x8bb9
0x00000000004590f1 : in al, 0x16 ; ret 0xade9
0x000000000046d754 : in al, 0x1d ; add byte ptr [rax], al ; sbb bh, cl ; std ; jmp qword ptr [rdx]
0x000000000046e054 : in al, 0x26 ; add byte ptr [rax], al ; call 0x2446df82
0x000000000042947b : in al, 0x2d ; ret
0x0000000000426e41 : in al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000428558 : in al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000043683a : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000431807 : in al, dx ; add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000440258 : in al, dx ; add rsp, 0x250 ; pop rbp ; ret
0x000000000046012f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042877b : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000046410f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000428fc7 : in al, dx ; add rsp, 0x90 ; pop rbp ; ret
0x000000000044156a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004121da : in al, dx ; pop rbp ; ret
0x0000000000427a53 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000044aeb3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000046375b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043ab7a : inc dword ptr [rax + 0x4d8801e1] ; ret
0x000000000040e453 : inc dword ptr [rax + 0x558801e2] ; ret
0x000000000041c4ca : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000040c603 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000404b94 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000448b2f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041fdef : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041538e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000456fb3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404eb0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041108e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041fe26 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041fd9d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b21e : inc dword ptr [rbp - 0x1681ad0a] ; ret
0x0000000000409e49 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000040ba1f : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004554df : inc dword ptr [rcx] ; ret 0x9589
0x000000000040c925 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ba4d : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439eb3 : inc ecx ; clc ; add dword ptr [rcx], eax ; ret 0x9589
0x000000000044a5e8 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000420576 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsp
0x0000000000455671 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdx]
0x0000000000457365 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000458359 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000045685c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdi
0x0000000000458c0e : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsi
0x000000000045ae98 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000045b885 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000045ad3c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000045a23c : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x00000000004580b9 : inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x0000000000419c3a : inc esi ; jmp qword ptr [rax]
0x000000000043ab79 : inc qword ptr [r8 + 0x4d8801e1] ; ret
0x0000000000420575 : inc r15 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsp
0x00000000004502a7 : insd dword ptr [rdi], dx ; call 0xffffffff85cec537
0x0000000000443c8f : insd dword ptr [rdi], dx ; ret 0x891a
0x00000000004472cf : insd dword ptr [rdi], dx ; ret 0xb91a
0x0000000000410f2c : int 0x37
0x0000000000425949 : int1 ; ret
0x000000000046d759 : iretd ; std ; jmp qword ptr [rdx]
0x00000000004025b3 : ja 0x4025ba ; pop rbp ; ret
0x0000000000418b57 : ja 0x418b25 ; ret 0x8589
0x0000000000418df7 : ja 0x418dc5 ; ret 0x8589
0x00000000004197e0 : ja 0x4197ae ; ret 0x558b
0x0000000000437b61 : ja 0x437bae ; pop rbp ; ret
0x00000000004025bf : je 0x4025bd ; pop rbp ; mov edi, 0x66f5d8 ; jmp rax
0x000000000042b955 : jg 0x42b923 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043ff9b : jg 0x43ffaf ; xchg eax, esp ; ret 0xd284
0x000000000044010e : jg 0x440122 ; xchg eax, esp ; ret 0xd284
0x00000000004401c6 : jg 0x4401da ; xchg eax, esp ; ret 0xd284
0x0000000000410d05 : jge 0x410ce3 ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000415ebe : jge 0x415e74 ; call 0x4021b4
0x000000000041ccc6 : jge 0x41ccc4 ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000041e8fc : jge 0x41e8d6 ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000425f8f : jge 0x425f81 ; call 0x426af8
0x00000000004290cd : jge 0x4290cb ; add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004290f2 : jge 0x4290f0 ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b0d3 : jge 0x42b099 ; add eax, 0xf000000 ; xchg eax, edx ; ret 0xd284
0x000000000042bea6 : jge 0x42bea7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000431d3a : jge 0x431d3b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000431d5a : jge 0x431d5b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000431d7a : jge 0x431d7b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000437b5d : jge 0x437b5e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044121b : jge 0x44121c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000044aeb6 : jge 0x44aeb3 ; pop rbp ; ret
0x000000000044b1aa : jge 0x44b1ab ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000044b1ca : jge 0x44b1cb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000044b1ea : jge 0x44b1eb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044b210 : jge 0x44b20d ; pop rbp ; ret
0x000000000045c438 : jge 0x45c44f ; ret
0x000000000045c923 : jge 0x45c93a ; ret
0x0000000000463cc9 : jge 0x463cc3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000465d3c : jge 0x465d32 ; call 0x402014
0x000000000046e5f1 : jge 0x46e5f4 ; call qword ptr [rax]
0x000000000046e621 : jge 0x46e624 ; call qword ptr [rax]
0x000000000045c30c : jl 0x45c323 ; ret
0x000000000046e5ec : jl 0x46e621 ; add byte ptr [rax], al ; and byte ptr [rbp - 1], bh ; call qword ptr [rax]
0x000000000040b222 : jle 0x40b20f ; ret
0x000000000040b722 : jle 0x40b70f ; ret
0x0000000000401feb : jmp 0x401ea7
0x0000000000404597 : jmp 0x4050ca
0x000000000040a1ca : jmp 0x40caf2
0x000000000040b02a : jmp 0x40caf3
0x0000000000415254 : jmp 0x41525f
0x0000000000415ec1 : jmp 0x415e86
0x0000000000415b68 : jmp 0x416229
0x00000000004153a1 : jmp 0x41622a
0x000000000041eaba : jmp 0x41ebf3
0x00000000004216ac : jmp 0x421af7
0x0000000000425ab7 : jmp 0x425b2f
0x0000000000429644 : jmp 0x4296d8
0x000000000042e84d : jmp 0x42e858
0x00000000004316c6 : jmp 0x431819
0x00000000004327c2 : jmp 0x432897
0x000000000043b923 : jmp 0x43b966
0x000000000043cfcc : jmp 0x43cfd7
0x000000000043d34c : jmp 0x43d357
0x000000000043fe28 : jmp 0x440268
0x0000000000446c7d : jmp 0x449963
0x0000000000449711 : jmp 0x449965
0x0000000000450e23 : jmp 0x450de9
0x0000000000454e84 : jmp 0x454e4a
0x000000000045636b : jmp 0x45b8ac
0x0000000000455cde : jmp 0x45b8ad
0x00000000004589d5 : jmp 0x45b8ae
0x000000000045b913 : jmp 0x45b987
0x000000000045c91d : jmp 0x45ce95
0x00000000004623c1 : jmp 0x4626d3
0x0000000000462e9b : jmp 0x462ea6
0x0000000000463b0b : jmp 0x463b16
0x0000000000436541 : jmp 0x4905ee91
0x00000000004365bc : jmp 0x4905ef0c
0x0000000000437915 : jmp 0x49060265
0x0000000000437990 : jmp 0x490602e0
0x000000000041ae58 : jmp 0x6cbe70f5
0x000000000043578b : jmp 0xffffffff8a05bd2d
0x0000000000450317 : jmp 0xffffffff8a071a03
0x00000000004643de : jmp 0xffffffffb70847aa
0x000000000046305a : jmp 0xffffffffc3eaa8fb
0x0000000000435b3f : jmp 0xffffffffea05c0e1
0x0000000000415508 : jmp qword ptr [rax]
0x0000000000420e4f : jmp qword ptr [rbx - 0x3d]
0x00000000004051ba : jmp qword ptr [rbx]
0x0000000000412011 : jmp qword ptr [rcx]
0x000000000040482a : jmp qword ptr [rdi]
0x0000000000449e35 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000404f4d : jmp qword ptr [rdx]
0x000000000040bf39 : jmp qword ptr [rsi]
0x00000000004025c7 : jmp rax
0x0000000000404099 : jmp rbx
0x0000000000411d76 : jmp rcx
0x00000000004490ce : jmp rdi
0x0000000000402607 : jmp rdx
0x00000000004062fc : jmp rsi
0x0000000000409d8e : jmp rsp
0x00000000004025f0 : jne 0x4025f7 ; pop rbp ; ret
0x000000000040e371 : jne 0x40e369 ; mov rax, rdx ; pop rbp ; ret
0x0000000000427861 : jne 0x427858 ; mov rsi, qword ptr [rsi] ; call rdx
0x00000000004328c6 : jne 0x432899 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000044121f : jne 0x441214 ; pop rbp ; ret
0x000000000044a5e6 : jne 0x44a5ef ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000045ad3a : jne 0x45ad3e ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x000000000046623f : jne 0x466220 ; mov edx, dword ptr [rbp - 0x2c] ; call 0x402487
0x000000000041c3d5 : jo 0x41c3dd ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421aeb : jo 0x421af3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042395c : jo 0x4239a2 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042413c : jo 0x424178 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426d13 : jo 0x426d74 ; ret
0x0000000000427113 : jo 0x427174 ; ret
0x0000000000427273 : jo 0x4272d4 ; ret
0x000000000042d6dc : jo 0x42d73d ; ret
0x000000000042f21e : jo 0x42f27f ; ret
0x000000000043eee6 : jo 0x43eea7 ; pop rsi ; sbb dh, cl ; ret
0x000000000044a801 : jo 0x44a862 ; ret
0x000000000044a924 : jo 0x44a985 ; ret
0x000000000044aa5e : jo 0x44aabf ; ret
0x000000000044b1cf : jo 0x44b230 ; ret
0x000000000044b1ce : jo 0x44b231 ; ret
0x000000000045dc2c : jo 0x45dc8d ; ret
0x0000000000465da4 : jo 0x465e05 ; ret
0x000000000042f83d : jp 0x42f889 ; ret 0x458b
0x000000000042fc5a : jp 0x42fca6 ; ret 0x8589
0x000000000042fd72 : jp 0x42fdbe ; ret 0x8589
0x0000000000460bd8 : jrcxz 0x460c3e ; ret 0x8589
0x0000000000460c2c : jrcxz 0x460c92 ; ret 0x8589
0x00000000004620e4 : jrcxz 0x46214a ; ret 0x8fb9
0x000000000046230f : jrcxz 0x462375 ; ret 0x8fb9
0x000000000040cae4 : js 0x40caf7 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000422335 : js 0x42233d ; add byte ptr [eax - 0x7f], cl ; ret 1
0x0000000000424904 : js 0x424938 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000449956 : js 0x44996a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046305c : js 0x463004 ; ret
0x00000000004630a3 : js 0x46304b ; ret
0x00000000004630dd : js 0x463085 ; ret
0x000000000046bdd8 : js 0x46bdcb ; cli ; call rbx
0x0000000000455434 : lahf ; ret 0xd284
0x000000000042742e : lahf ; ret 0xe280
0x000000000043a69e : lcall ptr [rax] ; ret
0x000000000042442a : lea ecx, dword ptr [rcx - 0x7bf02bbb] ; ret 1
0x000000000045aec9 : leave ; ret 0x48c4
0x00000000004501c8 : leave ; ret 0x89c4
0x000000000043a7f2 : ljmp ptr [rcx] ; ret
0x0000000000457756 : ljmp ptr [rip + 0xf000000] ; xchg eax, ebp ; ret 0xd284
0x0000000000435b3e : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05c0e2
0x0000000000435b3d : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05c0e3
0x0000000000404fc0 : lodsb al, byte ptr [rsi] ; ret
0x0000000000460cb8 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x00000000004622a5 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x000000000041a4bd : lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000046e61c : lodsb al, byte ptr [rsi] ; sub al, 0 ; add byte ptr [rax], dl ; jge 0x46e629 ; call qword ptr [rax]
0x0000000000435bd4 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000040e47a : loop 0x40e481 ; movzx eax, dl ; pop rbp ; ret
0x000000000040e47a : loop 0x40e483 ; movzx eax, dl ; pop rbp ; ret
0x0000000000451523 : loop 0x4514cc ; xlatb ; ret 0x8589
0x0000000000457e48 : loop 0x457df1 ; xlatb ; ret 0x8d48
0x0000000000462b09 : loop 0x462b5b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000462bf1 : loop 0x462c43 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000045028b : loope 0x450234 ; xlatb ; ret 0x8589
0x00000000004050bd : loopne 0x4050c8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e101 : loopne 0x40e10b ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e165 : loopne 0x40e170 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004121d7 : loopne 0x412226 ; mov esp, ebp ; pop rbp ; ret
0x00000000004121d6 : loopne 0x412227 ; mov esp, ebp ; pop rbp ; ret
0x0000000000424e3c : loopne 0x424e69 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425e22 : loopne 0x425deb ; ret 0x934a
0x0000000000425e21 : loopne 0x425dec ; ret 0x934a
0x00000000004265dc : loopne 0x4265ec ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426cf2 : loopne 0x426d40 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000426cf1 : loopne 0x426d41 ; mov esi, dword ptr [rcx] ; call rax
0x00000000004270f2 : loopne 0x427140 ; mov esi, dword ptr [rcx] ; call rax
0x00000000004270f1 : loopne 0x427141 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000427252 : loopne 0x4272a0 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000427251 : loopne 0x4272a1 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000429809 : loopne 0x429812 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042cfbc : loopne 0x42cfc5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d433 : loopne 0x42d43c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f710 : loopne 0x42f763 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000433c47 : loopne 0x433c50 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434ee0 : loopne 0x434ee9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434f00 : loopne 0x434f4e ; mov edi, dword ptr [rcx] ; call rax
0x0000000000434eff : loopne 0x434f4f ; mov edi, dword ptr [rcx] ; call rax
0x0000000000434fcc : loopne 0x434fd5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000435064 : loopne 0x43506d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043bc31 : loopne 0x43bc3a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043c671 : loopne 0x43c67a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043d192 : loopne 0x43d1e2 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043d191 : loopne 0x43d1e3 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043d512 : loopne 0x43d562 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043d511 : loopne 0x43d563 ; add esp, 0x20 ; pop rbp ; ret
0x000000000044192e : loopne 0x441937 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045b8ff : loopne 0x45b930 ; ret
0x000000000045b8fe : loopne 0x45b931 ; ret
0x000000000045be03 : loopne 0x45be0c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045d970 : loopne 0x45d979 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045dd7c : loopne 0x45ddcc ; add esp, 0x40 ; pop rbp ; ret
0x000000000045dd7b : loopne 0x45ddcd ; add esp, 0x40 ; pop rbp ; ret
0x000000000046de19 : loopne 0x46de1b ; jmp rdx
0x000000000045a44b : mov ah, -0x39 ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x00000000004316d7 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043b367 : mov ah, 0x2d ; push rcx ; ret 0xe86c
0x000000000043b3b2 : mov ah, 0x2d ; push rdx ; ret 0xe86c
0x000000000043b335 : mov ah, 0x2d ; xchg eax, ebp ; ret
0x000000000043b380 : mov ah, 0x2d ; xchg eax, esi ; ret
0x0000000000416d10 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000415ebf : mov al, -0x18 ; jmp 0x415e88
0x000000000041ea4c : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046552a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041784e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427a54 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423bfc : mov al, 0x36 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042341c : mov al, 0x40 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421133 : mov al, 0x48 ; add esp, 0x3c0 ; pop rbp ; ret
0x0000000000441aeb : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043be04 : mov al, 0x48 ; add esp, 0xc0 ; pop rbp ; ret
0x000000000043180b : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042912f : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000462f5d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000463759 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426bae : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427c0d : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000462caf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000462cae : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000462c2f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000044b15c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000462c33 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000450270 : mov bl, 0x5a ; ret
0x000000000042d931 : mov byte ptr [0x6701a8], al ; pop rbp ; ret
0x0000000000430895 : mov byte ptr [r15], r9b ; test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000042f642 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000046bf98 : mov byte ptr [rax - 5], cl ; call rdx
0x0000000000427fef : mov byte ptr [rax], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043ed4a : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004494a8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415e1f : mov byte ptr [rbp - 0x731], al ; call 0x4020c8
0x0000000000420907 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000043a2bf : mov byte ptr [rcx + 0xf], -0x6e ; ret 0x8041
0x000000000046e198 : mov byte ptr [rcx - 1], cl ; jmp qword ptr [rdi]
0x0000000000430896 : mov byte ptr [rdi], cl ; test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000402623 : mov byte ptr [rip + 0x26d00e], 1 ; ret
0x000000000046b929 : mov ch, -1 ; jmp rsp
0x0000000000437f5d : mov dh, -0x39 ; pop rbp ; ret
0x000000000040e47d : mov dh, -0x3e ; pop rbp ; ret
0x000000000042915d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427895 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432443 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041c533 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004292f3 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e1d8 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426bb4 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004235d9 : mov dh, -0x47 ; pop rsi ; and byte ptr [rcx], al ; ret 0x558a
0x000000000043ab87 : mov dh, 0x45 ; ret
0x000000000043eee5 : mov dh, byte ptr [rax - 0x46] ; pop rsi ; sbb dh, cl ; ret
0x0000000000463885 : mov dl, -0x47 ; ret
0x0000000000425026 : mov dl, -0x47 ; ret 0x240e
0x00000000004280f2 : mov dl, 0x30 ; ret
0x000000000042d90d : mov dword ptr [0x6701a0], edi ; pop rbp ; ret
0x00000000004417a7 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044156b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004416df : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044121e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x0000000000436ce9 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x0000000000436e5b : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000440779 : mov dword ptr [rbp - 0x124], ecx ; call rdx
0x0000000000440905 : mov dword ptr [rbp - 0x12c], ecx ; call rdx
0x00000000004208e4 : mov dword ptr [rbp - 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416d0e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043fe25 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x44026b
0x00000000004623be : mov dword ptr [rbp - 0x7c], eax ; jmp 0x4626d6
0x0000000000432811 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x000000000043365f : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000440cef : mov dword ptr [rbp - 0xb8], ecx ; call rdx
0x00000000004277af : mov dword ptr [rbp - 0xc4], ecx ; call rdx
0x0000000000416b07 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416b35 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044121a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000042bea5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044aeb5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000044195d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043385a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000437b60 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000429428 : mov dword ptr [rdx], ecx ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004579ea : mov eax, 0xc700003e ; test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000043edc4 : mov eax, 0xce185e2d ; ret
0x000000000044145f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000045dcbb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e633 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045d99f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042d6d6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044b231 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042e4cc : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000046012d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000428779 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000460059 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000045ddbe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000437047 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043ebe0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000437d90 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043207f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000426e3f : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043d190 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045dd7a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004121d5 : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b0ed : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f2e2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000441354 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044145c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000045be5d : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x0000000000441565 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004328cc : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000412f41 : mov eax, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rax] ; call 0x42f238
0x00000000004416e1 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045bcba : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000426d0d : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000465efa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042295f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000433361 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045b978 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000431a20 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004643a0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000465d9e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042bea9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000431d3d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000431d5d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000431d7d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044b1ad : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000044b1ed : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044b1cd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000425024 : mov eax, ebp ; mov dl, -0x47 ; ret 0x240e
0x000000000044ae9c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044afcf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b37a : mov eax, edi ; pop rbp ; ret
0x0000000000433e31 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e374 : mov eax, edx ; pop rbp ; ret
0x000000000044af43 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000462c30 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000045bab1 : mov eax, esi ; pop rbp ; ret
0x0000000000457af6 : mov ebp, 0xfffffdef ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040264b : mov ebp, esp ; call rax
0x00000000004025b1 : mov ebp, esp ; ja 0x4025bc ; pop rbp ; ret
0x000000000044aeb2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040e292 : mov ebx, 0x2e9a0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045b546 : mov ebx, 0x43b9d064 ; ret
0x00000000004348cd : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000441568 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000434835 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000434efe : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000426cf0 : mov ecx, dword ptr [rbp - 0x20] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427498 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427803 : mov ecx, dword ptr [rbp - 0x40] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000462b6d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000462b3d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000405166 : mov ecx, gs ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402645 : mov edi, 0x66ee20 ; mov rbp, rsp ; call rax
0x00000000004025c2 : mov edi, 0x66f5d8 ; jmp rax
0x0000000000402602 : mov edi, 0x66f5d8 ; jmp rdx
0x0000000000415d6d : mov edi, 0xb9f39baa ; or ebp, edi ; ret
0x0000000000465d3b : mov edi, dword ptr [rbp - 0x10] ; call 0x402015
0x0000000000425f8e : mov edi, dword ptr [rbp - 0x18] ; call 0x426af9
0x0000000000415ebd : mov edi, dword ptr [rbp - 0x50] ; call 0x4021b5
0x0000000000437b5c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000431d39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000431d59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000431d79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044b1a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000044b1e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044b1c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004348d1 : mov edi, dword ptr [rcx] ; call rax
0x0000000000426ced : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x20] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427495 : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427800 : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x40] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042785d : mov edi, dword ptr [rsi] ; mov rsi, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x00000000004662b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004662b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000466241 : mov edx, dword ptr [rbp - 0x2c] ; call 0x402485
0x000000000043058c : mov edx, dword ptr [rbp - 0x68] ; call 0x401f29
0x000000000044b235 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412f45 : mov esi, dword ptr [rax] ; call 0x42f234
0x0000000000427860 : mov esi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x000000000046623e : mov esi, dword ptr [rbp - 0x28] ; mov edx, dword ptr [rbp - 0x2c] ; call 0x402488
0x0000000000426cf4 : mov esi, dword ptr [rcx] ; call rax
0x0000000000427864 : mov esi, dword ptr [rsi] ; call rdx
0x0000000000402600 : mov esi, eax ; mov edi, 0x66f5d8 ; jmp rdx
0x00000000004328c9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004554dc : mov esp, 0x1fffffd ; ret 0x9589
0x000000000042b84f : mov esp, 0x81f8558b ; ret 0xffd0
0x000000000045a123 : mov esp, 0xc7fffff7 ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x00000000004226b8 : mov esp, dword ptr [rax + 0x2e959] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004121d9 : mov esp, ebp ; pop rbp ; ret
0x000000000042d90c : mov qword ptr [0x6701a0], rdi ; pop rbp ; ret
0x000000000044121d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004208e3 : mov qword ptr [rbp - 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000441219 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000042bea4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044aeb4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000044195c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000437b5f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000429427 : mov qword ptr [rdx], rcx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045a44a : mov r12b, -0x39 ; test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x000000000043b366 : mov r12b, 0x2d ; push rcx ; ret 0xe86c
0x000000000043b3b1 : mov r12b, 0x2d ; push rdx ; ret 0xe86c
0x000000000043b334 : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x000000000043b37f : mov r12b, 0x2d ; xchg eax, esi ; ret
0x0000000000416d0f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043edc3 : mov r8d, 0xce185e2d ; ret
0x000000000045dcba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e632 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045d99e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042d6d5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044b230 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042e4cb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000045ddbd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000437046 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043ebdf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000437d8f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043207e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043d18f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045dd79 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004121d4 : mov rax, qword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f2e1 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000441353 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044145b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004328cb : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000412f40 : mov rax, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rax] ; call 0x42f239
0x000000000044a7fa : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000433360 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045b977 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042bea8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000431d3c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000431d5c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000431d7c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044b1ac : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000044b1ec : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044b1cc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041b379 : mov rax, rdi ; pop rbp ; ret
0x0000000000433e30 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e373 : mov rax, rdx ; pop rbp ; ret
0x000000000040264a : mov rbp, rsp ; call rax
0x00000000004025b0 : mov rbp, rsp ; ja 0x4025bd ; pop rbp ; ret
0x000000000044aeb1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004348cc : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000434834 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000434efd : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000426cef : mov rcx, qword ptr [rbp - 0x20] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427497 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427802 : mov rcx, qword ptr [rbp - 0x40] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000465d3a : mov rdi, qword ptr [rbp - 0x10] ; call 0x402016
0x0000000000415ebc : mov rdi, qword ptr [rbp - 0x50] ; call 0x4021b6
0x0000000000437b5b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000431d38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000431d58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000431d78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044b1a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000044b1e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044b1c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004348d0 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044b234 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412f44 : mov rsi, qword ptr [rax] ; call 0x42f235
0x000000000042785f : mov rsi, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x000000000046623d : mov rsi, qword ptr [rbp - 0x28] ; mov edx, dword ptr [rbp - 0x2c] ; call 0x402489
0x0000000000426cf3 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000427863 : mov rsi, qword ptr [rsi] ; call rdx
0x000000000042785e : mov rsi, qword ptr ds:[rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x00000000004025ff : mov rsi, rax ; mov edi, 0x66f5d8 ; jmp rdx
0x00000000004328c8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004121d8 : mov rsp, rbp ; pop rbp ; ret
0x0000000000411518 : mov word ptr [r15], cs ; pushfq ; ret 0xe280
0x000000000044a5ea : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000044a5eb : mov word ptr [rax + 0x3a], fs ; ret
0x000000000043060b : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000411506 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000411519 : mov word ptr [rdi], cs ; pushfq ; ret 0xe280
0x0000000000447d3c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000042561c : movabs al, byte ptr [0x5d20c48348000019] ; ret
0x000000000042537c : movabs al, byte ptr [0x5d20c4834800001d] ; ret
0x000000000042299c : movabs al, byte ptr [0x5d20c4834800004e] ; ret
0x0000000000463afe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000413ecf : movabs al, byte ptr [0x840ffffffbb88589] ; jmp qword ptr [rdx]
0x0000000000450c2e : movabs dword ptr [0x840fffffe9c48589], eax ; ret
0x000000000045be9f : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000046cc14 : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, bl ; or bh, ah ; call qword ptr [rax]
0x000000000046bc14 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp qword ptr [rdi]
0x000000000045c91c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x45ce96
0x000000000042b8b1 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040ca2b : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x26ba
0x0000000000406bf4 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8589
0x000000000040c9f1 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe8ba
0x000000000045028c : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; ret 0x8589
0x0000000000457e49 : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; ret 0x8d48
0x0000000000416252 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ef71 : movsx eax, byte ptr [rbp - 5] ; add rsp, 8 ; pop rbp ; ret
0x000000000043b99c : movsxd rax, ecx ; pop rbp ; ret
0x0000000000427894 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432442 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041c532 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004292f2 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e1d7 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426bb3 : movzx eax, al ; pop rbp ; ret
0x0000000000462c32 : movzx eax, ax ; pop rbp ; ret
0x0000000000437f5c : movzx eax, bh ; pop rbp ; ret
0x000000000042090a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042915c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044b15b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000437f5b : movzx eax, dil ; pop rbp ; ret
0x000000000040e47c : movzx eax, dl ; pop rbp ; ret
0x0000000000410bb1 : mul byte ptr [rsi] ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000427c0e : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000427c0f : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042be95 : nop ; add dword ptr [rdi], esp ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004662d8 : nop dword ptr [rax + rax] ; ret
0x000000000045ad0a : or al, 0 ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x0000000000415545 : or al, 0 ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x00000000004402a0 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000449957 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000430bce : or al, 0x2d ; ret
0x0000000000455432 : or al, 0xf ; lahf ; ret 0xd284
0x0000000000455459 : or al, 0xf ; xchg eax, esp ; ret 0xd284
0x000000000041c4c7 : or al, 0xffffffffffffff8a ; push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000043f427 : or al, 0xffffffffffffffa8 ; pop rax ; ret 0x8589
0x000000000042b905 : or al, 0xffffffffffffffc7 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046cc39 : or al, 0xfffffffffffffffc ; call qword ptr [rsi]
0x000000000042b915 : or al, bh ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046cc19 : or bh, ah ; call qword ptr [rax]
0x0000000000435b3b : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05c0e5
0x000000000042b8e5 : or bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046be98 : or bl, bh ; cli ; jmp qword ptr [rbx]
0x0000000000421da5 : or byte ptr [r15], 0x84 ; ret 5
0x000000000040e43f : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x000000000042b996 : or byte ptr [rax + 0x45c7cf4d], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b2f4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043f5ab : or byte ptr [rax], al ; add cl, ch ; ret
0x000000000042aef9 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000043b956 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421da6 : or byte ptr [rdi], 0x84 ; ret 5
0x000000000040e440 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000413f90 : or ch, bh ; ret
0x0000000000421da0 : or dword ptr [rax + 0x4589877d], edx ; or byte ptr [rdi], 0x84 ; ret 5
0x000000000043c259 : or dword ptr [rax - 0x75], 0x8148e855 ; ret 0x10
0x00000000004158a1 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000045bfc7 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041dfea : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042b925 : or eax, 0x44a445c7 ; ret
0x000000000043eee4 : or eax, 0x5eba708a ; sbb dh, cl ; ret
0x000000000044a9e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cae5 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041d676 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x62d9445], cl ; ret 0xd5bb
0x000000000042b945 : or eax, edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045a979 : or ebp, dword ptr [rdi - 0x5bc746ce] ; ret
0x0000000000413fe4 : or ebp, edi ; ret
0x000000000042b935 : or edi, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000462acb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000462b41 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000435b3a : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea05c0e6
0x0000000000462aca : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000457e46 : out -0x47, al ; loop 0x457df3 ; xlatb ; ret 0x8d48
0x000000000040a5bb : out -0x47, al ; ret
0x000000000043e52d : out 0x6e, al ; call 0xa0ca7f1
0x0000000000437f59 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000045baac : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000462f5f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046bdd9 : out dx, al ; cli ; call rbx
0x0000000000415b97 : out dx, al ; sub rax, -0x44a38c47 ; ret
0x000000000041602e : out dx, eax ; add dword ptr [rax], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x0000000000429131 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041eab9 : out dx, eax ; jmp 0x41ebf4
0x0000000000462b40 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000438c50 : out dx, eax ; ret
0x000000000045b01a : outsb dx, byte ptr [rsi] ; call 0x47ff72aa
0x000000000043e52e : outsb dx, byte ptr [rsi] ; call 0xa0ca7f0
0x0000000000451507 : outsb dx, byte ptr [rsi] ; call 0xffffffff85ced797
0x00000000004324e9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000436013 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000425023 : outsd dx, dword ptr [rsi] ; mov eax, ebp ; mov dl, -0x47 ; ret 0x240e
0x00000000004662cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004662ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000449c82 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004662d0 : pop r14 ; pop r15 ; ret
0x0000000000449c84 : pop r15 ; pop rbp ; ret
0x00000000004662d2 : pop r15 ; ret
0x00000000004635d8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x000000000040a5b8 : pop rax ; popfq ; stc ; out -0x47, al ; ret
0x000000000043fecc : pop rax ; ret 0x3bb9
0x000000000043f429 : pop rax ; ret 0x8589
0x000000000042347d : pop rbp ; and byte ptr [rcx], al ; ret 0x4589
0x0000000000402622 : pop rbp ; mov byte ptr [rip + 0x26d00e], 1 ; ret
0x00000000004025c1 : pop rbp ; mov edi, 0x66f5d8 ; jmp rax
0x00000000004025fe : pop rbp ; mov rsi, rax ; mov edi, 0x66f5d8 ; jmp rdx
0x00000000004662cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004662cf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025b5 : pop rbp ; ret
0x0000000000427980 : pop rbp ; ret 0x8943
0x0000000000427a07 : pop rbp ; ret 0xe943
0x0000000000449c81 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cae8 : pop rbx ; pop rbp ; ret
0x000000000046cf99 : pop rcx ; cld ; call rax
0x000000000046cf79 : pop rcx ; cld ; jmp rsi
0x0000000000463884 : pop rcx ; mov dl, -0x47 ; ret
0x00000000004290f4 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000449c85 : pop rdi ; pop rbp ; ret
0x00000000004662d3 : pop rdi ; ret
0x0000000000463ccb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000450271 : pop rdx ; ret
0x0000000000458989 : pop rdx ; ret 0x78b9
0x00000000004502c5 : pop rdx ; ret 0x8589
0x00000000004234bf : pop rsi ; and byte ptr [rcx], al ; ret 0x4589
0x00000000004235db : pop rsi ; and byte ptr [rcx], al ; ret 0x558a
0x0000000000449c83 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004662d1 : pop rsi ; pop r15 ; ret
0x000000000043edc6 : pop rsi ; sbb dh, cl ; ret
0x00000000004662cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000443b92 : pop rsp ; ret
0x0000000000429b1f : pop rsp ; ret 0x1de9
0x0000000000429c1b : pop rsp ; ret 0x21e9
0x0000000000429997 : pop rsp ; ret 0x4589
0x0000000000432500 : pop rsp ; ret 0xf66
0x000000000046b428 : pop rsp ; ret 0xfffc
0x000000000045a239 : popfq ; idiv bh ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000041fdf5 : popfq ; ret 0xd284
0x000000000040a5b9 : popfq ; stc ; out -0x47, al ; ret
0x000000000042fc54 : push 0x2dffffff ; adc al, 0x7a ; ret 0x8589
0x000000000042f864 : push 0x2dffffff ; ret 0x6b1d
0x000000000040b673 : push 0x3d ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000045b89f : push 0x5b000020 ; pop rbp ; ret
0x000000000045772f : push qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044937f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x000000000044b1ae : push r8 ; pop rbp ; ret
0x000000000045a7a6 : push rax ; adc al, -0x7f ; ret 0x76c
0x000000000042317c : push rax ; add byte ptr [r8], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404fbb : push rax ; clc ; add al, ch ; lodsb al, byte ptr [rsi] ; ret
0x0000000000416d14 : push rax ; pop rbp ; ret
0x000000000043a477 : push rax ; ret
0x00000000004591e3 : push rax ; sbb al, -0x7f ; ret 1
0x000000000045d27b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000043c16d : push rbp ; call 0x110642bf
0x000000000043c25c : push rbp ; call 0x110643ae
0x000000000043cbad : push rbp ; call 0x11064cff
0x000000000043cc9c : push rbp ; call 0x11064dee
0x0000000000404872 : push rbp ; call 0xffffffffca7cd3ca
0x000000000044b236 : push rbp ; clc ; pop rbp ; ret
0x000000000043058d : push rbp ; cwde ; call 0x401f28
0x000000000045db83 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000434443 : push rbp ; fsubr st(1) ; ret 0
0x00000000004474b8 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000044769e : push rbp ; in al, -0x7f ; ret 0xffbf
0x0000000000447744 : push rbp ; in al, -0x7f ; ret 0xffc5
0x0000000000447772 : push rbp ; in al, -0x7f ; ret 0xffd5
0x0000000000447840 : push rbp ; in al, -0x7f ; ret 0xffd8
0x00000000004479d6 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000040e452 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x000000000041c4c9 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000042f641 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000402644 : push rbp ; mov edi, 0x66ee20 ; mov rbp, rsp ; call rax
0x000000000042b84e : push rbp ; mov esp, 0x81f8558b ; ret 0xffd0
0x000000000044aeb0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040e458 : push rbp ; ret
0x0000000000435bce : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000045ad39 : push rbx ; jne 0x45ad3f ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x0000000000460c2b : push rbx ; jrcxz 0x460c93 ; ret 0x8589
0x00000000004620e3 : push rbx ; jrcxz 0x46214b ; ret 0x8fb9
0x000000000046230e : push rbx ; jrcxz 0x462376 ; ret 0x8fb9
0x00000000004226fd : push rcx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043b369 : push rcx ; ret 0xe86c
0x000000000040b221 : push rdx ; jle 0x40b210 ; ret
0x000000000040b721 : push rdx ; jle 0x40b710 ; ret
0x0000000000460bd7 : push rdx ; jrcxz 0x460c3f ; ret 0x8589
0x000000000043b3b4 : push rdx ; ret 0xe86c
0x000000000045a76d : push rsp ; idiv edi ; call qword ptr [rax - 0x163dcb52]
0x00000000004582ff : push rsp ; idiv edi ; call qword ptr [rcx]
0x0000000000457713 : push rsp ; idiv edi ; call qword ptr [rdi]
0x0000000000455674 : push rsp ; idiv edi ; call qword ptr [rdx]
0x000000000045732f : push rsp ; idiv edi ; call qword ptr [rsi]
0x000000000045756a : push rsp ; idiv edi ; call rbx
0x000000000045b18f : push rsp ; idiv edi ; call rcx
0x000000000045685f : push rsp ; idiv edi ; call rdi
0x000000000045a44e : push rsp ; idiv edi ; call rdx
0x0000000000458c11 : push rsp ; idiv edi ; call rsi
0x0000000000455630 : push rsp ; idiv edi ; call rsp
0x0000000000457680 : push rsp ; idiv edi ; jmp qword ptr [rax]
0x000000000045ae9b : push rsp ; idiv edi ; jmp qword ptr [rcx]
0x00000000004576c5 : push rsp ; idiv edi ; jmp qword ptr [rdi]
0x000000000045b38b : push rsp ; idiv edi ; jmp qword ptr [rdx]
0x0000000000454fd3 : push rsp ; idiv edi ; jmp qword ptr [rsi]
0x00000000004553b5 : push rsp ; idiv edi ; jmp rax
0x0000000000457e26 : push rsp ; idiv edi ; jmp rcx
0x000000000045aaa0 : push rsp ; idiv edi ; jmp rdi
0x0000000000459165 : push rsp ; idiv edi ; jmp rdx
0x0000000000458097 : push rsp ; idiv edi ; jmp rsp
0x000000000040c60a : pushfq ; ret 0x8445
0x000000000040410e : pushfq ; ret 0xd284
0x000000000041150c : pushfq ; ret 0xe280
0x00000000004223db : pushfq ; ret 0xe2f
0x0000000000462b3e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000462b6e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004008e8 : ret
0x00000000004297c2 : ret 0
0x0000000000426bda : ret 0x10
0x00000000004046e7 : ret 0x13e8
0x000000000040df9e : ret 0x148
0x00000000004218e8 : ret 0x14c
0x0000000000403957 : ret 0x16
0x000000000045784f : ret 0x17
0x000000000043ba58 : ret 0x17a6
0x0000000000460847 : ret 0x1a
0x0000000000429b20 : ret 0x1de9
0x000000000046378b : ret 0x2030
0x0000000000439f51 : ret 0x205
0x0000000000429c1c : ret 0x21e9
0x0000000000424fa5 : ret 0x240e
0x000000000040ca2d : ret 0x26ba
0x00000000004023f2 : ret 0x26ce
0x00000000004021f2 : ret 0x26cf
0x0000000000401ff2 : ret 0x26d0
0x00000000004324ea : ret 0x280f
0x000000000043967a : ret 0x28b
0x000000000042d665 : ret 0x29b9
0x0000000000446e97 : ret 0x2a
0x0000000000439d9f : ret 0x2b48
0x000000000044a1b6 : ret 0x2c1
0x000000000045e4c3 : ret 0x2c22
0x000000000045a774 : ret 0x2ce9
0x000000000044fe7f : ret 0x2e1e
0x000000000043d100 : ret 0x30
0x00000000004561f1 : ret 0x30b9
0x0000000000408163 : ret 0x37ad
0x000000000043fecd : ret 0x3bb9
0x0000000000460707 : ret 0x3bef
0x000000000043e0d9 : ret 0x413e
0x000000000040339c : ret 0x41fa
0x000000000042f79a : ret 0x42ab
0x0000000000443dfa : ret 0x43fa
0x0000000000411513 : ret 0x4589
0x000000000042f83f : ret 0x458b
0x0000000000422699 : ret 0x45c7
0x000000000042d28f : ret 0x46a6
0x000000000045b01d : ret 0x47b9
0x000000000045aeca : ret 0x48c4
0x0000000000456be0 : ret 0x4c
0x000000000041fc8c : ret 0x4ee8
0x0000000000433314 : ret 0x50e9
0x00000000004044a6 : ret 0x54e8
0x00000000004235de : ret 0x558a
0x00000000004197e2 : ret 0x558b
0x0000000000454773 : ret 0x5739
0x000000000043b6ef : ret 0x5be8
0x00000000004660a3 : ret 0x5e5
0x0000000000450d4f : ret 0x5f
0x000000000043fd75 : ret 0x65e8
0x000000000040c5e4 : ret 0x66e8
0x000000000042f869 : ret 0x6b1d
0x000000000041ae5a : ret 0x6c7c
0x00000000004099d7 : ret 0x73e8
0x000000000042d7ea : ret 0x7406
0x000000000045a7a9 : ret 0x76c
0x000000000045898a : ret 0x78b9
0x00000000004062a7 : ret 0x7d9c
0x000000000043a2c3 : ret 0x8041
0x000000000042be3f : ret 0x8148
0x0000000000436544 : ret 0x8348
0x0000000000404b9c : ret 0x8445
0x0000000000406bf6 : ret 0x8589
0x000000000044ed1d : ret 0x8909
0x0000000000443c90 : ret 0x891a
0x0000000000414c5e : ret 0x8930
0x000000000046313c : ret 0x8934
0x000000000043dbd7 : ret 0x893e
0x00000000004033b9 : ret 0x8940
0x0000000000427981 : ret 0x8943
0x0000000000415d1f : ret 0x8948
0x000000000043583c : ret 0x897f
0x000000000041aa18 : ret 0x8992
0x00000000004643e1 : ret 0x89b6
0x00000000004501c9 : ret 0x89c4
0x0000000000460cb9 : ret 0x89cc
0x000000000041d7dd : ret 0x89e9
0x0000000000460360 : ret 0x89ec
0x0000000000413c81 : ret 0x8af3
0x0000000000463118 : ret 0x8b34
0x0000000000412ffb : ret 0x8b48
0x0000000000421115 : ret 0x8b4c
0x0000000000421909 : ret 0x8b4d
0x0000000000455b0e : ret 0x8bb9
0x00000000004622a6 : ret 0x8bcc
0x000000000041e802 : ret 0x8be9
0x0000000000460492 : ret 0x8bec
0x0000000000457e4b : ret 0x8d48
0x00000000004620e6 : ret 0x8fb9
0x0000000000425e24 : ret 0x934a
0x0000000000439eb8 : ret 0x9589
0x000000000045e17c : ret 0x979f
0x000000000041b5a3 : ret 0x97e8
0x000000000042d230 : ret 0x9ae8
0x0000000000423825 : ret 0x9b4e
0x000000000043d839 : ret 0x9c8
0x0000000000429912 : ret 0x9cb3
0x0000000000439835 : ret 0xa
0x0000000000432e9a : ret 0xa3b9
0x0000000000435b79 : ret 0xa6e9
0x0000000000447b65 : ret 0xa9b9
0x00000000004435e2 : ret 0xade6
0x00000000004590f3 : ret 0xade9
0x0000000000438e10 : ret 0xaf51
0x000000000040ca90 : ret 0xb0
0x00000000004472d0 : ret 0xb91a
0x000000000041560f : ret 0xb930
0x0000000000404d1a : ret 0xb940
0x0000000000434476 : ret 0xb948
0x000000000041abd8 : ret 0xb992
0x000000000046469b : ret 0xb9b6
0x000000000041e2f3 : ret 0xbeb9
0x00000000004025e5 : ret 0xc148
0x000000000040e47e : ret 0xc35d
0x000000000044d71f : ret 0xc4ef
0x00000000004204f9 : ret 0xc6a
0x0000000000448b10 : ret 0xcae8
0x00000000004215b7 : ret 0xce82
0x000000000040407b : ret 0xd284
0x0000000000449383 : ret 0xd4e9
0x000000000041d67e : ret 0xd5bb
0x000000000045073f : ret 0xd867
0x00000000004525df : ret 0xd9ee
0x0000000000435b42 : ret 0xdde9
0x000000000040e443 : ret 0xe280
0x000000000042219e : ret 0xe2f
0x000000000041f546 : ret 0xe646
0x00000000004058b3 : ret 0xe709
0x000000000043b36a : ret 0xe86c
0x000000000040c9f3 : ret 0xe8ba
0x000000000044e43f : ret 0xe8f4
0x0000000000455636 : ret 0xe909
0x0000000000427a08 : ret 0xe943
0x0000000000435bd7 : ret 0xe97f
0x000000000044999c : ret 0xee8
0x0000000000433275 : ret 0xefe9
0x000000000041a4be : ret 0xf0
0x000000000041105a : ret 0xf280
0x00000000004040bd : ret 0xf40
0x000000000040bf9a : ret 0xf41
0x0000000000432501 : ret 0xf66
0x0000000000453a8b : ret 0xf727
0x000000000040bf8d : ret 0xf748
0x000000000043f61b : ret 0xf9b5
0x000000000043e0d0 : ret 0xfae8
0x000000000044134a : ret 0xfc0b
0x0000000000419a1a : ret 0xfe8a
0x0000000000434126 : ret 0xff3
0x000000000041faff : ret 0xff9f
0x0000000000448e5e : ret 0xffa5
0x000000000041fb2d : ret 0xffbf
0x000000000044810b : ret 0xffc4
0x0000000000447747 : ret 0xffc5
0x000000000042b854 : ret 0xffd0
0x0000000000447775 : ret 0xffd5
0x0000000000447843 : ret 0xffd8
0x00000000004481b1 : ret 0xffd9
0x000000000041fb83 : ret 0xffdb
0x000000000041fbb1 : ret 0xffe0
0x0000000000465d40 : ret 0xfff9
0x0000000000446aae : ret 0xfffa
0x000000000042d6ba : ret 0xfffb
0x000000000046b429 : ret 0xfffc
0x0000000000410f33 : ret 0xfffd
0x0000000000415e27 : ret 0xfffe
0x000000000043a413 : ret 0xffff
0x000000000040d50e : ret 1
0x0000000000411fbc : ret 2
0x0000000000400780 : ret 3
0x0000000000449497 : ret 4
0x000000000041e626 : ret 5
0x000000000041d95e : ret 6
0x000000000041e034 : ret 7
0x0000000000411917 : ret 8
0x000000000042b483 : ret 9
0x000000000045a8c3 : rol bh, -0x7b ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000045aac2 : rol bh, 1 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x0000000000413281 : rol byte ptr [rax + rax], cl ; add cl, ch ; ret
0x00000000004200d7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000433bc2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041298e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ea2b : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000465a95 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e8fd : rol byte ptr [rip + 0xf000000], 1 ; xchg eax, esp ; ret 0xd284
0x00000000004305a7 : rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000045a8c2 : rol r15b, -0x7b ; push rsp ; idiv edi ; call qword ptr [rdi]
0x000000000045aac1 : rol r15b, 1 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x0000000000441566 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000427804 : ror byte ptr [r8 - 0x75], 0x31 ; call rax
0x00000000004025ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025fb ; pop rbp ; ret
0x0000000000427805 : ror byte ptr [rax - 0x75], 0x31 ; call rax
0x000000000041fc89 : ror byte ptr [rax - 0x77], 1 ; ret 0x4ee8
0x000000000043fd72 : ror byte ptr [rax - 0x77], 1 ; ret 0x65e8
0x000000000041c534 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004292f4 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000435d1b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ebe2 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000441567 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000045db80 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000043cc99 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0x11064df1
0x00000000004099fb : sahf ; ret
0x000000000044ed1c : sahf ; ret 0x8909
0x0000000000404a14 : sahf ; ret 0xd284
0x0000000000455635 : sahf ; ret 0xe909
0x000000000040bf94 : sal ah, -1 ; dec dword ptr [rax + 0x39] ; ret 0xf41
0x000000000045be9a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000045a2cc : salc ; adc eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rsi]
0x0000000000464b5e : salc ; ret
0x000000000040e291 : sar byte ptr [rbx + 0x2e9a0], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000457849 : sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000046d879 : sar ch, 1 ; jmp qword ptr [rax]
0x000000000040e470 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x00000000004025ee : sar eax, 1 ; jne 0x4025f9 ; pop rbp ; ret
0x000000000046d999 : sar ebp, 1 ; jmp qword ptr [rdx]
0x00000000004025ed : sar rax, 1 ; jne 0x4025fa ; pop rbp ; ret
0x00000000004591e4 : sbb al, -0x7f ; ret 1
0x000000000046c9b0 : sbb al, 0 ; add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add byte ptr [rax], bl ; ret
0x000000000046b98c : sbb al, 0 ; add byte ptr [rax], al ; adc byte ptr [rbp - 7], ah ; call rax
0x000000000046c9d0 : sbb al, 0 ; add byte ptr [rax], al ; adc byte ptr fs:[rax], al ; add al, bh ; ret
0x000000000046d758 : sbb bh, cl ; std ; jmp qword ptr [rdx]
0x000000000046beb8 : sbb bl, bh ; cli ; call qword ptr [rax]
0x000000000041aff4 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044a619 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041eab8 : sbb ch, bh ; jmp 0x41ebf5
0x000000000043edc7 : sbb dh, cl ; ret
0x000000000045d763 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000447b5e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000045b385 : sbb eax, 0xc7000005 ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000046d755 : sbb eax, 0xcf180000 ; std ; jmp qword ptr [rdx]
0x000000000042b8f5 : sbb eax, edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000457363 : scasd eax, dword ptr [rdi] ; cli ; inc edi ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000433e54 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e476 : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000433e56 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000433856 : shl byte ptr [rdi + 0x4f890046], 0x10 ; pop rbp ; ret
0x0000000000402626 : shl byte ptr [rsi], 1 ; add byte ptr [rcx], al ; ret
0x000000000042822b : shl dh, 1 ; mov dl, 0x30 ; ret
0x000000000043251f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000462b6f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000462b08 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042822a : shl r14b, 1 ; mov dl, 0x30 ; ret
0x0000000000438e80 : shr byte ptr [rsi + 0xe], cl ; ret
0x00000000004243dc : shr byte ptr [rsi], 1 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000438b38 : shr dword ptr [rsi + 0xe], 1 ; ret
0x0000000000419f87 : shr eax, 1 ; ret
0x0000000000462b3f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000462ac8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000411053 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000046b992 : stc ; call rax
0x000000000040a5ba : stc ; out -0x47, al ; ret
0x000000000046d57a : std ; call qword ptr [rbx]
0x000000000046dbfa : std ; call qword ptr [rdx]
0x000000000046d87a : std ; jmp qword ptr [rax]
0x000000000046daba : std ; jmp qword ptr [rdi]
0x000000000046d75a : std ; jmp qword ptr [rdx]
0x0000000000413f91 : std ; ret
0x000000000042ef74 : sti ; add rsp, 8 ; pop rbp ; ret
0x000000000046bfba : sti ; call qword ptr [rax]
0x000000000046c93a : sti ; call qword ptr [rdi]
0x000000000046c7da : sti ; call qword ptr [rsi]
0x000000000046bf9a : sti ; call rdx
0x000000000046beb9 : sti ; cli ; call qword ptr [rax]
0x000000000046be99 : sti ; cli ; jmp qword ptr [rbx]
0x0000000000403887 : stosb byte ptr [rdi], al ; ret
0x000000000046c7d9 : stosb byte ptr [rdi], al ; sti ; call qword ptr [rsi]
0x000000000042ec90 : sub al, -0x4c ; ret
0x000000000046e5ed : sub al, 0 ; add byte ptr [rax], ah ; jge 0x46e5f8 ; call qword ptr [rax]
0x000000000046e61d : sub al, 0 ; add byte ptr [rax], dl ; jge 0x46e628 ; call qword ptr [rax]
0x0000000000444ba7 : sub al, 0x38 ; ret 0x8589
0x0000000000447b63 : sub al, 0x38 ; ret 0xa9b9
0x000000000046cf78 : sub byte ptr [rcx - 4], bl ; jmp rsi
0x000000000045767a : sub byte ptr [rdx], al ; add bh, al ; test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000457362 : sub ch, byte ptr [rdi - 0x7a380006] ; push rsp ; idiv edi ; call qword ptr [rsi]
0x000000000046db18 : sub ch, dl ; std ; jmp qword ptr [rdi]
0x000000000045bea0 : sub cl, al ; pop rbp ; ret
0x0000000000458b2c : sub eax, 0x85c70000 ; push rsp ; idiv edi ; jmp qword ptr [rsi]
0x0000000000415b99 : sub eax, 0xbb5c73b9 ; ret
0x0000000000457757 : sub eax, 0xf000000 ; xchg eax, ebp ; ret 0xd284
0x000000000045baab : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x0000000000466341 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000415b98 : sub rax, -0x44a38c47 ; ret
0x0000000000466340 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040d508 : test ah, cl ; add al, 0 ; add cl, ch ; ret 1
0x000000000046dbf8 : test al, -0x2b ; std ; call qword ptr [rdx]
0x000000000045d29b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000450d46 : test al, -0x77 ; test dword ptr [rcx + rbp*8 - 0x7bf00001], ebx ; ret 0x5f
0x00000000004658d8 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000435744 : test al, 0x2d ; call 0xffffffff8a05bcea
0x0000000000435743 : test al, 0x2d ; call 0xffffffff8a05bceb
0x0000000000435789 : test al, 0x2d ; jmp 0xffffffff8a05bd2f
0x0000000000435788 : test al, 0x2d ; jmp 0xffffffff8a05bd30
0x0000000000435a2c : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000435838 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000043e864 : test al, 0x48 ; add esp, 0x260 ; pop rbp ; ret
0x0000000000426d0f : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000043fecb : test al, 0x58 ; ret 0x3bb9
0x000000000043f428 : test al, 0x58 ; ret 0x8589
0x000000000043304b : test al, 0x70 ; ret 0x4589
0x0000000000433312 : test al, 0x70 ; ret 0x50e9
0x0000000000433273 : test al, 0x70 ; ret 0xefe9
0x000000000045d178 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000046cc98 : test al, 0xf ; cld ; jmp rbx
0x000000000046cbd8 : test al, 6 ; cld ; call qword ptr [rbx]
0x000000000043f5a9 : test bh, bh ; or byte ptr [rax], al ; add cl, ch ; ret
0x00000000004662da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000431164 : test byte ptr [rbx - 0x16fffffd], dh ; ret 1
0x000000000042aef7 : test byte ptr [rcx - 0x16fffff8], dl ; ret 1
0x000000000046e0f4 : test byte ptr [rdi], ah ; add byte ptr [rax], al ; call 0x2446e049
0x000000000046dbf4 : test byte ptr [rdx], ah ; add byte ptr [rax], al ; test al, -0x2b ; std ; call qword ptr [rdx]
0x000000000045bfc5 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041dfe8 : test byte ptr [rip - 0x16fffff7], ah ; ret 1
0x000000000045fa64 : test ch, cl ; ret
0x0000000000430898 : test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000043b996 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000413280 : test dl, dl ; add al, 0 ; add cl, ch ; ret
0x00000000004409dc : test dword ptr [rax - 0x75], 0x81489855 ; ret 1
0x000000000044095a : test dword ptr [rax - 0x75], 0x8148a855 ; ret 1
0x000000000043a4d5 : test dword ptr [rax - 0x75], 0x89488045 ; ret 0x8148
0x000000000041005e : test dword ptr [rbp + rsi*8 - 0x7bf00001], eax ; ret
0x0000000000450d48 : test dword ptr [rcx + rbp*8 - 0x7bf00001], ebx ; ret 0x5f
0x000000000041fdc1 : test dword ptr [rdi + rbx*8 - 1], ebx ; call qword ptr [rdi]
0x000000000041ec6d : test dword ptr [rdi + rbx*8 - 1], ebx ; jmp rsp
0x0000000000439eaf : test dword ptr [rdi + rdi*8 - 1], ebp ; inc ecx ; clc ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000420578 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsp
0x000000000045d280 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000045cfe8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000045a76c : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rax - 0x163dcb52]
0x00000000004582fe : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x0000000000457712 : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000455673 : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rdx]
0x000000000045732e : test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000457569 : test dword ptr [rdi + rsi*8 - 1], edx ; call rbx
0x000000000045b18e : test dword ptr [rdi + rsi*8 - 1], edx ; call rcx
0x000000000045685e : test dword ptr [rdi + rsi*8 - 1], edx ; call rdi
0x000000000045a44d : test dword ptr [rdi + rsi*8 - 1], edx ; call rdx
0x0000000000458c10 : test dword ptr [rdi + rsi*8 - 1], edx ; call rsi
0x000000000045562f : test dword ptr [rdi + rsi*8 - 1], edx ; call rsp
0x000000000045767f : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000045ae9a : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x00000000004576c4 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdi]
0x000000000045b38a : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000454fd2 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp qword ptr [rsi]
0x00000000004553b4 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rax
0x0000000000457e25 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rcx
0x000000000045aa9f : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdi
0x0000000000459164 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rdx
0x0000000000458096 : test dword ptr [rdi + rsi*8 - 1], edx ; jmp rsp
0x000000000041e02d : test dword ptr [rdi*8 - 0x7bf00001], ecx ; ret 7
0x0000000000418b50 : test dword ptr [rdx + rbp*8 + 0x742dffff], ebp ; ja 0x418b2c ; ret 0x8589
0x0000000000418df0 : test dword ptr [rdx + rbp*8 + 0x752dffff], ebp ; ja 0x418dcc ; ret 0x8589
0x0000000000420b64 : test dword ptr [rsp + rdi*8 - 0x7bf00001], edx ; ret
0x0000000000417071 : test dword ptr [rsp + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000416033 : test dword ptr [rsp + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x000000000041533d : test dword ptr [rsp + rdi*8 - 1], ecx ; call rbx
0x0000000000415504 : test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000415549 : test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x00000000004158a5 : test dword ptr [rsp + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000411bfc : test dword ptr [rsp + rdi*8 - 1], edx ; dec dword ptr [rdi] ; pushfq ; ret 0xd284
0x00000000004582f9 : test eax, 0xc7000035 ; test dword ptr [rdi + rsi*8 - 1], edx ; call qword ptr [rcx]
0x000000000040b21f : test esi, esi ; push rdx ; jle 0x40b212 ; ret
0x000000000040b71f : test esi, esi ; push rdx ; jle 0x40b712 ; ret
0x000000000045fa63 : test r13b, r9b ; ret
0x0000000000421da3 : xchg dword ptr [rcx - 0x7bf07fbb], ecx ; ret 5
0x00000000004554db : xchg eax, ebp ; mov esp, 0x1fffffd ; ret 0x9589
0x0000000000437fc7 : xchg eax, ebp ; ret
0x0000000000404b9b : xchg eax, ebp ; ret 0x8445
0x0000000000404261 : xchg eax, ebp ; ret 0xd284
0x000000000040e477 : xchg eax, ebp ; ret 0xe280
0x000000000040bf93 : xchg eax, ebp ; sal ah, -1 ; dec dword ptr [rax + 0x39] ; ret 0xf41
0x0000000000457848 : xchg eax, ebp ; sar ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x17
0x0000000000410f2b : xchg eax, ebx ; int 0x37
0x00000000004539c7 : xchg eax, ebx ; ret
0x000000000042c20b : xchg eax, ebx ; ret 0xd284
0x000000000042aef8 : xchg eax, ecx ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000444b8b : xchg eax, ecx ; ret
0x000000000041af38 : xchg eax, edi ; ret 0x6c7c
0x000000000041fe2c : xchg eax, edi ; ret 0xd284
0x0000000000444cdb : xchg eax, edx ; ret
0x000000000043a2c2 : xchg eax, edx ; ret 0x8041
0x000000000044085c : xchg eax, edx ; ret 0x8445
0x000000000041b558 : xchg eax, edx ; ret 0xd284
0x0000000000439f4a : xchg eax, edx ; ret 0xe280
0x000000000043b382 : xchg eax, esi ; ret
0x000000000041ae59 : xchg eax, esi ; ret 0x6c7c
0x0000000000409b85 : xchg eax, esi ; ret 0xd284
0x0000000000415e26 : xchg eax, esi ; ret 0xfffe
0x000000000043fe27 : xchg eax, esp ; jmp 0x440269
0x000000000040446c : xchg eax, esp ; ret
0x0000000000409b31 : xchg eax, esp ; ret 0x8445
0x000000000040407a : xchg eax, esp ; ret 0xd284
0x000000000040e442 : xchg eax, esp ; ret 0xe280
0x0000000000411059 : xchg eax, esp ; ret 0xf280
0x0000000000433e55 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043fe26 : xchg eax, r12d ; jmp 0x44026a
0x000000000041b378 : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000425934 : xlatb ; ret
0x000000000045028d : xlatb ; ret 0x8589
0x0000000000413c80 : xlatb ; ret 0x8af3
0x0000000000457e4a : xlatb ; ret 0x8d48
0x0000000000435a2e : xor bl, byte ptr [rsi] ; ret 0x897f
0x0000000000435bd5 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041ebe6 : xor byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004225a7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043583a : xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000044ab17 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004582fa : xor eax, 0x85c70000 ; push rsp ; idiv edi ; call qword ptr [rcx]
0x0000000000458375 : xor eax, 0x85c70000 ; push rsp ; idiv edi ; call rbx
0x000000000043fe29 : xor eax, 0xb8000004 ; ret
0x00000000004416dd : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041aa16 : xor esi, esp ; ret 0x8992
0x000000000041abd6 : xor esi, esp ; ret 0xb992
