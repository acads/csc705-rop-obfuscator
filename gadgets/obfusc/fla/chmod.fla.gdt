0x00000000004099d3 : adc al, -0x1d ; and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x0000000000422ab4 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004229f3 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000434c55 : adc byte ptr [rax], al ; add al, bl ; cmp edi, edi ; jmp rsi
0x0000000000419ebc : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434c54 : adc byte ptr fs:[rax], al ; add al, bl ; cmp edi, edi ; jmp rsi
0x000000000041675b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413fd9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418a53 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000042042a : add al, 0x15 ; ret
0x000000000041106c : add al, 0x25 ; ret 0x432f
0x0000000000428707 : add al, 0x48 ; add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434477 : add al, bh ; and edi, esi ; call rdx
0x0000000000434337 : add al, bh ; or dh, bh ; jmp qword ptr [rdx]
0x0000000000434c57 : add al, bl ; cmp edi, edi ; jmp rsi
0x0000000000418c49 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000416053 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a892 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000434397 : add al, ch ; or al, 0xfffffffffffffffe ; jmp rdx
0x00000000004054a0 : add al, ch ; pop rdx ; ret 0xffff
0x0000000000403a87 : add al, ch ; ret
0x0000000000403f28 : add al, ch ; ret 0xffd6
0x000000000040554d : add al, ch ; std ; ret
0x00000000004056b7 : add al, ch ; xchg eax, ebx ; ret 0xffff
0x000000000042b961 : add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041874d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000418c4b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000418a55 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000418b4b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000041644e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004161b6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043248f : add bl, dh ; ret
0x0000000000414edd : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x432f
0x000000000042ba6a : add byte ptr [r8], r8b ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000433d37 : add byte ptr [rax + 0x27], ch ; std ; call qword ptr [rsi]
0x0000000000433d97 : add byte ptr [rax + 0x2a], cl ; std ; call qword ptr [rsi]
0x0000000000433c93 : add byte ptr [rax + rax - 0x1d780000], ah ; cld ; call qword ptr [rcx]
0x0000000000434c53 : add byte ptr [rax + rdx], ah ; add al, bl ; cmp edi, edi ; jmp rsi
0x0000000000411069 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x432f
0x000000000040532b : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000410e1c : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x432f
0x0000000000414ede : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x432f
0x00000000004184c0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000434c52 : add byte ptr [rax], al ; adc byte ptr fs:[rax], al ; add al, bl ; cmp edi, edi ; jmp rsi
0x00000000004184c5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000042ba6b : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041644c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004161b4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000043248d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004184c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000043248b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004184c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000432eaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x432c
0x00000000004055be : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004059b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043248c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000432eac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x432c
0x000000000041c222 : add byte ptr [rax], al ; add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041c55b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x0000000000413d1e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004273d7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000428771 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041bcaa : add byte ptr [rax], al ; add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x00000000004242d3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000424407 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de045], cl ; ret
0x00000000004283ff : add byte ptr [rax], al ; add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x00000000004194e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x0000000000406184 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d247bb], cl ; ret 0xbe9e
0x000000000041bfe3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000431b79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000431af5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041a99f : add byte ptr [rax], al ; add byte ptr [rbx - 0x69172783], cl ; ret
0x0000000000405fe0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6d247bb], cl ; ret 0xbe9e
0x0000000000403f87 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b76f8b], cl ; ret 0xb0
0x0000000000404038 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x000000000041f385 : add byte ptr [rax], al ; add byte ptr [rcx + 0x45c6b845], cl ; ret
0x000000000042f4fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041a6ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000419d23 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000423bf2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000412bd1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000431c35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041f2d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040931b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000042fc95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bc2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004057dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004038d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418833 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000418cba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041634a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040bc0f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004059b6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004229f7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000043143d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000406ecf : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000433d32 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax + 0x27], ch ; std ; call qword ptr [rsi]
0x0000000000413fdb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413a40 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041955d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041675d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425f3a : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbp ; ret
0x0000000000413f97 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407899 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040159b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000434212 : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; call 0x2143402d
0x0000000000434216 : add byte ptr [rax], al ; call 0x21434029
0x000000000043083d : add byte ptr [rax], al ; call 0x4015f8
0x0000000000434396 : add byte ptr [rax], al ; call 0xffffffffe34341ae
0x0000000000434476 : add byte ptr [rax], al ; clc ; and edi, esi ; call rdx
0x0000000000434336 : add byte ptr [rax], al ; clc ; or dh, bh ; jmp qword ptr [rdx]
0x00000000004016d9 : add byte ptr [rax], al ; jmp 0x4015b9
0x0000000000406ecb : add byte ptr [rax], al ; jmp 0x406eda
0x0000000000431439 : add byte ptr [rax], al ; jmp 0x431448
0x00000000004320a9 : add byte ptr [rax], al ; jmp 0x4320b8
0x0000000000433a7e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000043124c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004311cd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000433c96 : add byte ptr [rax], al ; mov dl, ah ; cld ; call qword ptr [rcx]
0x00000000004322b7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004263bd : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000406ae9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000427e0c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b4f9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000433d92 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x2a], cl ; std ; call qword ptr [rsi]
0x00000000004352b6 : add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000403d28 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413d1f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004139f8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043248e : add byte ptr [rax], al ; ret
0x0000000000432eae : add byte ptr [rax], al ; ret 0x432c
0x0000000000433d96 : add byte ptr [rax], al ; sub dil, bpl ; call qword ptr [rsi]
0x0000000000434472 : add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; clc ; and edi, esi ; call rdx
0x00000000004352d7 : add byte ptr [rax], cl ; ret
0x000000000041c224 : add byte ptr [rbx + 0x172d8445], cl ; ret
0x000000000041cc4c : add byte ptr [rbx + 0x182d8445], cl ; ret
0x0000000000428dd5 : add byte ptr [rbx + 0x1c2dc045], cl ; test al, 0x70 ; ret 0x4589
0x0000000000428e17 : add byte ptr [rbx + 0x1d2dc045], cl ; test al, 0x70 ; ret 0x4589
0x000000000042fc2f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x42fc17 ; ret
0x000000000040730a : add byte ptr [rbx + 0x352dec45], cl ; sub al, -0x4c ; ret
0x0000000000407336 : add byte ptr [rbx + 0x362dec45], cl ; sub al, -0x4c ; ret
0x000000000041c55d : add byte ptr [rbx + 0x3b2d8445], cl ; xchg eax, esi ; ret
0x000000000041c913 : add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x0000000000413d20 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041bc61 : add byte ptr [rbx + 0x42d8445], cl ; ret 0xa43c
0x00000000004273d9 : add byte ptr [rbx + 0x472de045], cl ; ret
0x0000000000428773 : add byte ptr [rbx + 0x4c2dd845], cl ; ret
0x000000000041bcac : add byte ptr [rbx + 0x52d8445], cl ; ret 0xa43c
0x00000000004242d5 : add byte ptr [rbx + 0x552de045], cl ; ret
0x0000000000424409 : add byte ptr [rbx + 0x562de045], cl ; ret
0x00000000004139f9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000428401 : add byte ptr [rbx + 0x6a2dc845], cl ; ret
0x00000000004194e8 : add byte ptr [rbx + 0x7e2dec45], cl ; ret 0x709b
0x000000000041e695 : add byte ptr [rbx - 0x20d24fbb], cl ; push rbx ; ret 0x8589
0x000000000041e653 : add byte ptr [rbx - 0x21d24fbb], cl ; push rbx ; ret 0x4589
0x0000000000406186 : add byte ptr [rbx - 0x5d247bb], cl ; ret 0xbe9e
0x000000000041ce8b : add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x000000000041bfe5 : add byte ptr [rbx - 0x63d27bbb], cl ; ret
0x0000000000431b7b : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000431af7 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000041a9a1 : add byte ptr [rbx - 0x69172783], cl ; ret
0x0000000000405fe2 : add byte ptr [rbx - 0x6d247bb], cl ; ret 0xbe9e
0x0000000000403f89 : add byte ptr [rbx - 0x76b76f8b], cl ; ret 0xb0
0x000000000040403a : add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x00000000004057c9 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041f387 : add byte ptr [rcx + 0x45c6b845], cl ; ret
0x000000000041882f : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042f500 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041a6ec : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000419d25 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000423bf4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000412bd3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041f222 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000433d93 : add byte ptr [rcx + rax + 0x2a480000], ah ; std ; call qword ptr [rsi]
0x0000000000433d33 : add byte ptr [rcx + rax], al ; add byte ptr [rax + 0x27], ch ; std ; call qword ptr [rsi]
0x0000000000405f55 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x0000000000434333 : add byte ptr [rdi + rax], al ; add al, bh ; or dh, bh ; jmp qword ptr [rdx]
0x0000000000431c37 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041f2d8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040931d : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000042fc97 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040bc2f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004057de : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004038d2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418835 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000418cbc : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041634c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040bc11 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004059b8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057cf : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004229f9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040591a : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f6ce : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042828d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000434213 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; call 0x2143402c
0x0000000000432ea7 : add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x432c
0x0000000000419d4b : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000415199 : add cl, ch ; ret
0x000000000043143f : add cl, ch ; ret 0
0x000000000040a894 : add cl, ch ; ret 1
0x0000000000406ed1 : add cl, ch ; ret 2
0x000000000042dcea : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000403f26 : add dword ptr [rax], eax ; add al, ch ; ret 0xffd6
0x000000000042b95f : add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x0000000000433d35 : add dword ptr [rax], eax ; add byte ptr [rax + 0x27], ch ; std ; call qword ptr [rsi]
0x0000000000433d95 : add dword ptr [rax], eax ; add byte ptr [rax + 0x2a], cl ; std ; call qword ptr [rsi]
0x0000000000413f95 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004146ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000433d34 : add dword ptr [rax], r8d ; add byte ptr [rax + 0x27], ch ; std ; call qword ptr [rsi]
0x0000000000427725 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x00000000004281d1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041a799 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004192a2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041744f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004268b0 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000401aa4 : add eax, 0x23486e ; add ebx, esi ; ret
0x0000000000409ca1 : add eax, 0x58b80000 ; ret
0x0000000000422b8a : add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000041ce89 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x0000000000428709 : add eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x0000000000401d6b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405f53 : add esp, 0x100 ; pop rbp ; ret
0x0000000000419eba : add esp, 0x110 ; pop rbp ; ret
0x00000000004146b7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042ccbf : add esp, 0x120 ; pop rbp ; ret
0x000000000041b4d7 : add esp, 0x140 ; pop rbp ; ret
0x000000000042d8ae : add esp, 0x160 ; pop rbp ; ret
0x00000000004281d6 : add esp, 0x18 ; pop rbp ; ret
0x000000000041660c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000406c97 : add esp, 0x20 ; pop rbp ; ret
0x000000000041f6cc : add esp, 0x200 ; pop rbp ; ret
0x000000000042f803 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000418eec : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000419560 : add esp, 0x30 ; pop rbp ; ret
0x0000000000403d24 : add esp, 0x350 ; pop rbp ; ret
0x0000000000405c5d : add esp, 0x370 ; pop rbp ; ret
0x0000000000406c57 : add esp, 0x40 ; pop rbp ; ret
0x000000000040a213 : add esp, 0x450 ; pop rbp ; ret
0x0000000000425f3d : add esp, 0x48 ; pop rbp ; ret
0x000000000041e536 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000401d1f : add esp, 0x50 ; pop rbp ; ret
0x00000000004231f7 : add esp, 0x5f0 ; pop rbp ; ret
0x00000000004067d6 : add esp, 0x60 ; pop rbp ; ret
0x000000000040789c : add esp, 0x70 ; pop rbp ; ret
0x0000000000404061 : add esp, 0x80 ; pop rbp ; ret
0x000000000042459e : add esp, 0x90 ; pop rbp ; ret
0x000000000040b2be : add esp, 0xa0 ; pop rbp ; ret
0x00000000004294a3 : add esp, 0xb0 ; pop rbp ; ret
0x00000000004139f4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040a3cd : add esp, 0xd0 ; pop rbp ; ret
0x000000000040af06 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004267ac : add esp, 0xf0 ; pop rbp ; ret
0x00000000004075f6 : add esp, 8 ; pop rbp ; ret
0x000000000040159e : add esp, 8 ; ret
0x000000000040549f : add r8b, bpl ; pop rdx ; ret 0xffff
0x0000000000428708 : add rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x0000000000401d6a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f52 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000419eb9 : add rsp, 0x110 ; pop rbp ; ret
0x00000000004146b6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000042ccbe : add rsp, 0x120 ; pop rbp ; ret
0x000000000041b4d6 : add rsp, 0x140 ; pop rbp ; ret
0x000000000042d8ad : add rsp, 0x160 ; pop rbp ; ret
0x00000000004281d5 : add rsp, 0x18 ; pop rbp ; ret
0x000000000041660b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000406c96 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041f6cb : add rsp, 0x200 ; pop rbp ; ret
0x000000000042f802 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000418eeb : add rsp, 0x2e0 ; pop rbp ; ret
0x000000000041955f : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d23 : add rsp, 0x350 ; pop rbp ; ret
0x0000000000405c5c : add rsp, 0x370 ; pop rbp ; ret
0x0000000000406c56 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040a212 : add rsp, 0x450 ; pop rbp ; ret
0x0000000000425f3c : add rsp, 0x48 ; pop rbp ; ret
0x000000000041e535 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000401d1e : add rsp, 0x50 ; pop rbp ; ret
0x00000000004231f6 : add rsp, 0x5f0 ; pop rbp ; ret
0x00000000004067d5 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040789b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404060 : add rsp, 0x80 ; pop rbp ; ret
0x000000000042459d : add rsp, 0x90 ; pop rbp ; ret
0x000000000040b2bd : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004294a2 : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004139f3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x000000000040a3cc : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040af05 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004267ab : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004075f5 : add rsp, 8 ; pop rbp ; ret
0x000000000040159d : add rsp, 8 ; ret
0x00000000004099d5 : and al, 0xffffffffffffff8b ; push rbp ; in al, -0x7f ; ret 0xffd0
0x000000000041744e : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000434214 : and al, 6 ; add byte ptr [rax], al ; call 0x2143402b
0x000000000041e898 : and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000042dce8 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000424d12 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424e6c : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042ccc1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427723 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000042dce7 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040549c : and eax, 0x4329ed ; call 0x401707
0x00000000004295e5 : and eax, 0x433520 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004064af : and eax, 0x636350 ; pop rbp ; ret
0x00000000004064d3 : and eax, 0x636358 ; pop rbp ; ret
0x0000000000401aa7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000434479 : and edi, esi ; call rdx
0x0000000000401aa6 : and rax, qword ptr [rax] ; add ebx, esi ; ret
0x0000000000434218 : call 0x21434027
0x00000000004252f7 : call 0x4015f2
0x000000000043083f : call 0x4015f6
0x000000000043080c : call 0x401666
0x000000000040542e : call 0x401702
0x000000000041d542 : call 0x401799
0x00000000004056b8 : call 0x401952
0x0000000000417014 : call 0x401956
0x00000000004053da : call 0x401958
0x0000000000410e18 : call 0x414c69
0x000000000041d2ba : call 0x419572
0x000000000041f348 : call 0x42de26
0x000000000042b4d6 : call 0xffffffff8a051a78
0x0000000000434398 : call 0xffffffffe34341ac
0x0000000000413a39 : call 0xffffffffe903c389
0x0000000000413a38 : call 0xffffffffe903c38a
0x000000000040f47d : call 0xfffffffff7397a14
0x000000000042f2c5 : call 0xffffffffff47789a
0x0000000000411fa9 : call 0xffffffffff55a57b
0x0000000000411fa8 : call 0xffffffffff55a57c
0x0000000000411fa9 : call 0xffffffffff55a57d
0x0000000000411fa8 : call 0xffffffffff55a57e
0x000000000042a5c7 : call 0xffffffffff7c3118
0x000000000042a5c6 : call 0xffffffffff7c3119
0x0000000000432469 : call qword ptr [r12 + rbx*8]
0x0000000000411336 : call qword ptr [rax]
0x0000000000434f7b : call qword ptr [rbx]
0x0000000000412fc5 : call qword ptr [rcx]
0x0000000000408713 : call qword ptr [rdi]
0x0000000000410f63 : call qword ptr [rdx]
0x0000000000410eff : call qword ptr [rsi]
0x000000000043246a : call qword ptr [rsp + rbx*8]
0x000000000042a663 : call rax
0x000000000040f71a : call rbx
0x00000000004205b3 : call rcx
0x0000000000409bc1 : call rdi
0x000000000040a15f : call rdx
0x0000000000416454 : call rsi
0x000000000040958d : call rsp
0x0000000000431afc : cdq ; ret
0x0000000000404a1d : cdq ; ret 0x89df
0x00000000004290f3 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d22 : clc ; add rsp, 0x350 ; pop rbp ; ret
0x000000000042fcec : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004247e3 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000430000 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000428d43 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004294a1 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000434478 : clc ; and edi, esi ; call rdx
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000042de08 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004272e7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042d8ee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427acb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000427aeb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427b0b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000434338 : clc ; or dh, bh ; jmp qword ptr [rdx]
0x000000000043106f : clc ; pop rbp ; ret
0x0000000000433c9a : cld ; call qword ptr [rcx]
0x000000000040a226 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040a229 : cld ; pop rbp ; ret
0x0000000000411bfd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000419d4a : cli ; add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040618b : cli ; ret 0xbe9e
0x000000000041e895 : cmc ; movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x000000000041a469 : cmovs ecx, dword ptr [rbx - 0x7eb737ab] ; ret 0xffff
0x000000000042e8cd : cmp al, -0x2a ; ret
0x000000000041c918 : cmp al, -0x6a ; ret
0x000000000040549b : cmp al, 0x25 ; in eax, dx ; sub dword ptr [rbx], eax ; call 0x401708
0x000000000040532e : cmp al, 0x25 ; ret
0x0000000000410e1f : cmp al, 0x25 ; ret 0x432f
0x0000000000434c79 : cmp bh, bh ; call rax
0x000000000042501d : cmp byte ptr [rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x000000000042501c : cmp byte ptr ds:[rdi - 0x47], bl ; xchg dh, dh ; ret 0x3dc8
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x0000000000434c59 : cmp edi, edi ; jmp rsi
0x0000000000413ed4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000041f512 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000041d821 : cwde ; jmp 0x41e546
0x000000000041d820 : cwde ; jmp 0x41e547
0x00000000004315fb : cwde ; js 0x4315a5 ; ret
0x0000000000431642 : cwde ; js 0x4315ec ; ret
0x000000000043167c : cwde ; js 0x431626 ; ret
0x0000000000415817 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411da2 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004120ad : dec dword ptr [rax - 0x7f] ; ret 2
0x00000000004135b4 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000421b11 : dec dword ptr [rdi] ; ret 0xc609
0x000000000041af2c : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040a88e : dec dword ptr [rdi] ; test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000415193 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004110e8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004263f0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004263ef : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041d2b5 : enter -0x74b8, 0x75 ; shr al, -0x4f ; ret 0xffff
0x000000000041d35d : enter -0x74b8, 0x75 ; shr al, 9 ; ret 0xffff
0x0000000000428657 : enter -0x76b8, -0x3a ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x00000000004249ee : enter -0x79d3, -0xa ; ret 0x89c8
0x00000000004249a3 : enter -0x7ad3, -0xa ; ret 0x89c8
0x000000000042870a : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000423d1a : enter 0, 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000041f497 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f07b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000424cc3 : enter 0x612d, 1 ; ret 0x897e
0x000000000040b15d : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000426a34 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414ee9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405f12 : fadd st(7) ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x0000000000427662 : fcomp qword ptr [rbp - 0x75b54151] ; ret 0x8423
0x000000000041e658 : ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041e69a : fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000041e89b : fist word ptr [rbx + 0x4b] ; ret 0x8948
0x0000000000416d54 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004192d3 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x00000000004192d7 : fmul dword ptr [rax - 0x7f] ; ret 0x110
0x00000000004235ae : fmul dword ptr [rax - 0x7f] ; ret 0x60
0x000000000043246c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403f23 : fsub st(1), st(0) ; add dword ptr [rax], eax ; add al, ch ; ret 0xffd6
0x000000000041b467 : fsubr st(0) ; ret
0x000000000041a9a4 : fsubr st(0) ; xchg eax, esi ; ret
0x000000000042a1d4 : fsubr st(1) ; ret 0
0x000000000042ac9c : fucompi st(1) ; ret
0x0000000000401d69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430ccc : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042de04 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6362b0 ; jmp rax
0x00000000004252f8 : hlt ; ret 0xfffd
0x000000000041ce88 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x62d27bbb], cl ; ret
0x0000000000415aee : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x00000000004077d8 : in al, -0x17 ; ret
0x0000000000411559 : in al, -0x7f ; ret 0xff9f
0x000000000041173f : in al, -0x7f ; ret 0xffbf
0x00000000004117e5 : in al, -0x7f ; ret 0xffc5
0x00000000004099d8 : in al, -0x7f ; ret 0xffd0
0x0000000000411813 : in al, -0x7f ; ret 0xffd5
0x00000000004118e1 : in al, -0x7f ; ret 0xffd8
0x0000000000411a77 : in al, -0x7f ; ret 0xffe0
0x0000000000424d10 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424e6a : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b4d5 : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x0000000000424488 : in al, 0x56 ; ret
0x000000000042df57 : in al, 0x5d ; ret
0x000000000042472a : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042474b : in al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042476c : in al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042478d : in al, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c5ca : in al, dx ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041f6ca : in al, dx ; add rsp, 0x200 ; pop rbp ; ret
0x000000000042e109 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000426d2f : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040b60a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041f2f5 : in eax, -0x76 ; push rbp ; ret
0x000000000040a223 : in eax, -0x77 ; jge 0x40a22b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000431cfb : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040549d : in eax, dx ; sub dword ptr [rbx], eax ; call 0x401706
0x000000000041883e : inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000041f20f : inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000412bcf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000421fb2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411191 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422bdf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041377a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403150 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000409a55 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000040a094 : inc dword ptr [rcx] ; jmp 0x40a223
0x0000000000424485 : inc edi ; in al, 0x56 ; ret
0x0000000000414688 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000418eb4 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000040a891 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040dd2f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041136f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000040542f : int 0xc2
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x000000000042d8f1 : ja 0x42d93e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6362b0 ; jmp rax
0x00000000004030c6 : je 0x40305a ; test dword ptr [rdi*8 - 0x7bf00001], eax ; ret 0xa
0x000000000040a225 : jge 0x40a229 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000415608 : jge 0x41561f ; ret
0x0000000000415af3 : jge 0x415b0a ; ret
0x000000000041d2b4 : jge 0x41d286 ; mov rsi, qword ptr [rbp - 0x40] ; call 0x419578
0x000000000041d35c : jge 0x41d32e ; mov rsi, qword ptr [rbp - 0x40] ; call 0x419578
0x0000000000427aca : jge 0x427acb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000427aea : jge 0x427aeb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427b0a : jge 0x427b0b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d8ed : jge 0x42d8ee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000432269 : jge 0x432263 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004002db : jl 0x400321 ; ret
0x00000000004154dc : jl 0x4154f3 ; ret
0x000000000042fbe5 : jl 0x42fbc1 ; ret
0x000000000042fc35 : jl 0x42fc11 ; ret
0x00000000004016db : jmp 0x4015b7
0x0000000000403f24 : jmp 0x40406f
0x0000000000405389 : jmp 0x405c6b
0x0000000000405327 : jmp 0x405c6e
0x0000000000406ecd : jmp 0x406ed8
0x000000000040a063 : jmp 0x40a221
0x0000000000409c9f : jmp 0x40a222
0x0000000000410d1d : jmp 0x413a03
0x00000000004137b1 : jmp 0x413a05
0x0000000000411065 : jmp 0x413a06
0x0000000000415aed : jmp 0x416065
0x0000000000419d5c : jmp 0x419ec8
0x000000000041d45b : jmp 0x41e544
0x000000000041d822 : jmp 0x41e545
0x00000000004252d4 : jmp 0x425338
0x00000000004275b2 : jmp 0x427702
0x0000000000428552 : jmp 0x428627
0x000000000043143b : jmp 0x431446
0x00000000004320ab : jmp 0x4320b6
0x000000000042c2d1 : jmp 0x49054c21
0x000000000042c34c : jmp 0x49054c9c
0x000000000042d6a5 : jmp 0x49055ff5
0x000000000042d720 : jmp 0x49056070
0x0000000000424815 : jmp 0x7f04497d
0x000000000042b51b : jmp 0xffffffff8a051abd
0x000000000042e14e : jmp 0xffffffffb704e51a
0x00000000004315fa : jmp 0xffffffffc3e78e9b
0x000000000042b8cf : jmp 0xffffffffea051e71
0x0000000000410e3d : jmp qword ptr [rax]
0x0000000000405f18 : jmp qword ptr [rbx]
0x0000000000405b3f : jmp qword ptr [rcx]
0x000000000043517b : jmp qword ptr [rdi]
0x0000000000413ed5 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040f486 : jmp qword ptr [rdx]
0x0000000000411f3f : jmp qword ptr [rsi]
0x0000000000401a47 : jmp rax
0x0000000000409fb8 : jmp rbx
0x0000000000409868 : jmp rdi
0x0000000000401a87 : jmp rdx
0x0000000000434c5b : jmp rsi
0x0000000000412b69 : jmp rsp
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x00000000004027b0 : jne 0x4027e2 ; ret 0x8589
0x0000000000402b30 : jne 0x402b62 ; ret 0x8589
0x00000000004038c3 : jne 0x4038f5 ; ret 0x8ab9
0x0000000000405387 : jne 0x405319 ; jmp 0x405c6d
0x0000000000414686 : jne 0x41468f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041d2b8 : jne 0x41d27e ; call 0x419574
0x000000000041d360 : jne 0x41d326 ; call 0x419574
0x000000000041f2f0 : jne 0x41f2b3 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x00000000004250f9 : jne 0x4250dc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004263f1 : jne 0x4263e9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004267e2 : jne 0x4267da ; mov rax, rdx ; pop rbp ; ret
0x0000000000428656 : jne 0x428629 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000405c5f : jo 0x405c69 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040789e : jo 0x4078ff ; ret
0x00000000004148a1 : jo 0x414902 ; ret
0x00000000004149c4 : jo 0x414a25 ; ret
0x0000000000414afe : jo 0x414b5f ; ret
0x0000000000416dfc : jo 0x416e5d ; ret
0x0000000000418b74 : jo 0x418b43 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000418b73 : jo 0x418b44 ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004192a9 : jo 0x41930a ; ret
0x0000000000422b87 : jo 0x422b13 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000427003 : jo 0x427064 ; ret
0x0000000000430004 : jo 0x430065 ; ret
0x00000000004139f6 : js 0x413a0a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004315fc : js 0x4315a4 ; ret
0x0000000000431643 : js 0x4315eb ; ret
0x000000000043167d : js 0x431625 ; ret
0x000000000040549a : lea edi, dword ptr [0x4329ed] ; call 0x401709
0x000000000042b8ce : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051e72
0x000000000042b8cd : lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051e73
0x0000000000433a80 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000042b964 : lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041744d : loop 0x41747a ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041744c : loop 0x41747b ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004310a9 : loop 0x4310fb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000431191 : loop 0x4311e3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000433c99 : loop 0x433c99 ; call qword ptr [rcx]
0x000000000042702b : loope 0x426fc5 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427724 : loope 0x42772d ; movzx eax, cl ; pop rbp ; ret
0x00000000004038f0 : loopne 0x4038f9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403948 : loopne 0x403951 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004039cd : loopne 0x4039d6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040af08 : loopne 0x40af0f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b9ce : loopne 0x40b9d7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416b40 : loopne 0x416b49 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000416f4c : loopne 0x416f9c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000416f4b : loopne 0x416f9d ; add esp, 0x40 ; pop rbp ; ret
0x0000000000418eee : loopne 0x418ef7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a4f1 : loopne 0x41a544 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000423b8f : loopne 0x423b98 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423bf0 : loopne 0x423bfa ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000423daf : loopne 0x423db6 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004242d8 : loopne 0x42430b ; push rbp ; ret
0x00000000004242d7 : loopne 0x42430c ; push rbp ; ret
0x000000000042440c : loopne 0x42443f ; push rsi ; ret
0x000000000042440b : loopne 0x424440 ; push rsi ; ret
0x0000000000426277 : loopne 0x42627e ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004273dc : loopne 0x42740f ; ret
0x00000000004273db : loopne 0x427410 ; ret
0x00000000004299d7 : loopne 0x4299e0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ac70 : loopne 0x42ac79 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ac90 : loopne 0x42acde ; mov edi, dword ptr [rcx] ; call rax
0x000000000042ac8f : loopne 0x42acdf ; mov edi, dword ptr [rcx] ; call rax
0x000000000042ad5c : loopne 0x42ad65 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042adf4 : loopne 0x42adfd ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430b6c : loopne 0x430b75 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ab45 : mov ah, -0x17 ; ret
0x0000000000401f10 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042d818 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f29a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004294a5 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043080a : mov al, 0 ; call 0x401668
0x00000000004056b6 : mov al, 0 ; call 0x401954
0x0000000000417012 : mov al, 0 ; call 0x401958
0x000000000041e656 : mov al, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041e698 : mov al, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000040bb8b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043134d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004314fd : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000431cf9 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041744b : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004268cf : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429fd1 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042de2c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043124f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000043124e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004311cf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004311d3 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004064d1 : mov byte ptr [0x636358], al ; pop rbp ; ret
0x000000000042df51 : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x0000000000413548 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401aa3 : mov byte ptr [rip + 0x23486e], 1 ; ret
0x000000000042828b : mov cl, 0 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042dced : mov dh, -0x39 ; pop rbp ; ret
0x0000000000427727 : mov dh, -0x3f ; pop rbp ; ret
0x00000000004281d3 : mov dh, -0x40 ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041a79b : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004192a4 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000417451 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000431e25 : mov dl, -0x47 ; ret
0x0000000000433c98 : mov dl, ah ; cld ; call qword ptr [rcx]
0x0000000000434f99 : mov dr1, edi ; call qword ptr [rsi]
0x00000000004064ad : mov dword ptr [0x636350], edi ; pop rbp ; ret
0x000000000040b847 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b60b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b77f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042ca79 : mov dword ptr [rbp - 0x10c], ecx ; call rdx
0x000000000042cbeb : mov dword ptr [rbp - 0x114], ecx ; call rdx
0x0000000000403f21 : mov dword ptr [rbp - 0x24], ecx ; jmp 0x404072
0x0000000000405428 : mov dword ptr [rbp - 0x2f0], esi ; call 0x401708
0x0000000000405427 : mov dword ptr [rbp - 0x2f0], esi ; call 0x401709
0x0000000000419d59 : mov dword ptr [rbp - 0x38], eax ; jmp 0x419ecb
0x0000000000401f0e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004252f1 : mov dword ptr [rbp - 0x84], ecx ; call 0x4015f8
0x00000000004285a1 : mov dword ptr [rbp - 0x8c], ecx ; call rdx
0x00000000004293ef : mov dword ptr [rbp - 0xa4], ecx ; call rdx
0x0000000000401d67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a224 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042de09 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004259de : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b9fd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004237df : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004295ea : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004272e8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042d8f0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040b4ff : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a28b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c53 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416b6f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426ffd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406aec : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042e107 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416f8e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416860 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042db20 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b84a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042df55 : mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x0000000000416f4a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b3f4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004250ff : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040b4fc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b605 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004263bf : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000042865c : mov eax, dword ptr [rbp - 0x38] ; call rax
0x000000000040b781 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041489b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000430cca : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a227 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004290f1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fcea : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004247e1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042fffe : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000427acd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000427aed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427b0d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000405724 : mov eax, eax ; mov al, 0 ; call 0x401956
0x000000000043106e : mov eax, edi ; pop rbp ; ret
0x0000000000429bc1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004263f4 : mov eax, edx ; pop rbp ; ret
0x00000000004311d0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x00000000004310e3 : mov eax, esi ; pop rbp ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x000000000040a222 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042501b : mov ebx, 0xb95f383e ; xchg dh, dh ; ret 0x3dc8
0x000000000042a65d : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b608 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042a5c5 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042ac8e : mov ecx, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042de06 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004056b4 : mov ecx, eax ; mov al, 0 ; call 0x401956
0x000000000043110d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004310dd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401ac5 : mov edi, 0x635e20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6362b0 ; jmp rax
0x0000000000401a82 : mov edi, 0x6362b0 ; jmp rdx
0x000000000041d2b3 : mov edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x419579
0x000000000042d8ec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427ac9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000427ae9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427b09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042a661 : mov edi, dword ptr [rcx] ; call rax
0x000000000041f346 : mov edi, eax ; call 0x42de28
0x0000000000432467 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000432466 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041d2b7 : mov esi, dword ptr [rbp - 0x40] ; call 0x419575
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6362b0 ; jmp rdx
0x00000000004250fc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000428659 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000425b03 : mov esp, 0x61cfa42d ; ret
0x0000000000425b45 : mov esp, 0x61cfa52d ; ret
0x000000000040314b : mov esp, 0xffffff3d ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004064ac : mov qword ptr [0x636350], rdi ; pop rbp ; ret
0x000000000040b9fc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004237de : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042d8ef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040ab44 : mov r12b, -0x17 ; ret
0x0000000000401f0f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000425b02 : mov r12d, 0x61cfa42d ; ret
0x0000000000425b44 : mov r12d, 0x61cfa52d ; ret
0x0000000000405723 : mov r8, rax ; mov al, 0 ; call 0x401957
0x000000000041e655 : mov r8b, 0x2d ; ficom word ptr [rbx + 0x4b] ; ret 0x4589
0x000000000041e697 : mov r8b, 0x2d ; fist word ptr [rbx + 0x4b] ; ret 0x8589
0x000000000040a28a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c52 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416b6e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406aeb : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000416f8d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041685f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042db1f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427e0e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000416f49 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b3f3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004250fe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040b4fb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042865b : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041489a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004290f0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427acc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000427aec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427b0c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043106d : mov rax, rdi ; pop rbp ; ret
0x0000000000429bc0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004263f3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x000000000042a65c : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042a5c4 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042ac8d : mov rcx, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042de05 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004056b3 : mov rcx, rax ; mov al, 0 ; call 0x401957
0x000000000042d8eb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427ac8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000427ae8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000427b08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042a660 : mov rdi, qword ptr [rcx] ; call rax
0x000000000041f345 : mov rdi, rax ; call 0x42de29
0x000000000041d2b6 : mov rsi, qword ptr [rbp - 0x40] ; call 0x419576
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6362b0 ; jmp rdx
0x00000000004250fb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000428658 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041468a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041468b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000040403d : mov word ptr [rax - 0x77], cs ; ret 0xb0
0x0000000000409b1a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411ddc : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x000000000043209e : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x0000000000433d94 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x2a], cl ; std ; call qword ptr [rsi]
0x0000000000415aec : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x416066
0x00000000004315fd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004075f1 : movsx eax, byte ptr [rbp - 5] ; add rsp, 8 ; pop rbp ; ret
0x000000000041e896 : movsxd rdx, eax ; and al, byte ptr [rcx - 0x48] ; fist word ptr [rbx + 0x4b] ; ret 0x8948
0x00000000004281d2 : movzx eax, al ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041a79a : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004192a3 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000417450 : movzx eax, al ; pop rbp ; ret
0x00000000004311d2 : movzx eax, ax ; pop rbp ; ret
0x000000000042dcec : movzx eax, bh ; pop rbp ; ret
0x0000000000427726 : movzx eax, cl ; pop rbp ; ret
0x000000000042dceb : movzx eax, dil ; pop rbp ; ret
0x0000000000429fd2 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000429fd3 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000432488 : nop dword ptr [rax + rax] ; ret
0x00000000004139f7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414ee1 : or al, 0x25 ; ret 0x432f
0x0000000000434399 : or al, 0xfffffffffffffffe ; jmp rdx
0x000000000042b8cb : or bh, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051e75
0x0000000000434475 : or byte ptr [rax], al ; add al, bh ; and edi, esi ; call rdx
0x000000000041c911 : or byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d8445], cl ; xchg eax, esi ; ret
0x00000000004094f9 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409317 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004252f0 : or byte ptr [rcx - 0x8373], 0xff ; call 0x4015f9
0x0000000000434339 : or dh, bh ; jmp qword ptr [rdx]
0x0000000000418b49 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000405329 : or dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000415197 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041d824 : or eax, 0x9db80000 ; ret
0x0000000000414a81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043106b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004310e1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b8ca : or r15b, al ; lodsb al, byte ptr [rsi] ; jmp 0xffffffffea051e76
0x000000000043106a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042dce9 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004314ff : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043134f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004310e0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401aa5 : outsb dx, byte ptr [rsi] ; and rax, qword ptr [rax] ; add ebx, esi ; ret
0x0000000000428279 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042bda3 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043247c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043247e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413d22 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432480 : pop r14 ; pop r15 ; ret
0x0000000000413d24 : pop r15 ; pop rbp ; ret
0x0000000000432482 : pop r15 ; ret
0x0000000000431b78 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000408b2f : pop rax ; ret
0x00000000004352b8 : pop rax ; ret 0xffff
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x23486e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6362b0 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6362b0 ; jmp rdx
0x000000000043247b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043247f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x0000000000413d21 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004139fa : pop rbx ; pop rbp ; ret
0x0000000000431e24 : pop rcx ; mov dl, -0x47 ; ret
0x0000000000413d25 : pop rdi ; pop rbp ; ret
0x0000000000432483 : pop rdi ; ret
0x0000000000402820 : pop rdi ; ret 0x89be
0x0000000000403655 : pop rdi ; ret 0xb9be
0x000000000043226b : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004054a2 : pop rdx ; ret 0xffff
0x0000000000424482 : pop rdx ; sar ebp, 1 ; inc edi ; in al, 0x56 ; ret
0x0000000000413d23 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000432481 : pop rsi ; pop r15 ; ret
0x000000000043247d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040dc32 : pop rsp ; ret
0x0000000000428290 : pop rsp ; ret 0xf66
0x000000000041ce90 : popfq ; ret
0x0000000000431c39 : popfq ; ret 0xd284
0x000000000041341f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000401d21 : push rax ; pop rbp ; ret
0x000000000041644b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000416d53 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004192d2 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x00000000004192d6 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x110
0x00000000004235ad : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x60
0x000000000042a1d3 : push rbp ; fsubr st(1) ; ret 0
0x0000000000411558 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041173e : push rbp ; in al, -0x7f ; ret 0xffbf
0x00000000004117e4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004099d7 : push rbp ; in al, -0x7f ; ret 0xffd0
0x0000000000411812 : push rbp ; in al, -0x7f ; ret 0xffd5
0x00000000004118e0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000411a76 : push rbp ; in al, -0x7f ; ret 0xffe0
0x000000000041883d : push rbp ; inc bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004268c2 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000401ac4 : push rbp ; mov edi, 0x635e20 ; mov rbp, rsp ; call rax
0x000000000041f214 : push rbp ; ret
0x000000000042016e : push rbp ; ret 0x893c
0x000000000042b95e : push rbx ; add dword ptr [rax], eax ; add bh, al ; lodsb al, byte ptr [rsi] ; xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041e659 : push rbx ; ret 0x4589
0x000000000041e69b : push rbx ; ret 0x8589
0x000000000041e89c : push rbx ; ret 0x8948
0x0000000000408adb : push rdi ; ret
0x000000000042440e : push rsi ; ret
0x000000000041bfea : pushfq ; ret
0x000000000042f503 : pushfq ; ret 0x8445
0x000000000041f2da : pushfq ; ret 0xd284
0x000000000040931f : pushfq ; ret 0xe280
0x00000000004310de : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000043110e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041be8c : rcr eax, cl ; ret
0x00000000004002dd : ret
0x0000000000413ed9 : ret 0
0x0000000000428cbf : ret 0x10
0x0000000000418aed : ret 0x108
0x00000000004192da : ret 0x110
0x000000000041ba65 : ret 0x18
0x0000000000431d2b : ret 0x2030
0x0000000000422eb9 : ret 0x21b9
0x00000000004018e2 : ret 0x2348
0x00000000004016e2 : ret 0x2349
0x000000000042827a : ret 0x280f
0x0000000000419d32 : ret 0x294c
0x0000000000410f37 : ret 0x2a
0x0000000000412bb0 : ret 0x2ae8
0x0000000000414256 : ret 0x2c1
0x0000000000425022 : ret 0x3dc8
0x0000000000423bd9 : ret 0x4172
0x0000000000432eb0 : ret 0x432c
0x0000000000410e21 : ret 0x432f
0x000000000040de9a : ret 0x43fa
0x000000000041e65b : ret 0x4589
0x0000000000424ebd : ret 0x487e
0x000000000041983f : ret 0x4cb1
0x00000000004290a4 : ret 0x50e9
0x000000000041a816 : ret 0x5589
0x0000000000423652 : ret 0x56ad
0x0000000000430e73 : ret 0x5e5
0x00000000004235b1 : ret 0x60
0x00000000004194ee : ret 0x709b
0x0000000000422e3d : ret 0x8148
0x000000000042c2d4 : ret 0x8348
0x00000000004089c3 : ret 0x83a1
0x0000000000422e76 : ret 0x83e9
0x0000000000427668 : ret 0x8423
0x0000000000403154 : ret 0x8445
0x00000000004027b2 : ret 0x8589
0x000000000040dd30 : ret 0x891a
0x000000000042739e : ret 0x8923
0x00000000004316dc : ret 0x8934
0x000000000042016f : ret 0x893c
0x0000000000416d57 : ret 0x8948
0x000000000042398c : ret 0x8972
0x0000000000424818 : ret 0x897e
0x000000000042b5cc : ret 0x897f
0x000000000041bba0 : ret 0x8999
0x000000000042e151 : ret 0x89b6
0x0000000000402821 : ret 0x89be
0x00000000004249a7 : ret 0x89c8
0x0000000000402795 : ret 0x89cb
0x0000000000404a1f : ret 0x89df
0x00000000004038c5 : ret 0x8ab9
0x00000000004316b8 : ret 0x8b34
0x0000000000405b1a : ret 0x8b48
0x00000000004030cf : ret 0xa
0x0000000000428c2a : ret 0xa3b9
0x000000000041d50d : ret 0xa43c
0x000000000043044b : ret 0xa4be
0x000000000042b909 : ret 0xa6e9
0x00000000004045f5 : ret 0xa7ff
0x0000000000411c05 : ret 0xa9b9
0x000000000040d682 : ret 0xade6
0x000000000040391d : ret 0xb0
0x0000000000411370 : ret 0xb91a
0x000000000042a206 : ret 0xb948
0x000000000042e40b : ret 0xb9b6
0x0000000000403656 : ret 0xb9be
0x000000000040319e : ret 0xb9cb
0x0000000000405fe8 : ret 0xbe9e
0x0000000000401a65 : ret 0xc148
0x0000000000421b14 : ret 0xc609
0x00000000004057e1 : ret 0xc8b
0x00000000004038d5 : ret 0xd284
0x0000000000413423 : ret 0xd4e9
0x0000000000408077 : ret 0xd58d
0x000000000042b8d2 : ret 0xdde9
0x00000000004057d2 : ret 0xe280
0x00000000004276d2 : ret 0xe923
0x000000000042b967 : ret 0xe97f
0x000000000041d9df : ret 0xe999
0x0000000000405283 : ret 0xe9df
0x0000000000413a3c : ret 0xee8
0x0000000000429005 : ret 0xefe9
0x00000000004229fc : ret 0xf280
0x0000000000411de5 : ret 0xf41
0x0000000000428291 : ret 0xf66
0x000000000041b2ca : ret 0xfe64
0x000000000041701a : ret 0xfea5
0x0000000000429eb6 : ret 0xff3
0x00000000004032d1 : ret 0xff89
0x000000000040336b : ret 0xff8e
0x000000000041155b : ret 0xff9f
0x0000000000412efe : ret 0xffa5
0x0000000000411741 : ret 0xffbf
0x00000000004121ab : ret 0xffc4
0x00000000004117e7 : ret 0xffc5
0x00000000004035e6 : ret 0xffd0
0x0000000000403611 : ret 0xffd5
0x0000000000403f2a : ret 0xffd6
0x00000000004118e3 : ret 0xffd8
0x0000000000412251 : ret 0xffd9
0x0000000000411a79 : ret 0xffe0
0x0000000000410b4e : ret 0xfffa
0x00000000004252f9 : ret 0xfffd
0x0000000000405430 : ret 0xffff
0x0000000000405fda : ret 1
0x0000000000406ed3 : ret 2
0x0000000000413537 : ret 4
0x00000000004151c8 : ret 5
0x000000000041c3de : ret 6
0x000000000042bd71 : ret 7
0x0000000000413c20 : ret 8
0x00000000004210e5 : ret 9
0x000000000041e538 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000040aed8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000429952 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a3cf : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f805 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042343f : rol dh, 1 ; ret
0x0000000000427722 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000042343e : rol r14b, 1 ; ret
0x000000000040b606 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x00000000004192a5 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41930e ; ret
0x0000000000405f51 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405c5b : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x405c6d ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423dab : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x423dba ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426273 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x426282 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b607 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000416d50 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000418a52 : sahf ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x000000000042fc99 : sahf ; ret 0xd284
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x000000000041f2ef : sal byte ptr [rbp - 0x47], 1 ; xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x000000000042e8ce : salc ; ret
0x000000000041f513 : sar byte ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x0000000000424483 : sar ebp, 1 ; inc edi ; in al, 0x56 ; ret
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x000000000042df53 : sbb al, 0 ; mov eax, dword ptr [rbp - 0x1c] ; pop rbp ; ret
0x000000000042de2e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004146b9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041a8ea : sbb cl, bl ; xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x0000000000416933 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411bfe : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x000000000041a8ed : sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000042642a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042642c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004282af : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000043110f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004310a8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041d2b9 : shr al, -0x4f ; ret 0xffff
0x000000000041d361 : shr al, 9 ; ret 0xffff
0x00000000004310df : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000431068 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004057cb : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000422b89 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000405fe7 : stc ; ret 0xbe9e
0x00000000004094fb : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000433d3a : std ; call qword ptr [rsi]
0x0000000000424484 : std ; inc edi ; in al, 0x56 ; ret
0x000000000040554f : std ; ret
0x00000000004075f4 : sti ; add rsp, 8 ; pop rbp ; ret
0x000000000041b2c8 : sub al, -0x18 ; ret 0xfe64
0x0000000000407310 : sub al, -0x4c ; ret
0x000000000040ec47 : sub al, 0x38 ; ret 0x8589
0x0000000000411c03 : sub al, 0x38 ; ret 0xa9b9
0x000000000042459c : sub al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000433d99 : sub bh, ch ; call qword ptr [rsi]
0x0000000000433d98 : sub dil, bpl ; call qword ptr [rsi]
0x0000000000411067 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x432f
0x000000000040549e : sub dword ptr [rbx], eax ; call 0x401705
0x00000000004094fc : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000432509 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000432508 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041646b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000418b1c : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f648 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041955b : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042b4d4 : test al, 0x2d ; call 0xffffffff8a051a7a
0x000000000042b4d3 : test al, 0x2d ; call 0xffffffff8a051a7b
0x000000000042b519 : test al, 0x2d ; jmp 0xffffffff8a051abf
0x000000000042b518 : test al, 0x2d ; jmp 0xffffffff8a051ac0
0x000000000042b7bc : test al, 0x2d ; xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042b5c8 : test al, 0x2d ; xor dword ptr [rsi], ebx ; ret 0x897f
0x000000000041489d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000042016d : test al, 0x55 ; ret 0x893c
0x0000000000428ddb : test al, 0x70 ; ret 0x4589
0x00000000004290a2 : test al, 0x70 ; ret 0x50e9
0x0000000000429003 : test al, 0x70 ; ret 0xefe9
0x0000000000416348 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041af2e : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000419eb8 : test byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043248a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000434474 : test byte ptr [rax], cl ; add byte ptr [rax], al ; clc ; and edi, esi ; call rdx
0x000000000040a890 : test byte ptr [rdx + rax], ch ; add cl, ch ; ret 1
0x0000000000415195 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000405f14 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x000000000041874f : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x0000000000418c4d : test dword ptr [rdi + rdi*8 - 1], ebp ; call rsi
0x0000000000418840 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000418a57 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rax
0x0000000000418b4d : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000416450 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004161b8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004030c8 : test dword ptr [rdi*8 - 0x7bf00001], eax ; ret 0xa
0x00000000004249a5 : test esi, esi ; ret 0x89c8
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000405386 : xchg byte ptr [rbp - 0x78], dh ; jmp 0x405c6e
0x0000000000425020 : xchg dh, dh ; ret 0x3dc8
0x00000000004249f0 : xchg dh, dh ; ret 0x89c8
0x000000000040bc31 : xchg eax, ebp ; ret
0x0000000000403153 : xchg eax, ebp ; ret 0x8445
0x00000000004057e0 : xchg eax, ebp ; ret 0xc8b
0x00000000004038d4 : xchg eax, ebp ; ret 0xd284
0x0000000000418837 : xchg eax, ebp ; ret 0xe280
0x000000000043017b : xchg eax, ebx ; ret
0x000000000042c3e9 : xchg eax, ebx ; ret 0xd284
0x00000000004056b9 : xchg eax, ebx ; ret 0xffff
0x0000000000411066 : xchg eax, ebx ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x432f
0x000000000040ec2b : xchg eax, ecx ; ret
0x0000000000418cbe : xchg eax, edi ; ret 0xd284
0x000000000040ed7b : xchg eax, edx ; ret
0x00000000004092a4 : xchg eax, edx ; ret 0x8445
0x000000000041634e : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x00000000004145b2 : xchg eax, esi ; ret
0x000000000040bc13 : xchg eax, esp ; ret
0x0000000000412bd6 : xchg eax, esp ; ret 0x8445
0x00000000004059ba : xchg eax, esp ; ret 0xd284
0x00000000004057d1 : xchg eax, esp ; ret 0xe280
0x00000000004229fb : xchg eax, esp ; ret 0xf280
0x0000000000427721 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041a8ec : xchg eax, esp ; sbb ecx, dword ptr [rcx - 0x7bf057bb] ; ret 0
0x000000000042642b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000418eb2 : xchg esi, edi ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0x000000000043106c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000042b7be : xor bl, byte ptr [rsi] ; ret 0x897f
0x000000000042b965 : xor bl, byte ptr [rsi] ; ret 0xe97f
0x000000000041f2f2 : xor byte ptr [r11], r14b ; in eax, -0x76 ; push rbp ; ret
0x000000000041f2f3 : xor byte ptr [rbx], dh ; in eax, -0x76 ; push rbp ; ret
0x000000000042b5ca : xor dword ptr [rsi], ebx ; ret 0x897f
0x0000000000414bb7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b77d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
