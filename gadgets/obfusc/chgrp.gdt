0x0000000000462c19 : adc bh, ah ; call rdi
0x0000000000458313 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043424b : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412a2f : adc ch, cl ; ret
0x000000000041ed5e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000044d08d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000041e6d1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000426f2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004582e1 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041f85b : adc eax, 0x558abda1 ; ret
0x0000000000442587 : adc eax, 0x85c70000 ; call 0x18442597
0x0000000000438f91 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x0000000000456433 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000422e39 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000462bb9 : adc esp, edi ; jmp qword ptr [rbx]
0x0000000000462bb3 : add ah, bh ; add al, 0 ; add byte ptr [rax + 0x11], bl ; cld ; jmp qword ptr [rbx]
0x000000000046212d : add al, -4 ; call rax
0x000000000042c596 : add al, -8 ; ret 0x898d
0x000000000042f3f1 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000462bb5 : add al, 0 ; add byte ptr [rax + 0x11], bl ; cld ; jmp qword ptr [rbx]
0x000000000043367f : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000044f740 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000443ea7 : add al, 0 ; add cl, ch ; ret 1
0x000000000045b41a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000462dff : add al, ah ; sbb al, -4 ; jmp qword ptr [rbx]
0x0000000000462e5f : add al, al ; and bh, ah ; jmp rsi
0x00000000004628e5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x17], ch ; cli ; call qword ptr [rcx]
0x00000000004307c2 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x00000000004460dd : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000405642 : add al, byte ptr [rax] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405948 : add al, byte ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004307c1 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000040e0c7 : add al, ch ; ret
0x00000000004454e4 : add al, ch ; xchg eax, esi ; ret 0xfffb
0x0000000000462033 : add al, cl ; cld ; stc ; jmp rax
0x00000000004625a3 : add al, cl ; ret
0x00000000004621eb : add al, cl ; sub bh, ah ; jmp rax
0x0000000000451098 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x0000000000432bd6 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000044859b : add bh, al ; in al, 0x3e ; ret
0x0000000000457df8 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000045d675 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042be31 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042bdf0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042ec72 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042f7ef : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000040e839 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040e639 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e680 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000042e9f9 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000040e848 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000426c04 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004250bc : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x00000000004538ff : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041f699 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000456435 : add bh, al ; xchg eax, r12d ; int 6
0x0000000000460a9f : add bl, dh ; ret
0x0000000000432b97 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000448213 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000460772 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004609d4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000462bb7 : add byte ptr [rax + 0x11], bl ; cld ; jmp qword ptr [rbx]
0x0000000000439249 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000462f67 : add byte ptr [rax + 0x43], bl ; cld ; call qword ptr [rdx]
0x0000000000462a27 : add byte ptr [rax + 0xd], bl ; sti ; call qword ptr [rdx]
0x0000000000462043 : add byte ptr [rax + 1], bh ; cli ; jmp qword ptr [rax]
0x000000000046212b : add byte ptr [rax + 4], bh ; cld ; call rax
0x0000000000463f33 : add byte ptr [rax + rbx], bh ; add byte ptr [rax], cl ; ret
0x0000000000462f43 : add byte ptr [rax + rcx + 0x42980000], cl ; cld ; call rdx
0x0000000000462f63 : add byte ptr [rax + rcx + 0x43580000], ch ; cld ; call qword ptr [rdx]
0x00000000004628e7 : add byte ptr [rax - 0x17], ch ; cli ; call qword ptr [rcx]
0x0000000000441af4 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000457fdb : add byte ptr [rax - 0x75], cl ; call 0x49080933
0x0000000000423dfb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402117 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040479e : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000448598 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x00000000004454e2 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; ret 0xfffb
0x0000000000432bd4 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000457df6 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000045d673 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042be2f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042ec70 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042f7ed : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000040e837 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000042f6c9 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042f685 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000426c02 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004250ba : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000460a9d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000439247 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000463f31 : add byte ptr [rax], al ; add byte ptr [rax + rbx], bh ; add byte ptr [rax], cl ; ret
0x0000000000441af2 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000457fd9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49080935
0x0000000000402115 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040479c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000460a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404935 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045246b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000460a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045e1d2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000045797b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000457b19 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x00000000004111ae : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000448246 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000412772 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004228a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000432733 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044eab2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044ebde : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000405a12 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4b2da445], cl ; ret 0x8024
0x000000000043208a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004330a3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x0000000000447d62 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x0000000000448214 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000433314 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x00000000004253c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000430984 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000430104 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x000000000044a8b8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000044a876 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044fbfe : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000045c0fc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000430470 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000446f49 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x00000000004584b8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000427d29 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042e895 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000042ac0a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004394d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040524a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000460773 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004609d5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426b70 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045fb41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043c4cf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042aa47 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043214a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404937 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f2d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000426afa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040e9c2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042c0fb : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000422e3b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004224c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426f2d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430069 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043464f : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004454e3 : add byte ptr [rax], al ; call 0x401784
0x0000000000463866 : add byte ptr [rax], al ; call 0xffffffffe446373b
0x0000000000462bb2 : add byte ptr [rax], al ; cld ; add al, 0 ; add byte ptr [rax + 0x11], bl ; cld ; jmp qword ptr [rbx]
0x0000000000462072 : add byte ptr [rax], al ; cmp byte ptr [rsi], dh ; cli ; jmp rax
0x0000000000462d16 : add byte ptr [rax], al ; cmp byte ptr [rsi], dl ; cld ; call rdx
0x0000000000462f46 : add byte ptr [rax], al ; cwde ; cld ; call rdx
0x0000000000462a22 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xd], bl ; sti ; call qword ptr [rdx]
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x000000000042c0f7 : add byte ptr [rax], al ; jmp 0x42c106
0x0000000000448260 : add byte ptr [rax], al ; jmp 0x4485d2
0x000000000045e163 : add byte ptr [rax], al ; jmp 0x45e172
0x000000000045e2c5 : add byte ptr [rax], al ; jmp 0x45e2d4
0x000000000045e533 : add byte ptr [rax], al ; jmp 0x45e542
0x0000000000462042 : add byte ptr [rax], al ; js 0x46204c ; cli ; jmp qword ptr [rax]
0x000000000046212a : add byte ptr [rax], al ; js 0x462137 ; cld ; call rax
0x0000000000462f62 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax + 0x43], bl ; cld ; call qword ptr [rdx]
0x0000000000462dfe : add byte ptr [rax], al ; loopne 0x462e23 ; cld ; jmp qword ptr [rbx]
0x000000000042c19f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004607b8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b045 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004500ef : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402116 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462f42 : add byte ptr [rax], al ; mov word ptr [rax], cs ; add byte ptr [rax], al ; cwde ; cld ; call rdx
0x0000000000462082 : add byte ptr [rax], al ; or byte ptr [rdi - 6], al ; jmp qword ptr [rax]
0x0000000000462bb6 : add byte ptr [rax], al ; pop rax ; adc esp, edi ; jmp qword ptr [rbx]
0x0000000000462f66 : add byte ptr [rax], al ; pop rax ; cld ; call qword ptr [rdx]
0x0000000000402405 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004228a3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ddb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042bd54 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000462c12 : add byte ptr [rax], al ; pop rsp ; add eax, 0x12a80000 ; cld ; call rdi
0x0000000000460a9e : add byte ptr [rax], al ; ret
0x000000000046400e : add byte ptr [rax], al ; ror dl, -1 ; call qword ptr [rax]
0x0000000000462e5e : add byte ptr [rax], al ; shl byte ptr [rdx], -4 ; jmp rsi
0x0000000000462c16 : add byte ptr [rax], al ; test al, 0x12 ; cld ; call rdi
0x00000000004621fa : add byte ptr [rax], al ; test al, 0x2f ; cld ; jmp qword ptr [rax]
0x000000000046213a : add byte ptr [rax], al ; test al, 8 ; cld ; call qword ptr [rax]
0x0000000000462073 : add byte ptr [rax], bh ; cli ; jmp rax
0x0000000000462593 : add byte ptr [rax], ch ; ret 0xffff
0x0000000000462080 : add byte ptr [rax], cl ; add byte ptr [rax], al ; or byte ptr [rdi - 6], al ; jmp qword ptr [rax]
0x0000000000462083 : add byte ptr [rax], cl ; cli ; jmp qword ptr [rax]
0x0000000000463f37 : add byte ptr [rax], cl ; ret
0x000000000045e1d4 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004331b8 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x000000000043356e : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x000000000045797d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000457b1b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x00000000004111b0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000447d38 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x0000000000448248 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000412774 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004228a4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404ddc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044eab4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044ebe0 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000042fd8f : add byte ptr [rbx + 0x462dc045], cl ; jns 0x42fd46 ; ret
0x00000000004331d1 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000433555 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000405a14 : add byte ptr [rbx + 0x4b2da445], cl ; ret 0x8024
0x000000000042bd55 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004330a5 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x0000000000433681 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x0000000000447d64 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x0000000000448216 : add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000433316 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000433410 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x0000000000462a23 : add byte ptr [rbx + rax], ch ; add byte ptr [rax + 0xd], bl ; sti ; call qword ptr [rdx]
0x0000000000406697 : add byte ptr [rbx - 0x1bf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004066f9 : add byte ptr [rbx - 0x1c74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004253c5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042537a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000430986 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000430106 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x000000000044a8ba : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000044a878 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044fc00 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000454e45 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044f742 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000454c83 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000045c0fe : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004307c4 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000430472 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x00000000004328d9 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x0000000000446f4b : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x00000000004584ba : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000432897 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x0000000000446f00 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000044b046 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004607b9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000427d2b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000405e7a : add byte ptr [rbx - 0xd25bbb], cl ; jns 0x405ee7 ; ret
0x000000000042e897 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000042ac0c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004394d9 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040524c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000458310 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x0000000000432182 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000443884 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x0000000000426c6e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401ca8 : add byte ptr [rcx], al ; ret
0x0000000000460775 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004609d7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426b72 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043a1ab : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462e5b : add byte ptr [rdi + rax + 0x22c00000], ah ; cld ; jmp rsi
0x0000000000462dfb : add byte ptr [rdi + rax], al ; add al, ah ; sbb al, -4 ; jmp qword ptr [rbx]
0x0000000000462040 : add byte ptr [rdi], al ; add byte ptr [rax], al ; js 0x46204e ; cli ; jmp qword ptr [rax]
0x000000000045fb43 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043c4d1 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042aa49 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043214c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404939 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f2d7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000426afc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040e9c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045bb35 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444f6d : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x000000000044d9bd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004621f8 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; test al, 0x2f ; cld ; jmp qword ptr [rax]
0x0000000000401ca7 : add byte ptr es:[rcx], al ; ret
0x0000000000430983 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000440e38 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x000000000041f7cc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000405b6e : add cl, ch ; ret
0x0000000000405f6f : add cl, ch ; ret 1
0x000000000043c409 : add cl, ch ; ret 2
0x0000000000458091 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000044c27e : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x000000000042bdee : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000040e846 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000453d2e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000431039 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044cc34 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000044b16d : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000457d3f : add dword ptr [rax], ecx ; ret 0x840
0x000000000043c731 : add dword ptr [rax], esp ; ret 0xd108
0x0000000000448444 : add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000044955d : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004514f0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fcd8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045fcc2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000458455 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428850 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000462c15 : add eax, 0x12a80000 ; cld ; call rdi
0x0000000000401ca4 : add eax, 0x26368e ; add ebx, esi ; ret
0x0000000000404dda : add eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x000000000042bd53 : add eax, 0x5d5b0000 ; ret
0x000000000040e836 : add eax, 0xc7000000 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x00000000004061a0 : add eax, 0xffb80000 ; jns 0x40620b ; ret
0x000000000040e637 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e67e : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x0000000000462a25 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xd], bl ; sti ; call qword ptr [rdx]
0x000000000045d5a4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000446efe : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x00000000004338d2 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401c6b : add eax, edx ; sar rax, 1 ; jne 0x401c7c ; pop rbp ; ret
0x0000000000401ca9 : add ebx, esi ; ret
0x000000000044379e : add ecx, eax ; mov rsi, rcx ; call 0x42faa7
0x0000000000453ba9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000462045 : add edx, edi ; jmp qword ptr [rax]
0x000000000040218b : add esp, 0x10 ; pop rbp ; ret
0x0000000000426c6c : add esp, 0x100 ; pop rbp ; ret
0x0000000000444364 : add esp, 0x120 ; pop rbp ; ret
0x0000000000445d49 : add esp, 0x130 ; pop rbp ; ret
0x000000000044fea8 : add esp, 0x140 ; pop rbp ; ret
0x0000000000454903 : add esp, 0x160 ; pop rbp ; ret
0x0000000000431af9 : add esp, 0x170 ; pop rbp ; ret
0x000000000044991a : add esp, 0x18 ; pop rbp ; ret
0x00000000004530c8 : add esp, 0x180 ; pop rbp ; ret
0x0000000000450d9d : add esp, 0x190 ; pop rbp ; ret
0x0000000000426ddc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000447883 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000406641 : add esp, 0x1d0 ; pop rbp ; ret
0x000000000041236e : add esp, 0x20 ; pop rbp ; ret
0x000000000045bb33 : add esp, 0x200 ; pop rbp ; ret
0x000000000044c7fe : add esp, 0x230 ; pop rbp ; ret
0x0000000000447975 : add esp, 0x30 ; pop rbp ; ret
0x0000000000434249 : add esp, 0x310 ; pop rbp ; ret
0x000000000043c591 : add esp, 0x390 ; pop rbp ; ret
0x0000000000426f30 : add esp, 0x40 ; pop rbp ; ret
0x000000000045b619 : add esp, 0x440 ; pop rbp ; ret
0x0000000000410979 : add esp, 0x4a0 ; pop rbp ; ret
0x0000000000411ff2 : add esp, 0x50 ; pop rbp ; ret
0x000000000042f66d : add esp, 0x590 ; pop rbp ; ret
0x000000000042bd50 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x0000000000427e50 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405645 : add esp, 0x70 ; pop rbp ; ret
0x0000000000412b44 : add esp, 0x78 ; pop rbp ; ret
0x0000000000402401 : add esp, 0x80 ; pop rbp ; ret
0x000000000044d87f : add esp, 0x88 ; pop rbp ; ret
0x00000000004275ad : add esp, 0x90 ; pop rbp ; ret
0x000000000043a1a9 : add esp, 0x900 ; pop rbp ; ret
0x000000000044858d : add esp, 0x98 ; pop rbp ; ret
0x0000000000424f96 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040534e : add esp, 0xb0 ; pop rbp ; ret
0x0000000000432087 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000004433db : add esp, 0xbb0 ; pop rbp ; ret
0x000000000040c760 : add esp, 0xbc0 ; pop rbp ; ret
0x0000000000428423 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041314a : add esp, 0xd0 ; pop rbp ; ret
0x000000000044eea8 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044b81f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000413753 : add esp, 8 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x0000000000401c6a : add rax, rdx ; sar rax, 1 ; jne 0x401c7d ; pop rbp ; ret
0x000000000044379d : add rcx, rax ; mov rsi, rcx ; call 0x42faa8
0x000000000040218a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000426c6b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000444363 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000445d48 : add rsp, 0x130 ; pop rbp ; ret
0x000000000044fea7 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000454902 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000431af8 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000449919 : add rsp, 0x18 ; pop rbp ; ret
0x00000000004530c7 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000450d9c : add rsp, 0x190 ; pop rbp ; ret
0x0000000000426ddb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000447882 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000406640 : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000041236d : add rsp, 0x20 ; pop rbp ; ret
0x000000000045bb32 : add rsp, 0x200 ; pop rbp ; ret
0x000000000044c7fd : add rsp, 0x230 ; pop rbp ; ret
0x0000000000447974 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000434248 : add rsp, 0x310 ; pop rbp ; ret
0x000000000043c590 : add rsp, 0x390 ; pop rbp ; ret
0x0000000000426f2f : add rsp, 0x40 ; pop rbp ; ret
0x000000000045b618 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000410978 : add rsp, 0x4a0 ; pop rbp ; ret
0x0000000000411ff1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042f66c : add rsp, 0x590 ; pop rbp ; ret
0x000000000042bd4f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x0000000000427e4f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405644 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000412b43 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000402400 : add rsp, 0x80 ; pop rbp ; ret
0x000000000044d87e : add rsp, 0x88 ; pop rbp ; ret
0x00000000004275ac : add rsp, 0x90 ; pop rbp ; ret
0x000000000043a1a8 : add rsp, 0x900 ; pop rbp ; ret
0x000000000044858c : add rsp, 0x98 ; pop rbp ; ret
0x0000000000424f95 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040534d : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000432086 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000004433da : add rsp, 0xbb0 ; pop rbp ; ret
0x000000000040c75f : add rsp, 0xbc0 ; pop rbp ; ret
0x0000000000428422 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000413149 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044eea7 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044b81e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000413752 : add rsp, 8 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x000000000040a760 : and ah, byte ptr [rip - 0x5480000] ; ret
0x000000000043464d : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000046077d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000458454 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042884f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405946 : and ax, 2 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045808f : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000462e61 : and bh, ah ; jmp rsi
0x000000000045246a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004472d6 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004474c6 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000444366 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427a5b : and byte ptr [rsi + 0x58], ah ; jb 0x427a92 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044c27c : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000045808e : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041ea01 : and eax, 0x75b4b9d3 ; ret
0x0000000000405947 : and eax, 0x89480002 ; in al, dx ; pop rbp ; ret
0x000000000042c19d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000432af2 : and eax, 0xdab0b9fa ; ret
0x000000000040a761 : and eax, 0xfab80000 ; ret
0x000000000045e8b8 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045e3cf : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045e97a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000044c27b : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000443ab5 : call 0x12443abb
0x000000000044258c : call 0x18442592
0x0000000000443b27 : call 0x22443b2d
0x000000000044395e : call 0x28443964
0x0000000000433d75 : call 0x401778
0x00000000004454e5 : call 0x401782
0x0000000000427e55 : call 0x427f19
0x00000000004437a3 : call 0x42faa2
0x0000000000439bc3 : call 0x445df2
0x0000000000439bc2 : call 0x445df3
0x0000000000448597 : call 0x44e5a5
0x0000000000457fdf : call 0x4908092f
0x0000000000457fde : call 0x49080930
0x000000000045802d : call 0x4908097d
0x000000000045802c : call 0x4908097e
0x000000000044c732 : call 0xffffffff8a251ccb
0x000000000045d9cd : call 0xffffffffaca69c01
0x000000000045d9cc : call 0xffffffffaca69c02
0x00000000004438ae : call 0xffffffffe34438b4
0x0000000000463868 : call 0xffffffffe4463739
0x0000000000443b36 : call 0xffffffffe5443b3c
0x00000000004224b9 : call 0xffffffffe904ae09
0x00000000004224b8 : call 0xffffffffe904ae0a
0x0000000000460a79 : call qword ptr [r12 + rbx*8]
0x000000000042be37 : call qword ptr [rax]
0x000000000040cb37 : call qword ptr [rbx]
0x00000000004035b5 : call qword ptr [rcx]
0x0000000000421944 : call qword ptr [rdi]
0x000000000041d92b : call qword ptr [rdx]
0x000000000042f7f5 : call qword ptr [rsi]
0x0000000000460a7a : call qword ptr [rsp + rbx*8]
0x0000000000401ccd : call rax
0x00000000004250c2 : call rbx
0x000000000041fbab : call rcx
0x00000000004102e0 : call rdi
0x0000000000404e16 : call rdx
0x000000000040c993 : call rsi
0x00000000004047ae : call rsp
0x0000000000450d9b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x000000000045b617 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004271b7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044e34b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000044a429 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000428421 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401c6f : clc ; jne 0x401c78 ; pop rbp ; ret
0x000000000045e8b9 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045e683 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000044b897 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042c3fe : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045785e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044c97b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044c99b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045e0d1 : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000423dff : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405527 : clc ; pop rbp ; ret
0x000000000044538d : clc ; pop rbx ; pop rbp ; ret
0x0000000000414f8d : clc ; ret 0x77a8
0x000000000042c597 : clc ; ret 0x898d
0x000000000042e447 : clc ; ret 0xb28d
0x00000000004437a4 : clc ; ret 0xfffe
0x000000000045e3d0 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000462bb4 : cld ; add al, 0 ; add byte ptr [rax + 0x11], bl ; cld ; jmp qword ptr [rbx]
0x0000000000449918 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x000000000045e00e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044b81d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000046213e : cld ; call qword ptr [rax]
0x0000000000462d3a : cld ; call qword ptr [rbx]
0x0000000000462f6a : cld ; call qword ptr [rdx]
0x000000000046212e : cld ; call rax
0x0000000000462c1a : cld ; call rdi
0x0000000000462d1a : cld ; call rdx
0x00000000004621e6 : cld ; inc eax ; or eax, 0x2ac80000 ; cld ; jmp rax
0x00000000004111df : cld ; jmp 0x41124c
0x00000000004111de : cld ; jmp 0x41124d
0x00000000004621fe : cld ; jmp qword ptr [rax]
0x0000000000462bba : cld ; jmp qword ptr [rbx]
0x00000000004631ca : cld ; jmp qword ptr [rdi]
0x00000000004621ee : cld ; jmp rax
0x0000000000462e62 : cld ; jmp rsi
0x0000000000454e4a : cld ; stc ; in al, dx ; ret 0x8589
0x000000000045559b : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000462035 : cld ; stc ; jmp rax
0x00000000004394d5 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004051c0 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004628ea : cli ; call qword ptr [rcx]
0x000000000046207e : cli ; inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], cl ; cli ; jmp qword ptr [rax]
0x0000000000462046 : cli ; jmp qword ptr [rax]
0x0000000000462076 : cli ; jmp rax
0x00000000004328de : cli ; mov cl, 0x37 ; ret 0x4589
0x0000000000432b6a : cli ; mov cl, 0x37 ; ret 0x94b9
0x0000000000432bda : cli ; mov cl, 0x37 ; ret 0xd3e9
0x000000000040628c : cli ; mov ebx, 0x8945d276 ; ret 0x8141
0x0000000000427a60 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040a2f1 : cli ; ret
0x000000000046077c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004383f6 : cmc ; jmp 0x43a5b2
0x000000000042697b : cmc ; ret 0x4f0b
0x0000000000439b37 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000436678 : cmp byte ptr [rbx], dl ; ret
0x0000000000462074 : cmp byte ptr [rsi], dh ; cli ; jmp rax
0x0000000000462d18 : cmp byte ptr [rsi], dl ; cld ; call rdx
0x0000000000426b11 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000429107 : cmp dl, al ; ret
0x000000000044fed2 : cmp dword ptr [rax - 0x75], ecx ; jne 0x44feb4 ; call rax
0x00000000004349a6 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437088 : cmp dword ptr [rbx], edx ; ret
0x0000000000403379 : cmp dword ptr [rdx], esp ; ret 0x899a
0x0000000000404b9e : cmp dword ptr [rdx], esp ; ret 0xb99a
0x0000000000427fc2 : cmp eax, 0x8945c621 ; ret 0x8141
0x000000000042b1d9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000401c2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c40 ; pop rbp ; ret
0x000000000042876f : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000433fa5 : cmp ecx, ebp ; ret 3
0x000000000041f857 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000407015 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000042fd46 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000042bd52 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000432af0 : cwde ; and eax, 0xdab0b9fa ; ret
0x0000000000462f48 : cwde ; cld ; call rdx
0x0000000000439bbf : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x445df6
0x0000000000439bbe : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x445df7
0x0000000000410f95 : dec dword ptr [rax + 0x29] ; ret 0x148
0x00000000004577f7 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000406431 : dec dword ptr [rax - 0x1a06b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004065f8 : dec dword ptr [rax - 0x1b86b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000046202f : dec dword ptr [rax - 0x37fffffa] ; cld ; stc ; jmp rax
0x000000000041ed5b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041e6ce : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041eed3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000427b8d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045b176 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000406437 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040669d : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000440eff : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x0000000000441d8c : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x0000000000439e21 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000441583 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000428375 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000442ede : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000426976 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000042837b : dec dword ptr [rdi] ; ret 0x4589
0x0000000000439e27 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004334cd : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x000000000044dca1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000452b1b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004338ce : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000405b68 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffff6], bh ; ret
0x0000000000448af0 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x000000000044d43a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000448094 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000414c6a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000043081d : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000405f69 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffb], cl ; ret 1
0x0000000000446ccf : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000044cc30 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000443ea3 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000455f15 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044bcbf : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000406175 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000045d39e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000040b06e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000449970 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000044996f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000046244c : enter -0x140, -1 ; push 0x68000017 ; ret
0x000000000044e0b0 : enter -0x74b8, 0x31 ; call rax
0x000000000042fa8e : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000045abf9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045e1f5 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000042f3f0 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000412f69 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004468a9 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000446867 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000446888 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045d380 : fbld dword ptr [rcx] ; ret 0x941
0x000000000045e4ab : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004351cc : fcomp st(3) ; ret
0x0000000000441c3a : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000452b1e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x0000000000432151 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045d35f : fild word ptr [rcx - 0x77] ; ret
0x0000000000439b8f : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000439b8e : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045e97b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000042bfbb : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004051bb : fisttp dword ptr [rdx - 0x57f00ab] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431b95 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045ed38 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004519fe : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045bde7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004519ff : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044e0ac : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000044eded : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044d6d9 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000045bde8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000460a7c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000437a44 : fstpnce st(3), st(0) ; ret
0x000000000040b0d7 : fxch st(0), st(7) ; jrcxz 0x40b099 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000040b0d6 : fxch st(0), st(7) ; jrcxz 0x40b09a ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000402189 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434247 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x00000000004469d9 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000045c34c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000413751 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401c40 : hlt ; pop rbp ; mov edi, 0x6652e0 ; jmp rax
0x000000000043e8f8 : hlt ; ret
0x0000000000427b8b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000439e25 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004282c0 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x0000000000448442 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000040553d : in al, -0x18 ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000432bd9 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004472d4 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004474c4 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044859e : in al, 0x3e ; ret
0x000000000043c58f : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x000000000044a7e1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000458a58 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040534c : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000457cc1 : in al, dx ; jmp 0x457e8d
0x0000000000457cc0 : in al, dx ; jmp 0x457e8e
0x000000000045da8c : in al, dx ; jmp 0x45db09
0x000000000045da8b : in al, dx ; jmp 0x45db0a
0x000000000045e365 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040211a : in al, dx ; pop rbp ; ret
0x0000000000454c8a : in al, dx ; ret 0x8589
0x0000000000457ca4 : in al, dx ; ret 0xe8ff
0x000000000045559d : in al, dx ; ret 0xff3
0x0000000000405523 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040bfac : inc dword ptr [rax + 0x558801e2] ; ret
0x00000000004051be : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000042e893 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000441509 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004101eb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046207f : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], cl ; cli ; jmp qword ptr [rax]
0x0000000000430ded : inc dword ptr [rbp + 0x21] ; ret
0x0000000000403ef6 : inc dword ptr [rcx + 0xf] ; ret
0x0000000000432178 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000043c405 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x00000000004621e7 : inc eax ; or eax, 0x2ac80000 ; cld ; jmp rax
0x000000000042be89 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000462a24 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xd], bl ; sti ; call qword ptr [rdx]
0x000000000043730c : insb byte ptr [rdi], dx ; ret
0x0000000000428bc6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x0000000000428c1a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000424967 : int 0x5b
0x0000000000430f0b : int 0x73
0x0000000000435ed1 : int 0x80
0x0000000000455cb4 : int 6
0x00000000004418dc : int 7
0x0000000000401c33 : ja 0x401c3a ; pop rbp ; ret
0x0000000000457861 : ja 0x4578ae ; pop rbp ; ret
0x000000000043477c : jae 0x434752 ; ret 0x89e0
0x0000000000441fd8 : jae 0x44200e ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000441fe4 : jae 0x44201b ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000427a5e : jb 0x427a8f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000412a2d : jbe 0x412a06 ; adc ch, cl ; ret
0x0000000000401c3f : je 0x401c3d ; pop rbp ; mov edi, 0x6652e0 ; jmp rax
0x00000000004347be : je 0x434794 ; ret 0x89e0
0x0000000000434889 : je 0x43485f ; ret 0xb9e0
0x000000000044379c : je 0x4437ef ; add ecx, eax ; mov rsi, rcx ; call 0x42faa9
0x0000000000440f31 : jg 0x440ec0 ; push rbp ; ret
0x0000000000405526 : jge 0x405523 ; pop rbp ; ret
0x000000000041ddf6 : jge 0x41dd7b ; ret 0xffd5
0x000000000041e8c0 : jge 0x41e8a0 ; shr cl, cl ; ret 0x3b
0x000000000044c97a : jge 0x44c97b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044c99a : jge 0x44c99b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e0ab : jge 0x44e08e ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045785d : jge 0x45785e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x00000000004549e8 : jle 0x45497c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000040194b : jmp 0x401747
0x0000000000404698 : jmp 0x404fb3
0x000000000040c0f5 : jmp 0x40cc8c
0x000000000040a75f : jmp 0x40cc8d
0x000000000040e0c3 : jmp 0x40ea37
0x00000000004111e0 : jmp 0x41124b
0x000000000041f010 : jmp 0x422490
0x000000000041cf14 : jmp 0x422491
0x000000000041e2e1 : jmp 0x422492
0x0000000000425d9b : jmp 0x426807
0x0000000000425cd8 : jmp 0x426809
0x0000000000427e03 : jmp 0x427e68
0x000000000042ae8b : jmp 0x42bfd0
0x000000000042b8a6 : jmp 0x42bfd1
0x000000000042c0f9 : jmp 0x42c104
0x000000000042ea0f : jmp 0x42f8d2
0x0000000000433fea : jmp 0x434374
0x0000000000438508 : jmp 0x4384c7
0x0000000000438f57 : jmp 0x43a5b0
0x00000000004383f7 : jmp 0x43a5b1
0x0000000000438611 : jmp 0x43a5b2
0x000000000043ac17 : jmp 0x43ac64
0x000000000043bdba : jmp 0x43c6d9
0x0000000000440a45 : jmp 0x443b44
0x00000000004476cd : jmp 0x447923
0x0000000000448262 : jmp 0x4485d0
0x000000000044831b : jmp 0x4485d1
0x000000000044d6b4 : jmp 0x44d910
0x000000000044df49 : jmp 0x44e0d5
0x000000000044fdda : jmp 0x44ff1e
0x000000000044fdd9 : jmp 0x44ff1f
0x000000000044fdd9 : jmp 0x44ff20
0x0000000000457cc2 : jmp 0x457e8c
0x000000000045b4b6 : jmp 0x45b798
0x000000000045da8d : jmp 0x45db08
0x000000000045e165 : jmp 0x45e170
0x000000000045e2c7 : jmp 0x45e2d2
0x000000000045e535 : jmp 0x45e540
0x000000000045531f : jmp 0x4907dc6f
0x000000000045546b : jmp 0x4907ddbb
0x000000000045553d : jmp 0x4907de8d
0x00000000004555be : jmp 0x4907df0e
0x0000000000457564 : jmp 0x4907feb4
0x00000000004575df : jmp 0x4907ff2f
0x000000000042697a : jmp 0x4f4e2c76
0x000000000040e258 : jmp 0xffffffffc2d5f16e
0x000000000045d14f : jmp 0xffffffffc40a0816
0x0000000000421de5 : jmp qword ptr [rax]
0x0000000000462bbb : jmp qword ptr [rbx]
0x000000000040de8b : jmp qword ptr [rcx]
0x000000000040e686 : jmp qword ptr [rdi]
0x000000000040a983 : jmp qword ptr [rdx]
0x000000000040ace4 : jmp qword ptr [rsi]
0x0000000000401c47 : jmp rax
0x000000000041e3e8 : jmp rbx
0x000000000041ee1a : jmp rcx
0x000000000040b2dd : jmp rdi
0x0000000000401c87 : jmp rdx
0x0000000000462e63 : jmp rsi
0x000000000040afc9 : jmp rsp
0x0000000000401c70 : jne 0x401c77 ; pop rbp ; ret
0x0000000000447969 : jne 0x44794c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449971 : jne 0x449969 ; mov rax, rdx ; pop rbp ; ret
0x0000000000449f42 : jne 0x449f3a ; mov rax, rdx ; pop rbp ; ret
0x000000000044e109 : jne 0x44e0d4 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000044fed5 : jne 0x44feb1 ; call rax
0x0000000000405e80 : jns 0x405ee1 ; ret
0x00000000004061a5 : jns 0x406206 ; ret
0x000000000042fd45 : jns 0x42fcf0 ; ret
0x000000000042fd44 : jns 0x42fcf1 ; ret
0x000000000042fd95 : jns 0x42fd40 ; ret
0x000000000042fd94 : jns 0x42fd41 ; ret
0x0000000000439268 : jns 0x439225 ; ret 0xcaed
0x0000000000405647 : jo 0x4056a8 ; ret
0x0000000000417d0e : jo 0x417d1a ; ret
0x000000000041997e : jo 0x41998a ; ret
0x000000000041cecd : jo 0x41ced9 ; ret
0x00000000004241b4 : jo 0x424215 ; ret
0x000000000042f83f : jo 0x42f80e ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042f83e : jo 0x42f80f ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042fcdf : jo 0x42fd40 ; ret
0x0000000000431afb : jo 0x431b03 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434654 : jo 0x4346b5 ; ret
0x0000000000439bc1 : jo 0x439c0b ; call 0x445df4
0x000000000040b0d9 : jrcxz 0x40b097 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000043c155 : jrcxz 0x43c0ff ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x0000000000412b46 : js 0x412ba7 ; ret
0x0000000000462044 : js 0x46204a ; cli ; jmp qword ptr [rax]
0x000000000046212c : js 0x462135 ; cld ; call rax
0x000000000043ac16 : lahf ; jmp 0x43ac65
0x000000000041e8be : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041f9be : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004119e6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c064 : lea esi, dword ptr [rdx] ; ret
0x0000000000414605 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004124cf : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044538b : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414604 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044538a : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044a8bf : leave ; ret 0x86f8
0x000000000042fd42 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000462127 : ljmp ptr [rax + 0x7800000a] ; add al, -4 ; call rax
0x000000000041d21e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000462f64 : lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax + 0x43], bl ; cld ; call qword ptr [rdx]
0x000000000044d43d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040553f : lodsd eax, dword ptr [rsi] ; ret
0x000000000042884e : loop 0x42887b ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042884d : loop 0x42887c ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044ca80 : loop 0x44ca75 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000045e462 : loop 0x45e415 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040f3e7 : loope 0x40f45d ; ret
0x000000000040f6bf : loope 0x40f735 ; ret
0x0000000000410613 : loope 0x410689 ; ret
0x0000000000420225 : loope 0x4201f3 ; jmp 0x422493
0x0000000000441fe2 : loope 0x441fb6 ; jae 0x44201d ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000044750b : loope 0x4474fc ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000044955c : loope 0x449568 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d7be : loope 0x44d779 ; xchg eax, ebp ; jmp 0x44d913
0x0000000000414603 : loopne 0x414656 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423bad : loopne 0x423c13 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424f94 : loopne 0x424fe7 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004274c3 : loopne 0x4274cc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427e4e : loopne 0x427e9e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000427e4d : loopne 0x427e9f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000432732 : loopne 0x43273c ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000441fd6 : loopne 0x441fa9 ; jae 0x442010 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000447d67 : loopne 0x447d99 ; pop rdi ; ret
0x0000000000447d66 : loopne 0x447d9a ; pop rdi ; ret
0x000000000044824b : loopne 0x44827d ; ret
0x000000000044824a : loopne 0x44827e ; ret
0x000000000044eeaa : loopne 0x44eeb1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004524fe : loopne 0x45254f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004524fd : loopne 0x452550 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045779d : loopne 0x4577f0 ; add esp, 0x1d0 ; pop rbp ; ret
0x000000000045bd8c : loopne 0x45bd20 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045bd8b : loopne 0x45bd21 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045c350 : loopne 0x45c357 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e012 : loopne 0x45e019 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004607bc : loopne 0x46080b ; mov esp, ebp ; pop rbp ; ret
0x00000000004607bb : loopne 0x46080c ; mov esp, ebp ; pop rbp ; ret
0x0000000000460a0c : loopne 0x460a5b ; mov esp, ebp ; pop rbp ; ret
0x0000000000460a0b : loopne 0x460a5c ; mov esp, ebp ; pop rbp ; ret
0x0000000000462e00 : loopne 0x462e21 ; cld ; jmp qword ptr [rbx]
0x000000000045e461 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041dded : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dec7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000440e6c : mov ah, -0x76 ; ret 0x124
0x000000000044da1e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402cb1 : mov ah, 0x69 ; ret
0x000000000041be75 : mov ah, 0x75 ; ret
0x00000000004329d9 : mov al, -0x26 ; ret
0x0000000000424983 : mov al, -0x47 ; ret
0x000000000044d7bf : mov al, -0x6b ; jmp 0x44d912
0x000000000045ac7f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f192 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ebc6 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405350 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043a71a : mov al, 0x2d ; ret
0x000000000043a9d6 : mov al, 0x2d ; ret 0x24cc
0x0000000000456ba0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x00000000004433dd : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e8bb : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000045f02d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045ecfa : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042884c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044a0e8 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045ef5d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045e97c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045e8ba : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045e684 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000045e689 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000432228 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000042f795 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x00000000004490f8 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439b35 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000415815 : mov bl, 0x75 ; ret
0x000000000044d881 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401ca3 : mov byte ptr [rip + 0x26368e], 1 ; ret
0x000000000040f403 : mov ch, 0x5b ; ret
0x0000000000403731 : mov ch, 0x69 ; ret
0x000000000041d66f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043289d : mov cl, 0x37 ; ret 0x4589
0x0000000000432b6b : mov cl, 0x37 ; ret 0x94b9
0x0000000000432bdb : mov cl, 0x37 ; ret 0xd3e9
0x000000000043e8bf : mov cl, 0x7d ; ret
0x0000000000458094 : mov dh, -0x39 ; pop rbp ; ret
0x000000000044c281 : mov dh, -0x3a ; pop rbp ; ret
0x0000000000445388 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044955f : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004514f2 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fcda : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045fcc4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000458457 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428852 : mov dh, -0x40 ; pop rbp ; ret
0x000000000045e97f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000043bc52 : mov dh, -0x47 ; ret 0x9214
0x000000000046077a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000401ca5 : mov dr0, word ptr [rsi] ; add byte ptr es:[rcx], al ; ret
0x000000000045f9f1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000458311 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413d89 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041395f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044fd55 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000452399 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x0000000000457cbf : mov dword ptr [rbp - 0x14], eax ; jmp 0x457e8f
0x000000000045da8a : mov dword ptr [rbp - 0x14], eax ; jmp 0x45db0b
0x000000000045616d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x00000000004563a0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000044d6b1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x44d913
0x000000000044df46 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x44e0d8
0x000000000044dfd1 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x44e0d8
0x000000000044da1c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425d98 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42680a
0x0000000000402187 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044dfb1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000405525 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000414066 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b898 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000457860 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000413c0d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000432089 : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000045650b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042ea10 : mov eax, 0xb800000e ; ret 0x4dbf
0x000000000045830f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004110d3 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427ccb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fea6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000458a56 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042c1a1 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000427e9e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411fee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045d905 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413d8c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000427e4c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045bd8a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004607ba : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412b40 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000044796f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000413c0f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044e10f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000455937 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439bbd : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x445df8
0x000000000041374f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000449916 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042c3fc : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423dfd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c97d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044c99d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000413c0e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000045e686 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000045e0d3 : mov eax, eax ; pop rbp ; ret
0x000000000045e4aa : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000450e71 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000449974 : mov eax, edx ; pop rbp ; ret
0x000000000045e3cd : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045e685 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000420628 : mov ebp, 0xe19c53ba ; ret
0x0000000000405b6b : mov ebp, 0xe900000a ; ret
0x0000000000401ccb : mov ebp, esp ; call rax
0x0000000000401c31 : mov ebp, esp ; ja 0x401c3c ; pop rbp ; ret
0x0000000000405522 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040628d : mov ebx, 0x8945d276 ; ret 0x8141
0x000000000042f00f : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000041395c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004522ab : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004524fc : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000452e16 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044e0ae : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045650d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004522af : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401cc5 : mov edi, 0x664e20 ; mov rbp, rsp ; call rax
0x0000000000401c42 : mov edi, 0x6652e0 ; jmp rax
0x0000000000401c82 : mov edi, 0x6652e0 ; jmp rdx
0x0000000000457cc3 : mov edi, 0xb8000001 ; ret
0x000000000042ad06 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000041cec7 : mov edi, 0xb8000055 ; wait ; jo 0x41cedf ; ret
0x000000000045785c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044c979 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044c999 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004522b2 : mov edi, dword ptr [rcx] ; call rax
0x000000000044fed1 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000460a77 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000460a76 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044c061 : mov edx, 0x328dfe07 ; ret
0x000000000045b42e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d68b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041e502 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000045b417 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004063c5 : mov esi, 0xb9c05257 ; ret 0x8024
0x0000000000439bc0 : mov esi, dword ptr [rax + 0x44] ; call 0x445df5
0x000000000044fed4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000044e0b2 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c80 : mov esi, eax ; mov edi, 0x6652e0 ; jmp rdx
0x000000000044796c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044e10c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004437a1 : mov esi, ecx ; call 0x42faa4
0x00000000004104f5 : mov esp, 0xe8fffffb ; ret 0xff13
0x0000000000402119 : mov esp, ebp ; pop rbp ; ret
0x0000000000405524 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000414065 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045785f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044da1d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042f794 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000043a719 : mov r8b, 0x2d ; ret
0x000000000043a9d5 : mov r8b, 0x2d ; ret 0x24cc
0x00000000004110d2 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427cca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fea5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427e9d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411fed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004500f1 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000427e4b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412b3f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000044796e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044e10e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000439bbc : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x445df9
0x0000000000423dfc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c97c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044c99c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045e4a9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045e0d2 : mov rax, r8 ; pop rbp ; ret
0x0000000000450e70 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000449973 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cca : mov rbp, rsp ; call rax
0x0000000000401c30 : mov rbp, rsp ; ja 0x401c3d ; pop rbp ; ret
0x0000000000405521 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000452e15 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044e0ad : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045650c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004522ae : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045785b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044c978 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044c998 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004522b1 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044fed0 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044fed3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044e0b1 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c7f : mov rsi, rax ; mov edi, 0x6652e0 ; jmp rdx
0x000000000044796b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044e10b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004437a0 : mov rsi, rcx ; call 0x42faa5
0x0000000000402118 : mov rsp, rbp ; pop rbp ; ret
0x0000000000427a61 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000462f44 : mov word ptr [rax], cs ; add byte ptr [rax], al ; cwde ; cld ; call rdx
0x000000000045cff1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000419168 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040580e : movabs dword ptr [0x8348e28948b69d9b], eax ; ret 0x48f0
0x000000000044125d : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045559a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x000000000044125e : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041c3b5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000448af3 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x0000000000406fc1 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000431b93 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004514f1 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fcd9 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045fcc3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000458456 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428851 : movzx eax, al ; pop rbp ; ret
0x000000000045e97e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045e688 : movzx eax, ax ; pop rbp ; ret
0x0000000000458093 : movzx eax, bh ; pop rbp ; ret
0x0000000000445387 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044955e : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c280 : movzx eax, dh ; pop rbp ; ret
0x0000000000458092 : movzx eax, dil ; pop rbp ; ret
0x000000000044c27f : movzx eax, sil ; pop rbp ; ret
0x000000000045b228 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000415655 : nop ; ret
0x0000000000423a62 : nop ; ret 0x148
0x0000000000423a76 : nop ; ret 0x2948
0x0000000000407929 : nop ; test edx, ecx ; ret
0x0000000000460a98 : nop dword ptr [rax + rax] ; ret
0x000000000046213d : or ah, bh ; call qword ptr [rax]
0x00000000004454e1 : or al, 0 ; add byte ptr [rax], al ; call 0x401786
0x00000000004334d1 : or al, 0 ; add cl, ch ; ret
0x000000000041ddea : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dec4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000462129 : or al, byte ptr [rax] ; add byte ptr [rax + 4], bh ; cld ; call rax
0x0000000000405b6c : or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000457ca1 : or bh, al ; in al, dx ; ret 0xe8ff
0x000000000045d6b5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040e914 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rsi]
0x00000000004549ed : or byte ptr [r15], 0x8f ; ret 6
0x0000000000413960 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042f010 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000462f65 : or byte ptr [rax], al ; add byte ptr [rax + 0x43], bl ; cld ; call qword ptr [rdx]
0x0000000000462081 : or byte ptr [rax], al ; add byte ptr [rax], cl ; cli ; jmp qword ptr [rax]
0x0000000000425378 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000432180 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040e256 : or byte ptr [rbx - 0x6af0f217], al ; ret 0xb60f
0x0000000000462084 : or byte ptr [rdi - 6], al ; jmp qword ptr [rax]
0x00000000004549ee : or byte ptr [rdi], 0x8f ; ret 6
0x000000000042ea48 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000045d6b4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000041eed6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000414064 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040e0c5 : or dword ptr [rax], eax ; add al, ch ; ret
0x00000000004621e9 : or eax, 0x2ac80000 ; cld ; jmp rax
0x0000000000405f6c : or eax, 0xe9000005 ; ret 1
0x000000000043222a : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045e0d0 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000045e3d3 : or eax, esi ; pop rbp ; ret
0x000000000040e705 : or ebp, dword ptr [rdi] ; xor eax, 0x8ca975b9 ; ret 0x1b2
0x000000000045e4a7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000413c0b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045e4a6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045e0cf : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000044c27d : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x0000000000458090 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041f7cb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045ecfc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000453a29 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000453ba8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045f02f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424982 : out dx, eax ; mov al, -0x47 ; ret
0x000000000044750e : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000045b419 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044d9a9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004208b5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415506 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420900 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004083a9 : outsb dx, byte ptr [rsi] ; ret 0xef47
0x0000000000426c01 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000439b8d : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045b41c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004083fd : outsd dx, dword ptr [rsi] ; ret 0xef47
0x0000000000427a5c : pop ax ; jb 0x427a91 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044750f : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040e751 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000460a8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423baf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e753 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000460a8e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e755 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000460a90 : pop r14 ; pop r15 ; ret
0x0000000000404dde : pop r14 ; pop rbp ; ret
0x000000000040e757 : pop r15 ; pop rbp ; ret
0x0000000000460a92 : pop r15 ; ret
0x0000000000462bb8 : pop rax ; adc esp, edi ; jmp qword ptr [rbx]
0x0000000000445883 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000462f68 : pop rax ; cld ; call qword ptr [rdx]
0x0000000000427a5d : pop rax ; jb 0x427a90 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401ca2 : pop rbp ; mov byte ptr [rip + 0x26368e], 1 ; ret
0x0000000000401c41 : pop rbp ; mov edi, 0x6652e0 ; jmp rax
0x0000000000401c7e : pop rbp ; mov rsi, rax ; mov edi, 0x6652e0 ; jmp rdx
0x0000000000460a8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e754 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000460a8f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041d672 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000419945 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041d68e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401c35 : pop rbp ; ret
0x0000000000423bae : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004124d2 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ddd : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042bd56 : pop rbx ; pop rbp ; ret
0x000000000040f404 : pop rbx ; ret
0x000000000041d673 : pop rcx ; ret 0x1b2
0x0000000000417d46 : pop rcx ; ret 0x8589
0x000000000041d68f : pop rcx ; ret 0x8b48
0x000000000041f9c0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004282bf : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000040e758 : pop rdi ; pop rbp ; ret
0x0000000000433686 : pop rdi ; ret
0x0000000000409f8d : pop rdi ; ret 0x60ea
0x000000000040e756 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000460a91 : pop rsi ; pop r15 ; ret
0x0000000000404ddf : pop rsi ; pop rbp ; ret
0x00000000004330aa : pop rsi ; ret
0x0000000000409f39 : pop rsi ; ret 0x60ea
0x00000000004054b3 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000462c14 : pop rsp ; add eax, 0x12a80000 ; cld ; call rdi
0x000000000040e752 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000460a8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423bb0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417d45 : pop rsp ; pop rcx ; ret 0x8589
0x000000000044d9c0 : pop rsp ; ret 0xf66
0x0000000000446efd : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000045fb45 : popfq ; ret 0xd284
0x0000000000453975 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041d670 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041f85a : push -0x75425eeb ; push rbp ; ret
0x000000000041c3b8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000462535 : push -1 ; call qword ptr [rax]
0x0000000000462450 : push 0x68000017 ; ret
0x000000000046259f : push qword ptr [rax - 0x37ffffe4] ; ret
0x000000000040c9e9 : push qword ptr [rbx] ; xchg ecx, esp ; ret 0x93e9
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000411ff4 : push rax ; pop rbp ; ret
0x000000000045e1f4 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000044edec : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044d6d8 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004051bd : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401cc4 : push rbp ; mov edi, 0x664e20 ; mov rbp, rsp ; call rax
0x0000000000405520 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040bfb1 : push rbp ; ret
0x0000000000440e4f : push rbp ; ret 0x1b2
0x0000000000410372 : push rbp ; ret 0x484c
0x000000000040eec3 : push rbp ; ret 0x894c
0x0000000000410356 : push rbp ; ret 0xb24c
0x000000000041f7f6 : push rbp ; ret 0xd284
0x000000000044434f : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000455716 : push rbp ; shr al, 1 ; ret
0x000000000041ddef : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dec9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404933 : push rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040da64 : push rbx ; ret
0x000000000045b41b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042f476 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042e89a : pushfq ; ret 0x8445
0x000000000043c4d3 : pushfq ; ret 0xd284
0x00000000004002dd : ret
0x0000000000414c6e : ret 0
0x000000000044edf0 : ret 0x10
0x000000000042f04a : ret 0x108
0x00000000004372f0 : ret 0x1111
0x0000000000440e6f : ret 0x124
0x000000000040b4ce : ret 0x12b9
0x0000000000410f98 : ret 0x148
0x0000000000438be4 : ret 0x19
0x0000000000403369 : ret 0x1a
0x0000000000415c3d : ret 0x1add
0x0000000000437ee8 : ret 0x1b
0x000000000040e70c : ret 0x1b2
0x000000000040afc0 : ret 0x1c
0x000000000044d3cd : ret 0x1cdd
0x0000000000441d78 : ret 0x1d
0x000000000044d2f5 : ret 0x1e1
0x0000000000409b01 : ret 0x1f
0x00000000004394cf : ret 0x2145
0x00000000004381e4 : ret 0x23
0x000000000041658a : ret 0x23da
0x000000000043a9d8 : ret 0x24cc
0x000000000044035e : ret 0x25
0x00000000004119ba : ret 0x2538
0x0000000000401b52 : ret 0x2636
0x0000000000401952 : ret 0x2637
0x0000000000401742 : ret 0x2638
0x0000000000423288 : ret 0x279e
0x000000000044d9aa : ret 0x280f
0x00000000004586c1 : ret 0x2941
0x000000000041eed9 : ret 0x2948
0x000000000041f9c4 : ret 0x2a
0x0000000000441dc0 : ret 0x2ae8
0x000000000043e21e : ret 0x2b
0x000000000041ddf2 : ret 0x2d50
0x000000000045af7e : ret 0x3040
0x000000000043faba : ret 0x33
0x000000000044eaba : ret 0x3504
0x000000000041e8c4 : ret 0x3b
0x0000000000439a30 : ret 0x3d94
0x000000000041b925 : ret 0x3e
0x00000000004084b1 : ret 0x42
0x00000000004074b9 : ret 0x45
0x0000000000428063 : ret 0x4589
0x000000000041ed61 : ret 0x4802
0x000000000044d090 : ret 0x4810
0x0000000000441d8f : ret 0x4813
0x000000000045b41e : ret 0x4815
0x0000000000410373 : ret 0x484c
0x00000000004208b6 : ret 0x4861
0x0000000000445aa1 : ret 0x4878
0x000000000044f747 : ret 0x48c3
0x000000000040e5aa : ret 0x48d
0x0000000000405825 : ret 0x48e0
0x0000000000401eca : ret 0x48f0
0x0000000000419171 : ret 0x4b
0x0000000000424787 : ret 0x4cc0
0x000000000040e7b0 : ret 0x4cf0
0x000000000042c8c2 : ret 0x4dbf
0x000000000042697c : ret 0x4f0b
0x000000000043a266 : ret 0x5189
0x0000000000413bbb : ret 0x5589
0x00000000004551bf : ret 0x558a
0x000000000044407f : ret 0x558b
0x000000000041e07a : ret 0x5966
0x00000000004255d7 : ret 0x5bc6
0x000000000043c48b : ret 0x5fe8
0x0000000000444353 : ret 0x60
0x0000000000409f3a : ret 0x60ea
0x000000000046077f : ret 0x61
0x0000000000434e4d : ret 0x6809
0x00000000004152d6 : ret 0x6a8a
0x000000000042cffa : ret 0x6ea5
0x000000000043010c : ret 0x6fcb
0x0000000000414f8e : ret 0x77a8
0x000000000040b160 : ret 0x78
0x00000000004160f1 : ret 0x7a8a
0x000000000041cd6b : ret 0x7b7f
0x00000000004067e1 : ret 0x7d19
0x0000000000405a1a : ret 0x8024
0x000000000042371a : ret 0x8041
0x0000000000406292 : ret 0x8141
0x0000000000439565 : ret 0x8148
0x000000000041ec84 : ret 0x822d
0x000000000043c484 : ret 0x8341
0x0000000000455322 : ret 0x8348
0x0000000000457d41 : ret 0x840
0x0000000000405250 : ret 0x8445
0x00000000004078bc : ret 0x8589
0x000000000040643a : ret 0x858a
0x000000000044dd79 : ret 0x86a5
0x000000000044a87e : ret 0x86f8
0x000000000045e1d7 : ret 0x8844
0x0000000000408a03 : ret 0x890d
0x0000000000457956 : ret 0x8938
0x0000000000415d03 : ret 0x8940
0x0000000000404d2d : ret 0x8941
0x00000000004062c5 : ret 0x8944
0x0000000000432155 : ret 0x8945
0x0000000000404cb0 : ret 0x8948
0x0000000000459a3f : ret 0x894a
0x000000000040eec4 : ret 0x894c
0x0000000000415507 : ret 0x8961
0x00000000004584c1 : ret 0x898c
0x000000000042c598 : ret 0x898d
0x00000000004355be : ret 0x8994
0x000000000040337b : ret 0x899a
0x000000000043477e : ret 0x89e0
0x0000000000429728 : ret 0x89f1
0x0000000000444c0a : ret 0x89f5
0x000000000045b038 : ret 0x8a44
0x000000000045af35 : ret 0x8a4a
0x0000000000404d87 : ret 0x8b44
0x000000000040e728 : ret 0x8b48
0x000000000040c5fe : ret 0x8b4c
0x0000000000441ae5 : ret 0x919d
0x000000000043b9e8 : ret 0x9214
0x000000000040c9ed : ret 0x93e9
0x000000000045d382 : ret 0x941
0x000000000045e482 : ret 0x949
0x0000000000432b6d : ret 0x94b9
0x000000000042b325 : ret 0x9589
0x0000000000428bc7 : ret 0x9e6d
0x000000000046396c : ret 0xa
0x000000000045b678 : ret 0xa2e8
0x000000000041decc : ret 0xa30b
0x0000000000433c19 : ret 0xa8b9
0x000000000045d9cf : ret 0xac60
0x00000000004047a1 : ret 0xb0
0x0000000000410357 : ret 0xb24c
0x000000000042e448 : ret 0xb28d
0x000000000040e25c : ret 0xb60f
0x000000000041f7d0 : ret 0xb740
0x0000000000439de4 : ret 0xb841
0x0000000000427a57 : ret 0xb848
0x000000000040ad0d : ret 0xb90d
0x000000000041da00 : ret 0xb940
0x000000000044472a : ret 0xb941
0x0000000000451a5b : ret 0xb948
0x000000000045aec2 : ret 0xb94a
0x0000000000458670 : ret 0xb98c
0x0000000000404ba0 : ret 0xb99a
0x000000000043488b : ret 0xb9e0
0x000000000042b5b6 : ret 0xb9f1
0x0000000000444f74 : ret 0xb9f5
0x000000000041fe4c : ret 0xbf48
0x0000000000401c65 : ret 0xc148
0x00000000004609c2 : ret 0xc493
0x00000000004434d5 : ret 0xc731
0x00000000004284a0 : ret 0xca21
0x000000000042be75 : ret 0xca29
0x0000000000436f70 : ret 0xcaed
0x0000000000460785 : ret 0xccb2
0x0000000000434297 : ret 0xd0e9
0x000000000043c733 : ret 0xd108
0x000000000040493c : ret 0xd284
0x0000000000432bdd : ret 0xd3e9
0x0000000000459685 : ret 0xd618
0x000000000040b7a4 : ret 0xdce9
0x0000000000403599 : ret 0xe
0x000000000044261f : ret 0xe083
0x000000000045fc6b : ret 0xe280
0x000000000043f09f : ret 0xe721
0x0000000000457983 : ret 0xe8ff
0x000000000041f6a2 : ret 0xe940
0x00000000004447a5 : ret 0xe941
0x0000000000420901 : ret 0xe961
0x0000000000439a7c : ret 0xe994
0x000000000044c82f : ret 0xe99a
0x000000000041672d : ret 0xea51
0x000000000044c73b : ret 0xea81
0x00000000004224bc : ret 0xee8
0x00000000004083aa : ret 0xef47
0x000000000043f242 : ret 0xef52
0x0000000000457d25 : ret 0xf280
0x0000000000413bf5 : ret 0xf281
0x000000000041e507 : ret 0xf41
0x000000000045643c : ret 0xf4e9
0x000000000044d9c1 : ret 0xf66
0x0000000000437264 : ret 0xf6bd
0x0000000000420455 : ret 0xf7f3
0x00000000004434d1 : ret 0xfa89
0x000000000041ebde : ret 0xfc75
0x000000000042b10a : ret 0xfd67
0x00000000004104fa : ret 0xff13
0x000000000045554f : ret 0xff3
0x000000000040dd0e : ret 0xff70
0x000000000042044f : ret 0xffa5
0x0000000000433d83 : ret 0xffbe
0x000000000041ebd8 : ret 0xffc4
0x000000000041ddf8 : ret 0xffd5
0x000000000041ded2 : ret 0xffd8
0x000000000041ec8a : ret 0xffd9
0x000000000041e074 : ret 0xffe0
0x000000000041cd65 : ret 0xfffa
0x00000000004454e7 : ret 0xfffb
0x00000000004437a5 : ret 0xfffe
0x0000000000431a39 : ret 0xffff
0x0000000000405f71 : ret 1
0x000000000041ea70 : ret 2
0x0000000000433fa7 : ret 3
0x00000000004339b2 : ret 4
0x0000000000430997 : ret 6
0x000000000040fcb2 : ret 7
0x0000000000410230 : ret 8
0x000000000043b3b8 : ret 9
0x000000000042fd40 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045b3fd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000440e4a : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x00000000004545a4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044a39c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041314c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e96a : rol byte ptr [rbp + 9], 1 ; ret
0x000000000040628f : rol byte ptr [rbp - 0x77], cl ; ret 0x8141
0x0000000000406643 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431038 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000430c0a : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x0000000000462070 : rol byte ptr [rdi], 0 ; add byte ptr [rax], bh ; cli ; jmp rax
0x000000000045b3fc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000043c157 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000042fd3f : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000044f620 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044fece : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000427a54 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401c6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c7b ; pop rbp ; ret
0x000000000044f621 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044fecf : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000458458 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044e10a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042fcdb : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x42fd44 ; ret
0x00000000004514f3 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000449ef0 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044d87d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040663f : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000445d47 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444350 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x000000000045e4a5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000413c0a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004434ce : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x000000000045e97d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004621e8 : ror byte ptr [rip + 0x2ac80000], -4 ; jmp rax
0x0000000000464010 : ror dl, -1 ; call qword ptr [rax]
0x000000000045e47f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000445389 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000449560 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044379f : ror dword ptr [rax - 0x77], -0x32 ; call 0x42faa6
0x000000000045b22e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000424640 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000408a02 : sahf ; ret 0x890d
0x000000000040ad0c : sahf ; ret 0xb90d
0x000000000042aa4b : sahf ; ret 0xd284
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x00000000004297ea : salc ; jmp qword ptr [rdi]
0x0000000000429726 : salc ; sti ; ret 0x89f1
0x000000000046244d : sar dh, -1 ; push 0x68000017 ; ret
0x000000000045e464 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000401c6e : sar eax, 1 ; jne 0x401c79 ; pop rbp ; ret
0x000000000041f9c1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401c6d : sar rax, 1 ; jne 0x401c7a ; pop rbp ; ret
0x0000000000462e01 : sbb al, -4 ; jmp qword ptr [rbx]
0x00000000004625a1 : sbb al, 0 ; add al, cl ; ret
0x0000000000462591 : sbb al, 0 ; add byte ptr [rax], ch ; ret 0xffff
0x0000000000424980 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004331bd : sbb al, 0x41 ; xchg eax, ebx ; ret
0x000000000042bfbe : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042b1db : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000440f02 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x0000000000463f35 : sbb byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000440f03 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041f8c1 : sbb cl, ch ; ret
0x00000000004272a3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e199 : sbb dword ptr [rdi], 0x8945b5c7 ; ret 0x8141
0x00000000004500ed : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004239d0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000408a71 : scasb al, byte ptr [rdi] ; ret
0x000000000040f3e6 : scasd eax, dword ptr [rdi] ; loope 0x40f45e ; ret
0x0000000000408ac5 : scasd eax, dword ptr [rdi] ; ret
0x00000000004584c0 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000045866f : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x00000000004499aa : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004499ac : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000462e60 : shl byte ptr [rdx], -4 ; jmp rsi
0x000000000044d9df : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000455717 : shr al, 1 ; ret
0x000000000041e8c2 : shr cl, cl ; ret 0x3b
0x000000000046202e : stc ; dec dword ptr [rax - 0x37fffffa] ; cld ; stc ; jmp rax
0x0000000000454c89 : stc ; in al, dx ; ret 0x8589
0x000000000045559c : stc ; in al, dx ; ret 0xff3
0x0000000000462036 : stc ; jmp rax
0x000000000043289c : stc ; mov cl, 0x37 ; ret 0x4589
0x0000000000406d59 : stc ; ret
0x000000000041c6fd : stc ; ret 0x77a8
0x0000000000423287 : std ; ret 0x279e
0x0000000000462a2a : sti ; call qword ptr [rdx]
0x0000000000462126 : sti ; ljmp ptr [rax + 0x7800000a] ; add al, -4 ; call rax
0x0000000000429727 : sti ; ret 0x89f1
0x000000000042b5b5 : sti ; ret 0xb9f1
0x0000000000454c88 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000441ae4 : stosb byte ptr [rdi], al ; ret 0x919d
0x000000000045e463 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042fa8b : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044459c : sub al, 0x35 ; ret 0x8941
0x0000000000444728 : sub al, 0x35 ; ret 0xb941
0x00000000004447a3 : sub al, 0x35 ; ret 0xe941
0x0000000000446501 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000427fbf : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x000000000041132e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004621ed : sub bh, ah ; jmp rax
0x000000000045dad6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411218 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ddf5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041ddeb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dec5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000440e39 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x000000000042e45e : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x000000000041ec85 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000042fa8d : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427a5f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000460b19 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042fa8c : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000460b18 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004334cf : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x000000000044dca3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042b108 : test al, -0x18 ; ret 0xfd67
0x000000000040e98d : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rsi]
0x0000000000455939 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041ddf0 : test al, -0x7f ; ret 0x2d50
0x000000000041deca : test al, -0x7f ; ret 0xa30b
0x000000000042ad92 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045acd3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430067 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000462c18 : test al, 0x12 ; cld ; call rdi
0x00000000004584bd : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004621fc : test al, 0x2f ; cld ; jmp qword ptr [rax]
0x000000000042405e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000420626 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000426af8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000462128 : test al, 0xa ; add byte ptr [rax], al ; js 0x462139 ; cld ; call rax
0x000000000046213c : test al, 8 ; cld ; call qword ptr [rax]
0x0000000000452b1d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004549ea : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004338d0 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000460a9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405b6a : test byte ptr [rbp - 0x16fffff6], bh ; ret
0x0000000000448af2 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x000000000044d43c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x00000000004549eb : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x0000000000448096 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000414c6c : test byte ptr [rcx], ch ; ret 0
0x000000000043081f : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000405f6b : test byte ptr [rip - 0x16fffffb], cl ; ret 1
0x0000000000427fc1 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x0000000000446cd1 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000044cc32 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000443ea5 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000455f17 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044bcc1 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000403373 : test dword ptr [rax + 0x2dfffffe], esi ; cmp dword ptr [rdx], esp ; ret 0x899a
0x0000000000402cab : test dword ptr [rax + 0x2dfffffe], esi ; mov ah, 0x69 ; ret
0x000000000040372b : test dword ptr [rax + 0x2dfffffe], esi ; mov ch, 0x69 ; ret
0x0000000000414c66 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000043564d : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x000000000045d6b7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045d677 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000045d5f2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000042be33 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042be8b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042bdf2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042ec74 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042f7f1 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042f797 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000040e83b : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040e63b : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e682 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000042e9fb : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000040e916 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rsi]
0x000000000040e84a : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000426c06 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004250be : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000453901 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000423c7a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000043b999 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x000000000040eebc : test dword ptr [rsi + rdi*8 + 0x182dffff], ebp ; push rbp ; ret 0x894c
0x000000000040fbdc : test dword ptr [rsi + rdi*8 + 0x192dffff], ebp ; push rbp ; ret 0x894c
0x000000000041f69b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004208fa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040f69c : test dword ptr [rsi + rdi*8 - 0x21d20001], ebp ; mov ch, 0x5b ; ret
0x000000000040f3fc : test dword ptr [rsi + rdi*8 - 0x22d20001], ebp ; mov ch, 0x5b ; ret
0x000000000040f6b8 : test dword ptr [rsi + rdi*8 - 0x4fd20001], ebp ; loope 0x40f73c ; ret
0x000000000040f3e0 : test dword ptr [rsi + rdi*8 - 0x50d20001], ebp ; loope 0x40f464 ; ret
0x000000000041c3ba : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004119b5 : test eax, 0x3d8bf9b7 ; ret 0x2538
0x00000000004208af : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004454de : test eax, 0xce9a6 ; add byte ptr [rax], al ; call 0x401789
0x000000000040792a : test edx, ecx ; ret
0x000000000043e8f7 : test esi, esp ; ret
0x000000000041e8bf : wait ; jge 0x41e8a1 ; shr cl, cl ; ret 0x3b
0x000000000041997d : wait ; jo 0x41998b ; ret
0x000000000041cecc : wait ; jo 0x41ceda ; ret
0x000000000044125c : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x000000000045b418 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044d7c0 : xchg eax, ebp ; jmp 0x44d911
0x000000000043214e : xchg eax, ebp ; ret
0x000000000042ac0f : xchg eax, ebp ; ret 0x8445
0x000000000040e25b : xchg eax, ebp ; ret 0xb60f
0x000000000040493b : xchg eax, ebp ; ret 0xd284
0x0000000000415505 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041be05 : xchg eax, ebx ; ret
0x000000000041c035 : xchg eax, ecx ; ret
0x000000000040797d : xchg eax, ecx ; test edx, ecx ; ret
0x000000000042f2d9 : xchg eax, edi ; ret 0xd284
0x00000000004584bf : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000045866e : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x0000000000415885 : xchg eax, edx ; ret
0x000000000042372f : xchg eax, edx ; ret 0x8445
0x0000000000426afe : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x00000000004454e6 : xchg eax, esi ; ret 0xfffb
0x0000000000456438 : xchg eax, esp ; int 6
0x0000000000425d9a : xchg eax, esp ; jmp 0x426808
0x0000000000425cd7 : xchg eax, esp ; jmp 0x42680a
0x00000000004208b4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041c185 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004208ff : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004394dc : xchg eax, esp ; ret
0x0000000000423719 : xchg eax, esp ; ret 0x8041
0x000000000040524f : xchg eax, esp ; ret 0x8445
0x000000000041f7ce : xchg eax, esp ; ret 0xb740
0x000000000040b070 : xchg eax, esp ; ret 0xd284
0x00000000004499ab : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004119b4 : xchg eax, esp ; test eax, 0x3d8bf9b7 ; ret 0x2538
0x000000000044ca82 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000042d61a : xchg eax, r11d ; ret
0x0000000000456437 : xchg eax, r12d ; int 6
0x0000000000425d99 : xchg eax, r12d ; jmp 0x426809
0x000000000040b4cc : xchg ecx, esp ; ret 0x12b9
0x00000000004078f2 : xchg ecx, esp ; ret 0x8589
0x000000000040c9eb : xchg ecx, esp ; ret 0x93e9
0x000000000044f73f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000045e0ce : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000042977a : xlatb ; sti ; ret 0x89f1
0x000000000042b5b4 : xlatb ; sti ; ret 0xb9f1
0x000000000041f7c9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000414067 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000455713 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000414068 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045e466 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000044ca83 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000445d4b : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044c800 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004331d7 : xor dh, dh ; ret 0x8589
0x0000000000433d81 : xor dh, dh ; ret 0xffbe
0x000000000044b16b : xor dword ptr [rdx], edx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e707 : xor eax, 0x8ca975b9 ; ret 0x1b2
0x0000000000441fe6 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000045e0cd : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000045e3d1 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000441fda : xor esp, dword ptr [rcx] ; ret 0x8941
0x00000000004331d6 : xor r14b, r14b ; ret 0x8589
0x000000000043355a : xor sil, sil ; ret 0x8589
0x0000000000433d80 : xor sil, sil ; ret 0xffbe
