0x0000000000429cb8 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x00000000004071a2 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004123af : adc ch, cl ; ret
0x000000000042b012 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000041e6de : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041e051 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000426d0b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f1db : adc eax, 0x558abda1 ; ret
0x00000000004227b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004332a3 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x2e], bh ; std ; call qword ptr [rcx]
0x0000000000433a83 : add ah, al ; or al, byte ptr [rax] ; add al, cl ; jbe 0x433a92 ; jmp rcx
0x00000000004333e5 : add al, 0 ; add byte ptr [rax], bl ; std ; std ; call qword ptr [rdx]
0x000000000042e9da : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004330c4 : add al, 1 ; add byte ptr [rax], al ; sub rdi, rbp ; jmp qword ptr [rcx]
0x0000000000433be7 : add al, bl ; ret 0xffff
0x00000000004332a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x2e], bh ; std ; call qword ptr [rcx]
0x0000000000424b32 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004051ce : add al, ch ; ret 0xffff
0x0000000000433a87 : add al, cl ; jbe 0x433a8e ; jmp rcx
0x000000000040fb08 : add bh, al ; test dword ptr [rax + 0x4effffdf], edx ; ret
0x00000000004051a0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rax]
0x0000000000405169 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x00000000004269e4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042ace3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000041f019 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004335d9 : add bh, bh ; call rdi
0x0000000000431e1f : add bl, dh ; ret
0x0000000000431af2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000431d54 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004330c7 : add byte ptr [rax + 0x2b], cl ; std ; jmp qword ptr [rcx]
0x00000000004332a7 : add byte ptr [rax - 0x2e], bh ; std ; call qword ptr [rcx]
0x000000000040fcfe : add byte ptr [rax - 0x42], cl ; out dx, eax ; ret
0x000000000042e271 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; jmp qword ptr [rsi]
0x000000000042377b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409854 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c58a : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040ed65 : add byte ptr [rax - 0x77], cl ; ret 0x52e8
0x00000000004092d7 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004330c2 : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; sub rdi, rbp ; jmp qword ptr [rcx]
0x000000000040519e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rax]
0x00000000004269e2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042ace1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000431e1d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040fcfc : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; out dx, eax ; ret
0x0000000000409852 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040ed63 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x52e8
0x0000000000431e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400638 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004004ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040063a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004004bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040063c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004116ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x232dc845], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000041047e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004120f2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000422222 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004251a3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042f0ac : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000427b09 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000429d03 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000431af3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000431d55 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426950 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000432bfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; cld ; jmp rsp
0x0000000000430ec1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404fa2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429b46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000408731 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411746 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004268da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404aee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407673 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000042af72 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000401cfd : add byte ptr [rax], al ; add dh, al ; ret
0x00000000004227bb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421e40 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426d0d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ab0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004333e2 : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; sbb ch, bh ; std ; call qword ptr [rdx]
0x0000000000433146 : add byte ptr [rax], al ; cmp byte ptr [rbp + rdi*8 - 1], al ; ret
0x00000000004332a2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; js 0x433285 ; std ; call qword ptr [rcx]
0x0000000000432bfa : add byte ptr [rax], al ; jb 0x432c07 ; add byte ptr [rax], al ; or al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x000000000040766f : add byte ptr [rax], al ; jmp 0x40767e
0x000000000042af6e : add byte ptr [rax], al ; jmp 0x42af7d
0x00000000004332a6 : add byte ptr [rax], al ; js 0x433281 ; std ; call qword ptr [rcx]
0x0000000000431b38 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409853 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432bfe : add byte ptr [rax], al ; or al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x000000000040504c : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422223 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432dfe : add byte ptr [rax], al ; pushfq ; sbb edi, edi ; jmp rsp
0x00000000004004be : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x000000000040063e : add byte ptr [rax], al ; ret 1
0x00000000004333e6 : add byte ptr [rax], al ; sbb ch, bh ; std ; call qword ptr [rdx]
0x00000000004330c6 : add byte ptr [rax], al ; sub rdi, rbp ; jmp qword ptr [rcx]
0x0000000000433577 : add byte ptr [rax], bl ; add edi, edi ; jmp qword ptr [rbx]
0x00000000004333e7 : add byte ptr [rax], bl ; std ; std ; call qword ptr [rdx]
0x000000000040b365 : add byte ptr [rax], dl ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004116ef : add byte ptr [rbx + 0x232dc845], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000410480 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004120f4 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000422224 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004251a5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042515a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042f0ae : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000431b39 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000427b0b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040ec36 : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042abcf : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000429d05 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004330c3 : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; sub rdi, rbp ; jmp qword ptr [rcx]
0x000000000040e555 : add byte ptr [rcx - 0x48], cl ; xchg eax, esi ; ret 0x85f
0x000000000040ce1b : add byte ptr [rcx], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426a4e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401778 : add byte ptr [rcx], al ; ret
0x0000000000431af5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000431d57 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426952 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000432bff : add byte ptr [rdi], cl ; cld ; jmp rsp
0x0000000000430ec3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404fa4 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429b48 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000408733 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404eb5 : add byte ptr [rdi], cl ; xchg eax, ebp ; shl byte ptr [rcx + rax], -0x78 ; ret
0x0000000000411748 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004268dc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b367 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000404af0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432d3f : add byte ptr [rdx + rsi*8 - 2], bl ; call rsp
0x0000000000408bca : add byte ptr [rdx], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432bfb : add byte ptr [rdx], dh ; add byte ptr [rax], al ; or al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x00000000004333e3 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; sbb ch, bh ; std ; call qword ptr [rdx]
0x0000000000409851 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000411e13 : add cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000041f14c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000407675 : add cl, ch ; ret
0x0000000000424b34 : add cl, ch ; ret 1
0x0000000000401cff : add dh, al ; ret
0x0000000000405167 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x00000000004330c5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; std ; jmp qword ptr [rcx]
0x00000000004097e9 : add dword ptr [rcx + 0xf], eax ; xchg eax, edx ; ret 0x8445
0x0000000000407f94 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407734 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000431042 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042fe94 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000043007e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401774 : add eax, 0x233b5e ; add ebx, esi ; ret
0x000000000040173b : add eax, edx ; sar rax, 1 ; jne 0x40174c ; pop rbp ; ret
0x0000000000401779 : add ebx, esi ; ret
0x00000000004101c0 : add edi, eax ; test dword ptr [rax + 0x4effffdf], edx ; ret
0x00000000004051b7 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000433579 : add edi, edi ; jmp qword ptr [rbx]
0x0000000000401b29 : add esp, 0x10 ; pop rbp ; ret
0x0000000000426a4c : add esp, 0x100 ; pop rbp ; ret
0x00000000004064f5 : add esp, 0x170 ; pop rbp ; ret
0x0000000000405b84 : add esp, 0x190 ; pop rbp ; ret
0x0000000000426bbc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000421e43 : add esp, 0x20 ; pop rbp ; ret
0x00000000004071a0 : add esp, 0x210 ; pop rbp ; ret
0x000000000040ce19 : add esp, 0x2100 ; pop rbp ; ret
0x000000000040950f : add esp, 0x2140 ; pop rbp ; ret
0x0000000000408bc8 : add esp, 0x2200 ; pop rbp ; ret
0x0000000000410337 : add esp, 0x2270 ; pop rbp ; ret
0x000000000042b227 : add esp, 0x30 ; pop rbp ; ret
0x000000000040ec34 : add esp, 0x300 ; pop rbp ; ret
0x0000000000426d10 : add esp, 0x40 ; pop rbp ; ret
0x000000000042ebd9 : add esp, 0x440 ; pop rbp ; ret
0x000000000042ac7e : add esp, 0x4f0 ; pop rbp ; ret
0x00000000004019a4 : add esp, 0x50 ; pop rbp ; ret
0x000000000040c3e9 : add esp, 0x580 ; pop rbp ; ret
0x0000000000405048 : add esp, 0x5e0 ; pop rbp ; ret
0x0000000000427c30 : add esp, 0x60 ; pop rbp ; ret
0x0000000000407739 : add esp, 0x70 ; pop rbp ; ret
0x0000000000411e64 : add esp, 0x78 ; pop rbp ; ret
0x00000000004115ef : add esp, 0x80 ; pop rbp ; ret
0x000000000040d1a3 : add esp, 0x90 ; pop rbp ; ret
0x0000000000424916 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004074e8 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000412aca : add esp, 0xd0 ; pop rbp ; ret
0x0000000000424ec6 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042bfdf : add esp, 0xf0 ; pop rbp ; ret
0x00000000004130d3 : add esp, 8 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x00000000004051cd : add r8b, bpl ; ret 0xffff
0x000000000040173a : add rax, rdx ; sar rax, 1 ; jne 0x40174d ; pop rbp ; ret
0x0000000000401b28 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000426a4b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004064f4 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000405b83 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000426bbb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000421e42 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040719f : add rsp, 0x210 ; pop rbp ; ret
0x000000000040ce18 : add rsp, 0x2100 ; pop rbp ; ret
0x000000000040950e : add rsp, 0x2140 ; pop rbp ; ret
0x0000000000408bc7 : add rsp, 0x2200 ; pop rbp ; ret
0x0000000000410336 : add rsp, 0x2270 ; pop rbp ; ret
0x000000000042b226 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040ec33 : add rsp, 0x300 ; pop rbp ; ret
0x0000000000426d0f : add rsp, 0x40 ; pop rbp ; ret
0x000000000042ebd8 : add rsp, 0x440 ; pop rbp ; ret
0x000000000042ac7d : add rsp, 0x4f0 ; pop rbp ; ret
0x00000000004019a3 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040c3e8 : add rsp, 0x580 ; pop rbp ; ret
0x0000000000405047 : add rsp, 0x5e0 ; pop rbp ; ret
0x0000000000427c2f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407738 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000411e63 : add rsp, 0x78 ; pop rbp ; ret
0x00000000004115ee : add rsp, 0x80 ; pop rbp ; ret
0x000000000040d1a2 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000424915 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004074e7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000412ac9 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000424ec5 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042bfde : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004130d2 : add rsp, 8 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000431afd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042fe93 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043007d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004333e4 : and al, 4 ; add byte ptr [rax], al ; sbb ch, bh ; std ; call qword ptr [rdx]
0x00000000004051cc : and al, byte ptr [rbx] ; call 0x401425
0x000000000040e553 : and byte ptr [rax], al ; add byte ptr [rcx - 0x48], cl ; xchg eax, esi ; ret 0x85f
0x000000000042783b : and byte ptr [rsi + 0x58], ah ; jb 0x427872 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004051ca : and eax, 0x4322cb ; call 0x401427
0x000000000041e381 : and eax, 0x75b4b9d3 ; ret
0x0000000000401777 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000405106 : call 0x401402
0x00000000004051cf : call 0x401422
0x0000000000410255 : call 0x424946
0x0000000000427c35 : call 0x427cf9
0x0000000000407e77 : call 0x4896414f
0x0000000000407b5c : call 0xffffffff89963e34
0x000000000042f64d : call 0xffffffffaca3b881
0x000000000042f64c : call 0xffffffffaca3b882
0x0000000000421e39 : call 0xffffffffe904a789
0x0000000000421e38 : call 0xffffffffe904a78a
0x0000000000431df9 : call qword ptr [r12 + rbx*8]
0x00000000004051a6 : call qword ptr [rax]
0x00000000004235fe : call qword ptr [rbx]
0x00000000004051bd : call qword ptr [rcx]
0x00000000004212c4 : call qword ptr [rdi]
0x000000000041d2ab : call qword ptr [rdx]
0x000000000040516f : call qword ptr [rsi]
0x0000000000431dfa : call qword ptr [rsp + rbx*8]
0x000000000040179d : call rax
0x0000000000407263 : call rbx
0x000000000041f52b : call rcx
0x0000000000420f04 : call rdi
0x0000000000420735 : call rdx
0x00000000004103b6 : call rsp
0x000000000042ebd7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000426f97 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042b569 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040173f : clc ; jne 0x401748 ; pop rbp ; ret
0x000000000042377f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000041490d : clc ; ret 0x77a8
0x0000000000401b27 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fc8e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042bfdd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004104af : cld ; jmp 0x41051c
0x00000000004104ae : cld ; jmp 0x41051d
0x0000000000432c02 : cld ; jmp rsp
0x0000000000411e12 : cli ; add cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000427840 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000431afc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000402784 : cmc ; loopne 0x402787 ; ret 0x8589
0x000000000042675b : cmc ; ret 0x4f0b
0x0000000000405107 : cmc ; ret 0xffff
0x00000000004051c9 : cmp al, 0x25 ; retf ; and al, byte ptr [rbx] ; call 0x401428
0x000000000040ccfe : cmp al, byte ptr [rsi + 0x4c6ab92a] ; ret
0x0000000000433148 : cmp byte ptr [rbp + rdi*8 - 1], al ; ret
0x00000000004268f1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004016fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401710 ; pop rbp ; ret
0x000000000041f1d7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000401776 : cmp esp, dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x000000000040e565 : dec byte ptr [rax - 0x41] ; xchg eax, esi ; ret 0x85f
0x000000000040e502 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000040fcea : dec dword ptr [rax - 0x42] ; out dx, eax ; ret
0x000000000041e6db : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041e04e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041e853 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042796d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042e736 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040428e : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000425a2b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000426756 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000424b2e : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004145ea : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040e209 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000405102 : enter -0x76b8, -0x3f ; call 0x401406
0x0000000000429ba9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e1b9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004116f2 : enter 0x232d, -0x5b ; ret
0x000000000040cd5f : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428d65 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000411a18 : fimul word ptr [rcx - 0x7bf077bb] ; ret
0x00000000004300b8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042ed97 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000040cd10 : fmul dword ptr [rax - 0x41] ; sahf ; stosd dword ptr [rdi], eax ; popfq ; mov dl, -0x5e ; ret
0x000000000042ed98 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000431dfc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000428eed : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x000000000042a507 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x00000000004072ce : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f2fc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004130d1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401710 : hlt ; pop rbp ; mov edi, 0x635270 ; jmp rax
0x000000000042796b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040ce17 : in al, 0x48 ; add esp, 0x2100 ; pop rbp ; ret
0x000000000042b921 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004332a4 : in al, 2 ; add byte ptr [rax], al ; js 0x433283 ; std ; call qword ptr [rcx]
0x000000000042b225 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f70c : in al, dx ; jmp 0x42f789
0x000000000042f70b : in al, dx ; jmp 0x42f78a
0x0000000000407f9a : in al, dx ; pop rbp ; ret
0x000000000040bf08 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408862 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004044e7 : inc dword ptr [rcx + 0xf] ; ret
0x0000000000405205 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rax]
0x000000000040e6ff : inc esi ; mov r15d, 0x8445c700 ; ret
0x00000000004242e7 : int 0x5b
0x0000000000401703 : ja 0x40170a ; pop rbp ; ret
0x000000000042783e : jb 0x42786f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000432bfc : jb 0x432c05 ; add byte ptr [rax], al ; or al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x00000000004123ad : jbe 0x412386 ; adc ch, cl ; ret
0x0000000000433a89 : jbe 0x433a8c ; jmp rcx
0x000000000040170f : je 0x40170d ; pop rbp ; mov edi, 0x635270 ; jmp rax
0x000000000040e52a : je 0x40e4e7 ; ret 0x79b6
0x00000000004064ac : jg 0x40645b ; push rdi ; jmp 0x406635
0x0000000000410253 : jge 0x410239 ; call 0x424948
0x000000000041d776 : jge 0x41d6fb ; ret 0xffd5
0x000000000041e240 : jge 0x41e220 ; shr cl, cl ; ret 0x3b
0x000000000040cc8d : jl 0x40cc95 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040138b : jmp 0x401307
0x00000000004044f8 : jmp 0x4052a2
0x0000000000404fb3 : jmp 0x4052a3
0x00000000004064af : jmp 0x406632
0x0000000000406620 : jmp 0x406634
0x0000000000407671 : jmp 0x40767c
0x0000000000408797 : jmp 0x408c79
0x000000000040eb8b : jmp 0x40ee0e
0x000000000040eb8a : jmp 0x40ee0f
0x00000000004104b0 : jmp 0x41051b
0x000000000041e990 : jmp 0x421e10
0x000000000041c894 : jmp 0x421e11
0x000000000041dc61 : jmp 0x421e12
0x0000000000425b7b : jmp 0x4265e7
0x0000000000425ab8 : jmp 0x4265e9
0x0000000000427be3 : jmp 0x427c48
0x0000000000429d16 : jmp 0x42add9
0x0000000000429b33 : jmp 0x42adda
0x000000000042af70 : jmp 0x42af7b
0x000000000042ea76 : jmp 0x42ed58
0x000000000042e26d : jmp 0x42ed5b
0x000000000042f70d : jmp 0x42f788
0x000000000042675a : jmp 0x4f4e2a56
0x000000000040445e : jmp qword ptr [rax]
0x000000000043357b : jmp qword ptr [rbx]
0x0000000000406f5d : jmp qword ptr [rcx]
0x000000000041f417 : jmp qword ptr [rdi]
0x00000000004269ea : jmp qword ptr [rdx]
0x000000000042e276 : jmp qword ptr [rsi]
0x0000000000401717 : jmp rax
0x000000000040be9a : jmp rbx
0x000000000041e79a : jmp rcx
0x000000000041ddc2 : jmp rdi
0x0000000000401757 : jmp rdx
0x0000000000433823 : jmp rsi
0x000000000041e078 : jmp rsp
0x0000000000401740 : jne 0x401747 ; pop rbp ; ret
0x0000000000405101 : jne 0x4050d2 ; mov rcx, rax ; call 0x401407
0x0000000000428d66 : jne 0x428de1 ; ret 0x8589
0x0000000000428eee : jne 0x428f69 ; ret 0x8589
0x000000000042a508 : jne 0x42a583 ; ret 0xedb9
0x000000000042a760 : jne 0x42a7db ; ret 0xedb9
0x00000000004064f7 : jo 0x4064ff ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040773b : jo 0x40779c ; ret
0x0000000000410339 : jo 0x410362 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411849 : jo 0x4118aa ; ret
0x000000000041768e : jo 0x41769a ; ret
0x00000000004192fe : jo 0x41930a ; ret
0x000000000041c84d : jo 0x41c859 ; ret
0x0000000000423b34 : jo 0x423b95 ; ret
0x0000000000411e66 : js 0x411ec7 ; ret
0x00000000004124c6 : js 0x412527 ; ret
0x00000000004332a8 : js 0x43327f ; std ; call qword ptr [rcx]
0x000000000041e23e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000408ca6 : lcall ptr [rbx] ; out dx, eax ; ret 0x8bd1
0x00000000004094e9 : lcall ptr [rbx] ; out dx, eax ; ret 0xe9d1
0x000000000041f33e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000410cb6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051c8 : lea edi, dword ptr [0x4322cb] ; call 0x401429
0x0000000000413f85 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423e29 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413f84 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000401cfa : les r8d, ptr [r8] ; add byte ptr [rax], al ; add dh, al ; ret
0x000000000041cb9e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000407f93 : loope 0x407f9f ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fba5 : loope 0x41fb73 ; jmp 0x421e13
0x0000000000402785 : loopne 0x402786 ; ret 0x8589
0x00000000004027d9 : loopne 0x4027da ; ret 0x8589
0x000000000040456b : loopne 0x40456c ; ret 0x24b9
0x000000000040504a : loopne 0x405056 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040872f : loopne 0x408738 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004091ea : loopne 0x4091f3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000411845 : loopne 0x411895 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000411844 : loopne 0x411896 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000413f83 : loopne 0x413fd6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042352d : loopne 0x423593 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424914 : loopne 0x424967 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000424ec8 : loopne 0x424ecf ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004272a3 : loopne 0x4272ac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427c2e : loopne 0x427c7e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000427c2d : loopne 0x427c7f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042b0df : loopne 0x42b073 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042b0de : loopne 0x42b074 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042f300 : loopne 0x42f307 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042fc92 : loopne 0x42fc99 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431b3c : loopne 0x431b8b ; mov esp, ebp ; pop rbp ; ret
0x0000000000431b3b : loopne 0x431b8c ; mov esp, ebp ; pop rbp ; ret
0x0000000000431d8c : loopne 0x431ddb ; mov esp, ebp ; pop rbp ; ret
0x0000000000431d8b : loopne 0x431ddc ; mov esp, ebp ; pop rbp ; ret
0x000000000041d76d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d847 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401cd0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041b7f5 : mov ah, 0x75 ; ret
0x0000000000424303 : mov al, -0x47 ; ret
0x000000000042e23f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042a109 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004074ea : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004303ad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043007a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004302dd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406e5b : mov bl, -0x47 ; ret 0x9373
0x0000000000415195 : mov bl, 0x75 ; ret
0x000000000040eb03 : mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000401773 : mov byte ptr [rip + 0x233b5e], 1 ; ret
0x000000000041cfef : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000407f96 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407736 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000431044 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042fe96 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430080 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004092d5 : mov dh, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000431afa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040cd16 : mov dl, -0x5e ; ret
0x0000000000430d71 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000413709 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004132df : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f70a : mov dword ptr [rbp - 0x14], eax ; jmp 0x42f78b
0x0000000000401cce : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425b78 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4265ea
0x00000000004072cc : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b25 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004139e6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041358d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000429d17 : mov eax, 0xb8000010 ; ret
0x0000000000412e09 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427aab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b223 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427c7e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004112be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042f585 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041370c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000427c2c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411843 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b0dd : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000431b3a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411e60 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000041358f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004130cf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000042377d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041358e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000041ffa8 : mov ebp, 0xe19c53ba ; ret
0x000000000040179b : mov ebp, esp ; call rax
0x0000000000401701 : mov ebp, esp ; ja 0x40170c ; pop rbp ; ret
0x00000000004132dc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405104 : mov ecx, eax ; call 0x401404
0x0000000000401795 : mov edi, 0x634e20 ; mov rbp, rsp ; call rax
0x0000000000401712 : mov edi, 0x635270 ; jmp rax
0x0000000000401752 : mov edi, 0x635270 ; jmp rdx
0x000000000040e702 : mov edi, 0x8445c700 ; ret
0x000000000041c847 : mov edi, 0xb8000055 ; wait ; jo 0x41c85f ; ret
0x0000000000410252 : mov edi, dword ptr [rbp - 0x24] ; call 0x424949
0x0000000000431df7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000431df6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042e9ee : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d00b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041de82 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042e9d7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000405100 : mov esi, dword ptr [rbp - 0x38] ; mov rcx, rax ; call 0x401408
0x0000000000401750 : mov esi, eax ; mov edi, 0x635270 ; jmp rdx
0x0000000000407f99 : mov esp, ebp ; pop rbp ; ret
0x00000000004139e5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401ccf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e701 : mov r15d, 0x8445c700 ; ret
0x0000000000412e08 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427aaa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427c7d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004112bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427c2b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411842 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411e5f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000042377c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040179a : mov rbp, rsp ; call rax
0x0000000000401700 : mov rbp, rsp ; ja 0x40170d ; pop rbp ; ret
0x0000000000405103 : mov rcx, rax ; call 0x401405
0x00000000004050ff : mov rsi, qword ptr [rbp - 0x38] ; mov rcx, rax ; call 0x401409
0x000000000040174f : mov rsi, rax ; mov edi, 0x635270 ; jmp rdx
0x0000000000407f98 : mov rsp, rbp ; pop rbp ; ret
0x0000000000427841 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000407e74 : mov word ptr [rdi - 0x47], ss ; call 0x48964152
0x0000000000407e73 : mov word ptr gs:[rdi - 0x47], ss ; call 0x48964153
0x0000000000418ae8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004064ad : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; jmp 0x406634
0x000000000041bd35 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004116f5 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000401797 : movsxd r8, dword ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000407735 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000431043 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000042fe95 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043007f : movzx eax, al ; pop rbp ; ret
0x0000000000407f95 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040456a : mul al ; std ; ret 0x24b9
0x00000000004027d8 : mul al ; std ; ret 0x8589
0x000000000042e7e8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000414fd5 : nop ; ret
0x00000000004233e2 : nop ; ret 0x148
0x00000000004233f6 : nop ; ret 0x2948
0x0000000000431e18 : nop dword ptr [rax + rax] ; ret
0x0000000000433be5 : or al, 0 ; add al, bl ; ret 0xffff
0x000000000041d76a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d844 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000432c00 : or al, 0xffffffffffffffe7 ; cld ; jmp rsp
0x00000000004337c1 : or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x0000000000433a85 : or al, byte ptr [rax] ; add al, cl ; jbe 0x433a90 ; jmp rcx
0x000000000042e26f : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; jmp qword ptr [rsi]
0x00000000004132e0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000425158 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000432d3d : or byte ptr [rax], al ; add byte ptr [rdx + rsi*8 - 2], bl ; call rsp
0x000000000041e856 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004139e4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404566 : or eax, 0xf6b80000 ; loopne 0x404571 ; ret 0x24b9
0x000000000041358b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000432c01 : out -4, eax ; jmp rsp
0x000000000041f14b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043007c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040528e : out dx, al ; ret
0x000000000040fb07 : out dx, eax ; add bh, al ; test dword ptr [rax + 0x4effffdf], edx ; ret
0x000000000042ace0 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004101bf : out dx, eax ; add edi, eax ; test dword ptr [rax + 0x4effffdf], edx ; ret
0x00000000004303af : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040661f : out dx, eax ; jmp 0x406635
0x0000000000424302 : out dx, eax ; mov al, -0x47 ; ret
0x000000000040fced : out dx, eax ; ret
0x0000000000408fe8 : out dx, eax ; ret 0x89d1
0x0000000000408ca8 : out dx, eax ; ret 0x8bd1
0x00000000004094eb : out dx, eax ; ret 0xe9d1
0x000000000042e9d9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004068bf : outsb dx, byte ptr [rsi] ; ret
0x0000000000420235 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000414e86 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420280 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004269e1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042e9dc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042783c : pop ax ; jb 0x427871 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004210e9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431e0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042352f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004210eb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431e0e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004210ed : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431e10 : pop r14 ; pop r15 ; ret
0x0000000000413f89 : pop r14 ; pop rbp ; ret
0x00000000004210ef : pop r15 ; pop rbp ; ret
0x0000000000431e12 : pop r15 ; ret
0x000000000042783d : pop rax ; jb 0x427870 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401772 : pop rbp ; mov byte ptr [rip + 0x233b5e], 1 ; ret
0x0000000000401711 : pop rbp ; mov edi, 0x635270 ; jmp rax
0x000000000040174e : pop rbp ; mov rsi, rax ; mov edi, 0x635270 ; jmp rdx
0x0000000000431e0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004210ec : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431e0f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041cff2 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004192c5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041d00e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401705 : pop rbp ; ret
0x000000000042352e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422225 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413f88 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425160 : pop rbx ; ret
0x000000000041cff3 : pop rcx ; ret 0x1b2
0x00000000004176c6 : pop rcx ; ret 0x8589
0x000000000041d00f : pop rcx ; ret 0x8b48
0x000000000041f340 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004210f0 : pop rdi ; pop rbp ; ret
0x0000000000431e13 : pop rdi ; ret
0x000000000040df54 : pop rdi ; ret 0x2be9
0x0000000000401775 : pop rsi ; cmp esp, dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x00000000004210ee : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000431e11 : pop rsi ; pop r15 ; ret
0x0000000000413f8a : pop rsi ; pop rbp ; ret
0x000000000040d7ac : pop rsi ; ret 0x2be9
0x00000000004210ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431e0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423530 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004176c5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000040cd15 : popfq ; mov dl, -0x5e ; ret
0x0000000000430ec5 : popfq ; ret 0xd284
0x000000000041cff0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041f1da : push -0x75425eeb ; push rbp ; ret
0x000000000041bd38 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000040cb17 : push 0x4c ; ret
0x0000000000409ff1 : push 0x68 ; ret
0x00000000004019a6 : push rax ; pop rbp ; ret
0x000000000040eb02 : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000401794 : push rbp ; mov edi, 0x634e20 ; mov rbp, rsp ; call rax
0x0000000000405009 : push rbp ; ret
0x000000000041f176 : push rbp ; ret 0xd284
0x000000000041d76f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d849 : push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004064ae : push rdi ; jmp 0x406633
0x000000000042e9db : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000406e58 : push rdx ; sbb dh, bh ; mov bl, -0x47 ; ret 0x9373
0x0000000000404fa6 : pushfq ; ret 0xd284
0x0000000000432e00 : pushfq ; sbb edi, edi ; jmp rsp
0x00000000004004c0 : ret
0x0000000000400430 : ret 0
0x000000000040e505 : ret 0x148
0x0000000000420344 : ret 0x1a
0x00000000004155bd : ret 0x1add
0x000000000041cff5 : ret 0x1b2
0x00000000004098c1 : ret 0x2000
0x000000000042ec38 : ret 0x22e8
0x0000000000401592 : ret 0x233b
0x0000000000401392 : ret 0x233c
0x0000000000415f0a : ret 0x23da
0x000000000040456d : ret 0x24b9
0x0000000000422c08 : ret 0x279e
0x0000000000405243 : ret 0x2948
0x000000000041f344 : ret 0x2a
0x000000000040d7ad : ret 0x2be9
0x000000000041d772 : ret 0x2d50
0x000000000040fc4b : ret 0x3040
0x000000000041e244 : ret 0x3b
0x0000000000405059 : ret 0x3de9
0x000000000041b2a5 : ret 0x3e
0x00000000004064b5 : ret 0x4504
0x000000000041e6e1 : ret 0x4802
0x000000000042e9de : ret 0x4815
0x0000000000407e79 : ret 0x4855
0x0000000000420236 : ret 0x4861
0x0000000000407c62 : ret 0x48f0
0x0000000000418af1 : ret 0x4b
0x0000000000424107 : ret 0x4cc0
0x0000000000421148 : ret 0x4cf0
0x000000000040f290 : ret 0x4de
0x000000000042675c : ret 0x4f0b
0x00000000004036f0 : ret 0x4fb5
0x000000000040ed68 : ret 0x52e8
0x0000000000403e4b : ret 0x54b9
0x000000000041353b : ret 0x5589
0x000000000041d9fa : ret 0x5966
0x00000000004253b7 : ret 0x5bc6
0x0000000000431aff : ret 0x61
0x000000000040fa38 : ret 0x691d
0x0000000000414c56 : ret 0x6a8a
0x000000000040d608 : ret 0x6ed8
0x000000000041490e : ret 0x77a8
0x000000000040d480 : ret 0x79b6
0x0000000000415a71 : ret 0x7a8a
0x000000000041c6eb : ret 0x7b7f
0x000000000042309a : ret 0x8041
0x00000000004232e2 : ret 0x8141
0x000000000040e43d : ret 0x8148
0x000000000041e604 : ret 0x822d
0x00000000004092da : ret 0x8348
0x00000000004049f5 : ret 0x83d0
0x00000000004097ed : ret 0x8445
0x000000000040274f : ret 0x8589
0x000000000040e559 : ret 0x85f
0x000000000042a399 : ret 0x8902
0x0000000000415683 : ret 0x8940
0x000000000040431c : ret 0x8948
0x000000000042cfff : ret 0x894a
0x0000000000407b5e : ret 0x8955
0x0000000000414e87 : ret 0x8961
0x0000000000408fe9 : ret 0x89d1
0x000000000042e5f8 : ret 0x8a44
0x000000000042e4f5 : ret 0x8a4a
0x000000000041d011 : ret 0x8b48
0x0000000000406fea : ret 0x8b4c
0x0000000000408ca9 : ret 0x8bd1
0x0000000000404291 : ret 0x8d8b
0x0000000000406c75 : ret 0x9373
0x00000000004023cc : ret 0xa309
0x000000000041d84c : ret 0xa30b
0x000000000042f64f : ret 0xac60
0x0000000000425a2e : ret 0xb0
0x0000000000405e88 : ret 0xb132
0x000000000041f150 : ret 0xb740
0x000000000040e4c7 : ret 0xb848
0x000000000041d380 : ret 0xb940
0x000000000042e482 : ret 0xb94a
0x000000000041f7cc : ret 0xbf48
0x0000000000401735 : ret 0xc148
0x0000000000431d42 : ret 0xc493
0x0000000000430039 : ret 0xca21
0x0000000000431b05 : ret 0xccb2
0x00000000004119a7 : ret 0xceb7
0x0000000000404af3 : ret 0xd284
0x0000000000428585 : ret 0xd5f3
0x000000000042cc45 : ret 0xd618
0x000000000042ac36 : ret 0xd709
0x0000000000428b6e : ret 0xdc02
0x000000000040b8b3 : ret 0xe280
0x000000000041f022 : ret 0xe940
0x0000000000420281 : ret 0xe961
0x00000000004094ec : ret 0xe9d1
0x00000000004160ad : ret 0xea51
0x0000000000431af7 : ret 0xea81
0x0000000000405c9b : ret 0xeaf6
0x000000000042a50a : ret 0xedb9
0x0000000000421e3c : ret 0xee8
0x0000000000413575 : ret 0xf281
0x000000000041de87 : ret 0xf41
0x000000000041fdd5 : ret 0xf7f3
0x000000000041e55e : ret 0xfc75
0x000000000041fdcf : ret 0xffa5
0x000000000041e558 : ret 0xffc4
0x000000000041d778 : ret 0xffd5
0x000000000041d852 : ret 0xffd8
0x000000000041e60a : ret 0xffd9
0x000000000041d9f4 : ret 0xffe0
0x000000000041c6e5 : ret 0xfffa
0x0000000000432ca9 : ret 0xfffd
0x0000000000405108 : ret 0xffff
0x0000000000400640 : ret 1
0x000000000041e3f0 : ret 2
0x0000000000424a20 : ret 4
0x00000000004082b4 : ret 5
0x0000000000421544 : ret 8
0x00000000004051cb : retf ; and al, byte ptr [rbx] ; call 0x401426
0x0000000000404458 : rol bh, 1 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rax]
0x000000000042e9bd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000040fc5d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004117aa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412acc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b015 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000042e9bc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000427834 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040173c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40174b ; pop rbp ; ret
0x000000000042fe97 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000407737 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4077a0 ; ret
0x000000000040719e : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ec32 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408bc6 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004064f3 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x406503 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410335 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x410366 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041358a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000407f97 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000042e7ee : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000423fc0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000429b4a : sahf ; ret 0xd284
0x000000000040cd13 : sahf ; stosd dword ptr [rdi], eax ; popfq ; mov dl, -0x5e ; ret
0x00000000004332a9 : sar ch, cl ; call qword ptr [rcx]
0x000000000040173e : sar eax, 1 ; jne 0x401749 ; pop rbp ; ret
0x000000000041f341 : sar ebp, -0x17 ; ret 0x2a
0x000000000040173d : sar rax, 1 ; jne 0x40174a ; pop rbp ; ret
0x0000000000424300 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004333e8 : sbb ch, bh ; std ; call qword ptr [rdx]
0x000000000041f241 : sbb cl, ch ; ret
0x0000000000406e59 : sbb dh, bh ; mov bl, -0x47 ; ret 0x9373
0x0000000000427083 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408fe7 : sbb ebp, edi ; ret 0x89d1
0x0000000000408ca7 : sbb ebp, edi ; ret 0x8bd1
0x00000000004094ea : sbb ebp, edi ; ret 0xe9d1
0x0000000000423350 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000432e01 : sbb edi, edi ; jmp rsp
0x0000000000407e72 : scasb al, byte ptr [rdi] ; mov word ptr gs:[rdi - 0x47], ss ; call 0x48964154
0x0000000000428b6d : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x0000000000404eb8 : shl byte ptr [rcx + rax], -0x78 ; ret
0x000000000041e242 : shr cl, cl ; ret 0x3b
0x0000000000405105 : shr eax, -0xb ; ret 0xffff
0x000000000041c07d : stc ; ret 0x77a8
0x00000000004332aa : std ; call qword ptr [rcx]
0x00000000004333ea : std ; call qword ptr [rdx]
0x00000000004330ca : std ; jmp qword ptr [rcx]
0x000000000040456c : std ; ret 0x24b9
0x0000000000422c07 : std ; ret 0x279e
0x0000000000402786 : std ; ret 0x8589
0x00000000004333e9 : std ; std ; call qword ptr [rdx]
0x000000000040519d : sti ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rax]
0x000000000040cd14 : stosd dword ptr [rdi], eax ; popfq ; mov dl, -0x5e ; ret
0x00000000004105fe : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f756 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004104e8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d775 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041d76b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d845 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041e605 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000404db0 : sub eax, 0xb98d8139 ; ret
0x00000000004330c9 : sub edi, ebp ; jmp qword ptr [rcx]
0x000000000042783f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000431e61 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004330c8 : sub rdi, rbp ; jmp qword ptr [rcx]
0x0000000000431e60 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041d770 : test al, -0x7f ; ret 0x2d50
0x000000000041d84a : test al, -0x7f ; ret 0xa30b
0x000000000042e293 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004239de : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041ffa6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004268d8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000424b30 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000431e1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000433144 : test byte ptr [rcx], al ; add byte ptr [rax], al ; cmp byte ptr [rbp + rdi*8 - 1], al ; ret
0x00000000004145ec : test byte ptr [rcx], ch ; ret 0
0x000000000040fb0a : test dword ptr [rax + 0x4effffdf], edx ; ret
0x00000000004145e6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040f4ba : test dword ptr [rdi + rbx*8 + 0x4d2dffff], eax ; ret
0x000000000040f50e : test dword ptr [rdi + rbx*8 + 0x4e2dffff], eax ; ret
0x000000000040cb11 : test dword ptr [rdi + rbx*8 + 0x6a2dffff], esp ; ret
0x00000000004051a2 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rax]
0x00000000004051b9 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000040516b : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000040445a : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rax]
0x00000000004269e6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042ace5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004235fa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041f01b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042027a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041bd3a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000040ea8c : test eax, 0xb98a05fe ; ret 0x6ed8
0x000000000042022f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041e23f : wait ; jge 0x41e221 ; shr cl, cl ; ret 0x3b
0x00000000004192fd : wait ; jo 0x41930b ; ret
0x000000000041c84c : wait ; jo 0x41c85a ; ret
0x000000000042e9d8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042abd2 : xchg eax, ebp ; ret
0x0000000000429d08 : xchg eax, ebp ; ret 0x8445
0x0000000000408735 : xchg eax, ebp ; ret 0xd284
0x0000000000404eb7 : xchg eax, ebp ; shl byte ptr [rcx + rax], -0x78 ; ret
0x0000000000414e85 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041b785 : xchg eax, ebx ; ret
0x000000000041b9b5 : xchg eax, ecx ; ret
0x000000000041174a : xchg eax, edi ; ret 0xd284
0x0000000000415205 : xchg eax, edx ; ret
0x00000000004097ec : xchg eax, edx ; ret 0x8445
0x00000000004268de : xchg eax, edx ; ret 0xd284
0x000000000040e558 : xchg eax, esi ; ret 0x85f
0x000000000040b369 : xchg eax, esi ; ret 0xd284
0x0000000000425b7a : xchg eax, esp ; jmp 0x4265e8
0x0000000000425ab7 : xchg eax, esp ; jmp 0x4265ea
0x0000000000420234 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041bb05 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042027f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000423099 : xchg eax, esp ; ret 0x8041
0x000000000041f14e : xchg eax, esp ; ret 0xb740
0x0000000000404af2 : xchg eax, esp ; ret 0xd284
0x0000000000425b79 : xchg eax, r12d ; jmp 0x4265e9
0x000000000042e274 : xor al, 0x25 ; jmp qword ptr [rsi]
0x0000000000405057 : xor al, 0x62 ; ret 0x3de9
0x0000000000403e49 : xor al, 0x62 ; ret 0x54b9
0x000000000040274d : xor al, 0x62 ; ret 0x8589
0x000000000041f149 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x00000000004139e7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004139e8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404565 : xor ecx, dword ptr [rip - 0x9480000] ; loopne 0x404572 ; ret 0x24b9
