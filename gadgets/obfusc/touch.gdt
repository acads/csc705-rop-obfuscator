0x0000000000444914 : adc al, -0x13 ; ret
0x000000000045bd8d : adc al, 0 ; add ah, dl ; ret 0xfffe
0x000000000045bdad : adc al, 0 ; add byte ptr [rsi + rcx*8 - 2], dl ; call rsp
0x000000000044c1ec : adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000405f89 : adc bh, bh ; ret 0x8b44
0x000000000041d62f : adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x000000000041b8da : adc byte ptr [rdx - 0x47], bl ; sbb dword ptr [rdi], -0x3f ; ret
0x00000000004053c6 : adc byte ptr [rdx - 0x76baffbb], ah ; ret 0xb841
0x0000000000422e6f : adc ch, byte ptr [rcx + rdx - 0x4d] ; push 0x948a459 ; ret
0x0000000000438e1e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000042502d : adc cl, byte ptr [rax - 0x7d] ; ret 0x480c
0x000000000042b1f8 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4cfc
0x0000000000454d89 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x0000000000409fb5 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042296e : adc dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000044117b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045bced : adc dword ptr [rax], eax ; add byte ptr [rbp - 2], ah ; call rsp
0x0000000000452b88 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000043991b : adc eax, 0x558abda1 ; ret
0x0000000000413074 : adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000041b26b : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x000000000044e0f3 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x000000000043cef9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045bd6d : adc eax, dword ptr [rax] ; add byte ptr [rdi + rsi*4 - 2], dl ; call rsp
0x0000000000426c15 : adc eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000040a28b : adc eax, ebp ; js 0x40a27c ; ret
0x00000000004448c0 : adc ebp, ebp ; ret
0x000000000040a6df : adc ebp, ecx ; ret 0
0x000000000045c4e9 : adc edi, ebp ; call qword ptr [rdx]
0x000000000045c7d3 : add ah, al ; or byte ptr [rax], al ; add byte ptr [rax], bh ; sbb al, -2 ; call rdx
0x000000000045c4e3 : add ah, dl ; add eax, 0x13580000 ; std ; call qword ptr [rdx]
0x000000000045bd8f : add ah, dl ; ret 0xfffe
0x0000000000426d5f : add al, 0 ; add byte ptr [rbx - 0x46d263bb], cl ; ret 0x22e6
0x000000000040bc77 : add al, 0 ; add cl, ch ; ret
0x0000000000409ab8 : add al, 0 ; add cl, ch ; ret 1
0x000000000044b8ba : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045ba00 : add al, 0x6a ; cli ; jmp rsp
0x000000000045c114 : add al, 2 ; add byte ptr [rax], al ; test al, -0x19 ; cli ; call qword ptr [rcx]
0x000000000045c8bf : add al, ah ; and bh, dh ; jmp qword ptr [rbx]
0x000000000045c037 : add al, bh ; retf ; cli ; call qword ptr [rax]
0x000000000045c447 : add al, bl ; cmc ; cld ; jmp rax
0x000000000041c31f : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000041d0d2 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x792dd445], cl ; ret
0x000000000042858f : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041d99a : add bh, al ; in al, -0x28 ; ret 0x8948
0x000000000042394e : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x000000000042375f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004230fc : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000422970 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000421329 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rdi
0x00000000004215a9 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000042395d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x00000000004597e5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041c321 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000041b015 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x000000000041b26d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000440e54 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000439759 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000044e0f5 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x00000000004184a2 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000416f46 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000412f94 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x0000000000406045 : add bh, bh ; ret 0x1589
0x00000000004598df : add bl, dh ; ret
0x00000000004053c8 : add byte ptr [r13 - 0x77], r8b ; ret 0xb841
0x0000000000456f8c : add byte ptr [r8 - 0x73], r9b ; or al, 0x25 ; ret
0x00000000004481d2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000448434 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004243bd : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045c4e7 : add byte ptr [rax + 0x13], bl ; std ; call qword ptr [rdx]
0x0000000000414bee : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000412c5a : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004179b5 : add byte ptr [rax - 0x47], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; insd dword ptr [rdi], dx ; jmp rsi
0x0000000000456f8d : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x000000000043debb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a73b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000445675 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x6b ; ret 0xb041
0x000000000045c443 : add byte ptr [rax - 0xa280000], dh ; cld ; jmp rax
0x000000000040c4ae : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045b9fe : add byte ptr [rax], al ; add al, 0x6a ; cli ; jmp rsp
0x000000000045c112 : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; test al, -0x19 ; cli ; call qword ptr [rcx]
0x000000000041d998 : add byte ptr [rax], al ; add bh, al ; in al, -0x28 ; ret 0x8948
0x00000000004597e3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000440e52 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004184a0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004598dd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000414bec : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000412c58 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004179b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; insd dword ptr [rdi], dx ; jmp rsi
0x000000000040a889 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004598db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043f2aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000457040 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405555 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043f2ab : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004598dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a81e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043c962 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000425c93 : add byte ptr [rax], al ; add byte ptr [rbx + 0x782d9c45], cl ; ret
0x000000000041d117 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2dd445], cl ; ret
0x000000000043f0c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000402545 : add byte ptr [rax], al ; add byte ptr [rbx + 0xa2de845], cl ; ret
0x000000000043f613 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000457438 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004573f6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000042868e : add byte ptr [rax], al ; add byte ptr [rbx - 0x47d22fbb], cl ; ret
0x0000000000425f81 : add byte ptr [rax], al ; add byte ptr [rbx - 0x47d263bb], cl ; ret 0x22e6
0x000000000042836e : add byte ptr [rax], al ; add byte ptr [rbx - 0x48d22fbb], cl ; ret
0x000000000044bfbe : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x0000000000455bec : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000441f79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000422710 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000422872 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000045480e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042b35e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret 0x3368
0x000000000041ceec : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004481d3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000448435 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000440dc0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004475a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041bac5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x000000000040bac3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000416d80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042b423 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405aa4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004557fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000044ae35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000440d4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405557 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423441 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043cefb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c580 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044117d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402350 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045588c : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040185b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045c032 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; clc ; retf ; cli ; call qword ptr [rax]
0x000000000045c036 : add byte ptr [rax], al ; clc ; retf ; cli ; call qword ptr [rax]
0x000000000045c7d6 : add byte ptr [rax], al ; cmp byte ptr [rsi + rdi*8], bl ; call rdx
0x000000000045c446 : add byte ptr [rax], al ; fdiv st(5) ; cld ; jmp rax
0x000000000045ba7e : add byte ptr [rax], al ; je 0x45ba88 ; sti ; jmp rsp
0x0000000000401a19 : add byte ptr [rax], al ; jmp 0x401879
0x0000000000402051 : add byte ptr [rax], al ; jmp 0x40224a
0x00000000004552dc : add byte ptr [rax], al ; jmp 0x455391
0x000000000045c8ba : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add al, ah ; and bh, dh ; jmp qword ptr [rbx]
0x0000000000448218 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004505d7 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000457bc5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a88a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045cb06 : add byte ptr [rax], al ; or byte ptr [rdx - 2], cl ; call qword ptr [rdx]
0x000000000045bdee : add byte ptr [rax], al ; or edi, r15d ; call rsp
0x000000000045ba3e : add byte ptr [rax], al ; out -6, eax ; jmp rsp
0x000000000045c4e6 : add byte ptr [rax], al ; pop rax ; adc edi, ebp ; call qword ptr [rdx]
0x0000000000402226 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040631e : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045bd6e : add byte ptr [rax], al ; push rsp ; mov bh, -2 ; call rsp
0x00000000004598de : add byte ptr [rax], al ; ret
0x000000000045c116 : add byte ptr [rax], al ; test al, -0x19 ; cli ; call qword ptr [rcx]
0x000000000045bb36 : add byte ptr [rax], al ; test byte ptr [rax], bl ; std ; call rsp
0x000000000045c442 : add byte ptr [rax], al ; xor al, 5 ; add byte ptr [rax], al ; fdiv st(5) ; cld ; jmp rax
0x000000000045c7d7 : add byte ptr [rax], bh ; sbb al, -2 ; call rdx
0x000000000045c217 : add byte ptr [rax], bl ; ret
0x000000000045aceb : add byte ptr [rbp + rdi*8 - 1], ch ; jmp rcx
0x00000000004053c9 : add byte ptr [rbp - 0x77], al ; ret 0xb841
0x000000000045bcef : add byte ptr [rbp - 2], ah ; call rsp
0x000000000045bbb7 : add byte ptr [rbp - 2], ah ; jmp rsp
0x000000000040a820 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000042c7ea : add byte ptr [rbx + 0x312dac45], cl ; sbb al, -0x1a ; ret
0x000000000042c880 : add byte ptr [rbx + 0x322dac45], cl ; sbb al, -0x1a ; ret
0x000000000040631f : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000425802 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425c95 : add byte ptr [rbx + 0x782d9c45], cl ; ret
0x000000000042704f : add byte ptr [rbx + 0x792d9c45], cl ; ret
0x000000000041d0d4 : add byte ptr [rbx + 0x792dd445], cl ; ret
0x000000000041d119 : add byte ptr [rbx + 0x7a2dd445], cl ; ret
0x000000000043f0c4 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000402547 : add byte ptr [rbx + 0xa2de845], cl ; ret
0x000000000045c2b3 : add byte ptr [rbx + rax + 0x16b80000], ah ; cld ; call qword ptr [rbx]
0x000000000043f615 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043f5ca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041da50 : add byte ptr [rbx - 0x27d243bb], cl ; ret 0x4589
0x000000000041da0e : add byte ptr [rbx - 0x28d243bb], cl ; ret 0x4589
0x000000000045743a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004573f8 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000426d61 : add byte ptr [rbx - 0x46d263bb], cl ; ret 0x22e6
0x0000000000428690 : add byte ptr [rbx - 0x47d22fbb], cl ; ret
0x0000000000425f83 : add byte ptr [rbx - 0x47d263bb], cl ; ret 0x22e6
0x0000000000428370 : add byte ptr [rbx - 0x48d22fbb], cl ; ret
0x000000000044bfc0 : add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x0000000000455bee : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004505d8 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000457bc6 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000448219 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000441f7b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004082de : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422712 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000422874 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000454810 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045ba7f : add byte ptr [rcx + rax - 5], dh ; jmp rsp
0x000000000045c033 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; clc ; retf ; cli ; call qword ptr [rax]
0x000000000045bdef : add byte ptr [rcx + rcx - 1], al ; call rsp
0x00000000004053c3 : add byte ptr [rcx - 0x48], al ; adc byte ptr [rdx - 0x76baffbb], ah ; ret 0xb841
0x000000000042b360 : add byte ptr [rcx - 0x7f], al ; ret 0x3368
0x0000000000440ebe : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ceee : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401e58 : add byte ptr [rcx], al ; ret
0x000000000042c45b : add byte ptr [rcx], al ; ret 0x8b48
0x00000000004481d5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000448437 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000440dc2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045ace7 : add byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rbp + rdi*8 - 1], ch ; jmp rcx
0x000000000045bd6f : add byte ptr [rdi + rsi*4 - 2], dl ; call rsp
0x000000000045ba3f : add byte ptr [rdi - 6], al ; jmp rsp
0x00000000004475a3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041bac7 : add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x000000000040bac5 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000416d82 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042b425 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405aa6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004557fc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000044ae37 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000440d4c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000413077 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004456ee : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405559 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423443 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045c113 : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; test al, -0x19 ; cli ; call qword ptr [rcx]
0x000000000045b9ff : add byte ptr [rdx + rbp*2], al ; cli ; jmp rsp
0x000000000045bdaf : add byte ptr [rsi + rcx*8 - 2], dl ; call rsp
0x000000000045c3c3 : add byte ptr [rsp + rax - 0x42c80000], dh ; cld ; call qword ptr [rax]
0x000000000042747f : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045703f : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405554 : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004082dd : add byte ptr gs:[rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043988c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040bc79 : add cl, ch ; ret
0x000000000040915d : add cl, ch ; ret 1
0x0000000000417853 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x00000000004512cd : add dword ptr [rax - 0x75], ecx ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000045c035 : add dword ptr [rax], eax ; add al, bh ; retf ; cli ; call qword ptr [rax]
0x000000000042394c : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x000000000042395b : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000045ace9 : add dword ptr [rax], eax ; add byte ptr [rbp + rdi*8 - 1], ch ; jmp rcx
0x000000000042704d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x792d9c45], cl ; ret
0x0000000000413075 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004456ec : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041b8d8 : add dword ptr [rax], esi ; adc byte ptr [rdx - 0x47], bl ; sbb dword ptr [rdi], -0x3f ; ret
0x0000000000408a43 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000447722 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000446574 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044675e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045c4e5 : add eax, 0x13580000 ; std ; call qword ptr [rdx]
0x0000000000401e54 : add eax, 0x25c53e ; add ebx, esi ; ret
0x000000000045b9fd : add eax, 0x6a040000 ; cli ; jmp rsp
0x0000000000427b44 : add eax, 0xb9b80000 ; ret 0x22e6
0x0000000000454245 : add eax, 0xe9000004 ; ret 1
0x000000000045c445 : add eax, 0xf5d80000 ; cld ; jmp rax
0x00000000004435da : add eax, 0xf7b80000 ; ret
0x000000000042375d : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000045c215 : add eax, dword ptr [rax] ; add byte ptr [rax], bl ; ret
0x0000000000459714 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000456cd3 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042747c : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401e1b : add eax, edx ; sar rax, 1 ; jne 0x401e2c ; pop rbp ; ret
0x000000000042b84a : add ebp, ecx ; ret
0x000000000045ba81 : add ebx, edi ; jmp rsp
0x0000000000401e59 : add ebx, esi ; ret
0x000000000044c0f7 : add edi, eax ; in al, -0x55 ; ret
0x000000000042b7c9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x00000000004023c9 : add esp, 0x10 ; pop rbp ; ret
0x0000000000440ebc : add esp, 0x100 ; pop rbp ; ret
0x0000000000428aaa : add esp, 0x150 ; pop rbp ; ret
0x00000000004096d0 : add esp, 0x190 ; pop rbp ; ret
0x000000000044102c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004572e7 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004513a2 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000043c583 : add esp, 0x20 ; pop rbp ; ret
0x000000000045826e : add esp, 0x230 ; pop rbp ; ret
0x000000000042439e : add esp, 0x30 ; pop rbp ; ret
0x00000000004439ae : add esp, 0x320 ; pop rbp ; ret
0x0000000000441180 : add esp, 0x40 ; pop rbp ; ret
0x000000000044bab9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000427f42 : add esp, 0x4d0 ; pop rbp ; ret
0x0000000000402353 : add esp, 0x50 ; pop rbp ; ret
0x000000000040bb31 : add esp, 0x60 ; pop rbp ; ret
0x000000000044f17f : add esp, 0x660 ; pop rbp ; ret
0x000000000041c1dc : add esp, 0x690 ; pop rbp ; ret
0x000000000043e272 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406a34 : add esp, 0x80 ; pop rbp ; ret
0x0000000000402222 : add esp, 0x90 ; pop rbp ; ret
0x000000000043f056 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041d7fd : add esp, 0xb0 ; pop rbp ; ret
0x000000000042d20a : add esp, 0xd0 ; pop rbp ; ret
0x0000000000423f34 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040c182 : add esp, 0xf0 ; pop rbp ; ret
0x000000000042d813 : add esp, 8 ; pop rbp ; ret
0x000000000040185e : add esp, 8 ; ret
0x000000000042395a : add qword ptr [r8], rax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000042375c : add rax, qword ptr [r8] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000401e1a : add rax, rdx ; sar rax, 1 ; jne 0x401e2d ; pop rbp ; ret
0x00000000004023c8 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000440ebb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000428aa9 : add rsp, 0x150 ; pop rbp ; ret
0x00000000004096cf : add rsp, 0x190 ; pop rbp ; ret
0x000000000044102b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004572e6 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004513a1 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000043c582 : add rsp, 0x20 ; pop rbp ; ret
0x000000000045826d : add rsp, 0x230 ; pop rbp ; ret
0x000000000042439d : add rsp, 0x30 ; pop rbp ; ret
0x00000000004439ad : add rsp, 0x320 ; pop rbp ; ret
0x000000000044117f : add rsp, 0x40 ; pop rbp ; ret
0x000000000044bab8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000427f41 : add rsp, 0x4d0 ; pop rbp ; ret
0x0000000000402352 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040bb30 : add rsp, 0x60 ; pop rbp ; ret
0x000000000044f17e : add rsp, 0x660 ; pop rbp ; ret
0x000000000041c1db : add rsp, 0x690 ; pop rbp ; ret
0x000000000043e271 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a33 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000402221 : add rsp, 0x90 ; pop rbp ; ret
0x000000000043f055 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041d7fc : add rsp, 0xb0 ; pop rbp ; ret
0x000000000042d209 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000423f33 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040c181 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000042d812 : add rsp, 8 ; pop rbp ; ret
0x000000000040185d : add rsp, 8 ; ret
0x00000000004215a7 : and al, 0 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x00000000004481dd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000045cfe9 : and al, 0xffffffffffffffff ; jmp rcx
0x000000000045c034 : and al, 1 ; add byte ptr [rax], al ; clc ; retf ; cli ; call qword ptr [rax]
0x0000000000446573 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044675d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045c8c1 : and bh, dh ; jmp qword ptr [rbx]
0x00000000004439b0 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044c1ee : and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000443733 : and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000441cab : and byte ptr [rsi + 0x58], ah ; jb 0x441ce2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044c1ed : and byte ptr ds:[rcx - 0x7bf03bbb], cl ; ret 0
0x000000000041335f : and ch, byte ptr [rdi - 0x47] ; ret
0x0000000000457ceb : and dword ptr [rax], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045586c : and eax, 0x45b97c ; call 0x401aa7
0x0000000000405b84 : and eax, 0x52b97bda ; cdq ; in eax, dx ; ret 0x558a
0x0000000000438ac1 : and eax, 0x75b4b9d3 ; ret
0x000000000044bceb : call 0x4018c9
0x0000000000455871 : call 0x401aa2
0x00000000004420a5 : call 0x442169
0x00000000004581a2 : call 0xffffffff8a25d73b
0x000000000041d0d1 : call 0xffffffff8b41d0e1
0x000000000045618d : call 0xffffffffaca623c1
0x000000000045618c : call 0xffffffffaca623c2
0x0000000000424218 : call 0xffffffffb8424226
0x00000000004223e0 : call 0xffffffffc2cb6809
0x000000000043c579 : call 0xffffffffe9064ec9
0x000000000043c578 : call 0xffffffffe9064eca
0x000000000041d584 : call 0xfffffffffb031dd0
0x000000000041d74e : call 0xfffffffffb031f9a
0x000000000044e0a3 : call 0xfffffffffea16675
0x000000000044e0a2 : call 0xfffffffffea16676
0x00000000004598b9 : call qword ptr [r12 + rbx*8]
0x00000000004065c9 : call qword ptr [rax]
0x000000000041bcee : call qword ptr [rbx]
0x000000000041c327 : call qword ptr [rcx]
0x0000000000412fdd : call qword ptr [rdi]
0x0000000000422976 : call qword ptr [rdx]
0x00000000004598ba : call qword ptr [rsp + rbx*8]
0x0000000000401e7d : call rax
0x000000000041c1e9 : call rbx
0x0000000000405a7c : call rcx
0x000000000042132f : call rdi
0x000000000040a2e5 : call rdx
0x0000000000423756 : call rsi
0x0000000000423367 : call rsp
0x0000000000405b89 : cdq ; in eax, dx ; ret 0x558a
0x0000000000403930 : cdq ; in eax, dx ; ret 0x8589
0x0000000000405ae5 : cdq ; in eax, dx ; ret 0x8b48
0x0000000000405cd7 : cdq ; in eax, dx ; ret 0x99e9
0x00000000004572e5 : clc ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000042439c : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044bab7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000455374 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000441407 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000442529 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401e1f : clc ; jne 0x401e28 ; pop rbp ; ret
0x000000000041cee8 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x0000000000428106 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000045519b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041d97c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041c5e3 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000043f1bb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f19b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043debf : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000043f2f7 : clc ; pop rbp ; ret
0x000000000042b72b : clc ; pop rbx ; pop rbp ; ret
0x000000000042f04d : clc ; ret 0x77a8
0x000000000045c038 : clc ; retf ; cli ; call qword ptr [rax]
0x00000000004023c7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044bf35 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041c1da : cld ; add rsp, 0x690 ; pop rbp ; ret
0x00000000004567ce : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040c180 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000045c3ca : cld ; call qword ptr [rax]
0x000000000045c2ba : cld ; call qword ptr [rbx]
0x000000000045c382 : cld ; call rcx
0x000000000045bafa : cld ; call rsp
0x000000000040a84f : cld ; jmp 0x40a8bc
0x000000000040a84e : cld ; jmp 0x40a8bd
0x000000000045c44a : cld ; jmp rax
0x000000000045bac2 : cld ; jmp rsp
0x000000000045baf2 : cld ; ljmp ptr [rcx + rcx - 0x617c0000] ; cld ; call rsp
0x00000000004505db : cld ; mov rsp, rbp ; pop rbp ; ret
0x0000000000456eb0 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045c03a : cli ; call qword ptr [rax]
0x000000000045c11a : cli ; call qword ptr [rcx]
0x000000000045b9fa : cli ; inc esp ; add eax, 0x6a040000 ; cli ; jmp rsp
0x000000000045ba02 : cli ; jmp rsp
0x0000000000441cb0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041d61b : cli ; or ecx, dword ptr [rax + 1] ; ret 0x8b48
0x00000000004481dc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000045c449 : cmc ; cld ; jmp rax
0x0000000000440bcb : cmc ; ret 0x4f0b
0x000000000045480c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045c7d8 : cmp byte ptr [rsi + rdi*8], bl ; call rdx
0x0000000000412b2f : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4837
0x0000000000440d61 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000418086 : cmp dl, -1 ; inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rdx
0x0000000000422d7a : cmp dword ptr [rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x0000000000422d79 : cmp dword ptr ss:[rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x0000000000401ddd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401df0 ; pop rbp ; ret
0x0000000000439917 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000428cc1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000456cd2 : cwde ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000415200 : cwde ; in eax, -1 ; dec dword ptr [rax + 1] ; ret 0x8b48
0x0000000000454f76 : cwde ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451b7f : cwde ; ret
0x0000000000457135 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041d5b7 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000415203 : dec dword ptr [rax + 1] ; ret 0x8b48
0x00000000004213dd : dec dword ptr [rax - 0x16653d47] ; ret 0x26
0x0000000000438e1b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000043878e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000438f93 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000415848 : dec dword ptr [rax - 0x75] ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000042b7c6 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x0000000000402723 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000422250 : dec dword ptr [rax - 0x77] ; ret 0x17e8
0x000000000042135e : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044b616 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004067a0 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000405fc5 : dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x0000000000409ebd : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042142c : dec dword ptr [rax - 0x7f] ; ret 0x76c
0x0000000000420dd7 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000042192a : dec dword ptr [rbp - 0x77] ; ret
0x000000000042190d : dec dword ptr [rbp - 0x77] ; ret 0x214d
0x00000000004219a1 : dec dword ptr [rbp - 0x77] ; ret 0x8149
0x00000000004500a5 : dec dword ptr [rbx - 0x2036b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004546d0 : dec dword ptr [rbx - 0x34b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000454b08 : dec dword ptr [rbx - 0x36b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000454ca4 : dec dword ptr [rbx - 0x3736b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000408436 : dec dword ptr [rbx - 0x3a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000422174 : dec dword ptr [rbx - 0xb936b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000440bc6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040843c : dec dword ptr [rdi] ; ret 0x4589
0x000000000042217a : dec dword ptr [rdi] ; ret 0x8589
0x0000000000456ccf : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000042858b : dec dword ptr [rdi] ; test byte ptr [rax], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044fd84 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffa], bh ; ret 1
0x000000000042bf24 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffa], bl ; ret 1
0x000000000042ed2a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000427012 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff4], bh ; ret 1
0x0000000000409ab4 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004568ce : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffa], bl ; ret
0x0000000000454242 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], al ; ret 1
0x0000000000426c11 : dec dword ptr [rdi] ; test dl, dh ; adc eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004176c3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000045950e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000040c011 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041c4ce : dec dword ptr [rip - 0x16b3c858] ; ret
0x000000000042cc47 : enter -0x76b8, -0x14 ; pop rbp ; ret
0x000000000041c171 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044b099 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044e1d1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042d029 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409525 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041da55 : fadd dword ptr [rsi + 0x26] ; ret 0x4589
0x000000000041d99e : fadd dword ptr [rsi + 0x26] ; ret 0x8948
0x000000000040bac1 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004594f0 : fbld dword ptr [rcx] ; ret 0x941
0x000000000045c448 : fdiv st(5) ; cld ; jmp rax
0x0000000000420e9e : fidiv word ptr [rdx + 0x7c] ; ret 0x2eb9
0x000000000041eea6 : fidiv word ptr [rdx + 0x7c] ; ret 0x8589
0x0000000000405b85 : fidivr dword ptr [rbx - 0x47] ; push rdx ; cdq ; in eax, dx ; ret 0x558a
0x00000000004594cf : fild word ptr [rcx - 0x77] ; ret
0x0000000000422fb0 : fimul dword ptr [rax + 0x21] ; ret 0x3149
0x0000000000422d7d : fisttp dword ptr [rcx - 0x77] ; ret
0x0000000000401e77 : fisub word ptr [rbp] ; mov rbp, rsp ; call rax
0x000000000042a016 : fisubr dword ptr [rcx + 0x3f] ; ret 0x8589
0x0000000000446798 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042b278 : fld xword ptr [rcx + 0x3f] ; ret 0x67b9
0x000000000042a35e : fld xword ptr [rcx + 0x3f] ; ret 0x8589
0x000000000041d62a : fmul dword ptr [r8 - 0x75] ; push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x00000000004558d7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041d62b : fmul dword ptr [rax - 0x75] ; push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x00000000004558d8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004598bc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041ee52 : fnsave dword ptr [rdx + 0x7c] ; ret 0x8589
0x00000000004410b3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004439ac : hlt ; add rsp, 0x320 ; pop rbp ; ret
0x000000000040bb2f : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000455e3c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042d811 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401df0 : hlt ; pop rbp ; mov edi, 0x65e328 ; jmp rax
0x0000000000441ddb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042add3 : imul eax, dword ptr [rsi - 0x7f], 0xfffffff7 ; jmp qword ptr [rcx]
0x00000000004086c0 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000041dc13 : in al, -0x17 ; ret
0x000000000041d99d : in al, -0x28 ; ret 0x8948
0x000000000044c0fa : in al, -0x55 ; ret
0x0000000000448801 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000045624c : in al, dx ; jmp 0x4562c9
0x000000000045624b : in al, dx ; jmp 0x4562ca
0x000000000042b727 : in al, dx ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000402726 : in al, dx ; pop rbp ; ret
0x0000000000415201 : in eax, -1 ; dec dword ptr [rax + 1] ; ret 0x8b48
0x0000000000414d40 : in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x000000000042335f : in eax, -3 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x000000000045703e : in eax, 0x65 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a28a : in eax, dx ; adc eax, ebp ; js 0x40a27d ; ret
0x00000000004448c1 : in eax, dx ; ret
0x0000000000405b8a : in eax, dx ; ret 0x558a
0x0000000000403931 : in eax, dx ; ret 0x8589
0x0000000000405ae6 : in eax, dx ; ret 0x8b48
0x0000000000405cd8 : in eax, dx ; ret 0x99e9
0x000000000042270e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000422870 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000413240 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044e63a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004292d8 : inc dword ptr [rbp - 0x77] ; ret
0x000000000042570b : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x00000000004215c8 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004226fb : inc dword ptr [rcx + 0xf] ; pushfq ; ret
0x0000000000404d4d : inc dword ptr [rcx + 0xf] ; ret
0x00000000004291c9 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000412a38 : inc dword ptr [rcx + 0xf] ; xchg eax, esi ; ret 0x8445
0x0000000000405c40 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000044ef1b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423750 : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsi
0x0000000000423361 : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x000000000042174e : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x0000000000423896 : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x0000000000446339 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x000000000044f1a7 : inc edi ; test dword ptr [rsi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000418089 : inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rdx
0x000000000041793a : inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rsp
0x000000000041c232 : inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x000000000045b9fb : inc esp ; add eax, 0x6a040000 ; cli ; jmp rsp
0x000000000045bbb3 : inc esp ; or al, 0 ; add byte ptr [rbp - 2], ah ; jmp rsp
0x00000000004193b3 : insb byte ptr [rdi], dx ; ret
0x0000000000451190 : insd dword ptr [rdi], dx ; jmp 0x451485
0x00000000004179b9 : insd dword ptr [rdi], dx ; jmp rsi
0x000000000043ea27 : int 0x5b
0x0000000000443730 : iretd ; push rax ; pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000401de3 : ja 0x401dea ; pop rbp ; ret
0x0000000000422be3 : ja 0x422b82 ; push rdx ; ret
0x0000000000422bf3 : ja 0x422b92 ; push rdx ; ret
0x000000000041ee53 : jb 0x41eed3 ; ret 0x8589
0x000000000041eea7 : jb 0x41ef27 ; ret 0x8589
0x0000000000420e9f : jb 0x420f1f ; ret 0x2eb9
0x0000000000441cae : jb 0x441cdf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401def : je 0x401ded ; pop rbp ; mov edi, 0x65e328 ; jmp rax
0x000000000045ba80 : je 0x45ba86 ; sti ; jmp rsp
0x0000000000413072 : jge 0x413038 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x0000000000416ee6 : jge 0x416eac ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x00000000004176e2 : jge 0x4176a8 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000041d97b : jge 0x41d97c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004243bb : jge 0x4243a5 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000437eb6 : jge 0x437e3b ; ret 0xffd5
0x0000000000438980 : jge 0x438960 ; shr cl, cl ; ret 0x3b
0x000000000043f19a : jge 0x43f19b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043f1ba : jge 0x43f1bb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000045519a : jge 0x45519d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000401a1b : jmp 0x401877
0x0000000000402053 : jmp 0x402248
0x00000000004081f3 : jmp 0x408c2d
0x000000000040a850 : jmp 0x40a8bb
0x00000000004149f6 : jmp 0x41852f
0x0000000000417095 : jmp 0x418530
0x0000000000412e83 : jmp 0x418531
0x0000000000412e82 : jmp 0x418532
0x000000000041d64e : jmp 0x41d96b
0x00000000004229fc : jmp 0x423aaf
0x000000000042b31a : jmp 0x42ba19
0x00000000004390d0 : jmp 0x43c550
0x0000000000436fd4 : jmp 0x43c551
0x00000000004383a1 : jmp 0x43c552
0x000000000043ffeb : jmp 0x440a57
0x000000000043ff28 : jmp 0x440a59
0x0000000000442053 : jmp 0x4420b8
0x00000000004435d8 : jmp 0x443af0
0x00000000004455b5 : jmp 0x4463e6
0x000000000044b956 : jmp 0x44bc38
0x0000000000450323 : jmp 0x450742
0x0000000000450f92 : jmp 0x451482
0x0000000000451191 : jmp 0x451484
0x00000000004552de : jmp 0x45538f
0x000000000045624d : jmp 0x4562c8
0x000000000041b991 : jmp 0x4933e2e4
0x0000000000440bca : jmp 0x4f4fcec6
0x00000000004592bf : jmp 0xffffffffc409c986
0x00000000004184a8 : jmp qword ptr [rax]
0x000000000045c67b : jmp qword ptr [rbx]
0x0000000000405a2d : jmp qword ptr [rcx]
0x00000000004215af : jmp qword ptr [rdi]
0x000000000040613c : jmp qword ptr [rdx]
0x0000000000401df7 : jmp rax
0x00000000004066f6 : jmp rbx
0x00000000004067d0 : jmp rcx
0x0000000000438502 : jmp rdi
0x0000000000401e37 : jmp rdx
0x00000000004179ba : jmp rsi
0x00000000004030fb : jmp rsp
0x0000000000401e20 : jne 0x401e27 ; pop rbp ; ret
0x000000000041d97f : jne 0x41d974 ; pop rbp ; ret
0x0000000000451b7e : jno 0x451b1a ; ret
0x0000000000451bd2 : jno 0x451b6e ; ret
0x0000000000452bc6 : jno 0x452b62 ; ret
0x0000000000405b86 : jnp 0x405b46 ; push rdx ; cdq ; in eax, dx ; ret 0x558a
0x00000000004435d6 : jns 0x4435b9 ; jmp 0x443af2
0x0000000000431dce : jo 0x431dda ; ret
0x0000000000433a3e : jo 0x433a4a ; ret
0x0000000000436f8d : jo 0x436f99 ; ret
0x000000000043e274 : jo 0x43e2d5 ; ret
0x000000000043f19f : jo 0x43f200 ; ret
0x000000000043f19e : jo 0x43f201 ; ret
0x000000000042c290 : jp 0x42c24d ; ret
0x0000000000405553 : jrcxz 0x4055c3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405a25 : jrcxz 0x405a8f ; xor eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004082dc : jrcxz 0x40834c ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422bdf : jrcxz 0x422b83 ; test eax, 0x529a77a3 ; ret
0x0000000000422bef : jrcxz 0x422b93 ; test eax, 0x529a77a3 ; ret
0x000000000040a28d : js 0x40a27a ; ret
0x000000000043897e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000439a7e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040b056 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045586a : lea ecx, dword ptr [0x45b97c] ; call 0x401aa9
0x000000000042e6c5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004296c0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b729 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042e6c4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042b728 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000423893 : leave ; loopne 0x42389c ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x000000000045743f : leave ; ret 0x86f8
0x000000000042cc97 : les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000045baf3 : ljmp ptr [rcx + rcx - 0x617c0000] ; cld ; call rsp
0x00000000004372de : ljmp ptr [rdi] ; ret 0x23da
0x0000000000414d3f : lodsb al, byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000450f91 : lodsb al, byte ptr [rsi] ; jmp 0x451483
0x0000000000450f90 : lodsb al, byte ptr [rsi] ; jmp 0x451484
0x000000000045c8bc : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add al, ah ; and bh, dh ; jmp qword ptr [rbx]
0x00000000004230f9 : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000412373 : loop 0x4122fc ; ret 0x8969
0x0000000000415d7d : loop 0x415d06 ; ret 0xb969
0x0000000000418090 : loop 0x418019 ; ret 0xe969
0x0000000000408a42 : loope 0x408a4e ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ce23 : loope 0x40cdac ; ret 0x8969
0x000000000043a2e5 : loope 0x43a2b3 ; jmp 0x43c553
0x000000000040bf95 : loopne 0x40bf9e ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423894 : loopne 0x42389b ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x0000000000423f36 : loopne 0x423f3d ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004243bc : loopne 0x42440a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000427f40 : loopne 0x427f93 ; add esp, 0x4d0 ; pop rbp ; ret
0x000000000042e6c3 : loopne 0x42e716 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043dc6d : loopne 0x43dcd3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043f054 : loopne 0x43f0a7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000441713 : loopne 0x44171c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044209e : loopne 0x4420ee ; add esp, 0x60 ; pop rbp ; ret
0x000000000044209d : loopne 0x4420ef ; add esp, 0x60 ; pop rbp ; ret
0x00000000004432ad : loopne 0x4432b6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044821c : loopne 0x44826b ; mov esp, ebp ; pop rbp ; ret
0x000000000044821b : loopne 0x44826c ; mov esp, ebp ; pop rbp ; ret
0x000000000044846c : loopne 0x4484bb ; mov esp, ebp ; pop rbp ; ret
0x000000000044846b : loopne 0x4484bc ; mov esp, ebp ; pop rbp ; ret
0x0000000000455e40 : loopne 0x455e47 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004567d2 : loopne 0x4567d9 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004584ec : loopne 0x458480 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004584eb : loopne 0x458481 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040a289 : mov ah, -0x13 ; adc eax, ebp ; js 0x40a27e ; ret
0x0000000000437ead : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437f87 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000045bd6c : mov ah, 0x13 ; add byte ptr [rax], al ; push rsp ; mov bh, -2 ; call rsp
0x000000000045bdec : mov ah, 0x15 ; add byte ptr [rax], al ; or edi, r15d ; call rsp
0x0000000000435f35 : mov ah, 0x75 ; ret
0x000000000045bb34 : mov ah, 0xa ; add byte ptr [rax], al ; test byte ptr [rax], bl ; std ; call rsp
0x000000000043ea43 : mov al, -0x47 ; ret
0x00000000004250b0 : mov al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042cc43 : mov al, -0x77 ; ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x000000000044b11f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405aa2 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041d7ff : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000446a8d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044675a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004469bd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000451a49 : mov bh, -0x3e ; jmp 0x451a05
0x0000000000452b00 : mov bh, -0x3e ; jmp 0x452abc
0x000000000045bd71 : mov bh, -2 ; call rsp
0x000000000042f8d5 : mov bl, 0x75 ; ret
0x000000000041cee9 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x0000000000428107 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401e53 : mov byte ptr [rip + 0x25c53e], 1 ; ret
0x000000000043772f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042182d : mov cs, word ptr [rbp + 0x54cba35] ; ret 0x3d3b
0x00000000004519f5 : mov dh, -0x3e ; jmp 0x4519b1
0x0000000000408a45 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000447724 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000446576 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446760 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004481da : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000447451 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000042de49 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042da1f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d97e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000045624a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4562cb
0x0000000000450320 : mov dword ptr [rbp - 0x2c], eax ; jmp 0x450745
0x0000000000450f8f : mov dword ptr [rbp - 0x54], eax ; jmp 0x451485
0x000000000043ffe8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x440a5a
0x00000000004410b1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023c5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d97a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000042e126 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045519c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041c5e5 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x000000000042dccd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040a73a : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000441f1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f2f1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042b725 : mov eax, dword ptr [rbp - 0x14] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004420ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b65e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044c127 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042de4c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044209c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004584ea : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044821a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042dccf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042c54d : mov eax, dword ptr [rbp - 0x40] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004250ae : mov eax, dword ptr [rbp - 0x50] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000454f74 : mov eax, dword ptr [rbp - 0x68] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004530e6 : mov eax, dword ptr [rbp - 0x70] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bb2d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042d80f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000044bf33 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004505d9 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042439a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000455372 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043debd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043f1bd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f19d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042dcce : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000042cc46 : mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a6e8 : mov ebp, 0xe19c53ba ; ret
0x000000000044fd87 : mov ebp, 0xe9000006 ; ret 1
0x0000000000401e7b : mov ebp, esp ; call rax
0x0000000000401de1 : mov ebp, esp ; ja 0x401dec ; pop rbp ; ret
0x0000000000422bde : mov ebx, 0xa3a99be3 ; ja 0x422b87 ; push rdx ; ret
0x000000000045586e : mov ecx, 0x2ae80045 ; ret 0xfffa
0x0000000000456f8b : mov ecx, 0x8d480045 ; or al, 0x25 ; ret
0x000000000042da1c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cc44 : mov ecx, eax ; mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000452813 : mov ecx, gs ; ret 0xa
0x0000000000401e75 : mov edi, 0x65de20 ; mov rbp, rsp ; call rax
0x0000000000401df2 : mov edi, 0x65e328 ; jmp rax
0x0000000000401e32 : mov edi, 0x65e328 ; jmp rdx
0x0000000000436f87 : mov edi, 0xb8000055 ; wait ; jo 0x436f9f ; ret
0x0000000000427015 : mov edi, 0xe900000c ; ret 1
0x000000000043f1b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f199 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004598b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004598b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044b8ce : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043774b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000422bee : mov edx, 0xa3a99be3 ; ja 0x422b97 ; push rdx ; ret
0x000000000040a2e2 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x000000000041c5e1 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000043f2f5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004385c2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000044b8b7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401e30 : mov esi, eax ; mov edi, 0x65e328 ; jmp rdx
0x000000000041da11 : mov esp, 0x2646d72d ; ret 0x4589
0x000000000041da53 : mov esp, 0x2646d82d ; ret 0x4589
0x0000000000402725 : mov esp, ebp ; pop rbp ; ret
0x000000000041d97d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041d979 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000042e125 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c5e4 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040a288 : mov r12b, -0x13 ; adc eax, ebp ; js 0x40a27f ; ret
0x000000000041da10 : mov r12d, 0x2646d72d ; ret 0x4589
0x000000000041da52 : mov r12d, 0x2646d82d ; ret 0x4589
0x00000000004250af : mov r8b, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000452812 : mov r9d, gs ; ret 0xa
0x000000000040a739 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000441f1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f2f0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004420ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b65d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044209b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000424399 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043debc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043f1bc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f19c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401e7a : mov rbp, rsp ; call rax
0x0000000000401de0 : mov rbp, rsp ; ja 0x401ded ; pop rbp ; ret
0x000000000043f1b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043f198 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040a2e1 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x000000000041c5e0 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000043f2f4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401e2f : mov rsi, rax ; mov edi, 0x65e328 ; jmp rdx
0x0000000000402724 : mov rsp, rbp ; pop rbp ; ret
0x0000000000441cb1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042c38a : movabs al, byte ptr [0xbc45c7144889cd95] ; ret
0x0000000000459161 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000433228 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000414dd9 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000436475 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004193b2 : movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x00000000004179b8 : movsd dword ptr [rdi], dword ptr [rsi] ; insd dword ptr [rdi], dx ; jmp rsi
0x0000000000447723 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000446575 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044675f : movzx eax, al ; pop rbp ; ret
0x000000000042810a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408a44 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b6c8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000422d77 : neg dword ptr [rsi + 0x36] ; cmp dword ptr [rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x000000000042704c : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x792d9c45], cl ; ret
0x00000000004530e8 : nop ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f715 : nop ; ret
0x000000000043db22 : nop ; ret 0x148
0x000000000043db36 : nop ; ret 0x2948
0x00000000004598d8 : nop dword ptr [rax + rax] ; ret
0x000000000044d2c8 : or ah, byte ptr [rcx] ; ret
0x000000000045bbb5 : or al, 0 ; add byte ptr [rbp - 2], ah ; jmp rsp
0x0000000000427016 : or al, 0 ; add cl, ch ; ret 1
0x0000000000456f90 : or al, 0x25 ; ret
0x0000000000437eaa : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437f84 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000417a2d : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x0000000000459825 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000042da20 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045c7d5 : or byte ptr [rax], al ; add byte ptr [rax], bh ; sbb al, -2 ; call rdx
0x000000000043f5c8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042343d : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045cb08 : or byte ptr [rdx - 2], cl ; call qword ptr [rdx]
0x0000000000459824 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000438f96 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042b914 : or dword ptr [rax - 0x77], ecx ; ret 0x3e8
0x000000000042e124 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045c8bd : or dword ptr [rax], eax ; add al, ah ; and bh, dh ; jmp qword ptr [rbx]
0x00000000004230fa : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x000000000044d220 : or dword ptr [rcx], esp ; ret
0x000000000045588a : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x000000000041c4cf : or eax, 0xe94c37a8 ; ret
0x000000000041d61c : or ecx, dword ptr [rax + 1] ; ret 0x8b48
0x000000000042dccb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045bdf1 : or edi, edi ; call rsp
0x000000000045bdf0 : or edi, r15d ; call rsp
0x000000000045c119 : out -6, eax ; call qword ptr [rcx]
0x000000000045ba41 : out -6, eax ; jmp rsp
0x000000000043988b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044675c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000446a8f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043ea42 : out dx, eax ; mov al, -0x47 ; ret
0x000000000044b8b9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043a975 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000042f5c6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043a9c0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000440e51 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044b8bc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042c28d : outsd dx, dword ptr [rsi] ; sal dword ptr [rcx + 0x7a], -0x47 ; ret
0x0000000000441cac : pop ax ; jb 0x441ce1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004233a1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004598cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000425804 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004233a3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004598ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406321 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004598d0 : pop r14 ; pop r15 ; ret
0x000000000042e6c9 : pop r14 ; pop rbp ; ret
0x0000000000406323 : pop r15 ; pop rbp ; ret
0x00000000004598d2 : pop r15 ; ret
0x000000000045c4e8 : pop rax ; adc edi, ebp ; call qword ptr [rdx]
0x0000000000441cad : pop rax ; jb 0x441ce0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000443732 : pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000401e52 : pop rbp ; mov byte ptr [rip + 0x25c53e], 1 ; ret
0x0000000000401df1 : pop rbp ; mov edi, 0x65e328 ; jmp rax
0x0000000000401e2e : pop rbp ; mov rsi, rax ; mov edi, 0x65e328 ; jmp rdx
0x00000000004598cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004233a4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004598cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000437732 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000433a05 : pop rbp ; pop rcx ; ret 0x8589
0x000000000043774e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401de5 : pop rbp ; ret
0x0000000000425803 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406320 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e6c8 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042b72c : pop rbx ; pop rbp ; ret
0x000000000043f5d0 : pop rbx ; ret
0x000000000044e0f2 : pop rcx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000437733 : pop rcx ; ret 0x1b2
0x0000000000431e06 : pop rcx ; ret 0x8589
0x000000000043774f : pop rcx ; ret 0x8b48
0x0000000000439a80 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000406324 : pop rdi ; pop rbp ; ret
0x00000000004598d3 : pop rdi ; ret
0x000000000042394b : pop rdx ; add dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x000000000044c1eb : pop rsi ; adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000422d78 : pop rsi ; cmp dword ptr ss:[rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x0000000000406322 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004598d1 : pop rsi ; pop r15 ; ret
0x000000000042e6ca : pop rsi ; pop rbp ; ret
0x0000000000423440 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004233a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004598cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000425805 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431e05 : pop rsp ; pop rcx ; ret 0x8589
0x000000000040dd04 : pop rsp ; ret
0x0000000000428d14 : popfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000414d3e : popfq ; lodsb al, byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000414dd8 : popfq ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x00000000004475a5 : popfq ; ret 0xd284
0x0000000000437730 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043991a : push -0x75425eeb ; push rbp ; ret
0x0000000000436478 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000045ba01 : push -6 ; jmp rsp
0x0000000000428d0f : push 0x2dffffff ; popfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000428cbb : push 0x2dffffff ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000422e73 : push 0x948a459 ; ret
0x000000000045bb33 : push qword ptr [rdx + rcx + 0x18840000] ; std ; call rsp
0x000000000041d62e : push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x0000000000443731 : push rax ; pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000402355 : push rax ; pop rbp ; ret
0x000000000041c5e2 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000043f2f6 : push rbp ; clc ; pop rbp ; ret
0x0000000000401e74 : push rbp ; mov edi, 0x65de20 ; mov rbp, rsp ; call rax
0x000000000043991f : push rbp ; ret
0x00000000004398b6 : push rbp ; ret 0xd284
0x00000000004512d0 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000044c2e4 : push rbp ; sti ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000437eaf : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437f89 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040392f : push rcx ; cdq ; in eax, dx ; ret 0x8589
0x000000000044b8bb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000443a72 : push rdi ; ret
0x0000000000405b88 : push rdx ; cdq ; in eax, dx ; ret 0x558a
0x0000000000403f4f : push rdx ; cdq ; in eax, dx ; ret 0x8589
0x0000000000405ae4 : push rdx ; cdq ; in eax, dx ; ret 0x8b48
0x0000000000405cd6 : push rdx ; cdq ; in eax, dx ; ret 0x99e9
0x0000000000422be5 : push rdx ; ret
0x0000000000405f88 : push rsi ; adc bh, bh ; ret 0x8b44
0x000000000045bd70 : push rsp ; mov bh, -2 ; call rsp
0x0000000000428cc0 : pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004226fe : pushfq ; ret
0x000000000041bac9 : pushfq ; ret 0x8b48
0x000000000040bac7 : pushfq ; ret 0xd284
0x0000000000401861 : ret
0x000000000040a6e1 : ret 0
0x0000000000453c37 : ret 0x11
0x000000000042a22a : ret 0x1425
0x000000000041b102 : ret 0x148
0x000000000042385c : ret 0x14c
0x0000000000406047 : ret 0x1589
0x000000000044dbb0 : ret 0x16
0x0000000000422253 : ret 0x17e8
0x00000000004048df : ret 0x18
0x0000000000405a62 : ret 0x18e8
0x00000000004115ff : ret 0x1912
0x000000000043aa84 : ret 0x1a
0x000000000042fcfd : ret 0x1add
0x0000000000437735 : ret 0x1b2
0x000000000042570e : ret 0x2145
0x0000000000421910 : ret 0x214d
0x0000000000425f89 : ret 0x22e6
0x000000000043064a : ret 0x23da
0x0000000000401c22 : ret 0x25c5
0x0000000000401a22 : ret 0x25c6
0x00000000004213e3 : ret 0x26
0x000000000043d348 : ret 0x279e
0x000000000041584f : ret 0x2948
0x0000000000422cd8 : ret 0x294d
0x0000000000439a84 : ret 0x2a
0x0000000000437eb2 : ret 0x2d50
0x0000000000420ea1 : ret 0x2eb9
0x000000000044b41e : ret 0x3040
0x000000000042576a : ret 0x3145
0x0000000000422fb3 : ret 0x3149
0x00000000004115ab : ret 0x316
0x000000000042b363 : ret 0x3368
0x000000000041d105 : ret 0x3479
0x000000000040c81f : ret 0x349a
0x0000000000450e8e : ret 0x34be
0x0000000000408bda : ret 0x35f
0x0000000000405d8b : ret 0x36dd
0x0000000000438984 : ret 0x3b
0x0000000000421833 : ret 0x3d3b
0x00000000004359e5 : ret 0x3e
0x000000000042b917 : ret 0x3e8
0x0000000000406831 : ret 0x41bf
0x0000000000456b4f : ret 0x4343
0x000000000040843f : ret 0x4589
0x0000000000406b2f : ret 0x462d
0x0000000000438e21 : ret 0x4802
0x0000000000425030 : ret 0x480c
0x000000000041b0f1 : ret 0x480f
0x00000000004276b8 : ret 0x4810
0x000000000044b8be : ret 0x4815
0x0000000000412b32 : ret 0x4837
0x000000000043a976 : ret 0x4861
0x000000000041d58f : ret 0x4864
0x00000000004213a2 : ret 0x489a
0x0000000000429082 : ret 0x48c0
0x000000000042aa63 : ret 0x48e0
0x0000000000416e5a : ret 0x48e4
0x000000000040258b : ret 0x48f0
0x000000000041d632 : ret 0x48fc
0x000000000042c5ab : ret 0x4ae9
0x0000000000433231 : ret 0x4b
0x000000000043e847 : ret 0x4cc0
0x000000000043b888 : ret 0x4cf0
0x000000000042b1fb : ret 0x4cfc
0x000000000041ad50 : ret 0x4e1c
0x0000000000440bcc : ret 0x4f0b
0x000000000040f15b : ret 0x5078
0x000000000042bbe2 : ret 0x51e0
0x0000000000413063 : ret 0x54
0x000000000041b771 : ret 0x5589
0x0000000000405b8b : ret 0x558a
0x000000000043813a : ret 0x5966
0x0000000000402041 : ret 0x59a4
0x0000000000424220 : ret 0x5ab9
0x000000000043f827 : ret 0x5bc6
0x00000000004481df : ret 0x61
0x000000000042b27b : ret 0x67b9
0x000000000040f903 : ret 0x6a3f
0x000000000042f396 : ret 0x6a8a
0x000000000041d58c : ret 0x6b48
0x000000000044f97a : ret 0x6f35
0x0000000000421333 : ret 0x70e9
0x000000000042142f : ret 0x76c
0x000000000042f04e : ret 0x77a8
0x00000000004301b1 : ret 0x7a8a
0x0000000000436e2b : ret 0x7b7f
0x000000000040c6ec : ret 0x7f1a
0x000000000043d7da : ret 0x8041
0x000000000041b0e5 : ret 0x810f
0x0000000000425753 : ret 0x8141
0x000000000041d8fa : ret 0x8148
0x00000000004219a4 : ret 0x8149
0x0000000000438d44 : ret 0x822d
0x000000000041af8b : ret 0x83d0
0x0000000000405c44 : ret 0x8445
0x00000000004223c3 : ret 0x8465
0x0000000000403932 : ret 0x8589
0x00000000004056ef : ret 0x858a
0x00000000004573fe : ret 0x86f8
0x000000000042015c : ret 0x893b
0x000000000042fdc3 : ret 0x8940
0x00000000004223e4 : ret 0x8941
0x0000000000405891 : ret 0x8948
0x0000000000449edf : ret 0x894a
0x0000000000422ccf : ret 0x894c
0x000000000042f5c7 : ret 0x8961
0x000000000040ce25 : ret 0x8969
0x000000000040ca89 : ret 0x8979
0x000000000041e914 : ret 0x899a
0x000000000042a0dc : ret 0x899e
0x000000000040ea25 : ret 0x89a1
0x000000000040fa55 : ret 0x89c9
0x00000000004447e2 : ret 0x89cd
0x000000000044b4d8 : ret 0x8a44
0x000000000044b3d5 : ret 0x8a4a
0x0000000000405f8b : ret 0x8b44
0x0000000000405ae7 : ret 0x8b48
0x0000000000405fc8 : ret 0x8b4c
0x0000000000413bcb : ret 0x8b79
0x0000000000413bf3 : ret 0x8bc9
0x000000000042c452 : ret 0x9282
0x000000000041b696 : ret 0x9336
0x00000000004594f2 : ret 0x941
0x00000000004256ef : ret 0x944
0x0000000000423035 : ret 0x949
0x0000000000416ff5 : ret 0x9589
0x00000000004059e1 : ret 0x99e8
0x0000000000405cd9 : ret 0x99e9
0x000000000041e4b2 : ret 0x9af9
0x0000000000452815 : ret 0xa
0x000000000044bb18 : ret 0xa2e8
0x0000000000437f8c : ret 0xa30b
0x000000000042c0fb : ret 0xa4b9
0x000000000045618f : ret 0xac60
0x000000000041a885 : ret 0xb
0x00000000004061bd : ret 0xb0
0x000000000044567c : ret 0xb041
0x0000000000439890 : ret 0xb740
0x00000000004519f6 : ret 0xb7eb
0x00000000004053cc : ret 0xb841
0x0000000000441ca7 : ret 0xb848
0x0000000000437ac0 : ret 0xb940
0x000000000044b362 : ret 0xb94a
0x0000000000415d7f : ret 0xb969
0x00000000004580f0 : ret 0xb99a
0x000000000042b6fe : ret 0xb99e
0x000000000041422e : ret 0xb9a1
0x00000000004452b5 : ret 0xb9cd
0x0000000000439f0c : ret 0xbf48
0x0000000000401e15 : ret 0xc148
0x0000000000448422 : ret 0xc493
0x0000000000405d93 : ret 0xc923
0x0000000000422b8e : ret 0xca00
0x0000000000446719 : ret 0xca21
0x000000000041c3a1 : ret 0xca29
0x0000000000409860 : ret 0xcae8
0x00000000004481e5 : ret 0xccb2
0x000000000040fb34 : ret 0xccfd
0x0000000000451d2d : ret 0xd
0x000000000040555c : ret 0xd284
0x000000000041930a : ret 0xd374
0x0000000000449b25 : ret 0xd618
0x00000000004063c6 : ret 0xd709
0x000000000041b6d8 : ret 0xd9af
0x00000000004203de : ret 0xdf31
0x0000000000423446 : ret 0xe280
0x0000000000439762 : ret 0xe940
0x000000000043a9c1 : ret 0xe961
0x0000000000418092 : ret 0xe969
0x00000000004213e0 : ret 0xe99a
0x0000000000446143 : ret 0xe9cd
0x0000000000455274 : ret 0xe9d2
0x00000000004307ed : ret 0xea51
0x00000000004481d7 : ret 0xea81
0x000000000043c57c : ret 0xee8
0x000000000044535f : ret 0xf040
0x000000000042dcb5 : ret 0xf281
0x00000000004385c7 : ret 0xf41
0x000000000043a515 : ret 0xf7f3
0x0000000000455dba : ret 0xfabb
0x000000000043d6fa : ret 0xfc41
0x0000000000438c9e : ret 0xfc75
0x000000000045273b : ret 0xff70
0x000000000043a50f : ret 0xffa5
0x0000000000438c98 : ret 0xffc4
0x0000000000412e35 : ret 0xffc8
0x0000000000437eb8 : ret 0xffd5
0x0000000000437f92 : ret 0xffd8
0x0000000000438d4a : ret 0xffd9
0x0000000000438134 : ret 0xffe0
0x0000000000436e25 : ret 0xfffa
0x0000000000412e12 : ret 0xfffe
0x000000000041b997 : ret 0xffff
0x000000000040915f : ret 1
0x0000000000401f42 : ret 2
0x0000000000424d97 : ret 3
0x0000000000409c15 : ret 4
0x0000000000426318 : ret 6
0x000000000043bc84 : ret 8
0x0000000000416f5b : retf 0x15 ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000405a24 : retf 0x60e3 ; xor eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000045c039 : retf ; cli ; call qword ptr [rax]
0x000000000042cc95 : rol bh, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000044b89d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000044e1f6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044249c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d20c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c0c7 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044b89c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004255e4 : rol dword ptr [rbp + 9], 1 ; ret
0x000000000042cc94 : rol r15b, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000042c54e : ror byte ptr [r11 - 0x1376b800], 0x5d ; ret
0x000000000040a737 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041584b : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000441ca4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401e1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401e2b ; pop rbp ; ret
0x000000000040a738 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000446577 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000041584c : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000414e72 : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000004512d1 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x0000000000422622 : ror byte ptr [rbp + 9], 1 ; ret
0x000000000042c54f : ror byte ptr [rbx - 0x1376b800], 0x5d ; ret
0x0000000000422cd5 : ror byte ptr [rcx + 1], 1 ; ret 0x294d
0x0000000000422dbb : ror byte ptr [rcx + 9], 1 ; ret
0x000000000042dcca : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000445678 : ror byte ptr [rdi], -0x6b ; ret 0xb041
0x0000000000408a46 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044b6ce : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000042cc45 : ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x000000000043e700 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000045baf9 : sahf ; cld ; call rsp
0x0000000000416d84 : sahf ; ret 0xd284
0x000000000042c28e : sal dword ptr [rcx + 0x7a], -0x47 ; ret
0x0000000000426c14 : salc ; adc eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000401e1e : sar eax, 1 ; jne 0x401e29 ; pop rbp ; ret
0x0000000000439a81 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401e1d : sar rax, 1 ; jne 0x401e2a ; pop rbp ; ret
0x000000000042c7f0 : sbb al, -0x1a ; ret
0x000000000041270f : sbb al, -0x25 ; ret 0x8979
0x0000000000413bc9 : sbb al, -0x25 ; ret 0x8b79
0x000000000045c7d9 : sbb al, -2 ; call rdx
0x000000000043ea40 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000045bb39 : sbb ch, bh ; call rsp
0x0000000000439981 : sbb cl, ch ; ret
0x000000000045c6d9 : sbb dh, bh ; call rdi
0x00000000004414f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419ef5 : sbb dword ptr [rdi], -0x3f ; ret
0x0000000000417954 : sbb eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ca87 : sbb ebx, ebx ; ret 0x8979
0x000000000043da90 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000427b43 : scasd eax, dword ptr [rdi] ; add eax, 0xb9b80000 ; ret 0x22e6
0x0000000000456f8a : scasd eax, dword ptr [rdi] ; mov ecx, 0x8d480045 ; or al, 0x25 ; ret
0x0000000000438982 : shr cl, cl ; ret 0x3b
0x000000000041ee8a : shr ecx, cl ; ret
0x000000000042747e : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000417a2c : stc ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x000000000042343f : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004367bd : stc ; ret 0x77a8
0x000000000045c4ea : std ; call qword ptr [rdx]
0x000000000045bb3a : std ; call rsp
0x0000000000423360 : std ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x0000000000423895 : std ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x000000000045bb32 : std ; push qword ptr [rdx + rcx + 0x18840000] ; std ; call rsp
0x000000000043d347 : std ; ret 0x279e
0x000000000044c2e5 : sti ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000446338 : sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x000000000045ba82 : sti ; jmp rsp
0x000000000044bfc5 : stosd dword ptr [rdi], eax ; ret
0x000000000040a99e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045bbf9 : sub bh, dh ; jmp rsp
0x0000000000456296 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a888 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437eb5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041ceea : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x0000000000405ba1 : sub byte ptr [rsi - 0x66ad46f1], cl ; in eax, dx ; ret 0x8b48
0x000000000045c921 : sub dh, bh ; call qword ptr [rdx]
0x0000000000437eab : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437f85 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000438d45 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041b26a : sub eax, 0xc7000013 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000441caf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045ca01 : sub esi, edi ; jmp rsi
0x0000000000459959 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000459958 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000427b41 : test al, -0x17 ; scasd eax, dword ptr [rdi] ; add eax, 0xb9b80000 ; ret 0x22e6
0x000000000045c118 : test al, -0x19 ; cli ; call qword ptr [rcx]
0x0000000000437eb0 : test al, -0x7f ; ret 0x2d50
0x0000000000437f8a : test al, -0x7f ; ret 0xa30b
0x000000000044b173 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406441 : test al, 0x21 ; ret 0xd709
0x0000000000450e8c : test al, 0x2d ; ret 0x34be
0x000000000043e11e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000043a6e6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000440d48 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000456cd1 : test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x00000000004598da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045bb38 : test byte ptr [rax], bl ; std ; call rsp
0x000000000042858d : test byte ptr [rax], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044fd86 : test byte ptr [rbp - 0x16fffffa], bh ; ret 1
0x000000000042bf26 : test byte ptr [rbp - 0x16fffffa], bl ; ret 1
0x000000000042ed2c : test byte ptr [rcx], ch ; ret 0
0x0000000000427014 : test byte ptr [rdi - 0x16fffff4], bh ; ret 1
0x0000000000409ab6 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004568d0 : test byte ptr [rdx - 0x16fffffa], bl ; ret
0x0000000000454244 : test byte ptr [rip - 0x16fffffc], al ; ret 1
0x0000000000426c13 : test dl, dh ; adc eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004030f5 : test dword ptr [rax + 0x2dfffffe], esp ; jmp rsp
0x0000000000403929 : test dword ptr [rax + 0x2dfffffe], esp ; push rcx ; cdq ; in eax, dx ; ret 0x8589
0x0000000000403f49 : test dword ptr [rax + 0x2dfffffe], esp ; push rdx ; cdq ; in eax, dx ; ret 0x8589
0x0000000000402ad5 : test dword ptr [rax + 0x2dfffffe], esp ; ret
0x000000000042ed26 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000423950 : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x0000000000423761 : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004230fe : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000422972 : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042132b : test dword ptr [rbx + rdi*8 - 1], ebx ; call rdi
0x0000000000423752 : test dword ptr [rbx + rdi*8 - 1], ebx ; call rsi
0x0000000000423363 : test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x00000000004215ab : test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000042395f : test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000423898 : test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x0000000000459827 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004597e7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000459762 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000042b7cb : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x000000000040271f : test dword ptr [rdi + rdi*8 - 1], ebp ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041c323 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000041c1e5 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rbx
0x000000000041c22e : test dword ptr [rdi + rdi*8 - 1], ebx ; inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x000000000041c583 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000041b017 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x000000000041b26f : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x000000000044633b : test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x0000000000440e56 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043dd3a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000043975b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043a9ba : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000044f1a9 : test dword ptr [rsi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000044e0a5 : test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x000000000044f188 : test dword ptr [rsi + rdi*8 - 1], ebx ; jmp rsi
0x000000000043647a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000412fd9 : test dword ptr [rsp + rsi*8 - 1], edx ; call qword ptr [rdi]
0x00000000004184a4 : test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000416f48 : test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000412f96 : test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x000000000041808b : test dword ptr [rsp + rsi*8 - 1], edx ; jmp rdx
0x000000000041793c : test dword ptr [rsp + rsi*8 - 1], edx ; jmp rsp
0x000000000041ceeb : test eax, 0x1000000 ; pop rbp ; ret
0x000000000044c2e3 : test eax, 0x48fffb55 ; mov esp, ebp ; pop rbp ; ret
0x0000000000422be1 : test eax, 0x529a77a3 ; ret
0x000000000043a96f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000405ba3 : ud2b ; push rdx ; cdq ; in eax, dx ; ret 0x8b48
0x00000000004539d3 : unpckhps xmm6, xmmword ptr [rsi] ; ret
0x000000000043897f : wait ; jge 0x438961 ; shr cl, cl ; ret 0x3b
0x0000000000433a3d : wait ; jo 0x433a4b ; ret
0x0000000000436f8c : wait ; jo 0x436f9a ; ret
0x0000000000422be0 : wait ; test eax, 0x529a77a3 ; ret
0x000000000044b8b8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004151ff : xchg eax, ebp ; cwde ; in eax, -1 ; dec dword ptr [rax + 1] ; ret 0x8b48
0x0000000000422877 : xchg eax, ebp ; ret
0x00000000004291cc : xchg eax, ebp ; ret 0x8445
0x000000000044567a : xchg eax, ebp ; ret 0xb041
0x0000000000405aa8 : xchg eax, ebp ; ret 0xd284
0x00000000004557fe : xchg eax, ebp ; ret 0xe280
0x000000000042f5c5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000435ec5 : xchg eax, ebx ; ret
0x00000000004360f5 : xchg eax, ecx ; ret
0x0000000000451bd1 : xchg eax, edi ; jno 0x451b6f ; ret
0x0000000000452bc5 : xchg eax, edi ; jno 0x452b63 ; ret
0x000000000044ae39 : xchg eax, edi ; ret 0xd284
0x000000000042f945 : xchg eax, edx ; ret
0x000000000043d7ef : xchg eax, edx ; ret 0x8445
0x0000000000440d4e : xchg eax, edx ; ret 0xd284
0x0000000000451b7d : xchg eax, esi ; jno 0x451b1b ; ret
0x000000000044f30b : xchg eax, esi ; ret 0x148
0x000000000044f31b : xchg eax, esi ; ret 0x2948
0x0000000000412a3b : xchg eax, esi ; ret 0x8445
0x0000000000413079 : xchg eax, esi ; ret 0xd284
0x000000000043ffea : xchg eax, esp ; jmp 0x440a58
0x000000000043ff27 : xchg eax, esp ; jmp 0x440a5a
0x000000000043a974 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000436245 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043a9bf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004456f0 : xchg eax, esp ; ret
0x000000000043d7d9 : xchg eax, esp ; ret 0x8041
0x0000000000405c43 : xchg eax, esp ; ret 0x8445
0x000000000043988e : xchg eax, esp ; ret 0xb740
0x000000000040555b : xchg eax, esp ; ret 0xd284
0x0000000000423445 : xchg eax, esp ; ret 0xe280
0x000000000043ffe9 : xchg eax, r12d ; jmp 0x440a59
0x00000000004530e7 : xchg eax, r8d ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041da13 : xlatb ; ret 0x4589
0x0000000000421fed : xor ah, 0xff ; dec dword ptr [rax + 1] ; ret 0x8948
0x000000000045c444 : xor al, 5 ; add byte ptr [rax], al ; fdiv st(5) ; cld ; jmp rax
0x0000000000439889 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000042c885 : xor bl, byte ptr [rsi] ; ret
0x000000000042e127 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042e128 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000445715 : xor byte ptr [rcx - 0x76], al ; push rbp ; ret
0x0000000000458270 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042c7ef : xor dword ptr [rsi], ebx ; ret
0x00000000004456a4 : xor eax, 0x558a2352 ; ret 0xd284
0x000000000043f10e : xor eax, 0x7ab99ca8 ; ret
0x0000000000405ae2 : xor eax, 0xed9952b9 ; ret 0x8b48
0x0000000000405a27 : xor eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
