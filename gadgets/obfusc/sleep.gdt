0x00000000004032fb : adc byte ptr [rbp - 0x10], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042363c : adc byte ptr [rbp - 1], ch ; call rax
0x000000000041fa83 : adc byte ptr [rbp - 8], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004110de : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000410a51 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041914b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411bdb : adc eax, 0x558abda1 ; ret
0x0000000000401c24 : adc eax, 0x8d480040 ; xor al, 0x25 ; ret 0x422d
0x00000000004151b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424153 : add ah, al ; or dword ptr [rax], eax ; add al, ch ; mov cl, -1 ; jmp rsp
0x0000000000423481 : add al, 0 ; add al, dl ; add bh, dh ; call rax
0x0000000000402963 : add al, 0 ; add byte ptr [rbx - 0x39d233bb], cl ; ret 0xa8c7
0x0000000000402bc0 : add al, 0 ; add cl, ch ; ret 1
0x000000000041ef8a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004238d7 : add al, bh ; cld ; std ; call qword ptr [rcx]
0x00000000004239d5 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x0000000000424157 : add al, ch ; mov cl, -1 ; jmp rsp
0x0000000000424217 : add al, cl ; ret 0xffff
0x0000000000423ce7 : add al, cl ; sub edi, edi ; call qword ptr [rbx]
0x0000000000423483 : add al, dl ; add bh, dh ; call rax
0x0000000000418e24 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000411a19 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000423485 : add bh, dh ; call rax
0x0000000000422b6f : add bl, dh ; ret
0x0000000000422842 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000422aa4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000423453 : add byte ptr [rax - 0x19], dh ; std ; call qword ptr [rax]
0x0000000000417e3f : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000401c26 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x422d
0x000000000041617b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040359b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042364b : add byte ptr [rax], ah ; jb 0x423652 ; call qword ptr [rax]
0x000000000042363a : add byte ptr [rax], al ; adc byte ptr [rbp - 1], ch ; call rax
0x0000000000418e22 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000422b6d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403599 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000422b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004006b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000404dca : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000422b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004006b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040352e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000414c22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004175e3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004029a5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x38d233bb], cl ; ret 0xa8c7
0x000000000041fdfc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000419f49 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000422843 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000422aa5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000418d90 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000421c11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041e7f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000420d28 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040328f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e505 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000418d1a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000402401 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004238d2 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, bh ; cld ; std ; call qword ptr [rcx]
0x00000000004239d2 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x00000000004151bb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414840 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041914d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004204a8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401183 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042364a : add byte ptr [rax], al ; and byte ptr [rdx - 1], dh ; call qword ptr [rax]
0x0000000000423442 : add byte ptr [rax], al ; and ch, 0xfd ; call rax
0x0000000000423ef6 : add byte ptr [rax], al ; call 0x13423e57
0x0000000000424156 : add byte ptr [rax], al ; call 0xffffffffe5424113
0x00000000004238d6 : add byte ptr [rax], al ; clc ; cld ; std ; call qword ptr [rcx]
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x0000000000423452 : add byte ptr [rax], al ; jo 0x423442 ; std ; call qword ptr [rax]
0x00000000004236fa : add byte ptr [rax], al ; loopne 0x423703 ; call rax
0x0000000000422888 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f518 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000041f931 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dcc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000040359a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424036 : add byte ptr [rax], al ; or byte ptr [rsi - 1], ah ; call qword ptr [rcx]
0x00000000004018fa : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414c23 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402749 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042360a : add byte ptr [rax], al ; push rax ; push -1 ; call qword ptr [rax]
0x0000000000422b6e : add byte ptr [rax], al ; ret
0x00000000004006b6 : add byte ptr [rax], al ; ret 0
0x0000000000423ed6 : add byte ptr [rax], al ; sub byte ptr [rbp - 1], dl ; call rdx
0x00000000004234c3 : add byte ptr [rax], al ; sub esi, edi ; call rax
0x0000000000423512 : add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], ch ; jmp qword ptr [rax]
0x0000000000423542 : add byte ptr [rax], al ; xor dil, dil ; jmp rax
0x00000000004239d7 : add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x0000000000423cc7 : add byte ptr [rax], cl ; sub bh, bh ; call rdx
0x0000000000423513 : add byte ptr [rax], dh ; sub al, -1 ; jmp qword ptr [rax]
0x0000000000423ce3 : add byte ptr [rbp + rax], dl ; add al, cl ; sub edi, edi ; call qword ptr [rbx]
0x0000000000403530 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000414c24 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040274a : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040271a : add byte ptr [rbx - 0x1b34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004175e5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041759a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004029a7 : add byte ptr [rbx - 0x38d233bb], cl ; ret 0xa8c7
0x0000000000402965 : add byte ptr [rbx - 0x39d233bb], cl ; ret 0xa8c7
0x000000000041fdfe : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041a32e : add byte ptr [rbx - 0x6dd227bb], cl ; push rcx ; push rdx ; ret
0x000000000041a2c0 : add byte ptr [rbx - 0x6ed227bb], cl ; push rcx ; push rdx ; ret
0x000000000041f932 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000422889 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000419f4b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004238d3 : add byte ptr [rcx + rax], al ; add al, bh ; cld ; std ; call qword ptr [rcx]
0x00000000004024ea : add byte ptr [rcx - 0x48], al ; ret
0x0000000000418e8e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004015a8 : add byte ptr [rcx], al ; ret
0x0000000000422845 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000422aa7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000418d92 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000421c13 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041e7f3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000420d2a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403291 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e507 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000418d1c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000402403 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004239d3 : add byte ptr [rdx + rax], al ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x0000000000411b4c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004177ed : add cl, ch ; ret
0x0000000000402bc2 : add cl, ch ; ret 1
0x00000000004238d5 : add dword ptr [rax], eax ; add al, bh ; cld ; std ; call qword ptr [rcx]
0x0000000000402748 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004238d4 : add dword ptr [rax], r8d ; add al, bh ; cld ; std ; call qword ptr [rcx]
0x0000000000421d92 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004030c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420dce : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015a4 : add eax, 0x223cd6 ; add ebx, esi ; ret
0x0000000000423451 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x19], dh ; std ; call qword ptr [rax]
0x000000000040156b : add eax, edx ; sar rax, 1 ; jne 0x40157c ; pop rbp ; ret
0x00000000004015a9 : add ebx, esi ; ret
0x0000000000414fa1 : add edx, ecx ; mov rdi, qword ptr [rdx + 8] ; call 0x4011b8
0x00000000004019db : add esp, 0x10 ; pop rbp ; ret
0x0000000000418e8c : add esp, 0x100 ; pop rbp ; ret
0x0000000000418ffc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402745 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000414843 : add esp, 0x20 ; pop rbp ; ret
0x0000000000419150 : add esp, 0x40 ; pop rbp ; ret
0x000000000041f189 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401b82 : add esp, 0x50 ; pop rbp ; ret
0x00000000004032ff : add esp, 0x60 ; pop rbp ; ret
0x0000000000416532 : add esp, 0x70 ; pop rbp ; ret
0x000000000040469f : add esp, 0x80 ; pop rbp ; ret
0x00000000004197cd : add esp, 0x90 ; pop rbp ; ret
0x00000000004018f6 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041511b : add esp, 0xb0 ; pop rbp ; ret
0x00000000004054ca : add esp, 0xd0 ; pop rbp ; ret
0x000000000041b53c : add esp, 0xe0 ; pop rbp ; ret
0x000000000041bfff : add esp, 0xf0 ; pop rbp ; ret
0x0000000000405ad3 : add esp, 8 ; pop rbp ; ret
0x0000000000401186 : add esp, 8 ; ret
0x00000000004239d4 : add r8b, byte ptr [rax] ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x000000000040156a : add rax, rdx ; sar rax, 1 ; jne 0x40157d ; pop rbp ; ret
0x0000000000414fa0 : add rdx, rcx ; mov rdi, qword ptr [rdx + 8] ; call 0x4011b9
0x00000000004019da : add rsp, 0x10 ; pop rbp ; ret
0x0000000000418e8b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000418ffb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402744 : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000414842 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041914f : add rsp, 0x40 ; pop rbp ; ret
0x000000000041f188 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401b81 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004032fe : add rsp, 0x60 ; pop rbp ; ret
0x0000000000416531 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040469e : add rsp, 0x80 ; pop rbp ; ret
0x00000000004197cc : add rsp, 0x90 ; pop rbp ; ret
0x00000000004018f5 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041511a : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004054c9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041b53b : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041bffe : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000405ad2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401185 : add rsp, 8 ; ret
0x000000000042284d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004030c0 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420dcd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015a7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042364c : and byte ptr [rdx - 1], dh ; call qword ptr [rax]
0x0000000000419c7b : and byte ptr [rsi + 0x58], ah ; jb 0x419cb2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000423444 : and ch, 0xfd ; call rax
0x0000000000410d81 : and eax, 0x75b4b9d3 ; ret
0x00000000004239d9 : and esi, edi ; call qword ptr [rdx]
0x0000000000423ef8 : call 0x13423e55
0x0000000000414fa7 : call 0x4011b2
0x000000000041a075 : call 0x41a139
0x00000000004024e6 : call 0x41a647
0x000000000042039d : call 0xffffffffaca2c5d1
0x000000000042039c : call 0xffffffffaca2c5d2
0x0000000000424158 : call 0xffffffffe5424111
0x0000000000414839 : call 0xffffffffe903d189
0x0000000000414838 : call 0xffffffffe903d18a
0x0000000000422b49 : call qword ptr [r12 + rbx*8]
0x0000000000404dd2 : call qword ptr [rax]
0x0000000000415ffe : call qword ptr [rbx]
0x000000000041f22c : call qword ptr [rcx]
0x0000000000413cc4 : call qword ptr [rdi]
0x000000000040fcab : call qword ptr [rdx]
0x0000000000422b4a : call qword ptr [rsp + rbx*8]
0x00000000004015cd : call rax
0x0000000000411f2b : call rcx
0x0000000000413904 : call rdi
0x0000000000413135 : call rdx
0x000000000041f760 : call rsi
0x00000000004034db : call rsp
0x000000000041f187 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000403495 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004193d7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041af89 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000041c584 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004238d8 : clc ; cld ; std ; call qword ptr [rcx]
0x000000000040156f : clc ; jne 0x401578 ; pop rbp ; ret
0x000000000041617f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f33b : clc ; pop rbp ; ret
0x000000000040730d : clc ; ret 0x77a8
0x000000000041a604 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004209de : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041bffd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040355f : cld ; jmp 0x4035cc
0x000000000040355e : cld ; jmp 0x4035cd
0x000000000041f935 : cld ; mov rsp, rbp ; pop rbp ; ret
0x00000000004238d9 : cld ; std ; call qword ptr [rcx]
0x0000000000419c80 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042284c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000418b9b : cmc ; ret 0x4f0b
0x00000000004024e4 : cmp al, -0x39 ; call 0x41a649
0x00000000004015a6 : cmp al, 0x22 ; add byte ptr [rcx], al ; ret
0x0000000000417e42 : cmp al, 0x25 ; ret
0x0000000000418d31 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000040152d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401540 ; pop rbp ; ret
0x0000000000401181 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411bd7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004110db : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000410a4e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000411253 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000419dad : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041ece6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402720 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418b96 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000406fea : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041eb13 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041e769 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004052e9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402747 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000402f9f : fidivr word ptr [rcx - 0x38465966] ; ret 0xa8c7
0x0000000000420e08 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041fae7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041fae8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000422b4c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042004c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000405ad1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401540 : hlt ; pop rbp ; mov edi, 0x625238 ; jmp rax
0x0000000000419dab : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041b4fa : in al, -0x17 ; ret
0x000000000041b941 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041b53a : in al, dx ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042045c : in al, dx ; jmp 0x4204d9
0x000000000042045b : in al, dx ; jmp 0x4204da
0x00000000004030c7 : in al, dx ; pop rbp ; ret
0x0000000000423445 : in eax, -3 ; call rax
0x0000000000404d31 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000416ce7 : int 0x5b
0x000000000041f845 : iretd ; test al, -0x47 ; call rsi
0x0000000000401533 : ja 0x40153a ; pop rbp ; ret
0x0000000000419c7e : jb 0x419caf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042364d : jb 0x423650 ; call qword ptr [rax]
0x000000000040153f : je 0x40153d ; pop rbp ; mov edi, 0x625238 ; jmp rax
0x0000000000410176 : jge 0x4100fb ; ret 0xffd5
0x0000000000410c40 : jge 0x410c20 ; shr cl, cl ; ret 0x3b
0x000000000041a674 : jge 0x41a658 ; call rax
0x00000000004012fb : jmp 0x401197
0x0000000000403560 : jmp 0x4035cb
0x0000000000411390 : jmp 0x414810
0x000000000040f294 : jmp 0x414811
0x0000000000410661 : jmp 0x414812
0x0000000000417fbb : jmp 0x418a27
0x0000000000417ef8 : jmp 0x418a29
0x0000000000417e3b : jmp 0x418a2a
0x000000000041a023 : jmp 0x41a088
0x000000000041f026 : jmp 0x41f308
0x000000000042045d : jmp 0x4204d8
0x0000000000418b9a : jmp 0x4f4d4e96
0x0000000000414165 : jmp qword ptr [rax]
0x0000000000423b6b : jmp qword ptr [rbx]
0x0000000000405f62 : jmp qword ptr [rcx]
0x0000000000411e17 : jmp qword ptr [rdi]
0x0000000000418e2a : jmp qword ptr [rdx]
0x0000000000401547 : jmp rax
0x0000000000410768 : jmp rbx
0x000000000041119a : jmp rcx
0x00000000004107c2 : jmp rdi
0x0000000000401587 : jmp rdx
0x0000000000423df3 : jmp rsi
0x0000000000410a78 : jmp rsp
0x0000000000401570 : jne 0x401577 ; pop rbp ; ret
0x000000000040a08e : jo 0x40a09a ; ret
0x000000000040bcfe : jo 0x40bd0a ; ret
0x000000000040f24d : jo 0x40f259 ; ret
0x0000000000416534 : jo 0x416595 ; ret
0x0000000000423454 : jo 0x423440 ; std ; call qword ptr [rax]
0x0000000000414fa5 : jp 0x414fb3 ; call 0x4011b4
0x000000000042370d : jrcxz 0x423710 ; call qword ptr [rax]
0x0000000000410c3e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000411d3e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000403d66 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404ea3 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416829 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ea2 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f59e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004125a5 : loope 0x412573 ; jmp 0x414813
0x0000000000401c23 : loopne 0x401c42 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x422d
0x000000000040328d : loopne 0x403296 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406983 : loopne 0x4069d6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415f2d : loopne 0x415f93 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417314 : loopne 0x417367 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004196e3 : loopne 0x4196ec ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a06e : loopne 0x41a0be ; add esp, 0x60 ; pop rbp ; ret
0x000000000041a06d : loopne 0x41a0bf ; add esp, 0x60 ; pop rbp ; ret
0x000000000041b53e : loopne 0x41b545 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c588 : loopne 0x41c58f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420050 : loopne 0x420057 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004209e2 : loopne 0x4209e9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042288c : loopne 0x4228db ; mov esp, ebp ; pop rbp ; ret
0x000000000042288b : loopne 0x4228dc ; mov esp, ebp ; pop rbp ; ret
0x0000000000422adc : loopne 0x422b2b ; mov esp, ebp ; pop rbp ; ret
0x0000000000422adb : loopne 0x422b2c ; mov esp, ebp ; pop rbp ; ret
0x00000000004236fd : loopne 0x423700 ; call rax
0x00000000004236fc : loopne 0x423701 ; call rax
0x000000000041016d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410247 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401b80 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e1f5 : mov ah, 0x75 ; ret
0x0000000000416d03 : mov al, -0x47 ; ret
0x000000000041e7ef : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041511d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423638 : mov al, 0xb ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], ch ; call rax
0x00000000004236f8 : mov al, 0xe ; add byte ptr [rax], al ; loopne 0x423705 ; call rax
0x0000000000423440 : mov al, 3 ; add byte ptr [rax], al ; and ch, 0xfd ; call rax
0x00000000004210fd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420dca : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042102d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407b95 : mov bl, 0x75 ; ret
0x00000000004015a3 : mov byte ptr [rip + 0x223cd6], 1 ; ret
0x000000000040f9ef : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000424159 : mov cl, -1 ; jmp rsp
0x0000000000421d94 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004030c3 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420dd0 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042284a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000421ac1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000406109 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405cdf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042045a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4204db
0x0000000000401b7e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000417fb8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x418a2a
0x00000000004019d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004063e6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405f8d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000405809 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419eeb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f335 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041a0be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040436e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004202d5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040610c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041a06c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042288a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dcf : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000041a66f : mov eax, dword ptr [rbp - 0x38] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405f8f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041f51a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000405acf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041f933 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403493 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041617d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405f8e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004129a8 : mov ebp, 0xe19c53ba ; ret
0x0000000000402aa0 : mov ebp, dword ptr [rax] ; ret 0x89cc
0x00000000004015cb : mov ebp, esp ; call rax
0x0000000000401531 : mov ebp, esp ; ja 0x40153c ; pop rbp ; ret
0x0000000000402fa0 : mov ecx, 0xc7b9a69a ; ret 0xa8c7
0x0000000000405cdc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dc9 : mov edi, 0 ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x00000000004015c5 : mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x0000000000401542 : mov edi, 0x625238 ; jmp rax
0x0000000000401582 : mov edi, 0x625238 ; jmp rdx
0x000000000040f247 : mov edi, 0xb8000055 ; wait ; jo 0x40f25f ; ret
0x000000000041b561 : mov edi, 0xc362f176 ; ret 0xc4b7
0x000000000041a673 : mov edi, dword ptr [rbp - 0x20] ; call rax
0x0000000000414fa4 : mov edi, dword ptr [rdx + 8] ; call 0x4011b5
0x0000000000422b47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000422b46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041ef9e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040fa0b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041f339 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410882 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041ef87 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401580 : mov esi, eax ; mov edi, 0x625238 ; jmp rdx
0x00000000004030c6 : mov esp, ebp ; pop rbp ; ret
0x00000000004063e5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401b7f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405808 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419eea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f334 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041a0bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040436d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a06b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404dce : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000041a66e : mov rax, qword ptr [rbp - 0x38] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x0000000000403492 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041617c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004015ca : mov rbp, rsp ; call rax
0x0000000000401530 : mov rbp, rsp ; ja 0x40153d ; pop rbp ; ret
0x000000000041a672 : mov rdi, qword ptr [rbp - 0x20] ; call rax
0x0000000000414fa3 : mov rdi, qword ptr [rdx + 8] ; call 0x4011b6
0x000000000041f338 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040157f : mov rsi, rax ; mov edi, 0x625238 ; jmp rdx
0x00000000004030c5 : mov rsp, rbp ; pop rbp ; ret
0x0000000000419c81 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000402aeb : mov word ptr [rax], gs ; ret 0x89cc
0x0000000000402d90 : mov word ptr [rax], gs ; ret 0xb9cc
0x00000000004030f9 : mov word ptr [rax], gs ; ret 0xe9cc
0x0000000000404bc5 : movabs byte ptr [0x8348e2894853b517], al ; ret 0x48f0
0x000000000040b4e8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040e735 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041f843 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x000000000041fa81 : movsd xmm0, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004032fa : movups xmm0, xmmword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fa82 : movups xmm0, xmmword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421d93 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004030c2 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420dcf : movzx eax, al ; pop rbp ; ret
0x000000000041ed98 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004079d5 : nop ; ret
0x0000000000415de2 : nop ; ret 0x148
0x0000000000415df6 : nop ; ret 0x2948
0x0000000000422b68 : nop dword ptr [rax + rax] ; ret
0x000000000041016a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410244 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000424215 : or al, byte ptr [rax] ; add al, cl ; ret 0xffff
0x0000000000405ce0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000417598 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000424038 : or byte ptr [rsi - 1], ah ; call qword ptr [rcx]
0x0000000000411256 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004063e4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000424155 : or dword ptr [rax], eax ; add al, ch ; mov cl, -1 ; jmp rsp
0x0000000000417e3d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000423649 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; jb 0x423654 ; call qword ptr [rax]
0x0000000000405f8b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000423455 : out -3, eax ; call qword ptr [rax]
0x0000000000411b4b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000420dcc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004210ff : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416d02 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041ef89 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000412c35 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000407886 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000412c80 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000418e21 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041ef8c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000419c7c : pop ax ; jb 0x419cb1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000413ae9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422b5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415f2f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413aeb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422b5e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413aed : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422b60 : pop r14 ; pop r15 ; ret
0x0000000000404ea7 : pop r14 ; pop rbp ; ret
0x0000000000413aef : pop r15 ; pop rbp ; ret
0x0000000000422b62 : pop r15 ; ret
0x0000000000419c7d : pop rax ; jb 0x419cb0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004015a2 : pop rbp ; mov byte ptr [rip + 0x223cd6], 1 ; ret
0x0000000000401541 : pop rbp ; mov edi, 0x625238 ; jmp rax
0x000000000040157e : pop rbp ; mov rsi, rax ; mov edi, 0x625238 ; jmp rdx
0x0000000000422b5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413aec : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422b5f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f9f2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040bcc5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000040fa0e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401535 : pop rbp ; ret
0x0000000000415f2e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414c25 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ea6 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040274b : pop rbx ; pop rbp ; ret
0x00000000004175a0 : pop rbx ; ret
0x000000000040f9f3 : pop rcx ; ret 0x1b2
0x000000000040a0c6 : pop rcx ; ret 0x8589
0x000000000040fa0f : pop rcx ; ret 0x8b48
0x0000000000411d40 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000413af0 : pop rdi ; pop rbp ; ret
0x0000000000422b63 : pop rdi ; ret
0x0000000000413aee : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000422b61 : pop rsi ; pop r15 ; ret
0x0000000000404ea8 : pop rsi ; pop rbp ; ret
0x0000000000413aea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422b5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415f30 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a0c5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000421c15 : popfq ; ret 0xd284
0x000000000040f9f0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000411bda : push -0x75425eeb ; push rbp ; ret
0x000000000040e738 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042360d : push -1 ; call qword ptr [rax]
0x00000000004236f7 : push qword ptr [rax + 0x4000000e] ; loopne 0x423706 ; call rax
0x00000000004234bf : push qword ptr [rax + 5] ; sub esi, edi ; call rax
0x000000000042347f : push qword ptr [rax - 0x2ffffffc] ; add bh, dh ; call rax
0x000000000042343f : push qword ptr [rax - 0x7ffffffd] ; in eax, -3 ; call rax
0x000000000042344f : push rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x19], dh ; std ; call qword ptr [rax]
0x0000000000423647 : push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], ah ; jb 0x423656 ; call qword ptr [rax]
0x0000000000401b84 : push rax ; pop rbp ; ret
0x000000000042360c : push rax ; push -1 ; call qword ptr [rax]
0x000000000041f33a : push rbp ; clc ; pop rbp ; ret
0x00000000004015c4 : push rbp ; mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x0000000000411bdf : push rbp ; ret
0x0000000000411b76 : push rbp ; ret 0xd284
0x000000000041016f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410249 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041a2c6 : push rcx ; push rdx ; ret
0x000000000041ef8b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a2c7 : push rdx ; ret
0x000000000041e7f5 : pushfq ; ret 0xd284
0x0000000000401189 : ret
0x00000000004006b8 : ret 0
0x0000000000415de3 : ret 0x148
0x0000000000412d44 : ret 0x1a
0x0000000000407fbd : ret 0x1add
0x000000000040f9f5 : ret 0x1b2
0x0000000000401302 : ret 0x223d
0x000000000040890a : ret 0x23da
0x0000000000415608 : ret 0x279e
0x0000000000411259 : ret 0x2948
0x0000000000411d44 : ret 0x2a
0x0000000000410172 : ret 0x2d50
0x000000000041eaee : ret 0x3040
0x0000000000410c44 : ret 0x3b
0x000000000040dca5 : ret 0x3e
0x0000000000401c2b : ret 0x422d
0x0000000000401833 : ret 0x458a
0x00000000004110e1 : ret 0x4802
0x000000000041ef8e : ret 0x4815
0x00000000004047d2 : ret 0x485b
0x0000000000412c36 : ret 0x4861
0x0000000000404c3e : ret 0x48e0
0x0000000000402db7 : ret 0x48f0
0x000000000041c3d9 : ret 0x48f2
0x000000000040b4f1 : ret 0x4b
0x0000000000416b07 : ret 0x4cc0
0x0000000000413b48 : ret 0x4cf0
0x0000000000418b9c : ret 0x4f0b
0x0000000000405f3b : ret 0x5589
0x00000000004103fa : ret 0x5966
0x00000000004177f7 : ret 0x5bc6
0x000000000042284f : ret 0x61
0x0000000000407656 : ret 0x6a8a
0x000000000040730e : ret 0x77a8
0x0000000000408471 : ret 0x7a8a
0x000000000040f0eb : ret 0x7b7f
0x0000000000415a9a : ret 0x8041
0x0000000000415ce2 : ret 0x8141
0x000000000041ece9 : ret 0x8148
0x0000000000411004 : ret 0x822d
0x0000000000404d35 : ret 0x8445
0x000000000040a0ac : ret 0x8589
0x0000000000402461 : ret 0x858a
0x0000000000408083 : ret 0x8940
0x000000000040434b : ret 0x8948
0x000000000041d5af : ret 0x894a
0x0000000000407887 : ret 0x8961
0x0000000000402aa2 : ret 0x89cc
0x000000000041eba8 : ret 0x8a44
0x000000000041eaa5 : ret 0x8a4a
0x000000000040fa11 : ret 0x8b48
0x000000000041024c : ret 0xa30b
0x0000000000401fe0 : ret 0xa85
0x000000000040296b : ret 0xa8c7
0x000000000042039f : ret 0xac60
0x0000000000402723 : ret 0xb0
0x0000000000411b50 : ret 0xb740
0x0000000000419c77 : ret 0xb848
0x000000000040fd80 : ret 0xb940
0x000000000041ea32 : ret 0xb94a
0x0000000000402d92 : ret 0xb9cc
0x00000000004121cc : ret 0xbf48
0x0000000000401565 : ret 0xc148
0x0000000000422a92 : ret 0xc493
0x000000000041b567 : ret 0xc4b7
0x000000000041c4f2 : ret 0xca00
0x0000000000420d89 : ret 0xca21
0x0000000000422855 : ret 0xccb2
0x0000000000402406 : ret 0xd284
0x000000000041d1f5 : ret 0xd618
0x0000000000421d3b : ret 0xe280
0x000000000041f1e8 : ret 0xe2e8
0x0000000000411a22 : ret 0xe940
0x0000000000412c81 : ret 0xe961
0x00000000004030fb : ret 0xe9cc
0x0000000000408aad : ret 0xea51
0x0000000000422847 : ret 0xea81
0x000000000041483c : ret 0xee8
0x0000000000405f75 : ret 0xf281
0x000000000041aaec : ret 0xf40
0x0000000000410887 : ret 0xf41
0x00000000004127d5 : ret 0xf7f3
0x0000000000410f5e : ret 0xfc75
0x00000000004127cf : ret 0xffa5
0x0000000000410f58 : ret 0xffc4
0x0000000000410178 : ret 0xffd5
0x0000000000410252 : ret 0xffd8
0x000000000041100a : ret 0xffd9
0x00000000004103f4 : ret 0xffe0
0x000000000040f0e5 : ret 0xfffa
0x0000000000414fa9 : ret 0xfffe
0x0000000000424219 : ret 0xffff
0x0000000000402bc4 : ret 1
0x0000000000410df0 : ret 2
0x0000000000413f44 : ret 8
0x0000000000414fa2 : retf -0x74b8 ; jp 0x414fb6 ; call 0x4011b7
0x000000000041ef6d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041aefc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004054cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ef6c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000419c74 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040156c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40157b ; pop rbp ; ret
0x00000000004030c4 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000405f8a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041ed9e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041ac18 : ror dword ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004169c0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000420d2c : sahf ; ret 0xd284
0x00000000004015a5 : salc ; cmp al, 0x22 ; add byte ptr [rcx], al ; ret
0x000000000040156e : sar eax, 1 ; jne 0x401579 ; pop rbp ; ret
0x0000000000411d41 : sar ebp, -0x17 ; ret 0x2a
0x000000000040156d : sar rax, 1 ; jne 0x40157a ; pop rbp ; ret
0x0000000000416d00 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000411c41 : sbb cl, ch ; ret
0x00000000004194c3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415d50 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000041f844 : scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x000000000041b0dc : shl ebp, cl ; ret
0x0000000000410c42 : shr cl, cl ; ret 0x3b
0x000000000040ea7d : stc ; ret 0x77a8
0x0000000000423456 : std ; call qword ptr [rax]
0x00000000004238da : std ; call qword ptr [rcx]
0x0000000000423446 : std ; call rax
0x000000000042343e : std ; push qword ptr [rax - 0x7ffffffd] ; in eax, -3 ; call rax
0x000000000042344e : std ; push rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x19], dh ; std ; call qword ptr [rax]
0x0000000000415607 : std ; ret 0x279e
0x0000000000423515 : sub al, -1 ; jmp qword ptr [rax]
0x00000000004036ae : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423cc9 : sub bh, bh ; call rdx
0x00000000004204a6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403598 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410175 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000423ed8 : sub byte ptr [rbp - 1], dl ; call rdx
0x000000000041016b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410245 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411005 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000423ce9 : sub edi, edi ; call qword ptr [rbx]
0x0000000000419c7f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004234c5 : sub esi, edi ; call rax
0x0000000000422b9d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000422b9c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041f846 : test al, -0x47 ; call rsi
0x0000000000410170 : test al, -0x7f ; ret 0x2d50
0x000000000041024a : test al, -0x7f ; ret 0xa30b
0x000000000041e843 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004163de : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004129a6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000418d18 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000422b6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406fec : test byte ptr [rcx], ch ; ret 0
0x0000000000406fe6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000418e26 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000415ffa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000411a1b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000412c7a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040e73a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000412c2f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000410c3f : wait ; jge 0x410c21 ; shr cl, cl ; ret 0x3b
0x000000000040bcfd : wait ; jo 0x40bd0b ; ret
0x000000000040f24c : wait ; jo 0x40f25a ; ret
0x000000000041ef88 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000404d34 : xchg eax, ebp ; ret 0x8445
0x0000000000403293 : xchg eax, ebp ; ret 0xd284
0x000000000041aaeb : xchg eax, ebp ; ret 0xf40
0x0000000000407885 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040e185 : xchg eax, ebx ; ret
0x000000000040251d : xchg eax, ebx ; ret 0xd284
0x000000000041a2c5 : xchg eax, ecx ; push rcx ; push rdx ; ret
0x000000000040e3b5 : xchg eax, ecx ; ret
0x000000000041c330 : xchg eax, edi ; ret 0xd284
0x000000000041a333 : xchg eax, edx ; push rcx ; push rdx ; ret
0x0000000000407c05 : xchg eax, edx ; ret
0x0000000000415aaf : xchg eax, edx ; ret 0x8445
0x0000000000418d1e : xchg eax, edx ; ret 0xd284
0x0000000000417fba : xchg eax, esp ; jmp 0x418a28
0x0000000000417ef7 : xchg eax, esp ; jmp 0x418a2a
0x0000000000412c34 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040e505 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000412c7f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000415a99 : xchg eax, esp ; ret 0x8041
0x0000000000411b4e : xchg eax, esp ; ret 0xb740
0x0000000000402405 : xchg eax, esp ; ret 0xd284
0x0000000000417fb9 : xchg eax, r12d ; jmp 0x418a29
0x0000000000401c29 : xor al, 0x25 ; ret 0x422d
0x0000000000411b49 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000423555 : xor bh, bh ; jmp qword ptr [rax]
0x0000000000423db1 : xor bh, bh ; jmp qword ptr [rbx]
0x0000000000423545 : xor bh, bh ; jmp rax
0x00000000004063e7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004063e8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000423514 : xor byte ptr [rdi + rdi*8], ch ; jmp qword ptr [rax]
0x0000000000423544 : xor dil, dil ; jmp rax
