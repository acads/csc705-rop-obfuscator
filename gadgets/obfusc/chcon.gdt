0x0000000000463185 : adc al, 0 ; add byte ptr [rax], bl ; mov dr1, esi ; jmp rbx
0x0000000000457e3c : adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000459fa5 : adc al, 0x46 ; add al, ch ; ret
0x000000000040656e : adc al, byte ptr [r8] ; add byte ptr [rbx + 0x1c2db045], cl ; ret 0x9997
0x000000000040656f : adc al, byte ptr [rax] ; add byte ptr [rbx + 0x1c2db045], cl ; ret 0x9997
0x0000000000454063 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004066ff : adc byte ptr [rax], al ; add byte ptr [rbx - 0x17d24fbb], cl ; push rsp ; ret
0x00000000004617c5 : adc byte ptr [rax], al ; add byte ptr [rsp + rbx*8], bh ; sti ; jmp rsp
0x000000000042a99b : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041840e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000448ddd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000459c79 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x0000000000417d81 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000461805 : adc dword ptr [rax], eax ; add ah, ch ; fdivp st(3) ; jmp rsp
0x0000000000462e45 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x23], bh ; std ; jmp rbx
0x000000000042126b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000454031 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x0000000000418f0b : adc eax, 0x558abda1 ; ret
0x0000000000438cd7 : adc eax, 0x85c70000 ; call 0x18438ce7
0x000000000042f6e1 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x0000000000452183 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x000000000041c4e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000461de3 : add ah, al ; add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; cli ; jmp qword ptr [rsi]
0x0000000000462440 : add ah, al ; sti ; jmp qword ptr [rdi]
0x000000000046261b : add ah, bh ; or byte ptr [rax], al ; add byte ptr [rax], dh ; retf ; sti ; jmp qword ptr [rdi]
0x00000000004616bf : add ah, bh ; ret 0xfffb
0x0000000000461747 : add ah, bh ; sar bl, cl ; jmp rsp
0x0000000000461787 : add ah, bl ; xlatb ; sti ; jmp rsp
0x0000000000461807 : add ah, ch ; fdivp st(3) ; jmp rsp
0x0000000000461707 : add ah, ch ; retf ; sti ; jmp rsp
0x0000000000463a13 : add ah, dh ; sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000422ce6 : add al, -8 ; ret 0x898d
0x0000000000462195 : add al, 0 ; add al, bl ; mov bl, -5 ; call rdi
0x0000000000425b41 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000429dcf : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000044b490 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000404490 : add al, 0 ; add cl, ch ; ret 1
0x000000000045716a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000461ec7 : add al, bh ; xchg eax, edx ; cli ; call qword ptr [rcx]
0x0000000000462847 : add al, bl ; in al, dx ; sti ; call rdx
0x0000000000462197 : add al, bl ; mov bl, -5 ; call rdi
0x0000000000463a17 : add al, bl ; ret 0xffff
0x000000000040a590 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x49d253bb], cl ; ret
0x0000000000426f12 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000043c82d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000426f11 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000459fa7 : add al, ch ; ret
0x0000000000409eb8 : add al, ch ; ret 0xff7b
0x00000000004623df : add al, dh ; ret
0x0000000000459fa6 : add al, r13b ; ret
0x000000000044cde8 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x0000000000429326 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000043eceb : add bh, al ; in al, 0x3e ; ret
0x0000000000453b48 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000045c055 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004253c2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000425f3f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000425e1b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x0000000000425149 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000425dd7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000420f44 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041e76c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000044f64f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000418d49 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000452185 : add bh, al ; xchg eax, r12d ; int 6
0x000000000045ffaf : add bl, dh ; ret
0x00000000004292e7 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e963 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000045fc82 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000045fee4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042f999 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000462a67 : add byte ptr [rax + 0x3d], ch ; cld ; jmp qword ptr [rdi]
0x0000000000461de7 : add byte ptr [rax + 8], bh ; cli ; jmp qword ptr [rsi]
0x0000000000462e47 : add byte ptr [rax - 0x23], bh ; std ; jmp rbx
0x0000000000438244 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000462297 : add byte ptr [rax - 0x49], ch ; sti ; call rdx
0x0000000000453d2b : add byte ptr [rax - 0x75], cl ; call 0x4907c683
0x000000000041d4ab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040254a : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040500d : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043ece8 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x0000000000463182 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], bl ; mov dr1, esi ; jmp rbx
0x000000000046243e : add byte ptr [rax], al ; add ah, al ; sti ; jmp qword ptr [rdi]
0x0000000000463a11 : add byte ptr [rax], al ; add ah, dh ; sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000429324 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000453b46 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000045c053 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004253c0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000425f3d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000425e19 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x0000000000425dd5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000420f42 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041e76a : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000045ffad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042f997 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000461de5 : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; cli ; jmp qword ptr [rsi]
0x0000000000438242 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000453d29 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4907c685
0x000000000040b189 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040500b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000045ffab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045d260 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040aa35 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409b78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044e1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004003bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045d6e2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004065ba : add byte ptr [rax], al ; add byte ptr [rbx + 0x1d2db045], cl ; ret 0x9997
0x00000000004536cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000453869 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040b11e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043e996 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x000000000041bf52 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428e83 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044a802 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044a92e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x00000000004287da : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004297f3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x000000000043e4b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000043e964 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000406ace : add byte ptr [rax], al ; add byte ptr [rbx + 0x672db045], cl ; ret 0xe17f
0x0000000000429a64 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x000000000040674a : add byte ptr [rax], al ; add byte ptr [rbx - 0x16d24fbb], cl ; push rsp ; ret
0x000000000041f703 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004270d4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000426854 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x0000000000446608 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004465c6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044b94e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000040a400 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4ad253bb], cl ; ret
0x0000000000457c0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x000000000045aadc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000426bc0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x000000000043d699 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x0000000000454208 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000422069 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000424fe5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000424fa9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042fc26 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004596fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045fc83 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000045fee5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000420eb0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045f051 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000432c1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045e168 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042889a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405394 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045a6ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000425a25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000420e3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409b7a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046275e : add byte ptr [rax], al ; add ch, cl ; sti ; jmp rsi
0x000000000045d677 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041c4eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041bb70 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042126d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004267b9 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045a77c : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042ad9f : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000462e42 : add byte ptr [rax], al ; and al, 0x11 ; add byte ptr [rax], al ; js 0x462e30 ; std ; jmp rbx
0x0000000000462f42 : add byte ptr [rax], al ; and al, 0x12 ; add byte ptr [rax], al ; mov byte ptr [rsi - 2], al ; jmp qword ptr [rcx]
0x0000000000462842 : add byte ptr [rax], al ; and al, 0xb ; add byte ptr [rax], al ; fsubr st(4) ; sti ; call rdx
0x0000000000405424 : add byte ptr [rax], al ; call 0x401704
0x0000000000461ec6 : add byte ptr [rax], al ; clc ; xchg eax, edx ; cli ; call qword ptr [rcx]
0x000000000046261a : add byte ptr [rax], al ; cld ; or byte ptr [rax], al ; add byte ptr [rax], dh ; retf ; sti ; jmp qword ptr [rdi]
0x00000000004616be : add byte ptr [rax], al ; cld ; ret 0xfffb
0x0000000000461746 : add byte ptr [rax], al ; cld ; sar bl, cl ; jmp rsp
0x00000000004617c6 : add byte ptr [rax], al ; cmp al, -0x24 ; sti ; jmp rsp
0x000000000046275a : add byte ptr [rax], al ; cmp al, 0xa ; add byte ptr [rax], al ; add ch, cl ; sti ; jmp rsi
0x0000000000462866 : add byte ptr [rax], al ; cwde ; in eax, dx ; sti ; call qword ptr [rdx]
0x0000000000462fe6 : add byte ptr [rax], al ; fcom dword ptr [rsi - 2] ; call qword ptr [rdx]
0x0000000000461786 : add byte ptr [rax], al ; fcom st(0), st(7) ; sti ; jmp rsp
0x0000000000462846 : add byte ptr [rax], al ; fsubr st(4) ; sti ; call rdx
0x0000000000463a12 : add byte ptr [rax], al ; hlt ; sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000463002 : add byte ptr [rax], al ; in al, 0x12 ; add byte ptr [rax], al ; fcom dword ptr [rsi - 2] ; call qword ptr [rdx]
0x0000000000461806 : add byte ptr [rax], al ; in al, dx ; fdivp st(3) ; jmp rsp
0x0000000000461706 : add byte ptr [rax], al ; in al, dx ; retf ; sti ; jmp rsp
0x0000000000461ab6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x00000000004017c9 : add byte ptr [rax], al ; jmp 0x4016c9
0x000000000043e9b0 : add byte ptr [rax], al ; jmp 0x43ed22
0x000000000045a1cc : add byte ptr [rax], al ; jmp 0x45a281
0x000000000045d673 : add byte ptr [rax], al ; jmp 0x45d682
0x000000000045d7d5 : add byte ptr [rax], al ; jmp 0x45d7e4
0x000000000045da43 : add byte ptr [rax], al ; jmp 0x45da52
0x0000000000461de6 : add byte ptr [rax], al ; js 0x461df7 ; cli ; jmp qword ptr [rsi]
0x0000000000462e46 : add byte ptr [rax], al ; js 0x462e2c ; std ; jmp rbx
0x0000000000462f46 : add byte ptr [rax], al ; mov byte ptr [rsi - 2], al ; jmp qword ptr [rcx]
0x000000000045fcc8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a4d9 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446d95 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e7ea : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e85d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f3e9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041efc1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004623da : add byte ptr [rax], al ; mov esp, 0xf0000006 ; ret
0x000000000044be3f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402549 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000461ec2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, bh ; xchg eax, edx ; cli ; call qword ptr [rcx]
0x0000000000462a62 : add byte ptr [rax], al ; or eax, 0x3d680000 ; cld ; jmp qword ptr [rdi]
0x0000000000401f8d : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041bf53 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042778a : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058b9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000461b3e : add byte ptr [rax], al ; pop rsp ; xor bh, bh ; call rsp
0x00000000004003be : add byte ptr [rax], al ; ret
0x00000000004616ae : add byte ptr [rax], al ; ret 0xfffb
0x000000000046257e : add byte ptr [rax], al ; ror al, 1 ; sti ; jmp qword ptr [rax]
0x000000000046243a : add byte ptr [rax], al ; sbb al, 7 ; add byte ptr [rax], al ; add ah, al ; sti ; jmp qword ptr [rdi]
0x00000000004622b2 : add byte ptr [rax], al ; xchg eax, esp ; add eax, 0xb9280000 ; sti ; call qword ptr [rbx]
0x000000000046261e : add byte ptr [rax], al ; xor bl, cl ; sti ; jmp qword ptr [rdi]
0x0000000000463187 : add byte ptr [rax], bl ; mov dr1, esi ; jmp rbx
0x00000000004633c7 : add byte ptr [rax], ch ; or bh, bh ; call rax
0x000000000046261f : add byte ptr [rax], dh ; retf ; sti ; jmp qword ptr [rdi]
0x000000000045d6e4 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000041e82f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000000004622b3 : add byte ptr [rbp + rax - 0x46d80000], dl ; sti ; call qword ptr [rbx]
0x0000000000462293 : add byte ptr [rbp + rax], dh ; add byte ptr [rax - 0x49], ch ; sti ; call rdx
0x0000000000462a63 : add byte ptr [rbp + rcx], al ; add byte ptr [rax + 0x3d], ch ; cld ; jmp qword ptr [rdi]
0x0000000000429908 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x0000000000406571 : add byte ptr [rbx + 0x1c2db045], cl ; ret 0x9997
0x0000000000429cbe : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x00000000004065bc : add byte ptr [rbx + 0x1d2db045], cl ; ret 0x9997
0x00000000004536cd : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045386b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040b120 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043e488 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x000000000043e998 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x000000000041bf54 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042778b : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044a804 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044a930 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x00000000004264df : add byte ptr [rbx + 0x462dc045], cl ; jns 0x426496 ; ret
0x0000000000429921 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000429ca5 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x00000000004058ba : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004297f5 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x0000000000429dd1 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000043e4b4 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000043e966 : add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000406a85 : add byte ptr [rbx + 0x662db045], cl ; ret 0xe17f
0x0000000000406ad0 : add byte ptr [rbx + 0x672db045], cl ; ret 0xe17f
0x0000000000429a66 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000429b60 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x0000000000462843 : add byte ptr [rbx + rcx], ah ; add byte ptr [rax], al ; fsubr st(4) ; sti ; call rdx
0x000000000040674c : add byte ptr [rbx - 0x16d24fbb], cl ; push rsp ; ret
0x0000000000406701 : add byte ptr [rbx - 0x17d24fbb], cl ; push rsp ; ret
0x000000000041f705 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041f6ba : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004270d6 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000426856 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x000000000044660a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004465c8 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044b950 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000450b95 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044b492 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000040a592 : add byte ptr [rbx - 0x49d253bb], cl ; ret
0x000000000040a402 : add byte ptr [rbx - 0x4ad253bb], cl ; ret
0x00000000004509d3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000457c10 : add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x000000000045aade : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000426f14 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000426bc2 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000429029 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000043d69b : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x000000000045420a : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000428fe7 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000043d650 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000045a4da : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000446d96 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x000000000045fcc9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042206b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000406141 : add byte ptr [rbx - 0xdf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004061cc : add byte ptr [rbx - 0xe34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000424fe7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000424fab : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042fc29 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000459700 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000461ec3 : add byte ptr [rcx + rax - 0x6d080000], ah ; cli ; call qword ptr [rcx]
0x0000000000462e43 : add byte ptr [rcx + rdx], ah ; add byte ptr [rax], al ; js 0x462e2f ; std ; jmp rbx
0x0000000000454060 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x00000000004288d2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000439fd4 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x0000000000420fae : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000045fc85 : add byte ptr [rcx], al ; ret 0xea81
0x000000000045fee7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000420eb2 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004308fb : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046243b : add byte ptr [rdi + rax], bl ; add byte ptr [rax], al ; add ah, al ; sti ; jmp qword ptr [rdi]
0x000000000041f41a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045f053 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000432c21 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045e16a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042889c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405396 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045a6ec : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000425a27 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000420e3c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000409b7c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000461fa3 : add byte ptr [rdx + rax - 0x51780000], al ; cli ; call qword ptr [rdx]
0x000000000046275b : add byte ptr [rdx + rcx], bh ; add byte ptr [rax], al ; add ch, cl ; sti ; jmp rsi
0x0000000000462f43 : add byte ptr [rdx + rdx], ah ; add byte ptr [rax], al ; mov byte ptr [rsi - 2], al ; jmp qword ptr [rcx]
0x0000000000461b3f : add byte ptr [rdx + rsi - 1], bl ; call rsp
0x0000000000457965 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043b6bd : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x000000000044970d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000462193 : add byte ptr [rsp + rax], dh ; add al, bl ; mov bl, -5 ; call rdi
0x00000000004617c7 : add byte ptr [rsp + rbx*8], bh ; sti ; jmp rsp
0x0000000000463183 : add byte ptr [rsp + rdx], ah ; add byte ptr [rax], bl ; mov dr1, esi ; jmp rbx
0x0000000000457f7c : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000441ea2 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401c07 : add byte ptr es:[rcx], al ; ret
0x00000000004270d3 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000437588 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x0000000000462760 : add ch, cl ; sti ; jmp rsi
0x0000000000418e7c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000402791 : add cl, ch ; ret
0x0000000000404492 : add cl, ch ; ret 1
0x0000000000432b59 : add cl, ch ; ret 2
0x0000000000408687 : add dh, al ; add edi, eax ; mov r12b, 0x1d ; ret 0x9997
0x0000000000453de1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000447fce : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000461ec5 : add dword ptr [rax], eax ; add al, bh ; xchg eax, edx ; cli ; call qword ptr [rcx]
0x000000000044fa7e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000402548 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427789 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000448984 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000446ebd : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000453a8f : add dword ptr [rax], ecx ; ret 0x840
0x0000000000432e81 : add dword ptr [rax], esp ; ret 0xd108
0x000000000043eb94 : add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000043fcad : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d240 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426428 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045f1d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004541a5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422b90 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040588d : add dword ptr [rdi], ecx ; mov dh, -8 ; call 0x401b16
0x0000000000457f7b : add dword ptr [rsi], ebp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000446ebc : add dword ptr ds:[rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c04 : add eax, 0x26272e ; add ebx, esi ; ret
0x0000000000445c02 : add eax, 0x84b80000 ; ret
0x0000000000462295 : add eax, 0xb7680000 ; sti ; call rdx
0x00000000004622b5 : add eax, 0xb9280000 ; sti ; call qword ptr [rbx]
0x0000000000459135 : add eax, 0xe9000004 ; ret 1
0x000000000045bf84 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043d64e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000040a69e : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000439eee : add ecx, eax ; mov rsi, rcx ; call 0x4261f7
0x0000000000457d47 : add edi, eax ; in al, -0x55 ; ret
0x000000000040868b : add edi, eax ; mov r12b, 0x1d ; ret 0x9997
0x000000000044f8f9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000401feb : add esp, 0x10 ; pop rbp ; ret
0x0000000000420fac : add esp, 0x100 ; pop rbp ; ret
0x0000000000443611 : add esp, 0x11e0 ; pop rbp ; ret
0x00000000004460f5 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000043aab4 : add esp, 0x120 ; pop rbp ; ret
0x0000000000444e13 : add esp, 0x12a0 ; pop rbp ; ret
0x0000000000442380 : add esp, 0x12b0 ; pop rbp ; ret
0x000000000043c499 : add esp, 0x130 ; pop rbp ; ret
0x000000000044bbf8 : add esp, 0x140 ; pop rbp ; ret
0x0000000000450653 : add esp, 0x160 ; pop rbp ; ret
0x0000000000428249 : add esp, 0x170 ; pop rbp ; ret
0x000000000044006a : add esp, 0x18 ; pop rbp ; ret
0x000000000044ee18 : add esp, 0x180 ; pop rbp ; ret
0x000000000044caed : add esp, 0x190 ; pop rbp ; ret
0x000000000042111c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000043dfd3 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004534ef : add esp, 0x1d0 ; pop rbp ; ret
0x000000000041bb73 : add esp, 0x20 ; pop rbp ; ret
0x0000000000457963 : add esp, 0x200 ; pop rbp ; ret
0x000000000044854e : add esp, 0x230 ; pop rbp ; ret
0x000000000043e0c5 : add esp, 0x30 ; pop rbp ; ret
0x000000000042a999 : add esp, 0x310 ; pop rbp ; ret
0x0000000000432ce1 : add esp, 0x390 ; pop rbp ; ret
0x0000000000421270 : add esp, 0x40 ; pop rbp ; ret
0x0000000000457369 : add esp, 0x440 ; pop rbp ; ret
0x000000000040853c : add esp, 0x4d0 ; pop rbp ; ret
0x000000000040bf62 : add esp, 0x50 ; pop rbp ; ret
0x0000000000425dbd : add esp, 0x590 ; pop rbp ; ret
0x0000000000422190 : add esp, 0x60 ; pop rbp ; ret
0x00000000004058b5 : add esp, 0x648 ; pop rbx ; pop rbp ; ret
0x000000000041d862 : add esp, 0x70 ; pop rbp ; ret
0x0000000000401f89 : add esp, 0x80 ; pop rbp ; ret
0x00000000004495cf : add esp, 0x88 ; pop rbp ; ret
0x00000000004218ed : add esp, 0x90 ; pop rbp ; ret
0x00000000004308f9 : add esp, 0x900 ; pop rbp ; ret
0x000000000043ecdd : add esp, 0x98 ; pop rbp ; ret
0x000000000041e646 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041c44b : add esp, 0xb0 ; pop rbp ; ret
0x00000000004287d7 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000439b2b : add esp, 0xbb0 ; pop rbp ; ret
0x0000000000422763 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040c7fa : add esp, 0xd0 ; pop rbp ; ret
0x000000000044abf8 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004061a6 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040ce03 : add esp, 8 ; pop rbp ; ret
0x00000000004016b6 : add esp, 8 ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000439eed : add rcx, rax ; mov rsi, rcx ; call 0x4261f8
0x0000000000401fea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000420fab : add rsp, 0x100 ; pop rbp ; ret
0x0000000000443610 : add rsp, 0x11e0 ; pop rbp ; ret
0x00000000004460f4 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000043aab3 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000444e12 : add rsp, 0x12a0 ; pop rbp ; ret
0x000000000044237f : add rsp, 0x12b0 ; pop rbp ; ret
0x000000000043c498 : add rsp, 0x130 ; pop rbp ; ret
0x000000000044bbf7 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000450652 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000428248 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000440069 : add rsp, 0x18 ; pop rbp ; ret
0x000000000044ee17 : add rsp, 0x180 ; pop rbp ; ret
0x000000000044caec : add rsp, 0x190 ; pop rbp ; ret
0x000000000042111b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000043dfd2 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004534ee : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000041bb72 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000457962 : add rsp, 0x200 ; pop rbp ; ret
0x000000000044854d : add rsp, 0x230 ; pop rbp ; ret
0x000000000043e0c4 : add rsp, 0x30 ; pop rbp ; ret
0x000000000042a998 : add rsp, 0x310 ; pop rbp ; ret
0x0000000000432ce0 : add rsp, 0x390 ; pop rbp ; ret
0x000000000042126f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000457368 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040853b : add rsp, 0x4d0 ; pop rbp ; ret
0x000000000040bf61 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000425dbc : add rsp, 0x590 ; pop rbp ; ret
0x000000000042218f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004058b4 : add rsp, 0x648 ; pop rbx ; pop rbp ; ret
0x000000000041d861 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401f88 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004495ce : add rsp, 0x88 ; pop rbp ; ret
0x00000000004218ec : add rsp, 0x90 ; pop rbp ; ret
0x00000000004308f8 : add rsp, 0x900 ; pop rbp ; ret
0x000000000043ecdc : add rsp, 0x98 ; pop rbp ; ret
0x000000000041e645 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041c44a : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004287d6 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000439b2a : add rsp, 0xbb0 ; pop rbp ; ret
0x0000000000422762 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040c7f9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044abf7 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004061a5 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040ce02 : add rsp, 8 ; pop rbp ; ret
0x00000000004016b5 : add rsp, 8 ; ret
0x000000000042ad9d : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000462e44 : and al, 0x11 ; add byte ptr [rax], al ; js 0x462e2e ; std ; jmp rbx
0x0000000000462f44 : and al, 0x12 ; add byte ptr [rax], al ; mov byte ptr [rsi - 2], al ; jmp qword ptr [rcx]
0x0000000000462844 : and al, 0xb ; add byte ptr [rax], al ; fsubr st(4) ; sti ; call rdx
0x000000000045fc8d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004541a4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422b8f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000453ddf : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000044e1ba : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043da26 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043dc16 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000457e3e : and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000043aab6 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421d9b : and byte ptr [rsi + 0x58], ah ; jb 0x421dd2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000457e3d : and byte ptr ds:[rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000447fcc : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000453dde : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000405612 : and eax, 0x46081c ; call 0x401827
0x00000000004180b1 : and eax, 0x75b4b9d3 ; ret
0x0000000000429242 : and eax, 0xdab0b9fa ; ret
0x000000000045ddc8 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045d8df : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045de8a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000445d54 : and esp, dword ptr [rdx - 0x7f] ; or dword ptr [rcx - 0x101f43], eax ; jmp qword ptr [rsi]
0x0000000000447fcb : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000043a205 : call 0x1243a20b
0x0000000000438cdc : call 0x18438ce2
0x000000000043a277 : call 0x2243a27d
0x000000000043a0ae : call 0x2843a0b4
0x000000000042a4c5 : call 0x4016e8
0x000000000045759b : call 0x4016f9
0x0000000000405426 : call 0x401702
0x0000000000405543 : call 0x401822
0x0000000000421140 : call 0x401829
0x00000000004057af : call 0x401a82
0x0000000000405891 : call 0x401b12
0x0000000000409923 : call 0x405b92
0x0000000000422195 : call 0x422259
0x0000000000439ef3 : call 0x4261f2
0x0000000000430313 : call 0x43c542
0x0000000000430312 : call 0x43c543
0x000000000043ece7 : call 0x444cf5
0x0000000000445de0 : call 0x457977
0x0000000000453d2f : call 0x4907c67f
0x0000000000453d2e : call 0x4907c680
0x0000000000453d7d : call 0x4907c6cd
0x0000000000453d7c : call 0x4907c6ce
0x0000000000448482 : call 0xffffffff8a24da1b
0x000000000045c3ad : call 0xffffffffaca685e1
0x000000000045c3ac : call 0xffffffffaca685e2
0x0000000000439ffe : call 0xffffffffe343a004
0x000000000043a286 : call 0xffffffffe543a28c
0x000000000041bb69 : call 0xffffffffe90444b9
0x000000000041bb68 : call 0xffffffffe90444ba
0x0000000000441d1d : call 0xfffffffff020a2ef
0x0000000000441d1c : call 0xfffffffff020a2f0
0x000000000044232c : call 0xfffffffff020a8fe
0x000000000044232b : call 0xfffffffff020a8ff
0x000000000044242d : call 0xfffffffff020a9ff
0x000000000045ff89 : call qword ptr [r12 + rbx*8]
0x0000000000404a7e : call qword ptr [rax]
0x000000000041d32e : call qword ptr [rbx]
0x000000000043a208 : call qword ptr [rcx]
0x000000000041aff4 : call qword ptr [rdi]
0x0000000000416fdb : call qword ptr [rdx]
0x0000000000425f45 : call qword ptr [rsi]
0x000000000045ff8a : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000041e772 : call rbx
0x000000000041925b : call rcx
0x000000000041ac34 : call rdi
0x000000000041a465 : call rdx
0x00000000004325af : call rsi
0x000000000040b0cb : call rsp
0x000000000041e860 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000444e11 : clc ; add rsp, 0x12a0 ; pop rbp ; ret
0x000000000044caeb : clc ; add rsp, 0x190 ; pop rbp ; ret
0x000000000045d505 : clc ; add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000457367 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000045a264 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004214f7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044a09b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000440b79 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000422761 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000405890 : clc ; call 0x401b13
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x000000000045ddc9 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045db93 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004475e7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000045a08b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004535ae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000405b97 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004486cb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004486eb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045d5e1 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000041d4af : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405b9b : clc ; pop rbp ; ret
0x000000000043badd : clc ; pop rbx ; pop rbp ; ret
0x000000000040e63d : clc ; ret 0x77a8
0x0000000000422ce7 : clc ; ret 0x898d
0x0000000000424b97 : clc ; ret 0xb28d
0x0000000000439ef4 : clc ; ret 0xfffe
0x0000000000461ec8 : clc ; xchg eax, edx ; cli ; call qword ptr [rcx]
0x000000000045d8e0 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000402017 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044237e : cld ; add rsp, 0x12b0 ; pop rbp ; ret
0x0000000000440068 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000457b85 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045c9ee : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044756d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040b14f : cld ; jmp 0x40b1bc
0x000000000040b14e : cld ; jmp 0x40b1bd
0x0000000000462a6a : cld ; jmp qword ptr [rdi]
0x0000000000461ab0 : cld ; mov esp, 0x1c8cfffe ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x000000000045a4dd : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000046261c : cld ; or byte ptr [rax], al ; add byte ptr [rax], dh ; retf ; sti ; jmp qword ptr [rdi]
0x000000000041e836 : cld ; pop rbp ; ret
0x00000000004616c0 : cld ; ret 0xfffb
0x0000000000461748 : cld ; sar bl, cl ; jmp rsp
0x0000000000450b9a : cld ; stc ; in al, dx ; ret 0x8589
0x00000000004512eb : cld ; stc ; in al, dx ; ret 0xff3
0x000000000042fc25 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045d0d0 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000461eca : cli ; call qword ptr [rcx]
0x0000000000461faa : cli ; call qword ptr [rdx]
0x0000000000457f35 : cli ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000461dea : cli ; jmp qword ptr [rsi]
0x000000000042902e : cli ; mov cl, 0x37 ; ret 0x4589
0x00000000004292ba : cli ; mov cl, 0x37 ; ret 0x94b9
0x000000000042932a : cli ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000421da0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043d6a0 : cli ; ret
0x000000000045fc8c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042eb46 : cmc ; jmp 0x430d02
0x0000000000420cbb : cmc ; ret 0x4f0b
0x00000000004617c8 : cmp al, -0x24 ; sti ; jmp rsp
0x000000000046275c : cmp al, 0xa ; add byte ptr [rax], al ; add ch, cl ; sti ; jmp rsi
0x0000000000430287 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004596fc : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042cdc8 : cmp byte ptr [rbx], dl ; ret
0x0000000000420e51 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000044bc22 : cmp dword ptr [rax - 0x75], ecx ; jne 0x44bc04 ; call rax
0x000000000042b0f6 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d7d8 : cmp dword ptr [rbx], edx ; ret
0x0000000000422302 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000422aaf : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042a6f5 : cmp ecx, ebp ; ret 3
0x0000000000418f07 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000445c01 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x84b80000 ; ret
0x0000000000426496 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045cef2 : cwde ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000429240 : cwde ; and eax, 0xdab0b9fa ; ret
0x0000000000462868 : cwde ; in eax, dx ; sti ; call qword ptr [rdx]
0x0000000000459e66 : cwde ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043030f : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x43c546
0x000000000043030e : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x43c547
0x0000000000453547 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000421144 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4611
0x000000000041840b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000417d7e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000418583 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041e97a : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000409dbc : dec dword ptr [rax - 0x77] ; ret 0x4be8
0x0000000000409e0c : dec dword ptr [rax - 0x77] ; ret 0x6be8
0x0000000000456ec6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000405ff4 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004099d3 : dec dword ptr [rax - 0x77] ; ret 0xa4e8
0x0000000000406147 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409934 : dec dword ptr [rax - 0x77] ; ret 0xd3e8
0x000000000043764f : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x00000000004384dc : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x0000000000405fee : dec dword ptr [rax - 0xd06b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004595c0 : dec dword ptr [rbx - 0x34b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004599f8 : dec dword ptr [rbx - 0x36b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000459b94 : dec dword ptr [rbx - 0x3736b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000430571 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000437cd3 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004226b5 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000043962e : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000420cb6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004226bb : dec dword ptr [rdi] ; ret 0x4589
0x0000000000430577 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000429c1d : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x00000000004499f1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040a69a : dec dword ptr [rdi] ; test bl, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000044e86b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045ceef : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000042a01e : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000043f240 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x000000000044918a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000043e7e4 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040e31a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000426f6d : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x000000000040278b : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16ffffd5], bl ; ret
0x000000000045caee : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffa], bl ; ret
0x000000000040448c : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffc], ah ; ret 1
0x0000000000459132 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], al ; ret 1
0x000000000043d41f : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x0000000000448980 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004075e7 : dec dword ptr [rdi] ; test dh, bl ; or al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043a5f3 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000451c65 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000447a0f : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045bd7e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000456cf3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000443209 : dec dword ptr [rip + 0xf000000] ; xchg eax, esp ; ret 0xd284
0x00000000004400c0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004400bf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000449e00 : enter -0x74b8, 0x31 ; call rax
0x00000000004261de : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000456949 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040af5e : enter 0x8b, 0x48 ; mov esp, ebp ; pop rbp ; ret
0x000000000045d705 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000425b40 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000040c619 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043cff9 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043cfb7 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043cfd8 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045bd60 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000462fe8 : fcom dword ptr [rsi - 2] ; call qword ptr [rdx]
0x0000000000461788 : fcom st(0), st(7) ; sti ; jmp rsp
0x000000000045d9bb : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000042b91c : fcomp st(3) ; ret
0x00000000004617c9 : fdiv st(3), st(0) ; jmp rsp
0x0000000000461809 : fdivp st(3) ; jmp rsp
0x000000000043838a : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000044e86e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004288a1 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x000000000045bd3f : fild word ptr [rcx - 0x77] ; ret
0x00000000004302df : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004302de : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045de8b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x00000000004282e5 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045e248 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000044d74e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045a7c7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000044d74f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000449dfc : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000044ab3d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000449429 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000045a7c8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000045ff8c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042e194 : fstpnce st(3), st(0) ; ret
0x0000000000462848 : fsubr st(4) ; sti ; call rdx
0x0000000000401fe9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042a997 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x000000000043d129 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000045ad2c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040ce01 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6642d0 ; jmp rax
0x0000000000435048 : hlt ; ret
0x0000000000463a14 : hlt ; sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000421ecb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000430575 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000422600 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000043eb92 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x0000000000457d4a : in al, -0x55 ; ret
0x0000000000429329 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000043da24 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043dc14 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000463004 : in al, 0x12 ; add byte ptr [rax], al ; fcom dword ptr [rsi - 2] ; call qword ptr [rdx]
0x000000000043ecee : in al, 0x3e ; ret
0x0000000000432cdf : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x0000000000446531 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004547a8 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000461808 : in al, dx ; fdivp st(3) ; jmp rsp
0x0000000000453a11 : in al, dx ; jmp 0x453bdd
0x0000000000453a10 : in al, dx ; jmp 0x453bde
0x000000000045c46c : in al, dx ; jmp 0x45c4e9
0x000000000045c46b : in al, dx ; jmp 0x45c4ea
0x000000000045d875 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040254d : in al, dx ; pop rbp ; ret
0x00000000004509da : in al, dx ; ret 0x8589
0x00000000004539f4 : in al, dx ; ret 0xe8ff
0x00000000004512ed : in al, dx ; ret 0xff3
0x0000000000461708 : in al, dx ; retf ; sti ; jmp rsp
0x0000000000462849 : in al, dx ; sti ; call rdx
0x0000000000441faa : in eax, -0x47 ; mov ah, -0x7b ; ret 0xb29d
0x000000000041e833 : in eax, -0x77 ; jge 0x41e838 ; pop rbp ; ret
0x0000000000462869 : in eax, dx ; sti ; call qword ptr [rdx]
0x0000000000424fe3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000437c59 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000437b2c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042753d : inc dword ptr [rbp + 0x21] ; ret
0x000000000040469a : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004288c8 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004431e2 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432b55 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x00000000004431bb : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004617c3 : inc esp ; adc byte ptr [rax], al ; add byte ptr [rsp + rbx*8], bh ; sti ; jmp rsp
0x0000000000461803 : inc esp ; adc dword ptr [rax], eax ; add ah, ch ; fdivp st(3) ; jmp rsp
0x0000000000461703 : inc esp ; or eax, 0xcbec0000 ; sti ; jmp rsp
0x0000000000461783 : inc esp ; sldt word ptr [rax] ; fcom st(0), st(7) ; sti ; jmp rsp
0x000000000042da5c : insb byte ptr [rdi], dx ; ret
0x0000000000461ab8 : insb byte ptr [rdi], dx ; ret 0xfffe
0x000000000041e017 : int 0x5b
0x000000000042765b : int 0x73
0x000000000042c621 : int 0x80
0x0000000000451a04 : int 6
0x000000000043802c : int 7
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x00000000004535b1 : ja 0x4535fe ; pop rbp ; ret
0x000000000042aecc : jae 0x42aea2 ; ret 0x89e0
0x0000000000438728 : jae 0x43875e ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000438734 : jae 0x43876b ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000421d9e : jb 0x421dcf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6642d0 ; jmp rax
0x000000000042af0e : je 0x42aee4 ; ret 0x89e0
0x000000000042afd9 : je 0x42afaf ; ret 0xb9e0
0x0000000000439eec : je 0x439f3f ; add ecx, eax ; mov rsi, rcx ; call 0x4261f9
0x0000000000437681 : jg 0x437610 ; push rbp ; ret
0x0000000000405b96 : jge 0x405b97 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004174a6 : jge 0x41742b ; ret 0xffd5
0x0000000000417f70 : jge 0x417f50 ; shr cl, cl ; ret 0x3b
0x000000000041e835 : jge 0x41e836 ; pop rbp ; ret
0x0000000000445dde : jge 0x445da9 ; call 0x457979
0x00000000004486ca : jge 0x4486cb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004486ea : jge 0x4486eb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000449dfb : jge 0x449dde ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004535ad : jge 0x4535ae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000045a08a : jge 0x45a08d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x000000000044970b : jl 0x449714 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000450738 : jle 0x4506cc ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004017cb : jmp 0x4016c7
0x00000000004060a3 : jmp 0x406073
0x00000000004060a2 : jmp 0x406074
0x0000000000408033 : jmp 0x408732
0x000000000040ac58 : jmp 0x40b0a8
0x000000000040b150 : jmp 0x40b1bb
0x00000000004186c0 : jmp 0x41bb40
0x00000000004165c4 : jmp 0x41bb41
0x0000000000417991 : jmp 0x41bb42
0x00000000004200db : jmp 0x420b47
0x0000000000420018 : jmp 0x420b49
0x0000000000422143 : jmp 0x4221a8
0x000000000042515f : jmp 0x426022
0x000000000042a73a : jmp 0x42aac4
0x000000000042ec58 : jmp 0x42ec17
0x000000000042f6a7 : jmp 0x430d00
0x000000000042eb47 : jmp 0x430d01
0x000000000042ed61 : jmp 0x430d02
0x0000000000431367 : jmp 0x4313b4
0x000000000043250a : jmp 0x432e29
0x0000000000437195 : jmp 0x43a294
0x000000000043de1d : jmp 0x43e073
0x000000000043e9b2 : jmp 0x43ed20
0x000000000043ea6b : jmp 0x43ed21
0x0000000000445c00 : jmp 0x4461b3
0x0000000000445b52 : jmp 0x4461b4
0x0000000000449404 : jmp 0x449660
0x0000000000449c99 : jmp 0x449e25
0x000000000044bb2a : jmp 0x44bc6e
0x000000000044bb29 : jmp 0x44bc6f
0x000000000044bb29 : jmp 0x44bc70
0x0000000000453a12 : jmp 0x453bdc
0x0000000000457206 : jmp 0x4574e8
0x000000000045a1ce : jmp 0x45a27f
0x000000000045c46d : jmp 0x45c4e8
0x000000000045d675 : jmp 0x45d680
0x000000000045d7d7 : jmp 0x45d7e2
0x000000000045da45 : jmp 0x45da50
0x000000000045106f : jmp 0x490799bf
0x00000000004511bb : jmp 0x49079b0b
0x000000000045128d : jmp 0x49079bdd
0x000000000045130e : jmp 0x49079c5e
0x00000000004532b4 : jmp 0x4907bc04
0x000000000045332f : jmp 0x4907bc7f
0x0000000000420cba : jmp 0x4f4dcfb6
0x000000000045bb2f : jmp 0xffffffffc409f1f6
0x000000000041b495 : jmp qword ptr [rax]
0x000000000046213b : jmp qword ptr [rbx]
0x000000000040d292 : jmp qword ptr [rcx]
0x0000000000419147 : jmp qword ptr [rdi]
0x0000000000420f4a : jmp qword ptr [rdx]
0x0000000000441ea1 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x0000000000417a98 : jmp rbx
0x00000000004184ca : jmp rcx
0x0000000000417af2 : jmp rdi
0x0000000000401be7 : jmp rdx
0x00000000004434e6 : jmp rsi
0x0000000000417da8 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x000000000043e0b9 : jne 0x43e09c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004400c1 : jne 0x4400b9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000440692 : jne 0x44068a ; mov rax, rdx ; pop rbp ; ret
0x0000000000449e59 : jne 0x449e24 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000044bc25 : jne 0x44bc01 ; call rax
0x0000000000426495 : jns 0x426440 ; ret
0x0000000000426494 : jns 0x426441 ; ret
0x00000000004264e5 : jns 0x426490 ; ret
0x00000000004264e4 : jns 0x426491 ; ret
0x000000000042f9b8 : jns 0x42f975 ; ret 0xcaed
0x00000000004113be : jo 0x4113ca ; ret
0x000000000041302e : jo 0x41303a ; ret
0x000000000041657d : jo 0x416589 ; ret
0x000000000041d864 : jo 0x41d8c5 ; ret
0x0000000000425f8f : jo 0x425f5e ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x0000000000425f8e : jo 0x425f5f ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042642f : jo 0x426490 ; ret
0x000000000042824b : jo 0x428253 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ada4 : jo 0x42ae05 ; ret
0x0000000000430311 : jo 0x43035b ; call 0x43c544
0x00000000004328a5 : jrcxz 0x43284f ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x0000000000461de8 : js 0x461df5 ; cli ; jmp qword ptr [rsi]
0x0000000000462e48 : js 0x462e2a ; std ; jmp rbx
0x0000000000431366 : lahf ; jmp 0x4313b5
0x000000000040278e : lahf ; sub eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000417f6e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041906e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040b956 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404eff : lea ebp, dword ptr [rbp - 0x47] ; ret
0x0000000000405610 : lea edi, dword ptr [0x46081c] ; call 0x401829
0x0000000000447db4 : lea esi, dword ptr [rdx] ; ret
0x000000000040dcb5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041db59 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043badb : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040dcb4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043bada : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044660f : leave ; ret 0x86f8
0x0000000000426492 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004168ce : ljmp ptr [rdi] ; ret 0x23da
0x000000000044918d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000422b8e : loop 0x422bbb ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422b8d : loop 0x422bbc ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004487d0 : loop 0x4487c5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000045d972 : loop 0x45d925 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004198d5 : loope 0x4198a3 ; jmp 0x41bb43
0x0000000000438732 : loope 0x438706 ; jae 0x43876d ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000043dc5b : loope 0x43dc4c ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000043fcac : loope 0x43fcb8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044950e : loope 0x4494c9 ; xchg eax, ebp ; jmp 0x449663
0x000000000040dcb3 : loopne 0x40dd06 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d25d : loopne 0x41d2c3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041e644 : loopne 0x41e697 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000421803 : loopne 0x42180c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042218e : loopne 0x4221de ; add esp, 0x60 ; pop rbp ; ret
0x000000000042218d : loopne 0x4221df ; add esp, 0x60 ; pop rbp ; ret
0x0000000000428e82 : loopne 0x428e8c ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000438726 : loopne 0x4386f9 ; jae 0x438760 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x000000000043e4b7 : loopne 0x43e4e9 ; pop rdi ; ret
0x000000000043e4b6 : loopne 0x43e4ea ; pop rdi ; ret
0x000000000043e99b : loopne 0x43e9cd ; ret
0x000000000043e99a : loopne 0x43e9ce ; ret
0x0000000000443613 : loopne 0x44362b ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044abfa : loopne 0x44ac01 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044e24e : loopne 0x44e29f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044e24d : loopne 0x44e2a0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004534ed : loopne 0x453540 ; add esp, 0x1d0 ; pop rbp ; ret
0x00000000004581ac : loopne 0x458140 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004581ab : loopne 0x458141 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045ad30 : loopne 0x45ad37 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045c9f2 : loopne 0x45c9f9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045fccc : loopne 0x45fd1b ; mov esp, ebp ; pop rbp ; ret
0x000000000045fccb : loopne 0x45fd1c ; mov esp, ebp ; pop rbp ; ret
0x000000000045ff1c : loopne 0x45ff6b ; mov esp, ebp ; pop rbp ; ret
0x000000000045ff1b : loopne 0x45ff6c ; mov esp, ebp ; pop rbp ; ret
0x0000000000407a61 : mov ah, -0x17 ; ret
0x000000000045d971 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041749d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417577 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004375bc : mov ah, -0x76 ; ret 0x124
0x0000000000441462 : mov ah, -0x7b ; ret 0x899d
0x0000000000441fac : mov ah, -0x7b ; ret 0xb29d
0x000000000040868e : mov ah, 0x1d ; ret 0x9997
0x0000000000461b3c : mov ah, 0x1e ; add byte ptr [rax], al ; pop rsp ; xor bh, bh ; call rsp
0x0000000000402c19 : mov ah, 0x27 ; ret 0x89a8
0x000000000044976e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000415525 : mov ah, 0x75 ; ret
0x0000000000429129 : mov al, -0x26 ; ret
0x000000000041e033 : mov al, -0x47 ; ret
0x0000000000441e96 : mov al, -0x47 ; ror dword ptr [rbx + 0x2b], 1 ; ret 0xbd81
0x000000000044950f : mov al, -0x6b ; jmp 0x449662
0x00000000004569cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004258e2 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000425316 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c44d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000442382 : mov al, 0x12 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004062ba : mov al, 0x2d ; push -0x50 ; ret
0x0000000000430e6a : mov al, 0x2d ; ret
0x0000000000431126 : mov al, 0x2d ; ret 0x24cc
0x0000000000406a88 : mov al, 0x2d ; ret 0xe17f
0x00000000004528f0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000439b2d : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045ddcb : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000045e53d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045e20a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422b8c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000440838 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004057a9 : mov al, byte ptr [rbp - 0x611] ; call 0x401a88
0x000000000045e46d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045de8c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045ddca : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045db94 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041f41c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045db99 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000462299 : mov bh, -5 ; call rdx
0x0000000000428978 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000425ee5 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x00000000004412da : mov bl, -0x7b ; ret 0x899d
0x0000000000462199 : mov bl, -5 ; call rdi
0x000000000043f848 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430285 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040eec5 : mov bl, 0x75 ; ret
0x00000000004495d1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x26272e], 1 ; ret
0x0000000000462f48 : mov byte ptr [rsi - 2], al ; jmp qword ptr [rcx]
0x0000000000402c64 : mov ch, 0x27 ; ret 0x89a8
0x000000000040563f : mov ch, 0x27 ; ret 0x8aa8
0x0000000000416d1f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000428fed : mov cl, 0x37 ; ret 0x4589
0x00000000004292bb : mov cl, 0x37 ; ret 0x94b9
0x000000000042932b : mov cl, 0x37 ; ret 0xd3e9
0x000000000043500f : mov cl, 0x7d ; ret
0x0000000000453de4 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000447fd1 : mov dh, -0x3a ; pop rbp ; ret
0x000000000043bad8 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043fcaf : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d242 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042642a : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045f1d4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004541a7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422b92 : mov dh, -0x40 ; pop rbp ; ret
0x000000000045de8f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004323a2 : mov dh, -0x47 ; ret 0x9214
0x000000000040588f : mov dh, -8 ; call 0x401b14
0x000000000045fc8a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000462139 : mov dl, -5 ; jmp qword ptr [rbx]
0x0000000000463189 : mov dr1, esi ; jmp rbx
0x000000000045ef01 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000454061 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d439 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d00f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044baa5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x000000000044e0e9 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x0000000000453a0f : mov dword ptr [rbp - 0x14], eax ; jmp 0x453bdf
0x000000000045c46a : mov dword ptr [rbp - 0x14], eax ; jmp 0x45c4eb
0x0000000000451ebd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x00000000004520f0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000040991d : mov dword ptr [rbp - 0x2a8], esi ; call 0x405b98
0x0000000000449401 : mov dword ptr [rbp - 0x34], eax ; jmp 0x449663
0x0000000000449c96 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x449e28
0x0000000000449d21 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x449e28
0x000000000044976c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040553d : mov dword ptr [rbp - 0x5e4], esi ; call 0x401828
0x00000000004200d8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x420b4a
0x0000000000401fe7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000449d01 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000402015 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e834 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000405b95 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d716 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004475e8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004535b0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000045a08c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040d2bd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004287d9 : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000045225b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000425160 : mov eax, 0xb800000e ; ret 0x4dbf
0x000000000041e976 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x000000000045405f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409c00 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042200b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004265f6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004547a6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004221de : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bf5e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000457d77 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d43c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042218c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004581aa : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045fcca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043e0bf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040af5c : mov eax, dword ptr [rbp - 0x38] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d2bf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000449e5f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000451687 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000459e64 : mov eax, dword ptr [rbp - 0x68] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043030d : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x43c548
0x0000000000409bfd : mov eax, dword ptr [rbp - 0x70] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cdff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000440066 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000457b83 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045a4db : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a262 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041d4ad : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405b99 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004486cd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004486ed : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040d2be : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000045db96 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000045d5e3 : mov eax, eax ; pop rbp ; ret
0x000000000045d9ba : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041e7ec : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e85f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f3eb : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004400c4 : mov eax, edx ; pop rbp ; ret
0x000000000041efc3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045d8dd : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045db95 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000419cd8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x000000000041e832 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x000000000042575f : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000040d00c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044dffb : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044e24c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044eb66 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000449dfe : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045225d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044dfff : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401c25 : mov edi, 0x663e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6642d0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6642d0 ; jmp rdx
0x0000000000453a13 : mov edi, 0xb8000001 ; ret
0x0000000000416577 : mov edi, 0xb8000055 ; wait ; jo 0x41658f ; ret
0x00000000004535ac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004486c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004486e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e002 : mov edi, dword ptr [rcx] ; call rax
0x000000000044bc21 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000045ff87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045ff86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000447db1 : mov edx, 0x328dfe07 ; ret
0x000000000045717e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000416d3b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000417bb2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000457167 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000430310 : mov esi, dword ptr [rax + 0x44] ; call 0x43c545
0x000000000044bc24 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000449e02 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6642d0 ; jmp rdx
0x000000000043e0bc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449e5c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000439ef1 : mov esi, ecx ; call 0x4261f4
0x0000000000461ab1 : mov esp, 0x1c8cfffe ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x00000000004616c4 : mov esp, 0x2c00000c ; ret
0x00000000004623dc : mov esp, 0xf0000006 ; ret
0x000000000040254c : mov esp, ebp ; pop rbp ; ret
0x000000000040991c : mov qword ptr [rbp - 0x2a8], rsi ; call 0x405b99
0x0000000000405b94 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d715 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004535af : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407a60 : mov r12b, -0x17 ; ret
0x000000000040868d : mov r12b, 0x1d ; ret 0x9997
0x000000000044976d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000425ee4 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x00000000004062b9 : mov r8b, 0x2d ; push -0x50 ; ret
0x0000000000430e69 : mov r8b, 0x2d ; ret
0x0000000000431125 : mov r8b, 0x2d ; ret 0x24cc
0x0000000000406a87 : mov r8b, 0x2d ; ret 0xe17f
0x000000000040cb38 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042200a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004265f5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004221dd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bf5d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044be41 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042218b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043e0be : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449e5e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043030c : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x43c549
0x000000000041d4ac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405b98 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004486cc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004486ec : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045d9b9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045d5e2 : mov rax, r8 ; pop rbp ; ret
0x000000000041e820 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044cbc0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004400c3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x000000000041e831 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x000000000044eb65 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000449dfd : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045225c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044dffe : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004535ab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004486c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004486e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e001 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044bc20 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044bc23 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000449e01 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6642d0 ; jmp rdx
0x000000000043e0bb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449e5b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000439ef0 : mov rsi, rcx ; call 0x4261f5
0x000000000040254b : mov rsp, rbp ; pop rbp ; ret
0x0000000000421da1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045b9d1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000412818 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004379ad : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000461ec4 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, bh ; xchg eax, edx ; cli ; call qword ptr [rcx]
0x00000000004512ea : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x00000000004379ae : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000415a65 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000043f243 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x00000000004282e3 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000044d241 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426429 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045f1d3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004541a6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422b91 : movzx eax, al ; pop rbp ; ret
0x000000000045de8e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045db98 : movzx eax, ax ; pop rbp ; ret
0x0000000000453de3 : movzx eax, bh ; pop rbp ; ret
0x000000000043bad7 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043fcae : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f41b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000447fd0 : movzx eax, dh ; pop rbp ; ret
0x0000000000453de2 : movzx eax, dil ; pop rbp ; ret
0x0000000000447fcf : movzx eax, sil ; pop rbp ; ret
0x000000000040588e : movzx edi, al ; call 0x401b15
0x0000000000456f78 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409bff : nop ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ed05 : nop ; ret
0x000000000041d112 : nop ; ret 0x148
0x000000000041d126 : nop ; ret 0x2948
0x000000000045ffa8 : nop dword ptr [rax + rax] ; ret
0x00000000004616bd : or al, 0 ; add ah, bh ; ret 0xfffb
0x0000000000429c21 : or al, 0 ; add cl, ch ; ret
0x000000000041749a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417574 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043ee43 : or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004075eb : or al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004539f1 : or bh, al ; in al, dx ; ret 0xe8ff
0x000000000045c095 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004633c9 : or bh, bh ; call rax
0x000000000045073d : or byte ptr [r15], 0x8f ; ret 6
0x000000000040d010 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000425760 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000046261d : or byte ptr [rax], al ; add byte ptr [rax], dh ; retf ; sti ; jmp qword ptr [rdi]
0x000000000041f6b8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004288d0 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040408f : or byte ptr [rax], al ; add cl, ch ; ret
0x000000000045073e : or byte ptr [rdi], 0x8f ; ret 6
0x0000000000425198 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000405614 : or byte ptr [rsi], al ; call 0x401825
0x000000000045c094 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000461de9 : or dl, bh ; jmp qword ptr [rsi]
0x0000000000418586 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040d714 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000445d57 : or dword ptr [rcx - 0x101f43], eax ; jmp qword ptr [rsi]
0x0000000000462a65 : or eax, 0x3d680000 ; cld ; jmp qword ptr [rdi]
0x0000000000406a83 : or eax, 0x458b0000 ; mov al, 0x2d ; ret 0xe17f
0x000000000045a77a : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000461705 : or eax, 0xcbec0000 ; sti ; jmp rsp
0x000000000044320a : or eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000462845 : or eax, dword ptr [rax] ; add al, bl ; in al, dx ; sti ; call rdx
0x000000000042897a : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045d5e0 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000045d8e3 : or eax, esi ; pop rbp ; ret
0x000000000045d9b7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000040d2bb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045d9b6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045d5df : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000441e93 : out -0x31, al ; mov al, -0x47 ; ror dword ptr [rbx + 0x2b], 1 ; ret 0xbd81
0x0000000000447fcd : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x0000000000453de0 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000418e7b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045e20c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044f779 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044f8f8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045e53f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e032 : out dx, eax ; mov al, -0x47 ; ret
0x000000000043dc5e : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000404bb7 : out dx, eax ; shr ecx, cl ; ret
0x0000000000457169 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004496f9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000419f65 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040ebb6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000419fb0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000420f41 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004302dd : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045716c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000421d9c : pop ax ; jb 0x421dd1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043dc5f : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000041ae19 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045ff9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d25f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041ae1b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045ff9e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041ae1d : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045ffa0 : pop r14 ; pop r15 ; ret
0x000000000040dcb9 : pop r14 ; pop rbp ; ret
0x000000000041ae1f : pop r15 ; pop rbp ; ret
0x000000000045ffa2 : pop r15 ; ret
0x000000000043bfd3 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000421d9d : pop rax ; jb 0x421dd0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x26272e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6642d0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6642d0 ; jmp rdx
0x000000000045ff9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041ae1c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045ff9f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000416d22 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000412ff5 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000416d3e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b95 : pop rbp ; ret
0x000000000041d25e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041bf55 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dcb8 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058bb : pop rbx ; pop rbp ; ret
0x000000000041f6c0 : pop rbx ; ret
0x0000000000416d23 : pop rcx ; ret 0x1b2
0x00000000004113f6 : pop rcx ; ret 0x8589
0x0000000000416d3f : pop rcx ; ret 0x8b48
0x0000000000419070 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000443258 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004225ff : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000041ae20 : pop rdi ; pop rbp ; ret
0x0000000000429dd6 : pop rdi ; ret
0x0000000000457e3b : pop rsi ; adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000041ae1e : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045ffa1 : pop rsi ; pop r15 ; ret
0x000000000040dcba : pop rsi ; pop rbp ; ret
0x0000000000405bd5 : pop rsi ; ret
0x000000000041ae1a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045ff9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d260 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004113f5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000449710 : pop rsp ; ret 0xf66
0x0000000000461b40 : pop rsp ; xor bh, bh ; call rsp
0x000000000043d64d : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000045f055 : popfq ; ret 0xd284
0x000000000044f6c5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000416d20 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004062bc : push -0x50 ; ret
0x0000000000418f0a : push -0x75425eeb ; push rbp ; ret
0x0000000000415a68 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000040bf64 : push rax ; pop rbp ; ret
0x000000000044242c : push rbp ; call 0xfffffffff020aa00
0x000000000045d704 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000044ab3c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000449428 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401c24 : push rbp ; mov edi, 0x663e20 ; mov rbp, rsp ; call rax
0x000000000041e830 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000418f0f : push rbp ; ret
0x000000000043759f : push rbp ; ret 0x1b2
0x0000000000418ea6 : push rbp ; ret 0xd284
0x000000000043aa9f : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000451466 : push rbp ; shr al, 1 ; ret
0x000000000041749f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417579 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000426caa : push rbx ; ret
0x000000000045716b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000425bc6 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000406707 : push rsp ; ret
0x00000000004616bc : pushfq ; or al, 0 ; add ah, bh ; ret 0xfffb
0x0000000000424fea : pushfq ; ret 0x8445
0x0000000000432c23 : pushfq ; ret 0xd284
0x00000000004002dd : ret
0x000000000040e31e : ret 0
0x000000000044ab40 : ret 0x10
0x000000000042579a : ret 0x108
0x0000000000458b27 : ret 0x11
0x000000000042da40 : ret 0x1111
0x00000000004375bf : ret 0x124
0x000000000041d113 : ret 0x148
0x000000000042f334 : ret 0x19
0x000000000041a074 : ret 0x1a
0x000000000040f2ed : ret 0x1add
0x000000000042e638 : ret 0x1b
0x0000000000416d25 : ret 0x1b2
0x000000000044911d : ret 0x1cdd
0x00000000004384c8 : ret 0x1d
0x0000000000449045 : ret 0x1e1
0x000000000042fc1f : ret 0x2145
0x000000000042e934 : ret 0x23
0x000000000040fc3a : ret 0x23da
0x0000000000431128 : ret 0x24cc
0x0000000000408158 : ret 0x25
0x00000000004019d2 : ret 0x2627
0x00000000004017d2 : ret 0x2628
0x000000000041c938 : ret 0x279e
0x00000000004496fa : ret 0x280f
0x0000000000454411 : ret 0x2941
0x0000000000418589 : ret 0x2948
0x0000000000419074 : ret 0x2a
0x0000000000438510 : ret 0x2ae8
0x000000000043496e : ret 0x2b
0x00000000004174a2 : ret 0x2d50
0x0000000000456cce : ret 0x3040
0x000000000043620a : ret 0x33
0x000000000044a80a : ret 0x3504
0x0000000000417f74 : ret 0x3b
0x0000000000430180 : ret 0x3d94
0x0000000000414fd5 : ret 0x3e
0x000000000045cd6f : ret 0x4343
0x00000000004223a3 : ret 0x4589
0x000000000041e526 : ret 0x460e
0x0000000000421149 : ret 0x4611
0x0000000000418411 : ret 0x4802
0x0000000000448de0 : ret 0x4810
0x00000000004384df : ret 0x4813
0x000000000045716e : ret 0x4815
0x0000000000419f66 : ret 0x4861
0x000000000043c1f1 : ret 0x4878
0x000000000044b497 : ret 0x48c3
0x00000000004022ec : ret 0x48f0
0x0000000000412821 : ret 0x4b
0x0000000000409dbf : ret 0x4be8
0x000000000041de37 : ret 0x4cc0
0x000000000041ae78 : ret 0x4cf0
0x0000000000423012 : ret 0x4dbf
0x0000000000420cbc : ret 0x4f0b
0x00000000004309b6 : ret 0x5189
0x000000000040d26b : ret 0x5589
0x0000000000450f0f : ret 0x558a
0x000000000043a7cf : ret 0x558b
0x000000000041772a : ret 0x5966
0x000000000041f917 : ret 0x5bc6
0x0000000000432bdb : ret 0x5fe8
0x000000000043aaa3 : ret 0x60
0x000000000045fc8f : ret 0x61
0x000000000042b59d : ret 0x6809
0x000000000040e986 : ret 0x6a8a
0x0000000000409e0f : ret 0x6be8
0x000000000042374a : ret 0x6ea5
0x000000000042685c : ret 0x6fcb
0x000000000040e63e : ret 0x77a8
0x000000000040f7a1 : ret 0x7a8a
0x000000000041641b : ret 0x7b7f
0x000000000041cdca : ret 0x8041
0x000000000041d012 : ret 0x8141
0x000000000042fcb5 : ret 0x8148
0x0000000000418334 : ret 0x822d
0x0000000000432bd4 : ret 0x8341
0x0000000000451072 : ret 0x8348
0x0000000000453a91 : ret 0x840
0x000000000040469e : ret 0x8445
0x00000000004023cc : ret 0x8589
0x00000000004050df : ret 0x858a
0x0000000000449ac9 : ret 0x86a5
0x00000000004465ce : ret 0x86f8
0x000000000045d6e7 : ret 0x8844
0x0000000000440f78 : ret 0x8915
0x0000000000403f56 : ret 0x8919
0x00000000004536a6 : ret 0x8938
0x000000000040f3b3 : ret 0x8940
0x000000000042eae6 : ret 0x8941
0x00000000004288a5 : ret 0x8945
0x00000000004057a5 : ret 0x8948
0x000000000045578f : ret 0x894a
0x000000000040ebb7 : ret 0x8961
0x0000000000454211 : ret 0x898c
0x0000000000422ce8 : ret 0x898d
0x000000000042bd0e : ret 0x8994
0x000000000044817c : ret 0x899a
0x00000000004412dc : ret 0x899d
0x0000000000402c1b : ret 0x89a8
0x000000000042aece : ret 0x89e0
0x000000000043b35a : ret 0x89f5
0x0000000000456d88 : ret 0x8a44
0x0000000000456c85 : ret 0x8a4a
0x0000000000405641 : ret 0x8aa8
0x0000000000416d41 : ret 0x8b48
0x0000000000430544 : ret 0x8b4c
0x0000000000438235 : ret 0x919d
0x0000000000432138 : ret 0x9214
0x000000000045bd62 : ret 0x941
0x000000000045d992 : ret 0x949
0x00000000004292bd : ret 0x94b9
0x0000000000406577 : ret 0x9997
0x000000000046328c : ret 0xa
0x000000000041757c : ret 0xa30b
0x00000000004099d6 : ret 0xa4e8
0x000000000042a369 : ret 0xa8b9
0x000000000045c3af : ret 0xac60
0x0000000000405010 : ret 0xb0
0x0000000000424b98 : ret 0xb28d
0x0000000000441fae : ret 0xb29d
0x0000000000418e80 : ret 0xb740
0x0000000000430534 : ret 0xb841
0x0000000000421d97 : ret 0xb848
0x0000000000441bee : ret 0xb915
0x00000000004170b0 : ret 0xb940
0x000000000043ae7a : ret 0xb941
0x000000000044d7ab : ret 0xb948
0x0000000000456c12 : ret 0xb94a
0x00000000004543c0 : ret 0xb98c
0x00000000004483d0 : ret 0xb99a
0x000000000042afdb : ret 0xb9e0
0x000000000043b6c4 : ret 0xb9f5
0x0000000000441e9b : ret 0xbd81
0x0000000000404d15 : ret 0xbdb9
0x000000000040271e : ret 0xbee7
0x00000000004194fc : ret 0xbf48
0x000000000044288e : ret 0xc
0x000000000044274f : ret 0xc05d
0x0000000000401bc5 : ret 0xc148
0x00000000004573c8 : ret 0xc2e8
0x000000000045fed2 : ret 0xc493
0x0000000000439c25 : ret 0xc731
0x00000000004227e0 : ret 0xca21
0x00000000004054cf : ret 0xca29
0x000000000042d6c0 : ret 0xcaed
0x000000000045fc95 : ret 0xccb2
0x000000000042a9e7 : ret 0xd0e9
0x0000000000432e83 : ret 0xd108
0x0000000000405399 : ret 0xd284
0x0000000000409937 : ret 0xd3e8
0x000000000042932d : ret 0xd3e9
0x00000000004553d5 : ret 0xd618
0x0000000000438d6f : ret 0xe083
0x0000000000406a8b : ret 0xe17f
0x000000000045a6ef : ret 0xe280
0x00000000004357ef : ret 0xe721
0x00000000004536d3 : ret 0xe8ff
0x00000000004423c9 : ret 0xe915
0x0000000000418d52 : ret 0xe940
0x000000000043aef5 : ret 0xe941
0x0000000000419fb1 : ret 0xe961
0x00000000004301cc : ret 0xe994
0x000000000044857f : ret 0xe99a
0x000000000045a164 : ret 0xe9d2
0x000000000040fddd : ret 0xea51
0x000000000044848b : ret 0xea81
0x000000000041bb6c : ret 0xee8
0x0000000000435992 : ret 0xef52
0x0000000000453a75 : ret 0xf280
0x000000000040d2a5 : ret 0xf281
0x0000000000417bb7 : ret 0xf41
0x000000000045218c : ret 0xf4e9
0x0000000000449711 : ret 0xf66
0x000000000042d9b4 : ret 0xf6bd
0x0000000000419b05 : ret 0xf7f3
0x0000000000439c21 : ret 0xfa89
0x000000000041828e : ret 0xfc75
0x000000000045129f : ret 0xff3
0x0000000000409eba : ret 0xff7b
0x0000000000419aff : ret 0xffa5
0x000000000042a4d3 : ret 0xffbe
0x0000000000418288 : ret 0xffc4
0x00000000004174a8 : ret 0xffd5
0x0000000000417582 : ret 0xffd8
0x000000000041833a : ret 0xffd9
0x0000000000417724 : ret 0xffe0
0x0000000000401e5a : ret 0xfff9
0x0000000000416415 : ret 0xfffa
0x00000000004616a9 : ret 0xfffb
0x0000000000439ef5 : ret 0xfffe
0x0000000000405428 : ret 0xffff
0x0000000000404494 : ret 1
0x0000000000418120 : ret 2
0x000000000042a6f7 : ret 3
0x000000000042a102 : ret 4
0x0000000000403c42 : ret 6
0x000000000041b274 : ret 8
0x0000000000431b08 : ret 9
0x0000000000462621 : retf ; sti ; jmp qword ptr [rdi]
0x0000000000461709 : retf ; sti ; jmp rsp
0x0000000000426490 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045714d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000043759a : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x00000000004502f4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000440aec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c7fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045de7a : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004534f1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427788 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042735a : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x000000000045714c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004328a7 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000042648f : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000462580 : ror al, 1 ; sti ; jmp qword ptr [rax]
0x000000000044b370 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044bc1e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000421d94 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x000000000044b371 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044bc1f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004541a8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000449e5a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042642b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x426494 ; ret
0x000000000044d243 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000440640 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004495cd : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c497 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043aaa0 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x000000000045d9b5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004410e2 : ror byte ptr [rbx + 0x2b], 1 ; ret 0x8589
0x000000000040d2ba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000439c1e : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x000000000045de8d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000045d98f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x000000000043bad9 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000043fcb0 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000439eef : ror dword ptr [rax - 0x77], -0x32 ; call 0x4261f6
0x0000000000456f7e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000044165a : ror dword ptr [rbx + 0x2b], 1 ; ret 0x8589
0x0000000000441e98 : ror dword ptr [rbx + 0x2b], 1 ; ret 0xbd81
0x000000000041dcf0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004057a8 : ror dword ptr [rdx - 0x6107b], -1 ; call 0x401a89
0x0000000000440f77 : sahf ; ret 0x8915
0x0000000000441bed : sahf ; ret 0xb915
0x000000000045e16c : sahf ; ret 0xd284
0x00000000004423c8 : sahf ; ret 0xe915
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000461749 : sar bl, cl ; jmp rsp
0x000000000045d974 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000419071 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000463a15 : sbb al, 0 ; add al, bl ; ret 0xffff
0x0000000000463a10 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; sbb al, 0 ; add al, bl ; ret 0xffff
0x00000000004623d8 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xf0000006 ; ret
0x000000000041e030 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042990d : sbb al, 0x41 ; xchg eax, ebx ; ret
0x000000000046243c : sbb al, 7 ; add byte ptr [rax], al ; add ah, al ; sti ; jmp qword ptr [rdi]
0x0000000000437652 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x0000000000437653 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000418f71 : sbb cl, ch ; ret
0x00000000004215e3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ee21 : sbb eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000044be3d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004460a3 : sbb ebp, dword ptr [rdx] ; xor dword ptr [rip - 0x49940147], ebp ; ret 0x1b2
0x000000000041d080 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000461fa9 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000042c4ec : scasb al, byte ptr [rdi] ; ret
0x000000000042c540 : scasd eax, dword ptr [rdi] ; ret
0x0000000000454210 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004543bf : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x00000000004400fa : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004400fc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044972f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000451467 : shr al, 1 ; ret
0x0000000000417f72 : shr cl, cl ; ret 0x3b
0x0000000000404bb8 : shr ecx, cl ; ret
0x0000000000461785 : sldt word ptr [rax] ; fcom st(0), st(7) ; sti ; jmp rsp
0x00000000004509d9 : stc ; in al, dx ; ret 0x8589
0x00000000004512ec : stc ; in al, dx ; ret 0xff3
0x0000000000428fec : stc ; mov cl, 0x37 ; ret 0x4589
0x000000000043d655 : stc ; ret
0x0000000000415dad : stc ; ret 0x77a8
0x0000000000462e4a : std ; jmp rbx
0x0000000000462d2a : std ; jmp rsp
0x000000000041c937 : std ; ret 0x279e
0x00000000004622ba : sti ; call qword ptr [rbx]
0x000000000046286a : sti ; call qword ptr [rdx]
0x000000000046219a : sti ; call rdi
0x000000000046229a : sti ; call rdx
0x00000000004617c2 : sti ; inc esp ; adc byte ptr [rax], al ; add byte ptr [rsp + rbx*8], bh ; sti ; jmp rsp
0x0000000000461802 : sti ; inc esp ; adc dword ptr [rax], eax ; add ah, ch ; fdivp st(3) ; jmp rsp
0x0000000000461702 : sti ; inc esp ; or eax, 0xcbec0000 ; sti ; jmp rsp
0x0000000000461782 : sti ; inc esp ; sldt word ptr [rax] ; fcom st(0), st(7) ; sti ; jmp rsp
0x0000000000462582 : sti ; jmp qword ptr [rax]
0x000000000046213a : sti ; jmp qword ptr [rbx]
0x0000000000462442 : sti ; jmp qword ptr [rdi]
0x0000000000462762 : sti ; jmp rsi
0x000000000046170a : sti ; jmp rsp
0x00000000004509d8 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000438234 : stosb byte ptr [rdi], al ; ret 0x919d
0x000000000045d973 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004261db : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000457c15 : stosd dword ptr [rdi], eax ; ret
0x000000000043acec : sub al, 0x35 ; ret 0x8941
0x000000000043ae78 : sub al, 0x35 ; ret 0xb941
0x000000000043aef3 : sub al, 0x35 ; ret 0xe941
0x000000000043cc51 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x00000000004222ff : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x000000000040b29e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c4b6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b188 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004174a5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041749b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417575 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004460a4 : sub dh, byte ptr [rcx] ; sub eax, 0xb66bfeb9 ; ret 0x1b2
0x0000000000437589 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x0000000000424bae : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x0000000000418335 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004460a6 : sub eax, 0xb66bfeb9 ; ret 0x1b2
0x000000000040278f : sub eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004261dd : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000421d9f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000460029 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004261dc : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000460028 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000429c1f : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x00000000004499f3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000451689 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004174a0 : test al, -0x7f ; ret 0x2d50
0x000000000041757a : test al, -0x7f ; ret 0xa30b
0x00000000004280d9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000456a23 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004267b7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045420d : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000041d70e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000419cd6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000420e38 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a69c : test bl, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000044e86d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045073a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000045cef1 : test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000042a020 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045ffaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043f242 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x000000000044918c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000045073b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000043e7e6 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040e31c : test byte ptr [rcx], ch ; ret 0
0x0000000000426f6f : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x000000000040278d : test byte ptr [rdi - 0x16ffffd5], bl ; ret
0x000000000045caf0 : test byte ptr [rdx - 0x16fffffa], bl ; ret
0x000000000040448e : test byte ptr [rdx - 0x16fffffc], ah ; ret 1
0x0000000000459134 : test byte ptr [rip - 0x16fffffc], al ; ret 1
0x0000000000422301 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x000000000043d421 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x0000000000448982 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004075e9 : test dh, bl ; or al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043a5f5 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000451c67 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000447a11 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040e316 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000042bd9d : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x000000000045c097 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045c057 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000045bfd2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x00000000004253c4 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000425f41 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000425ee7 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x0000000000425e1d : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042514b : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000425dd9 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000420f46 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041e76e : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000044f651 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041d32a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004320e9 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x0000000000418d4b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000419faa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000415a6a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000457f33 : test eax, 0x48fffa97 ; mov esp, ebp ; pop rbp ; ret
0x0000000000419f5f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000435047 : test esi, esp ; ret
0x00000000004588c3 : unpckhps xmm6, xmmword ptr [rsi] ; ret
0x0000000000417f6f : wait ; jge 0x417f51 ; shr cl, cl ; ret 0x3b
0x000000000041302d : wait ; jo 0x41303b ; ret
0x000000000041657c : wait ; jo 0x41658a ; ret
0x00000000004379ac : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004454a3 : wait ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000457168 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000449510 : xchg eax, ebp ; jmp 0x449661
0x000000000042889e : xchg eax, ebp ; ret
0x000000000040469d : xchg eax, ebp ; ret 0x8445
0x0000000000405398 : xchg eax, ebp ; ret 0xd284
0x000000000045a6ee : xchg eax, ebp ; ret 0xe280
0x000000000040ebb5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004154b5 : xchg eax, ebx ; ret
0x00000000004156e5 : xchg eax, ecx ; ret
0x0000000000457f34 : xchg eax, edi ; cli ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000425425 : xchg eax, edi ; ret
0x0000000000425a29 : xchg eax, edi ; ret 0xd284
0x000000000045420f : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004543be : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x0000000000461ec9 : xchg eax, edx ; cli ; call qword ptr [rcx]
0x000000000040ef35 : xchg eax, edx ; ret
0x000000000041cddf : xchg eax, edx ; ret 0x8445
0x0000000000420e3e : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x00000000004622b4 : xchg eax, esp ; add eax, 0xb9280000 ; sti ; call qword ptr [rbx]
0x0000000000452188 : xchg eax, esp ; int 6
0x00000000004200da : xchg eax, esp ; jmp 0x420b48
0x0000000000420017 : xchg eax, esp ; jmp 0x420b4a
0x0000000000419f64 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415835 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000419faf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042fc2c : xchg eax, esp ; ret
0x000000000041cdc9 : xchg eax, esp ; ret 0x8041
0x0000000000459703 : xchg eax, esp ; ret 0x8445
0x0000000000418e7e : xchg eax, esp ; ret 0xb740
0x0000000000409b7e : xchg eax, esp ; ret 0xd284
0x00000000004400fb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004487d2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000423d6a : xchg eax, r11d ; ret
0x0000000000452187 : xchg eax, r12d ; int 6
0x00000000004200d9 : xchg eax, r12d ; jmp 0x420b49
0x0000000000409bfe : xchg eax, r8d ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b48f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000045d5de : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000461789 : xlatb ; sti ; jmp rsp
0x0000000000421147 : xor al, 0x25 ; ret 0x4611
0x000000000040588c : xor al, 1 ; movzx edi, al ; call 0x401b17
0x0000000000418e79 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000461b41 : xor bh, bh ; call rsp
0x0000000000462620 : xor bl, cl ; sti ; jmp qword ptr [rdi]
0x000000000040d717 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000451463 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x000000000040d718 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045d976 : xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004487d3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000043c49b : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000448550 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429927 : xor dh, dh ; ret 0x8589
0x000000000042a4d1 : xor dh, dh ; ret 0xffbe
0x00000000004460a5 : xor dword ptr [rip - 0x49940147], ebp ; ret 0x1b2
0x0000000000438736 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000045d5dd : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000045d8e1 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043872a : xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000429926 : xor r14b, r14b ; ret 0x8589
0x0000000000429caa : xor sil, sil ; ret 0x8589
0x000000000042a4d0 : xor sil, sil ; ret 0xffbe
