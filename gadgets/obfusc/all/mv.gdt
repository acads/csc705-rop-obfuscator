0x00000000004a4b54 : adc al, -0x13 ; ret
0x000000000043aff2 : adc al, -0x77 ; test dword ptr [rsp + rdi*8 - 0x7bf00001], ebx ; ret
0x0000000000425576 : adc al, 0 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rax
0x00000000004b8de9 : adc al, 0 ; add byte ptr [rax + 0x70], bl ; clc ; call qword ptr [rax]
0x00000000004bae8c : adc al, 0x17 ; add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call qword ptr [rbx]
0x00000000004b0c5c : adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000425780 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004ba2c0 : adc bl, dl ; clc ; call qword ptr [rsi]
0x00000000004aa154 : adc byte ptr [rax - 0x75], cl ; jge 0x4aa10e ; call rax
0x00000000004aa153 : adc byte ptr [rax - 0x75], cl ; jge 0x4aa10f ; call rax
0x00000000004aa590 : adc byte ptr [rax - 0x75], cl ; jge 0x4aa54a ; call rax
0x00000000004aa58f : adc byte ptr [rax - 0x75], cl ; jge 0x4aa54b ; call rax
0x00000000004ace83 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048adfb : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ec5f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004aa7d1 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431e8e : adc byte ptr [rdi], cl ; ret
0x000000000044e36a : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000045a44c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000044f6fd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000444ec0 : adc cl, byte ptr [rax - 0x7f] ; ret 0x13
0x00000000004b2829 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x00000000004671b1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000044e154 : adc cl, byte ptr [rax - 9] ; fimul dword ptr [rax + 0x29] ; ret 0xf748
0x00000000004b9bc0 : adc dl, -0xa ; call qword ptr [rdi]
0x000000000044c67d : adc dl, byte ptr [rdx - 0x1464ade] ; ret
0x000000000043686c : adc dword ptr [rax], 0x5db80000 ; adc byte ptr [rdi], cl ; ret
0x000000000047f46b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000047cd58 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x00000000004bad0d : adc eax, 0x1ae00000 ; sti ; jmp qword ptr [rbx]
0x00000000004bad6d : adc eax, 0x1c300000 ; sti ; call rdi
0x000000000046833b : adc eax, 0x558abda1 ; ret
0x00000000004b8e19 : adc eax, 0x75c80000 ; clc ; call rax
0x0000000000499137 : adc eax, 0x85c70000 ; call 0x18499147
0x00000000004476f5 : adc eax, 0x8b000002 ; loopne 0x447733 ; push rsi ; ret 0xc750
0x000000000048fb41 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x0000000000480f88 : adc eax, 0xbafff8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000425f34 : adc eax, 0xc700000b ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x00000000004a1c62 : adc eax, 0xe9000007 ; ret 1
0x0000000000435504 : adc eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x00000000004782c3 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000458aa3 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x00000000004b8da9 : adc eax, dword ptr [rax] ; add byte ptr [rax + 0x64], cl ; clc ; call qword ptr [rax]
0x00000000004bab1d : adc eax, dword ptr [rax] ; add byte ptr [rax], ah ; adc edx, edi ; jmp qword ptr [rdi]
0x000000000046b919 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004a7e1b : adc eax, ebp ; js 0x4a7e0c ; ret
0x00000000004a4b00 : adc ebp, ebp ; ret
0x00000000004a826f : adc ebp, ecx ; ret 0
0x00000000004b901d : adc edi, edx ; jmp rax
0x00000000004bab21 : adc edx, edi ; jmp qword ptr [rdi]
0x00000000004b0d54 : adc esi, ebp ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004ba25b : add ah, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x41], al ; clc ; call qword ptr [rbx]
0x00000000004b9b3b : add ah, al ; add eax, dword ptr [rax] ; add byte ptr [rax], dh ; xchg eax, ebp ; cmc ; jmp rdx
0x00000000004bb93b : add ah, al ; and dword ptr [rax], eax ; add byte ptr [rax], ah ; ret
0x00000000004bad6b : add ah, dh ; adc eax, 0x1c300000 ; sti ; call rdi
0x00000000004ba06b : add ah, dh ; or byte ptr [rax], al ; add al, ah ; push rbp ; clc ; call rcx
0x000000000040b341 : add al, -0x2d ; mov cx, 0x5a21 ; ret 0x81c1
0x0000000000483146 : add al, -8 ; ret 0x898d
0x000000000043c855 : add al, 0 ; add al, ch ; ret
0x00000000004aa802 : add al, 0 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x0000000000485fa1 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042659e : add al, 0 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdi
0x000000000048a22f : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x0000000000451db0 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000407360 : add al, 0 ; add cl, ch ; ret 1
0x00000000004453c9 : add al, 0x13 ; xor ebp, dword ptr [rax + rbp + 0x294ce11b] ; ret 0xb849
0x00000000004bab7c : add al, 0x14 ; add byte ptr [rax], al ; loopne 0x4bab9f ; cli ; call qword ptr [rdx]
0x00000000004aff8a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004ba27c : add al, 0xb ; add byte ptr [rax], al ; ret 0xfff8
0x0000000000430b86 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004bb63f : add al, ah ; cld ; call rdx
0x00000000004ba06f : add al, ah ; push rbp ; clc ; call rcx
0x00000000004bad0f : add al, ah ; sbb bh, bl ; jmp qword ptr [rbx]
0x00000000004ba5ff : add al, ah ; stc ; call qword ptr [rdx]
0x00000000004b8eeb : add al, bh ; and edi, ecx ; jmp qword ptr [rax]
0x00000000004b9453 : add al, bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000004b9553 : add al, bh ; idiv esi ; jmp rax
0x0000000000445951 : add al, bh ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x00000000004b8f9b : add al, bh ; wait ; stc ; jmp rax
0x00000000004b94d3 : add al, bl ; jns 0x4b94d9 ; jmp rax
0x0000000000426825 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x0000000000439187 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043debe : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004476f6 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x0000000000487372 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000450315 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000476506 : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000487371 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x00000000004363b2 : add al, ch ; clc ; ret 0xfffc
0x00000000004b9323 : add al, ch ; cld ; jmp qword ptr [rax]
0x00000000004b9713 : add al, ch ; fcos ; call qword ptr [rax]
0x00000000004b8f5b : add al, ch ; jae 0x4b8f5c ; jmp rax
0x0000000000425fb5 : add al, ch ; ret
0x000000000044ae88 : add al, ch ; ret 0x355
0x00000000004b9463 : add al, cl ; and edi, esi ; jmp qword ptr [rax]
0x00000000004b906b : add al, cl ; cli ; jmp qword ptr [rax]
0x00000000004b909b : add al, cl ; cli ; jmp rax
0x00000000004b8e1b : add al, cl ; jne 0x4b8e1b ; call rax
0x00000000004ba1d7 : add al, cl ; mov bh, al ; jmp qword ptr [rax]
0x00000000004b96bb : add al, cl ; ret 0xffff
0x00000000004bb7bf : add al, dh ; push rbp ; cld ; jmp qword ptr [rcx]
0x0000000000453708 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x000000000040c26a : add bh, al ; fcom qword ptr [r14] ; ret
0x0000000000489786 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000049f14b : add bh, al ; in al, 0x3e ; ret
0x00000000004479b4 : add bh, al ; in al, 0x57 ; ret 0xc750
0x000000000040c20b : add bh, al ; in al, 0x67 ; ret 0xf3a7
0x000000000045a468 : add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004086df : add bh, al ; mov word ptr [r8], es ; ret 0x3b16
0x000000000040b375 : add bh, al ; shl byte ptr [r9], 0x5a ; ret 0xe9c1
0x00000000004aa804 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x00000000004aa199 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rsp
0x00000000004aa870 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x00000000004aa87f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x00000000004822b5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000485822 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000048639f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000048627b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x00000000004855a9 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000486237 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000047ef94 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000046db9c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000406797 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdi
0x0000000000455f6f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043dcb7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000420c7a : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x0000000000426818 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rbx]
0x000000000041f00f : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdi]
0x0000000000420013 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x0000000000425578 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rax
0x000000000042453d : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rbx
0x000000000042452e : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rcx
0x0000000000422d90 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x000000000042644c : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdx
0x00000000004217f3 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rsi
0x0000000000425cf7 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041f791 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000425a69 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x00000000004261ac : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004212f4 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rax
0x00000000004260b8 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rbx
0x000000000042601a : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rcx
0x0000000000425f80 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdi
0x0000000000422eb6 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdx
0x00000000004233b2 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rsp
0x000000000041f5a2 : add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; push qword ptr [rbp - 0x31] ; call qword ptr [rdi]
0x0000000000468179 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004782c5 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000458aa5 : add bh, al ; xchg eax, r12d ; int 6
0x00000000004b656f : add bl, dh ; ret
0x00000000004abfa9 : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000452874 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000049edc3 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x00000000004b6242 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004b64a4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004b902b : add byte ptr [rax + 0x19], ch ; cli ; jmp qword ptr [rax]
0x00000000004bb537 : add byte ptr [rax + 0x1f], bh ; cld ; jmp rsi
0x00000000004baf57 : add byte ptr [rax + 0x26], ch ; sti ; jmp qword ptr [rbx]
0x0000000000456f9d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000475ac7 : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000004b90ab : add byte ptr [rax + 0x3b], ch ; cli ; jmp qword ptr [rax]
0x00000000004b8c33 : add byte ptr [rax + 0x3c], ch ; cmc ; jmp qword ptr [rax]
0x00000000004b8f1b : add byte ptr [rax + 0x50], bh ; stc ; jmp rax
0x00000000004bb0b7 : add byte ptr [rax + 0x5d], bl ; sti ; jmp qword ptr [rax]
0x00000000004b8f2b : add byte ptr [rax + 0x5d], cl ; stc ; jmp qword ptr [rax]
0x00000000004bb2b7 : add byte ptr [rax + 0x62], bh ; sti ; call qword ptr [rdx]
0x00000000004b8dab : add byte ptr [rax + 0x64], cl ; clc ; call qword ptr [rax]
0x00000000004b8deb : add byte ptr [rax + 0x70], bl ; clc ; call qword ptr [rax]
0x0000000000435b7d : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x00000000004bb517 : add byte ptr [rax + 1], bh ; cld ; jmp qword ptr [rax]
0x000000000043bcad : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004aa801 : add byte ptr [rax + rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x00000000004ba02b : add byte ptr [rax + rcx + 0x55000000], dh ; clc ; jmp rsi
0x00000000004bb4b7 : add byte ptr [rax - 0x1f], bh ; sti ; jmp rcx
0x00000000004ba31f : add byte ptr [rax - 0x27], dh ; clc ; call qword ptr [rcx]
0x00000000004ba27f : add byte ptr [rax - 0x3e], al ; clc ; jmp qword ptr [rax]
0x00000000004ba25f : add byte ptr [rax - 0x41], al ; clc ; call qword ptr [rbx]
0x0000000000443cc3 : add byte ptr [rax - 0x47], cl ; add ebx, dword ptr [rdx - 0x38b2464a] ; ret 0x48cd
0x0000000000445546 : add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x00000000004986a4 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x00000000004b93d3 : add byte ptr [rax - 0x5c], bh ; cld ; jmp rax
0x00000000004b8bb3 : add byte ptr [rax - 0x63], cl ; hlt ; jmp qword ptr [rax]
0x0000000000406d7f : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004078c6 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4b6d
0x00000000004abfaa : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000045a64b : add byte ptr [rax - 0x75], cl ; call 0x49082fa3
0x00000000004398a0 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e8b4 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004aa721 : add byte ptr [rax - 0x75], cl ; jge 0x4aa6d3 ; call rax
0x00000000004aa846 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffb90 ; call rax
0x000000000042f998 : add byte ptr [rax - 0x75], cl ; rol r15b, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x19d
0x000000000041170a : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000406175 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004b8c63 : add byte ptr [rax - 0x7a], ch ; cmc ; jmp rax
0x00000000004a58b5 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x6b ; ret 0xb041
0x00000000004b8bf3 : add byte ptr [rax - 0xe], ch ; hlt ; jmp qword ptr [rax]
0x000000000045b235 : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x00000000004b8e9b : add byte ptr [rax - 3], bh ; clc ; jmp rax
0x00000000004ac62e : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044c403 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004bab1f : add byte ptr [rax], ah ; adc edx, edi ; jmp qword ptr [rdi]
0x000000000049f148 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x00000000004bb93f : add byte ptr [rax], ah ; ret
0x00000000004bae8a : add byte ptr [rax], al ; adc al, 0x17 ; add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call qword ptr [rbx]
0x00000000004ba2be : add byte ptr [rax], al ; adc bl, dl ; clc ; call qword ptr [rsi]
0x00000000004b9bbe : add byte ptr [rax], al ; adc dl, -0xa ; call qword ptr [rdi]
0x00000000004bb939 : add byte ptr [rax], al ; add ah, al ; and dword ptr [rax], eax ; add byte ptr [rax], ah ; ret
0x00000000004bab7a : add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; loopne 0x4baba1 ; cli ; call qword ptr [rdx]
0x00000000004ba27a : add byte ptr [rax], al ; add al, 0xb ; add byte ptr [rax], al ; ret 0xfff8
0x000000000044ae86 : add byte ptr [rax], al ; add al, ch ; ret 0x355
0x00000000004bb7bb : add byte ptr [rax], al ; add al, dh ; push rbp ; cld ; jmp qword ptr [rcx]
0x000000000040c268 : add byte ptr [rax], al ; add bh, al ; fcom qword ptr [r14] ; ret
0x0000000000489784 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000040c209 : add byte ptr [rax], al ; add bh, al ; in al, 0x67 ; ret 0xf3a7
0x000000000045a466 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004aa86e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x00000000004aa87d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x00000000004822b3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000485820 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000048639d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000486279 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x0000000000486235 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000047ef92 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000046db9a : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000042697e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x00000000004b656d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000456f9b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000475ac5 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043bcab : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000445557 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x00000000004986a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x00000000004078c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4b6d
0x000000000045a649 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49082fa5
0x000000000044e8b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004394f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000406173 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000045b233 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0x00000000004b656b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000475ac3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000047164a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000475ac1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000004b4120 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000047477e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004070bd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000454adb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b656c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b9795 : add byte ptr [rax], al ; add byte ptr [rax], bh ; mov esp, esi ; jmp qword ptr [rax]
0x00000000004a8482 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004453a6 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; ret
0x000000000044c404 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004ba02e : add byte ptr [rax], al ; add byte ptr [rbp - 8], dl ; jmp rsi
0x000000000040c3c3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x162dcc45], cl ; ret
0x0000000000409f9f : add byte ptr [rax], al ; add byte ptr [rbx + 0x212db845], cl ; pop rdx ; ret 0x89c1
0x0000000000459feb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045a189 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000047f280 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2b2de845], cl ; ret 0xe1a5
0x0000000000447bee : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000408260 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d8845], cl ; ret 0x3b16
0x000000000049edf6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x000000000046b382 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044ca6b : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000451122 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000045124e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000447738 : add byte ptr [rax], al ; add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x0000000000439610 : add byte ptr [rax], al ; add byte ptr [rbx + 0x582de445], cl ; pop rbx ; ret 0x894a
0x0000000000411e9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000489c53 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x000000000049e912 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000049edc4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000040bfb2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672de045], cl ; ret 0xf3a7
0x0000000000471462 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000489ec4 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x000000000044860c : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2dc045], cl ; ret
0x00000000004ba279 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; ret 0xfff8
0x000000000044c57a : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x000000000043927d : add byte ptr [rax], al ; add byte ptr [rbx - 0x20d23bbb], cl ; ret 0xa122
0x000000000047d753 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000487534 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000486cb4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x00000000004aa998 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004aa956 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000045226e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000040c3ef : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d233bb], cl ; ret
0x00000000004392a9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4ed23bbb], cl ; ret 0x8934
0x00000000004b0a2e : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x00000000004b368c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000487020 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x000000000049daf9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x00000000004ad028 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000044628b : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bd22fbb], cl ; cdq ; ret 0x890e
0x000000000042bc27 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72d22bbb], cl ; ret
0x00000000004379ac : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x0000000000480269 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000043e93b : add byte ptr [rax], al ; add byte ptr [rbx - 0x8d253bb], cl ; ret 0x2a50
0x000000000043e6e3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9d253bb], cl ; ret 0x2a50
0x000000000041f3c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x000000000043525b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405fd5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b567 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000490086 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040b2d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004063bc : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004b6243 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000480f8d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000442048 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040698b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004b5611 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000434d9c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044879c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000488cfa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000407736 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004b329a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000442271 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000442144 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000047ee8a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000430b88 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408534 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b503 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043a0d2 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004070bf : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004379c6 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408835 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043fd71 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043f609 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004b332c : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044a3e9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004020c3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004bb7ba : add byte ptr [rax], al ; and byte ptr [rax], r8b ; add al, dh ; push rbp ; cld ; jmp qword ptr [rcx]
0x00000000004bae8e : add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call qword ptr [rbx]
0x00000000004bab1e : add byte ptr [rax], al ; and byte ptr [rcx], dl ; cli ; jmp qword ptr [rdi]
0x00000000004b9712 : add byte ptr [rax], al ; call 0x114b96f7
0x00000000004b9322 : add byte ptr [rax], al ; call 0x214b8f93
0x0000000000445ef1 : add byte ptr [rax], al ; call 0x402124
0x000000000040663f : add byte ptr [rax], al ; call 0x4028e4
0x00000000004b964a : add byte ptr [rax], al ; call 0xffffffffd14b95d7
0x00000000004b8f5a : add byte ptr [rax], al ; call 0xffffffffe14b88d9
0x00000000004b905a : add byte ptr [rax], al ; call 0xffffffffe14b8a8b
0x00000000004b8eea : add byte ptr [rax], al ; clc ; and edi, ecx ; jmp qword ptr [rax]
0x00000000004b8daa : add byte ptr [rax], al ; clc ; call qword ptr [rax]
0x00000000004b9452 : add byte ptr [rax], al ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000004b9552 : add byte ptr [rax], al ; clc ; idiv esi ; jmp rax
0x00000000004b8f9a : add byte ptr [rax], al ; clc ; wait ; stc ; jmp rax
0x00000000004bb0b2 : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; pop rax ; pop rbp ; sti ; jmp qword ptr [rax]
0x00000000004bb2b2 : add byte ptr [rax], al ; cmp al, 0x1b ; add byte ptr [rax], al ; js 0x4bb325 ; sti ; call qword ptr [rdx]
0x00000000004bb4b2 : add byte ptr [rax], al ; cmp al, 0x1d ; add byte ptr [rax], al ; js 0x4bb4a4 ; sti ; jmp rcx
0x00000000004b9312 : add byte ptr [rax], al ; cmp byte ptr [rcx - 4], ah ; jmp rax
0x00000000004b8be2 : add byte ptr [rax], al ; cmp ch, ah ; hlt ; jmp rax
0x00000000004b8e6a : add byte ptr [rax], al ; cmp dl, ch ; clc ; jmp qword ptr [rax]
0x00000000004b8fea : add byte ptr [rax], al ; cwde ; in al, -7 ; jmp qword ptr [rax]
0x00000000004b9152 : add byte ptr [rax], al ; cwde ; sti ; call rax
0x00000000004b94d2 : add byte ptr [rax], al ; fdivr dword ptr [rcx - 2] ; jmp rax
0x00000000004bad6a : add byte ptr [rax], al ; hlt ; adc eax, 0x1c300000 ; sti ; call rdi
0x00000000004ba06a : add byte ptr [rax], al ; hlt ; or byte ptr [rax], al ; add al, ah ; push rbp ; clc ; call rcx
0x00000000004bc0e2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub dword ptr [rax], eax ; add byte ptr [rax], ch ; or edi, edi ; call rax
0x00000000004021b9 : add byte ptr [rax], al ; jmp 0x4020d9
0x000000000043a0ce : add byte ptr [rax], al ; jmp 0x43a0dd
0x000000000049ee10 : add byte ptr [rax], al ; jmp 0x49f182
0x00000000004a8413 : add byte ptr [rax], al ; jmp 0x4a8422
0x00000000004a8575 : add byte ptr [rax], al ; jmp 0x4a8584
0x00000000004a87e3 : add byte ptr [rax], al ; jmp 0x4a87f2
0x00000000004b2d7c : add byte ptr [rax], al ; jmp 0x4b2e31
0x00000000004ba31e : add byte ptr [rax], al ; jo 0x4ba300 ; clc ; call qword ptr [rcx]
0x00000000004b8e9a : add byte ptr [rax], al ; js 0x4b8ea0 ; clc ; jmp rax
0x00000000004b8f1a : add byte ptr [rax], al ; js 0x4b8f73 ; stc ; jmp rax
0x00000000004b93d2 : add byte ptr [rax], al ; js 0x4b937f ; cld ; jmp rax
0x00000000004bb2b6 : add byte ptr [rax], al ; js 0x4bb321 ; sti ; call qword ptr [rdx]
0x00000000004bb2d6 : add byte ptr [rax], al ; js 0x4bb341 ; sti ; call qword ptr [rdx]
0x00000000004bb4b6 : add byte ptr [rax], al ; js 0x4bb4a0 ; sti ; jmp rcx
0x00000000004bb516 : add byte ptr [rax], al ; js 0x4bb520 ; cld ; jmp qword ptr [rax]
0x00000000004bb536 : add byte ptr [rax], al ; js 0x4bb55e ; cld ; jmp rsi
0x00000000004ba06e : add byte ptr [rax], al ; loopne 0x4ba0cc ; clc ; call rcx
0x00000000004ba5fe : add byte ptr [rax], al ; loopne 0x4ba650 ; stc ; call qword ptr [rdx]
0x00000000004ba61e : add byte ptr [rax], al ; loopne 0x4ba670 ; stc ; call qword ptr [rdx]
0x00000000004bab7e : add byte ptr [rax], al ; loopne 0x4bab9d ; cli ; call qword ptr [rdx]
0x00000000004bad0e : add byte ptr [rax], al ; loopne 0x4bad31 ; sti ; jmp qword ptr [rbx]
0x00000000004bb63e : add byte ptr [rax], al ; loopne 0x4bb687 ; cld ; call rdx
0x00000000004ba02a : add byte ptr [rax], al ; mov ah, 8 ; add byte ptr [rax], al ; add byte ptr [rbp - 8], dl ; jmp rsi
0x00000000004ba10e : add byte ptr [rax], al ; mov al, 0x5f ; clc ; call qword ptr [rbx]
0x00000000004b9352 : add byte ptr [rax], al ; mov byte ptr [rdi - 4], ch ; jmp rax
0x00000000004b8c22 : add byte ptr [rax], al ; mov byte ptr [rsi], dh ; cmc ; jmp rax
0x000000000045b234 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004b6288 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000470cc5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000409ab1 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ab125 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000470cfa : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047112d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004713a9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000470f81 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004002fa : add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x000000000043eedf : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000045275f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044e8b3 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004394f4 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004bab1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], ah ; adc edx, edi ; jmp qword ptr [rdi]
0x00000000004bb91a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and dword ptr [rax], eax ; add byte ptr [rax], dl ; mov bl, -4 ; jmp qword ptr [rdi]
0x00000000004ba31a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x27], dh ; clc ; call qword ptr [rcx]
0x00000000004b8fda : add byte ptr [rax], al ; or ah, cl ; stc ; jmp rax
0x00000000004b901a : add byte ptr [rax], al ; or byte ptr [rbx], dl ; cli ; jmp rax
0x00000000004b9112 : add byte ptr [rax], al ; or byte ptr [rsi], bh ; sti ; call rax
0x00000000004ba2ba : add byte ptr [rax], al ; or r8d, dword ptr [rax] ; add byte ptr [rax], dl ; sar eax, cl ; call qword ptr [rsi]
0x00000000004b8dea : add byte ptr [rax], al ; pop rax ; jo 0x4b8dec ; call qword ptr [rax]
0x00000000004bb0b6 : add byte ptr [rax], al ; pop rax ; pop rbp ; sti ; jmp qword ptr [rax]
0x00000000004086c0 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b8f2a : add byte ptr [rax], al ; pop rbp ; stc ; jmp qword ptr [rax]
0x0000000000439188 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043725f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000411e9e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004ba1d2 : add byte ptr [rax], al ; pop rsp ; or al, byte ptr [rax] ; add al, cl ; mov bh, al ; jmp qword ptr [rax]
0x00000000004bb2d2 : add byte ptr [rax], al ; pop rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x62], bh ; sti ; call qword ptr [rdx]
0x00000000004b8bb2 : add byte ptr [rax], al ; popfq ; hlt ; jmp qword ptr [rax]
0x00000000004ba02f : add byte ptr [rax], al ; push rbp ; clc ; jmp rsi
0x00000000004bb512 : add byte ptr [rax], al ; pushfq ; sbb eax, 0x1780000 ; cld ; jmp qword ptr [rax]
0x00000000004bae6e : add byte ptr [rax], al ; rcr byte ptr [rdi], -5 ; call rdx
0x00000000004b656e : add byte ptr [rax], al ; ret
0x00000000004ba27e : add byte ptr [rax], al ; ret 0xfff8
0x00000000004b8d9a : add byte ptr [rax], al ; sbb byte ptr [rcx - 8], ah ; call rax
0x00000000004b9412 : add byte ptr [rax], al ; sbb byte ptr [rcx], al ; std ; jmp rax
0x00000000004b9362 : add byte ptr [rax], al ; sbb byte ptr [rsi - 4], dh ; jmp qword ptr [rax]
0x00000000004b9122 : add byte ptr [rax], al ; sub byte ptr [rax - 5], al ; call qword ptr [rax]
0x00000000004b9392 : add byte ptr [rax], al ; sub byte ptr [rcx - 4], bh ; jmp rax
0x00000000004b8e5a : add byte ptr [rax], al ; sub cl, bl ; clc ; jmp rax
0x00000000004b8eda : add byte ptr [rax], al ; test al, 0x18 ; stc ; jmp rax
0x00000000004ba5fa : add byte ptr [rax], al ; test byte ptr [rsi], cl ; add byte ptr [rax], al ; loopne 0x4ba654 ; stc ; call qword ptr [rdx]
0x00000000004bad0a : add byte ptr [rax], al ; xchg eax, esp ; adc eax, 0x1ae00000 ; sti ; jmp qword ptr [rbx]
0x00000000004b9cfe : add byte ptr [rax], al ; xor byte ptr [rax - 9], ah ; call rax
0x00000000004bad6e : add byte ptr [rax], al ; xor byte ptr [rbx + rdi*8], bl ; call rdi
0x00000000004b9523 : add byte ptr [rax], bh ; fdiv st(6), st(0) ; jmp qword ptr [rax]
0x00000000004b8be3 : add byte ptr [rax], bh ; in eax, -0xc ; jmp rax
0x00000000004b9797 : add byte ptr [rax], bh ; mov esp, esi ; jmp qword ptr [rax]
0x00000000004b9413 : add byte ptr [rax], bl ; add ebp, edi ; jmp rax
0x00000000004b8ca3 : add byte ptr [rax], bl ; fcompi st(6) ; jmp rax
0x00000000004b9363 : add byte ptr [rax], bl ; jbe 0x4b9367 ; jmp qword ptr [rax]
0x00000000004b8e5b : add byte ptr [rax], ch ; fprem ; jmp rax
0x00000000004b9393 : add byte ptr [rax], ch ; jns 0x4b9397 ; jmp rax
0x00000000004bc0e7 : add byte ptr [rax], ch ; or edi, edi ; call rax
0x00000000004b9123 : add byte ptr [rax], ch ; sti ; call qword ptr [rax]
0x00000000004b901b : add byte ptr [rax], cl ; adc edi, edx ; jmp rax
0x000000000042b06d : add byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b9423 : add byte ptr [rax], cl ; or al, 0xfffffffffffffffd ; jmp qword ptr [rax]
0x00000000004b9113 : add byte ptr [rax], cl ; sti ; call rax
0x00000000004bad6f : add byte ptr [rax], dh ; sbb al, -5 ; call rdi
0x00000000004b9b3f : add byte ptr [rax], dh ; xchg eax, ebp ; cmc ; jmp rdx
0x00000000004bb91f : add byte ptr [rax], dl ; mov bl, -4 ; jmp qword ptr [rdi]
0x00000000004ba2bf : add byte ptr [rax], dl ; sar eax, cl ; call qword ptr [rsi]
0x00000000004a8484 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004453a8 : add byte ptr [rbp + 1], cl ; ret
0x00000000004bb513 : add byte ptr [rbp + rbx + 0x1780000], bl ; cld ; jmp qword ptr [rax]
0x00000000004bb533 : add byte ptr [rbp + rbx + 0x1f780000], bh ; cld ; jmp rsi
0x00000000004bad0b : add byte ptr [rbp + rdx + 0x1ae00000], dl ; sti ; jmp qword ptr [rbx]
0x00000000004234b3 : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000044c406 : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004ba030 : add byte ptr [rbp - 8], dl ; jmp rsi
0x000000000040c3c5 : add byte ptr [rbx + 0x162dcc45], cl ; ret
0x0000000000489d68 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x000000000048a11e : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x0000000000409f56 : add byte ptr [rbx + 0x202db845], cl ; pop rdx ; ret 0x89c1
0x0000000000409fa1 : add byte ptr [rbx + 0x212db845], cl ; pop rdx ; ret 0x89c1
0x0000000000459fed : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045a18b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000047f282 : add byte ptr [rbx + 0x2b2de845], cl ; ret 0xe1a5
0x0000000000447bf0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000408262 : add byte ptr [rbx + 0x2d8845], cl ; ret 0x3b16
0x000000000049e8e8 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x000000000049edf8 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000439189 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000437260 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000451124 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000451250 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000048693f : add byte ptr [rbx + 0x462dc045], cl ; jns 0x4868f6 ; ret
0x0000000000489d81 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x000000000048a105 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x00000000004a0eac : add byte ptr [rbx + 0x4c2d8c45], cl ; pushfq ; ret
0x00000000004a0f10 : add byte ptr [rbx + 0x4d2d8c45], cl ; pushfq ; ret
0x00000000004476f8 : add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x000000000044773a : add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x0000000000439612 : add byte ptr [rbx + 0x582de445], cl ; pop rbx ; ret 0x894a
0x0000000000411e9f : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000489c55 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x000000000048a231 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000049e914 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000049edc6 : add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000040bfb4 : add byte ptr [rbx + 0x672de045], cl ; ret 0xf3a7
0x0000000000471464 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000489ec6 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000489fc0 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x0000000000409f88 : add byte ptr [rbx + 0xe2db845], cl ; jnp 0x409f18 ; ret 0x8589
0x0000000000409fd3 : add byte ptr [rbx + 0xf2db845], cl ; jnp 0x409f63 ; ret 0x8589
0x000000000044860e : add byte ptr [rbx + 0xf2dc045], cl ; ret
0x00000000004bb2b3 : add byte ptr [rbx + rbx], bh ; add byte ptr [rax], al ; js 0x4bb324 ; sti ; call qword ptr [rdx]
0x00000000004bb2d3 : add byte ptr [rbx + rbx], bl ; add byte ptr [rax + 0x62], bh ; sti ; call qword ptr [rdx]
0x00000000004ba31b : add byte ptr [rbx + rcx - 0x26900000], ah ; clc ; call qword ptr [rcx]
0x00000000004ba27b : add byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; ret 0xfff8
0x00000000004ba2bb : add byte ptr [rbx + rcx], al ; add byte ptr [rax], dl ; sar eax, cl ; call qword ptr [rsi]
0x00000000004bab1b : add byte ptr [rbx + rdx + 0x11200000], ah ; cli ; jmp qword ptr [rdi]
0x000000000044c57c : add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x00000000004bb4b3 : add byte ptr [rbx - 0x1e880000], bh ; sti ; jmp rcx
0x0000000000411852 : add byte ptr [rbx - 0x1ed223bb], cl ; jg 0x411810 ; ret
0x00000000004117e4 : add byte ptr [rbx - 0x1fd223bb], cl ; jg 0x4117a2 ; ret
0x000000000043927f : add byte ptr [rbx - 0x20d23bbb], cl ; ret 0xa122
0x000000000047d755 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040967c : add byte ptr [rbx - 0x2534b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000047d70a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000409bc2 : add byte ptr [rbx - 0x2934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000487536 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000486cb6 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x00000000004aa99a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004aa958 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000452270 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000040c3f1 : add byte ptr [rbx - 0x3d233bb], cl ; ret
0x00000000004574b5 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000451db2 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004572f3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x00000000004392ab : add byte ptr [rbx - 0x4ed23bbb], cl ; ret 0x8934
0x00000000004b0a30 : add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x00000000004b368e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000487374 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000487022 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000489489 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000049dafb : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x00000000004ad02a : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000044628d : add byte ptr [rbx - 0x6bd22fbb], cl ; cdq ; ret 0x890e
0x000000000044624b : add byte ptr [rbx - 0x6cd22fbb], cl ; cdq ; ret 0x890e
0x0000000000489447 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000049dab0 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000040c481 : add byte ptr [rbx - 0x6fd233bb], cl ; mov dh, 3 ; ret
0x000000000040c341 : add byte ptr [rbx - 0x70d233bb], cl ; mov dh, 3 ; ret
0x000000000042be60 : add byte ptr [rbx - 0x71d22bbb], cl ; ret
0x000000000042bc29 : add byte ptr [rbx - 0x72d22bbb], cl ; ret
0x0000000000409ab2 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004ab126 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004379ae : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x00000000004b6289 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000048026b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000043e93d : add byte ptr [rbx - 0x8d253bb], cl ; ret 0x2a50
0x000000000043e6e5 : add byte ptr [rbx - 0x9d253bb], cl ; ret 0x2a50
0x0000000000470473 : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b9360 : add byte ptr [rbx], ch ; add byte ptr [rax], al ; sbb byte ptr [rsi - 4], dh ; jmp qword ptr [rax]
0x000000000041f3ca : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x000000000043525d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405fd7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b569 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000435b80 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040b2d8 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004bc0e3 : add byte ptr [rcx + rbp], ch ; add byte ptr [rax], ch ; or edi, edi ; call rax
0x00000000004bb0b3 : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; sti ; jmp qword ptr [rax]
0x00000000004ba10b : add byte ptr [rcx + rcx + 0x5fb00000], dl ; clc ; call qword ptr [rbx]
0x00000000004bb91b : add byte ptr [rcx - 0x4cf00000], ah ; cld ; jmp qword ptr [rdi]
0x00000000004ace80 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x0000000000488d32 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000445398 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; ret
0x000000000049a434 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x0000000000449029 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004028a8 : add byte ptr [rcx], al ; ret
0x00000000004063be : add byte ptr [rcx], al ; ret 0x6348
0x00000000004b6245 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000480f8f : add byte ptr [rcx], bh ; ret 0xf40
0x00000000004b8ee8 : add byte ptr [rcx], bl ; add byte ptr [rax], al ; clc ; and edi, ecx ; jmp qword ptr [rax]
0x000000000044204a : add byte ptr [rcx], ch ; ret 0x5589
0x000000000040698d : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000490d5b : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004bae8b : add byte ptr [rdi + rdx], dl ; add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call qword ptr [rbx]
0x00000000004713da : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004b5613 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000434d9e : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044879e : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000488cfc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000407738 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004b329c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000442273 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000442146 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000047ee8c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000430b8a : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408536 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b505 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004b8e68 : add byte ptr [rdi], dl ; add byte ptr [rax], al ; cmp dl, ch ; clc ; jmp qword ptr [rax]
0x00000000004ba1d3 : add byte ptr [rdx + rcx], bl ; add al, cl ; mov bh, al ; jmp qword ptr [rax]
0x00000000004b0785 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b8f28 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; pop rbp ; stc ; jmp qword ptr [rax]
0x00000000004b9320 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; call 0x214b8f95
0x00000000004b8fe8 : add byte ptr [rip - 0x1b680000], bl ; stc ; jmp qword ptr [rax]
0x00000000004b93e0 : add byte ptr [rip - 0x25480000], ch ; cld ; jmp qword ptr [rax]
0x000000000049bb1d : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x00000000004b8bf0 : add byte ptr [rip - 0xd980000], cl ; hlt ; jmp qword ptr [rax]
0x000000000045002d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004ba61b : add byte ptr [rsi + rcx + 0x49e00000], ah ; stc ; call qword ptr [rdx]
0x00000000004ba5fb : add byte ptr [rsi + rcx + 0x49e00000], al ; stc ; call qword ptr [rdx]
0x000000000043e5d1 : add byte ptr [rsi - 0x10], ah ; ret 0x458b
0x000000000043e82f : add byte ptr [rsi - 0x10], ah ; ret 0x8589
0x00000000004bab7b : add byte ptr [rsp + rdx], al ; add byte ptr [rax], al ; loopne 0x4baba0 ; cli ; call qword ptr [rdx]
0x000000000042d3c8 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004b9451 : add byte ptr cs:[rax], al ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000487533 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x00000000004aa86d : add byte ptr gs:[rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x00000000004b9649 : add byte ptr ss:[rax], al ; call 0xffffffffd14b95d8
0x00000000004979e8 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x00000000004682ac : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043a0d4 : add cl, ch ; ret
0x0000000000411c68 : add cl, ch ; ret 0
0x0000000000407362 : add cl, ch ; ret 1
0x0000000000492fb9 : add cl, ch ; ret 2
0x0000000000411c65 : add dword ptr [eax], eax ; add cl, ch ; ret 0
0x000000000045a701 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000044a10a : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac35e : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x000000000047b49d : add dword ptr [rax - 0x75], ecx ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x00000000004479b2 : add dword ptr [rax], eax ; add bh, al ; in al, 0x57 ; ret 0xc750
0x000000000045639e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000406d7d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040663d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x4028e6
0x00000000004234b1 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000487be9 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000446249 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6cd22fbb], cl ; cdq ; ret 0x890e
0x000000000042be5e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x71d22bbb], cl ; ret
0x00000000004a592c : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000411c66 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000000000044f2a4 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004400cf : add dword ptr [rax], eax ; pop rbp ; ret
0x000000000045a3af : add dword ptr [rax], ecx ; ret 0x840
0x000000000042a9e5 : add dword ptr [rax], ecx ; ret 0x844
0x0000000000426c2f : add dword ptr [rax], esp ; ret 0x840
0x00000000004932e1 : add dword ptr [rax], esp ; ret 0xd108
0x000000000042d3c5 : add dword ptr [rcx + 0x2ef9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000440155 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000049eff4 : add dword ptr [rcx], 0x3eb80000 ; ret
0x0000000000405ff0 : add dword ptr [rdi + rcx - 0x4a], eax ; ret
0x00000000004751d6 : add dword ptr [rdi], ecx ; lahf ; ret
0x000000000043f2db : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d89 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000041092f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043e524 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x38 ; pop rbp ; ret
0x0000000000426c8d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000480fb7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000486888 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004b5792 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000407857 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410cea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000429aa5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000042ae30 : add dword ptr [rip + 0x6b80000], eax ; stosd dword ptr [rdi], eax ; ret
0x00000000004028a4 : add eax, 0x2babee ; add ebx, esi ; ret
0x000000000042ae31 : add eax, 0x6b80000 ; stosd dword ptr [rdi], eax ; ret
0x000000000042ad49 : add eax, 0xb9b80000 ; int1 ; push rbx ; mov cl, -0x47 ; ret 0x2cb
0x0000000000400335 : add eax, 0xd0a4f270 ; ret
0x00000000004b1ce5 : add eax, 0xe9000004 ; ret 1
0x00000000004a381a : add eax, 0xf7b80000 ; ret
0x000000000043dcb5 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000042667a : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004b9b3d : add eax, dword ptr [rax] ; add byte ptr [rax], dh ; xchg eax, ebp ; cmc ; jmp rdx
0x00000000004821e4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000049daae : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000408242 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004396e3 : add eax, eax ; jnp 0x4396a6 ; pop rax ; pop rbx ; ret 0x8a4a
0x000000000040286b : add eax, edx ; sar rax, 1 ; jne 0x40287c ; pop rbp ; ret
0x00000000004b9415 : add ebp, edi ; jmp rax
0x0000000000443cb3 : add ebx, dword ptr [rdx - 0x38b2464a] ; ret 0x48cd
0x00000000004028a9 : add ebx, esi ; ret
0x000000000049a34e : add ecx, eax ; mov rsi, rcx ; call 0x486657
0x0000000000425fb2 : add edi, dword ptr [rcx + 0x4b] ; add al, ch ; ret
0x00000000004b0b67 : add edi, eax ; in al, -0x55 ; ret
0x0000000000456219 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000420800 : add edi, eax ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x000000000043a213 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b6b : add esp, 0x10 ; pop rbp ; ret
0x0000000000449027 : add esp, 0x100 ; pop rbp ; ret
0x000000000043ec5d : add esp, 0x110 ; pop rbp ; ret
0x000000000042babc : add esp, 0x120 ; pop rbp ; ret
0x000000000049c8f9 : add esp, 0x130 ; pop rbp ; ret
0x00000000004422f9 : add esp, 0x1360 ; pop rbp ; ret
0x0000000000452518 : add esp, 0x140 ; pop rbp ; ret
0x0000000000443f70 : add esp, 0x150 ; pop rbp ; ret
0x000000000044753c : add esp, 0x158 ; pop rbp ; ret
0x0000000000456f73 : add esp, 0x160 ; pop rbp ; ret
0x00000000004086bc : add esp, 0x170 ; pop rbp ; ret
0x00000000004a04ca : add esp, 0x18 ; pop rbp ; ret
0x00000000004b660b : add esp, 0x18 ; ret
0x0000000000455738 : add esp, 0x180 ; pop rbp ; ret
0x000000000044369a : add esp, 0x190 ; pop rbp ; ret
0x0000000000458b35 : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004563b9 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000459e0f : add esp, 0x1d0 ; pop rbp ; ret
0x000000000047b572 : add esp, 0x1f0 ; pop rbp ; ret
0x000000000040c253 : add esp, 0x20 ; pop rbp ; ret
0x00000000004b0783 : add esp, 0x200 ; pop rbp ; ret
0x0000000000412fc0 : add esp, 0x220 ; pop rbp ; ret
0x000000000044a9ae : add esp, 0x230 ; pop rbp ; ret
0x000000000046ecdd : add esp, 0x240 ; pop rbp ; ret
0x00000000004107d8 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000408838 : add esp, 0x30 ; pop rbp ; ret
0x0000000000470471 : add esp, 0x300 ; pop rbp ; ret
0x000000000048adf9 : add esp, 0x310 ; pop rbp ; ret
0x00000000004a3bee : add esp, 0x320 ; pop rbp ; ret
0x000000000043e529 : add esp, 0x38 ; pop rbp ; ret
0x0000000000493141 : add esp, 0x390 ; pop rbp ; ret
0x000000000040b700 : add esp, 0x3b0 ; pop rbp ; ret
0x0000000000426e2c : add esp, 0x40 ; pop rbp ; ret
0x00000000004b0189 : add esp, 0x440 ; pop rbp ; ret
0x0000000000402b24 : add esp, 0x50 ; pop rbp ; ret
0x000000000048621d : add esp, 0x590 ; pop rbp ; ret
0x0000000000480390 : add esp, 0x60 ; pop rbp ; ret
0x000000000040f474 : add esp, 0x620 ; pop rbp ; ret
0x000000000047934f : add esp, 0x660 ; pop rbp ; ret
0x000000000044a3ec : add esp, 0x70 ; pop rbp ; ret
0x00000000004aa7cf : add esp, 0x710 ; pop rbp ; ret
0x0000000000437c68 : add esp, 0x80 ; pop rbp ; ret
0x000000000042b06b : add esp, 0x800 ; pop rbp ; ret
0x0000000000439f9f : add esp, 0x88 ; pop rbp ; ret
0x000000000043fbcd : add esp, 0x90 ; pop rbp ; ret
0x0000000000490d59 : add esp, 0x900 ; pop rbp ; ret
0x000000000049f13d : add esp, 0x98 ; pop rbp ; ret
0x000000000043f901 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004111b8 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000488c37 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000499f8b : add esp, 0xbb0 ; pop rbp ; ret
0x00000000004488ec : add esp, 0xc0 ; pop rbp ; ret
0x0000000000411e9a : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x000000000044db08 : add esp, 0xd0 ; pop rbp ; ret
0x000000000044ee27 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042c1d3 : add esp, 0xf0 ; pop rbp ; ret
0x000000000045c233 : add esp, 8 ; pop rbp ; ret
0x00000000004020c6 : add esp, 8 ; ret
0x00000000004bb519 : add esp, edi ; jmp qword ptr [rax]
0x00000000004400ce : add qword ptr [rax], rax ; pop rbp ; ret
0x0000000000425fb4 : add r8b, bpl ; ret
0x000000000043dcb4 : add rax, qword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000040286a : add rax, rdx ; sar rax, 1 ; jne 0x40287d ; pop rbp ; ret
0x000000000049a34d : add rcx, rax ; mov rsi, rcx ; call 0x486658
0x000000000043a212 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b6a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000449026 : add rsp, 0x100 ; pop rbp ; ret
0x000000000043ec5c : add rsp, 0x110 ; pop rbp ; ret
0x000000000042babb : add rsp, 0x120 ; pop rbp ; ret
0x000000000049c8f8 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004422f8 : add rsp, 0x1360 ; pop rbp ; ret
0x0000000000452517 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000443f6f : add rsp, 0x150 ; pop rbp ; ret
0x000000000044753b : add rsp, 0x158 ; pop rbp ; ret
0x0000000000456f72 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004086bb : add rsp, 0x170 ; pop rbp ; ret
0x00000000004a04c9 : add rsp, 0x18 ; pop rbp ; ret
0x00000000004b660a : add rsp, 0x18 ; ret
0x0000000000455737 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000443699 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000458b34 : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004563b8 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000459e0e : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000047b571 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000040c252 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004b0782 : add rsp, 0x200 ; pop rbp ; ret
0x0000000000412fbf : add rsp, 0x220 ; pop rbp ; ret
0x000000000044a9ad : add rsp, 0x230 ; pop rbp ; ret
0x000000000046ecdc : add rsp, 0x240 ; pop rbp ; ret
0x00000000004107d7 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000408837 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000470470 : add rsp, 0x300 ; pop rbp ; ret
0x000000000048adf8 : add rsp, 0x310 ; pop rbp ; ret
0x00000000004a3bed : add rsp, 0x320 ; pop rbp ; ret
0x000000000043e528 : add rsp, 0x38 ; pop rbp ; ret
0x0000000000493140 : add rsp, 0x390 ; pop rbp ; ret
0x000000000040b6ff : add rsp, 0x3b0 ; pop rbp ; ret
0x0000000000426e2b : add rsp, 0x40 ; pop rbp ; ret
0x00000000004b0188 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000402b23 : add rsp, 0x50 ; pop rbp ; ret
0x000000000048621c : add rsp, 0x590 ; pop rbp ; ret
0x000000000048038f : add rsp, 0x60 ; pop rbp ; ret
0x000000000040f473 : add rsp, 0x620 ; pop rbp ; ret
0x000000000047934e : add rsp, 0x660 ; pop rbp ; ret
0x000000000044a3eb : add rsp, 0x70 ; pop rbp ; ret
0x00000000004aa7ce : add rsp, 0x710 ; pop rbp ; ret
0x0000000000437c67 : add rsp, 0x80 ; pop rbp ; ret
0x000000000042b06a : add rsp, 0x800 ; pop rbp ; ret
0x0000000000439f9e : add rsp, 0x88 ; pop rbp ; ret
0x000000000043fbcc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000490d58 : add rsp, 0x900 ; pop rbp ; ret
0x000000000049f13c : add rsp, 0x98 ; pop rbp ; ret
0x000000000043f900 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004111b7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000488c36 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000499f8a : add rsp, 0xbb0 ; pop rbp ; ret
0x00000000004488eb : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000411e99 : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x000000000044db07 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044ee26 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042c1d2 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000045c232 : add rsp, 8 ; pop rbp ; ret
0x00000000004020c5 : add rsp, 8 ; ret
0x00000000004a1729 : and ah, dh ; ret 0x89c5
0x00000000004a21d7 : and ah, dh ; ret 0xb9c5
0x00000000004a23bd : and ah, dh ; ret 0xe9c5
0x000000000048b1fd : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004b624d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000407856 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410ce9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a6ff : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004bb7bd : and byte ptr [rax], al ; add al, dh ; push rbp ; cld ; jmp qword ptr [rcx]
0x00000000004b90a9 : and byte ptr [rax], al ; add byte ptr [rax + 0x3b], ch ; cli ; jmp qword ptr [rax]
0x0000000000454ada : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000049de86 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000049e076 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004bb7bc : and byte ptr [rax], r8b ; add al, dh ; push rbp ; cld ; jmp qword ptr [rcx]
0x00000000004acb90 : and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x00000000004354d0 : and byte ptr [rbp - 0x30c23f47], dl ; ret
0x00000000004a3bf0 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b0c5e : and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x00000000004a3973 : and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x00000000004bae90 : and byte ptr [rcx], 0xfb ; call qword ptr [rbx]
0x000000000040c207 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add bh, al ; in al, 0x67 ; ret 0xf3a7
0x000000000042babe : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004bab20 : and byte ptr [rcx], dl ; cli ; jmp qword ptr [rdi]
0x0000000000412fc2 : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047ff9b : and byte ptr [rsi + 0x58], ah ; jb 0x47ffd2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040f476 : and byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b0c5d : and byte ptr ds:[rcx - 0x7bf03bbb], cl ; ret 0
0x00000000004ac35c : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004028c6 : and dh, cl ; imul eax, dword ptr [rax], 0x48 ; mov ebp, esp ; call rax
0x000000000045a6fe : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004248a4 : and dword ptr [rax], eax ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x00000000004bb93d : and dword ptr [rax], eax ; add byte ptr [rax], ah ; ret
0x00000000004b9121 : and dword ptr [rax], eax ; add byte ptr [rax], ch ; sti ; call qword ptr [rax]
0x00000000004b9111 : and dword ptr [rax], eax ; add byte ptr [rax], cl ; sti ; call rax
0x00000000004bb91d : and dword ptr [rax], eax ; add byte ptr [rax], dl ; mov bl, -4 ; jmp qword ptr [rdi]
0x0000000000406037 : and eax, 0x4b6e2d ; call 0x402307
0x00000000004260e9 : and eax, 0x4b7934 ; call 0x402307
0x000000000046fcde : and eax, 0x558b48fb ; mov byte ptr [rax - 0x7f], cl ; ret 0x13
0x00000000004475df : and eax, 0x6bd8e8 ; pop rbp ; ret
0x00000000004674e1 : and eax, 0x75b4b9d3 ; ret
0x0000000000421c74 : and eax, 0xb12da1b9 ; ret
0x0000000000420224 : and eax, 0xb8000068 ; ret 0x3ff
0x000000000041f47b : and eax, 0xb841ff3d ; jne 0x41f458 ; call qword ptr [rdi]
0x00000000004222b7 : and eax, 0xb9b74926 ; jmp rsi
0x0000000000426824 : and eax, 0xc7000002 ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x00000000004896a2 : and eax, 0xdab0b9fa ; ret
0x00000000004aa80d : and eax, dword ptr [rbx - 0x17] ; ret 0
0x00000000004a8b68 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a867f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004bae91 : and ebx, edi ; call qword ptr [rbx]
0x000000000042af95 : and ecx, dword ptr [rbx - 0x47] ; ret
0x00000000004b8eed : and edi, ecx ; jmp qword ptr [rax]
0x00000000004b9465 : and edi, esi ; jmp qword ptr [rax]
0x00000000004a8c2a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000420f14 : and esi, dword ptr [rbx - 0x47] ; ret
0x00000000004a16de : and esi, esp ; ret 0x89c5
0x00000000004ac35b : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004aa7cd : call 0x110f2923
0x00000000004b9714 : call 0x114b96f5
0x0000000000437557 : call 0x1243755b
0x0000000000437592 : call 0x12437596
0x000000000049a665 : call 0x1249a66b
0x00000000004377c7 : call 0x144377cb
0x0000000000430bc1 : call 0x18430bc5
0x000000000049913c : call 0x18499142
0x00000000004b9324 : call 0x214b8f91
0x000000000049a6d7 : call 0x2249a6dd
0x0000000000434d28 : call 0x24434d2c
0x00000000004358c9 : call 0x244358cd
0x0000000000435a1c : call 0x24435a20
0x00000000004361bc : call 0x244361c0
0x00000000004363c1 : call 0x244363c5
0x0000000000436592 : call 0x24436596
0x000000000043679d : call 0x244367a1
0x0000000000437044 : call 0x24437048
0x0000000000437455 : call 0x28437459
0x000000000049a50e : call 0x2849a514
0x0000000000476502 : call 0x30a0df2
0x0000000000425dec : call 0x4020f2
0x000000000048a925 : call 0x4020f8
0x00000000004b03bb : call 0x402119
0x0000000000445ea1 : call 0x402122
0x0000000000405b9e : call 0x402129
0x0000000000425edb : call 0x402132
0x0000000000445e95 : call 0x402162
0x000000000040603c : call 0x402302
0x00000000004a78c1 : call 0x402308
0x00000000004363b3 : call 0x4026b2
0x000000000042f684 : call 0x4026b9
0x0000000000406641 : call 0x4028e2
0x000000000040ad5b : call 0x40b8c6
0x000000000042334d : call 0x42b346
0x0000000000437656 : call 0x43765e
0x000000000042f624 : call 0x43ef27
0x0000000000480395 : call 0x480459
0x000000000049a353 : call 0x486652
0x000000000045a64f : call 0x49082f9f
0x000000000045a64e : call 0x49082fa0
0x000000000045a69d : call 0x49082fed
0x000000000045a69c : call 0x49082fee
0x0000000000490773 : call 0x49c9a2
0x0000000000490772 : call 0x49c9a3
0x0000000000476503 : call 0x4a27b2
0x000000000049f147 : call 0x4a5155
0x000000000044a8e2 : call 0xffffffff8a24fe7b
0x000000000047f285 : call 0xffffffffa60a1dba
0x000000000047f284 : call 0xffffffffa60a1dbb
0x000000000048260d : call 0xffffffffaca8e841
0x000000000048260c : call 0xffffffffaca8e842
0x00000000004355f9 : call 0xffffffffc1435601
0x0000000000435f8c : call 0xffffffffc4435f91
0x00000000004367df : call 0xffffffffc44367e4
0x00000000004367ee : call 0xffffffffc44367f3
0x00000000004b964c : call 0xffffffffd14b95d5
0x0000000000436f89 : call 0xffffffffd7436f8d
0x00000000004b8f5c : call 0xffffffffe14b88d7
0x00000000004b905c : call 0xffffffffe14b8a89
0x0000000000435e41 : call 0xffffffffe2435e45
0x000000000049a45e : call 0xffffffffe349a464
0x0000000000435479 : call 0xffffffffe443547d
0x000000000049a6e6 : call 0xffffffffe549a6ec
0x000000000046af99 : call 0xffffffffe90938e9
0x000000000046af98 : call 0xffffffffe90938ea
0x0000000000478273 : call 0xfffffffffea40845
0x0000000000478272 : call 0xfffffffffea40846
0x000000000040677f : call 0xffffffffff94ed51
0x000000000040677e : call 0xffffffffff94ed52
0x00000000004433bb : call 0xffffffffffb4b98d
0x00000000004433ba : call 0xffffffffffb4b98e
0x00000000004b6549 : call qword ptr [r12 + rbx*8]
0x0000000000420c80 : call qword ptr [rax]
0x000000000042681e : call qword ptr [rbx]
0x0000000000435282 : call qword ptr [rcx]
0x0000000000417e40 : call qword ptr [rdi]
0x0000000000420019 : call qword ptr [rdx]
0x000000000040ea28 : call qword ptr [rsi]
0x00000000004b654a : call qword ptr [rsp + rbx*8]
0x000000000040e79b : call qword ptr [rsp + rsi*2 - 0x3d9a8047]
0x00000000004aa072 : call r8
0x00000000004028cd : call rax
0x000000000040f4cb : call rbx
0x0000000000424534 : call rcx
0x0000000000403e7a : call rdi
0x0000000000426452 : call rdx
0x0000000000413129 : call rsi
0x000000000043d86c : call rsp
0x00000000004b0d53 : cdq ; adc esi, ebp ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000446251 : cdq ; ret 0x890e
0x00000000004461bf : cdq ; ret 0x8b0e
0x0000000000471130 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000443f6e : clc ; add rsp, 0x150 ; pop rbp ; ret
0x000000000045340b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x00000000004b43c5 : clc ; add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004a237d : clc ; add rsp, 0x1f0 ; pop rbp ; ret
0x000000000043e105 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004b0187 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004b2e14 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000047f6f7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043fbcb : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000043f8ff : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004111b6 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000480961 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000044ee25 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004b8eec : clc ; and edi, ecx ; jmp qword ptr [rax]
0x00000000004b8dae : clc ; call qword ptr [rax]
0x00000000004ba112 : clc ; call qword ptr [rbx]
0x00000000004ba322 : clc ; call qword ptr [rcx]
0x00000000004ba2c2 : clc ; call qword ptr [rsi]
0x00000000004b8d9e : clc ; call rax
0x00000000004ba072 : clc ; call rcx
0x00000000004b9710 : clc ; cmp dword ptr [rax], eax ; add al, ch ; fcos ; call qword ptr [rax]
0x00000000004b9454 : clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000420665 : clc ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0xcfe8
0x00000000004b9554 : clc ; idiv esi ; jmp rax
0x00000000004b8e6e : clc ; jmp qword ptr [rax]
0x00000000004b8e5e : clc ; jmp rax
0x00000000004ba032 : clc ; jmp rsi
0x000000000040286f : clc ; jne 0x402878 ; pop rbp ; ret
0x00000000004a8b69 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a8933 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004ab977 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004b2c3b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000459ece : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000411a30 : clc ; mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044efeb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044f00b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000047155b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047153b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004a8381 : clc ; mov rax, r8 ; pop rbp ; ret
0x00000000004398a4 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410d17 : clc ; pop rbp ; ret
0x000000000042d798 : clc ; pop rbx ; pop rbp ; ret
0x00000000004b8e16 : clc ; push qword ptr [rax - 0x37ffffeb] ; jne 0x4b8e20 ; call rax
0x00000000004b8dd6 : clc ; push qword ptr [rax - 0x47ffffec] ; push -8 ; call rax
0x00000000004b8de6 : clc ; push rax ; adc al, 0 ; add byte ptr [rax + 0x70], bl ; clc ; call qword ptr [rax]
0x00000000004b8da6 : clc ; push rax ; adc eax, dword ptr [rax] ; add byte ptr [rax + 0x64], cl ; clc ; call qword ptr [rax]
0x000000000045da6d : clc ; ret 0x77a8
0x0000000000483147 : clc ; ret 0x898d
0x0000000000484ff7 : clc ; ret 0xb28d
0x00000000004363b4 : clc ; ret 0xfffc
0x000000000049a354 : clc ; ret 0xfffe
0x00000000004b8f9c : clc ; wait ; stc ; jmp rax
0x00000000004a8680 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000402b97 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004a04c8 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000426e2a : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004b09a5 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044648a : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000482f8e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004ab8fd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004bb662 : cld ; call qword ptr [rdx]
0x00000000004bb642 : cld ; call rdx
0x00000000004b931e : cld ; inc dword ptr [rax] ; sub al, byte ptr [rax] ; add al, ch ; cld ; jmp qword ptr [rax]
0x00000000004b93de : cld ; inc dword ptr [rax] ; sub eax, 0xdab80000 ; cld ; jmp qword ptr [rax]
0x00000000004b935e : cld ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; jbe 0x4b936c ; jmp qword ptr [rax]
0x00000000004b93ce : cld ; inc eax ; sub al, 0 ; add byte ptr [rax - 0x5c], bh ; cld ; jmp rax
0x00000000004b940e : cld ; inc eax ; sub eax, 0x1180000 ; std ; jmp rax
0x00000000004b938e : cld ; inc eax ; sub eax, dword ptr [rax] ; add byte ptr [rax], ch ; jns 0x4b939c ; jmp rax
0x0000000000447c1f : cld ; jmp 0x447c8c
0x0000000000447c1e : cld ; jmp 0x447c8d
0x00000000004b9326 : cld ; jmp qword ptr [rax]
0x00000000004bb7c2 : cld ; jmp qword ptr [rcx]
0x00000000004bb922 : cld ; jmp qword ptr [rdi]
0x00000000004b9316 : cld ; jmp rax
0x00000000004bb53a : cld ; jmp rsi
0x0000000000409ab5 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c3f6 : cld ; ret
0x00000000004574ba : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000457c0b : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000490085 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004b3f90 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004bab82 : cli ; call qword ptr [rdx]
0x00000000004b90a6 : cli ; inc dword ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rax + 0x3b], ch ; cli ; jmp qword ptr [rax]
0x00000000004b9016 : cli ; inc eax ; sbb eax, 0x13080000 ; cli ; jmp rax
0x00000000004b902e : cli ; jmp qword ptr [rax]
0x00000000004bab22 : cli ; jmp qword ptr [rdi]
0x00000000004b901e : cli ; jmp rax
0x0000000000425144 : cli ; loope 0x425134 ; mov esi, 0xffffff35 ; jmp qword ptr [rcx]
0x000000000048948e : cli ; mov cl, 0x37 ; ret 0x4589
0x000000000048971a : cli ; mov cl, 0x37 ; ret 0x94b9
0x000000000048978a : cli ; mov cl, 0x37 ; ret 0xd3e9
0x000000000047ffa0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044c43c : cli ; ret
0x0000000000471a4c : cmc ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004b624c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004b0d55 : cmc ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004b8c1e : cmc ; inc eax ; or eax, 0x36880000 ; cmc ; jmp rax
0x00000000004a6578 : cmc ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x000000000048efa6 : cmc ; jmp 0x491162
0x00000000004b8c36 : cmc ; jmp qword ptr [rax]
0x00000000004b8c26 : cmc ; jmp rax
0x00000000004b9b42 : cmc ; jmp rdx
0x000000000040c99b : cmc ; ret
0x000000000047ed0b : cmc ; ret 0x4f0b
0x00000000004b8c35 : cmp al, -0xb ; jmp qword ptr [rax]
0x0000000000422d8e : cmp al, 0 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x00000000004bb0b4 : cmp al, 0x19 ; add byte ptr [rax], al ; pop rax ; pop rbp ; sti ; jmp qword ptr [rax]
0x00000000004bb2b4 : cmp al, 0x1b ; add byte ptr [rax], al ; js 0x4bb323 ; sti ; call qword ptr [rdx]
0x00000000004bb4b4 : cmp al, 0x1d ; add byte ptr [rax], al ; js 0x4bb4a2 ; sti ; jmp rcx
0x0000000000425fb0 : cmp al, 0x25 ; add edi, dword ptr [rcx + 0x4b] ; add al, ch ; ret
0x0000000000406d82 : cmp al, 0x25 ; ret
0x0000000000405ba5 : cmp al, 0x25 ; ret 0x4b6d
0x000000000043eedd : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004906e7 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004b96b9 : cmp byte ptr [rax], al ; add al, cl ; ret 0xffff
0x00000000004b22ac : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000048d228 : cmp byte ptr [rbx], dl ; ret
0x00000000004b9314 : cmp byte ptr [rcx - 4], ah ; jmp rax
0x000000000041f47a : cmp byte ptr [rip - 0x47be00c3], ah ; jne 0x41f459 ; call qword ptr [rdi]
0x0000000000445e8f : cmp byte ptr [rsi + 0x4b744c], bh ; call 0x402168
0x00000000004b8be4 : cmp ch, ah ; hlt ; jmp rax
0x00000000004acb8e : cmp cl, byte ptr [rdx] ; and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000047eea1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004b8e6c : cmp dl, ch ; clc ; jmp qword ptr [rax]
0x0000000000452542 : cmp dword ptr [rax - 0x75], ecx ; jne 0x452524 ; call rax
0x00000000004a6792 : cmp dword ptr [rax - 0x75], ecx ; xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000004b9711 : cmp dword ptr [rax], eax ; add al, ch ; fcos ; call qword ptr [rax]
0x000000000048b556 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000048dc38 : cmp dword ptr [rbx], edx ; ret
0x000000000044b41b : cmp dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x0000000000420010 : cmp dword ptr [rdx], ebp ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x00000000004101ce : cmp dword ptr [rsi - 0x47], eax ; ret
0x0000000000449369 : cmp eax, 0x45c6a0d8 ; ret
0x00000000004394f2 : cmp eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000041f47c : cmp eax, 0x75b841ff ; iretd ; call qword ptr [rdi]
0x0000000000480502 : cmp eax, 0x8945c621 ; ret 0x8141
0x000000000041f00c : cmp eax, 0xc700007a ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdi]
0x000000000040282d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402840 ; pop rbp ; ret
0x0000000000422eb4 : cmp eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdx
0x0000000000480caf : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042c9bb : cmp ebp, dword ptr [rdi + 0x176acdb9] ; ret
0x0000000000475021 : cmp ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xb640
0x000000000048ab55 : cmp ecx, ebp ; ret 3
0x00000000004b90ad : cmp edi, edx ; jmp qword ptr [rax]
0x0000000000468337 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004248a3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and dword ptr [rax], eax ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x00000000004b9455 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000004868f6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004b3db2 : cwde ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004896a0 : cwde ; and eax, 0xdab0b9fa ; ret
0x00000000004b8fec : cwde ; in al, -7 ; jmp qword ptr [rax]
0x00000000004b2a16 : cwde ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000049076f : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x49c9a6
0x000000000049076e : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x49c9a7
0x000000000047bd4f : cwde ; ret
0x00000000004b9154 : cwde ; sti ; call rax
0x0000000000406d43 : dec bl ; ret 0x17e9
0x00000000004043f1 : dec bl ; ret 0x8589
0x0000000000406064 : dec bl ; ret 0x8db9
0x0000000000474f9a : dec byte ptr [rbx - 0x7c77b] ; jmp qword ptr [rcx]
0x0000000000474fbd : dec byte ptr [rbx - 0x7cb7b] ; jmp qword ptr [rcx]
0x0000000000459e67 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004415d2 : dec dword ptr [rax + 0x29] ; ret 0xb848
0x0000000000423c4f : dec dword ptr [rax + 0x39] ; ret 0xf40
0x0000000000409a24 : dec dword ptr [rax - 0x26c6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004705e8 : dec dword ptr [rax - 0x46] ; ret 0x2de3
0x000000000042d794 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000405ba2 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4b6d
0x000000000046783b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004671ae : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000410d13 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004679b3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000044594e : dec dword ptr [rax - 0x77] ; add al, bh ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x000000000043f0ea : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000470688 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004afce6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000409a2a : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040ee2f : dec dword ptr [rax - 0x77] ; ret 0x8844
0x0000000000409682 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000420668 : dec dword ptr [rax - 0x77] ; ret 0xcfe8
0x000000000042d691 : dec dword ptr [rax - 0x77] ; ret 0xd888
0x0000000000420621 : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000497aaf : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x000000000049893c : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x00000000004415cb : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000470307 : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000445395 : dec dword ptr [rbp - 0x75] ; add byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; ret
0x00000000004752b2 : dec dword ptr [rbp - 0x77] ; ret
0x000000000042b98a : dec dword ptr [rbx - 0x1036b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004a13fd : dec dword ptr [rbx - 0x1276b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000441819 : dec dword ptr [rbx - 0x133b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004a2283 : dec dword ptr [rbx - 0x1cf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000047a275 : dec dword ptr [rbx - 0x2036b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000412d18 : dec dword ptr [rbx - 0x20b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000424027 : dec dword ptr [rbx - 0x237b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000424a3d : dec dword ptr [rbx - 0x23c36b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004b2170 : dec dword ptr [rbx - 0x34b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004b25a8 : dec dword ptr [rbx - 0x36b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004b2744 : dec dword ptr [rbx - 0x3736b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000040f18d : dec dword ptr [rbx - 0x5cf4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f5af : dec dword ptr [rbx - 0x5f74b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406353 : dec dword ptr [rbx - 0x6a76b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004909d1 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000411dbe : dec dword ptr [rbx - 0x9b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000498133 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004808b5 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000499a8e : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004366f8 : dec dword ptr [rbx - 0xd276b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000423639 : dec dword ptr [rcx + 0x21f681c6] ; ret
0x00000000004a0581 : dec dword ptr [rcx + 0x7d8be47d] ; in al, -0x18 ; ret
0x0000000000474d5a : dec dword ptr [rcx - 0x77] ; ret 0x214d
0x0000000000430bbb : dec dword ptr [rcx - 0x7a3857bb] ; call 0x18430bcb
0x000000000047ed06 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000437834 : dec dword ptr [rcx] ; ret 0xf109
0x00000000004752a2 : dec dword ptr [rcx] ; ret 0xf709
0x0000000000411dc4 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000406359 : dec dword ptr [rdi] ; ret 0x8589
0x000000000048a07d : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x0000000000450311 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000419a0f : dec dword ptr [rdi] ; test ah, dl ; ret 0
0x000000000045518b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004b3daf : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000048a47e : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004195af : dec dword ptr [rdi] ; test byte ptr [rax], dh ; ret
0x0000000000479f54 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffa], bh ; ret 1
0x000000000049f6a0 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x000000000044ba5e : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000040a8f6 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff7], bl ; ret 1
0x000000000046dff1 : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000049ec44 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045d74a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x00000000004873cd : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x00000000004a7644 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004b39ae : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffa], bl ; ret
0x00000000004a1c5f : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff9], dl ; ret 1
0x00000000004b1ce2 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], al ; ret 1
0x000000000042cf84 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffffc], al ; ret 1
0x000000000049d87f : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000044f2a0 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040735c : dec dword ptr [rdi] ; test dh, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000049aa53 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000458585 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004abd9f : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000438e05 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004aa677 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x0000000000481fde : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004afb13 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040e6f4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004b8baf : dec eax ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x63], cl ; hlt ; jmp qword ptr [rax]
0x000000000045a921 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000045a920 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000043522b : enter -0x2977, -0x77 ; ret 0xb0
0x0000000000450720 : enter -0x74b8, 0x31 ; call rax
0x000000000048663e : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000043eaed : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004af769 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411e9c : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x0000000000440040 : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000445553 : enter 0x548, 2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x00000000004b8bb0 : enter 0xb, 0 ; popfq ; hlt ; jmp qword ptr [rax]
0x00000000004a84a5 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000485fa0 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004783a1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000455468 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a70b5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000049d459 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000049d417 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044879a : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000049d438 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043d866 : fadd st(7) ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsp
0x0000000000481fc0 : fbld dword ptr [rcx] ; ret 0x941
0x000000000040c26c : fcom qword ptr [r14] ; ret
0x000000000040c26d : fcom qword ptr [rsi] ; ret
0x00000000004b9d49 : fcomi st(7) ; call rbx
0x00000000004a875b : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000048bd7c : fcomp st(3) ; ret
0x0000000000447352 : fcompi st(2) ; sub al, -0x47 ; ret
0x00000000004b8ca5 : fcompi st(6) ; jmp rax
0x00000000004b9715 : fcos ; call qword ptr [rax]
0x00000000004b9525 : fdiv st(6), st(0) ; jmp qword ptr [rax]
0x0000000000423c4d : fdiv st(7), st(0) ; dec dword ptr [rax + 0x39] ; ret 0xf40
0x000000000042402b : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000424a41 : fdiv st(7), st(0) ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000420666 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0xcfe8
0x00000000004b94d4 : fdivr dword ptr [rcx - 2] ; jmp rax
0x00000000004987ea : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045518e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x0000000000439701 : ficomp word ptr [rdi + rbx*2 + 0x5b58b9d4] ; ret 0xb24a
0x0000000000488d01 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x0000000000481f9f : fild word ptr [rcx - 0x77] ; ret
0x000000000049073f : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000049073e : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000044e157 : fimul dword ptr [rax + 0x29] ; ret 0xf748
0x00000000004a8c2b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000437a8b : fimul word ptr [rcx - 0x7bf03bbb] ; ret
0x000000000041ff8c : fisttp qword ptr [rcx - 0x47] ; xor rdx, rbp ; ret
0x00000000004297c9 : fisub word ptr [rbx] ; ret
0x0000000000488745 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004b4808 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045bbe7 : fmul dword ptr [r11 - 0x1376b800] ; pop rbp ; ret
0x000000000045406e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b3377 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004acbd6 : fmul dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000045406f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045071c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000045145d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044fd49 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000045bbe8 : fmul dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x00000000004b3378 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004b654c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004ba321 : fprem ; call qword ptr [rcx]
0x00000000004b8e5d : fprem ; jmp rax
0x00000000004273b1 : frstor dword ptr [rbx] ; ret
0x000000000048e5f4 : fstpnce st(3), st(0) ; ret
0x00000000004475e1 : fsubr dword ptr [rbx] ; pop rbp ; ret
0x00000000004751fb : fsubrp st(1) ; or bh, 0x8a ; push rbp ; ret
0x00000000004bad6c : hlt ; adc eax, 0x1c300000 ; sti ; call rdi
0x0000000000402b69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000048adf7 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x00000000004a3bec : hlt ; add rsp, 0x320 ; pop rbp ; ret
0x000000000040b6fe : hlt ; add rsp, 0x3b0 ; pop rbp ; ret
0x000000000049d589 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004b38dc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000045c231 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004b8bae : hlt ; dec eax ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x63], cl ; hlt ; jmp qword ptr [rax]
0x00000000004b8bee : hlt ; inc dword ptr [rax] ; or eax, 0xf2680000 ; hlt ; jmp qword ptr [rax]
0x00000000004b8bde : hlt ; inc eax ; or al, 0 ; add byte ptr [rax], bh ; in eax, -0xc ; jmp rax
0x00000000004b8bb6 : hlt ; jmp qword ptr [rax]
0x00000000004b8be6 : hlt ; jmp rax
0x000000000047183b : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004ba06c : hlt ; or byte ptr [rax], al ; add al, ah ; push rbp ; clc ; call rcx
0x0000000000402840 : hlt ; pop rbp ; mov edi, 0x6bd438 ; jmp rax
0x00000000004954a8 : hlt ; ret
0x00000000004b8c9e : idiv bh ; ror byte ptr [rdi], 0 ; add byte ptr [rax], bl ; fcompi st(6) ; jmp rax
0x00000000004800cb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004909d5 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004b9555 : idiv esi ; jmp rax
0x000000000044c76d : imul cl ; ret
0x00000000004b411f : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000047477d : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004028c8 : imul eax, dword ptr [rax], 0x48 ; mov ebp, esp ; call rax
0x00000000004475e2 : imul eax, dword ptr [rax], 0x5d ; ret
0x000000000040c682 : imul eax, dword ptr [rcx], 0x90b80000 ; mov dh, 3 ; ret
0x0000000000480800 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000049eff2 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x00000000004a0587 : in al, -0x18 ; ret
0x00000000004b0b6a : in al, -0x55 ; ret
0x0000000000489789 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004b8fed : in al, -7 ; jmp qword ptr [rax]
0x000000000049de84 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000049e074 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000439615 : in al, 0x2d ; pop rax ; pop rbx ; ret 0x894a
0x000000000044a218 : in al, 0x2d ; ret 0xc226
0x000000000049f14e : in al, 0x3e ; ret
0x000000000049313f : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x0000000000442c8b : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000437c66 : in al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004a8fb1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004479b7 : in al, 0x57 ; ret 0xc750
0x000000000040c20e : in al, 0x67 ; ret 0xf3a7
0x000000000044226f : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000442142 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004ad5c8 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040f472 : in al, dx ; add rsp, 0x620 ; pop rbp ; ret
0x0000000000446882 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000045a331 : in al, dx ; jmp 0x45a4fd
0x000000000045a330 : in al, dx ; jmp 0x45a4fe
0x00000000004826cc : in al, dx ; jmp 0x482749
0x00000000004826cb : in al, dx ; jmp 0x48274a
0x00000000004117a6 : in al, dx ; jo 0x411778 ; in al, dx ; loope 0x411834 ; scasb al, byte ptr [rdi] ; ret
0x00000000004a8615 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004a631b : in al, dx ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004117aa : in al, dx ; loope 0x411830 ; scasb al, byte ptr [rdi] ; ret
0x00000000004117a9 : in al, dx ; loope 0x411831 ; scasb al, byte ptr [rdi] ; ret
0x000000000043924d : in al, dx ; mov cl, 0x4f ; ret 0x8934
0x0000000000422aeb : in al, dx ; mov dl, -0x47 ; ret
0x000000000040785d : in al, dx ; pop rbp ; ret
0x0000000000424af7 : in al, dx ; ret 0x1b2
0x0000000000441a05 : in al, dx ; ret 0x81a3
0x0000000000419a94 : in al, dx ; ret 0x8589
0x00000000004405a9 : in al, dx ; ret 0x89a3
0x0000000000441b0d : in al, dx ; ret 0x8aa3
0x0000000000424b13 : in al, dx ; ret 0x958b
0x0000000000441a29 : in al, dx ; ret 0xbaa3
0x000000000045a314 : in al, dx ; ret 0xe8ff
0x0000000000457c0d : in al, dx ; ret 0xff3
0x0000000000475046 : in eax, -0x20 ; jrcxz 0x474fdb ; push rbp ; ret 0xd284
0x0000000000440153 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000044006c : in eax, -0x76 ; push rbp ; ret
0x00000000004b8be5 : in eax, -0xc ; jmp rax
0x00000000004a7e1a : in eax, dx ; adc eax, ebp ; js 0x4a7e0d ; ret
0x00000000004a4b01 : in eax, dx ; ret
0x000000000044c996 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000435259 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000044c7e5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000435ef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000434d9a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040e7a8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e826 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b90a7 : inc dword ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rax + 0x3b], ch ; cli ; jmp qword ptr [rax]
0x00000000004b8bef : inc dword ptr [rax] ; or eax, 0xf2680000 ; hlt ; jmp qword ptr [rax]
0x00000000004b8f27 : inc dword ptr [rax] ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x5d], cl ; stc ; jmp qword ptr [rax]
0x00000000004b8ee7 : inc dword ptr [rax] ; sbb dword ptr [rax], eax ; add al, bh ; and edi, ecx ; jmp qword ptr [rax]
0x00000000004b8fe7 : inc dword ptr [rax] ; sbb eax, 0xe4980000 ; stc ; jmp qword ptr [rax]
0x00000000004b931f : inc dword ptr [rax] ; sub al, byte ptr [rax] ; add al, ch ; cld ; jmp qword ptr [rax]
0x00000000004b93df : inc dword ptr [rax] ; sub eax, 0xdab80000 ; cld ; jmp qword ptr [rax]
0x00000000004b935f : inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; jbe 0x4b936b ; jmp qword ptr [rax]
0x00000000004b951f : inc dword ptr [rax] ; xor al, byte ptr [rax] ; add byte ptr [rax], bh ; fdiv st(6), st(0) ; jmp qword ptr [rax]
0x000000000048799d : inc dword ptr [rbp + 0x21] ; ret
0x00000000004701b4 : inc dword ptr [rbp + 0xf] ; ret
0x0000000000443d3d : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x0000000000435b54 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x00000000004751d3 : inc dword ptr [rbx - 0x60f0fe16] ; ret
0x00000000004234ad : inc dword ptr [rcx + 0x1fff1] ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000405563 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004aa0c0 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x000000000041f47d : inc dword ptr [rcx - 0x48] ; jne 0x41f456 ; call qword ptr [rdi]
0x0000000000426365 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004213ca : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000492fb5 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x0000000000435699 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b944f : inc eax ; add byte ptr cs:[rax], al ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000004b8bdf : inc eax ; or al, 0 ; add byte ptr [rax], bh ; in eax, -0xc ; jmp rax
0x00000000004b8c1f : inc eax ; or eax, 0x36880000 ; cmc ; jmp rax
0x00000000004b8f57 : inc eax ; sbb al, byte ptr [rax] ; add al, ch ; jae 0x4b8f60 ; jmp rax
0x00000000004b8f17 : inc eax ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x50], bh ; stc ; jmp rax
0x00000000004b9017 : inc eax ; sbb eax, 0x13080000 ; cli ; jmp rax
0x00000000004b8f97 : inc eax ; sbb eax, dword ptr [rax] ; add al, bh ; wait ; stc ; jmp rax
0x00000000004b93cf : inc eax ; sub al, 0 ; add byte ptr [rax - 0x5c], bh ; cld ; jmp rax
0x00000000004b940f : inc eax ; sub eax, 0x1180000 ; std ; jmp rax
0x00000000004b938f : inc eax ; sub eax, dword ptr [rax] ; add byte ptr [rax], ch ; jns 0x4b939b ; jmp rax
0x00000000004b954f : inc eax ; xor al, byte ptr [rax] ; add al, bh ; idiv esi ; jmp rax
0x00000000004b94cf : inc eax ; xor byte ptr [rax], al ; add al, bl ; jns 0x4b94dd ; jmp rax
0x00000000004a23b9 : inc edi ; lodsb al, byte ptr [rsi] ; and ah, dh ; ret 0xe9c5
0x00000000004a6579 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x00000000004706a5 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000413123 : inc edi ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rsi
0x00000000004212d7 : inc edi ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rax
0x0000000000425950 : inc edi ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rsi
0x0000000000479377 : inc edi ; test dword ptr [rsi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000437a8a : insb byte ptr [rdi], dx ; fimul word ptr [rcx - 0x7bf03bbb] ; ret
0x000000000048debc : insb byte ptr [rdi], dx ; ret
0x00000000004bc0e4 : insb byte ptr [rdi], dx ; sub dword ptr [rax], eax ; add byte ptr [rax], ch ; or edi, edi ; call rax
0x0000000000424af6 : insd dword ptr [rdi], dx ; in al, dx ; ret 0x1b2
0x0000000000419a93 : insd dword ptr [rdi], dx ; in al, dx ; ret 0x8589
0x0000000000424b12 : insd dword ptr [rdi], dx ; in al, dx ; ret 0x958b
0x000000000047b360 : insd dword ptr [rdi], dx ; jmp 0x47b655
0x000000000042270d : int 0x35
0x000000000046d447 : int 0x5b
0x000000000042c590 : int 0x6a
0x0000000000487abb : int 0x73
0x000000000048ca81 : int 0x80
0x0000000000458324 : int 6
0x000000000049848c : int 7
0x000000000044c402 : int1 ; add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000042ad4e : int1 ; push rbx ; mov cl, -0x47 ; ret 0x2cb
0x0000000000417e3f : iretd ; call qword ptr [rdi]
0x00000000004a3970 : iretd ; push rax ; pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000402833 : ja 0x40283a ; pop rbp ; ret
0x0000000000422aea : ja 0x422adc ; mov dl, -0x47 ; ret
0x0000000000459ed1 : ja 0x459f1e ; pop rbp ; ret
0x000000000047620f : ja 0x476223 ; xchg eax, esp ; ret 0xe280
0x00000000004763b2 : ja 0x4763c6 ; xchg eax, esp ; ret 0xe280
0x00000000004b961d : ja 0x4b9620 ; call qword ptr [rax]
0x000000000041acd6 : jae 0x41acaf ; ret 0x89e3
0x000000000041ed76 : jae 0x41ed4f ; ret 0xb9e3
0x0000000000420f15 : jae 0x420ed3 ; ret
0x0000000000425a3c : jae 0x425a15 ; ret 0x88e3
0x000000000048b32c : jae 0x48b302 ; ret 0x89e0
0x0000000000498b88 : jae 0x498bbe ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000498b94 : jae 0x498bcb ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004b8f5d : jae 0x4b8f5a ; jmp rax
0x0000000000419146 : jb 0x41911f ; ret 0x89e3
0x000000000041f78f : jb 0x41f799 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000047ff9e : jb 0x47ffcf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004002fe : jbe 0x4002a1 ; ret
0x00000000004b9365 : jbe 0x4b9365 ; jmp qword ptr [rax]
0x000000000040283f : je 0x40283d ; pop rbp ; mov edi, 0x6bd438 ; jmp rax
0x000000000040e79d : je 0x40e75c ; jg 0x40e80a ; ret 0x812b
0x0000000000417e3e : je 0x417e11 ; call qword ptr [rdi]
0x000000000048b36e : je 0x48b344 ; ret 0x89e0
0x000000000048b439 : je 0x48b40f ; ret 0xb9e0
0x000000000049a34c : je 0x49a39f ; add ecx, eax ; mov rsi, rcx ; call 0x486659
0x00000000004002f8 : jg 0x400303 ; add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x000000000040df0a : jg 0x40df73 ; ret 0x892b
0x000000000040e79f : jg 0x40e808 ; ret 0x812b
0x00000000004117ac : jg 0x41175e ; ret
0x00000000004117ea : jg 0x41179c ; ret
0x0000000000411858 : jg 0x41180a ; ret
0x000000000041750e : jg 0x4174c0 ; ret 0x892c
0x0000000000497ae1 : jg 0x497a70 ; push rbp ; ret
0x00000000004b94e5 : jg 0x4b94e7 ; jmp qword ptr [rax]
0x0000000000442141 : jge 0x442137 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044226e : jge 0x442264 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004430a5 : jge 0x4430fc ; ret 0x89b9
0x0000000000443525 : jge 0x44357c ; ret 0xb2b9
0x0000000000443541 : jge 0x443598 ; ret 0x48b9
0x000000000044efea : jge 0x44efeb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044f00a : jge 0x44f00b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045071b : jge 0x4506fe ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000459ecd : jge 0x459ece ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004668d6 : jge 0x46685b ; ret 0xffd5
0x00000000004673a0 : jge 0x467380 ; shr cl, cl ; ret 0x3b
0x000000000047153a : jge 0x47153b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000047155a : jge 0x47155b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004aa157 : jge 0x4aa10b ; call rax
0x00000000004aa593 : jge 0x4aa547 ; call rax
0x00000000004aa724 : jge 0x4aa6d0 ; call rax
0x00000000004aa795 : jge 0x4aa741 ; call rax
0x00000000004b2c3a : jge 0x4b2c3d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000442f71 : jl 0x442fc8 ; ret 0x89b9
0x000000000040d48a : jle 0x40d4f3 ; ret 0x892b
0x000000000042642e : jle 0x426438 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdi
0x0000000000440144 : jle 0x44015d ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000457058 : jle 0x456fec ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004021bb : jmp 0x4020d7
0x0000000000406407 : jmp 0x406f6a
0x0000000000406d7b : jmp 0x406f6c
0x00000000004078c2 : jmp 0x407936
0x000000000040ab0e : jmp 0x40b8bc
0x0000000000411598 : jmp 0x411796
0x0000000000414543 : jmp 0x414509
0x0000000000414597 : jmp 0x41455d
0x0000000000423eda : jmp 0x423ea0
0x00000000004240cd : jmp 0x424093
0x0000000000421f42 : jmp 0x426a53
0x0000000000425375 : jmp 0x426a54
0x0000000000423787 : jmp 0x426a55
0x000000000042577e : jmp 0x426a56
0x0000000000429d09 : jmp 0x42b33d
0x000000000042f222 : jmp 0x42fa8b
0x0000000000436be3 : jmp 0x4378f8
0x000000000043a0d0 : jmp 0x43a0db
0x000000000043c853 : jmp 0x43cce7
0x000000000043c33f : jmp 0x43cce8
0x000000000043de62 : jmp 0x43e006
0x000000000043de61 : jmp 0x43e007
0x000000000044351a : jmp 0x4436c3
0x0000000000445609 : jmp 0x4459cf
0x00000000004471d6 : jmp 0x4475d0
0x0000000000447c20 : jmp 0x447c8b
0x0000000000448789 : jmp 0x44890d
0x000000000044ae84 : jmp 0x44af88
0x000000000044eca8 : jmp 0x44eece
0x000000000044fd24 : jmp 0x44ff80
0x00000000004505b9 : jmp 0x450745
0x000000000045244a : jmp 0x45258e
0x0000000000452449 : jmp 0x45258f
0x0000000000452449 : jmp 0x452590
0x000000000045a332 : jmp 0x45a4fc
0x0000000000467af0 : jmp 0x46af70
0x00000000004659f4 : jmp 0x46af71
0x0000000000466dc1 : jmp 0x46af72
0x0000000000470092 : jmp 0x4706e8
0x000000000047503b : jmp 0x476469
0x000000000047a4f3 : jmp 0x47a912
0x000000000047b162 : jmp 0x47b652
0x000000000047b361 : jmp 0x47b654
0x000000000047e12b : jmp 0x47eb97
0x000000000047e068 : jmp 0x47eb99
0x0000000000480343 : jmp 0x4803a8
0x00000000004826cd : jmp 0x482748
0x00000000004855bf : jmp 0x486482
0x000000000048ab9a : jmp 0x48af24
0x000000000048f0b8 : jmp 0x48f077
0x000000000045798f : jmp 0x490802df
0x0000000000457adb : jmp 0x4908042b
0x0000000000457bad : jmp 0x490804fd
0x0000000000457c2e : jmp 0x4908057e
0x0000000000459bd4 : jmp 0x49082524
0x0000000000459c4f : jmp 0x4908259f
0x000000000048fb07 : jmp 0x491160
0x000000000048efa7 : jmp 0x491161
0x000000000048f1c1 : jmp 0x491162
0x00000000004917c7 : jmp 0x491814
0x000000000049296a : jmp 0x493289
0x00000000004975f5 : jmp 0x49a6f4
0x000000000049e27d : jmp 0x49e4d3
0x000000000049ee12 : jmp 0x49f180
0x000000000049eecb : jmp 0x49f181
0x00000000004a3818 : jmp 0x4a3d30
0x00000000004a57f5 : jmp 0x4a6626
0x00000000004a8415 : jmp 0x4a8420
0x00000000004a8577 : jmp 0x4a8582
0x00000000004a87e5 : jmp 0x4a87f0
0x00000000004aa533 : jmp 0x4aa8dc
0x00000000004b0026 : jmp 0x4b0308
0x00000000004b2d7e : jmp 0x4b2e2f
0x000000000047ed0a : jmp 0x4f53b006
0x000000000044a1d4 : jmp 0xffffffffb606c89d
0x0000000000481d8f : jmp 0xffffffffc40c5456
0x0000000000423815 : jmp 0xfffffffff6c429da
0x0000000000425cfd : jmp qword ptr [rax]
0x000000000041f797 : jmp qword ptr [rbx]
0x0000000000425013 : jmp qword ptr [rcx]
0x000000000042b254 : jmp qword ptr [rdi]
0x00000000004261b2 : jmp qword ptr [rdx]
0x00000000004221cb : jmp qword ptr [rsi]
0x0000000000402847 : jmp rax
0x00000000004260be : jmp rbx
0x0000000000426020 : jmp rcx
0x000000000040ed8c : jmp rdi
0x0000000000426219 : jmp rdx
0x000000000041b03a : jmp rsi
0x00000000004233b8 : jmp rsp
0x0000000000402870 : jne 0x402877 ; pop rbp ; ret
0x000000000041bfde : jne 0x41bfb1 ; call qword ptr [rdi]
0x000000000041f480 : jne 0x41f453 ; call qword ptr [rdi]
0x000000000041f5a9 : jne 0x41f57c ; call qword ptr [rdi]
0x0000000000450779 : jne 0x450744 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000452545 : jne 0x452521 ; call rax
0x000000000045a922 : jne 0x45a91a ; mov rax, rdx ; pop rbp ; ret
0x0000000000476491 : jne 0x476489 ; mov rax, rdx ; pop rbp ; ret
0x00000000004764fd : jne 0x4764f7 ; mov rdx, qword ptr [rbp - 0x18] ; call 0x4a27b8
0x000000000049e519 : jne 0x49e4fc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004a0521 : jne 0x4a0519 ; mov rax, rdx ; pop rbp ; ret
0x00000000004a0af2 : jne 0x4a0aea ; mov rax, rdx ; pop rbp ; ret
0x00000000004b8e1d : jne 0x4b8e19 ; call rax
0x000000000043558f : jno 0x438597 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000047bd4e : jno 0x47bcea ; ret
0x000000000047bda2 : jno 0x47bd3e ; ret
0x000000000047cd96 : jno 0x47cd32 ; ret
0x0000000000409f8e : jnp 0x409f12 ; ret 0x8589
0x0000000000409fd9 : jnp 0x409f5d ; ret 0x8589
0x000000000040aaf0 : jnp 0x40aa74 ; ret 0x71b9
0x00000000004396e5 : jnp 0x4396a4 ; pop rax ; pop rbx ; ret 0x8a4a
0x00000000004b8f6d : jnp 0x4b8f6a ; jmp qword ptr [rax]
0x0000000000421c72 : jns 0x421c11 ; and eax, 0xb12da1b9 ; ret
0x0000000000425fb3 : jns 0x426005 ; add al, ch ; ret
0x00000000004868f5 : jns 0x4868a0 ; ret
0x00000000004868f4 : jns 0x4868a1 ; ret
0x0000000000486945 : jns 0x4868f0 ; ret
0x0000000000486944 : jns 0x4868f1 ; ret
0x000000000048fe18 : jns 0x48fdd5 ; ret 0xcaed
0x00000000004a3816 : jns 0x4a37f9 ; jmp 0x4a3d32
0x00000000004b9395 : jns 0x4b9395 ; jmp rax
0x00000000004b94d5 : jns 0x4b94d7 ; jmp rax
0x00000000004086be : jo 0x4086c6 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ad59 : jo 0x40ad93 ; call 0x40b8c8
0x00000000004117a7 : jo 0x411777 ; in al, dx ; loope 0x411833 ; scasb al, byte ptr [rdi] ; ret
0x000000000044a3ee : jo 0x44a44f ; ret
0x00000000004607ee : jo 0x4607fa ; ret
0x000000000046245e : jo 0x46246a ; ret
0x00000000004659ad : jo 0x4659b9 ; ret
0x000000000046cc94 : jo 0x46ccf5 ; ret
0x000000000047153f : jo 0x4715a0 ; ret
0x000000000047153e : jo 0x4715a1 ; ret
0x00000000004863ef : jo 0x4863be ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x00000000004863ee : jo 0x4863bf ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000048688f : jo 0x4868f0 ; ret
0x00000000004886ab : jo 0x4886b3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000048b204 : jo 0x48b265 ; ret
0x0000000000490771 : jo 0x4907bb ; call 0x49c9a4
0x00000000004b8ded : jo 0x4b8de9 ; call qword ptr [rax]
0x00000000004ba320 : jo 0x4ba2fe ; clc ; call qword ptr [rcx]
0x000000000041f00d : jp 0x41f017 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdi]
0x000000000042af93 : jrcxz 0x42b005 ; and ecx, dword ptr [rbx - 0x47] ; ret
0x0000000000475049 : jrcxz 0x474fd8 ; push rbp ; ret 0xd284
0x0000000000475048 : jrcxz 0x474fd9 ; push rbp ; ret 0xd284
0x0000000000492d05 : jrcxz 0x492caf ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x00000000004a1f2a : jrcxz 0x4a1ee7 ; ret
0x000000000042c9b9 : js 0x42c968 ; cmp ebp, dword ptr [rdi + 0x176acdb9] ; ret
0x00000000004a7e1d : js 0x4a7e0a ; ret
0x00000000004b8e9c : js 0x4b8e9e ; clc ; jmp rax
0x00000000004b8f1c : js 0x4b8f71 ; stc ; jmp rax
0x00000000004b93d4 : js 0x4b937d ; cld ; jmp rax
0x00000000004bb2b8 : js 0x4bb31f ; sti ; call qword ptr [rdx]
0x00000000004bb2d8 : js 0x4bb33f ; sti ; call qword ptr [rdx]
0x00000000004bb4b8 : js 0x4bb49e ; sti ; jmp rcx
0x00000000004bb518 : js 0x4bb51e ; cld ; jmp qword ptr [rax]
0x00000000004bb538 : js 0x4bb55c ; cld ; jmp rsi
0x0000000000419a92 : lahf ; insd dword ptr [rdi], dx ; in al, dx ; ret 0x8589
0x00000000004917c6 : lahf ; jmp 0x491815
0x00000000004751d8 : lahf ; ret
0x00000000004a95b6 : lahf ; ret 0x7a
0x000000000046739e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004424bf : lcall ptr [rsi - 0x1605c83c] ; ret
0x000000000046849e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000422192 : lds eax, ptr [r9 - 0xa] ; jmp qword ptr [rcx]
0x0000000000475b0c : lds ecx, ptr [rax - 0x290c46bf] ; pop rbx ; ret 0xaba
0x0000000000448426 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a5e13 : lea eax, dword ptr [rbx + rdi*8 + 0x3e8ffff] ; ret
0x00000000004242ff : lea eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000406035 : lea edi, dword ptr [0x4b6e2d] ; call 0x402309
0x00000000004260e7 : lea edi, dword ptr [0x4b7934] ; call 0x402309
0x00000000004ac144 : lea esi, dword ptr [rdx] ; ret
0x0000000000406a9e : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045b94e : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042d796 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000406a9d : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042d795 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000441a04 : leave ; in al, dx ; ret 0x81a3
0x00000000004405fc : leave ; in al, dx ; ret 0x89a3
0x0000000000441b0c : leave ; in al, dx ; ret 0x8aa3
0x0000000000441a28 : leave ; in al, dx ; ret 0xbaa3
0x000000000046f43b : leave ; ret 0x8589
0x00000000004aa99f : leave ; ret 0x86f8
0x00000000004039aa : leave ; ret 0x895a
0x0000000000405b7c : leave ; ret 0xba5a
0x000000000046fbce : leave ; ret 0xde9
0x00000000004868f2 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000465cfe : ljmp ptr [rdi] ; ret 0x23da
0x00000000004b9120 : lock and dword ptr [rax], eax ; add byte ptr [rax], ch ; sti ; call qword ptr [rax]
0x000000000042659d : lodsb al, byte ptr [rsi] ; add al, 0 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdi
0x00000000004a23bc : lodsb al, byte ptr [rsi] ; and ah, dh ; ret 0xe9c5
0x000000000047b161 : lodsb al, byte ptr [rsi] ; jmp 0x47b653
0x000000000047b160 : lodsb al, byte ptr [rsi] ; jmp 0x47b654
0x000000000041cc3a : lodsb al, byte ptr [rsi] ; ret
0x000000000044ba61 : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000412b42 : loop 0x412aff ; ret 0x28ed
0x000000000044f0f0 : loop 0x44f0e5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000480d8e : loop 0x480dbb ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000480d8d : loop 0x480dbc ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004a8712 : loop 0x4a86c5 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004b8cb5 : loop 0x4b8caf ; jmp qword ptr [rax]
0x0000000000407d88 : loope 0x407d94 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bd8a : loope 0x40bd96 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004117ab : loope 0x41182f ; scasb al, byte ptr [rdi] ; ret
0x0000000000411857 : loope 0x4118db ; scasb al, byte ptr [rdi] ; ret
0x0000000000425145 : loope 0x425133 ; mov esi, 0xffffff35 ; jmp qword ptr [rcx]
0x000000000042e148 : loope 0x42e154 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044fe2e : loope 0x44fde9 ; xchg eax, ebp ; jmp 0x44ff83
0x0000000000468d05 : loope 0x468cd3 ; jmp 0x46af73
0x0000000000498b92 : loope 0x498b66 ; jae 0x498bcd ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000049e0bb : loope 0x49e0ac ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004a010c : loope 0x4a0118 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004bb4b9 : loope 0x4bb4b8 ; jmp rcx
0x0000000000407e2f : loopne 0x407dbc ; ret 0x9e8
0x0000000000407e2e : loopne 0x407dbd ; ret 0x9e8
0x000000000040bf75 : loopne 0x40bfa6 ; ret
0x000000000040bf74 : loopne 0x40bfa7 ; ret
0x000000000040bfb7 : loopne 0x40bfe9 ; ret 0xf3a7
0x000000000040bfb6 : loopne 0x40bfea ; ret 0xf3a7
0x00000000004117e9 : loopne 0x41186d ; scasb al, byte ptr [rdi] ; ret
0x0000000000412788 : loopne 0x4127b9 ; ret 0x28ed
0x0000000000412787 : loopne 0x4127ba ; ret 0x28ed
0x000000000043d888 : loopne 0x43d857 ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsp
0x000000000043d887 : loopne 0x43d858 ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsp
0x00000000004476fb : loopne 0x44772d ; push rsi ; ret 0xc750
0x00000000004476fa : loopne 0x44772e ; push rsi ; ret 0xc750
0x000000000044773d : loopne 0x44776f ; push rdi ; ret 0xc750
0x000000000044773c : loopne 0x447770 ; push rdi ; ret 0xc750
0x00000000004488ea : loopne 0x44893d ; add esp, 0xc0 ; pop rbp ; ret
0x000000000044a19b : loopne 0x44a1eb ; add esp, 0x20 ; pop rbp ; ret
0x000000000044a19a : loopne 0x44a1ec ; add esp, 0x20 ; pop rbp ; ret
0x000000000044ec60 : loopne 0x44ec69 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044ee29 : loopne 0x44ee30 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045151a : loopne 0x451521 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000454b6e : loopne 0x454bbf ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000454b6d : loopne 0x454bc0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000459e0d : loopne 0x459e60 ; add esp, 0x1d0 ; pop rbp ; ret
0x000000000045d0e3 : loopne 0x45d136 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000046c68d : loopne 0x46c6f3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046da74 : loopne 0x46dac7 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000047046f : loopne 0x4704c2 ; add esp, 0x300 ; pop rbp ; ret
0x0000000000471c7c : loopne 0x471c10 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000471c7b : loopne 0x471c11 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000475047 : loopne 0x475091 ; jrcxz 0x474fda ; push rbp ; ret 0xd284
0x000000000047fa03 : loopne 0x47fa0c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000048038e : loopne 0x4803de ; add esp, 0x60 ; pop rbp ; ret
0x000000000048038d : loopne 0x4803df ; add esp, 0x60 ; pop rbp ; ret
0x0000000000482f92 : loopne 0x482f99 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004892e2 : loopne 0x4892ec ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000498b86 : loopne 0x498b59 ; jae 0x498bc0 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x000000000049e917 : loopne 0x49e949 ; pop rdi ; ret
0x000000000049e916 : loopne 0x49e94a ; pop rdi ; ret
0x000000000049edfb : loopne 0x49ee2d ; ret
0x000000000049edfa : loopne 0x49ee2e ; ret
0x00000000004a34ed : loopne 0x4a34f6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004b38e0 : loopne 0x4b38e7 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b628c : loopne 0x4b62db ; mov esp, ebp ; pop rbp ; ret
0x00000000004b628b : loopne 0x4b62dc ; mov esp, ebp ; pop rbp ; ret
0x00000000004b64dc : loopne 0x4b652b ; mov esp, ebp ; pop rbp ; ret
0x00000000004b64db : loopne 0x4b652c ; mov esp, ebp ; pop rbp ; ret
0x00000000004ba070 : loopne 0x4ba0ca ; clc ; call rcx
0x00000000004ba600 : loopne 0x4ba64e ; stc ; call qword ptr [rdx]
0x00000000004ba620 : loopne 0x4ba66e ; stc ; call qword ptr [rdx]
0x00000000004bab80 : loopne 0x4bab9b ; cli ; call qword ptr [rdx]
0x00000000004bad10 : loopne 0x4bad2f ; sti ; jmp qword ptr [rbx]
0x00000000004bb640 : loopne 0x4bb685 ; cld ; call rdx
0x00000000004a7e19 : mov ah, -0x13 ; adc eax, ebp ; js 0x4a7e0e ; ret
0x000000000043f854 : mov ah, -0x17 ; ret 0
0x00000000004a8711 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004668cd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004669a7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000497a1c : mov ah, -0x76 ; ret 0x124
0x000000000044b526 : mov ah, 0x2d ; ret
0x00000000004828ba : mov ah, 0x2d ; ret 0xe41a
0x0000000000402d40 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000464955 : mov ah, 0x75 ; ret
0x00000000004ba02c : mov ah, 8 ; add byte ptr [rax], al ; add byte ptr [rbp - 8], dl ; jmp rsi
0x0000000000489589 : mov al, -0x26 ; ret
0x00000000004aa72b : mov al, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x000000000046d463 : mov al, -0x47 ; ret
0x000000000044fe2f : mov al, -0x6b ; jmp 0x44ff82
0x0000000000404b0d : mov al, -0x71 ; ret 0x89fc
0x000000000040558c : mov al, -0x71 ; ret 0xe9fc
0x00000000004af7ef : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000485d42 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000485776 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004111ba : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004363b1 : mov al, 0 ; call 0x4026b4
0x00000000004b8d98 : mov al, 0x13 ; add byte ptr [rax], al ; sbb byte ptr [rcx - 8], ah ; call rax
0x00000000004b9110 : mov al, 0x21 ; add byte ptr [rax], al ; or byte ptr [rsi], bh ; sti ; call rax
0x00000000004b9150 : mov al, 0x22 ; add byte ptr [rax], al ; cwde ; sti ; call rax
0x00000000004912ca : mov al, 0x2d ; ret
0x0000000000491586 : mov al, 0x2d ; ret 0x24cc
0x00000000004b9648 : mov al, 0x36 ; add byte ptr [rax], al ; call 0xffffffffd14b95d9
0x0000000000459210 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x00000000004ba110 : mov al, 0x5f ; clc ; call qword ptr [rbx]
0x0000000000499f8d : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000440154 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043debd : mov al, 2 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b702 : mov al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a8b6b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000043efcd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004b47ca : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427041 : mov al, byte ptr [rbp - 0x1a] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000480d8c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a0c98 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042fd08 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004400a1 : mov al, byte ptr [rbp - 2] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410ce6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a8c2c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004a8b6a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a8934 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000047bc19 : mov bh, -0x3e ; jmp 0x47bbd5
0x000000000047ccd0 : mov bh, -0x3e ; jmp 0x47cc8c
0x00000000004713dc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004a8939 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004222ba : mov bh, -0x47 ; jmp rsi
0x0000000000488dd8 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004ba1d9 : mov bh, al ; jmp qword ptr [rax]
0x0000000000486345 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x00000000004242fd : mov bl, -0x48 ; lea eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004bb921 : mov bl, -4 ; jmp qword ptr [rdi]
0x000000000049fca8 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004906e5 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045e2f5 : mov bl, 0x75 ; ret
0x000000000042ad6b : mov bl, byte ptr [rdi - 0x47] ; ret 0x2cb
0x000000000042a044 : mov byte ptr [r8 + 0x3b], r9b ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000042a045 : mov byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000046fce3 : mov byte ptr [rax - 0x7f], cl ; ret 0x13
0x0000000000439fa1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410ad4 : mov byte ptr [rbx], dl ; ret 0x8901
0x0000000000410950 : mov byte ptr [rbx], dl ; ret 0x8b01
0x0000000000475b0e : mov byte ptr [rcx - 0x47], al ; salc ; pop rbx ; ret 0xaba
0x00000000004b9354 : mov byte ptr [rdi - 4], ch ; jmp rax
0x0000000000426aa7 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028a3 : mov byte ptr [rip + 0x2babee], 1 ; ret
0x00000000004b8c24 : mov byte ptr [rsi], dh ; cmc ; jmp rax
0x0000000000424029 : mov ch, -0x7c ; fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000046614f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042ad50 : mov cl, -0x47 ; ret 0x2cb
0x000000000048944d : mov cl, 0x37 ; ret 0x4589
0x000000000048971b : mov cl, 0x37 ; ret 0x94b9
0x000000000048978b : mov cl, 0x37 ; ret 0xd3e9
0x000000000043924e : mov cl, 0x4f ; ret 0x8934
0x000000000049546f : mov cl, 0x7d ; ret
0x000000000040b343 : mov cx, 0x5a21 ; ret 0x81c1
0x00000000004418fb : mov dh, -0x17 ; ret
0x000000000045a704 : mov dh, -0x39 ; pop rbp ; ret
0x000000000044a10d : mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac361 : mov dh, -0x3a ; pop rbp ; ret
0x000000000047bbc5 : mov dh, -0x3e ; jmp 0x47bb81
0x000000000043f2dd : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000049bf38 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407d8b : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410931 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043e526 : mov dh, -0x40 ; add rsp, 0x38 ; pop rbp ; ret
0x0000000000426c8f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000480fb9 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000048688a : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004b5794 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042334b : mov dh, -0x40 ; call 0x42b348
0x0000000000407859 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410cec : mov dh, -0x40 ; pop rbp ; ret
0x00000000004a8c2f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000492802 : mov dh, -0x47 ; ret 0x9214
0x000000000040c347 : mov dh, 3 ; ret
0x00000000004b624a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000405599 : mov dl, -0x47 ; ret
0x00000000004b54c1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004475dd : mov dword ptr [0x6bd8e8], edi ; pop rbp ; ret
0x00000000004ace81 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c869 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043c854 : mov dword ptr [rax + rax], eax ; add al, ch ; ret
0x000000000045c43f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000445e9b : mov dword ptr [rbp - 0x110], eax ; call 0x402128
0x00000000004523c5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000454a09 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000045a32f : mov dword ptr [rbp - 0x14], eax ; jmp 0x45a4ff
0x00000000004826ca : mov dword ptr [rbp - 0x14], eax ; jmp 0x48274b
0x000000000040c24f : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004587dd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000458a10 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000044a199 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000047a4f0 : mov dword ptr [rbp - 0x2c], eax ; jmp 0x47a915
0x000000000044fd21 : mov dword ptr [rbp - 0x34], eax ; jmp 0x44ff83
0x000000000044ae81 : mov dword ptr [rbp - 0x34], ecx ; jmp 0x44af8b
0x00000000004505b6 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x450748
0x0000000000450641 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x450748
0x000000000040ab0b : mov dword ptr [rbp - 0x40], eax ; jmp 0x40b8bf
0x0000000000402d3e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000047b15f : mov dword ptr [rbp - 0x54], eax ; jmp 0x47b655
0x000000000042f21f : mov dword ptr [rbp - 0x5c], eax ; jmp 0x42fa8e
0x0000000000406096 : mov dword ptr [rbp - 0x688], ecx ; call 0x402308
0x00000000004aa06c : mov dword ptr [rbp - 0x6c8], eax ; call r8
0x000000000047e128 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x47eb9a
0x00000000004aa2c5 : mov dword ptr [rbp - 0x6e8], ecx ; call rdx
0x00000000004aa490 : mov dword ptr [rbp - 0x6f8], ecx ; call rdx
0x0000000000402b67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000450621 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000402b95 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045cb46 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411ae5 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411b35 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004ab978 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000459ed0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004b2c3c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000440143 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045c6ed : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000488c39 : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000043fa64 : mov eax, 0x6308382d ; ret 0x4589
0x0000000000409f8b : mov eax, 0x807b0e2d ; ret 0x8589
0x0000000000409fd6 : mov eax, 0x807b0f2d ; ret 0x8589
0x0000000000458b7b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004855c0 : mov eax, 0xb800000e ; ret 0x4dbf
0x0000000000441539 : mov eax, 0xce90da96 ; ret 0x5a6
0x000000000043d8b8 : mov eax, 0xe4b9fbf4 ; jmp rdx
0x000000000043f0e6 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b236 : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004aa152 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004aa790 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x00000000004ace7f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004aa845 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x470] ; call rax
0x00000000004aa720 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000411709 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048020b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000486a56 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004a6755 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000471691 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043eee2 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004ad5c6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004a6319 : mov eax, dword ptr [rbp - 0x14] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004803de : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004489b2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000449ade : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000482545 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000452762 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000442c89 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000048038c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000471c7a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b628a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044dc02 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000049e51f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000045bbe6 : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411706 : mov eax, dword ptr [rbp - 0x30] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c6ef : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045077f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000470cc7 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000457fa7 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b2a14 : mov eax, dword ptr [rbp - 0x68] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000049076d : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x49c9a8
0x000000000047d2b6 : mov eax, dword ptr [rbp - 0x70] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c22f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000471839 : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004a04c6 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000426e28 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004b09a3 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409ab3 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000482a70 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e103 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004b2e12 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004398a2 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410d15 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044efed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044f00d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000047155d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047153d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045c6ee : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004a8936 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x00000000004a8383 : mov eax, eax ; pop rbp ; ret
0x00000000004a875a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000470cfc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047112f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004534e1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045a925 : mov eax, edx ; pop rbp ; ret
0x0000000000470f83 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004a867d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043a216 : mov eax, esi ; pop rbp ; ret
0x00000000004a8935 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x00000000004479b1 : mov ebp, 0xc7000001 ; in al, 0x57 ; ret 0xc750
0x0000000000469108 : mov ebp, 0xe19c53ba ; ret
0x0000000000479f57 : mov ebp, 0xe9000006 ; ret 1
0x00000000004aa849 : mov ebp, 0xfffffb90 ; call rax
0x0000000000425de7 : mov ebp, 0xfffffd40 ; call 0x4020f7
0x0000000000425ed6 : mov ebp, 0xfffffee0 ; call 0x402137
0x00000000004028cb : mov ebp, esp ; call rax
0x0000000000402831 : mov ebp, esp ; ja 0x40283c ; pop rbp ; ret
0x000000000045b252 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000445423 : mov ebx, 0x5bb9effe ; ret 0xd0b
0x000000000044560a : mov ebx, 0xb8000003 ; ret
0x000000000041f78e : mov ebx, 0xc7000072 ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000420cbe : mov ebx, dword ptr [rbp] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdi]
0x000000000042ad4d : mov ecx, 0xb9b153f1 ; ret 0x2cb
0x0000000000485bbf : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000445548 : mov ecx, 0xd85ebbc2 ; xchg eax, ebp ; ret 0x2018
0x000000000045c43c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000045491b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000454b6c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000455486 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045071e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000458b7d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045491f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004363af : mov ecx, eax ; mov al, 0 ; call 0x4026b6
0x000000000047c9e3 : mov ecx, gs ; ret 0xa
0x00000000004028c5 : mov edi, 0x6bce20 ; mov rbp, rsp ; call rax
0x0000000000402842 : mov edi, 0x6bd438 ; jmp rax
0x0000000000402882 : mov edi, 0x6bd438 ; jmp rdx
0x000000000045a333 : mov edi, 0xb8000001 ; ret
0x00000000004659a7 : mov edi, 0xb8000055 ; wait ; jo 0x4659bf ; ret
0x000000000040663c : mov edi, 1 ; call 0x4028e7
0x000000000042f622 : mov edi, dword ptr [rax] ; call 0x43ef29
0x0000000000445e8e : mov edi, dword ptr [rax] ; mov esi, 0x4b744c ; call 0x402169
0x0000000000425ed5 : mov edi, dword ptr [rbp - 0x120] ; call 0x402138
0x0000000000425de6 : mov edi, dword ptr [rbp - 0x2c0] ; call 0x4020f8
0x00000000004aa848 : mov edi, dword ptr [rbp - 0x470] ; call rax
0x00000000004aa156 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x00000000004aa723 : mov edi, dword ptr [rbp - 0x58] ; call rax
0x0000000000459ecc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044efe9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044f009 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000471559 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000471539 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000454922 : mov edi, dword ptr [rcx] ; call rax
0x0000000000452541 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004b6547 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004b6546 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004ac141 : mov edx, 0x328dfe07 ; ret
0x00000000004aff9e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000046616b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000470024 : mov edx, 0xc7000006 ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000476396 : mov edx, 0xe9192036 ; ret 0
0x0000000000476500 : mov edx, dword ptr [rbp - 0x18] ; call 0x4a27b5
0x00000000004a7e72 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000471695 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000466fe2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000445e90 : mov esi, 0x4b744c ; call 0x402167
0x00000000004aff87 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000046fe69 : mov esi, 0x86cd86af ; outsb dx, byte ptr [rsi] ; ret
0x000000000042ad69 : mov esi, 0xb95f8a63 ; ret 0x2cb
0x0000000000425147 : mov esi, 0xffffff35 ; jmp qword ptr [rcx]
0x000000000040ad58 : mov esi, dword ptr [rax + 0x30] ; call 0x40b8c9
0x0000000000490770 : mov esi, dword ptr [rax + 0x44] ; call 0x49c9a5
0x00000000004764fc : mov esi, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 0x18] ; call 0x4a27b9
0x0000000000452544 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000450722 : mov esi, dword ptr [rcx] ; call rax
0x0000000000402880 : mov esi, eax ; mov edi, 0x6bd438 ; jmp rdx
0x000000000049e51c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045077c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000049a351 : mov esi, ecx ; call 0x486654
0x00000000004002fc : mov esp, 0x439e7650 ; ret
0x00000000004ac7d5 : mov esp, 0x5ba9942d ; ret
0x00000000004ac817 : mov esp, 0x5ba9952d ; ret
0x0000000000436d51 : mov esp, 0x89fffff2 ; ret 0x44e8
0x00000000004396e2 : mov esp, 0xb97bc001 ; pop rax ; pop rbx ; ret 0x8a4a
0x000000000044736d : mov esp, 0xb9dde3e5 ; ret
0x0000000000422d8d : mov esp, 0xc700003c ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x000000000040785c : mov esp, ebp ; pop rbp ; ret
0x00000000004b9799 : mov esp, esi ; jmp qword ptr [rax]
0x00000000004475dc : mov qword ptr [0x6bd8e8], rdi ; pop rbp ; ret
0x0000000000445e9a : mov qword ptr [rbp - 0x110], rax ; call 0x402129
0x000000000040c24e : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045cb45 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411ae4 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411b34 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000459ecf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004a7e18 : mov r12b, -0x13 ; adc eax, ebp ; js 0x4a7e0f ; ret
0x000000000043f853 : mov r12b, -0x17 ; ret 0
0x000000000044b525 : mov r12b, 0x2d ; ret
0x00000000004828b9 : mov r12b, 0x2d ; ret 0xe41a
0x0000000000402d3f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004ac7d4 : mov r12d, 0x5ba9942d ; ret
0x00000000004ac816 : mov r12d, 0x5ba9952d ; ret
0x00000000004222b9 : mov r15b, -0x47 ; jmp rsi
0x0000000000486344 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x00000000004aa72a : mov r8b, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x00000000004912c9 : mov r8b, 0x2d ; ret
0x0000000000491585 : mov r8b, 0x2d ; ret 0x24cc
0x000000000043fa63 : mov r8d, 0x6308382d ; ret 0x4589
0x0000000000409f8a : mov r8d, 0x807b0e2d ; ret 0x8589
0x0000000000409fd5 : mov r8d, 0x807b0f2d ; ret 0x8589
0x000000000047c9e2 : mov r9d, gs ; ret 0xa
0x00000000004aa151 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004aa78f : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x00000000004aa71f : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000411a31 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048020a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000486a55 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000471690 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043eee1 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004803dd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004489b1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000449add : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000452761 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000048038b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044dc01 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000049e51e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045077e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000049076c : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x49c9a9
0x0000000000482a6f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004398a1 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410d14 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044efec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044f00c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000047155c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047153c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004a8759 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004a8382 : mov rax, r8 ; pop rbp ; ret
0x00000000004534e0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045a924 : mov rax, rdx ; pop rbp ; ret
0x000000000043a215 : mov rax, rsi ; pop rbp ; ret
0x00000000004028ca : mov rbp, rsp ; call rax
0x0000000000402830 : mov rbp, rsp ; ja 0x40283d ; pop rbp ; ret
0x000000000045b251 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000455485 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045071d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000458b7c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045491e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004363ae : mov rcx, rax ; mov al, 0 ; call 0x4026b7
0x0000000000425ed4 : mov rdi, qword ptr [rbp - 0x120] ; call 0x402139
0x0000000000425de5 : mov rdi, qword ptr [rbp - 0x2c0] ; call 0x4020f9
0x00000000004aa847 : mov rdi, qword ptr [rbp - 0x470] ; call rax
0x00000000004aa155 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x00000000004aa722 : mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000459ecb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044efe8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044f008 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000471558 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000471538 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000454921 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000452540 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004764ff : mov rdx, qword ptr [rbp - 0x18] ; call 0x4a27b6
0x00000000004a7e71 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000471694 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000452543 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000450721 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040287f : mov rsi, rax ; mov edi, 0x6bd438 ; jmp rdx
0x000000000049e51b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045077b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000049a350 : mov rsi, rcx ; call 0x486655
0x000000000040785b : mov rsp, rbp ; pop rbp ; ret
0x00000000004086e1 : mov word ptr [r8], es ; ret 0x3b16
0x000000000047ffa1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004086e2 : mov word ptr [rax], es ; ret 0x3b16
0x000000000044755a : movabs al, byte ptr [0x8cacffffff7485c7] ; ret
0x00000000004aa1a2 : movabs al, byte ptr [0xa0b80000072de96b] ; ret 0x7a
0x0000000000481c31 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000040ea45 : movabs al, byte ptr [0xfffe9485c7fffffe] ; call qword ptr [rsi]
0x0000000000461c48 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000047529b : movabs dword ptr [0x9ffffffffe681b1], eax ; ret 0xf709
0x0000000000497e0d : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004bab1c : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], ah ; adc edx, edi ; jmp qword ptr [rdi]
0x00000000004bb91c : movsb byte ptr [rdi], byte ptr [rsi] ; and dword ptr [rax], eax ; add byte ptr [rax], dl ; mov bl, -4 ; jmp qword ptr [rdi]
0x00000000004b93d5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rax
0x0000000000457c0a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000497e0e : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042f221 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x42fa8c
0x000000000042f220 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x42fa8d
0x00000000004ba31c : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x27], dh ; clc ; call qword ptr [rcx]
0x000000000042f99f : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x19d
0x0000000000464e95 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000049f6a3 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x000000000042c9ba : movsd dword ptr [rdi], dword ptr [rsi] ; cmp ebp, dword ptr [rdi + 0x176acdb9] ; ret
0x00000000004354ce : movsxd rsp, eax ; and byte ptr [rbp - 0x30c23f47], dl ; ret
0x0000000000488743 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000410930 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043e525 : movzx eax, al ; add rsp, 0x38 ; pop rbp ; ret
0x0000000000426c8e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000480fb8 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000486889 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004b5793 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000042334a : movzx eax, al ; call 0x42b349
0x0000000000407858 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410ceb : movzx eax, al ; pop rbp ; ret
0x00000000004a8c2e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004a8938 : movzx eax, ax ; pop rbp ; ret
0x000000000045a703 : movzx eax, bh ; pop rbp ; ret
0x000000000043f2dc : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000049bf37 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407d8a : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004713db : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044a10c : movzx eax, dh ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac360 : movzx eax, dh ; pop rbp ; ret
0x000000000045a702 : movzx eax, dil ; pop rbp ; ret
0x000000000044a10b : movzx eax, sil ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac35f : movzx eax, sil ; pop rbp ; ret
0x000000000042363d : mul byte ptr [rcx] ; ret
0x0000000000419b02 : neg byte ptr [rbx + 0x7e] ; ret
0x00000000004afd98 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000419b56 : neg dword ptr [rbx + 0x7e] ; ret
0x000000000040c486 : nop ; mov dh, 3 ; ret
0x000000000047d2b8 : nop ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045e135 : nop ; ret
0x000000000046c542 : nop ; ret 0x148
0x000000000046c556 : nop ; ret 0x2948
0x00000000004b6568 : nop dword ptr [rax + rax] ; ret
0x0000000000477498 : or ah, byte ptr [rcx] ; ret
0x00000000004b8fdc : or ah, cl ; stc ; jmp rax
0x0000000000470cc3 : or al, 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004b8be1 : or al, 0 ; add byte ptr [rax], bh ; in eax, -0xc ; jmp rax
0x000000000048a081 : or al, 0 ; add cl, ch ; ret
0x00000000004668ca : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004669a4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004b9425 : or al, 0xfffffffffffffffd ; jmp qword ptr [rax]
0x00000000004ba1d5 : or al, byte ptr [rax] ; add al, cl ; mov bh, al ; jmp qword ptr [rax]
0x00000000004ba25d : or al, byte ptr [rax] ; add byte ptr [rax - 0x41], al ; clc ; call qword ptr [rbx]
0x000000000049f2a3 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043782e : or al, byte ptr [rcx - 0x1a] ; dec dword ptr [rcx] ; ret 0xf109
0x0000000000420322 : or al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004751fd : or bh, 0x8a ; push rbp ; ret
0x000000000045a311 : or bh, al ; in al, dx ; ret 0xe8ff
0x00000000004822f5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000447351 : or bh, bl ; sub al, -0x47 ; ret
0x000000000044b41d : or byte ptr [r15], 0x8f ; ret 6
0x0000000000440043 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x000000000045c440 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004ba06d : or byte ptr [rax], al ; add al, ah ; push rbp ; clc ; call rcx
0x0000000000485bc0 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000426211 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdx
0x00000000004ba02d : or byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; clc ; jmp rsi
0x0000000000475fd4 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000047d708 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000488d30 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004b901c : or byte ptr [rbx], dl ; cli ; jmp rax
0x000000000042d28b : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000044507a : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000441a23 : or byte ptr [rcx - 0x3646562c], cl ; in al, dx ; ret 0xbaa3
0x000000000044b41e : or byte ptr [rdi], 0x8f ; ret 6
0x0000000000440044 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004855f8 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x00000000004b9114 : or byte ptr [rsi], bh ; sti ; call rax
0x0000000000425373 : or ch, bh ; jmp 0x426a56
0x00000000004822f4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004679b6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000045cb44 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004260b6 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rbx
0x000000000040a8fa : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004773f0 : or dword ptr [rcx], esp ; ret
0x0000000000436be4 : or dword ptr [rip - 0x3480000], ecx ; ret
0x00000000004b8c21 : or eax, 0x36880000 ; cmc ; jmp rax
0x000000000043fd6f : or eax, 0x48000000 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004b332a : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004b8bf1 : or eax, 0xf2680000 ; hlt ; jmp qword ptr [rax]
0x000000000040aaeb : or eax, 0xfb80000 ; jnp 0x40aa79 ; ret 0x71b9
0x0000000000436be5 : or eax, 0xfcb80000 ; ret
0x000000000046fb75 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000425ef2 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rsi
0x0000000000425f35 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x00000000004ba31d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x27], dh ; clc ; call qword ptr [rcx]
0x00000000004ba27d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x3e], al ; clc ; jmp qword ptr [rax]
0x00000000004b8bb1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x63], cl ; hlt ; jmp qword ptr [rax]
0x00000000004ba2bd : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; sar eax, cl ; call qword ptr [rsi]
0x0000000000409f54 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x202db845], cl ; pop rdx ; ret 0x89c1
0x0000000000488dda : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004a8380 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x00000000004a8683 : or eax, esi ; pop rbp ; ret
0x00000000004a8757 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000425a67 : or ecx, dword ptr [rcx] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x0000000000425a66 : or ecx, dword ptr ss:[rcx] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x000000000045c6eb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004bc0e9 : or edi, edi ; call rax
0x00000000004a8756 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004a837f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004ba2bc : or r8d, dword ptr [rax] ; add byte ptr [rax], dl ; sar eax, cl ; call qword ptr [rsi]
0x0000000000420f12 : out -7, eax ; and esi, dword ptr [rbx - 0x47] ; ret
0x0000000000427043 : out 0x24, al ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004ac35d : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000045a700 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004682ab : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004b47cc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004028a5 : out dx, al ; stosd dword ptr [rdi], eax ; sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000456099 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000456218 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043efcf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046d462 : out dx, eax ; mov al, -0x47 ; ret
0x000000000049e0be : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004aff89 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000046fe6e : outsb dx, byte ptr [rsi] ; ret
0x0000000000450019 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000469395 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000045dfe6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004693e0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000047ef91 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004b9355 : outsd dx, dword ptr [rsi] ; cld ; jmp rax
0x000000000049073d : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x00000000004aff8c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000047ff9c : pop ax ; jb 0x47ffd1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000049e0bf : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000430917 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b655c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046c68f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430919 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b655e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043091b : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b6560 : pop r14 ; pop r15 ; ret
0x0000000000406aa2 : pop r14 ; pop rbp ; ret
0x000000000043091d : pop r15 ; pop rbp ; ret
0x00000000004b6562 : pop r15 ; ret
0x000000000049c433 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000047ff9d : pop rax ; jb 0x47ffd0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004b8dec : pop rax ; jo 0x4b8dea ; call qword ptr [rax]
0x0000000000425ef1 : pop rax ; or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call rsi
0x00000000004bb0b8 : pop rax ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000439617 : pop rax ; pop rbx ; ret 0x894a
0x00000000004396e7 : pop rax ; pop rbx ; ret 0x8a4a
0x0000000000439706 : pop rax ; pop rbx ; ret 0xb24a
0x0000000000431ee1 : pop rbp ; adc byte ptr [rdi], cl ; ret
0x00000000004a3972 : pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000422191 : pop rbp ; lds eax, ptr [r9 - 0xa] ; jmp qword ptr [rcx]
0x00000000004028a2 : pop rbp ; mov byte ptr [rip + 0x2babee], 1 ; ret
0x0000000000402841 : pop rbp ; mov edi, 0x6bd438 ; jmp rax
0x000000000040287e : pop rbp ; mov rsi, rax ; mov edi, 0x6bd438 ; jmp rdx
0x00000000004b655b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043091a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b655f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000466152 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000462425 : pop rbp ; pop rcx ; ret 0x8589
0x000000000046616e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000402835 : pop rbp ; ret
0x00000000004b8f2d : pop rbp ; stc ; jmp qword ptr [rax]
0x00000000004bb0b9 : pop rbp ; sti ; jmp qword ptr [rax]
0x000000000046c68e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043918a : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406aa1 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000411ea0 : pop rbx ; pop rbp ; ret
0x000000000047d710 : pop rbx ; ret
0x0000000000475c15 : pop rbx ; ret 0x45e9
0x0000000000472582 : pop rbx ; ret 0x8589
0x0000000000439618 : pop rbx ; ret 0x894a
0x00000000004396e8 : pop rbx ; ret 0x8a4a
0x0000000000475b13 : pop rbx ; ret 0xaba
0x0000000000439707 : pop rbx ; ret 0xb24a
0x00000000004448a7 : pop rbx ; ret 0xd0b
0x0000000000475c5f : pop rbx ; ret 0xfbe9
0x00000000004782c2 : pop rcx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000466153 : pop rcx ; ret 0x1b2
0x0000000000460826 : pop rcx ; ret 0x8589
0x000000000046616f : pop rcx ; ret 0x8b48
0x00000000004684a0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004ba111 : pop rdi ; clc ; call qword ptr [rbx]
0x00000000004807ff : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000043091e : pop rdi ; pop rbp ; ret
0x000000000048a236 : pop rdi ; ret
0x0000000000444560 : pop rdi ; ret 0x8589
0x0000000000445610 : pop rdi ; ret 0x95b9
0x000000000040609d : pop rdi ; ret 0xffff
0x00000000004bb159 : pop rdi ; sti ; jmp qword ptr [rdi]
0x000000000040b346 : pop rdx ; ret 0x81c1
0x0000000000409f5c : pop rdx ; ret 0x89c1
0x000000000044424f : pop rdx ; ret 0xd0b
0x000000000040b37a : pop rdx ; ret 0xe9c1
0x00000000004b0c5b : pop rsi ; adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000043091c : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004b6561 : pop rsi ; pop r15 ; ret
0x0000000000406aa3 : pop rsi ; pop rbp ; ret
0x0000000000489c5a : pop rsi ; ret
0x0000000000431e8d : pop rsp ; adc byte ptr [rdi], cl ; ret
0x00000000004ba1d4 : pop rsp ; or al, byte ptr [rax] ; add al, cl ; mov bh, al ; jmp qword ptr [rax]
0x0000000000430918 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b655d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046c690 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000460825 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000450030 : pop rsp ; ret 0xf66
0x00000000004bb2d4 : pop rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x62], bh ; sti ; call qword ptr [rdx]
0x000000000049daad : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x00000000004b8bb5 : popfq ; hlt ; jmp qword ptr [rax]
0x00000000004b5615 : popfq ; ret 0xd284
0x0000000000422b82 : push -0x16000023 ; ret 0x3e
0x0000000000455fe5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000466150 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000046833a : push -0x75425eeb ; push rbp ; ret
0x0000000000464e98 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004b8ddd : push -8 ; call rax
0x0000000000420011 : push 0 ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x000000000042c53d : push 0x17 ; ret
0x0000000000439764 : push 0x48fffc8c ; add esp, 0x10 ; pop rbp ; ret
0x00000000004b910f : push qword ptr [rax + 0x8000021] ; sti ; call rax
0x00000000004b8e17 : push qword ptr [rax - 0x37ffffeb] ; jne 0x4b8e1f ; call rax
0x00000000004b8dd7 : push qword ptr [rax - 0x47ffffec] ; push -8 ; call rax
0x00000000004b914f : push qword ptr [rax - 0x67ffffde] ; sti ; call rax
0x000000000041f5a8 : push qword ptr [rbp - 0x31] ; call qword ptr [rdi]
0x0000000000425a3b : push qword ptr [rbx - 0x2b] ; ret 0x88e3
0x000000000041ff8a : push r13 ; fisttp qword ptr [rcx - 0x47] ; xor rdx, rbp ; ret
0x00000000004b8de7 : push rax ; adc al, 0 ; add byte ptr [rax + 0x70], bl ; clc ; call qword ptr [rax]
0x00000000004b8da7 : push rax ; adc eax, dword ptr [rax] ; add byte ptr [rax + 0x64], cl ; clc ; call qword ptr [rax]
0x00000000004b911f : push rax ; and dword ptr [rax], eax ; add byte ptr [rax], ch ; sti ; call qword ptr [rax]
0x00000000004002fd : push rax ; jbe 0x4002a2 ; ret
0x00000000004a3971 : push rax ; pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000402b26 : push rax ; pop rbp ; ret
0x0000000000425edc : push rax ; ret 0xfffd
0x00000000004b8f1d : push rax ; stc ; jmp rax
0x0000000000408241 : push rbp ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000476501 : push rbp ; call 0x30a0df3
0x00000000004ba071 : push rbp ; clc ; call rcx
0x00000000004ba031 : push rbp ; clc ; jmp rsi
0x0000000000471696 : push rbp ; clc ; pop rbp ; ret
0x00000000004bb7c1 : push rbp ; cld ; jmp qword ptr [rcx]
0x00000000004a84a4 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000041ff8b : push rbp ; fisttp qword ptr [rcx - 0x47] ; xor rdx, rbp ; ret
0x000000000045145c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044fd48 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000046fce2 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 0x13
0x00000000004028c4 : push rbp ; mov edi, 0x6bce20 ; mov rbp, rsp ; call rax
0x0000000000424c89 : push rbp ; ret
0x00000000004979ff : push rbp ; ret 0x1b2
0x0000000000424c1f : push rbp ; ret 0xd284
0x000000000047b4a0 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000049aeff : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000457d86 : push rbp ; shr al, 1 ; ret
0x00000000004668cf : push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004669a9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404a81 : push rbx ; call rdi
0x000000000042ad4f : push rbx ; mov cl, -0x47 ; ret 0x2cb
0x000000000048710a : push rbx ; ret
0x0000000000443542 : push rbx ; ret 0x48b9
0x0000000000442f72 : push rbx ; ret 0x89b9
0x0000000000443526 : push rbx ; ret 0xb2b9
0x0000000000475c12 : push rbx ; salc ; pop rbx ; ret 0x45e9
0x0000000000475c5c : push rbx ; salc ; pop rbx ; ret 0xfbe9
0x00000000004aff8b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004a3cb2 : push rdi ; ret
0x000000000044773f : push rdi ; ret 0xc750
0x0000000000486026 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000403e79 : push rdx ; call rdi
0x00000000004aa87c : push rsi ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x00000000004153cf : push rsi ; ret
0x00000000004476fd : push rsi ; ret 0xc750
0x000000000042270c : pushfq ; int 0x35
0x00000000004a0eb2 : pushfq ; ret
0x0000000000435260 : pushfq ; ret 0x8445
0x0000000000434da0 : pushfq ; ret 0xd284
0x00000000004bb514 : pushfq ; sbb eax, 0x1780000 ; cld ; jmp qword ptr [rax]
0x00000000004b8e98 : rcl byte ptr [rdi], 0 ; add byte ptr [rax - 3], bh ; clc ; jmp rax
0x00000000004b8e58 : rcl byte ptr [rsi], 0 ; add byte ptr [rax], ch ; fprem ; jmp rax
0x00000000004b8fd8 : rcr byte ptr [rax + rax], 0 ; or ah, cl ; stc ; jmp rax
0x0000000000420c77 : rcr byte ptr [rbp], cl ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000004b8f98 : rcr byte ptr [rbx], 0 ; add al, bh ; wait ; stc ; jmp rax
0x00000000004b8f18 : rcr byte ptr [rcx], 0 ; add byte ptr [rax + 0x50], bh ; stc ; jmp rax
0x00000000004bae70 : rcr byte ptr [rdi], -5 ; call rdx
0x00000000004b9098 : rcr byte ptr [rdi], 0 ; add al, cl ; cli ; jmp rax
0x00000000004b8f58 : rcr byte ptr [rdx], 0 ; add al, ch ; jae 0x4b8f5f ; jmp rax
0x00000000004b9018 : rcr byte ptr [rip + 0x13080000], -6 ; jmp rax
0x0000000000400301 : ret
0x0000000000406e9d : ret 0
0x0000000000451460 : ret 0x10
0x0000000000485bfa : ret 0x108
0x0000000000405d9d : ret 0x11
0x000000000048dea0 : ret 0x1111
0x0000000000404d9d : ret 0x12
0x0000000000497a1f : ret 0x124
0x0000000000444ec3 : ret 0x13
0x00000000004493a3 : ret 0x148
0x0000000000442436 : ret 0x1538
0x0000000000429209 : ret 0x16
0x0000000000406d46 : ret 0x17e9
0x000000000048f794 : ret 0x19
0x000000000042eaef : ret 0x19d
0x00000000004694a4 : ret 0x1a
0x000000000045e71d : ret 0x1add
0x000000000048ea98 : ret 0x1b
0x0000000000424bf5 : ret 0x1b0
0x000000000040d02a : ret 0x1b1e
0x0000000000424af8 : ret 0x1b2
0x000000000044fa3d : ret 0x1cdd
0x0000000000498928 : ret 0x1d
0x000000000044f965 : ret 0x1e1
0x0000000000424987 : ret 0x20
0x000000000044554e : ret 0x2018
0x0000000000441300 : ret 0x209e
0x0000000000478e80 : ret 0x2145
0x00000000004758ac : ret 0x214c
0x0000000000474d5d : ret 0x214d
0x000000000048ed94 : ret 0x23
0x000000000045f06a : ret 0x23da
0x000000000041131c : ret 0x2453
0x0000000000491588 : ret 0x24cc
0x0000000000496f0e : ret 0x25
0x0000000000414606 : ret 0x254e
0x0000000000403c2d : ret 0x25b8
0x000000000046bd68 : ret 0x279e
0x000000000045001a : ret 0x280f
0x000000000041278a : ret 0x28ed
0x00000000004ad231 : ret 0x2941
0x000000000043c7f5 : ret 0x2948
0x00000000004684a4 : ret 0x2a
0x0000000000414d76 : ret 0x2a24
0x000000000043e6eb : ret 0x2a50
0x0000000000498970 : ret 0x2ae8
0x000000000042621d : ret 0x2ae9
0x0000000000494dce : ret 0x2b
0x00000000004027c2 : ret 0x2bab
0x00000000004025c2 : ret 0x2bac
0x00000000004023c2 : ret 0x2bad
0x00000000004021c2 : ret 0x2bae
0x00000000004287ed : ret 0x2cb
0x00000000004668d2 : ret 0x2d50
0x00000000004705eb : ret 0x2de3
0x00000000004afaee : ret 0x3040
0x00000000004234b6 : ret 0x3141
0x000000000044c409 : ret 0x3145
0x00000000004a167a : ret 0x315e
0x000000000049666a : ret 0x33
0x000000000047b05e : ret 0x34be
0x000000000045112a : ret 0x3504
0x000000000044ae8a : ret 0x355
0x0000000000426898 : ret 0x359b
0x0000000000409a93 : ret 0x35b9
0x0000000000441791 : ret 0x3948
0x00000000004673a4 : ret 0x3b
0x0000000000408268 : ret 0x3b16
0x00000000004905e0 : ret 0x3d94
0x0000000000422b87 : ret 0x3e
0x000000000043fe3d : ret 0x3eb9
0x000000000041a3a6 : ret 0x3ff
0x0000000000428921 : ret 0x415f
0x00000000004b3c2f : ret 0x4343
0x0000000000446892 : ret 0x43e9
0x0000000000436d56 : ret 0x44e8
0x0000000000411dc7 : ret 0x4589
0x000000000043e5d4 : ret 0x458b
0x0000000000475c16 : ret 0x45e9
0x0000000000422387 : ret 0x46
0x000000000045a44f : ret 0x4802
0x000000000044f700 : ret 0x4810
0x000000000049893f : ret 0x4813
0x00000000004aff8e : ret 0x4815
0x000000000043be35 : ret 0x4857
0x0000000000469396 : ret 0x4861
0x000000000049c651 : ret 0x4878
0x0000000000420895 : ret 0x4879
0x0000000000405379 : ret 0x48b0
0x0000000000443543 : ret 0x48b9
0x0000000000451db7 : ret 0x48c3
0x0000000000443cb9 : ret 0x48cd
0x000000000043b84e : ret 0x48d0
0x000000000046fdff : ret 0x48d3
0x000000000042f69d : ret 0x48db
0x00000000004227e4 : ret 0x48e0
0x00000000004052fa : ret 0x48f0
0x000000000044455f : ret 0x4a5f
0x0000000000461c51 : ret 0x4b
0x000000000043d57c : ret 0x4b06
0x0000000000405ba7 : ret 0x4b6d
0x000000000046d267 : ret 0x4cc0
0x0000000000406b05 : ret 0x4cf0
0x0000000000483472 : ret 0x4dbf
0x000000000041dc22 : ret 0x4e
0x000000000041822e : ret 0x4e18
0x000000000047ed0c : ret 0x4f0b
0x0000000000446ad9 : ret 0x4f66
0x0000000000490e16 : ret 0x5189
0x00000000004b01e8 : ret 0x52e8
0x00000000004039fe : ret 0x5475
0x0000000000425046 : ret 0x54e8
0x000000000044204c : ret 0x5589
0x000000000042defd : ret 0x558a
0x000000000049ac2f : ret 0x558b
0x0000000000466b5a : ret 0x5966
0x000000000044153e : ret 0x5a6
0x00000000004a73f0 : ret 0x5ae8
0x000000000047d967 : ret 0x5bc6
0x000000000044e96f : ret 0x5d68
0x0000000000445549 : ret 0x5ebb
0x0000000000474181 : ret 0x5fca
0x000000000049303b : ret 0x5fe8
0x000000000049af03 : ret 0x60
0x000000000043b727 : ret 0x601f
0x00000000004b624f : ret 0x61
0x0000000000415f4a : ret 0x61df
0x00000000004063c0 : ret 0x6348
0x000000000048b9fd : ret 0x6809
0x000000000045ddb6 : ret 0x6a8a
0x0000000000483baa : ret 0x6ea5
0x0000000000479b4a : ret 0x6f35
0x0000000000486cbc : ret 0x6fcb
0x0000000000433c4d : ret 0x708e
0x000000000040aaf2 : ret 0x71b9
0x000000000041c68a : ret 0x743
0x000000000040ac67 : ret 0x7473
0x000000000045da6e : ret 0x77a8
0x00000000004a95b7 : ret 0x7a
0x000000000045ebd1 : ret 0x7a8a
0x000000000046584b : ret 0x7b7f
0x0000000000475b78 : ret 0x7b9
0x0000000000418602 : ret 0x7e4
0x000000000041e987 : ret 0x80
0x000000000046c1fa : ret 0x8041
0x000000000040e7a1 : ret 0x812b
0x0000000000426368 : ret 0x8141
0x00000000004453df : ret 0x8148
0x0000000000441a06 : ret 0x81a3
0x000000000040b347 : ret 0x81c1
0x0000000000467764 : ret 0x822d
0x0000000000493034 : ret 0x8341
0x0000000000457992 : ret 0x8348
0x0000000000426c31 : ret 0x840
0x000000000042a9e7 : ret 0x844
0x0000000000405567 : ret 0x8445
0x00000000004043a0 : ret 0x8589
0x0000000000405b30 : ret 0x858a
0x00000000004503e9 : ret 0x86a5
0x0000000000436a84 : ret 0x86e8
0x00000000004aa95e : ret 0x86f8
0x000000000040ee32 : ret 0x8844
0x000000000046ee6d : ret 0x88b0
0x0000000000425a3e : ret 0x88e3
0x0000000000410a52 : ret 0x8901
0x0000000000446252 : ret 0x890e
0x000000000046ddf6 : ret 0x8912
0x000000000040d48c : ret 0x892b
0x0000000000417510 : ret 0x892c
0x0000000000439250 : ret 0x8934
0x0000000000459fc6 : ret 0x8938
0x000000000045e7e3 : ret 0x8940
0x00000000004238e2 : ret 0x8941
0x0000000000443d41 : ret 0x8944
0x0000000000488d05 : ret 0x8945
0x0000000000473cea : ret 0x8946
0x000000000041e752 : ret 0x8948
0x0000000000439619 : ret 0x894a
0x000000000043760a : ret 0x894d
0x000000000043b585 : ret 0x8957
0x00000000004039ab : ret 0x895a
0x000000000045dfe7 : ret 0x8961
0x00000000004150c0 : ret 0x8979
0x0000000000411f62 : ret 0x897f
0x00000000004ad031 : ret 0x898c
0x0000000000483148 : ret 0x898d
0x000000000043e1d7 : ret 0x898e
0x000000000048c16e : ret 0x8994
0x000000000044a5dc : ret 0x899a
0x00000000004405aa : ret 0x89a3
0x000000000044a1d7 : ret 0x89b5
0x0000000000442f73 : ret 0x89b9
0x0000000000409f5d : ret 0x89c1
0x00000000004a16e0 : ret 0x89c5
0x00000000004a4a22 : ret 0x89cd
0x000000000042e8dd : ret 0x89db
0x000000000048b32e : ret 0x89e0
0x0000000000419148 : ret 0x89e3
0x000000000043abad : ret 0x89e6
0x0000000000418c40 : ret 0x89ef
0x000000000049b7ba : ret 0x89f5
0x0000000000403def : ret 0x89fc
0x00000000004afba8 : ret 0x8a44
0x0000000000475ee1 : ret 0x8a46
0x00000000004396e9 : ret 0x8a4a
0x0000000000441b0e : ret 0x8aa3
0x000000000043c38c : ret 0x8ae6
0x0000000000410952 : ret 0x8b01
0x00000000004461c0 : ret 0x8b0e
0x00000000004234bc : ret 0x8b44
0x000000000040698f : ret 0x8b48
0x000000000040690e : ret 0x8b4c
0x0000000000423339 : ret 0x8d88
0x0000000000424a10 : ret 0x8d89
0x0000000000406067 : ret 0x8db9
0x000000000043108e : ret 0x9115
0x0000000000498695 : ret 0x919d
0x0000000000492598 : ret 0x9214
0x000000000040315a : ret 0x92e1
0x000000000041608a : ret 0x93
0x0000000000481fc2 : ret 0x941
0x00000000004a8732 : ret 0x949
0x000000000048971d : ret 0x94b9
0x0000000000474d76 : ret 0x94d
0x0000000000423d86 : ret 0x958a
0x0000000000424b14 : ret 0x958b
0x0000000000445612 : ret 0x95b9
0x00000000004a1e36 : ret 0x9bb9
0x0000000000407e31 : ret 0x9e8
0x000000000040a5a7 : ret 0xa
0x0000000000439285 : ret 0xa122
0x00000000004669ac : ret 0xa30b
0x000000000048a7c9 : ret 0xa8b9
0x0000000000475b14 : ret 0xaba
0x000000000048260f : ret 0xac60
0x000000000041cda6 : ret 0xac87
0x000000000040604c : ret 0xb0
0x00000000004a58bc : ret 0xb041
0x0000000000421e04 : ret 0xb0b9
0x0000000000427d52 : ret 0xb21d
0x0000000000439708 : ret 0xb24a
0x000000000043be19 : ret 0xb257
0x0000000000412f22 : ret 0xb27f
0x0000000000484ff8 : ret 0xb28d
0x0000000000443527 : ret 0xb2b9
0x0000000000475025 : ret 0xb640
0x00000000004682b0 : ret 0xb740
0x000000000047bbc6 : ret 0xb7eb
0x0000000000490994 : ret 0xb841
0x00000000004415d5 : ret 0xb848
0x0000000000441784 : ret 0xb849
0x000000000046e46d : ret 0xb912
0x000000000041fd1c : ret 0xb92c
0x00000000004664e0 : ret 0xb940
0x000000000049b2da : ret 0xb941
0x00000000004540cb : ret 0xb948
0x00000000004afa32 : ret 0xb94a
0x00000000004ad1e0 : ret 0xb98c
0x000000000043e415 : ret 0xb98e
0x000000000044a830 : ret 0xb99a
0x00000000004a21d9 : ret 0xb9c5
0x00000000004a54f5 : ret 0xb9cd
0x000000000048b43b : ret 0xb9e0
0x000000000041ed78 : ret 0xb9e3
0x00000000004253c4 : ret 0xb9ef
0x000000000049bb24 : ret 0xb9f5
0x0000000000441679 : ret 0xb9fc
0x0000000000405b7d : ret 0xba5a
0x0000000000441a2a : ret 0xbaa3
0x000000000043a998 : ret 0xbb10
0x00000000004148c2 : ret 0xbb72
0x000000000044674d : ret 0xbcb9
0x000000000046892c : ret 0xbf48
0x00000000004197f3 : ret 0xbfd6
0x0000000000402865 : ret 0xc148
0x000000000044a21a : ret 0xc226
0x00000000004b6492 : ret 0xc493
0x0000000000419d33 : ret 0xc6ad
0x000000000049a085 : ret 0xc731
0x00000000004476fe : ret 0xc750
0x0000000000425017 : ret 0xc889
0x000000000042547d : ret 0xca21
0x00000000004786cd : ret 0xca29
0x000000000048db20 : ret 0xcaed
0x000000000043fba9 : ret 0xcb9
0x00000000004b6255 : ret 0xccb2
0x000000000041a2e3 : ret 0xcda2
0x000000000042066b : ret 0xcfe8
0x000000000047befd : ret 0xd
0x000000000043aa93 : ret 0xd05f
0x0000000000406943 : ret 0xd088
0x0000000000444250 : ret 0xd0b
0x000000000048ae47 : ret 0xd0e9
0x00000000004932e3 : ret 0xd108
0x0000000000445569 : ret 0xd1e8
0x0000000000405ffa : ret 0xd284
0x000000000042bad8 : ret 0xd2e8
0x000000000040693e : ret 0xd2f7
0x0000000000419c6e : ret 0xd359
0x000000000048978d : ret 0xd3e9
0x00000000004228bd : ret 0xd609
0x00000000004ae1f5 : ret 0xd618
0x0000000000425483 : ret 0xd689
0x000000000044bf21 : ret 0xd701
0x000000000042d694 : ret 0xd888
0x000000000046fbcf : ret 0xde9
0x000000000040ab46 : ret 0xdffa
0x00000000004991cf : ret 0xe083
0x0000000000433221 : ret 0xe171
0x000000000047f288 : ret 0xe1a5
0x000000000040b508 : ret 0xe280
0x000000000040f8e5 : ret 0xe40a
0x00000000004828bc : ret 0xe41a
0x000000000040a311 : ret 0xe472
0x000000000042b7c5 : ret 0xe5e8
0x0000000000495c4f : ret 0xe721
0x000000000043855c : ret 0xe8c7
0x0000000000459ff3 : ret 0xe8ff
0x000000000046e53e : ret 0xe912
0x0000000000468182 : ret 0xe940
0x000000000049b355 : ret 0xe941
0x00000000004693e1 : ret 0xe961
0x000000000049062c : ret 0xe994
0x000000000044a9df : ret 0xe99a
0x000000000040b37b : ret 0xe9c1
0x00000000004a23bf : ret 0xe9c5
0x00000000004a6383 : ret 0xe9cd
0x00000000004b2d14 : ret 0xe9d2
0x00000000004269ed : ret 0xe9ef
0x000000000040558e : ret 0xe9fc
0x000000000045f20d : ret 0xea51
0x000000000044a8eb : ret 0xea81
0x000000000046af9c : ret 0xee8
0x0000000000495df2 : ret 0xef52
0x00000000004a559f : ret 0xf040
0x0000000000437836 : ret 0xf109
0x000000000043c19d : ret 0xf1aa
0x000000000043bd0c : ret 0xf1b2
0x0000000000425346 : ret 0xf221
0x000000000042a420 : ret 0xf280
0x0000000000423633 : ret 0xf281
0x000000000040bfba : ret 0xf3a7
0x0000000000423c52 : ret 0xf40
0x000000000044501d : ret 0xf41
0x0000000000458aac : ret 0xf4e9
0x0000000000450031 : ret 0xf66
0x000000000048de14 : ret 0xf6bd
0x00000000004752a4 : ret 0xf709
0x0000000000420624 : ret 0xf748
0x0000000000468f35 : ret 0xf7f3
0x000000000047fa6a : ret 0xf82b
0x00000000004076ee : ret 0xfa81
0x000000000049a081 : ret 0xfa89
0x0000000000475c60 : ret 0xfbe9
0x00000000004676be : ret 0xfc75
0x000000000042b27a : ret 0xfd72
0x000000000042073a : ret 0xfe1b
0x0000000000457bbf : ret 0xff3
0x0000000000423672 : ret 0xff35
0x00000000004312f5 : ret 0xff44
0x00000000004053cd : ret 0xff70
0x0000000000468f2f : ret 0xffa5
0x000000000048a933 : ret 0xffbe
0x00000000004676b8 : ret 0xffc4
0x00000000004668d8 : ret 0xffd5
0x00000000004669b2 : ret 0xffd8
0x000000000046776a : ret 0xffd9
0x0000000000466b54 : ret 0xffe0
0x000000000040ab4c : ret 0xfff6
0x00000000004ba281 : ret 0xfff8
0x0000000000465845 : ret 0xfffa
0x0000000000445e97 : ret 0xfffb
0x00000000004363b5 : ret 0xfffc
0x000000000040ac61 : ret 0xfffd
0x000000000049a355 : ret 0xfffe
0x000000000040603e : ret 0xffff
0x0000000000407364 : ret 1
0x000000000042c60c : ret 2
0x000000000048ab57 : ret 3
0x0000000000444ef2 : ret 4
0x0000000000408b40 : ret 6
0x000000000040ef40 : ret 7
0x0000000000441bfe : ret 8
0x000000000046f931 : ret 9
0x00000000004868f0 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000042f99c : rol bh, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x19d
0x00000000004aff6d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004979fa : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x00000000004084b8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a26dc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044db0a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a8c1a : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000459e11 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000487be8 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004877ba : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x00000000004107da : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004aff6c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000041f3cd : rol dword ptr [rcx + 0xf], -0x62 ; ret 0x8445
0x0000000000492d07 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x00000000004868ef : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000042f99b : rol r15b, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x19d
0x0000000000411707 : ror byte ptr [r11 - 0x1376b800], 1 ; pop rbp ; ret
0x00000000004aa71d : ror byte ptr [r8 - 0x75], 0 ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000451c90 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045253e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044c2a1 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047ff94 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004b8be0 : ror byte ptr [rax + rax], 0 ; cmp ch, ah ; hlt ; jmp rax
0x000000000040286c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40287b ; pop rbp ; ret
0x00000000004aa71e : ror byte ptr [rax - 0x75], 0 ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000451c91 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045253f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004aa150 : ror byte ptr [rax - 0x75], 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x4aa112 ; call rax
0x00000000004aa58c : ror byte ptr [rax - 0x75], 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x4aa54e ; call rax
0x00000000004aa78e : ror byte ptr [rax - 0x75], 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x4aa748 ; call rax
0x000000000044c2a2 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040785a : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000045077a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000048688b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4868f4 ; ret
0x0000000000426c90 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000047b4a1 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000043ec5b : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b069 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042baba : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412fbe : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004086ba : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4086ca ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439f9d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049c8f7 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049af00 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x00000000004758a9 : ror byte ptr [rbp + 0x21], cl ; ret 0x214c
0x00000000004a8755 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000411708 : ror byte ptr [rbx - 0x1376b800], 1 ; pop rbp ; ret
0x000000000045c6ea : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004a58b8 : ror byte ptr [rdi], -0x6b ; ret 0xb041
0x00000000004b8ca0 : ror byte ptr [rdi], 0 ; add byte ptr [rax], bl ; fcompi st(6) ; jmp rax
0x000000000049a07e : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x00000000004a8c2d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004b8c20 : ror byte ptr [rip + 0x36880000], -0xb ; jmp rax
0x00000000004b8c60 : ror byte ptr [rsi], 0 ; add byte ptr [rax - 0x7a], ch ; cmc ; jmp rax
0x00000000004a872f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x000000000049bf39 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000407d8c : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000049a34f : ror dword ptr [rax - 0x77], -0x32 ; call 0x486656
0x00000000004afd9e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004752b8 : ror dword ptr [rbp + 0x21], cl ; ret
0x000000000044539b : ror dword ptr [rbp + 0x29], cl ; ret
0x000000000047583f : ror dword ptr [rbp - 0x77], 1 ; ret 0x214d
0x000000000046d120 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004aa80c : sahf ; and eax, dword ptr [rbx - 0x17] ; ret 0
0x0000000000405597 : sahf ; mov dl, -0x47 ; ret
0x00000000004002ff : sahf ; ret
0x000000000041f3d0 : sahf ; ret 0x8445
0x0000000000405ff9 : sahf ; ret 0xd284
0x00000000004b94d0 : sal byte ptr [rax], 0 ; add al, bl ; jns 0x4b94dc ; jmp rax
0x00000000004b9550 : sal byte ptr [rdx], 0 ; add al, bh ; idiv esi ; jmp rax
0x00000000004b9bc1 : sal dh, cl ; call qword ptr [rdi]
0x00000000004a67cb : sal ebp, -1 ; pop rbp ; ret
0x0000000000475c14 : salc ; pop rbx ; ret 0x45e9
0x0000000000472581 : salc ; pop rbx ; ret 0x8589
0x0000000000475b12 : salc ; pop rbx ; ret 0xaba
0x0000000000475c5e : salc ; pop rbx ; ret 0xfbe9
0x00000000004396e4 : sar byte ptr [rbx - 0x47], 0x58 ; pop rbx ; ret 0x8a4a
0x00000000004a8714 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000449368 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x000000000040286e : sar eax, 1 ; jne 0x402879 ; pop rbp ; ret
0x00000000004ba2c1 : sar eax, cl ; call qword ptr [rsi]
0x00000000004684a1 : sar ebp, -0x17 ; ret 0x2a
0x000000000040286d : sar rax, 1 ; jne 0x40287a ; pop rbp ; ret
0x000000000042061f : sbb al, -2 ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000004bad71 : sbb al, -5 ; call rdi
0x00000000004ba278 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0xb ; add byte ptr [rax], al ; ret 0xfff8
0x0000000000419acb : sbb al, 0x39 ; ret
0x000000000046d460 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000489d6d : sbb al, 0x41 ; xchg eax, ebx ; ret
0x00000000004b8f59 : sbb al, byte ptr [rax] ; add al, ch ; jae 0x4b8f5e ; jmp rax
0x00000000004b8f29 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x5d], cl ; stc ; jmp qword ptr [rax]
0x00000000004bad11 : sbb bh, bl ; jmp qword ptr [rbx]
0x0000000000497ab2 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x00000000004aa792 : sbb byte ptr [rax - 0x75], cl ; jge 0x4aa744 ; call rax
0x00000000004aa791 : sbb byte ptr [rax - 0x75], cl ; jge 0x4aa745 ; call rax
0x00000000004b8d9c : sbb byte ptr [rcx - 8], ah ; call rax
0x00000000004b9414 : sbb byte ptr [rcx], al ; std ; jmp rax
0x0000000000497ab3 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b9364 : sbb byte ptr [rsi - 4], dh ; jmp qword ptr [rax]
0x00000000004b8edd : sbb cl, bh ; jmp rax
0x00000000004683a1 : sbb cl, ch ; ret
0x0000000000423ed5 : sbb dl, byte ptr [rax - 0x142a46df] ; ret
0x00000000004b8ee9 : sbb dword ptr [rax], eax ; add al, bh ; and edi, ecx ; jmp qword ptr [rax]
0x00000000004b8f19 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x50], bh ; stc ; jmp rax
0x00000000004bb0b5 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5d], bl ; sti ; jmp qword ptr [rax]
0x000000000047f7e3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044e8b1 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004b9019 : sbb eax, 0x13080000 ; cli ; jmp rax
0x00000000004bb515 : sbb eax, 0x1780000 ; cld ; jmp qword ptr [rax]
0x00000000004bb535 : sbb eax, 0x1f780000 ; cld ; jmp rsi
0x0000000000470de1 : sbb eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x00000000004bb4b5 : sbb eax, 0xe1780000 ; sti ; jmp rcx
0x00000000004b8fe9 : sbb eax, 0xe4980000 ; stc ; jmp qword ptr [rax]
0x00000000004b8f99 : sbb eax, dword ptr [rax] ; add al, bh ; wait ; stc ; jmp rax
0x00000000004bb2b5 : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x62], bh ; sti ; call qword ptr [rdx]
0x000000000045275d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000046c4b0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000476399 : sbb ecx, ebp ; ret 0
0x00000000004b902d : sbb edx, edi ; jmp qword ptr [rax]
0x00000000004117ad : scasb al, byte ptr [rdi] ; ret
0x000000000041750f : scasb al, byte ptr [rdi] ; ret 0x892c
0x000000000041fd1b : scasb al, byte ptr [rdi] ; ret 0xb92c
0x000000000043e93a : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8d253bb], cl ; ret 0x2a50
0x000000000048c9a0 : scasd eax, dword ptr [rdi] ; ret
0x00000000004ad030 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004ad1df : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x0000000000453504 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b377 : shl byte ptr [r9], 0x5a ; ret 0xe9c1
0x0000000000453506 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b378 : shl byte ptr [rcx], 0x5a ; ret 0xe9c1
0x000000000045004f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000457d87 : shr al, 1 ; ret
0x00000000004b93d0 : shr byte ptr [rax + rax], 0 ; js 0x4b9381 ; cld ; jmp rax
0x00000000004b9390 : shr byte ptr [rbx], 0 ; add byte ptr [rax], ch ; jns 0x4b939a ; jmp rax
0x00000000004b9410 : shr byte ptr [rip + 0x1180000], -3 ; jmp rax
0x00000000004b9450 : shr byte ptr [rsi], 0 ; add al, bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000004673a2 : shr cl, cl ; ret 0x3b
0x0000000000435b7c : stc ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret
0x000000000044ae85 : stc ; add byte ptr [rax], al ; add al, ch ; ret 0x355
0x000000000042d3c7 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000420f13 : stc ; and esi, dword ptr [rbx - 0x47] ; ret
0x00000000004ba602 : stc ; call qword ptr [rdx]
0x00000000004572f9 : stc ; in al, dx ; ret 0x8589
0x0000000000457c0c : stc ; in al, dx ; ret 0xff3
0x00000000004b8f26 : stc ; inc dword ptr [rax] ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x5d], cl ; stc ; jmp qword ptr [rax]
0x00000000004b8ee6 : stc ; inc dword ptr [rax] ; sbb dword ptr [rax], eax ; add al, bh ; and edi, ecx ; jmp qword ptr [rax]
0x00000000004b8fe6 : stc ; inc dword ptr [rax] ; sbb eax, 0xe4980000 ; stc ; jmp qword ptr [rax]
0x00000000004b8f56 : stc ; inc eax ; sbb al, byte ptr [rax] ; add al, ch ; jae 0x4b8f61 ; jmp rax
0x00000000004b8f16 : stc ; inc eax ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x50], bh ; stc ; jmp rax
0x00000000004b8f96 : stc ; inc eax ; sbb eax, dword ptr [rax] ; add al, bh ; wait ; stc ; jmp rax
0x00000000004b8eae : stc ; jmp qword ptr [rax]
0x00000000004b8ede : stc ; jmp rax
0x00000000004ba7a2 : stc ; jmp rbx
0x000000000048944c : stc ; mov cl, 0x37 ; ret 0x4589
0x000000000049dab5 : stc ; ret
0x000000000046fdfe : stc ; ret 0x48d3
0x00000000004651dd : stc ; ret 0x77a8
0x00000000004b8e9d : std ; clc ; jmp rax
0x00000000004b944e : std ; inc eax ; add byte ptr cs:[rax], al ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000425374 : std ; jmp 0x426a55
0x00000000004b9426 : std ; jmp qword ptr [rax]
0x00000000004b9416 : std ; jmp rax
0x000000000046bd67 : std ; ret 0x279e
0x0000000000400334 : sti ; add eax, 0xd0a4f270 ; ret
0x0000000000410ce8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004b9126 : sti ; call qword ptr [rax]
0x00000000004bae92 : sti ; call qword ptr [rbx]
0x00000000004bb2ba : sti ; call qword ptr [rdx]
0x00000000004b9116 : sti ; call rax
0x00000000004bad72 : sti ; call rdi
0x00000000004bae72 : sti ; call rdx
0x00000000004bb0ba : sti ; jmp qword ptr [rax]
0x00000000004bad12 : sti ; jmp qword ptr [rbx]
0x00000000004bb15a : sti ; jmp qword ptr [rdi]
0x00000000004bb4ba : sti ; jmp rcx
0x00000000004b910e : sti ; push qword ptr [rax + 0x8000021] ; sti ; call rax
0x00000000004b914e : sti ; push qword ptr [rax - 0x67ffffde] ; sti ; call rax
0x00000000004b911e : sti ; push rax ; and dword ptr [rax], eax ; add byte ptr [rax], ch ; sti ; call qword ptr [rax]
0x00000000004320f5 : sti ; ret
0x00000000004572f8 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000498694 : stosb byte ptr [rdi], al ; ret 0x919d
0x00000000004a8713 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000048663b : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004171e2 : stosd dword ptr [rdi], eax ; ret
0x00000000004028a6 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000420222 : sub al, -0x17 ; and eax, 0xb8000068 ; ret 0x3ff
0x0000000000447354 : sub al, -0x47 ; ret
0x00000000004b93d1 : sub al, 0 ; add byte ptr [rax - 0x5c], bh ; cld ; jmp rax
0x000000000049b14c : sub al, 0x35 ; ret 0x8941
0x000000000049b2d8 : sub al, 0x35 ; ret 0xb941
0x000000000049b353 : sub al, 0x35 ; ret 0xe941
0x000000000049d0b1 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x00000000004804ff : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x00000000004b9321 : sub al, byte ptr [rax] ; add al, ch ; cld ; jmp qword ptr [rax]
0x0000000000447d6e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b9124 : sub byte ptr [rax - 5], al ; call qword ptr [rax]
0x0000000000424221 : sub byte ptr [rax], al ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rsp
0x0000000000482716 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000447c58 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004668d5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004b9394 : sub byte ptr [rcx - 4], bh ; jmp rax
0x00000000004b8e5c : sub cl, bl ; clc ; jmp rax
0x00000000004668cb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004669a5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004bc0e5 : sub dword ptr [rax], eax ; add byte ptr [rax], ch ; or edi, edi ; call rax
0x00000000004453d9 : sub dword ptr [rip + 0x14c18da], ebp ; ret 0x8148
0x00000000004453ed : sub dword ptr [rip + 0x294c18da], ebp ; ret 0x8b4c
0x00000000004b9411 : sub eax, 0x1180000 ; std ; jmp rax
0x00000000004453da : sub eax, 0x14c18da ; ret 0x8148
0x00000000004453ee : sub eax, 0x294c18da ; ret 0x8b4c
0x00000000004979e9 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x000000000048500e : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x0000000000467765 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004b93e1 : sub eax, 0xdab80000 ; cld ; jmp qword ptr [rax]
0x00000000004b9361 : sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; jbe 0x4b9369 ; jmp qword ptr [rax]
0x00000000004b9391 : sub eax, dword ptr [rax] ; add byte ptr [rax], ch ; jns 0x4b9399 ; jmp rax
0x00000000004028a7 : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000048663d : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043a210 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000044353c : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x000000000047ff9f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004b6611 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004453d8 : sub qword ptr [rip + 0x14c18da], r13 ; ret 0x8148
0x00000000004453ec : sub qword ptr [rip + 0x294c18da], r13 ; ret 0x8b4c
0x000000000048663c : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004b6610 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000048a07f : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x0000000000450313 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000419a11 : test ah, dl ; ret 0
0x00000000004aa8a9 : test al, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x0000000000476504 : test al, -0x3e ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000457fa9 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004668d0 : test al, -0x7f ; ret 0x2d50
0x00000000004669aa : test al, -0x7f ; ret 0xa30b
0x0000000000459d47 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004af843 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000486c17 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004b8edc : test al, 0x18 ; stc ; jmp rax
0x000000000047b05c : test al, 0x2d ; ret 0x34be
0x00000000004ad02d : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000046cb3e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000469106 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000047ee88 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004221ec : test al, bh ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rsi]
0x000000000045518d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045705a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004b3db1 : test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000048a480 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004b656a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004195b1 : test byte ptr [rax], dh ; ret
0x0000000000479f56 : test byte ptr [rbp - 0x16fffffa], bh ; ret 1
0x000000000049f6a2 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x000000000044ba60 : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000040a8f8 : test byte ptr [rbx - 0x16fffff7], bl ; ret 1
0x000000000046dff3 : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000421c71 : test byte ptr [rcx - 0x6a], bh ; and eax, 0xb12da1b9 ; ret
0x000000000045705b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000049ec46 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045d74c : test byte ptr [rcx], ch ; ret 0
0x00000000004873cf : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x00000000004067dd : test byte ptr [rdi], 0x44 ; ret 0x8589
0x00000000004a7646 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004b39b0 : test byte ptr [rdx - 0x16fffffa], bl ; ret
0x00000000004a1c61 : test byte ptr [rip - 0x16fffff9], dl ; ret 1
0x00000000004b1ce4 : test byte ptr [rip - 0x16fffffc], al ; ret 1
0x0000000000480501 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x000000000042cf86 : test byte ptr [rsi - 0x16fffffc], al ; ret 1
0x0000000000436ac7 : test byte ptr [rsi - 0x48], -0x40 ; ret 0x9115
0x00000000004ba5fc : test byte ptr [rsi], cl ; add byte ptr [rax], al ; loopne 0x4ba652 ; stc ; call qword ptr [rdx]
0x000000000049d881 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000044f2a2 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040735e : test dh, al ; add al, 0 ; add cl, ch ; ret 1
0x000000000049aa55 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000458587 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004abda1 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004405f6 : test dword ptr [rax + 0x2dffffef], ebp ; leave ; in al, dx ; ret 0x89a3
0x0000000000440206 : test dword ptr [rax + 0x2dffffef], ebp ; ret
0x00000000004412fa : test dword ptr [rax + 0x2dffffef], ebp ; ret 0x209e
0x000000000043aae1 : test dword ptr [rax + 0x2dfffffe], ecx ; ret
0x000000000043b721 : test dword ptr [rax + 0x2dfffffe], ecx ; ret 0x601f
0x000000000043aa8d : test dword ptr [rax + 0x2dfffffe], ecx ; ret 0xd05f
0x000000000043b0ad : test dword ptr [rax + 0x2dfffffe], ecx ; xchg eax, ebp ; call rax
0x000000000043abf9 : test dword ptr [rax + 0x2dfffffe], ecx ; xchg eax, ebp ; ret 0x89e6
0x000000000043b101 : test dword ptr [rax + 0x2dfffffe], ecx ; xchg eax, esi ; call rax
0x000000000045d746 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000047ea33 : test dword ptr [rax - 0x17000004], ebp ; ret
0x000000000048c1fd : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x00000000004aa806 : test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x00000000004aa72d : test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x00000000004aa19b : test dword ptr [rbx + rdi*8 - 1], esi ; call rsp
0x00000000004aa872 : test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x00000000004aa881 : test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x0000000000429202 : test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x16
0x0000000000473d41 : test dword ptr [rcx + rdi*8 - 0x7bf00001], ebp ; ret
0x000000000041dc1b : test dword ptr [rcx - 0x7bf00001], ebx ; ret 0x4e
0x00000000004822f7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004822b7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000482232 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000485824 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004863a1 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000486347 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000048627d : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x00000000004855ab : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000486239 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x00000000004a657b : test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x000000000047ef96 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000445953 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x000000000046db9e : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000406781 : test dword ptr [rdi + rdi*8 - 1], edx ; call rdi
0x00000000004706a7 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000455f71 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000447446 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x000000000043dcb9 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000046c75a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000043d868 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsp
0x000000000042786a : test dword ptr [rdi*8 - 0x7bf00001], ebp ; ret
0x000000000042794a : test dword ptr [rdi*8 - 0x7bf00001], ecx ; ret
0x000000000043acac : test dword ptr [rdi*8 - 0x7bf00001], edx ; ret
0x0000000000492549 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x0000000000473609 : test dword ptr [rdx + rdi*8 - 0x7bf00001], esi ; jmp qword ptr [rsi]
0x0000000000404d96 : test dword ptr [rdx + rdi*8 - 0x7bf00001], esp ; ret 0x12
0x0000000000420802 : test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x000000000042681a : test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rbx]
0x000000000041f011 : test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdi]
0x0000000000420015 : test dword ptr [rdx + rdi*8 - 1], ecx ; call qword ptr [rdx]
0x000000000042557a : test dword ptr [rdx + rdi*8 - 1], ecx ; call rax
0x000000000042453f : test dword ptr [rdx + rdi*8 - 1], ecx ; call rbx
0x0000000000424530 : test dword ptr [rdx + rdi*8 - 1], ecx ; call rcx
0x0000000000422d92 : test dword ptr [rdx + rdi*8 - 1], ecx ; call rdi
0x000000000042644e : test dword ptr [rdx + rdi*8 - 1], ecx ; call rdx
0x0000000000413125 : test dword ptr [rdx + rdi*8 - 1], ecx ; call rsi
0x0000000000425cf9 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000041f793 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000425a6b : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rcx]
0x00000000004261ae : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004221c7 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rsi]
0x00000000004212d9 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rax
0x00000000004260ba : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rbx
0x000000000042601c : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rcx
0x0000000000425f82 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdi
0x0000000000426215 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdx
0x0000000000425952 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rsi
0x00000000004233b4 : test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rsp
0x000000000041f5a4 : test dword ptr [rdx + rdi*8 - 1], ecx ; push qword ptr [rbp - 0x31] ; call qword ptr [rdi]
0x0000000000425a37 : test dword ptr [rdx + rdi*8 - 1], ecx ; push qword ptr [rbx - 0x2b] ; ret 0x88e3
0x000000000046817b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004693da : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040e4d4 : test dword ptr [rsi + rdi*8 - 0x390a0001], edx ; ret
0x0000000000479379 : test dword ptr [rsi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000478275 : test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000479358 : test dword ptr [rsi + rdi*8 - 1], ebx ; jmp rsi
0x0000000000464e9a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000043aff4 : test dword ptr [rsp + rdi*8 - 0x7bf00001], ebx ; ret
0x00000000004238dd : test eax, 0x21448e2b ; ret 0x8941
0x000000000046938f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004954a7 : test esi, esp ; ret
0x00000000004221eb : test r8b, r15b ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp qword ptr [rsi]
0x00000000004b1473 : unpckhps xmm6, xmmword ptr [rsi] ; ret
0x000000000046739f : wait ; jge 0x467381 ; shr cl, cl ; ret 0x3b
0x000000000046245d : wait ; jo 0x46246b ; ret
0x00000000004659ac : wait ; jo 0x4659ba ; ret
0x0000000000497e0c : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040a8f9 : wait ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004b8f9d : wait ; stc ; jmp rax
0x0000000000426899 : wait ; xor eax, 0xdd109be ; ret 0x359b
0x000000000042cf87 : xchg byte ptr [rax + rax], al ; add cl, ch ; ret 1
0x00000000004b8c65 : xchg ch, dh ; jmp rax
0x0000000000410a50 : xchg dword ptr [rbx], edx ; ret 0x8901
0x00000000004aff88 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043b0b3 : xchg eax, ebp ; call rax
0x0000000000420664 : xchg eax, ebp ; clc ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0xcfe8
0x00000000004b9b41 : xchg eax, ebp ; cmc ; jmp rdx
0x000000000044fe30 : xchg eax, ebp ; jmp 0x44ff81
0x0000000000405fda : xchg eax, ebp ; ret
0x000000000044554d : xchg eax, ebp ; ret 0x2018
0x0000000000405566 : xchg eax, ebp ; ret 0x8445
0x000000000043abac : xchg eax, ebp ; ret 0x89e6
0x000000000043c38b : xchg eax, ebp ; ret 0x8ae6
0x00000000004a58ba : xchg eax, ebp ; ret 0xb041
0x000000000040773a : xchg eax, ebp ; ret 0xd284
0x00000000004b329e : xchg eax, ebp ; ret 0xe280
0x000000000043c19c : xchg eax, ebp ; ret 0xf1aa
0x0000000000446250 : xchg eax, ebx ; cdq ; ret 0x890e
0x000000000045dfe5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004648e5 : xchg eax, ebx ; ret
0x0000000000442275 : xchg eax, ebx ; ret 0xd284
0x0000000000471a4b : xchg eax, ecx ; cmc ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423814 : xchg eax, ecx ; jmp 0xfffffffff6c429db
0x0000000000417b2e : xchg eax, ecx ; ret
0x000000000047bda1 : xchg eax, edi ; jno 0x47bd3f ; ret
0x000000000047cd95 : xchg eax, edi ; jno 0x47cd33 ; ret
0x000000000041a336 : xchg eax, edi ; ret 0xcda2
0x0000000000442148 : xchg eax, edi ; ret 0xd284
0x00000000004ad02f : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004ad1de : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x000000000041c2ee : xchg eax, edx ; ret
0x000000000046c20f : xchg eax, edx ; ret 0x8445
0x000000000047ee8e : xchg eax, edx ; ret 0xd284
0x0000000000400333 : xchg eax, edx ; sti ; add eax, 0xd0a4f270 ; ret
0x0000000000421c73 : xchg eax, esi ; and eax, 0xb12da1b9 ; ret
0x000000000043b107 : xchg eax, esi ; call rax
0x0000000000422eb3 : xchg eax, esi ; cmp eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rdx
0x000000000047bd4d : xchg eax, esi ; jno 0x47bceb ; ret
0x00000000004794db : xchg eax, esi ; ret 0x148
0x00000000004794eb : xchg eax, esi ; ret 0x2948
0x000000000041a2e2 : xchg eax, esi ; ret 0xcda2
0x00000000004435de : xchg eax, esi ; ret 0xd284
0x00000000004bad0c : xchg eax, esp ; adc eax, 0x1ae00000 ; sti ; jmp qword ptr [rbx]
0x0000000000446292 : xchg eax, esp ; cdq ; ret 0x890e
0x00000000004461be : xchg eax, esp ; cdq ; ret 0x8b0e
0x0000000000458aa8 : xchg eax, esp ; int 6
0x0000000000422ae9 : xchg eax, esp ; ja 0x422add ; mov dl, -0x47 ; ret
0x000000000040e79c : xchg eax, esp ; je 0x40e75d ; jg 0x40e80b ; ret 0x812b
0x000000000047e12a : xchg eax, esp ; jmp 0x47eb98
0x000000000047e067 : xchg eax, esp ; jmp 0x47eb9a
0x00000000004260b5 : xchg eax, esp ; or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdx + rdi*8 - 1], ecx ; jmp rbx
0x0000000000469394 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000464c65 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004693df : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000430b8c : xchg eax, esp ; ret
0x000000000046c1f9 : xchg eax, esp ; ret 0x8041
0x000000000040b2db : xchg eax, esp ; ret 0x8445
0x0000000000475023 : xchg eax, esp ; ret 0xb640
0x00000000004682ae : xchg eax, esp ; ret 0xb740
0x0000000000408538 : xchg eax, esp ; ret 0xd284
0x000000000040b507 : xchg eax, esp ; ret 0xe280
0x0000000000453505 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044f0f2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x00000000004841ca : xchg eax, r11d ; ret
0x0000000000458aa7 : xchg eax, r12d ; int 6
0x000000000047e129 : xchg eax, r12d ; jmp 0x47eb99
0x000000000047d2b7 : xchg eax, r8d ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451daf : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000040e79a : xlatb ; call qword ptr [rsp + rsi*2 - 0x3d9a8047]
0x000000000044006b : xlatb ; in eax, -0x76 ; push rbp ; ret
0x00000000004a837e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000044b418 : xor al, 0x23 ; cmp dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x00000000004abfad : xor al, 0x25 ; ret
0x00000000004b9551 : xor al, byte ptr [rax] ; add al, bh ; idiv esi ; jmp rax
0x00000000004b9521 : xor al, byte ptr [rax] ; add byte ptr [rax], bh ; fdiv st(6), st(0) ; jmp qword ptr [rax]
0x00000000004682a9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000045cb47 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000457d83 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x000000000045cb48 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b9d00 : xor byte ptr [rax - 9], ah ; call rax
0x00000000004b94d1 : xor byte ptr [rax], al ; add al, bl ; jns 0x4b94db ; jmp rax
0x00000000004a8716 : xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004bad70 : xor byte ptr [rbx + rdi*8], bl ; call rdi
0x000000000044f0f3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x00000000004a5955 : xor byte ptr [rcx - 0x76], al ; push rbp ; ret
0x000000000049c8fb : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044a9b0 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a6795 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000489d87 : xor dh, dh ; ret 0x8589
0x000000000048a931 : xor dh, dh ; ret 0xffbe
0x000000000040c1de : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004371ab : xor eax, 0x3d ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004a58e4 : xor eax, 0x558a2352 ; ret 0xd284
0x00000000004714ae : xor eax, 0x7ab99ca8 ; ret
0x0000000000441b07 : xor eax, 0xb90978ed ; leave ; in al, dx ; ret 0x8aa3
0x0000000000412b3f : xor eax, 0xb9e23dab ; ret 0x28ed
0x000000000042689a : xor eax, 0xdd109be ; ret 0x359b
0x0000000000498b96 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000041fef5 : xor eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004453cb : xor ebp, dword ptr [rax + rbp + 0x294ce11b] ; ret 0xb849
0x00000000004a837d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000419b73 : xor edx, ebp ; ret
0x00000000004a8681 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000498b8a : xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000489d86 : xor r14b, r14b ; ret 0x8589
0x0000000000419b72 : xor rdx, r13 ; ret
0x0000000000419bc6 : xor rdx, rbp ; ret
0x000000000048a10a : xor sil, sil ; ret 0x8589
0x000000000048a930 : xor sil, sil ; ret 0xffbe
