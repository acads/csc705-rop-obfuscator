0x000000000040468a : adc al, -0x64 ; ret 0x89e9
0x000000000040721f : adc al, -0x64 ; ret 0xb9e9
0x000000000043ff29 : adc al, -4 ; call rax
0x000000000043fecd : adc al, 0 ; add byte ptr [rbp - 1], ch ; call rsp
0x0000000000406c1e : adc al, 0x25 ; ret
0x00000000004065cc : adc al, 0x25 ; ret 0x6422
0x0000000000413172 : adc al, byte ptr [rcx] ; ret 0x4588
0x00000000004131a1 : adc al, byte ptr [rcx] ; ret 0x4589
0x0000000000435ea8 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x0000000000435fa6 : adc byte ptr [rax], al ; add al, ch ; ret 0xfcb3
0x000000000041b38e : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437202 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000042a8ce : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000416e30 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004060d1 : adc cl, ch ; jmp qword ptr [rax]
0x0000000000432efb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043fe15 : adc dword ptr [rax], eax ; add byte ptr [rdi + rax*4 - 1], bh ; call rsp
0x0000000000407103 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000042b3cb : adc eax, 0x558abda1 ; ret
0x000000000042e9a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043fb5f : add ah, bl ; or bh, ch ; call rsp
0x0000000000407df4 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rax
0x000000000043fadd : add al, 0 ; add byte ptr [rax - 4], ch ; call rsp
0x000000000044038d : add al, 0 ; add byte ptr [rax], al ; mov bl, -3 ; jmp qword ptr [rdx]
0x000000000040a4eb : add al, 0 ; add byte ptr [rbx + 0x622db045], cl ; ret 0xdca9
0x00000000004143e2 : add al, 0 ; add cl, ch ; ret 1
0x0000000000407bec : add al, 0x25 ; ret
0x0000000000405d8c : add al, 0x25 ; ret 0x6422
0x000000000043abca : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000440c0c : add al, 0xd ; add byte ptr [rax], al ; xor byte ptr [rdi - 1], ah ; jmp rcx
0x000000000044010c : add al, 2 ; add byte ptr [rax], al ; sub ch, -4 ; call qword ptr [rax]
0x0000000000407f68 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000044012d : add al, byte ptr [rax] ; add byte ptr [rax - 0x13], dh ; cld ; jmp rax
0x0000000000417fa4 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x472d8045], cl ; push rdi ; ret 0x893e
0x0000000000419e6c : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000435fa8 : add al, ch ; ret 0xfcb3
0x0000000000418498 : add al, ch ; ret 0xfe8f
0x0000000000407858 : add al, ch ; ret 0xff9d
0x0000000000440e8f : add al, dl ; ret
0x000000000040b174 : add bh, al ; mov r12b, -0x4e ; stosd dword ptr [rdi], eax ; ret
0x0000000000408170 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000408112 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsp
0x0000000000407f6a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000040818e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000407128 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rcx - 0x3e]
0x00000000004077c2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x0000000000432bd4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000407df6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rax
0x0000000000436ed3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042b209 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043e00f : add bl, dh ; ret
0x000000000043dce2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043df44 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040818b : add byte ptr [r8], r8b ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000043ff23 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; or byte ptr [rsp + rdi*8], dl ; call rax
0x000000000044012f : add byte ptr [rax - 0x13], dh ; cld ; jmp rax
0x000000000044044f : add byte ptr [rax - 0x31], ah ; std ; call qword ptr [rcx]
0x0000000000416a91 : add byte ptr [rax - 0x41], cl ; ret
0x0000000000401daf : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000407c46 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x43e9
0x000000000043202a : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x43f7
0x000000000040ed94 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409b40 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000401e76 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408f35 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043fadf : add byte ptr [rax - 4], ch ; call rsp
0x0000000000440c0a : add byte ptr [rax], al ; add al, 0xd ; add byte ptr [rax], al ; xor byte ptr [rdi - 1], ah ; jmp rcx
0x000000000044010a : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; sub ch, -4 ; call qword ptr [rax]
0x000000000040816e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000040818c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x0000000000432bd2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000436ed1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000043e00d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000416aa2 : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; ret
0x0000000000409b3e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000401e74 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408f33 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043e00b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408220 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e00c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043ff25 : add byte ptr [rax], al ; add byte ptr [rax], cl ; adc al, -4 ; call rax
0x000000000041d30e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000042e412 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041754a : add byte ptr [rax], al ; add byte ptr [rbx + 0x462d8045], cl ; push rdi ; ret 0x893e
0x000000000041c695 : add byte ptr [rax], al ; add byte ptr [rbx + 0x562dd445], cl ; ret 0x73f3
0x000000000041c87f : add byte ptr [rax], al ; add byte ptr [rbx + 0x572dd445], cl ; ret 0x73f3
0x000000000040a487 : add byte ptr [rax], al ; add byte ptr [rbx + 0x612db045], cl ; ret 0xdca9
0x000000000041c334 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7d2dc045], cl ; call rbx
0x000000000041c43c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7e2dc045], cl ; call rbx
0x0000000000413eba : add byte ptr [rax], al ; add byte ptr [rbx + 0x7f2db845], cl ; ret
0x00000000004191d1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d237bb], cl ; ret 0x297
0x0000000000431393 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000413d8e : add byte ptr [rax], al ; add byte ptr [rbx - 0x2dd247bb], cl ; ret 0xf0b3
0x00000000004132f9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d233bb], cl ; ret
0x0000000000412a63 : add byte ptr [rax], al ; add byte ptr [rbx - 0x35d23bbb], cl ; ret 0xba4e
0x0000000000409d1b : add byte ptr [rax], al ; add byte ptr [rbx - 0x4dd24fbb], cl ; stosd dword ptr [rdi], eax ; ret
0x000000000043b29c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041a5ff : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ad24bbb], cl ; ret 0x9fda
0x000000000040b344 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x0000000000433cf9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041bcc4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cd277bb], cl ; ret
0x000000000041b814 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7dd277bb], cl ; ret
0x000000000041940e : add byte ptr [rax], al ; add byte ptr [rbx - 0xd237bb], cl ; ret 0x297
0x000000000040701d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040acca : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000041bfe5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004169af : add byte ptr [rax], al ; add byte ptr [rcx - 0x45], cl ; pop rcx ; jmp 0x41694e
0x000000000043dce3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043df45 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000406b01 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043d0b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043a431 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000435d36 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040dd7a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ad7b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000432aca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411b03 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000437162 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000044044a : add byte ptr [rax], al ; add eax, 0xcf600000 ; std ; call qword ptr [rcx]
0x0000000000408222 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e030 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041022b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000432efd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043b948 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e719 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401323 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000044012a : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; jo 0x440128 ; cld ; jmp rax
0x000000000043fb5e : add byte ptr [rax], al ; fmul qword ptr [rdx] ; std ; call rsp
0x000000000043fade : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and ah, bh ; call rsp
0x000000000043fece : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; in eax, -1 ; call rsp
0x000000000043fb9e : add byte ptr [rax], al ; jbe 0x43fba5 ; call rsp
0x0000000000401359 : add byte ptr [rax], al ; jmp 0x401339
0x000000000041c49e : add byte ptr [rax], al ; jmp 0x41c663
0x000000000043715e : add byte ptr [rax], al ; jmp 0x43716d
0x000000000044012e : add byte ptr [rax], al ; jo 0x440124 ; cld ; jmp rax
0x000000000044038f : add byte ptr [rax], al ; mov bl, -3 ; jmp qword ptr [rdx]
0x000000000043dd28 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401e75 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004403ce : add byte ptr [rax], al ; nop ; ret 0xfffd
0x000000000043ff26 : add byte ptr [rax], al ; or byte ptr [rsp + rdi*8], dl ; call rax
0x0000000000409b27 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e413 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043fc5e : add byte ptr [rax], al ; pop rsp ; cli ; std ; call rsp
0x000000000043fcde : add byte ptr [rax], al ; pushfq ; add edi, edi ; jmp rsp
0x000000000043e00e : add byte ptr [rax], al ; ret
0x000000000043ff22 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or byte ptr [rsp + rdi*8], dl ; call rax
0x000000000043fc1e : add byte ptr [rax], al ; sub al, -0x1f ; std ; call rsp
0x000000000044056e : add byte ptr [rax], al ; sub ch, -3 ; call qword ptr [rdx]
0x000000000044010e : add byte ptr [rax], al ; sub ch, -4 ; call qword ptr [rax]
0x000000000044038a : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add byte ptr [rax], al ; mov bl, -3 ; jmp qword ptr [rdx]
0x0000000000440c0e : add byte ptr [rax], al ; xor byte ptr [rdi - 1], ah ; jmp rcx
0x00000000004406fe : add byte ptr [rax], al ; xor cl, 0xfe ; jmp qword ptr [rbx]
0x000000000043ff27 : add byte ptr [rax], cl ; adc al, -4 ; call rax
0x000000000044044b : add byte ptr [rbp + rax], al ; add byte ptr [rax - 0x31], ah ; std ; call qword ptr [rcx]
0x000000000043fecf : add byte ptr [rbp - 1], ch ; call rsp
0x000000000041319b : add byte ptr [rbx + 0x132dcc45], cl ; adc al, byte ptr [rcx] ; ret 0x4589
0x00000000004131f3 : add byte ptr [rbx + 0x142dcc45], cl ; adc al, byte ptr [rcx] ; ret 0x4589
0x000000000041d310 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000042e414 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041754c : add byte ptr [rbx + 0x462d8045], cl ; push rdi ; ret 0x893e
0x0000000000417fa6 : add byte ptr [rbx + 0x472d8045], cl ; push rdi ; ret 0x893e
0x000000000041c697 : add byte ptr [rbx + 0x562dd445], cl ; ret 0x73f3
0x000000000041c881 : add byte ptr [rbx + 0x572dd445], cl ; ret 0x73f3
0x000000000040a489 : add byte ptr [rbx + 0x612db045], cl ; ret 0xdca9
0x000000000040a4ed : add byte ptr [rbx + 0x622db045], cl ; ret 0xdca9
0x000000000041c336 : add byte ptr [rbx + 0x7d2dc045], cl ; call rbx
0x0000000000413e71 : add byte ptr [rbx + 0x7e2db845], cl ; ret
0x000000000041c43e : add byte ptr [rbx + 0x7e2dc045], cl ; call rbx
0x0000000000413ebc : add byte ptr [rbx + 0x7f2db845], cl ; ret
0x00000000004191d3 : add byte ptr [rbx - 0x1d237bb], cl ; ret 0x297
0x0000000000431395 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043134a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040b1d3 : add byte ptr [rbx - 0x2cb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000413d90 : add byte ptr [rbx - 0x2dd247bb], cl ; ret 0xf0b3
0x0000000000413d45 : add byte ptr [rbx - 0x2ed247bb], cl ; ret 0xf0b3
0x00000000004132fb : add byte ptr [rbx - 0x30d233bb], cl ; ret
0x00000000004132b9 : add byte ptr [rbx - 0x31d233bb], cl ; ret
0x0000000000412c53 : add byte ptr [rbx - 0x34d23bbb], cl ; ret 0xba4e
0x0000000000412a65 : add byte ptr [rbx - 0x35d23bbb], cl ; ret 0xba4e
0x0000000000409d1d : add byte ptr [rbx - 0x4dd24fbb], cl ; stosd dword ptr [rdi], eax ; ret
0x0000000000409cd2 : add byte ptr [rbx - 0x4ed24fbb], cl ; stosd dword ptr [rdi], eax ; ret
0x000000000043b29e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041a601 : add byte ptr [rbx - 0x5ad24bbb], cl ; ret 0x9fda
0x000000000041a5b6 : add byte ptr [rbx - 0x5bd24bbb], cl ; ret 0x9fda
0x000000000043dd29 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000040b346 : add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x0000000000433cfb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041bcc6 : add byte ptr [rbx - 0x7cd277bb], cl ; ret
0x000000000041b816 : add byte ptr [rbx - 0x7dd277bb], cl ; ret
0x00000000004068b6 : add byte ptr [rbx - 0x9a74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004078a6 : add byte ptr [rbx - 0xa034b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407a98 : add byte ptr [rbx - 0xa0f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419410 : add byte ptr [rbx - 0xd237bb], cl ; ret 0x297
0x0000000000436dbf : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040701f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040accc : add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000041bfe7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004169b1 : add byte ptr [rcx - 0x45], cl ; pop rcx ; jmp 0x41694c
0x0000000000432c3e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004017b8 : add byte ptr [rcx], al ; ret
0x000000000043dce5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000043df47 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000406b03 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043fc1f : add byte ptr [rcx], ch ; std ; call rsp
0x000000000043fe17 : add byte ptr [rdi + rax*4 - 1], bh ; call rsp
0x000000000043d0b3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040deea : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000435d38 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040dd7c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ad7d : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000432acc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000411b05 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044012b : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; jo 0x440127 ; cld ; jmp rax
0x000000000044010b : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; sub ch, -4 ; call qword ptr [rax]
0x000000000043fc5f : add byte ptr [rdx + rdi*8 - 3], bl ; call rsp
0x000000000043fb9f : add byte ptr [rsi + rsi*2 - 3], cl ; call rsp
0x000000000044038b : add byte ptr [rsp + rax - 0x4d000000], al ; std ; jmp qword ptr [rdx]
0x000000000040816d : add byte ptr gs:[rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000042b33c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040d34a : add cl, ch ; ret
0x0000000000408c9c : add cl, ch ; ret 1
0x0000000000407bea : add dh, al ; add al, 0x25 ; ret
0x0000000000405d8a : add dh, al ; add al, 0x25 ; ret 0x6422
0x000000000040b172 : add dword ptr [rax], eax ; add bh, al ; mov r12b, -0x4e ; stosd dword ptr [rdi], eax ; ret
0x0000000000401dad : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000409579 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004132b7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x31d233bb], cl ; ret
0x0000000000412c51 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x34d23bbb], cl ; ret 0xba4e
0x000000000040dee8 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000406880 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8445
0x000000000041a33b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082ff : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b67d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043d232 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041008e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414e4e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004017b4 : add eax, 0x240afe ; add ebx, esi ; ret
0x0000000000406c1b : add eax, 0x25148abf ; ret
0x000000000041a80c : add eax, 0x458b0000 ; mov ah, 0x2d ; xor dword ptr [rbx], esi ; ret
0x0000000000418968 : add eax, 0x47b80000 ; push rdi ; ret 0xb93e
0x0000000000407c44 : add eax, 0x8d480000 ; cmp al, 0x25 ; ret 0x43e9
0x000000000043fb1d : add eax, 0xb8bc0000 ; cld ; call rsp
0x000000000044044d : add eax, 0xcf600000 ; std ; call qword ptr [rcx]
0x0000000000415fbc : add eax, 0xe900000b ; ret 1
0x000000000040d749 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040177b : add eax, edx ; sar rax, 1 ; jne 0x40178c ; pop rbp ; ret
0x0000000000407218 : add ebp, ecx ; mov eax, 0xb800000f ; adc al, -0x64 ; ret 0xb9e9
0x00000000004017b9 : add ebx, esi ; ret
0x000000000043fce1 : add edi, edi ; jmp rsp
0x0000000000401b1b : add esp, 0x10 ; pop rbp ; ret
0x0000000000432c3c : add esp, 0x100 ; pop rbp ; ret
0x00000000004128e4 : add esp, 0x130 ; pop rbp ; ret
0x000000000041509e : add esp, 0x150 ; pop rbp ; ret
0x0000000000432dac : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041c210 : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040c0bf : add esp, 0x1d0 ; pop rbp ; ret
0x000000000041e4cd : add esp, 0x20 ; pop rbp ; ret
0x000000000041b38c : add esp, 0x210 ; pop rbp ; ret
0x0000000000414d8a : add esp, 0x2b0 ; pop rbp ; ret
0x000000000040b161 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041022e : add esp, 0x30 ; pop rbp ; ret
0x0000000000411e27 : add esp, 0x320 ; pop rbp ; ret
0x0000000000418d3c : add esp, 0x3a0 ; pop rbp ; ret
0x000000000040b365 : add esp, 0x40 ; pop rbp ; ret
0x000000000040e537 : add esp, 0x440 ; pop rbp ; ret
0x0000000000436e6e : add esp, 0x4f0 ; pop rbp ; ret
0x000000000041e152 : add esp, 0x50 ; pop rbp ; ret
0x0000000000408304 : add esp, 0x60 ; pop rbp ; ret
0x0000000000401ac1 : add esp, 0x70 ; pop rbp ; ret
0x000000000041e47f : add esp, 0x80 ; pop rbp ; ret
0x000000000043357d : add esp, 0x90 ; pop rbp ; ret
0x000000000041c64b : add esp, 0xa0 ; pop rbp ; ret
0x0000000000409b23 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000419b92 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041ecba : add esp, 0xd0 ; pop rbp ; ret
0x00000000004310b6 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004381cf : add esp, 0xf0 ; pop rbp ; ret
0x000000000041f2c3 : add esp, 8 ; pop rbp ; ret
0x0000000000401326 : add esp, 8 ; ret
0x0000000000418497 : add r8b, bpl ; ret 0xfe8f
0x000000000040177a : add rax, rdx ; sar rax, 1 ; jne 0x40178d ; pop rbp ; ret
0x0000000000401b1a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000432c3b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004128e3 : add rsp, 0x130 ; pop rbp ; ret
0x000000000041509d : add rsp, 0x150 ; pop rbp ; ret
0x0000000000432dab : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041c20f : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040c0be : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000041e4cc : add rsp, 0x20 ; pop rbp ; ret
0x000000000041b38b : add rsp, 0x210 ; pop rbp ; ret
0x0000000000414d89 : add rsp, 0x2b0 ; pop rbp ; ret
0x000000000040b160 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041022d : add rsp, 0x30 ; pop rbp ; ret
0x0000000000411e26 : add rsp, 0x320 ; pop rbp ; ret
0x0000000000418d3b : add rsp, 0x3a0 ; pop rbp ; ret
0x000000000040b364 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040e536 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000436e6d : add rsp, 0x4f0 ; pop rbp ; ret
0x000000000041e151 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408303 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000401ac0 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041e47e : add rsp, 0x80 ; pop rbp ; ret
0x000000000043357c : add rsp, 0x90 ; pop rbp ; ret
0x000000000041c64a : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000409b22 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000419b91 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041ecb9 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004310b5 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004381ce : add rsp, 0xf0 ; pop rbp ; ret
0x000000000041f2c2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401325 : add rsp, 8 ; ret
0x000000000043fae1 : and ah, bh ; call rsp
0x0000000000407856 : and ah, byte ptr [rax + rax - 0x18] ; ret 0xff9d
0x0000000000407cbb : and ah, byte ptr [rax + rax - 0x76] ; add al, 0x25 ; ret 0x6422
0x0000000000405d88 : and al, 0 ; add dh, al ; add al, 0x25 ; ret 0x6422
0x00000000004017b7 : and al, 0 ; add ebx, esi ; ret
0x000000000043dced : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041008d : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414e4d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044012c : and al, 2 ; add byte ptr [rax], al ; jo 0x440126 ; cld ; jmp rax
0x0000000000411e29 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433a2b : and byte ptr [rsi + 0x58], ah ; jb 0x433a62 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042a571 : and eax, 0x75b4b9d3 ; ret
0x00000000004077c0 : and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x000000000041001e : and eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000419bf6 : call 0x4014b8
0x0000000000433e25 : call 0x433ee9
0x000000000040ed1f : call 0x48417874
0x000000000040ed1e : call 0x48417875
0x000000000043b83d : call 0xffffffffaca47a71
0x000000000043b83c : call 0xffffffffaca47a72
0x000000000042e029 : call 0xffffffffe9056979
0x000000000042e028 : call 0xffffffffe905697a
0x000000000043dfe9 : call qword ptr [r12 + rbx*8]
0x0000000000440113 : call qword ptr [rax]
0x000000000042f7ee : call qword ptr [rbx]
0x00000000004068cc : call qword ptr [rcx]
0x000000000042d4b4 : call qword ptr [rdi]
0x000000000041718e : call qword ptr [rdx]
0x000000000043dfea : call qword ptr [rsp + rbx*8]
0x00000000004017dd : call rax
0x000000000041c33c : call rbx
0x0000000000410fa3 : call rcx
0x000000000042d0f4 : call rdi
0x0000000000404e6a : call rdx
0x0000000000408176 : call rsi
0x0000000000408118 : call rsp
0x000000000040c0bd : clc ; add rsp, 0x1d0 ; pop rbp ; ret
0x000000000043adc7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000433187 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000437759 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040177f : clc ; jne 0x401788 ; pop rbp ; ret
0x000000000040ee96 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040ed98 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420afd : clc ; ret 0x77a8
0x000000000041509c : cld ; add rsp, 0x150 ; pop rbp ; ret
0x000000000043be7e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004381cd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000440112 : cld ; call qword ptr [rax]
0x000000000043ff2a : cld ; call rax
0x0000000000440012 : cld ; call rcx
0x000000000043fae2 : cld ; call rsp
0x000000000041d33f : cld ; jmp 0x41d3ac
0x000000000041d33e : cld ; jmp 0x41d3ad
0x0000000000440132 : cld ; jmp rax
0x000000000043ff52 : cld ; jmp rdi
0x000000000043fb1a : cld ; push qword ptr [rbp + rax - 0x47440000] ; cld ; call rsp
0x000000000043fada : cld ; push qword ptr [rsp + rax + 0x206c0000] ; cld ; call rsp
0x0000000000433a30 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043fc61 : cli ; std ; call rsp
0x000000000043dcec : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043294b : cmc ; ret 0x4f0b
0x000000000040fabb : cmp al, -0x47 ; ret
0x0000000000418493 : cmp al, 0x25 ; mov dl, -0x11 ; add r8b, bpl ; ret 0xfe8f
0x0000000000401db2 : cmp al, 0x25 ; ret
0x0000000000407c49 : cmp al, 0x25 ; ret 0x43e9
0x000000000043202d : cmp al, 0x25 ; ret 0x43f7
0x000000000040e819 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432ae1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000407df3 : cmp dword ptr [rax + rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rax
0x000000000040173d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401750 ; pop rbp ; ret
0x000000000042b3c7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004017b5 : dec byte ptr [rdx] ; and al, 0 ; add ebx, esi ; ret
0x000000000040ae34 : dec dword ptr [rax - 0x2ac6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000042a8cb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000042a23e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042aa43 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000433b5d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043a926 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040619a : dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406354 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004068bc : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407ac8 : dec dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x0000000000411da3 : dec dword ptr [rbx - 0x30f6b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000040e09a : dec dword ptr [rbx - 0x41b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004076ff : dec dword ptr [rbx - 0x9fb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000419b3f : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000410359 : dec dword ptr [rcx - 0x7bf063bb] ; ret
0x0000000000432946 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040e0a0 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000407705 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000430d1e : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000412c16 : dec dword ptr [rdi] ; test byte ptr [rax], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000417c17 : dec dword ptr [rdi] ; test byte ptr [rbx + rcx], bh ; add cl, ch ; ret
0x00000000004207da : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040d344 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff5], cl ; ret
0x0000000000418018 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff7], ch ; ret 1
0x0000000000415fb9 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff5], al ; ret 1
0x000000000041b775 : dec dword ptr [rdi] ; test byte ptr [rsi], bh ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000408c96 : dec dword ptr [rdi] ; test ch, ch ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040d745 : dec dword ptr [rdi] ; test dh, ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000419e68 : dec dword ptr [rdi] ; test dl, ah ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041185b : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000414d13 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000041897b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000435d99 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043a3a9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ead9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434f55 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x000000000043c2a8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041d20a : fmul dword ptr [r11 - 0x1376b800] ; pop rbp ; ret
0x000000000043af87 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041859c : fmul dword ptr [rax - 0x7d] ; ret 0x4802
0x0000000000418403 : fmul dword ptr [rax - 0x7f] ; ret 2
0x0000000000418873 : fmul dword ptr [rax - 1] ; ret 0x8d48
0x000000000041d20b : fmul dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x000000000043af88 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000412fcb : fmul dword ptr [rip + 0x1ba8b98f] ; ret
0x000000000043dfec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000043fb60 : fmul qword ptr [rdx] ; std ; call rsp
0x00000000004060fb : fnstcw word ptr [rcx - 0x46] ; ret 0x43e9
0x00000000004350dd : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x00000000004366f7 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x000000000040d748 : hlt ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b19 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043b4ec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041f2c1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004065c7 : hlt ; leave ; shr byte ptr [rbx], -0x76 ; adc al, 0x25 ; ret 0x6422
0x0000000000401750 : hlt ; pop rbp ; mov edi, 0x642270 ; jmp rax
0x0000000000406198 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406352 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004068ba : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407703 : idiv bh ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000440861 : idiv dh ; call rdx
0x0000000000433b5b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000407f67 : imul eax, dword ptr [rdx], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004104b8 : in al, -0x17 ; ret
0x0000000000413170 : in al, 0x14 ; adc al, byte ptr [rcx] ; ret 0x4588
0x000000000041e548 : in al, 0x2d ; ret 0xc226
0x000000000041c20e : in al, 0x48 ; add esp, 0x1b0 ; pop rbp ; ret
0x000000000040e535 : in al, 0x48 ; add esp, 0x440 ; pop rbp ; ret
0x0000000000437b11 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000437415 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043b8fc : in al, dx ; jmp 0x43b979
0x000000000043b8fb : in al, dx ; jmp 0x43b97a
0x0000000000401e79 : in al, dx ; pop rbp ; ret
0x000000000043fed1 : in eax, -1 ; call rsp
0x00000000004135bd : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000440111 : in eax, dx ; cld ; call qword ptr [rax]
0x0000000000440131 : in eax, dx ; cld ; jmp rax
0x0000000000408c99 : in eax, dx ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000440571 : in eax, dx ; std ; call qword ptr [rdx]
0x00000000004188c6 : inc dword ptr [rcx + 0xf] ; ret
0x0000000000405aec : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004068c6 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rcx]
0x0000000000407cf2 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x000000000043fae0 : insb byte ptr [rdi], dx ; and ah, bh ; call rsp
0x000000000043fed0 : insb byte ptr [rdi], dx ; in eax, -1 ; call rsp
0x00000000004304d7 : int 0x5b
0x0000000000440451 : iretd ; std ; call qword ptr [rcx]
0x0000000000401743 : ja 0x40174a ; pop rbp ; ret
0x0000000000433a2e : jb 0x433a5f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043fba1 : jbe 0x43fba2 ; call rsp
0x000000000043fba0 : jbe 0x43fba3 ; call rsp
0x000000000040174f : je 0x40174d ; pop rbp ; mov edi, 0x642270 ; jmp rax
0x000000000040aebe : jg 0x40aed2 ; xchg eax, ebp ; ret 0xd284
0x0000000000429966 : jge 0x4298eb ; ret 0xffd5
0x000000000042a430 : jge 0x42a410 ; shr cl, cl ; ret 0x3b
0x000000000040135b : jmp 0x401337
0x0000000000401dab : jmp 0x401f2c
0x0000000000405c59 : jmp 0x4081dc
0x0000000000407be6 : jmp 0x4081de
0x0000000000407c42 : jmp 0x4081df
0x0000000000409204 : jmp 0x4096e2
0x0000000000409643 : jmp 0x4096e4
0x000000000040af24 : jmp 0x40b27f
0x000000000040aa82 : jmp 0x40b281
0x000000000040fb46 : jmp 0x410181
0x0000000000411ca1 : jmp 0x411f4f
0x000000000041179f : jmp 0x411f51
0x00000000004125b6 : jmp 0x4128f9
0x00000000004134da : jmp 0x4136b5
0x0000000000414725 : jmp 0x414e30
0x0000000000414783 : jmp 0x414e31
0x00000000004169a1 : jmp 0x416934
0x00000000004169b5 : jmp 0x416948
0x000000000041630d : jmp 0x4170f5
0x0000000000419add : jmp 0x419c08
0x000000000041af22 : jmp 0x41b42d
0x000000000041c61e : jmp 0x41c660
0x000000000041c4a0 : jmp 0x41c661
0x000000000041d340 : jmp 0x41d3ab
0x000000000042ab80 : jmp 0x42e000
0x0000000000428a84 : jmp 0x42e001
0x0000000000429e51 : jmp 0x42e002
0x0000000000431d6b : jmp 0x4327d7
0x0000000000431ca8 : jmp 0x4327d9
0x0000000000432026 : jmp 0x4327da
0x0000000000433dd3 : jmp 0x433e38
0x0000000000435f06 : jmp 0x436fc9
0x0000000000435d23 : jmp 0x436fca
0x0000000000437160 : jmp 0x43716b
0x000000000043ac66 : jmp 0x43af48
0x000000000043b8fd : jmp 0x43b978
0x000000000043294a : jmp 0x4f4eec46
0x000000000041e504 : jmp 0xffffffffb6040bcd
0x00000000004060d3 : jmp qword ptr [rax]
0x0000000000408194 : jmp qword ptr [rbx]
0x000000000040712e : jmp qword ptr [rcx - 0x3e]
0x000000000040fc95 : jmp qword ptr [rcx]
0x00000000004077c8 : jmp qword ptr [rdi]
0x0000000000411ea7 : jmp qword ptr [rdx]
0x00000000004117f0 : jmp qword ptr [rsi]
0x0000000000401757 : jmp rax
0x0000000000429f58 : jmp rbx
0x0000000000410608 : jmp rcx
0x0000000000429fb2 : jmp rdi
0x0000000000401797 : jmp rdx
0x00000000004409ab : jmp rsi
0x000000000042a268 : jmp rsp
0x0000000000401780 : jne 0x401787 ; pop rbp ; ret
0x0000000000434f56 : jne 0x434fd1 ; ret 0x8589
0x00000000004350de : jne 0x435159 ; ret 0x8589
0x00000000004366f8 : jne 0x436773 ; ret 0xedb9
0x0000000000436950 : jne 0x4369cb ; ret 0xedb9
0x00000000004060cf : jnp 0x4060fe ; adc cl, ch ; jmp qword ptr [rax]
0x00000000004060fc : jns 0x4060ba ; ret 0x43e9
0x0000000000401ac3 : jo 0x401b24 ; ret
0x000000000041b684 : jo 0x41b6e5 ; ret
0x000000000041e71e : jo 0x41e77f ; ret
0x000000000042387e : jo 0x42388a ; ret
0x00000000004254ee : jo 0x4254fa ; ret
0x0000000000428a3d : jo 0x428a49 ; ret
0x000000000042fd24 : jo 0x42fd85 ; ret
0x0000000000440130 : jo 0x440122 ; cld ; jmp rax
0x0000000000435fa1 : jrcxz 0x435f34 ; pop rdx ; jmp 0x436fcc
0x000000000042a42e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000042b52e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000041db46 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416ea6 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000430019 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416ea5 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407909 : leave ; or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x00000000004065c8 : leave ; shr byte ptr [rbx], -0x76 ; adc al, 0x25 ; ret 0x6422
0x00000000004060cd : ljmp ptr [rdi - 0x16efd685] ; jmp qword ptr [rax]
0x0000000000428d8e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000401e73 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041630c : lodsb al, byte ptr [rsi] ; jmp 0x4170f6
0x000000000041630b : lodsb al, byte ptr [rsi] ; jmp 0x4170f7
0x0000000000417092 : lodsb al, byte ptr [rsi] ; ret 0x8db8
0x00000000004077bf : lodsd eax, dword ptr [rsi] ; and eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x000000000041a33a : loope 0x41a346 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bd95 : loope 0x42bd63 ; jmp 0x42e003
0x000000000043fc21 : loope 0x43fc22 ; call rsp
0x000000000040b363 : loopne 0x40b3b3 ; add esp, 0x40 ; pop rbp ; ret
0x000000000040b362 : loopne 0x40b3b4 ; add esp, 0x40 ; pop rbp ; ret
0x000000000041b38a : loopne 0x41b3dd ; add esp, 0x210 ; pop rbp ; ret
0x000000000041e4cb : loopne 0x41e51b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041e4ca : loopne 0x41e51c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000420173 : loopne 0x4201c6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042f71d : loopne 0x42f783 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b04 : loopne 0x430b57 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004310b8 : loopne 0x4310bf ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433493 : loopne 0x43349c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000433e1e : loopne 0x433e6e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000433e1d : loopne 0x433e6f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004372cf : loopne 0x437263 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004372ce : loopne 0x437264 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043b4f0 : loopne 0x43b4f7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043be82 : loopne 0x43be89 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043dd2c : loopne 0x43dd7b ; mov esp, ebp ; pop rbp ; ret
0x000000000043dd2b : loopne 0x43dd7c ; mov esp, ebp ; pop rbp ; ret
0x000000000043df7c : loopne 0x43dfcb ; mov esp, ebp ; pop rbp ; ret
0x000000000043df7b : loopne 0x43dfcc ; mov esp, ebp ; pop rbp ; ret
0x000000000040b177 : mov ah, -0x4e ; stosd dword ptr [rdi], eax ; ret
0x000000000042995d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000429a37 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411801 : mov ah, -0x77 ; ret 0xca29
0x000000000041a5b9 : mov ah, 0x2d ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9fda
0x000000000041a604 : mov ah, 0x2d ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9fda
0x000000000041a85c : mov ah, 0x2d ; xor dh, byte ptr [rbx] ; ret
0x000000000041a811 : mov ah, 0x2d ; xor dword ptr [rbx], esi ; ret
0x00000000004279e5 : mov ah, 0x75 ; ret
0x000000000043fc5c : mov ah, 0xa ; add byte ptr [rax], al ; pop rsp ; cli ; std ; call rsp
0x000000000043fadc : mov ah, 4 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and ah, bh ; call rsp
0x000000000043fb5c : mov ah, 6 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; std ; call rsp
0x000000000043fb9c : mov ah, 7 ; add byte ptr [rax], al ; jbe 0x43fba7 ; call rsp
0x000000000043fc1c : mov ah, 9 ; add byte ptr [rax], al ; sub al, -0x1f ; std ; call rsp
0x0000000000412fca : mov al, -0x28 ; or eax, 0x1ba8b98f ; ret
0x00000000004304f3 : mov al, -0x47 ; ret
0x000000000043a42f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004362f9 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409b25 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409cd5 : mov al, 0x2d ; mov cl, -0x55 ; ret
0x0000000000409d20 : mov al, 0x2d ; mov dl, -0x55 ; ret
0x0000000000409f14 : mov al, 0x2d ; ret
0x0000000000409ec9 : mov al, 0x2d ; ret 0x93d4
0x000000000041c212 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414d8c : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c59d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043c26a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004190bd : mov al, byte ptr [rbp - 0x29] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043c4cd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000440391 : mov bl, -3 ; jmp qword ptr [rdx]
0x0000000000421385 : mov bl, 0x75 ; ret
0x000000000040ee97 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004017b3 : mov byte ptr [rip + 0x240afe], 1 ; ret
0x00000000004068b8 : mov ch, 0x58 ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004291df : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000409cd7 : mov cl, -0x55 ; ret
0x000000000041a33d : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408301 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b67f : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043d234 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000410090 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414e50 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000418495 : mov dl, -0x11 ; add r8b, bpl ; ret 0xfe8f
0x000000000043dcea : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000409d22 : mov dl, -0x55 ; ret
0x000000000043cf61 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000041f8f9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041f4cf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b8fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x43b97b
0x0000000000409201 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x4096e5
0x000000000040fb43 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x410184
0x000000000041e4c9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a9ca : mov dword ptr [rbp - 0x294], ecx ; call rdx
0x000000000041c61b : mov dword ptr [rbp - 0x3c], eax ; jmp 0x41c663
0x000000000041630a : mov dword ptr [rbp - 0x54], eax ; jmp 0x4170f8
0x0000000000431d68 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4327da
0x0000000000401b17 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fbd6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f77d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040ca24 : mov eax, 0x493d6c2d ; ret 0x8589
0x000000000040ca6f : mov eax, 0x493d6d2d ; ret 0x8589
0x0000000000406c19 : mov eax, 0x8abf05fb ; adc al, 0x25 ; ret
0x000000000040721a : mov eax, 0xb800000f ; adc al, -0x64 ; ret 0xb9e9
0x0000000000435f07 : mov eax, 0xb8000010 ; ret
0x0000000000413a5a : mov eax, 0xdea4282d ; ret
0x0000000000413aa5 : mov eax, 0xdea4292d ; ret
0x0000000000407ac9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433c9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cc89 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000437413 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000433e6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e14e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043b775 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f8fc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b361 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433e1c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004372cd : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043dd2a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d209 : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f77f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041f2bf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040ed96 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f77e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000042c198 : mov ebp, 0xe19c53ba ; ret
0x00000000004017db : mov ebp, esp ; call rax
0x0000000000401741 : mov ebp, esp ; ja 0x40174c ; pop rbp ; ret
0x000000000041699f : mov ebx, 0x2d8eeb59 ; ret 0xf166
0x000000000041f4cc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004017d5 : mov edi, 0x641e20 ; mov rbp, rsp ; call rax
0x0000000000401752 : mov edi, 0x642270 ; jmp rax
0x0000000000401792 : mov edi, 0x642270 ; jmp rdx
0x0000000000428a37 : mov edi, 0xb8000055 ; wait ; jo 0x428a4f ; ret
0x000000000043dfe7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043dfe6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000043abde : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004291fb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000042a072 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000043abc7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000409ec3 : mov esi, 0x8b00000a ; mov r8b, 0x2d ; ret 0x93d4
0x0000000000401790 : mov esi, eax ; mov edi, 0x642270 ; jmp rdx
0x000000000043fecc : mov esp, 0x6c000014 ; in eax, -1 ; call rsp
0x0000000000401e78 : mov esp, ebp ; pop rbp ; ret
0x000000000041fbd5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b176 : mov r12b, -0x4e ; stosd dword ptr [rdi], eax ; ret
0x0000000000411800 : mov r12b, -0x77 ; ret 0xca29
0x000000000041a5b8 : mov r12b, 0x2d ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9fda
0x000000000041a603 : mov r12b, 0x2d ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9fda
0x000000000041a85b : mov r12b, 0x2d ; xor dh, byte ptr [rbx] ; ret
0x000000000041a810 : mov r12b, 0x2d ; xor dword ptr [rbx], esi ; ret
0x0000000000409cd4 : mov r8b, 0x2d ; mov cl, -0x55 ; ret
0x0000000000409d1f : mov r8b, 0x2d ; mov dl, -0x55 ; ret
0x0000000000409f13 : mov r8b, 0x2d ; ret
0x0000000000409ec8 : mov r8b, 0x2d ; ret 0x93d4
0x000000000040ca23 : mov r8d, 0x493d6c2d ; ret 0x8589
0x000000000040ca6e : mov r8d, 0x493d6d2d ; ret 0x8589
0x0000000000413a59 : mov r8d, 0xdea4282d ; ret
0x0000000000413aa4 : mov r8d, 0xdea4292d ; ret
0x000000000041eff8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433c9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cc88 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433e6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e14d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b360 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000433e1b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ed95 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004017da : mov rbp, rsp ; call rax
0x0000000000401740 : mov rbp, rsp ; ja 0x40174d ; pop rbp ; ret
0x000000000040178f : mov rsi, rax ; mov edi, 0x642270 ; jmp rdx
0x0000000000401e77 : mov rsp, rbp ; pop rbp ; ret
0x0000000000433a31 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000406afc : movabs al, byte ptr [0x29000000012d118b] ; ret 0x8b48
0x0000000000406b09 : movabs al, byte ptr [0xffffff4c85c71189] ; call rdx
0x0000000000424cd8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000412c29 : movabs byte ptr [0x840fffffff3c8589], al ; ret 4
0x0000000000427f25 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041a5bb : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9fda
0x000000000041a606 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9fda
0x0000000000408300 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b67e : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043d233 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041008f : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414e4f : movzx eax, al ; pop rbp ; ret
0x000000000040ee9a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041a33c : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a9d8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000412c50 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x34d23bbb], cl ; ret 0xba4e
0x0000000000407855 : nop ; and ah, byte ptr [rax + rax - 0x18] ; ret 0xff9d
0x0000000000406351 : nop ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004211c5 : nop ; ret
0x000000000042f5d2 : nop ; ret 0x148
0x000000000042f5e6 : nop ; ret 0x2948
0x00000000004403d0 : nop ; ret 0xfffd
0x000000000043e008 : nop dword ptr [rax + rax] ; ret
0x00000000004017b6 : or ah, byte ptr [rax + rax] ; add ebx, esi ; ret
0x0000000000409cd0 : or al, 0 ; add byte ptr [rbx - 0x4ed24fbb], cl ; stosd dword ptr [rdi], eax ; ret
0x0000000000407853 : or al, 0x25 ; nop ; and ah, byte ptr [rax + rax - 0x18] ; ret 0xff9d
0x000000000042995a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000429a34 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043fc5d : or al, byte ptr [rax] ; add byte ptr [rdx + rdi*8 - 3], bl ; call rsp
0x000000000041b779 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000041b778 : or al, byte ptr ds:[rax] ; add cl, ch ; ret
0x000000000041708f : or bh, al ; lodsb al, byte ptr [rsi] ; ret 0x8db8
0x000000000043fb61 : or bh, ch ; call rsp
0x000000000041cdfd : or byte ptr [r15], 0x84 ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041f4d0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040790a : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x0000000000431348 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000413d43 : or byte ptr [rax], al ; add byte ptr [rbx - 0x2ed247bb], cl ; ret 0xf0b3
0x000000000041a5b4 : or byte ptr [rax], al ; add byte ptr [rbx - 0x5bd24bbb], cl ; ret 0x9fda
0x000000000040f660 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041cdfe : or byte ptr [rdi], 0x84 ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043ff28 : or byte ptr [rsp + rdi*8], dl ; call rax
0x000000000041a15f : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041fbd4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043fc1d : or dword ptr [rax], eax ; add byte ptr [rcx], ch ; std ; call rsp
0x0000000000408c9a : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000412fcc : or eax, 0x1ba8b98f ; ret
0x000000000040d348 : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000415fbd : or eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041f77b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000405d85 : out -0x17, al ; and al, 0 ; add dh, al ; add al, 0x25 ; ret 0x6422
0x000000000042b33b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043c26c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436ed0 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000418496 : out dx, eax ; add r8b, bpl ; ret 0xfe8f
0x000000000043c59f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004304f2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000043abc9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042c425 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000421076 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042c470 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000432bd1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043abcc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000433a2c : pop ax ; jb 0x433a61 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000418967 : pop qword ptr [rip + 0x47b80000] ; push rdi ; ret 0xb93e
0x0000000000407c43 : pop qword ptr [rip - 0x72b80000] ; cmp al, 0x25 ; ret 0x43e9
0x000000000042d2d9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043dffc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042f71f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042d2db : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043dffe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042d2dd : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043e000 : pop r14 ; pop r15 ; ret
0x0000000000416eaa : pop r14 ; pop rbp ; ret
0x000000000042d2df : pop r15 ; pop rbp ; ret
0x000000000043e002 : pop r15 ; ret
0x00000000004068b9 : pop rax ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000433a2d : pop rax ; jb 0x433a60 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004017b2 : pop rbp ; mov byte ptr [rip + 0x240afe], 1 ; ret
0x0000000000401751 : pop rbp ; mov edi, 0x642270 ; jmp rax
0x000000000040178e : pop rbp ; mov rsi, rax ; mov edi, 0x642270 ; jmp rdx
0x000000000043dffb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042d2dc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043dfff : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004291e2 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004254b5 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004291fe : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401745 : pop rbp ; ret
0x000000000042f71e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e415 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416ea9 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000431350 : pop rbx ; ret
0x00000000004169a0 : pop rcx ; jmp 0x416935
0x00000000004169b4 : pop rcx ; jmp 0x416949
0x00000000004291e3 : pop rcx ; ret 0x1b2
0x00000000004238b6 : pop rcx ; ret 0x8589
0x00000000004291ff : pop rcx ; ret 0x8b48
0x000000000042b530 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040f65f : pop rdi ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000042d2e0 : pop rdi ; pop rbp ; ret
0x000000000043e003 : pop rdi ; ret
0x0000000000435fa3 : pop rdx ; jmp 0x436fca
0x000000000042d2de : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043e001 : pop rsi ; pop r15 ; ret
0x0000000000416eab : pop rsi ; pop rbp ; ret
0x000000000043fc60 : pop rsp ; cli ; std ; call rsp
0x00000000004060f9 : pop rsp ; fnstcw word ptr [rcx - 0x46] ; ret 0x43e9
0x000000000042d2da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043dffd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042f720 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004238b5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000043d0b5 : popfq ; ret 0xd284
0x00000000004291e0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000416d83 : push -0x47fffffd ; ret 0x8db8
0x000000000042b3ca : push -0x75425eeb ; push rbp ; ret
0x0000000000427f28 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000043fbdb : push qword ptr [rax + rcx - 0x44240000] ; std ; call rsp
0x000000000043fb1b : push qword ptr [rbp + rax - 0x47440000] ; cld ; call rsp
0x000000000043fc1b : push qword ptr [rcx + rcx - 0x1ed40000] ; std ; call rsp
0x000000000043fb9b : push qword ptr [rdi + rax + 0x764c0000] ; std ; call rsp
0x000000000043fc5b : push qword ptr [rdx + rcx - 0x5a40000] ; std ; call rsp
0x000000000043fb5b : push qword ptr [rsi + rax + 0xadc0000] ; std ; call rsp
0x000000000043fadb : push qword ptr [rsp + rax + 0x206c0000] ; cld ; call rsp
0x0000000000417fab : push r15 ; ret 0x893e
0x000000000041896c : push r15 ; ret 0xb93e
0x00000000004143e1 : push rax ; add al, 0 ; add cl, ch ; ret 1
0x000000000041e154 : push rax ; pop rbp ; ret
0x000000000041859b : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4802
0x0000000000418402 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 2
0x0000000000418872 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8d48
0x00000000004017d4 : push rbp ; mov edi, 0x641e20 ; mov rbp, rsp ; call rax
0x000000000042b3cf : push rbp ; ret
0x000000000042b366 : push rbp ; ret 0xd284
0x0000000000409af0 : push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000042995f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000429a39 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043abcb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000410cc9 : push rdi ; ret
0x000000000041c886 : push rdi ; ret 0x73f3
0x0000000000417552 : push rdi ; ret 0x893e
0x000000000041896d : push rdi ; ret 0xb93e
0x0000000000410c75 : push rsi ; ret
0x000000000041c69c : push rsi ; ret 0x73f3
0x000000000043fce0 : pushfq ; add edi, edi ; jmp rsp
0x00000000004031c3 : pushfq ; ret 0x89e9
0x0000000000407220 : pushfq ; ret 0xb9e9
0x000000000040deec : pushfq ; ret 0xd284
0x0000000000401329 : ret
0x0000000000413089 : ret 0
0x00000000004083ce : ret 0x1055
0x000000000042f5d3 : ret 0x148
0x000000000040936e : ret 0x148a
0x000000000042c534 : ret 0x1a
0x00000000004217ad : ret 0x1add
0x00000000004291e5 : ret 0x1b2
0x000000000040f4f5 : ret 0x1ebc
0x000000000040dcc3 : ret 0x23b9
0x00000000004220fa : ret 0x23da
0x0000000000401562 : ret 0x240b
0x0000000000401362 : ret 0x240c
0x000000000042edf8 : ret 0x279e
0x0000000000409b47 : ret 0x2948
0x00000000004191d9 : ret 0x297
0x000000000042b534 : ret 0x2a
0x000000000040283e : ret 0x2d22
0x0000000000429962 : ret 0x2d50
0x0000000000405c8a : ret 0x2db9
0x000000000043a72e : ret 0x3040
0x000000000042a434 : ret 0x3b
0x0000000000427495 : ret 0x3e
0x000000000040e5d5 : ret 0x41e9
0x00000000004060fe : ret 0x43e9
0x000000000043202f : ret 0x43f7
0x0000000000413174 : ret 0x4588
0x000000000040e0a3 : ret 0x4589
0x000000000041859f : ret 0x4802
0x000000000043abce : ret 0x4815
0x000000000040260f : ret 0x4841
0x000000000042c426 : ret 0x4861
0x00000000004058fb : ret 0x48c0
0x0000000000401cdb : ret 0x48f0
0x000000000040f0a9 : ret 0x49ba
0x0000000000424ce1 : ret 0x4b
0x00000000004302f7 : ret 0x4cc0
0x000000000042d338 : ret 0x4cf0
0x000000000043294c : ret 0x4f0b
0x000000000040e189 : ret 0x5589
0x00000000004152b3 : ret 0x55f9
0x0000000000429bea : ret 0x5966
0x00000000004315a7 : ret 0x5bc6
0x000000000043dcef : ret 0x61
0x000000000040497e : ret 0x610e
0x0000000000405d8e : ret 0x6422
0x00000000004199cd : ret 0x66dc
0x000000000041666d : ret 0x68b5
0x0000000000413868 : ret 0x69a4
0x0000000000420e46 : ret 0x6a8a
0x000000000043ae28 : ret 0x72e8
0x000000000041c69d : ret 0x73f3
0x0000000000409435 : ret 0x74b9
0x0000000000420afe : ret 0x77a8
0x0000000000421c61 : ret 0x7a8a
0x00000000004288db : ret 0x7b7f
0x000000000042f28a : ret 0x8041
0x000000000042f4d2 : ret 0x8141
0x000000000040e6ec : ret 0x8148
0x000000000042a7f4 : ret 0x822d
0x0000000000405af0 : ret 0x8445
0x0000000000403609 : ret 0x8589
0x000000000040619d : ret 0x858a
0x000000000041c459 : ret 0x85c7
0x0000000000406357 : ret 0x8844
0x0000000000436589 : ret 0x8902
0x0000000000417553 : ret 0x893e
0x0000000000421873 : ret 0x8940
0x000000000041503a : ret 0x8944
0x0000000000409af4 : ret 0x8948
0x00000000004391ef : ret 0x894a
0x0000000000421077 : ret 0x8961
0x000000000041e507 : ret 0x89b5
0x00000000004031c4 : ret 0x89e9
0x00000000004159ef : ret 0x89ef
0x0000000000415cab : ret 0x89f5
0x000000000043a7e8 : ret 0x8a44
0x000000000043a6e5 : ret 0x8a4a
0x0000000000406b05 : ret 0x8b48
0x0000000000416c9b : ret 0x8b4c
0x0000000000416558 : ret 0x8bef
0x00000000004164e9 : ret 0x8bf5
0x0000000000418876 : ret 0x8d48
0x0000000000415d26 : ret 0x8db8
0x0000000000409ecb : ret 0x93d4
0x000000000040f7fc : ret 0x9ec9
0x000000000041a5bc : ret 0x9fda
0x0000000000407710 : ret 0xa
0x0000000000429a3c : ret 0xa30b
0x000000000041210a : ret 0xa7af
0x000000000040b5a9 : ret 0xaa7
0x000000000043b83f : ret 0xac60
0x00000000004060c0 : ret 0xb0
0x00000000004128ca : ret 0xb60f
0x000000000042b340 : ret 0xb740
0x0000000000433a27 : ret 0xb848
0x000000000041896e : ret 0xb93e
0x0000000000429570 : ret 0xb940
0x000000000043a672 : ret 0xb94a
0x0000000000407221 : ret 0xb9e9
0x0000000000412a6b : ret 0xba4e
0x00000000004121e2 : ret 0xbd88
0x000000000042b9bc : ret 0xbf48
0x0000000000401775 : ret 0xc148
0x000000000041e54a : ret 0xc226
0x000000000043df32 : ret 0xc493
0x0000000000410bb1 : ret 0xc8fb
0x000000000043c229 : ret 0xca21
0x0000000000411803 : ret 0xca29
0x000000000043dcf5 : ret 0xccb2
0x0000000000407410 : ret 0xd
0x000000000040ad80 : ret 0xd284
0x0000000000434775 : ret 0xd5f3
0x0000000000438e35 : ret 0xd618
0x0000000000405ed7 : ret 0xd701
0x0000000000436e26 : ret 0xd709
0x0000000000434d5e : ret 0xdc02
0x000000000040a48f : ret 0xdca9
0x000000000043d1db : ret 0xe280
0x000000000041901b : ret 0xe528
0x0000000000406726 : ret 0xe683
0x000000000042b212 : ret 0xe940
0x000000000042c471 : ret 0xe961
0x000000000042229d : ret 0xea51
0x0000000000407109 : ret 0xea81
0x00000000004366fa : ret 0xedb9
0x000000000042e02c : ret 0xee8
0x00000000004094c8 : ret 0xee9
0x0000000000413d4b : ret 0xf0b3
0x000000000041076d : ret 0xf0b5
0x00000000004169a4 : ret 0xf166
0x000000000041f765 : ret 0xf281
0x000000000042a077 : ret 0xf41
0x000000000042bfc5 : ret 0xf7f3
0x000000000042a74e : ret 0xfc75
0x0000000000435faa : ret 0xfcb3
0x000000000041849a : ret 0xfe8f
0x000000000040785a : ret 0xff9d
0x000000000042bfbf : ret 0xffa5
0x000000000042a748 : ret 0xffc4
0x0000000000416667 : ret 0xffd0
0x0000000000429968 : ret 0xffd5
0x0000000000429a42 : ret 0xffd8
0x000000000042a7fa : ret 0xffd9
0x0000000000429be4 : ret 0xffe0
0x0000000000413150 : ret 0xfff7
0x00000000004288d5 : ret 0xfffa
0x00000000004403d1 : ret 0xfffd
0x0000000000416c8a : ret 0xffff
0x0000000000406005 : ret 1
0x0000000000418208 : ret 2
0x000000000040bb78 : ret 3
0x0000000000412c32 : ret 4
0x0000000000411983 : ret 5
0x000000000040855f : ret 6
0x000000000042d734 : ret 8
0x000000000043abad : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000040acc8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000040dd78 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004376cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ecbc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437205 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000040c0c1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b163 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043abac : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000409b43 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000433a24 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040177c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40178b ; pop rbp ; ret
0x0000000000410091 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000409b44 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041b680 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41b6e9 ; ret
0x0000000000409af1 : ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000041f77a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041a33e : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043a9de : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004301b0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000040e182 : ror dword ptr [rdi + rcx*2 - 0x3faa75], cl ; ret 0x5589
0x00000000004169ed : sahf ; ret 0x8445
0x0000000000435d3a : sahf ; ret 0xd284
0x000000000040fab9 : sar bh, 1 ; cmp al, -0x47 ; ret
0x000000000040177e : sar eax, 1 ; jne 0x401789 ; pop rbp ; ret
0x000000000042b531 : sar ebp, -0x17 ; ret 0x2a
0x000000000040177d : sar rax, 1 ; jne 0x40178a ; pop rbp ; ret
0x000000000043ff51 : sbb ah, bh ; jmp rdi
0x000000000043ff24 : sbb al, 0 ; add byte ptr [rax], al ; or byte ptr [rsp + rdi*8], dl ; call rax
0x00000000004304f0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000418965 : sbb ch, cl ; pop qword ptr [rip + 0x47b80000] ; push rdi ; ret 0xb93e
0x000000000042b431 : sbb cl, ch ; ret
0x0000000000433273 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040810f : sbb eax, 0xc7000066 ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsp
0x000000000042f540 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000041ce01 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004060ce : scasd eax, dword ptr [rdi] ; jnp 0x4060ff ; adc cl, ch ; jmp qword ptr [rax]
0x000000000041801b : scasd eax, dword ptr [rdi] ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000434d5d : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x0000000000414e4a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414e4c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004065c9 : shr byte ptr [rbx], -0x76 ; adc al, 0x25 ; ret 0x6422
0x000000000042a432 : shr cl, cl ; ret 0x3b
0x000000000042826d : stc ; ret 0x77a8
0x0000000000440452 : std ; call qword ptr [rcx]
0x0000000000440572 : std ; call qword ptr [rdx]
0x000000000043fb62 : std ; call rsp
0x0000000000440392 : std ; jmp qword ptr [rdx]
0x000000000043fbda : std ; push qword ptr [rax + rcx - 0x44240000] ; std ; call rsp
0x000000000043fc1a : std ; push qword ptr [rcx + rcx - 0x1ed40000] ; std ; call rsp
0x000000000043fb9a : std ; push qword ptr [rdi + rax + 0x764c0000] ; std ; call rsp
0x000000000043fc5a : std ; push qword ptr [rdx + rcx - 0x5a40000] ; std ; call rsp
0x000000000043fb5a : std ; push qword ptr [rsi + rax + 0xadc0000] ; std ; call rsp
0x000000000042edf7 : std ; ret 0x279e
0x0000000000406c1a : sti ; add eax, 0x25148abf ; ret
0x0000000000409cd8 : stosd dword ptr [rdi], eax ; ret
0x000000000043fc20 : sub al, -0x1f ; std ; call rsp
0x000000000041d48e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b946 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041d378 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429965 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000440570 : sub ch, -3 ; call qword ptr [rdx]
0x0000000000440110 : sub ch, -4 ; call qword ptr [rax]
0x000000000042995b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000429a35 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042a7f5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000040be65 : sub eax, 0xb9e87ce1 ; ret
0x0000000000433a2f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043e03d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043e03c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000429960 : test al, -0x7f ; ret 0x2d50
0x0000000000429a3a : test al, -0x7f ; ret 0xa30b
0x000000000043a483 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412b13 : test al, 0x1b ; ret
0x000000000042fbce : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000042c196 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000432ac8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000430d20 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044038c : test byte ptr [rax + rax], al ; add byte ptr [rax], al ; mov bl, -3 ; jmp qword ptr [rdx]
0x000000000043e00a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412c18 : test byte ptr [rax], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000417c19 : test byte ptr [rbx + rcx], bh ; add cl, ch ; ret
0x00000000004207dc : test byte ptr [rcx], ch ; ret 0
0x000000000040d346 : test byte ptr [rdi - 0x16fffff5], cl ; ret
0x000000000041801a : test byte ptr [rdi - 0x16fffff7], ch ; ret 1
0x000000000041ce00 : test byte ptr [rdi - 0x16fffffe], ch ; ret 1
0x0000000000415fbb : test byte ptr [rip - 0x16fffff5], al ; ret 1
0x000000000041b777 : test byte ptr [rsi], bh ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000408c98 : test ch, ch ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040d747 : test dh, ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000419e6a : test dl, ah ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004207d6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004068c8 : test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rcx]
0x0000000000408172 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000408114 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsp
0x0000000000407f6c : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000408190 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rbx]
0x000000000040712a : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rcx - 0x3e]
0x00000000004077c4 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdi]
0x0000000000432bd6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000407df8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rax
0x0000000000436ed5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042f7ea : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004060f5 : test dword ptr [rdx + 0x4c], 0xd9665cb9 ; jns 0x4060c1 ; ret 0x43e9
0x000000000042b20b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042c46a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000427f2a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042c41f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000042a42f : wait ; jge 0x42a411 ; shr cl, cl ; ret 0x3b
0x00000000004254ed : wait ; jo 0x4254fb ; ret
0x0000000000428a3c : wait ; jo 0x428a4a ; ret
0x000000000043abc8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040aa81 : xchg eax, ebp ; jmp 0x40b282
0x0000000000436dc2 : xchg eax, ebp ; ret
0x0000000000405aef : xchg eax, ebp ; ret 0x8445
0x000000000040aec0 : xchg eax, ebp ; ret 0xd284
0x0000000000421075 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000427975 : xchg eax, ebx ; ret
0x0000000000427ba5 : xchg eax, ecx ; ret
0x000000000040a4ea : xchg eax, edi ; add al, 0 ; add byte ptr [rbx + 0x622db045], cl ; ret 0xdca9
0x000000000040accf : xchg eax, edi ; ret 0x8445
0x000000000040ad7f : xchg eax, edi ; ret 0xd284
0x000000000040ed26 : xchg eax, edx ; ret
0x000000000042f29f : xchg eax, edx ; ret 0x8445
0x0000000000432ace : xchg eax, edx ; ret 0xd284
0x0000000000414d15 : xchg eax, esi ; ret 0xd284
0x0000000000431d6a : xchg eax, esp ; jmp 0x4327d8
0x0000000000431ca7 : xchg eax, esp ; jmp 0x4327da
0x000000000042c424 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000427cf5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042c46f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042f289 : xchg eax, esp ; ret 0x8041
0x000000000041bfea : xchg eax, esp ; ret 0x8445
0x000000000042b33e : xchg eax, esp ; ret 0xb740
0x0000000000411b07 : xchg eax, esp ; ret 0xd284
0x0000000000414e4b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000431d69 : xchg eax, r12d ; jmp 0x4327d9
0x000000000043fe19 : xchg edi, edi ; call rsp
0x00000000004190bf : xlatb ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b339 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000041fbd7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041fbd8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004128e6 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000440c10 : xor byte ptr [rdi - 1], ah ; jmp rcx
0x0000000000440700 : xor cl, 0xfe ; jmp qword ptr [rbx]
0x000000000041a85e : xor dh, byte ptr [rbx] ; ret
0x000000000041a813 : xor dword ptr [rbx], esi ; ret
0x0000000000407770 : xor eax, 0x8a201e65 ; adc al, 0x25 ; ret 0x6422
