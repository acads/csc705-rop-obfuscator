0x0000000000420d80 : adc byte ptr [rsi - 1], dh ; call qword ptr [rdx]
0x000000000040ff8e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040f901 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000417ffb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410a8b : adc eax, 0x558abda1 ; ret
0x0000000000414069 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401109 : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000420f5b : add ah, ah ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xffff
0x000000000041c7ea : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000420d7c : add al, 7 ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], dh ; call qword ptr [rdx]
0x000000000042042b : add al, ah ; cmp al, -1 ; jmp qword ptr [rax]
0x0000000000401a57 : add al, ch ; ret
0x0000000000414eb7 : add al, ch ; xchg eax, ebx ; ret 0xfffe
0x0000000000417cd4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004108c9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041fc2f : add bl, dh ; ret
0x000000000041f902 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000041fb64 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041502b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401a37 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420d7e : add byte ptr [rax], al ; adc byte ptr [rsi - 1], dh ; call qword ptr [rdx]
0x0000000000420f59 : add byte ptr [rax], al ; add ah, ah ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xffff
0x0000000000420d7a : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], dh ; call qword ptr [rdx]
0x0000000000401a55 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000414eb5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret 0xfffe
0x0000000000417cd2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041fc2d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401a35 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041fc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403c7a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000041fc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004023de : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000413ad2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416493 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041cebc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000418df9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041f903 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000041fb65 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000417c40 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041ecd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041c051 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041dde8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040419b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bd65 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000417bca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004161a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041406b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004136f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417ffd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401c20 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000414eb6 : add byte ptr [rax], al ; call 0x401154
0x0000000000420c36 : add byte ptr [rax], al ; fcom dword ptr [rax - 1] ; jmp qword ptr [rbx]
0x0000000000420d5a : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; push rax ; jne 0x420d6b ; call rdx
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x000000000041f948 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c7c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000401a36 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402324 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413ad3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420d5e : add byte ptr [rax], al ; push rax ; jne 0x420d67 ; call rdx
0x000000000041fc2e : add byte ptr [rax], al ; ret
0x0000000000420f5f : add byte ptr [rax], al ; ret 0xffff
0x0000000000420b4e : add byte ptr [rax], al ; xor byte ptr [rdx - 1], cl ; call rdx
0x0000000000420d7f : add byte ptr [rax], dl ; jbe 0x420d86 ; call qword ptr [rdx]
0x00000000004023e0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000413ad4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416495 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041644a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041cebe : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041f949 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000418dfb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000417d3e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x000000000041f905 : add byte ptr [rcx], al ; ret 0xea81
0x000000000041fb67 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000417c42 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000420d7b : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], dh ; call qword ptr [rdx]
0x000000000041ecd3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041c053 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ddea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040419d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bd67 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000417bcc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004161a7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004109fc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041669d : add cl, ch ; ret
0x000000000041ee52 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041dca4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041de8e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x220d66 ; add ebx, esi ; ret
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000041406e : add esp, 0x10 ; pop rbp ; ret
0x0000000000417d3c : add esp, 0x100 ; pop rbp ; ret
0x0000000000417eac : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004136f3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000418000 : add esp, 0x40 ; pop rbp ; ret
0x000000000041c9e9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401c23 : add esp, 0x50 ; pop rbp ; ret
0x0000000000418f20 : add esp, 0x60 ; pop rbp ; ret
0x00000000004153e2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040354f : add esp, 0x80 ; pop rbp ; ret
0x000000000041867d : add esp, 0x90 ; pop rbp ; ret
0x00000000004161c6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000413fcb : add esp, 0xb0 ; pop rbp ; ret
0x000000000040437a : add esp, 0xd0 ; pop rbp ; ret
0x000000000041d10e : add esp, 0xe0 ; pop rbp ; ret
0x0000000000402320 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000404983 : add esp, 8 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000041406d : add rsp, 0x10 ; pop rbp ; ret
0x0000000000417d3b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000417eab : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004136f2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000417fff : add rsp, 0x40 ; pop rbp ; ret
0x000000000041c9e8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401c22 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000418f1f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004153e1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040354e : add rsp, 0x80 ; pop rbp ; ret
0x000000000041867c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004161c5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000413fca : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000404379 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041d10d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040231f : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000404982 : add rsp, 8 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x00000000004014b4 : and ah, byte ptr [rdx] ; jmp rax
0x00000000004014f4 : and ah, byte ptr [rdx] ; jmp rdx
0x000000000041f90d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041dca3 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041de8d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000418b2b : and byte ptr [rsi + 0x58], ah ; jb 0x418b62 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040fc31 : and eax, 0x75b4b9d3 ; ret
0x0000000000414eb8 : call 0x401152
0x0000000000414e71 : call 0x401162
0x0000000000418f25 : call 0x418fe9
0x000000000041d45d : call 0xffffffffaca29691
0x000000000041d45c : call 0xffffffffaca29692
0x00000000004136e9 : call 0xffffffffe903c039
0x00000000004136e8 : call 0xffffffffe903c03a
0x000000000041fc09 : call qword ptr [r12 + rbx*8]
0x0000000000403c82 : call qword ptr [rax]
0x0000000000414eae : call qword ptr [rbx]
0x000000000041ca8c : call qword ptr [rcx]
0x0000000000412b74 : call qword ptr [rdi]
0x000000000040eb5b : call qword ptr [rdx]
0x000000000041fc0a : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x0000000000410ddb : call rcx
0x00000000004127b4 : call rdi
0x0000000000411fe5 : call rdx
0x0000000000413a5d : call rsi
0x000000000040238b : call rsp
0x000000000041c9e7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000418287 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000419379 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x000000000041502f : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004061bd : clc ; ret 0x77a8
0x000000000041da9e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040231e : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040240f : cld ; jmp 0x40247c
0x000000000040240e : cld ; jmp 0x40247d
0x0000000000418b30 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041f90c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000417a4b : cmc ; ret 0x4f0b
0x000000000042042d : cmp al, -1 ; jmp qword ptr [rax]
0x0000000000417be1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x0000000000414eb4 : cmp eax, 0xe8000000 ; xchg eax, ebx ; ret 0xfffe
0x0000000000410a87 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000040ff8b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040f8fe : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000410103 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000418c5d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041c546 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000416d1b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417a46 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000405e9a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041c373 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041bfc9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404199 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420c38 : fcom dword ptr [rax - 1] ; jmp qword ptr [rbx]
0x000000000041dec8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041cba7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041cba8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000041fc0c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a52 : fsubr st(1) ; ret 0
0x0000000000417f33 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d10c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404981 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x622228 ; jmp rax
0x0000000000418c5b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000419731 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000420d5c : in al, 6 ; add byte ptr [rax], al ; push rax ; jne 0x420d69 ; call rdx
0x000000000041d51c : in al, dx ; jmp 0x41d599
0x000000000041d51b : in al, dx ; jmp 0x41d59a
0x0000000000401a3a : in al, dx ; pop rbp ; ret
0x0000000000403be1 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000415b97 : int 0x5b
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x0000000000418b2e : jb 0x418b5f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000420d81 : jbe 0x420d84 ; call qword ptr [rdx]
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x622228 ; jmp rax
0x000000000040f026 : jge 0x40efab ; ret 0xffd5
0x000000000040faf0 : jge 0x40fad0 ; shr cl, cl ; ret 0x3b
0x000000000040116b : jmp 0x401127
0x0000000000401a53 : jmp 0x401b20
0x0000000000402410 : jmp 0x40247b
0x0000000000410240 : jmp 0x4136c0
0x000000000040e144 : jmp 0x4136c1
0x000000000040f511 : jmp 0x4136c2
0x0000000000416e6b : jmp 0x4178d7
0x0000000000416da8 : jmp 0x4178d9
0x0000000000418ed3 : jmp 0x418f38
0x000000000041c886 : jmp 0x41cb68
0x000000000041d51d : jmp 0x41d598
0x0000000000417a4a : jmp 0x4f4d3d46
0x0000000000413015 : jmp qword ptr [rax]
0x00000000004209f3 : jmp qword ptr [rbx]
0x0000000000404e12 : jmp qword ptr [rcx]
0x0000000000410cc7 : jmp qword ptr [rdi]
0x0000000000417cda : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x000000000040f618 : jmp rbx
0x000000000041004a : jmp rcx
0x000000000040f672 : jmp rdi
0x00000000004014f7 : jmp rdx
0x0000000000420c7b : jmp rsi
0x000000000040f928 : jmp rsp
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x0000000000420d61 : jne 0x420d64 ; call rdx
0x0000000000408f3e : jo 0x408f4a ; ret
0x000000000040abae : jo 0x40abba ; ret
0x000000000040e0fd : jo 0x40e109 ; ret
0x00000000004153e4 : jo 0x415445 ; ret
0x000000000040faee : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000410bee : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000402c16 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403d53 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004156d9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d52 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e44e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000401a34 : loop 0x401a3e ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411455 : loope 0x411423 ; jmp 0x4136c3
0x0000000000405833 : loopne 0x405886 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414ddd : loopne 0x414e43 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004161c4 : loopne 0x416217 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000418593 : loopne 0x41859c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000418f1e : loopne 0x418f6e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000418f1d : loopne 0x418f6f ; add esp, 0x60 ; pop rbp ; ret
0x000000000041d110 : loopne 0x41d117 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041daa2 : loopne 0x41daa9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f94c : loopne 0x41f99b ; mov esp, ebp ; pop rbp ; ret
0x000000000041f94b : loopne 0x41f99c ; mov esp, ebp ; pop rbp ; ret
0x000000000041fb9c : loopne 0x41fbeb ; mov esp, ebp ; pop rbp ; ret
0x000000000041fb9b : loopne 0x41fbec ; mov esp, ebp ; pop rbp ; ret
0x000000000040f01d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f0f7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401e10 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d0a5 : mov ah, 0x75 ; ret
0x0000000000415bb3 : mov al, -0x47 ; ret
0x000000000041c04f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000413fcd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e1bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041de8a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e0ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406a45 : mov bl, 0x75 ; ret
0x0000000000401513 : mov byte ptr [rip + 0x220d66], 1 ; ret
0x000000000040e89f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041ee54 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041dca6 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041de90 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041f90a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041eb81 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000404fb9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404b8f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d51a : mov dword ptr [rbp - 0x14], eax ; jmp 0x41d59b
0x0000000000414e6b : mov dword ptr [rbp - 0x1f0], ecx ; call 0x401168
0x0000000000401e0e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416e68 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4178da
0x0000000000417f31 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405296 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404e3d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004046b9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000418d9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418f6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040321e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041d395 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404fbc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000418f1c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041f94a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c7f : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000404e3f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040497f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041502d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404e3e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000411858 : mov ebp, 0xe19c53ba ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000404b8c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c79 : mov edi, 0 ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000401535 : mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x622228 ; jmp rax
0x00000000004014f2 : mov edi, 0x622228 ; jmp rdx
0x000000000040e0f7 : mov edi, 0xb8000055 ; wait ; jo 0x40e10f ; ret
0x000000000041fc07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041fc06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041c7fe : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040e8bb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040f732 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041c7e7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004014f0 : mov esi, eax ; mov edi, 0x622228 ; jmp rdx
0x0000000000401a39 : mov esp, ebp ; pop rbp ; ret
0x0000000000414e6a : mov qword ptr [rbp - 0x1f0], r9 ; call 0x401169
0x0000000000405295 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401e0f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004046b8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000418d9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418f6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040321d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418f1b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403c7e : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000041502c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x00000000004014ef : mov rsi, rax ; mov edi, 0x622228 ; jmp rdx
0x0000000000401a38 : mov rsp, rbp ; pop rbp ; ret
0x0000000000418b31 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000403a75 : movabs byte ptr [0x8348e2894853b517], al ; ret 0x48f0
0x000000000040a398 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040d5e5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041ee53 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041dca5 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041de8f : movzx eax, al ; pop rbp ; ret
0x000000000041c5f8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000406885 : nop ; ret
0x0000000000414c92 : nop ; ret 0x148
0x0000000000414ca6 : nop ; ret 0x2948
0x000000000041fc28 : nop dword ptr [rax + rax] ; ret
0x000000000040f01a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f0f4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401515 : or ax, 0x22 ; add ebx, esi ; ret
0x0000000000404b90 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420f5d : or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xffff
0x0000000000416448 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000410106 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000405294 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401516 : or eax, 0xf3010022 ; ret
0x0000000000404e3b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004109fb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041de8c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e1bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415bb2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041c7e9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000411ae5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000406736 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000411b30 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000417cd1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041c7ec : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000418b2c : pop ax ; jb 0x418b61 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000412999 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fc1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414ddf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041299b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fc1e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041299d : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fc20 : pop r14 ; pop r15 ; ret
0x0000000000403d57 : pop r14 ; pop rbp ; ret
0x000000000041299f : pop r15 ; pop rbp ; ret
0x000000000041fc22 : pop r15 ; ret
0x0000000000418b2d : pop rax ; jb 0x418b60 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x220d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x622228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x622228 ; jmp rdx
0x000000000041fc1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041299c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fc1f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040e8a2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040ab75 : pop rbp ; pop rcx ; ret 0x8589
0x000000000040e8be : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004014a5 : pop rbp ; ret
0x0000000000414dde : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413ad5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d56 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416450 : pop rbx ; ret
0x000000000040e8a3 : pop rcx ; ret 0x1b2
0x0000000000408f76 : pop rcx ; ret 0x8589
0x000000000040e8bf : pop rcx ; ret 0x8b48
0x0000000000410bf0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004129a0 : pop rdi ; pop rbp ; ret
0x000000000041fc23 : pop rdi ; ret
0x000000000041299e : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041fc21 : pop rsi ; pop r15 ; ret
0x0000000000403d58 : pop rsi ; pop rbp ; ret
0x000000000041299a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fc1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414de0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408f75 : pop rsp ; pop rcx ; ret 0x8589
0x000000000041ecd5 : popfq ; ret 0xd284
0x000000000040e8a0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000410a8a : push -0x75425eeb ; push rbp ; ret
0x000000000040d5e8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000420d60 : push rax ; jne 0x420d65 ; call rdx
0x0000000000401c25 : push rax ; pop rbp ; ret
0x0000000000401534 : push rbp ; mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x0000000000410a8f : push rbp ; ret
0x0000000000410a26 : push rbp ; ret 0xd284
0x000000000040f01f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f0f9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041c7eb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041c055 : pushfq ; ret 0xd284
0x0000000000401111 : ret
0x0000000000401a54 : ret 0
0x0000000000414c93 : ret 0x148
0x0000000000411bf4 : ret 0x1a
0x0000000000406e6d : ret 0x1add
0x000000000040e8a5 : ret 0x1b2
0x0000000000401372 : ret 0x220d
0x0000000000401172 : ret 0x220e
0x00000000004077ba : ret 0x23da
0x00000000004144b8 : ret 0x279e
0x0000000000410109 : ret 0x2948
0x0000000000410bf4 : ret 0x2a
0x000000000040f022 : ret 0x2d50
0x000000000041c34e : ret 0x3040
0x000000000040faf4 : ret 0x3b
0x000000000040cb55 : ret 0x3e
0x000000000040ff91 : ret 0x4802
0x000000000041c7ee : ret 0x4815
0x0000000000403682 : ret 0x485b
0x0000000000411ae6 : ret 0x4861
0x0000000000403aee : ret 0x48e0
0x0000000000401854 : ret 0x48f0
0x000000000040a3a1 : ret 0x4b
0x00000000004159b7 : ret 0x4cc0
0x00000000004129f8 : ret 0x4cf0
0x0000000000417a4c : ret 0x4f0b
0x0000000000404deb : ret 0x5589
0x000000000040f2aa : ret 0x5966
0x00000000004166a7 : ret 0x5bc6
0x000000000041f90f : ret 0x61
0x0000000000406506 : ret 0x6a8a
0x00000000004061be : ret 0x77a8
0x0000000000407321 : ret 0x7a8a
0x000000000040df9b : ret 0x7b7f
0x000000000041494a : ret 0x8041
0x0000000000414b92 : ret 0x8141
0x000000000041c549 : ret 0x8148
0x000000000040feb4 : ret 0x822d
0x0000000000403be5 : ret 0x8445
0x0000000000408f5c : ret 0x8589
0x00000000004022a0 : ret 0x858a
0x0000000000406f33 : ret 0x8940
0x00000000004031fb : ret 0x8948
0x000000000041ae0f : ret 0x894a
0x0000000000406737 : ret 0x8961
0x000000000041c408 : ret 0x8a44
0x000000000041c305 : ret 0x8a4a
0x000000000040e8c1 : ret 0x8b48
0x000000000040f0fc : ret 0xa30b
0x000000000041d45f : ret 0xac60
0x000000000040234c : ret 0xb0
0x0000000000410a00 : ret 0xb740
0x0000000000418b27 : ret 0xb848
0x000000000040ec30 : ret 0xb940
0x000000000041c292 : ret 0xb94a
0x000000000041107c : ret 0xbf48
0x00000000004014d5 : ret 0xc148
0x000000000041fb52 : ret 0xc493
0x000000000041de49 : ret 0xca21
0x000000000041f915 : ret 0xccb2
0x00000000004041a0 : ret 0xd284
0x000000000041aa55 : ret 0xd618
0x000000000041edfb : ret 0xe280
0x000000000041ca48 : ret 0xe2e8
0x00000000004108d2 : ret 0xe940
0x0000000000411b31 : ret 0xe961
0x000000000040795d : ret 0xea51
0x000000000041f907 : ret 0xea81
0x00000000004136ec : ret 0xee8
0x0000000000404e25 : ret 0xf281
0x000000000040f737 : ret 0xf41
0x0000000000411685 : ret 0xf7f3
0x000000000040fe0e : ret 0xfc75
0x000000000041167f : ret 0xffa5
0x000000000040fe08 : ret 0xffc4
0x000000000040f028 : ret 0xffd5
0x000000000040f102 : ret 0xffd8
0x000000000040feba : ret 0xffd9
0x000000000040f2a4 : ret 0xffe0
0x000000000040df95 : ret 0xfffa
0x0000000000414e73 : ret 0xfffe
0x0000000000420f61 : ret 0xffff
0x000000000040f770 : ret 1
0x000000000040fca0 : ret 2
0x0000000000412df4 : ret 8
0x000000000041c7cd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004192ec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040437c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420418 : rol byte ptr [rip + 0x33a00000], -1 ; jmp rax
0x000000000041c7cc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000418b24 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x000000000041dca7 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000404e3a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041c5fe : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000415870 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041ddec : sahf ; ret 0xd284
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x0000000000410bf1 : sar ebp, -0x17 ; ret 0x2a
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000415bb0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000410af1 : sbb cl, ch ; ret
0x0000000000418373 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414c00 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040faf2 : shr cl, cl ; ret 0x3b
0x000000000040d92d : stc ; ret 0x77a8
0x00000000004144b7 : std ; ret 0x279e
0x000000000040255e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d566 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402448 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f025 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000040f01b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f0f5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040feb5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000418b2f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041fc5d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041fc5c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f020 : test al, -0x7f ; ret 0x2d50
0x000000000040f0fa : test al, -0x7f ; ret 0xa30b
0x000000000041c0a3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041528e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000411856 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000417bc8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041fc2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405e9c : test byte ptr [rcx], ch ; ret 0
0x0000000000405e96 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000417cd6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000414eaa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004108cb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000411b2a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040d5ea : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000411adf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040faef : wait ; jge 0x40fad1 ; shr cl, cl ; ret 0x3b
0x000000000040abad : wait ; jo 0x40abbb ; ret
0x000000000040e0fc : wait ; jo 0x40e10a ; ret
0x000000000041c7e8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000414dc7 : xchg eax, ebp ; ret
0x0000000000403be4 : xchg eax, ebp ; ret 0x8445
0x000000000040419f : xchg eax, ebp ; ret 0xd284
0x0000000000406735 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040d035 : xchg eax, ebx ; ret
0x0000000000414eb9 : xchg eax, ebx ; ret 0xfffe
0x000000000040d265 : xchg eax, ecx ; ret
0x000000000041bd69 : xchg eax, edi ; ret 0xd284
0x0000000000406ab5 : xchg eax, edx ; ret
0x000000000041495f : xchg eax, edx ; ret 0x8445
0x0000000000417bce : xchg eax, edx ; ret 0xd284
0x0000000000416e6a : xchg eax, esp ; jmp 0x4178d8
0x0000000000416da7 : xchg eax, esp ; jmp 0x4178da
0x0000000000411ae4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040d3b5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000411b2f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000414949 : xchg eax, esp ; ret 0x8041
0x00000000004109fe : xchg eax, esp ; ret 0xb740
0x00000000004161a9 : xchg eax, esp ; ret 0xd284
0x0000000000416e69 : xchg eax, r12d ; jmp 0x4178d9
0x00000000004109f9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000405297 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405298 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420b50 : xor byte ptr [rdx - 1], cl ; call rdx
0x000000000042041d : xor edi, edi ; jmp rax
