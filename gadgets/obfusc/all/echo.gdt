0x0000000000424fa0 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; clc ; ret
0x0000000000405818 : adc byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000041460e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000405d7a : adc cl, byte ptr [rax - 0x7f] ; ret 8
0x0000000000413f81 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041c67b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041510b : adc eax, 0x558abda1 ; ret
0x00000000004186e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000425081 : adc edi, esi ; call rcx
0x0000000000406824 : add al, 0 ; add byte ptr [rbx + 0x182ddc45], cl ; ret 0xd592
0x0000000000420e6a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004256bc : add al, 7 ; add byte ptr [rax], al ; push rax ; jae 0x4256c9 ; call qword ptr [rdx]
0x0000000000424d5b : add al, ah ; xor bh, bh ; jmp rax
0x0000000000424fa7 : add al, bh ; ret
0x0000000000424cab : add al, dl ; ret
0x000000000041c354 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000405c61 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000404c71 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000404b48 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdi]
0x0000000000405d1b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000414f49 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004242af : add bl, dh ; ret
0x0000000000423f82 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004241e4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000424fa3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; clc ; ret
0x0000000000406074 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004196ab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040738b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405c23 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000424d6b : add byte ptr [rax], ah ; cmp bh, bh ; jmp qword ptr [rax]
0x00000000004256ba : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; push rax ; jae 0x4256cb ; call qword ptr [rdx]
0x0000000000424fa5 : add byte ptr [rax], al ; add al, bh ; ret
0x0000000000424ca9 : add byte ptr [rax], al ; add al, dl ; ret
0x000000000041c352 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000404c6f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x00000000004242ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000424fa1 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; clc ; ret
0x0000000000407389 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004242ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400660 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400662 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004242ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400664 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040686f : add byte ptr [rax], al ; add byte ptr [rbx + 0x192ddc45], cl ; ret 0xd592
0x000000000040731e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000418152 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041ab13 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042153c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041d479 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000405f00 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; lahf ; ret 0x8445
0x00000000004258d9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; ret
0x0000000000423f83 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004241e5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000405962 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x858b
0x000000000041c2c0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000423351 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004206d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000422468 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040591a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004203e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041c24a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041a825 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004047df : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004186eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417d70 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c67d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017e0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040105b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004258da : add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; ret
0x00000000004250bf : add byte ptr [rax], al ; and edi, esi ; call qword ptr [rcx]
0x0000000000424fa6 : add byte ptr [rax], al ; clc ; ret
0x000000000042569a : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; nop ; jb 0x4256ab ; call rdx
0x0000000000401219 : add byte ptr [rax], al ; jmp 0x401079
0x0000000000423fc8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407219 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040738a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042569e : add byte ptr [rax], al ; nop ; jb 0x4256a7 ; call rdx
0x0000000000408493 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424ca6 : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000418153 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042507e : add byte ptr [rax], al ; push rax ; adc edi, esi ; call rcx
0x00000000004256be : add byte ptr [rax], al ; push rax ; jae 0x4256c7 ; call qword ptr [rdx]
0x0000000000424e22 : add byte ptr [rax], al ; rcr byte ptr [rbx - 1] ; call qword ptr [rax]
0x00000000004242ae : add byte ptr [rax], al ; ret
0x0000000000400666 : add byte ptr [rax], al ; ret 0
0x0000000000424fa2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; clc ; ret
0x0000000000425576 : add byte ptr [rax], al ; sbb byte ptr [rsi - 1], cl ; jmp qword ptr [rbx]
0x00000000004254ae : add byte ptr [rax], al ; xor byte ptr [rcx - 1], cl ; call qword ptr [rbx]
0x0000000000406826 : add byte ptr [rbx + 0x182ddc45], cl ; ret 0xd592
0x0000000000406871 : add byte ptr [rbx + 0x192ddc45], cl ; ret 0xd592
0x0000000000407320 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000418154 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041ab15 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041aaca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042153e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040721a : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000423fc9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041d47b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000405f02 : add byte ptr [rcx + 0xf], al ; lahf ; ret 0x8445
0x00000000004258db : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; ret
0x000000000041c3be : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401458 : add byte ptr [rcx], al ; ret
0x0000000000423f85 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004241e7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000405964 : add byte ptr [rcx], ch ; ret 0x858b
0x000000000041c2c2 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004256bb : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; push rax ; jae 0x4256ca ; call qword ptr [rdx]
0x0000000000423353 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004206d3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042246a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040591c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004203e7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041c24c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041a827 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004047e1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041507c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041ad1d : add cl, ch ; ret
0x0000000000406af6 : add cl, ch ; ret 1
0x00000000004250bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; and edi, esi ; call qword ptr [rcx]
0x00000000004234d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000422324 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042250e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401454 : add eax, 0x224dee ; add ebx, esi ; ret
0x0000000000401059 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040141b : add eax, edx ; sar rax, 1 ; jne 0x40142c ; pop rbp ; ret
0x0000000000401459 : add ebx, esi ; ret
0x00000000004186ee : add esp, 0x10 ; pop rbp ; ret
0x000000000041c3bc : add esp, 0x100 ; pop rbp ; ret
0x000000000041c52c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000417d73 : add esp, 0x20 ; pop rbp ; ret
0x000000000041c680 : add esp, 0x40 ; pop rbp ; ret
0x0000000000421069 : add esp, 0x440 ; pop rbp ; ret
0x00000000004016c9 : add esp, 0x50 ; pop rbp ; ret
0x000000000041d5a0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000419a62 : add esp, 0x70 ; pop rbp ; ret
0x000000000040848f : add esp, 0x80 ; pop rbp ; ret
0x000000000041ccfd : add esp, 0x90 ; pop rbp ; ret
0x000000000041a846 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041864b : add esp, 0xb0 ; pop rbp ; ret
0x00000000004089fa : add esp, 0xd0 ; pop rbp ; ret
0x000000000042178e : add esp, 0xe0 ; pop rbp ; ret
0x000000000041e46f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000409003 : add esp, 8 ; pop rbp ; ret
0x000000000040105e : add esp, 8 ; ret
0x000000000040141a : add rax, rdx ; sar rax, 1 ; jne 0x40142d ; pop rbp ; ret
0x00000000004186ed : add rsp, 0x10 ; pop rbp ; ret
0x000000000041c3bb : add rsp, 0x100 ; pop rbp ; ret
0x000000000041c52b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000417d72 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041c67f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000421068 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004016c8 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041d59f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000419a61 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040848e : add rsp, 0x80 ; pop rbp ; ret
0x000000000041ccfc : add rsp, 0x90 ; pop rbp ; ret
0x000000000041a845 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041864a : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004089f9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042178d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041e46e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000409002 : add rsp, 8 ; pop rbp ; ret
0x000000000040105d : add rsp, 8 ; ret
0x0000000000423f8d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000402bac : and al, 0xfffffffffffffff8 ; ret 0x8589
0x0000000000404ab7 : and al, 0xfffffffffffffff8 ; ret 0x85b9
0x0000000000422323 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042250d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004258dc : and al, 9 ; add byte ptr [rax], al ; ret
0x0000000000401457 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041d1ab : and byte ptr [rsi + 0x58], ah ; jb 0x41d1e2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004142b1 : and eax, 0x75b4b9d3 ; ret
0x00000000004250c1 : and edi, esi ; call qword ptr [rcx]
0x0000000000401456 : and r8b, byte ptr [r8] ; add ebx, esi ; ret
0x000000000041d5a5 : call 0x41d669
0x0000000000421add : call 0xffffffffaca2dd11
0x0000000000421adc : call 0xffffffffaca2dd12
0x0000000000417d69 : call 0xffffffffe90406b9
0x0000000000417d68 : call 0xffffffffe90406ba
0x0000000000424289 : call qword ptr [r12 + rbx*8]
0x0000000000405c67 : call qword ptr [rax]
0x000000000041952e : call qword ptr [rbx]
0x000000000042110c : call qword ptr [rcx]
0x00000000004171f4 : call qword ptr [rdi]
0x00000000004131db : call qword ptr [rdx]
0x0000000000404c77 : call qword ptr [rsi]
0x000000000042428a : call qword ptr [rsp + rbx*8]
0x000000000040147d : call rax
0x000000000041545b : call rcx
0x0000000000416e34 : call rdi
0x0000000000416665 : call rdx
0x00000000004072cb : call rsp
0x0000000000421067 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000041c907 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041d9f9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040141f : clc ; jne 0x401428 ; pop rbp ; ret
0x00000000004196af : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406078 : clc ; pop rbx ; pop rbp ; ret
0x0000000000424fa8 : clc ; ret
0x000000000040a83d : clc ; ret 0x77a8
0x0000000000402bad : clc ; ret 0x8589
0x0000000000404ab8 : clc ; ret 0x85b9
0x000000000042211e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041e46d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040734f : cld ; jmp 0x4073bc
0x000000000040734e : cld ; jmp 0x4073bd
0x000000000040721d : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d1b0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000423f8c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041c0cb : cmc ; ret 0x4f0b
0x0000000000424d6d : cmp bh, bh ; jmp qword ptr [rax]
0x000000000041c261 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004013dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4013f0 ; pop rbp ; ret
0x0000000000415107 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000041460b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000413f7e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000414783 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041d2dd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000420bc6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041b39b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401b38 : dec dword ptr [rcx - 0x47167e3f] ; ret
0x0000000000401aa2 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x000000000041c0c6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040a51a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x00000000004209f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000420649 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408819 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422548 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000421227 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000421228 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000042428c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041c5b3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042178c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000409001 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004013f0 : hlt ; pop rbp ; mov edi, 0x626220 ; jmp rax
0x000000000041d2db : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000419f1c : imul esi, eax, 0x7b358b4c ; ret
0x000000000041ddb1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000424ca4 : in al, 2 ; add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000042569c : in al, 6 ; add byte ptr [rax], al ; nop ; jb 0x4256a9 ; call rdx
0x0000000000421b9c : in al, dx ; jmp 0x421c19
0x0000000000421b9b : in al, dx ; jmp 0x421c1a
0x0000000000401aa8 : in al, dx ; pop rbp ; ret
0x00000000004058f0 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000040474e : inc dword ptr [rcx] ; jmp 0x4063c9
0x000000000040480b : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000041a217 : int 0x5b
0x00000000004013e3 : ja 0x4013ea ; pop rbp ; ret
0x00000000004256c1 : jae 0x4256c4 ; call qword ptr [rdx]
0x000000000041d1ae : jb 0x41d1df ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004256a1 : jb 0x4256a4 ; call rdx
0x00000000004013ef : je 0x4013ed ; pop rbp ; mov edi, 0x626220 ; jmp rax
0x00000000004136a6 : jge 0x41362b ; ret 0xffd5
0x0000000000414170 : jge 0x414150 ; shr cl, cl ; ret 0x3b
0x000000000040121b : jmp 0x401077
0x0000000000404b28 : jmp 0x4063c6
0x0000000000404750 : jmp 0x4063c7
0x0000000000407350 : jmp 0x4073bb
0x00000000004148c0 : jmp 0x417d40
0x00000000004127c4 : jmp 0x417d41
0x0000000000413b91 : jmp 0x417d42
0x000000000041b4eb : jmp 0x41bf57
0x000000000041b428 : jmp 0x41bf59
0x000000000041d553 : jmp 0x41d5b8
0x0000000000420f06 : jmp 0x4211e8
0x0000000000421b9d : jmp 0x421c18
0x000000000041c0ca : jmp 0x4f4d83c6
0x0000000000417695 : jmp qword ptr [rax]
0x0000000000425333 : jmp qword ptr [rbx]
0x0000000000409492 : jmp qword ptr [rcx]
0x0000000000404b4e : jmp qword ptr [rdi]
0x000000000041c35a : jmp qword ptr [rdx]
0x00000000004013f7 : jmp rax
0x0000000000413c98 : jmp rbx
0x00000000004146ca : jmp rcx
0x0000000000413cf2 : jmp rdi
0x0000000000401437 : jmp rdx
0x00000000004255bb : jmp rsi
0x0000000000404811 : jmp rsp
0x0000000000401420 : jne 0x401427 ; pop rbp ; ret
0x000000000040d5be : jo 0x40d5ca ; ret
0x000000000040f22e : jo 0x40f23a ; ret
0x000000000041277d : jo 0x412789 ; ret
0x0000000000419a64 : jo 0x419ac5 ; ret
0x0000000000405f05 : lahf ; ret 0x8445
0x000000000041416e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041526e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000407b56 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409eb5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000419d59 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406076 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409eb4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406075 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000405104 : ljmp ptr [rcx] ; ret 0x8b48
0x0000000000412ace : ljmp ptr [rdi] ; ret 0x23da
0x0000000000415ad5 : loope 0x415aa3 ; jmp 0x417d43
0x0000000000409eb3 : loopne 0x409f06 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041945d : loopne 0x4194c3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a844 : loopne 0x41a897 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041cc13 : loopne 0x41cc1c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041d59e : loopne 0x41d5ee ; add esp, 0x60 ; pop rbp ; ret
0x000000000041d59d : loopne 0x41d5ef ; add esp, 0x60 ; pop rbp ; ret
0x0000000000421790 : loopne 0x421797 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422122 : loopne 0x422129 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423fcc : loopne 0x42401b ; mov esp, ebp ; pop rbp ; ret
0x0000000000423fcb : loopne 0x42401c ; mov esp, ebp ; pop rbp ; ret
0x000000000042421c : loopne 0x42426b ; mov esp, ebp ; pop rbp ; ret
0x000000000042421b : loopne 0x42426c ; mov esp, ebp ; pop rbp ; ret
0x000000000041369d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000413777 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411725 : mov ah, 0x75 ; ret
0x000000000041a233 : mov al, -0x47 ; ret
0x00000000004206cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041864d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042283d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042250a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042276d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b0c5 : mov bl, 0x75 ; ret
0x0000000000401453 : mov byte ptr [rip + 0x224dee], 1 ; ret
0x0000000000412f1f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004234d4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000422326 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422510 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000423f8a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000423201 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000409639 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040920f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421b9a : mov dword ptr [rbp - 0x14], eax ; jmp 0x421c1b
0x000000000041b4e8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x41bf5a
0x0000000000401aa3 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c5b1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409916 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004094bd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404ea8 : mov eax, 0xc7088948 ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000406073 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000408d39 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d41b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d5ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040815e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000421a15 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040963c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041d59c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000423fca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004094bf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000408fff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040721b : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004196ad : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004094be : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000415ed8 : mov ebp, 0xe19c53ba ; ret
0x000000000040147b : mov ebp, esp ; call rax
0x00000000004013e1 : mov ebp, esp ; ja 0x4013ec ; pop rbp ; ret
0x000000000040920c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401475 : mov edi, 0x625e20 ; mov rbp, rsp ; call rax
0x00000000004013f2 : mov edi, 0x626220 ; jmp rax
0x0000000000401432 : mov edi, 0x626220 ; jmp rdx
0x0000000000412777 : mov edi, 0xb8000055 ; wait ; jo 0x41278f ; ret
0x0000000000424287 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000424286 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000420e7e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000412f3b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000413db2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000420e67 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401430 : mov esi, eax ; mov edi, 0x626220 ; jmp rdx
0x0000000000401aa7 : mov esp, ebp ; pop rbp ; ret
0x0000000000409915 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408d38 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d41a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d5ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040815d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041d59b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004196ac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040147a : mov rbp, rsp ; call rax
0x00000000004013e0 : mov rbp, rsp ; ja 0x4013ed ; pop rbp ; ret
0x000000000040142f : mov rsi, rax ; mov edi, 0x626220 ; jmp rdx
0x0000000000401aa6 : mov rsp, rbp ; pop rbp ; ret
0x0000000000401aa4 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x000000000041d1b1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401aa5 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000419f19 : movabs al, byte ptr [0x7b358b4cf069894d] ; ret
0x000000000040ea18 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000411c65 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004234d3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000422325 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042250f : movzx eax, al ; pop rbp ; ret
0x0000000000420c78 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004256a0 : nop ; jb 0x4256a5 ; call rdx
0x000000000040af05 : nop ; ret
0x0000000000419312 : nop ; ret 0x148
0x0000000000419326 : nop ; ret 0x2948
0x00000000004242a8 : nop dword ptr [rax + rax] ; ret
0x000000000041369a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000413774 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404eab : or bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000409210 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041aac8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000406072 : or byte ptr [rbx + 0x658d4800], 0xf8 ; pop rbx ; pop rbp ; ret
0x0000000000414786 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000409914 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004094bb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041507b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042250c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401455 : out dx, al ; and r8b, byte ptr [r8] ; add ebx, esi ; ret
0x000000000042283f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a232 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000420e69 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000416165 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040adb6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004161b0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041c351 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000420e6c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d1ac : pop ax ; jb 0x41d1e1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000417019 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042429c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041945f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041701b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042429e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041701d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004242a0 : pop r14 ; pop r15 ; ret
0x0000000000409eb9 : pop r14 ; pop rbp ; ret
0x000000000041701f : pop r15 ; pop rbp ; ret
0x00000000004242a2 : pop r15 ; ret
0x000000000041d1ad : pop rax ; jb 0x41d1e0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401452 : pop rbp ; mov byte ptr [rip + 0x224dee], 1 ; ret
0x00000000004013f1 : pop rbp ; mov edi, 0x626220 ; jmp rax
0x000000000040142e : pop rbp ; mov rsi, rax ; mov edi, 0x626220 ; jmp rdx
0x000000000042429b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041701c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042429f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000412f22 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040f1f5 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000412f3e : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004013e5 : pop rbp ; ret
0x0000000000424ca8 : pop rbx ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000041945e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418155 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409eb8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406079 : pop rbx ; pop rbp ; ret
0x000000000041aad0 : pop rbx ; ret
0x0000000000412f23 : pop rcx ; ret 0x1b2
0x000000000040d5f6 : pop rcx ; ret 0x8589
0x0000000000412f3f : pop rcx ; ret 0x8b48
0x0000000000415270 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000417020 : pop rdi ; pop rbp ; ret
0x00000000004242a3 : pop rdi ; ret
0x000000000041701e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004242a1 : pop rsi ; pop r15 ; ret
0x0000000000409eba : pop rsi ; pop rbp ; ret
0x000000000041701a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042429d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419460 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d5f5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000423355 : popfq ; ret 0xd284
0x0000000000412f20 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041510a : push -0x75425eeb ; push rbp ; ret
0x0000000000411c68 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000425080 : push rax ; adc edi, esi ; call rcx
0x00000000004256c0 : push rax ; jae 0x4256c5 ; call qword ptr [rdx]
0x00000000004016cb : push rax ; pop rbp ; ret
0x0000000000402bab : push rbp ; and al, 0xfffffffffffffff8 ; ret 0x8589
0x0000000000401474 : push rbp ; mov edi, 0x625e20 ; mov rbp, rsp ; call rax
0x000000000041510f : push rbp ; ret
0x00000000004150a6 : push rbp ; ret 0xd284
0x000000000041369f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000413779 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000420e6b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000402bff : push rsi ; and al, 0xfffffffffffffff8 ; ret 0x8589
0x0000000000404ab6 : push rsi ; and al, 0xfffffffffffffff8 ; ret 0x85b9
0x00000000004206d5 : pushfq ; ret 0xd284
0x0000000000424e24 : rcr byte ptr [rbx - 1] ; call qword ptr [rax]
0x0000000000401061 : ret
0x0000000000400668 : ret 0
0x0000000000419313 : ret 0x148
0x0000000000416274 : ret 0x1a
0x000000000040b4ed : ret 0x1add
0x0000000000412f25 : ret 0x1b2
0x0000000000401222 : ret 0x224e
0x000000000040be3a : ret 0x23da
0x0000000000418b38 : ret 0x279e
0x0000000000414789 : ret 0x2948
0x0000000000415274 : ret 0x2a
0x00000000004136a2 : ret 0x2d50
0x00000000004209ce : ret 0x3040
0x0000000000414174 : ret 0x3b
0x00000000004111d5 : ret 0x3e
0x0000000000414611 : ret 0x4802
0x0000000000420e6e : ret 0x4815
0x0000000000416166 : ret 0x4861
0x0000000000401967 : ret 0x48f0
0x000000000040ea21 : ret 0x4b
0x000000000041a037 : ret 0x4cc0
0x0000000000417078 : ret 0x4cf0
0x000000000041c0cc : ret 0x4f0b
0x000000000040946b : ret 0x5589
0x000000000041392a : ret 0x5966
0x000000000041ad27 : ret 0x5bc6
0x0000000000423f8f : ret 0x61
0x0000000000403cd7 : ret 0x6213
0x0000000000402537 : ret 0x665e
0x000000000040ab86 : ret 0x6a8a
0x000000000040a83e : ret 0x77a8
0x000000000040b9a1 : ret 0x7a8a
0x000000000041261b : ret 0x7b7f
0x0000000000418fca : ret 0x8041
0x00000000004058f3 : ret 0x8141
0x0000000000405c26 : ret 0x8148
0x0000000000414534 : ret 0x822d
0x0000000000405f06 : ret 0x8445
0x0000000000402bae : ret 0x8589
0x0000000000405966 : ret 0x858b
0x0000000000404ab9 : ret 0x85b9
0x0000000000403c4d : ret 0x8925
0x000000000040b5b3 : ret 0x8940
0x000000000040581b : ret 0x8948
0x000000000041f48f : ret 0x894a
0x000000000040adb7 : ret 0x8961
0x0000000000402715 : ret 0x89ad
0x0000000000420a88 : ret 0x8a44
0x0000000000420985 : ret 0x8a4a
0x0000000000404add : ret 0x8b48
0x00000000004210c8 : ret 0xa2e8
0x000000000041377c : ret 0xa30b
0x0000000000421adf : ret 0xac60
0x000000000041b39e : ret 0xb0
0x0000000000415080 : ret 0xb740
0x000000000041d1a7 : ret 0xb848
0x00000000004054d5 : ret 0xb925
0x00000000004132b0 : ret 0xb940
0x0000000000420912 : ret 0xb94a
0x000000000040531d : ret 0xb9ad
0x00000000004156fc : ret 0xbf48
0x0000000000401415 : ret 0xc148
0x00000000004062fc : ret 0xc281
0x00000000004241d2 : ret 0xc493
0x00000000004224c9 : ret 0xca21
0x0000000000423f95 : ret 0xccb2
0x000000000040591f : ret 0xd284
0x000000000040682c : ret 0xd592
0x000000000041f0d5 : ret 0xd618
0x00000000004047e4 : ret 0xe280
0x0000000000414f52 : ret 0xe940
0x00000000004161b1 : ret 0xe961
0x000000000040bfdd : ret 0xea51
0x0000000000423f87 : ret 0xea81
0x0000000000417d6c : ret 0xee8
0x00000000004094a5 : ret 0xf281
0x0000000000413db7 : ret 0xf41
0x0000000000415d05 : ret 0xf7f3
0x000000000041448e : ret 0xfc75
0x0000000000415cff : ret 0xffa5
0x0000000000414488 : ret 0xffc4
0x00000000004136a8 : ret 0xffd5
0x0000000000413782 : ret 0xffd8
0x000000000041453a : ret 0xffd9
0x0000000000413924 : ret 0xffe0
0x0000000000412615 : ret 0xfffa
0x0000000000405c29 : ret 1
0x00000000004060fa : ret 2
0x0000000000405d7d : ret 8
0x0000000000420e4d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041d96c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004089fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424d58 : rol byte ptr [rip + 0x30e00000], -1 ; jmp rax
0x0000000000420e4c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000041d1a4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040141c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40142b ; pop rbp ; ret
0x0000000000422327 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004094ba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000420c7e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000419ef0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042246c : sahf ; ret 0xd284
0x000000000040141e : sar eax, 1 ; jne 0x401429 ; pop rbp ; ret
0x0000000000415271 : sar ebp, -0x17 ; ret 0x2a
0x000000000040141d : sar rax, 1 ; jne 0x40142a ; pop rbp ; ret
0x00000000004258d8 : sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; ret
0x0000000000424fa4 : sbb al, 0 ; add byte ptr [rax], al ; clc ; ret
0x000000000041a230 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000404b46 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdi]
0x0000000000425578 : sbb byte ptr [rsi - 1], cl ; jmp qword ptr [rbx]
0x0000000000415171 : sbb cl, ch ; ret
0x000000000041c9f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419280 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000414172 : shr cl, cl ; ret 0x3b
0x0000000000411fad : stc ; ret 0x77a8
0x0000000000418b37 : std ; ret 0x279e
0x000000000040749e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421be6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407388 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004136a5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041369b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000413775 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000402be4 : sub dword ptr [rcx], edi ; ret
0x0000000000414535 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041d1af : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004242dd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004242dc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402a13 : sysenter
0x00000000004136a0 : test al, -0x7f ; ret 0x2d50
0x000000000041377a : test al, -0x7f ; ret 0xa30b
0x0000000000420723 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041990e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000415ed6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000041c248 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004242aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a51c : test byte ptr [rcx], ch ; ret 0
0x000000000040a516 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004060f4 : test dword ptr [rax - 0x16000008], edx ; ret 2
0x000000000041c356 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000405c63 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000404c73 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000404b4a : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdi]
0x00000000004047ec : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x000000000040480d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000041952a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000414f4b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004161aa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000411c6a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041615f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041416f : wait ; jge 0x414151 ; shr cl, cl ; ret 0x3b
0x000000000040f22d : wait ; jo 0x40f23b ; ret
0x000000000041277c : wait ; jo 0x41278a ; ret
0x0000000000420e68 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040591e : xchg eax, ebp ; ret 0xd284
0x000000000040adb5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004116b5 : xchg eax, ebx ; ret
0x00000000004118e5 : xchg eax, ecx ; ret
0x0000000000406823 : xchg eax, edi ; add al, 0 ; add byte ptr [rbx + 0x182ddc45], cl ; ret 0xd592
0x00000000004203e9 : xchg eax, edi ; ret 0xd284
0x000000000040b135 : xchg eax, edx ; ret
0x0000000000418fdf : xchg eax, edx ; ret 0x8445
0x000000000041c24e : xchg eax, edx ; ret 0xd284
0x000000000041b4ea : xchg eax, esp ; jmp 0x41bf58
0x000000000041b427 : xchg eax, esp ; jmp 0x41bf5a
0x0000000000416164 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000411a35 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004161af : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000418fc9 : xchg eax, esp ; ret 0x8041
0x000000000041507e : xchg eax, esp ; ret 0xb740
0x000000000041a829 : xchg eax, esp ; ret 0xd284
0x00000000004047e3 : xchg eax, esp ; ret 0xe280
0x000000000041b4e9 : xchg eax, r12d ; jmp 0x41bf59
0x0000000000415079 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000424d5d : xor bh, bh ; jmp rax
0x0000000000409917 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000409918 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004254b0 : xor byte ptr [rcx - 1], cl ; call qword ptr [rbx]
