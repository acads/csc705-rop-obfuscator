0x000000000045bb63 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000437a9b : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041286f : adc ch, cl ; ret
0x000000000041eb9e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004508dd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000041e511 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004673a5 : adc dword ptr [rax], eax ; add al, cl ; ret
0x000000000042a77b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045bb31 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041f69b : adc eax, 0x558abda1 ; ret
0x0000000000445dd7 : adc eax, 0x85c70000 ; call 0x18445de7
0x000000000043c7e1 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x0000000000459c83 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000422c79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004666f3 : add ah, bh ; add al, 0 ; add byte ptr [rax - 0x2c], bl ; sti ; jmp qword ptr [rbx]
0x0000000000467ad3 : add ah, bl ; sbb byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000466ae3 : add ah, ch ; or byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; call qword ptr [rdx]
0x0000000000466ac3 : add ah, cl ; or byte ptr [rax], al ; add byte ptr [rax + 0x3f], ch ; cld ; call rdx
0x000000000042fde6 : add al, -8 ; ret 0x898d
0x0000000000432c41 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004666f5 : add al, 0 ; add byte ptr [rax - 0x2c], bl ; sti ; jmp qword ptr [rbx]
0x0000000000436ecf : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x0000000000452f90 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004476f7 : add al, 0 ; add cl, ch ; ret 1
0x0000000000424e0d : add al, 0x25 ; ret 0x4654
0x000000000045ec6a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000466425 : add al, byte ptr [rax] ; add byte ptr [rax - 0x54], ch ; cli ; call qword ptr [rcx]
0x0000000000434012 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000044992d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000405482 : add al, byte ptr [rax] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405788 : add al, byte ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000434011 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000423e38 : add al, ch ; ret 0xfdd9
0x0000000000404af8 : add al, ch ; ret 0xffd0
0x00000000004673a7 : add al, cl ; ret
0x00000000004548e8 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x0000000000467bc0 : add bh, -1 ; call qword ptr [rax]
0x0000000000436426 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000044bdeb : add bh, al ; in al, 0x3e ; ret
0x000000000045b648 : add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000460ec5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042f681 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042f640 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004324c2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000043303f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000040e679 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040e479 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e4c0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x0000000000432249 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000040e688 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000042a454 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000424efc : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000045714f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041f4d9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000459c85 : add bh, al ; xchg eax, r12d ; int 6
0x00000000004642ef : add bl, dh ; ret
0x00000000004363e7 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044ba63 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000463fc2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000464224 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004023c4 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043ca99 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000466ac7 : add byte ptr [rax + 0x3f], ch ; cld ; call rdx
0x0000000000466213 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test al, -0x4b ; stc ; call rax
0x00000000004666f7 : add byte ptr [rax - 0x2c], bl ; sti ; jmp qword ptr [rbx]
0x0000000000466567 : add byte ptr [rax - 0x30], bl ; cli ; call qword ptr [rdx]
0x0000000000445344 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000466427 : add byte ptr [rax - 0x54], ch ; cli ; call qword ptr [rcx]
0x0000000000424e0a : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4654
0x00000000004256c8 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000040b6ab : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4654
0x000000000045b82b : add byte ptr [rax - 0x75], cl ; call 0x49084183
0x0000000000423c3b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004023c7 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404973 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000044bde8 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x0000000000467ad1 : add byte ptr [rax], al ; add ah, bl ; sbb byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000423e36 : add byte ptr [rax], al ; add al, ch ; ret 0xfdd9
0x0000000000467bbe : add byte ptr [rax], al ; add bh, -1 ; call qword ptr [rax]
0x0000000000436424 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000045b646 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000460ec3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042f67f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004324c0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000043303d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000040e677 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x0000000000432f19 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x0000000000432ed5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000042a452 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000424efa : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x00000000004642ed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043ca97 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000445342 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000424e08 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4654
0x000000000040b6a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4654
0x000000000045b829 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49084185
0x00000000004023c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404971 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004642eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000435828 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401b08
0x0000000000464f2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404b8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043582a : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401b06
0x0000000000455cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004642ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000461a22 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000045b1cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045b369 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000410fee : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000044ba96 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x00000000004125b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004226e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000435f83 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000452302 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000045242e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000405852 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4b2da445], cl ; ret 0x8024
0x00000000004358da : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004368f3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x000000000044b5b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000044ba64 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000436b64 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000428c13 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004341d4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000433954 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x000000000044e108 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000044e0c6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000045344e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000045f94c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000433cc0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x000000000044a799 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x000000000045bd08 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000042b579 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004320e5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004046f4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000042e45a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043cd26 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000427ca9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000463fc3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000464225 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042a3c0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000463391 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043fd1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042e297 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000425545 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404b8c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000432b25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042a34a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404947 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f94b : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000422c7b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422300 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042a77d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004338b9 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000437e9f : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004660e2 : add byte ptr [rax], al ; call 0x214660ae
0x000000000043582c : add byte ptr [rax], al ; call 0x401b04
0x00000000004666f2 : add byte ptr [rax], al ; cld ; add al, 0 ; add byte ptr [rax - 0x2c], bl ; sti ; jmp qword ptr [rbx]
0x0000000000466856 : add byte ptr [rax], al ; cmp cl, bl ; sti ; call rdx
0x00000000004660fa : add byte ptr [rax], al ; cwde ; ret
0x0000000000465b6a : add byte ptr [rax], al ; fmul st(0) ; stc ; call qword ptr [rax]
0x0000000000466ae2 : add byte ptr [rax], al ; in al, dx ; or byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; call qword ptr [rdx]
0x0000000000466562 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; cli ; call qword ptr [rdx]
0x00000000004018c9 : add byte ptr [rax], al ; jmp 0x4017c9
0x000000000042f947 : add byte ptr [rax], al ; jmp 0x42f956
0x000000000044bab0 : add byte ptr [rax], al ; jmp 0x44be22
0x00000000004619b3 : add byte ptr [rax], al ; jmp 0x4619c2
0x0000000000461b15 : add byte ptr [rax], al ; jmp 0x461b24
0x0000000000461d83 : add byte ptr [rax], al ; jmp 0x461d92
0x00000000004673a2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; add al, cl ; ret
0x00000000004671a2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sldt word ptr [rax] ; sub byte ptr [rdi - 2], bh ; jmp qword ptr [rcx]
0x000000000046693e : add byte ptr [rax], al ; loopne 0x466926 ; sti ; jmp qword ptr [rbx]
0x0000000000465c5a : add byte ptr [rax], al ; mov bh, al ; sti ; jmp rax
0x0000000000466d46 : add byte ptr [rax], al ; mov bl, cl ; cld ; jmp qword ptr [rdi]
0x000000000042f9ef : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000464008 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e895 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045393f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004023c6 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467002 : add byte ptr [rax], al ; or al, 0xe ; add byte ptr [rax], al ; sbb byte ptr [rsi - 2], cl ; jmp rsp
0x0000000000465d22 : add byte ptr [rax], al ; or bh, ch ; sti ; call qword ptr [rax]
0x0000000000466566 : add byte ptr [rax], al ; pop rax ; sar dl, 1 ; call qword ptr [rdx]
0x00000000004026d5 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004226e3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043488a : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405006 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000466752 : add byte ptr [rax], al ; pop rsp ; add eax, 0xd5a80000 ; sti ; call rdi
0x00000000004642ee : add byte ptr [rax], al ; ret
0x0000000000466212 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test al, -0x4b ; stc ; call rax
0x0000000000467006 : add byte ptr [rax], al ; sbb byte ptr [rsi - 2], cl ; jmp rsp
0x0000000000465b9a : add byte ptr [rax], al ; sub al, bh ; stc ; call rax
0x0000000000466ae6 : add byte ptr [rax], al ; sub byte ptr [rax - 4], al ; call qword ptr [rdx]
0x00000000004671a6 : add byte ptr [rax], al ; sub byte ptr [rdi - 2], bh ; jmp qword ptr [rcx]
0x0000000000465d12 : add byte ptr [rax], al ; test al, -0x13 ; sti ; call rax
0x0000000000466756 : add byte ptr [rax], al ; test al, -0x2b ; sti ; call rdi
0x0000000000466216 : add byte ptr [rax], al ; test al, -0x4b ; stc ; call rax
0x0000000000466857 : add byte ptr [rax], bh ; fsincos ; call rdx
0x0000000000465b63 : add byte ptr [rax], bh ; ret 0xfff9
0x00000000004660f3 : add byte ptr [rax], bl ; ret
0x0000000000465b9b : add byte ptr [rax], ch ; clc ; stc ; call rax
0x0000000000466ae7 : add byte ptr [rax], ch ; cld ; call qword ptr [rdx]
0x00000000004671a7 : add byte ptr [rax], ch ; jg 0x4671ad ; jmp qword ptr [rcx]
0x0000000000465bf3 : add byte ptr [rax], ch ; ret
0x0000000000465d23 : add byte ptr [rax], cl ; out dx, eax ; sti ; call qword ptr [rax]
0x0000000000467ad7 : add byte ptr [rax], cl ; ret
0x0000000000461a24 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000436a08 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x0000000000436dbe : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x000000000045b1cd : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045b36b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000410ff0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000044b588 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x000000000044ba98 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x00000000004125b4 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004226e4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043488b : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000452304 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000452430 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x00000000004335df : add byte ptr [rbx + 0x462dc045], cl ; jns 0x433596 ; ret
0x0000000000436a21 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000436da5 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000405854 : add byte ptr [rbx + 0x4b2da445], cl ; ret 0x8024
0x0000000000405007 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004368f5 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x0000000000436ed1 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000044b5b4 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000044ba66 : add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000436b66 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000436c60 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x0000000000466563 : add byte ptr [rbx + rax], ch ; add byte ptr [rax - 0x30], bl ; cli ; call qword ptr [rdx]
0x00000000004064d7 : add byte ptr [rbx - 0x1bf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406539 : add byte ptr [rbx - 0x1c74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000428c15 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000428bca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004341d6 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000433956 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x000000000044e10a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000044e0c8 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000453450 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000458695 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000452f92 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004584d3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000045f94e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000434014 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000433cc2 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000436129 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000044a79b : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x000000000045bd0a : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004360e7 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000044a750 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000044e896 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000464009 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042b57b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000405cba : add byte ptr [rbx - 0xd25bbb], cl ; jns 0x405d27 ; ret
0x00000000004320e7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004046f6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000042e45c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043cd29 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000427cab : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045bb60 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x00000000004359d2 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004470d4 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x000000000042a4be : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401d48 : add byte ptr [rcx], al ; ret
0x0000000000463fc5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000464227 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000042a3c2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043d9fb : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000463393 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043fd21 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042e299 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000425547 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404b8e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000432b27 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042a34c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404949 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045f385 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464f27 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004487bd : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x000000000045120d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000466853 : add byte ptr [rsi + rax], bl ; add byte ptr [rax], bh ; fsincos ; call rdx
0x0000000000467003 : add byte ptr [rsi + rcx], cl ; add byte ptr [rax], al ; sbb byte ptr [rsi - 2], cl ; jmp rsp
0x0000000000401d47 : add byte ptr es:[rcx], al ; ret
0x00000000004341d3 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000444688 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x000000000041f60c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004059ae : add cl, ch ; ret
0x0000000000401f8f : add cl, ch ; ret 0
0x0000000000405daf : add cl, ch ; ret 1
0x000000000043fc59 : add cl, ch ; ret 2
0x000000000045b8e1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000044face : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x000000000042f63e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000040e686 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000045757e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000434889 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000450484 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000044e9bd : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045b58f : add dword ptr [rax], ecx ; ret 0x840
0x000000000043ff81 : add dword ptr [rax], esp ; ret 0xd108
0x000000000044bc94 : add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000044cdad : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000454d40 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433528 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000463512 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000045bca5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0a0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401d44 : add eax, 0x26662e ; add ebx, esi ; ret
0x0000000000405005 : add eax, 0x5d5b0000 ; ret
0x000000000040e676 : add eax, 0xc7000000 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x0000000000466755 : add eax, 0xd5a80000 ; sti ; call rdi
0x0000000000405fe0 : add eax, 0xffb80000 ; jns 0x40604b ; ret
0x000000000040e477 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e4be : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x0000000000466565 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; cli ; call qword ptr [rdx]
0x0000000000460df4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044a74e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000401f8d : add eax, dword ptr [rax] ; add cl, ch ; ret 0
0x0000000000437122 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401d0b : add eax, edx ; sar rax, 1 ; jne 0x401d1c ; pop rbp ; ret
0x0000000000401d49 : add ebx, esi ; ret
0x0000000000446fee : add ecx, eax ; mov rsi, rcx ; call 0x4332f7
0x00000000004573f9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040245b : add esp, 0x10 ; pop rbp ; ret
0x000000000042a4bc : add esp, 0x100 ; pop rbp ; ret
0x0000000000447bb4 : add esp, 0x120 ; pop rbp ; ret
0x0000000000449599 : add esp, 0x130 ; pop rbp ; ret
0x00000000004536f8 : add esp, 0x140 ; pop rbp ; ret
0x0000000000458153 : add esp, 0x160 ; pop rbp ; ret
0x0000000000435349 : add esp, 0x170 ; pop rbp ; ret
0x000000000044d16a : add esp, 0x18 ; pop rbp ; ret
0x0000000000456918 : add esp, 0x180 ; pop rbp ; ret
0x00000000004545ed : add esp, 0x190 ; pop rbp ; ret
0x000000000042a62c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000044b0d3 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000406481 : add esp, 0x1d0 ; pop rbp ; ret
0x00000000004121ae : add esp, 0x20 ; pop rbp ; ret
0x000000000045f383 : add esp, 0x200 ; pop rbp ; ret
0x000000000045004e : add esp, 0x230 ; pop rbp ; ret
0x000000000044b1c5 : add esp, 0x30 ; pop rbp ; ret
0x0000000000437a99 : add esp, 0x310 ; pop rbp ; ret
0x000000000043fde1 : add esp, 0x390 ; pop rbp ; ret
0x000000000042a780 : add esp, 0x40 ; pop rbp ; ret
0x000000000045ee69 : add esp, 0x440 ; pop rbp ; ret
0x00000000004107b9 : add esp, 0x4a0 ; pop rbp ; ret
0x0000000000411e32 : add esp, 0x50 ; pop rbp ; ret
0x0000000000405002 : add esp, 0x548 ; pop rbx ; pop rbp ; ret
0x0000000000432ebd : add esp, 0x590 ; pop rbp ; ret
0x000000000042f5a0 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042b6a0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405485 : add esp, 0x70 ; pop rbp ; ret
0x0000000000412984 : add esp, 0x78 ; pop rbp ; ret
0x00000000004026d1 : add esp, 0x80 ; pop rbp ; ret
0x00000000004510cf : add esp, 0x88 ; pop rbp ; ret
0x000000000042adfd : add esp, 0x90 ; pop rbp ; ret
0x000000000043d9f9 : add esp, 0x900 ; pop rbp ; ret
0x000000000044bddd : add esp, 0x98 ; pop rbp ; ret
0x0000000000424dd6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000422bdb : add esp, 0xb0 ; pop rbp ; ret
0x00000000004358d7 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000446c2b : add esp, 0xbb0 ; pop rbp ; ret
0x000000000040c5a0 : add esp, 0xbc0 ; pop rbp ; ret
0x000000000042bc73 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000412f8a : add esp, 0xd0 ; pop rbp ; ret
0x00000000004526f8 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044f06f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000413593 : add esp, 8 ; pop rbp ; ret
0x00000000004017ae : add esp, 8 ; ret
0x0000000000405004 : add rax, 0x5d5b0000 ; ret
0x0000000000401d0a : add rax, rdx ; sar rax, 1 ; jne 0x401d1d ; pop rbp ; ret
0x0000000000446fed : add rcx, rax ; mov rsi, rcx ; call 0x4332f8
0x000000000040245a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042a4bb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000447bb3 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000449598 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004536f7 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000458152 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000435348 : add rsp, 0x170 ; pop rbp ; ret
0x000000000044d169 : add rsp, 0x18 ; pop rbp ; ret
0x0000000000456917 : add rsp, 0x180 ; pop rbp ; ret
0x00000000004545ec : add rsp, 0x190 ; pop rbp ; ret
0x000000000042a62b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000044b0d2 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000406480 : add rsp, 0x1d0 ; pop rbp ; ret
0x00000000004121ad : add rsp, 0x20 ; pop rbp ; ret
0x000000000045f382 : add rsp, 0x200 ; pop rbp ; ret
0x000000000045004d : add rsp, 0x230 ; pop rbp ; ret
0x000000000044b1c4 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000437a98 : add rsp, 0x310 ; pop rbp ; ret
0x000000000043fde0 : add rsp, 0x390 ; pop rbp ; ret
0x000000000042a77f : add rsp, 0x40 ; pop rbp ; ret
0x000000000045ee68 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004107b8 : add rsp, 0x4a0 ; pop rbp ; ret
0x0000000000411e31 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000405001 : add rsp, 0x548 ; pop rbx ; pop rbp ; ret
0x0000000000432ebc : add rsp, 0x590 ; pop rbp ; ret
0x000000000042f59f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042b69f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405484 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000412983 : add rsp, 0x78 ; pop rbp ; ret
0x00000000004026d0 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004510ce : add rsp, 0x88 ; pop rbp ; ret
0x000000000042adfc : add rsp, 0x90 ; pop rbp ; ret
0x000000000043d9f8 : add rsp, 0x900 ; pop rbp ; ret
0x000000000044bddc : add rsp, 0x98 ; pop rbp ; ret
0x0000000000424dd5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000422bda : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004358d6 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000446c2a : add rsp, 0xbb0 ; pop rbp ; ret
0x000000000040c59f : add rsp, 0xbc0 ; pop rbp ; ret
0x000000000042bc72 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000412f89 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004526f7 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044f06e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000413592 : add rsp, 8 ; pop rbp ; ret
0x00000000004017ad : add rsp, 8 ; ret
0x000000000040a5a0 : and ah, byte ptr [rip - 0x5480000] ; ret
0x0000000000437e9d : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000463fcd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000045bca4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c09f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045b8df : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000455cba : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044ab26 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044ad16 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000447bb6 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b2ab : and byte ptr [rsi + 0x58], ah ; jb 0x42b2e2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044facc : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000045b8de : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000404b88 : and dword ptr [rsi], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e841 : and eax, 0x75b4b9d3 ; ret
0x000000000042f9ed : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000436342 : and eax, 0xdab0b9fa ; ret
0x000000000040a5a1 : and eax, 0xfab80000 ; ret
0x0000000000462108 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000461c1f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004621ca : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000044facb : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000447305 : call 0x1244730b
0x0000000000445ddc : call 0x18445de2
0x00000000004660e4 : call 0x214660ac
0x0000000000447377 : call 0x2244737d
0x00000000004471ae : call 0x284471b4
0x00000000004375c5 : call 0x4017f8
0x0000000000405697 : call 0x4018b2
0x00000000004455f0 : call 0x4018f2
0x0000000000404eea : call 0x401949
0x00000000004457ca : call 0x401a02
0x000000000043582e : call 0x401b02
0x000000000040a731 : call 0x4248f6
0x000000000042b6a5 : call 0x42b769
0x0000000000427c97 : call 0x42c0c7
0x0000000000446ff3 : call 0x4332f2
0x000000000043d413 : call 0x449642
0x000000000043d412 : call 0x449643
0x000000000044bde7 : call 0x451df5
0x000000000045b82f : call 0x4908417f
0x000000000045b82e : call 0x49084180
0x000000000045b87d : call 0x490841cd
0x000000000045b87c : call 0x490841ce
0x000000000044ff82 : call 0xffffffff8a25551b
0x000000000046121d : call 0xffffffffaca6d451
0x000000000046121c : call 0xffffffffaca6d452
0x00000000004470fe : call 0xffffffffe3447104
0x0000000000447386 : call 0xffffffffe544738c
0x00000000004222f9 : call 0xffffffffe904ac49
0x00000000004222f8 : call 0xffffffffe904ac4a
0x00000000004642c9 : call qword ptr [r12 + rbx*8]
0x000000000042f687 : call qword ptr [rax]
0x000000000040c977 : call qword ptr [rbx]
0x000000000040503c : call qword ptr [rcx]
0x0000000000421784 : call qword ptr [rdi]
0x000000000041d76b : call qword ptr [rdx]
0x0000000000433045 : call qword ptr [rsi]
0x00000000004642ca : call qword ptr [rsp + rbx*8]
0x0000000000401d6d : call rax
0x0000000000424f02 : call rbx
0x000000000041f9eb : call rcx
0x0000000000410120 : call rdi
0x000000000040a5df : call rdx
0x000000000040c7d3 : call rsi
0x000000000040c9ef : call rsp
0x0000000000423e35 : cdq ; add byte ptr [rax], al ; add al, ch ; ret 0xfdd9
0x00000000004545eb : clc ; add rsp, 0x190 ; pop rbp ; ret
0x000000000045ee67 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042aa07 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000451b9b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000044dc79 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000042bc71 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401d0f : clc ; jne 0x401d18 ; pop rbp ; ret
0x0000000000462109 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000461ed3 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000044f0e7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042fc4e : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b0ae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004051d7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004501cb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004501eb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000461921 : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000423c3f : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051db : clc ; pop rbp ; ret
0x00000000004256cc : clc ; pop rbx ; pop rbp ; ret
0x0000000000414dcd : clc ; ret 0x77a8
0x000000000042fde7 : clc ; ret 0x898d
0x0000000000431c97 : clc ; ret 0xb28d
0x0000000000446ff4 : clc ; ret 0xfffe
0x0000000000465b9d : clc ; stc ; call rax
0x0000000000461c20 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004666f4 : cld ; add al, 0 ; add byte ptr [rax - 0x2c], bl ; sti ; jmp qword ptr [rbx]
0x000000000044d168 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x000000000046185e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044f06d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000466aea : cld ; call qword ptr [rdx]
0x0000000000466aca : cld ; call rdx
0x000000000041101f : cld ; jmp 0x41108c
0x000000000041101e : cld ; jmp 0x41108d
0x0000000000466d4a : cld ; jmp qword ptr [rdi]
0x00000000004669e2 : cld ; jmp rsi
0x0000000000465bad : cld ; stc ; call qword ptr [rax]
0x000000000045869a : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000458deb : cld ; stc ; in al, dx ; ret 0xff3
0x000000000043cd25 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046642a : cli ; call qword ptr [rcx]
0x000000000046656a : cli ; call qword ptr [rdx]
0x0000000000465bee : cli ; lcall ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], ch ; ret
0x000000000043612e : cli ; mov cl, 0x37 ; ret 0x4589
0x00000000004363ba : cli ; mov cl, 0x37 ; ret 0x94b9
0x000000000043642a : cli ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004060cc : cli ; mov ebx, 0x8945d276 ; ret 0x8141
0x000000000042b2b0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040a131 : cli ; ret
0x0000000000463fcc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043bc46 : cmc ; jmp 0x43de02
0x000000000042a1cb : cmc ; ret 0x4f0b
0x0000000000404ef1 : cmp al, 0x25 ; ret 0x4654
0x000000000043d387 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000425543 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000425605 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439ec8 : cmp byte ptr [rbx], dl ; ret
0x0000000000466858 : cmp cl, bl ; sti ; call rdx
0x000000000042a361 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000042c957 : cmp dl, al ; ret
0x0000000000453722 : cmp dword ptr [rax - 0x75], ecx ; jne 0x453704 ; call rax
0x00000000004381f6 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a8d8 : cmp dword ptr [rbx], edx ; ret
0x000000000042b812 : cmp eax, 0x8945c621 ; ret 0x8141
0x000000000042ea29 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000401ccd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ce0 ; pop rbp ; ret
0x000000000042bfbf : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004377f5 : cmp ecx, ebp ; ret 3
0x000000000041f697 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000406e55 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000433596 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000042f5a2 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000436340 : cwde ; and eax, 0xdab0b9fa ; ret
0x000000000043d40f : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x449646
0x000000000043d40e : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x449647
0x00000000004660fc : cwde ; ret
0x0000000000410dd5 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000045b047 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000406271 : dec dword ptr [rax - 0x1a06b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406438 : dec dword ptr [rax - 0x1b86b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000404eee : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4654
0x000000000041eb9b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041e50e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004457c5 : dec dword ptr [rax - 0x75] ; js 0x4457e9 ; call 0x401a07
0x000000000041ed13 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042b3dd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045e9c6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000406277 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004064dd : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000044474f : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x00000000004455dc : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x000000000042821f : dec dword ptr [rbx - 0x58b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000043d671 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000444dd3 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000042bbc5 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000044672e : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000042a1c6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000042bbcb : dec dword ptr [rdi] ; ret 0x4589
0x0000000000428225 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000436d1d : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x00000000004514f1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045636b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000043711e : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004059a8 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffff6], bh ; ret
0x000000000044c340 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000450c8a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000044b8e4 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000414aaa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000043406d : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000405da9 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffb], cl ; ret 1
0x000000000044a51f : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x0000000000450480 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004476f3 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000459765 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044f50f : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000405fb5 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000460bee : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000040aeae : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000403664 : div byte ptr [rax] ; ret
0x000000000044d1c0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000044d1bf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000451900 : enter -0x74b8, 0x31 ; call rax
0x00000000004332de : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000045e449 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000461a45 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000432c40 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000412da9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044a0f9 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044a0b7 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044a0d8 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000460bd0 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000461cfb : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000438a1c : fcomp st(3) ; ret
0x000000000044548a : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045636e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004359a1 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x0000000000460baf : fild word ptr [rcx - 0x77] ; ret
0x000000000043d3df : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000043d3de : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x00000000004621cb : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000042f80b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004353e5 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000462588 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045524e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045f637 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000045524f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004518fc : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000045263d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000450f29 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000045f638 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004642cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000465b6c : fmul st(0) ; stc ; call qword ptr [rax]
0x0000000000466859 : fsincos ; call rdx
0x000000000043b294 : fstpnce st(3), st(0) ; ret
0x000000000040af17 : fxch st(0), st(7) ; jrcxz 0x40aed9 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000040af16 : fxch st(0), st(7) ; jrcxz 0x40aeda ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000402459 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000437a97 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x000000000044a229 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000045fb9c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000413591 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401ce0 : hlt ; pop rbp ; mov edi, 0x668308 ; jmp rax
0x0000000000442148 : hlt ; ret
0x000000000042b3db : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043d675 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x000000000042bb10 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000044bc92 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x0000000000436429 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000044ab24 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044ad14 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e21 : in al, 0x2d ; call rax
0x000000000044bdee : in al, 0x3e ; ret
0x000000000043fddf : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x000000000044e031 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000045c2a8 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045b511 : in al, dx ; jmp 0x45b6dd
0x000000000045b510 : in al, dx ; jmp 0x45b6de
0x00000000004612dc : in al, dx ; jmp 0x461359
0x00000000004612db : in al, dx ; jmp 0x46135a
0x0000000000461bb5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000466ae4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; call qword ptr [rdx]
0x00000000004023ca : in al, dx ; pop rbp ; ret
0x00000000004584da : in al, dx ; ret 0x8589
0x000000000045b4f4 : in al, dx ; ret 0xe8ff
0x0000000000458ded : in al, dx ; ret 0xff3
0x0000000000405363 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000465d15 : in eax, dx ; sti ; call rax
0x000000000040bdec : inc dword ptr [rax + 0x558801e2] ; ret
0x00000000004320e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000444d59 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041002b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043463d : inc dword ptr [rbp + 0x21] ; ret
0x00000000004040c5 : inc dword ptr [rcx + 0xf] ; ret
0x00000000004359c8 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000043fc55 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x000000000042f6d9 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000466564 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; cli ; call qword ptr [rdx]
0x000000000043ab5c : insb byte ptr [rdi], dx ; ret
0x000000000042c416 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000042c46a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x00000000004247a7 : int 0x5b
0x000000000043475b : int 0x73
0x0000000000439721 : int 0x80
0x0000000000459504 : int 6
0x000000000044512c : int 7
0x0000000000401cd3 : ja 0x401cda ; pop rbp ; ret
0x000000000045b0b1 : ja 0x45b0fe ; pop rbp ; ret
0x0000000000437fcc : jae 0x437fa2 ; ret 0x89e0
0x0000000000445828 : jae 0x44585e ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000445834 : jae 0x44586b ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000042b2ae : jb 0x42b2df ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000405786 : jbe 0x4057ef ; add al, byte ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041286d : jbe 0x412846 ; adc ch, cl ; ret
0x0000000000401cdf : je 0x401cdd ; pop rbp ; mov edi, 0x668308 ; jmp rax
0x000000000043800e : je 0x437fe4 ; ret 0x89e0
0x00000000004380d9 : je 0x4380af ; ret 0xb9e0
0x0000000000446fec : je 0x44703f ; add ecx, eax ; mov rsi, rcx ; call 0x4332f9
0x0000000000444781 : jg 0x444710 ; push rbp ; ret
0x00000000004671a9 : jg 0x4671ab ; jmp qword ptr [rcx]
0x00000000004051d6 : jge 0x4051d7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405366 : jge 0x405363 ; pop rbp ; ret
0x000000000041dc36 : jge 0x41dbbb ; ret 0xffd5
0x000000000041e700 : jge 0x41e6e0 ; shr cl, cl ; ret 0x3b
0x00000000004501ca : jge 0x4501cb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004501ea : jge 0x4501eb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004518fb : jge 0x4518de ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045b0ad : jge 0x45b0ae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x0000000000405480 : jl 0x4054ed ; add al, byte ptr [rax] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000458238 : jle 0x4581cc ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004018cb : jmp 0x4017c7
0x000000000040434a : jmp 0x4051c4
0x000000000040bf35 : jmp 0x40cacc
0x000000000040a59f : jmp 0x40cacd
0x0000000000411020 : jmp 0x41108b
0x000000000041ee50 : jmp 0x4222d0
0x000000000041cd54 : jmp 0x4222d1
0x000000000041e121 : jmp 0x4222d2
0x0000000000423e34 : jmp 0x423ed8
0x00000000004295eb : jmp 0x42a057
0x0000000000429528 : jmp 0x42a059
0x000000000042b653 : jmp 0x42b6b8
0x000000000042e6db : jmp 0x42f820
0x000000000042f0f6 : jmp 0x42f821
0x000000000042f949 : jmp 0x42f954
0x000000000043225f : jmp 0x433122
0x000000000043783a : jmp 0x437bc4
0x000000000043bd58 : jmp 0x43bd17
0x000000000043c7a7 : jmp 0x43de00
0x000000000043bc47 : jmp 0x43de01
0x000000000043be61 : jmp 0x43de02
0x000000000043e467 : jmp 0x43e4b4
0x000000000043f60a : jmp 0x43ff29
0x0000000000444295 : jmp 0x447394
0x000000000044af1d : jmp 0x44b173
0x000000000044bab2 : jmp 0x44be20
0x000000000044bb6b : jmp 0x44be21
0x0000000000450f04 : jmp 0x451160
0x0000000000451799 : jmp 0x451925
0x000000000045362a : jmp 0x45376e
0x0000000000453629 : jmp 0x45376f
0x0000000000453629 : jmp 0x453770
0x000000000045b512 : jmp 0x45b6dc
0x000000000045ed06 : jmp 0x45efe8
0x00000000004612dd : jmp 0x461358
0x00000000004619b5 : jmp 0x4619c0
0x0000000000461b17 : jmp 0x461b22
0x0000000000461d85 : jmp 0x461d90
0x0000000000458b6f : jmp 0x490814bf
0x0000000000458cbb : jmp 0x4908160b
0x0000000000458d8d : jmp 0x490816dd
0x0000000000458e0e : jmp 0x4908175e
0x000000000045adb4 : jmp 0x49083704
0x000000000045ae2f : jmp 0x4908377f
0x000000000042a1ca : jmp 0x4f4e64c6
0x000000000040e098 : jmp 0xffffffffc2d5efae
0x000000000046099f : jmp 0xffffffffc40a4066
0x0000000000421c25 : jmp qword ptr [rax]
0x0000000000428331 : jmp qword ptr [rbx]
0x000000000040dccb : jmp qword ptr [rcx]
0x000000000040e4c6 : jmp qword ptr [rdi]
0x000000000040a7c3 : jmp qword ptr [rdx]
0x000000000040ab24 : jmp qword ptr [rsi]
0x0000000000401ce7 : jmp rax
0x000000000041e228 : jmp rbx
0x000000000041ec5a : jmp rcx
0x000000000040b11d : jmp rdi
0x0000000000401d27 : jmp rdx
0x000000000042891e : jmp rsi
0x000000000040ae09 : jmp rsp
0x0000000000401d10 : jne 0x401d17 ; pop rbp ; ret
0x000000000044b1b9 : jne 0x44b19c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044d1c1 : jne 0x44d1b9 ; mov rax, rdx ; pop rbp ; ret
0x000000000044d792 : jne 0x44d78a ; mov rax, rdx ; pop rbp ; ret
0x0000000000451959 : jne 0x451924 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000453725 : jne 0x453701 ; call rax
0x0000000000405cc0 : jns 0x405d21 ; ret
0x0000000000405fe5 : jns 0x406046 ; ret
0x0000000000433595 : jns 0x433540 ; ret
0x0000000000433594 : jns 0x433541 ; ret
0x00000000004335e5 : jns 0x433590 ; ret
0x00000000004335e4 : jns 0x433591 ; ret
0x000000000043cab8 : jns 0x43ca75 ; ret 0xcaed
0x0000000000405487 : jo 0x4054e8 ; ret
0x0000000000417b4e : jo 0x417b5a ; ret
0x00000000004197be : jo 0x4197ca ; ret
0x000000000041cd0d : jo 0x41cd19 ; ret
0x0000000000423ff4 : jo 0x424055 ; ret
0x000000000043308f : jo 0x43305e ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000043308e : jo 0x43305f ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000043352f : jo 0x433590 ; ret
0x000000000043534b : jo 0x435353 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437ea4 : jo 0x437f05 ; ret
0x000000000043d411 : jo 0x43d45b ; call 0x449644
0x000000000040af19 : jrcxz 0x40aed7 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000043f9a5 : jrcxz 0x43f94f ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x0000000000412986 : js 0x4129e7 ; ret
0x00000000004457c8 : js 0x4457e6 ; call 0x401a04
0x0000000000465bec : js 0x465bb4 ; cli ; lcall ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], ch ; ret
0x000000000043e466 : lahf ; jmp 0x43e4b5
0x0000000000465b5f : lcall ptr [rax + 0x38000006] ; ret 0xfff9
0x0000000000465bef : lcall ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], ch ; ret
0x000000000041e6fe : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041f7fe : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000411826 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044f8b4 : lea esi, dword ptr [rdx] ; ret
0x0000000000414445 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041230f : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004256ca : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414444 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004256c9 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044e10f : leave ; ret 0x86f8
0x0000000000433592 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000041d05e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004673a4 : lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; add al, cl ; ret
0x0000000000466429 : lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rcx]
0x00000000004671a4 : lodsb al, byte ptr [rsi] ; sldt word ptr [rax] ; sub byte ptr [rdi - 2], bh ; jmp qword ptr [rcx]
0x0000000000450c8d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042c09e : loop 0x42c0cb ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042c09d : loop 0x42c0cc ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004502d0 : loop 0x4502c5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000461cb2 : loop 0x461c65 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040f227 : loope 0x40f29d ; ret
0x000000000040f4ff : loope 0x40f575 ; ret
0x0000000000410453 : loope 0x4104c9 ; ret
0x0000000000420065 : loope 0x420033 ; jmp 0x4222d3
0x0000000000445832 : loope 0x445806 ; jae 0x44586d ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000044ad5b : loope 0x44ad4c ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000044cdac : loope 0x44cdb8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000045100e : loope 0x450fc9 ; xchg eax, ebp ; jmp 0x451163
0x0000000000404173 : loopne 0x404130 ; ret
0x0000000000414443 : loopne 0x414496 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004239ed : loopne 0x423a53 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424dd4 : loopne 0x424e27 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042ad13 : loopne 0x42ad1c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b69e : loopne 0x42b6ee ; add esp, 0x60 ; pop rbp ; ret
0x000000000042b69d : loopne 0x42b6ef ; add esp, 0x60 ; pop rbp ; ret
0x0000000000435f82 : loopne 0x435f8c ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000445826 : loopne 0x4457f9 ; jae 0x445860 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x000000000044b5b7 : loopne 0x44b5e9 ; pop rdi ; ret
0x000000000044b5b6 : loopne 0x44b5ea ; pop rdi ; ret
0x000000000044ba9b : loopne 0x44bacd ; ret
0x000000000044ba9a : loopne 0x44bace ; ret
0x00000000004526fa : loopne 0x452701 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000455d4e : loopne 0x455d9f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000455d4d : loopne 0x455da0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045afed : loopne 0x45b040 ; add esp, 0x1d0 ; pop rbp ; ret
0x000000000045f5dc : loopne 0x45f570 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045f5db : loopne 0x45f571 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045fba0 : loopne 0x45fba7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000461862 : loopne 0x461869 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046400c : loopne 0x46405b ; mov esp, ebp ; pop rbp ; ret
0x000000000046400b : loopne 0x46405c ; mov esp, ebp ; pop rbp ; ret
0x000000000046425c : loopne 0x4642ab ; mov esp, ebp ; pop rbp ; ret
0x000000000046425b : loopne 0x4642ac ; mov esp, ebp ; pop rbp ; ret
0x0000000000466940 : loopne 0x466924 ; sti ; jmp qword ptr [rbx]
0x0000000000461cb1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041dc2d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd07 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004446bc : mov ah, -0x76 ; ret 0x124
0x000000000045126e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041bcb5 : mov ah, 0x75 ; ret
0x0000000000436229 : mov al, -0x26 ; ret
0x00000000004247c3 : mov al, -0x47 ; ret
0x000000000045100f : mov al, -0x6b ; jmp 0x451162
0x000000000045e4cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404dff : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000432416 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422bdd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043df6a : mov al, 0x2d ; ret
0x000000000043e226 : mov al, 0x2d ; ret 0x24cc
0x000000000045a3f0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000446c2d : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465d10 : mov al, 0xd ; add byte ptr [rax], al ; test al, -0x13 ; sti ; call rax
0x0000000000465b98 : mov al, 7 ; add byte ptr [rax], al ; sub al, bh ; stc ; call rax
0x000000000046210b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000046287d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046254a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c09c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044d938 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004627ad : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004621cc : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000046210a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000461ed4 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000461ed9 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000435a78 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000465c5c : mov bh, al ; sti ; jmp rax
0x0000000000432fe5 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000044c948 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043d385 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000415655 : mov bl, 0x75 ; ret
0x0000000000466d48 : mov bl, cl ; cld ; jmp qword ptr [rdi]
0x0000000000401f88 : mov byte ptr [r15], r9b ; test cl, al ; add eax, dword ptr [rax] ; add cl, ch ; ret 0
0x00000000004510d1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401f89 : mov byte ptr [rdi], cl ; test cl, al ; add eax, dword ptr [rax] ; add cl, ch ; ret 0
0x0000000000401d43 : mov byte ptr [rip + 0x26662e], 1 ; ret
0x0000000000466219 : mov ch, -7 ; call rax
0x000000000040f243 : mov ch, 0x5b ; ret
0x000000000041d4af : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004360ed : mov cl, 0x37 ; ret 0x4589
0x00000000004363bb : mov cl, 0x37 ; ret 0x94b9
0x000000000043642b : mov cl, 0x37 ; ret 0xd3e9
0x000000000044210f : mov cl, 0x7d ; ret
0x000000000045b8e4 : mov dh, -0x39 ; pop rbp ; ret
0x000000000044fad1 : mov dh, -0x3a ; pop rbp ; ret
0x0000000000448bd8 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044cdaf : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000454d42 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043352a : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000463514 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000045bca7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0a2 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004621cf : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000043f4a2 : mov dh, -0x47 ; ret 0x9214
0x0000000000463fca : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000463241 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000045bb61 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413bc9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041379f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004535a5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000455be9 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000045b50f : mov dword ptr [rbp - 0x14], eax ; jmp 0x45b6df
0x00000000004612da : mov dword ptr [rbp - 0x14], eax ; jmp 0x46135b
0x00000000004599bd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000459bf0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x0000000000450f01 : mov dword ptr [rbp - 0x34], eax ; jmp 0x451163
0x0000000000451796 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x451928
0x0000000000451821 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x451928
0x0000000000423e31 : mov dword ptr [rbp - 0x44], eax ; jmp 0x423edb
0x000000000045126c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004295e8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42a05a
0x0000000000405691 : mov dword ptr [rbp - 0x94], ecx ; call 0x4018b8
0x00000000004455ea : mov dword ptr [rbp - 0xb0c], ecx ; call 0x4018f8
0x0000000000402457 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000451801 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x00000000004051d5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405365 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000413ea6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000044f0e8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000045b0b0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000413a4d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004358d9 : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000459d5b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000432260 : mov eax, 0xb800000e ; ret 0x4dbf
0x00000000004256c7 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000045bb5f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410f13 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b51b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004336f6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045c2a6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042f9f1 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042b6ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411e2e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000461155 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413bcc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042b69c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045f5da : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046400a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412980 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000044b1bf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000413a4f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045195f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000459187 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043d40d : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x449648
0x000000000041358f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000044d166 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042fc4c : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423c3d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051d9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004501cd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004501ed : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000413a4e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000461ed6 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000461923 : mov eax, eax ; pop rbp ; ret
0x0000000000461cfa : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004546c1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044d1c4 : mov eax, edx ; pop rbp ; ret
0x0000000000461c1d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000461ed5 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000420468 : mov ebp, 0xe19c53ba ; ret
0x00000000004059ab : mov ebp, 0xe900000a ; ret
0x0000000000401d6b : mov ebp, esp ; call rax
0x0000000000401cd1 : mov ebp, esp ; ja 0x401cdc ; pop rbp ; ret
0x0000000000405362 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004060cd : mov ebx, 0x8945d276 ; ret 0x8141
0x000000000043285f : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000041379c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000455afb : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000455d4c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000456666 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004518fe : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000459d5d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000455aff : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401d65 : mov edi, 0x667e20 ; mov rbp, rsp ; call rax
0x0000000000401ce2 : mov edi, 0x668308 ; jmp rax
0x0000000000401d22 : mov edi, 0x668308 ; jmp rdx
0x000000000045b513 : mov edi, 0xb8000001 ; ret
0x000000000042e556 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000041cd07 : mov edi, 0xb8000055 ; wait ; jo 0x41cd1f ; ret
0x00000000004457c7 : mov edi, dword ptr [rax + 0x18] ; call 0x401a05
0x000000000045b0ac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004501c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004501e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000455b02 : mov edi, dword ptr [rcx] ; call rax
0x0000000000453721 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004642c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004642c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044f8b1 : mov edx, 0x328dfe07 ; ret
0x000000000045ec7e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d4cb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040a732 : mov edx, 0xb90001a1 ; ret 0x4654
0x000000000041e342 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000045ec67 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000406205 : mov esi, 0xb9c05257 ; ret 0x8024
0x000000000043d410 : mov esi, dword ptr [rax + 0x44] ; call 0x449645
0x0000000000453724 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000451902 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401d20 : mov esi, eax ; mov edi, 0x668308 ; jmp rdx
0x000000000044b1bc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045195c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000446ff1 : mov esi, ecx ; call 0x4332f4
0x0000000000423e33 : mov esp, 0x99e9 ; add al, ch ; ret 0xfdd9
0x00000000004023c9 : mov esp, ebp ; pop rbp ; ret
0x00000000004051d4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405364 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000413ea5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b0af : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000045126d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000423e32 : mov r12d, 0x99e9 ; add al, ch ; ret 0xfdd9
0x0000000000432fe4 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000043df69 : mov r8b, 0x2d ; ret
0x000000000043e225 : mov r8b, 0x2d ; ret 0x24cc
0x00000000004256c6 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410f12 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b51a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004336f5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b6ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411e2d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000453941 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042b69b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041297f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000044b1be : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045195e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043d40c : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x449649
0x0000000000423c3c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051d8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004501cc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004501ec : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000461cf9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000461922 : mov rax, r8 ; pop rbp ; ret
0x00000000004546c0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044d1c3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401d6a : mov rbp, rsp ; call rax
0x0000000000401cd0 : mov rbp, rsp ; ja 0x401cdd ; pop rbp ; ret
0x0000000000405361 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000456665 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004518fd : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000459d5c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000455afe : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004457c6 : mov rdi, qword ptr [rax + 0x18] ; call 0x401a06
0x000000000045b0ab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004501c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004501e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000455b01 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000453720 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000453723 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000451901 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401d1f : mov rsi, rax ; mov edi, 0x668308 ; jmp rdx
0x000000000044b1bb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000045195b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000446ff0 : mov rsi, rcx ; call 0x4332f5
0x00000000004023c8 : mov rsp, rbp ; pop rbp ; ret
0x000000000042b2b1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000460841 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000418fa8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040564e : movabs dword ptr [0x8348e28948b69d9b], eax ; ret 0x48f0
0x0000000000444aad : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000458dea : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000444aae : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041c1f5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000044c343 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x0000000000406e01 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004353e3 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000454d41 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433529 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000463513 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000045bca6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0a1 : movzx eax, al ; pop rbp ; ret
0x00000000004621ce : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000461ed8 : movzx eax, ax ; pop rbp ; ret
0x000000000045b8e3 : movzx eax, bh ; pop rbp ; ret
0x0000000000448bd7 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044cdae : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044fad0 : movzx eax, dh ; pop rbp ; ret
0x000000000045b8e2 : movzx eax, dil ; pop rbp ; ret
0x000000000044facf : movzx eax, sil ; pop rbp ; ret
0x000000000045ea78 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000415495 : nop ; ret
0x00000000004238a2 : nop ; ret 0x148
0x00000000004238b6 : nop ; ret 0x2948
0x0000000000403648 : nop ; ret 0x8589
0x0000000000404e82 : nop ; ret 0xc0b9
0x0000000000407769 : nop ; test edx, ecx ; ret
0x00000000004642e8 : nop dword ptr [rax + rax] ; ret
0x0000000000436d21 : or al, 0 ; add cl, ch ; ret
0x000000000041dc2a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd04 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000467004 : or al, 0xe ; add byte ptr [rax], al ; sbb byte ptr [rsi - 2], cl ; jmp rsp
0x00000000004059ac : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000045b4f1 : or bh, al ; in al, dx ; ret 0xe8ff
0x0000000000460f05 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040e754 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rsi]
0x0000000000465d24 : or bh, ch ; sti ; call qword ptr [rax]
0x000000000045823d : or byte ptr [r15], 0x8f ; ret 6
0x00000000004137a0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000432860 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000466ac5 : or byte ptr [rax], al ; add byte ptr [rax + 0x3f], ch ; cld ; call rdx
0x0000000000466ae5 : or byte ptr [rax], al ; add byte ptr [rax], ch ; cld ; call qword ptr [rdx]
0x0000000000428bc8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004359d0 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040e096 : or byte ptr [rbx - 0x6af0f217], al ; ret 0xb60f
0x000000000045823e : or byte ptr [rdi], 0x8f ; ret 6
0x0000000000432298 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000460f04 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000041ed16 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000413ea4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000465bf1 : or dword ptr [rax], eax ; add byte ptr [rax], ch ; ret
0x0000000000405dac : or eax, 0xe9000005 ; ret 1
0x0000000000465d11 : or eax, 0xeda80000 ; sti ; call rax
0x0000000000465d21 : or eax, 0xef080000 ; sti ; call qword ptr [rax]
0x0000000000435a7a : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000461920 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000461c23 : or eax, esi ; pop rbp ; ret
0x000000000040e545 : or ebp, dword ptr [rdi] ; xor eax, 0x8ca975b9 ; ret 0x1b2
0x0000000000461cf7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000413a4b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000461cf6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000046191f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000404171 : out -0x71, al ; loopne 0x404132 ; ret
0x0000000000404170 : out -0x71, al ; loopne 0x404133 ; ret
0x0000000000466195 : out -1, eax ; call qword ptr [rax]
0x000000000044facd : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000045b8e0 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041f60b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000046254c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000457279 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004573f8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000046287f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004247c2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000044ad5e : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000465d25 : out dx, eax ; sti ; call qword ptr [rax]
0x000000000045ec69 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004511f9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004206f5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415346 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420740 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004081e9 : outsb dx, byte ptr [rsi] ; ret 0xef47
0x000000000042a451 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043d3dd : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045ec6c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040823d : outsd dx, dword ptr [rsi] ; ret 0xef47
0x000000000042b2ac : pop ax ; jb 0x42b2e1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044ad5f : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040e591 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004642dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004239ef : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e593 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004642de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e595 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004642e0 : pop r14 ; pop r15 ; ret
0x0000000000414449 : pop r14 ; pop rbp ; ret
0x000000000040e597 : pop r15 ; pop rbp ; ret
0x00000000004642e2 : pop r15 ; ret
0x00000000004490d3 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042b2ad : pop rax ; jb 0x42b2e0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000466568 : pop rax ; sar dl, 1 ; call qword ptr [rdx]
0x0000000000401d42 : pop rbp ; mov byte ptr [rip + 0x26662e], 1 ; ret
0x0000000000401ce1 : pop rbp ; mov edi, 0x668308 ; jmp rax
0x0000000000401d1e : pop rbp ; mov rsi, rax ; mov edi, 0x668308 ; jmp rdx
0x00000000004642db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e594 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004642df : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041d4b2 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000419785 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041d4ce : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401cd5 : pop rbp ; ret
0x00000000004239ee : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412312 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414448 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405008 : pop rbx ; pop rbp ; ret
0x000000000040f244 : pop rbx ; ret
0x000000000041d4b3 : pop rcx ; ret 0x1b2
0x0000000000417b86 : pop rcx ; ret 0x8589
0x000000000041d4cf : pop rcx ; ret 0x8b48
0x000000000041f800 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000405787 : pop rdi ; add al, byte ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bb0f : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000040e598 : pop rdi ; pop rbp ; ret
0x0000000000436ed6 : pop rdi ; ret
0x0000000000409dcd : pop rdi ; ret 0x60ea
0x000000000040e596 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004642e1 : pop rsi ; pop r15 ; ret
0x000000000041444a : pop rsi ; pop rbp ; ret
0x00000000004368fa : pop rsi ; ret
0x0000000000409d79 : pop rsi ; ret 0x60ea
0x00000000004052f3 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000466754 : pop rsp ; add eax, 0xd5a80000 ; sti ; call rdi
0x000000000040e592 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004642dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004239f0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417b85 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000451210 : pop rsp ; ret 0xf66
0x000000000044a74d : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000463395 : popfq ; ret 0xd284
0x00000000004571c5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041d4b0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000427a71 : push -0x47 ; ret 0xf80
0x000000000041f69a : push -0x75425eeb ; push rbp ; ret
0x000000000041c1f8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000465b97 : push qword ptr [rax + 0x28000007] ; clc ; stc ; call rax
0x0000000000465d0f : push qword ptr [rax - 0x57fffff3] ; in eax, dx ; sti ; call rax
0x000000000040c829 : push qword ptr [rbx] ; xchg ecx, esp ; ret 0x93e9
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000465d1f : push rax ; or eax, 0xef080000 ; sti ; call qword ptr [rax]
0x0000000000411e34 : push rax ; pop rbp ; ret
0x0000000000461a44 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000045263c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000450f28 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401d64 : push rbp ; mov edi, 0x667e20 ; mov rbp, rsp ; call rax
0x0000000000405360 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040bdf1 : push rbp ; ret
0x000000000044469f : push rbp ; ret 0x1b2
0x00000000004101b2 : push rbp ; ret 0x484c
0x000000000040ed03 : push rbp ; ret 0x894c
0x0000000000410196 : push rbp ; ret 0xb24c
0x000000000041f636 : push rbp ; ret 0xd284
0x0000000000447b9f : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000458f66 : push rbp ; shr al, 1 ; ret
0x000000000041dc2f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd09 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040d8a4 : push rbx ; ret
0x000000000045ec6b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000432cc6 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004320ea : pushfq ; ret 0x8445
0x000000000043fd23 : pushfq ; ret 0xd284
0x00000000004002dd : ret
0x0000000000401f91 : ret 0
0x0000000000452640 : ret 0x10
0x000000000043289a : ret 0x108
0x000000000043ab40 : ret 0x1111
0x00000000004446bf : ret 0x124
0x000000000040b30e : ret 0x12b9
0x0000000000410dd8 : ret 0x148
0x000000000043c434 : ret 0x19
0x0000000000420804 : ret 0x1a
0x0000000000415a7d : ret 0x1add
0x000000000043b738 : ret 0x1b
0x000000000040e54c : ret 0x1b2
0x000000000040ae00 : ret 0x1c
0x0000000000450c1d : ret 0x1cdd
0x00000000004455c8 : ret 0x1d
0x0000000000450b45 : ret 0x1e1
0x0000000000402a5b : ret 0x1e5d
0x0000000000409941 : ret 0x1f
0x000000000043cd1f : ret 0x2145
0x000000000043ba34 : ret 0x23
0x00000000004163ca : ret 0x23da
0x000000000043e228 : ret 0x24cc
0x0000000000443bae : ret 0x25
0x000000000040610a : ret 0x256
0x0000000000401ad2 : ret 0x2666
0x00000000004018d2 : ret 0x2667
0x00000000004230c8 : ret 0x279e
0x00000000004511fa : ret 0x280f
0x000000000045bf11 : ret 0x2941
0x000000000041ed19 : ret 0x2948
0x000000000041f804 : ret 0x2a
0x0000000000445610 : ret 0x2ae8
0x0000000000441a6e : ret 0x2b
0x000000000041dc32 : ret 0x2d50
0x000000000045e7ce : ret 0x3040
0x000000000044330a : ret 0x33
0x000000000045230a : ret 0x3504
0x000000000041e704 : ret 0x3b
0x000000000043d280 : ret 0x3d94
0x000000000041b765 : ret 0x3e
0x00000000004082f1 : ret 0x42
0x00000000004072f9 : ret 0x45
0x000000000042b8b3 : ret 0x4589
0x0000000000404ef3 : ret 0x4654
0x000000000041eba1 : ret 0x4802
0x00000000004508e0 : ret 0x4810
0x00000000004455df : ret 0x4813
0x000000000045ec6e : ret 0x4815
0x00000000004101b3 : ret 0x484c
0x00000000004206f6 : ret 0x4861
0x00000000004492f1 : ret 0x4878
0x0000000000452f97 : ret 0x48c3
0x000000000040e3ea : ret 0x48d
0x0000000000405665 : ret 0x48e0
0x0000000000402084 : ret 0x48f0
0x0000000000418fb1 : ret 0x4b
0x00000000004245c7 : ret 0x4cc0
0x000000000040e5f0 : ret 0x4cf0
0x0000000000430112 : ret 0x4dbf
0x000000000042a1cc : ret 0x4f0b
0x000000000043dab6 : ret 0x5189
0x00000000004139fb : ret 0x5589
0x0000000000404e6c : ret 0x558a
0x00000000004478cf : ret 0x558b
0x000000000041deba : ret 0x5966
0x0000000000428e27 : ret 0x5bc6
0x000000000043fcdb : ret 0x5fe8
0x0000000000447ba3 : ret 0x60
0x0000000000409d7a : ret 0x60ea
0x0000000000463fcf : ret 0x61
0x000000000043869d : ret 0x6809
0x0000000000415116 : ret 0x6a8a
0x0000000000402fef : ret 0x6a94
0x000000000043084a : ret 0x6ea5
0x000000000040297b : ret 0x6f75
0x000000000043395c : ret 0x6fcb
0x0000000000414dce : ret 0x77a8
0x000000000040afa0 : ret 0x78
0x0000000000415f31 : ret 0x7a8a
0x000000000041cbab : ret 0x7b7f
0x0000000000406621 : ret 0x7d19
0x000000000040585a : ret 0x8024
0x000000000042355a : ret 0x8041
0x0000000000425f76 : ret 0x8046
0x00000000004060d2 : ret 0x8141
0x000000000043cdb5 : ret 0x8148
0x0000000000404f37 : ret 0x81e9
0x000000000041eac4 : ret 0x822d
0x000000000043fcd4 : ret 0x8341
0x0000000000458b72 : ret 0x8348
0x000000000045b591 : ret 0x840
0x0000000000423570 : ret 0x8445
0x0000000000402caa : ret 0x8589
0x000000000040627a : ret 0x858a
0x00000000004515c9 : ret 0x86a5
0x000000000044e0ce : ret 0x86f8
0x0000000000461a27 : ret 0x8844
0x0000000000408843 : ret 0x890d
0x000000000045b1a6 : ret 0x8938
0x0000000000415b43 : ret 0x8940
0x000000000040dd5b : ret 0x8941
0x0000000000406105 : ret 0x8944
0x00000000004359a5 : ret 0x8945
0x0000000000404d8e : ret 0x8948
0x000000000045d28f : ret 0x894a
0x000000000040ed04 : ret 0x894c
0x0000000000415347 : ret 0x8961
0x000000000045bd11 : ret 0x898c
0x000000000042fde8 : ret 0x898d
0x0000000000438e0e : ret 0x8994
0x000000000044fc7c : ret 0x899a
0x0000000000437fce : ret 0x89e0
0x000000000042cf78 : ret 0x89f1
0x000000000044845a : ret 0x89f5
0x000000000045e888 : ret 0x8a44
0x000000000045e785 : ret 0x8a4a
0x000000000040e568 : ret 0x8b48
0x000000000040c43e : ret 0x8b4c
0x0000000000445335 : ret 0x919d
0x000000000043f238 : ret 0x9214
0x000000000040c82d : ret 0x93e9
0x0000000000460bd2 : ret 0x941
0x0000000000461cd2 : ret 0x949
0x00000000004363bd : ret 0x94b9
0x000000000042eb75 : ret 0x9589
0x000000000042c417 : ret 0x9e6d
0x00000000004674ec : ret 0xa
0x000000000041dd0c : ret 0xa30b
0x0000000000427ee4 : ret 0xa7b9
0x0000000000437469 : ret 0xa8b9
0x000000000046121f : ret 0xac60
0x0000000000404976 : ret 0xb0
0x0000000000410197 : ret 0xb24c
0x0000000000431c98 : ret 0xb28d
0x000000000040e09c : ret 0xb60f
0x000000000041f610 : ret 0xb740
0x000000000043d634 : ret 0xb841
0x000000000042b2a7 : ret 0xb848
0x000000000040ab4d : ret 0xb90d
0x000000000041d840 : ret 0xb940
0x0000000000447f7a : ret 0xb941
0x00000000004552ab : ret 0xb948
0x000000000045e712 : ret 0xb94a
0x000000000045bec0 : ret 0xb98c
0x000000000044fed0 : ret 0xb99a
0x00000000004380db : ret 0xb9e0
0x000000000042ee06 : ret 0xb9f1
0x00000000004487c4 : ret 0xb9f5
0x000000000041fc8c : ret 0xbf48
0x0000000000404e84 : ret 0xc0b9
0x0000000000401d05 : ret 0xc148
0x0000000000464212 : ret 0xc493
0x0000000000446d25 : ret 0xc731
0x000000000042bcf0 : ret 0xca21
0x000000000042f6c5 : ret 0xca29
0x000000000043a7c0 : ret 0xcaed
0x0000000000463fd5 : ret 0xccb2
0x0000000000437ae7 : ret 0xd0e9
0x000000000043ff83 : ret 0xd108
0x000000000040494c : ret 0xd284
0x000000000043642d : ret 0xd3e9
0x000000000045ced5 : ret 0xd618
0x000000000040b5e4 : ret 0xdce9
0x0000000000445e6f : ret 0xe083
0x00000000004634bb : ret 0xe280
0x000000000045eec8 : ret 0xe2e8
0x00000000004428ef : ret 0xe721
0x000000000045b1d3 : ret 0xe8ff
0x000000000041f4e2 : ret 0xe940
0x0000000000447ff5 : ret 0xe941
0x0000000000420741 : ret 0xe961
0x000000000043d2cc : ret 0xe994
0x000000000045007f : ret 0xe99a
0x000000000041656d : ret 0xea51
0x000000000044ff8b : ret 0xea81
0x00000000004222fc : ret 0xee8
0x00000000004081ea : ret 0xef47
0x0000000000442a92 : ret 0xef52
0x000000000045b575 : ret 0xf280
0x0000000000413a35 : ret 0xf281
0x000000000041e347 : ret 0xf41
0x0000000000459c8c : ret 0xf4e9
0x0000000000451211 : ret 0xf66
0x000000000043aab4 : ret 0xf6bd
0x0000000000420295 : ret 0xf7f3
0x00000000004270da : ret 0xf80
0x0000000000446d21 : ret 0xfa89
0x00000000004264d2 : ret 0xfc61
0x000000000041ea1e : ret 0xfc75
0x0000000000423e3a : ret 0xfdd9
0x0000000000458d9f : ret 0xff3
0x000000000040db4e : ret 0xff70
0x000000000042028f : ret 0xffa5
0x00000000004375d3 : ret 0xffbe
0x000000000041ea18 : ret 0xffc4
0x0000000000404afa : ret 0xffd0
0x000000000041dc38 : ret 0xffd5
0x000000000041dd12 : ret 0xffd8
0x000000000041eaca : ret 0xffd9
0x000000000041deb4 : ret 0xffe0
0x0000000000465b65 : ret 0xfff9
0x000000000041cba5 : ret 0xfffa
0x00000000004455f2 : ret 0xfffb
0x0000000000435830 : ret 0xfffc
0x0000000000446ff5 : ret 0xfffe
0x0000000000405699 : ret 0xffff
0x0000000000405db1 : ret 1
0x000000000041e8b0 : ret 2
0x00000000004377f7 : ret 3
0x0000000000437202 : ret 4
0x0000000000428297 : ret 6
0x000000000040faf2 : ret 7
0x0000000000410070 : ret 8
0x000000000043ec08 : ret 9
0x0000000000466d49 : retf ; cld ; jmp qword ptr [rdi]
0x0000000000465c6d : retf ; sti ; jmp qword ptr [rax]
0x0000000000433590 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045ec4d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000044469a : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x0000000000457df4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044dbec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412f8c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004621ba : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004060cf : rol byte ptr [rbp - 0x77], cl ; ret 0x8141
0x0000000000406483 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434888 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043445a : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x000000000045ec4c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000043f9a7 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000043358f : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000452e70 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045371e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000042b2a4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401d0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d1b ; pop rbp ; ret
0x0000000000452e71 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045371f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000045bca8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000045195a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043352b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x433594 ; ret
0x0000000000454d43 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000044d740 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004510cd : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040647f : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000449597 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000447ba0 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000461cf5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000413a4a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000446d1e : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x00000000004621cd : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000461ccf : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000448bd9 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000044cdb0 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000446fef : ror dword ptr [rax - 0x77], -0x32 ; call 0x4332f6
0x000000000045ea7e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000424480 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000408842 : sahf ; ret 0x890d
0x000000000040ab4c : sahf ; ret 0xb90d
0x000000000042e29b : sahf ; ret 0xd284
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x000000000042d03a : salc ; jmp qword ptr [rdi]
0x000000000042cf76 : salc ; sti ; ret 0x89f1
0x0000000000466569 : sar dl, 1 ; call qword ptr [rdx]
0x0000000000461cb4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000401d0e : sar eax, 1 ; jne 0x401d19 ; pop rbp ; ret
0x000000000041f801 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401d0d : sar rax, 1 ; jne 0x401d1a ; pop rbp ; ret
0x00000000004673a0 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; add al, cl ; ret
0x0000000000466214 : sbb al, 0 ; add byte ptr [rax], al ; test al, -0x4b ; stc ; call rax
0x00000000004247c0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000436a0d : sbb al, 0x41 ; xchg eax, ebx ; ret
0x000000000042f80e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000446337 : sbb al, ch ; ret
0x000000000042ea2b : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000444752 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x0000000000467ad5 : sbb byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000444753 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000467008 : sbb byte ptr [rsi - 2], cl ; jmp rsp
0x000000000041f701 : sbb cl, ch ; ret
0x000000000042aaf3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dfd9 : sbb dword ptr [rdi], 0x8945b5c7 ; ret 0x8141
0x000000000045393d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423810 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x00000000004088b1 : scasb al, byte ptr [rdi] ; ret
0x000000000040f226 : scasd eax, dword ptr [rdi] ; loope 0x40f29e ; ret
0x0000000000408905 : scasd eax, dword ptr [rdi] ; ret
0x000000000045bd10 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000045bebf : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x000000000044d1fa : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044d1fc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045122f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000458f67 : shr al, 1 ; ret
0x000000000041e702 : shr cl, cl ; ret 0x3b
0x00000000004671a5 : sldt word ptr [rax] ; sub byte ptr [rdi - 2], bh ; jmp qword ptr [rcx]
0x0000000000465b6e : stc ; call qword ptr [rax]
0x0000000000465b9e : stc ; call rax
0x00000000004584d9 : stc ; in al, dx ; ret 0x8589
0x0000000000458dec : stc ; in al, dx ; ret 0xff3
0x0000000000465b5e : stc ; lcall ptr [rax + 0x38000006] ; ret 0xfff9
0x00000000004360ec : stc ; mov cl, 0x37 ; ret 0x4589
0x0000000000465b96 : stc ; push qword ptr [rax + 0x28000007] ; clc ; stc ; call rax
0x0000000000406b99 : stc ; ret
0x000000000041c53d : stc ; ret 0x77a8
0x00000000004230c7 : std ; ret 0x279e
0x0000000000465d26 : sti ; call qword ptr [rax]
0x000000000046687a : sti ; call qword ptr [rbx]
0x0000000000465d16 : sti ; call rax
0x000000000046675a : sti ; call rdi
0x000000000046685a : sti ; call rdx
0x0000000000465c6e : sti ; jmp qword ptr [rax]
0x00000000004666fa : sti ; jmp qword ptr [rbx]
0x0000000000465c5e : sti ; jmp rax
0x0000000000465d0e : sti ; push qword ptr [rax - 0x57fffff3] ; in eax, dx ; sti ; call rax
0x0000000000465d1e : sti ; push rax ; or eax, 0xef080000 ; sti ; call qword ptr [rax]
0x000000000042cf77 : sti ; ret 0x89f1
0x000000000042ee05 : sti ; ret 0xb9f1
0x00000000004455f1 : sti ; ret 0xfffb
0x00000000004584d8 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000445334 : stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000461cb3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004332db : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000447dec : sub al, 0x35 ; ret 0x8941
0x0000000000447f78 : sub al, 0x35 ; ret 0xb941
0x0000000000447ff3 : sub al, 0x35 ; ret 0xe941
0x0000000000449d51 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x000000000042b80f : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x0000000000465b9c : sub al, bh ; stc ; call rax
0x000000000041116e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466ae8 : sub byte ptr [rax - 4], al ; call qword ptr [rdx]
0x0000000000461326 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411058 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041dc35 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004671a8 : sub byte ptr [rdi - 2], bh ; jmp qword ptr [rcx]
0x000000000041dc2b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd05 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000444689 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x0000000000431cae : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x000000000041eac5 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004332dd : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b2af : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000464369 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004332dc : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000464368 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000436d1f : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x00000000004514f3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000465d14 : test al, -0x13 ; sti ; call rax
0x0000000000466758 : test al, -0x2b ; sti ; call rdi
0x000000000040e7cd : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rsi]
0x0000000000466218 : test al, -0x4b ; stc ; call rax
0x0000000000459189 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041dc30 : test al, -0x7f ; ret 0x2d50
0x000000000041dd0a : test al, -0x7f ; ret 0xa30b
0x0000000000404dda : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045e523 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004338b7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045bd0d : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000423e9e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000420466 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000042a348 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000045636d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045823a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000437120 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004642ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004059aa : test byte ptr [rbp - 0x16fffff6], bh ; ret
0x000000000044c342 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000450c8c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000045823b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000044b8e6 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000414aac : test byte ptr [rcx], ch ; ret 0
0x000000000043406f : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000405dab : test byte ptr [rip - 0x16fffffb], cl ; ret 1
0x000000000042b811 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x000000000044a521 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x0000000000450482 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000401f8b : test cl, al ; add eax, dword ptr [rax] ; add cl, ch ; ret 0
0x00000000004476f5 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000459767 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044f511 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000414aa6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000438e9d : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x0000000000425e9b : test dword ptr [rbp + rdi*8 - 0x7bf00001], ecx ; ret
0x0000000000460f07 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000460ec7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000460e42 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000042f683 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042f6db : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042f642 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004324c4 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000433041 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x0000000000432fe7 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000040e67b : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040e47b : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e4c2 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000043224b : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000040e756 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rsi]
0x000000000040e68a : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000042a456 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000424efe : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000457151 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000423aba : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000043f1e9 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x000000000040ecfc : test dword ptr [rsi + rdi*8 + 0x182dffff], ebp ; push rbp ; ret 0x894c
0x000000000040fa1c : test dword ptr [rsi + rdi*8 + 0x192dffff], ebp ; push rbp ; ret 0x894c
0x000000000041f4db : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042073a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040f4dc : test dword ptr [rsi + rdi*8 - 0x21d20001], ebp ; mov ch, 0x5b ; ret
0x000000000040f23c : test dword ptr [rsi + rdi*8 - 0x22d20001], ebp ; mov ch, 0x5b ; ret
0x0000000000425934 : test dword ptr [rsi + rdi*8 - 0x26d20001], ecx ; ret
0x00000000004258e0 : test dword ptr [rsi + rdi*8 - 0x27d20001], ecx ; ret
0x00000000004270b8 : test dword ptr [rsi + rdi*8 - 0x3ed20001], ecx ; ret
0x0000000000425bf0 : test dword ptr [rsi + rdi*8 - 0x3fd20001], ecx ; ret
0x000000000040f4f8 : test dword ptr [rsi + rdi*8 - 0x4fd20001], ebp ; loope 0x40f57c ; ret
0x000000000040f220 : test dword ptr [rsi + rdi*8 - 0x50d20001], ebp ; loope 0x40f2a4 ; ret
0x000000000041c1fa : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004206ef : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040776a : test edx, ecx ; ret
0x0000000000442147 : test esi, esp ; ret
0x000000000041e6ff : wait ; jge 0x41e6e1 ; shr cl, cl ; ret 0x3b
0x00000000004197bd : wait ; jo 0x4197cb ; ret
0x000000000041cd0c : wait ; jo 0x41cd1a ; ret
0x0000000000444aac : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x000000000045ec68 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000451010 : xchg eax, ebp ; jmp 0x451161
0x00000000004046f9 : xchg eax, ebp ; ret
0x000000000042e45f : xchg eax, ebp ; ret 0x8445
0x000000000040e09b : xchg eax, ebp ; ret 0xb60f
0x0000000000404b90 : xchg eax, ebp ; ret 0xd284
0x0000000000415345 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041bc45 : xchg eax, ebx ; ret
0x000000000041be75 : xchg eax, ecx ; ret
0x00000000004077bd : xchg eax, ecx ; test edx, ecx ; ret
0x0000000000432b29 : xchg eax, edi ; ret 0xd284
0x000000000045bd0f : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000045bebe : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x00000000004156c5 : xchg eax, edx ; ret
0x000000000042356f : xchg eax, edx ; ret 0x8445
0x000000000042a34e : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000427a6f : xchg eax, esi ; xor byte ptr [rdx - 0x47], ch ; ret 0xf80
0x0000000000459c88 : xchg eax, esp ; int 6
0x00000000004295ea : xchg eax, esp ; jmp 0x42a058
0x0000000000429527 : xchg eax, esp ; jmp 0x42a05a
0x00000000004206f4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041bfc5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042073f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000043cd2c : xchg eax, esp ; ret
0x0000000000423559 : xchg eax, esp ; ret 0x8041
0x0000000000427cae : xchg eax, esp ; ret 0x8445
0x000000000041f60e : xchg eax, esp ; ret 0xb740
0x000000000040494b : xchg eax, esp ; ret 0xd284
0x000000000044d1fb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004502d2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000430e6a : xchg eax, r11d ; ret
0x0000000000459c87 : xchg eax, r12d ; int 6
0x00000000004295e9 : xchg eax, r12d ; jmp 0x42a059
0x000000000040b30c : xchg ecx, esp ; ret 0x12b9
0x0000000000407732 : xchg ecx, esp ; ret 0x8589
0x000000000040c82b : xchg ecx, esp ; ret 0x93e9
0x0000000000452f8f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000046191e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000042cfca : xlatb ; sti ; ret 0x89f1
0x000000000042ee04 : xlatb ; sti ; ret 0xb9f1
0x000000000040b6ae : xor al, 0x25 ; ret 0x4654
0x000000000041f609 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000413ea7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000458f63 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000413ea8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000461cb6 : xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004502d3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000044959b : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427a70 : xor byte ptr [rdx - 0x47], ch ; ret 0xf80
0x0000000000450050 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436a27 : xor dh, dh ; ret 0x8589
0x00000000004375d1 : xor dh, dh ; ret 0xffbe
0x000000000044e9bb : xor dword ptr [rdx], edx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e547 : xor eax, 0x8ca975b9 ; ret 0x1b2
0x0000000000445836 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000046191d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000461c21 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000044582a : xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000436a26 : xor r14b, r14b ; ret 0x8589
0x0000000000436daa : xor sil, sil ; ret 0x8589
0x00000000004375d0 : xor sil, sil ; ret 0xffbe
