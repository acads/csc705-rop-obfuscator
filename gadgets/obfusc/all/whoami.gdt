0x0000000000420bb0 : adc byte ptr [rbp - 1], al ; jmp qword ptr [rbx]
0x0000000000420f20 : adc byte ptr [rbp - 1], dh ; call rdx
0x0000000000420a20 : adc byte ptr [rcx - 2], al ; call qword ptr [rdx]
0x000000000041010e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040fa81 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041817b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410c0b : adc eax, 0x558abda1 ; ret
0x00000000004141e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042091b : add ah, ah ; add byte ptr [rax], al ; add al, ah ; sbb al, -2 ; call qword ptr [rcx]
0x000000000041c96a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000420f3c : add al, 7 ; add byte ptr [rax], al ; sal byte ptr [rbp - 1], 1 ; call qword ptr [rdx]
0x000000000042091f : add al, ah ; sbb al, -2 ; call qword ptr [rcx]
0x0000000000420f3f : add al, dl ; jne 0x420f46 ; call qword ptr [rdx]
0x0000000000417e54 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000410a49 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041fdaf : add bl, dh ; ret
0x0000000000401cf4 : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret
0x000000000041fa82 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000041fce4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000401cf5 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x00000000004151ab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004025cb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420bae : add byte ptr [rax], al ; adc byte ptr [rbp - 1], al ; jmp qword ptr [rbx]
0x0000000000420f1e : add byte ptr [rax], al ; adc byte ptr [rbp - 1], dh ; call rdx
0x0000000000420a1e : add byte ptr [rax], al ; adc byte ptr [rcx - 2], al ; call qword ptr [rdx]
0x0000000000420f3a : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; sal byte ptr [rbp - 1], 1 ; call qword ptr [rdx]
0x000000000042091d : add byte ptr [rax], al ; add al, ah ; sbb al, -2 ; call qword ptr [rcx]
0x0000000000417e52 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041fdad : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004025c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041fdab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400862 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403dfa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000400864 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040255e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000413c52 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416613 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041d03c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000418f79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041fa83 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000041fce5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000417dc0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041ee51 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041c1d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041df68 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040431b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bee5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000417d4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000416325 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004141eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413870 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041817d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d6e8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040117b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000420e36 : add byte ptr [rax], al ; cmp byte ptr [rbp - 1], dl ; jmp rsi
0x0000000000420a1a : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; adc byte ptr [rcx - 2], al ; call qword ptr [rdx]
0x0000000000420f1a : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], dh ; call rdx
0x0000000000420baa : add byte ptr [rax], al ; je 0x420bba ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], al ; jmp qword ptr [rbx]
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x000000000041fac8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403dfc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x00000000004025ca : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004018fa : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413c53 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400866 : add byte ptr [rax], al ; ret
0x0000000000420f3e : add byte ptr [rax], al ; sal byte ptr [rbp - 1], 1 ; call qword ptr [rdx]
0x0000000000420f1f : add byte ptr [rax], dl ; jne 0x420f26 ; call rdx
0x0000000000402560 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000413c54 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416615 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004165ca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041d03e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041fac9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000418f7b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000417ebe : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004015a8 : add byte ptr [rcx], al ; ret
0x000000000041fa85 : add byte ptr [rcx], al ; ret 0xea81
0x000000000041fce7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000417dc2 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000420f3b : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; sal byte ptr [rbp - 1], 1 ; call qword ptr [rdx]
0x000000000041ee53 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041c1d3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041df6a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040431d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bee7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000417d4c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000416327 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410b7c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041681d : add cl, ch ; ret
0x000000000041efd2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041de24 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e00e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015a4 : add eax, 0x220cd6 ; add ebx, esi ; ret
0x000000000040156b : add eax, edx ; sar rax, 1 ; jne 0x40157c ; pop rbp ; ret
0x00000000004015a9 : add ebx, esi ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000417ebc : add esp, 0x100 ; pop rbp ; ret
0x00000000004024a9 : add esp, 0x160 ; pop rbp ; ret
0x000000000041802c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000413873 : add esp, 0x20 ; pop rbp ; ret
0x0000000000418180 : add esp, 0x40 ; pop rbp ; ret
0x000000000041cb69 : add esp, 0x440 ; pop rbp ; ret
0x00000000004033a2 : add esp, 0x50 ; pop rbp ; ret
0x00000000004190a0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000415562 : add esp, 0x70 ; pop rbp ; ret
0x0000000000401c61 : add esp, 0x80 ; pop rbp ; ret
0x00000000004018f6 : add esp, 0x90 ; pop rbp ; ret
0x0000000000416346 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041414b : add esp, 0xb0 ; pop rbp ; ret
0x00000000004044fa : add esp, 0xd0 ; pop rbp ; ret
0x000000000041d28e : add esp, 0xe0 ; pop rbp ; ret
0x0000000000419f6f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000404b03 : add esp, 8 ; pop rbp ; ret
0x000000000040117e : add esp, 8 ; ret
0x000000000040156a : add rax, rdx ; sar rax, 1 ; jne 0x40157d ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000417ebb : add rsp, 0x100 ; pop rbp ; ret
0x00000000004024a8 : add rsp, 0x160 ; pop rbp ; ret
0x000000000041802b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000413872 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041817f : add rsp, 0x40 ; pop rbp ; ret
0x000000000041cb68 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004033a1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041909f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000415561 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401c60 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004018f5 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000416345 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041414a : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004044f9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041d28d : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000419f6e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000404b02 : add rsp, 8 ; pop rbp ; ret
0x000000000040117d : add rsp, 8 ; ret
0x0000000000401544 : and ah, byte ptr [rdx] ; jmp rax
0x0000000000401584 : and ah, byte ptr [rdx] ; jmp rdx
0x000000000041fa8d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041de23 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e00d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015a7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000418cab : and byte ptr [rsi + 0x58], ah ; jb 0x418ce2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040fdb1 : and eax, 0x75b4b9d3 ; ret
0x0000000000414f46 : call 0x4011d2
0x00000000004190a5 : call 0x419169
0x000000000041d5dd : call 0xffffffffaca29811
0x000000000041d5dc : call 0xffffffffaca29812
0x0000000000413869 : call 0xffffffffe903c1b9
0x0000000000413868 : call 0xffffffffe903c1ba
0x000000000041fd89 : call qword ptr [r12 + rbx*8]
0x0000000000403e02 : call qword ptr [rax]
0x000000000041502e : call qword ptr [rbx]
0x000000000041cc0c : call qword ptr [rcx]
0x0000000000412cf4 : call qword ptr [rdi]
0x000000000040ecdb : call qword ptr [rdx]
0x000000000041fd8a : call qword ptr [rsp + rbx*8]
0x00000000004015cd : call rax
0x0000000000410f5b : call rcx
0x0000000000412934 : call rdi
0x0000000000412165 : call rdx
0x000000000040250b : call rsp
0x000000000041cb67 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000418407 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004194f9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040156f : clc ; jne 0x401578 ; pop rbp ; ret
0x00000000004151af : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040633d : clc ; ret 0x77a8
0x00000000004024a7 : cld ; add rsp, 0x160 ; pop rbp ; ret
0x000000000041dc1e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000419f6d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040258f : cld ; jmp 0x4025fc
0x000000000040258e : cld ; jmp 0x4025fd
0x0000000000418cb0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041fa8c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000417bcb : cmc ; ret 0x4f0b
0x00000000004205ed : cmp al, -1 ; jmp qword ptr [rax]
0x0000000000420e38 : cmp byte ptr [rbp - 1], dl ; jmp rsi
0x0000000000417d61 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000040152d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401540 ; pop rbp ; ret
0x0000000000410c07 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000041010b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040fa7e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000410283 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000418ddd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041c6c6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000416e9b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417bc6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040601a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041c4f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041c149 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404319 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041e048 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041cd27 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041cd28 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000041fd8c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d28c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404b01 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401540 : hlt ; pop rbp ; mov edi, 0x622238 ; jmp rax
0x0000000000418ddb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004198b1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000420a1c : in al, 1 ; add byte ptr [rax], al ; adc byte ptr [rcx - 2], al ; call qword ptr [rdx]
0x0000000000420f1c : in al, 6 ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], dh ; call rdx
0x000000000041d69c : in al, dx ; jmp 0x41d719
0x000000000041d69b : in al, dx ; jmp 0x41d71a
0x00000000004025ce : in al, dx ; pop rbp ; ret
0x0000000000403d61 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000415d17 : int 0x5b
0x0000000000401533 : ja 0x40153a ; pop rbp ; ret
0x0000000000418cae : jb 0x418cdf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040153f : je 0x40153d ; pop rbp ; mov edi, 0x622238 ; jmp rax
0x0000000000420bac : je 0x420bb8 ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], al ; jmp qword ptr [rbx]
0x000000000040f1a6 : jge 0x40f12b ; ret 0xffd5
0x000000000040fc70 : jge 0x40fc50 ; shr cl, cl ; ret 0x3b
0x00000000004012fb : jmp 0x401197
0x0000000000402590 : jmp 0x4025fb
0x00000000004103c0 : jmp 0x413840
0x000000000040e2c4 : jmp 0x413841
0x000000000040f691 : jmp 0x413842
0x0000000000416feb : jmp 0x417a57
0x0000000000416f28 : jmp 0x417a59
0x0000000000419053 : jmp 0x4190b8
0x000000000041ca06 : jmp 0x41cce8
0x000000000041d69d : jmp 0x41d718
0x0000000000417bca : jmp 0x4f4d3ec6
0x0000000000413195 : jmp qword ptr [rax]
0x0000000000420bb3 : jmp qword ptr [rbx]
0x0000000000404f92 : jmp qword ptr [rcx]
0x0000000000410e47 : jmp qword ptr [rdi]
0x0000000000417e5a : jmp qword ptr [rdx]
0x0000000000401547 : jmp rax
0x000000000040f798 : jmp rbx
0x00000000004101ca : jmp rcx
0x000000000040f7f2 : jmp rdi
0x0000000000401587 : jmp rdx
0x0000000000420e3b : jmp rsi
0x000000000040faa8 : jmp rsp
0x0000000000401570 : jne 0x401577 ; pop rbp ; ret
0x0000000000420f21 : jne 0x420f24 ; call rdx
0x0000000000420f41 : jne 0x420f44 ; call qword ptr [rdx]
0x00000000004090be : jo 0x4090ca ; ret
0x000000000040ad2e : jo 0x40ad3a ; ret
0x000000000040e27d : jo 0x40e289 ; ret
0x0000000000415564 : jo 0x4155c5 ; ret
0x000000000040fc6e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000410d6e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000402d96 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403ed3 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415859 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403ed2 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e5ce : ljmp ptr [rdi] ; ret 0x23da
0x00000000004115d5 : loope 0x4115a3 ; jmp 0x413843
0x00000000004059b3 : loopne 0x405a06 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414f5d : loopne 0x414fc3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416344 : loopne 0x416397 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000418713 : loopne 0x41871c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041909e : loopne 0x4190ee ; add esp, 0x60 ; pop rbp ; ret
0x000000000041909d : loopne 0x4190ef ; add esp, 0x60 ; pop rbp ; ret
0x000000000041d290 : loopne 0x41d297 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041dc22 : loopne 0x41dc29 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041facc : loopne 0x41fb1b ; mov esp, ebp ; pop rbp ; ret
0x000000000041facb : loopne 0x41fb1c ; mov esp, ebp ; pop rbp ; ret
0x000000000041fd1c : loopne 0x41fd6b ; mov esp, ebp ; pop rbp ; ret
0x000000000041fd1b : loopne 0x41fd6c ; mov esp, ebp ; pop rbp ; ret
0x000000000040f19d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f277 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040d225 : mov ah, 0x75 ; ret
0x0000000000415d33 : mov al, -0x47 ; ret
0x000000000041c1cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041414d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e33d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e00a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e26d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406bc5 : mov bl, 0x75 ; ret
0x00000000004015a3 : mov byte ptr [rip + 0x220cd6], 1 ; ret
0x000000000040ea1f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041efd4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041de26 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e010 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041fa8a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041ed01 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000405139 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404d0f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d69a : mov dword ptr [rbp - 0x14], eax ; jmp 0x41d71b
0x0000000000414f40 : mov dword ptr [rbp - 0x1cc], ecx ; call 0x4011d8
0x0000000000416fe8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x417a5a
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405416 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404fbd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404839 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000418f1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004190ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040339e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041d515 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040513c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041909c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041faca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403dff : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000404fbf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404aff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x00000000004151ad : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404fbe : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004119d8 : mov ebp, 0xe19c53ba ; ret
0x00000000004015cb : mov ebp, esp ; call rax
0x0000000000401531 : mov ebp, esp ; ja 0x40153c ; pop rbp ; ret
0x0000000000404d0c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403df9 : mov edi, 0 ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x00000000004015c5 : mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x0000000000401542 : mov edi, 0x622238 ; jmp rax
0x0000000000401582 : mov edi, 0x622238 ; jmp rdx
0x000000000040e277 : mov edi, 0xb8000055 ; wait ; jo 0x40e28f ; ret
0x000000000041fd87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041fd86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041c97e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040ea3b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040f8b2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041c967 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401580 : mov esi, eax ; mov edi, 0x622238 ; jmp rdx
0x00000000004025cd : mov esp, ebp ; pop rbp ; ret
0x0000000000405415 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404838 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000418f1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004190ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040339d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041909b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403dfe : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x00000000004151ac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004015ca : mov rbp, rsp ; call rax
0x0000000000401530 : mov rbp, rsp ; ja 0x40153d ; pop rbp ; ret
0x000000000040157f : mov rsi, rax ; mov edi, 0x622238 ; jmp rdx
0x00000000004025cc : mov rsp, rbp ; pop rbp ; ret
0x0000000000418cb1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000403bf5 : movabs byte ptr [0x8348e2894853b517], al ; ret 0x48f0
0x000000000040a518 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040d765 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041efd3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041de25 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e00f : movzx eax, al ; pop rbp ; ret
0x000000000041c778 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000406a05 : nop ; ret
0x0000000000414e12 : nop ; ret 0x148
0x0000000000414e26 : nop ; ret 0x2948
0x000000000041fda8 : nop dword ptr [rax + rax] ; ret
0x00000000004015a6 : or al, 0x22 ; add byte ptr [rcx], al ; ret
0x000000000040f19a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f274 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404d10 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000400860 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004165c8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000410286 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000405414 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404fbb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401cf2 : out -2, al ; add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000410b7b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041e00c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e33f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415d32 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041c969 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000411c65 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004068b6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000411cb0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000417e51 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041c96c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000418cac : pop ax ; jb 0x418ce1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000412b19 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fd9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414f5f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412b1b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fd9e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412b1d : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fda0 : pop r14 ; pop r15 ; ret
0x0000000000403ed7 : pop r14 ; pop rbp ; ret
0x0000000000412b1f : pop r15 ; pop rbp ; ret
0x000000000041fda2 : pop r15 ; ret
0x0000000000418cad : pop rax ; jb 0x418ce0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004015a2 : pop rbp ; mov byte ptr [rip + 0x220cd6], 1 ; ret
0x0000000000401541 : pop rbp ; mov edi, 0x622238 ; jmp rax
0x000000000040157e : pop rbp ; mov rsi, rax ; mov edi, 0x622238 ; jmp rdx
0x000000000041fd9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412b1c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fd9f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040ea22 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040acf5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000040ea3e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401535 : pop rbp ; ret
0x0000000000414f5e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413c55 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403ed6 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004165d0 : pop rbx ; ret
0x000000000040ea23 : pop rcx ; ret 0x1b2
0x00000000004090f6 : pop rcx ; ret 0x8589
0x000000000040ea3f : pop rcx ; ret 0x8b48
0x0000000000410d70 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000412b20 : pop rdi ; pop rbp ; ret
0x000000000041fda3 : pop rdi ; ret
0x0000000000412b1e : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041fda1 : pop rsi ; pop r15 ; ret
0x0000000000403ed8 : pop rsi ; pop rbp ; ret
0x0000000000412b1a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fd9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414f60 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004090f5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000041ee55 : popfq ; ret 0xd284
0x000000000040ea20 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000410c0a : push -0x75425eeb ; push rbp ; ret
0x000000000040d768 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004033a4 : push rax ; pop rbp ; ret
0x00000000004015c4 : push rbp ; mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x0000000000410c0f : push rbp ; ret
0x0000000000410ba6 : push rbp ; ret 0xd284
0x000000000040f19f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f279 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041c96b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041c1d5 : pushfq ; ret 0xd284
0x0000000000400868 : ret
0x000000000040601e : ret 0
0x0000000000414e13 : ret 0x148
0x0000000000411d74 : ret 0x1a
0x0000000000406fed : ret 0x1add
0x000000000040ea25 : ret 0x1b2
0x0000000000401302 : ret 0x220d
0x000000000040793a : ret 0x23da
0x0000000000414638 : ret 0x279e
0x0000000000410289 : ret 0x2948
0x0000000000410d74 : ret 0x2a
0x000000000040f1a2 : ret 0x2d50
0x000000000041cbc8 : ret 0x2e8
0x000000000041c4ce : ret 0x3040
0x000000000040fc74 : ret 0x3b
0x000000000040ccd5 : ret 0x3e
0x0000000000410111 : ret 0x4802
0x000000000041c96e : ret 0x4815
0x0000000000403802 : ret 0x485b
0x0000000000411c66 : ret 0x4861
0x0000000000403c6e : ret 0x48e0
0x0000000000402b18 : ret 0x48f0
0x000000000040a521 : ret 0x4b
0x0000000000415b37 : ret 0x4cc0
0x0000000000412b78 : ret 0x4cf0
0x0000000000417bcc : ret 0x4f0b
0x0000000000404f6b : ret 0x5589
0x000000000040f42a : ret 0x5966
0x0000000000416827 : ret 0x5bc6
0x000000000041fa8f : ret 0x61
0x0000000000406686 : ret 0x6a8a
0x000000000040633e : ret 0x77a8
0x00000000004074a1 : ret 0x7a8a
0x000000000040e11b : ret 0x7b7f
0x0000000000414aca : ret 0x8041
0x0000000000414d12 : ret 0x8141
0x000000000041c6c9 : ret 0x8148
0x0000000000410034 : ret 0x822d
0x0000000000403d65 : ret 0x8445
0x00000000004090dc : ret 0x8589
0x00000000004070b3 : ret 0x8940
0x000000000040337b : ret 0x8948
0x000000000041af8f : ret 0x894a
0x00000000004068b7 : ret 0x8961
0x000000000041c588 : ret 0x8a44
0x000000000041c485 : ret 0x8a4a
0x000000000040ea41 : ret 0x8b48
0x000000000040f27c : ret 0xa30b
0x000000000041d5df : ret 0xac60
0x0000000000416e9e : ret 0xb0
0x0000000000410b80 : ret 0xb740
0x0000000000418ca7 : ret 0xb848
0x000000000040edb0 : ret 0xb940
0x000000000041c412 : ret 0xb94a
0x00000000004111fc : ret 0xbf48
0x0000000000401565 : ret 0xc148
0x000000000041fcd2 : ret 0xc493
0x000000000041dfc9 : ret 0xca21
0x000000000041fa95 : ret 0xccb2
0x0000000000404320 : ret 0xd284
0x000000000041abd5 : ret 0xd618
0x000000000041ef7b : ret 0xe280
0x0000000000410a52 : ret 0xe940
0x0000000000411cb1 : ret 0xe961
0x0000000000407add : ret 0xea51
0x000000000041fa87 : ret 0xea81
0x000000000041386c : ret 0xee8
0x0000000000404fa5 : ret 0xf281
0x000000000040f8b7 : ret 0xf41
0x0000000000411805 : ret 0xf7f3
0x000000000040ff8e : ret 0xfc75
0x000000000041877a : ret 0xfe8c
0x00000000004117ff : ret 0xffa5
0x000000000040ff88 : ret 0xffc4
0x000000000040f1a8 : ret 0xffd5
0x000000000040f282 : ret 0xffd8
0x000000000041003a : ret 0xffd9
0x000000000040f424 : ret 0xffe0
0x000000000040e115 : ret 0xfffa
0x0000000000414f48 : ret 0xfffe
0x000000000040f8f0 : ret 1
0x000000000040fe20 : ret 2
0x0000000000412f74 : ret 8
0x000000000041c94d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041946c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004044fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004205d8 : rol byte ptr [rip + 0x33600000], -1 ; jmp rax
0x000000000041c94c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000418ca4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040156c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40157b ; pop rbp ; ret
0x000000000041de27 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000404fba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041c77e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004159f0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041df6c : sahf ; ret 0xd284
0x0000000000420f40 : sal byte ptr [rbp - 1], 1 ; call qword ptr [rdx]
0x00000000004015a5 : salc ; or al, 0x22 ; add byte ptr [rcx], al ; ret
0x000000000040156e : sar eax, 1 ; jne 0x401579 ; pop rbp ; ret
0x0000000000410d71 : sar ebp, -0x17 ; ret 0x2a
0x000000000040156d : sar rax, 1 ; jne 0x40157a ; pop rbp ; ret
0x0000000000420921 : sbb al, -2 ; call qword ptr [rcx]
0x0000000000415d30 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000410c71 : sbb cl, ch ; ret
0x00000000004184f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414d80 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040fc72 : shr cl, cl ; ret 0x3b
0x000000000040daad : stc ; ret 0x77a8
0x0000000000414637 : std ; ret 0x279e
0x00000000004026de : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d6e6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025c8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f1a5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000040f19b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f275 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000410035 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000418caf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041fddd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041fddc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f1a0 : test al, -0x7f ; ret 0x2d50
0x000000000040f27a : test al, -0x7f ; ret 0xa30b
0x000000000041c223 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041540e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004119d6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000417d48 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041fdaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040601c : test byte ptr [rcx], ch ; ret 0
0x0000000000406016 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004178f3 : test dword ptr [rax - 0x17000004], ebp ; ret
0x0000000000417e56 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041502a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000410a4b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000411caa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040d76a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000411c5f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040fc6f : wait ; jge 0x40fc51 ; shr cl, cl ; ret 0x3b
0x000000000040ad2d : wait ; jo 0x40ad3b ; ret
0x000000000040e27c : wait ; jo 0x40e28a ; ret
0x000000000041c968 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403d64 : xchg eax, ebp ; ret 0x8445
0x000000000040431f : xchg eax, ebp ; ret 0xd284
0x00000000004068b5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040d1b5 : xchg eax, ebx ; ret
0x000000000040d3e5 : xchg eax, ecx ; ret
0x000000000041bee9 : xchg eax, edi ; ret 0xd284
0x0000000000406c35 : xchg eax, edx ; ret
0x0000000000414adf : xchg eax, edx ; ret 0x8445
0x0000000000417d4e : xchg eax, edx ; ret 0xd284
0x0000000000416fea : xchg eax, esp ; jmp 0x417a58
0x0000000000416f27 : xchg eax, esp ; jmp 0x417a5a
0x0000000000411c64 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040d535 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000411caf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000414ac9 : xchg eax, esp ; ret 0x8041
0x0000000000410b7e : xchg eax, esp ; ret 0xb740
0x0000000000416329 : xchg eax, esp ; ret 0xd284
0x0000000000416fe9 : xchg eax, r12d ; jmp 0x417a59
0x0000000000401cf8 : xor al, 0x25 ; ret
0x0000000000410b79 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000405417 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405418 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004205dd : xor edi, edi ; jmp rax
