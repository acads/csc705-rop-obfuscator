0x0000000000470b22 : adc al, -0x47 ; mov dl, 0x62 ; ret
0x00000000004404bd : adc al, -0x47 ; ret
0x0000000000430792 : adc al, 0x25 ; push rax ; mov byte ptr [rax + rax - 0x18], ch ; ret
0x00000000004b6c98 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x0000000000448673 : adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x00000000004adad3 : adc byte ptr [rbp - 8], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424a4d : adc byte ptr [rbx + rcx*4 + 0x5f], al ; sbb byte ptr [rcx - 0x7f], al ; ret
0x0000000000492e9f : adc byte ptr [rcx + 0x50], bh ; ret 0x8589
0x00000000004a424b : adc byte ptr [rcx + 0x50], bh ; ret 0xd4b9
0x00000000004275e6 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043d21c : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000473d8f : adc ch, cl ; ret
0x00000000004b7ff2 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000004586ea : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000046936c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000045e61d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000044ddc5 : adc cl, byte ptr [rax - 0x7f] ; ret 5
0x0000000000411722 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000411bf0 : adc cl, byte ptr [rax - 1] ; ret 0xabe
0x00000000004584d4 : adc cl, byte ptr [rax - 9] ; fimul dword ptr [rax + 0x29] ; ret 0xf748
0x000000000044f460 : adc dh, dh ; ret 0x89ea
0x00000000004569fd : adc dl, byte ptr [rdx - 0x1464ade] ; ret
0x00000000004c5f1d : adc dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; clc ; call rdi
0x00000000004af90b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004c43e5 : adc dword ptr [rax], eax ; add byte ptr [rbx + rbx*2 - 9], cl ; call rsp
0x0000000000449898 : adc dword ptr [rbx], eax ; ret 0x43e9
0x0000000000449637 : adc dword ptr [rbx], eax ; ret 0x4589
0x0000000000449836 : adc dword ptr [rbx], eax ; ret 0xa5e9
0x00000000004069a1 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x0000000000476027 : adc dword ptr [rdx], ebx ; jmp 0xffffffffc248a8d5
0x000000000048779b : adc eax, 0x558abda1 ; ret
0x00000000004a3d96 : adc eax, 0x58b90f17 ; ret 0xb2ee
0x00000000004c62fd : adc eax, 0x7c000000 ; stc ; call qword ptr [rdx]
0x00000000004679c3 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x000000000048ad79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d7f : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045443b : adc eax, ebp ; js 0x45442c ; ret
0x000000000045488f : adc ebp, ecx ; ret 0
0x0000000000410cb2 : adc edi, dword ptr [rax + 0xdb986a3] ; ret 0x762c
0x00000000004c4329 : adc esi, esi ; call rsp
0x000000000044f4ab : adc esi, esi ; ret 0x89ea
0x00000000004509e8 : adc esi, esi ; ret 0xb9ea
0x00000000004c62fc : adc rax, 0x7c000000 ; stc ; call qword ptr [rdx]
0x00000000004c45a7 : add ah, bh ; clc ; call rsp
0x00000000004c68ab : add ah, bh ; sbb al, byte ptr [rax] ; add byte ptr [rax - 2], al ; cli ; call qword ptr [rdx]
0x00000000004c42e7 : add ah, bl ; mov bl, -0xb ; call rsp
0x00000000004c47a7 : add ah, bl ; pushfq ; stc ; call rsp
0x00000000004c519b : add ah, ch ; add eax, dword ptr [rax] ; add al, dh ; and al, 0xfffffffffffffff6 ; call qword ptr [rdx]
0x00000000004c4bc7 : add ah, ch ; ret
0x00000000004c70a3 : add ah, dh ; and al, byte ptr [rax] ; add al, cl ; cld ; call qword ptr [rdx]
0x00000000004c7083 : add ah, dl ; and al, byte ptr [rax] ; add al, cl ; cld ; call qword ptr [rdx]
0x00000000004a99c5 : add al, -0x17 ; mov ecx, 0xb8000031 ; jmp rsi
0x0000000000477397 : add al, -0x47 ; mov ah, 0x3a ; ret
0x000000000043d7fb : add al, -0xa ; ret
0x0000000000479f48 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x0000000000460cd0 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000041eab1 : add al, 0 ; add cl, ch ; ret 1
0x000000000042ee9b : add al, 0 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004be35a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004c6c1f : add al, ah ; push rcx ; cld ; call rdi
0x00000000004a5588 : add al, bh ; test dword ptr [rdx + rdi*8 - 0x70b00001], eax ; ret 0xe9f9
0x0000000000439018 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x000000000044be28 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046be37 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x00000000004c505d : add al, byte ptr [rax] ; add byte ptr [rax], dh ; cmc ; cmc ; jmp qword ptr [rdi]
0x00000000004b47cb : add al, byte ptr [rax] ; add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x00000000004b4799 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000044a8ea : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bd24bbb], cl ; ret 0xec45
0x0000000000426a7d : add al, byte ptr [rax] ; add byte ptr [rbx - 0xed26bbb], cl ; pop rsp ; ret 0x8940
0x000000000042d803 : add al, byte ptr [rax] ; add cl, ch ; ret
0x000000000041ddc7 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000430797 : add al, ch ; ret
0x00000000004b2b78 : add al, ch ; ret 0xf4f5
0x000000000048bf38 : add al, ch ; ret 0xf75f
0x000000000042b318 : add al, ch ; ret 0xfd71
0x0000000000406468 : add al, ch ; ret 0xffbd
0x00000000004c7087 : add al, cl ; cld ; call qword ptr [rdx]
0x00000000004c519f : add al, dh ; and al, 0xfffffffffffffff6 ; call qword ptr [rdx]
0x00000000004c5a5f : add al, dl ; add edi, eax ; jmp qword ptr [rdi]
0x00000000004c4dcf : add al, dl ; sal bl, 1 ; call rax
0x00000000004c69cf : add al, dl ; sti ; jmp qword ptr [rsi]
0x00000000004b2b77 : add al, r13b ; ret 0xf4f5
0x0000000000462628 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x00000000004c4529 : add bh, al ; call rsp
0x0000000000449893 : add bh, al ; in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0x43e9
0x0000000000430b91 : add bh, al ; in al, dx ; ret
0x0000000000469388 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000042693c : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0x8b40
0x0000000000426f80 : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0xe940
0x000000000043922e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdx
0x0000000000423ca4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x00000000004244d4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rdi]
0x000000000043901a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x000000000042425e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x00000000004b3f21 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004b3ee0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004397ef : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004af5e4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000479f4a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x000000000043bca2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000464e8f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004300cd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdx
0x00000000004b7cc3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000045a840 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004a046f : add bh, al ; test dword ptr [rdx + rdi*8 + 0x7528ffff], eax ; ret
0x00000000004875d9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000046dcd2 : add bh, al ; test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x00000000004679c5 : add bh, al ; xchg eax, r12d ; int 6
0x00000000004515a7 : add bh, al ; xchg eax, r12d ; ret 0x48b7
0x00000000004bf6ff : add bl, dh ; ret
0x0000000000461794 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004bac72 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004baed4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000443bed : add byte ptr [r8], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004c5b5f : add byte ptr [rax + 0x1d], dl ; clc ; jmp qword ptr [rsi]
0x0000000000465ebd : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004c5c1f : add byte ptr [rax + 0x2d], ah ; clc ; call qword ptr [rsi]
0x00000000004c5c3f : add byte ptr [rax + 0x2f], ah ; clc ; jmp rdi
0x00000000004c5d3f : add byte ptr [rax + 0x47], ah ; clc ; jmp rsi
0x000000000041a140 : add byte ptr [rax + 0x558801e2], al ; ret
0x000000000041a0df : add byte ptr [rax + 0x558801e2], al ; ret 0x1b2
0x00000000004c6d1f : add byte ptr [rax + 0x55], dh ; cld ; call rdx
0x000000000046f12d : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004c4a1f : add byte ptr [rax + rax*4 - 4], cl ; call rsp
0x000000000042ee5f : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x00000000004c4dcb : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; rcl al ; call rax
0x00000000004c4827 : add byte ptr [rax + rbp*8 - 7], ch ; call rsp
0x00000000004c561b : add byte ptr [rax + rcx], ch ; add byte ptr [rax - 0x65], ah ; idiv edi ; ret 8
0x00000000004c46e7 : add byte ptr [rax + rdi*8], bl ; clc ; call rsp
0x00000000004c649f : add byte ptr [rax - 0x4d], al ; stc ; jmp rbx
0x00000000004c561f : add byte ptr [rax - 0x65], ah ; idiv edi ; ret 8
0x000000000040680a : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000046956b : add byte ptr [rax - 0x75], cl ; call 0x49091ec3
0x000000000044bba3 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000458c34 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000477529 : add byte ptr [rax - 0x75], cl ; rol r15b, 1 ; xchg eax, r12d ; push rbx ; ret
0x00000000004723a4 : add byte ptr [rax - 0x75], cl ; test al, 0x48 ; mov esp, ebp ; pop rbp ; ret
0x000000000041579a : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042258e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x6b ; ret 0xb041
0x0000000000422699 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000046be39 : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x00000000004c5f1f : add byte ptr [rax - 0x80], al ; clc ; call rdi
0x0000000000405edf : add byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004c68af : add byte ptr [rax - 2], al ; cli ; call qword ptr [rdx]
0x000000000045d9ee : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000456783 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004c62fa : add byte ptr [rax], al ; adc rax, 0x7c000000 ; stc ; call qword ptr [rdx]
0x000000000048bf36 : add byte ptr [rax], al ; add al, ch ; ret 0xf75f
0x00000000004c4dcd : add byte ptr [rax], al ; add al, dl ; sal bl, 1 ; call rax
0x0000000000449891 : add byte ptr [rax], al ; add bh, al ; in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0x43e9
0x0000000000430b8f : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret
0x0000000000469386 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000042693a : add byte ptr [rax], al ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0x8b40
0x0000000000426f7e : add byte ptr [rax], al ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0xe940
0x000000000043922c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdx
0x00000000004244d2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rdi]
0x00000000004b3f1f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004af5e2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043bca0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x00000000004b7cc1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000045a83e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004515a5 : add byte ptr [rax], al ; add bh, al ; xchg eax, r12d ; ret 0x48b7
0x00000000004bf6fd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000465ebb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000046f12b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000469569 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49091ec5
0x0000000000458c32 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000415798 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004bf6fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000048d86a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004008e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400778 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000004008e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040077a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000043ab55 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042ee14 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405a7f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004059a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415dbe : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004639fb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004008e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040077c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000004b86d2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000405d11 : add byte ptr [rax], al ; add byte ptr [rbp + 1], al ; rol dword ptr [rcx - 0x77], 1 ; ret 0x2945
0x0000000000456784 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000044c320 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1d2da445], cl ; ret 0x323c
0x0000000000468f0b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x00000000004690a9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000445931 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2ddc45], cl ; ret
0x00000000004549ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000445a91 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2e2ddc45], cl ; ret
0x0000000000440621 : add byte ptr [rax], al ; add byte ptr [rbx + 0x342db445], cl ; ret
0x0000000000440832 : add byte ptr [rax], al ; add byte ptr [rbx + 0x352db445], cl ; ret
0x000000000041e617 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2de845], cl ; push rsp ; ret
0x0000000000473ad2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x000000000041d967 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412da845], cl ; ret 0x37e8
0x000000000048a7e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000456deb : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041dead : add byte ptr [rax], al ; add byte ptr [rbx + 0x422da845], cl ; ret 0x37e8
0x0000000000460042 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000046016e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000426ae1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x452d9445], cl ; ret
0x0000000000426c0d : add byte ptr [rax], al ; add byte ptr [rbx + 0x462d9445], cl ; ret
0x00000000004b48c5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x000000000044c6bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x562de845], cl ; ret 0x1a45
0x000000000043e8a4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2dbc45], cl ; ret
0x0000000000413b98 : add byte ptr [rax], al ; add byte ptr [rbx + 0x722da045], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000048d682 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x00000000004474ce : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d223bb], cl ; ret
0x000000000044c981 : add byte ptr [rax], al ; add byte ptr [rbx - 0x19d23bbb], cl ; xchg eax, ebp ; ret 0x890e
0x000000000044c8fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x1ad23bbb], cl ; xchg eax, ebp ; ret 0x890e
0x00000000004568fa : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x000000000044ec3e : add byte ptr [rax], al ; add byte ptr [rbx - 0x20d26fbb], cl ; jmp rsi
0x00000000004adda3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000045d47a : add byte ptr [rax], al ; add byte ptr [rbx - 0x2fd213bb], cl ; std ; ret
0x000000000045d39e : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d213bb], cl ; std ; ret
0x000000000046118e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000451682 : add byte ptr [rax], al ; add byte ptr [rbx - 0x45d213bb], cl ; ret
0x0000000000447b97 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48d23bbb], cl ; ret
0x000000000045ab47 : add byte ptr [rax], al ; add byte ptr [rbx - 0x52d22bbb], cl ; ret 0x89af
0x00000000004bea2c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004b47e4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x00000000004b0709 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000044a935 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ad24bbb], cl ; ret 0xec45
0x000000000041df11 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ad257bb], cl ; ret
0x000000000041d909 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bd257bb], cl ; ret
0x0000000000426c71 : add byte ptr [rax], al ; add byte ptr [rbx - 0xdd26bbb], cl ; pop rsp ; ret 0x8940
0x000000000045a6e4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000042c2a5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405bc7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; sahf ; ret
0x00000000004a2ba9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000406117 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000047a02a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000040e97a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000046ff0c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004bac73 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004052f5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x00000000004baed5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000412341 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004a456c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000478eb5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042ee16 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041c525 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004b2b37 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405587 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415b53 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004bd8d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004500d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405716 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000449b77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004b41eb : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004b7f52 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000048ad7b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043d6fe : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425504 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044b429 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415dc0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428027 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401e93 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c5f9e : add byte ptr [rax], al ; and ah, al ; clc ; jmp qword ptr [rax]
0x00000000004c71d2 : add byte ptr [rax], al ; and al, 0x24 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 2], bl ; call rdi
0x00000000004c5fbe : add byte ptr [rax], al ; and dh, cl ; clc ; call qword ptr [rax]
0x0000000000475526 : add byte ptr [rax], al ; call 0x402079
0x00000000004050ca : add byte ptr [rax], al ; call 0x402408
0x00000000004c45a6 : add byte ptr [rax], al ; cld ; clc ; call rsp
0x00000000004c68aa : add byte ptr [rax], al ; cld ; sbb al, byte ptr [rax] ; add byte ptr [rax - 2], al ; cli ; call qword ptr [rdx]
0x00000000004c45e6 : add byte ptr [rax], al ; cmp al, 0x47 ; clc ; call rsp
0x00000000004c70a2 : add byte ptr [rax], al ; hlt ; and al, byte ptr [rax] ; add al, cl ; cld ; call qword ptr [rdx]
0x00000000004c519a : add byte ptr [rax], al ; in al, dx ; add eax, dword ptr [rax] ; add al, dh ; and al, 0xfffffffffffffff6 ; call qword ptr [rdx]
0x00000000004c4bc6 : add byte ptr [rax], al ; in al, dx ; ret
0x00000000004c5f1a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; clc ; call rdi
0x00000000004c631a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc eax, 0x7c000000 ; stc ; call qword ptr [rdx]
0x00000000004c4526 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add bh, al ; call rsp
0x00000000004c4866 : add byte ptr [rax], al ; jl 0x4c48a9 ; cli ; call rsp
0x00000000004c4966 : add byte ptr [rax], al ; jl 0x4c49e3 ; sti ; jmp rsp
0x00000000004c62ff : add byte ptr [rax], al ; jl 0x4c6300 ; call qword ptr [rdx]
0x00000000004c631f : add byte ptr [rax], al ; jl 0x4c6320 ; call qword ptr [rdx]
0x00000000004c6a2a : add byte ptr [rax], al ; jl 0x4c6a53 ; add byte ptr [rax], al ; nop ; sti ; call qword ptr [rdx]
0x0000000000401fe9 : add byte ptr [rax], al ; jmp 0x401ea9
0x0000000000439a1d : add byte ptr [rax], al ; jmp 0x439abc
0x0000000000441214 : add byte ptr [rax], al ; jmp 0x441608
0x00000000004932d5 : add byte ptr [rax], al ; jmp 0x49f5ac
0x00000000004b41e7 : add byte ptr [rax], al ; jmp 0x4b41f6
0x00000000004b7f4e : add byte ptr [rax], al ; jmp 0x4b7f5d
0x00000000004b8663 : add byte ptr [rax], al ; jmp 0x4b8672
0x00000000004b87c5 : add byte ptr [rax], al ; jmp 0x4b87d4
0x00000000004b8a33 : add byte ptr [rax], al ; jmp 0x4b8a42
0x00000000004c6d1e : add byte ptr [rax], al ; jo 0x4c6d7c ; cld ; call rdx
0x00000000004c505a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], dh ; cmc ; cmc ; jmp qword ptr [rdi]
0x00000000004c4666 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4c4668 ; call rsp
0x00000000004c5a5a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, 0 ; add al, dl ; add edi, eax ; jmp qword ptr [rdi]
0x00000000004c5b5a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, 0x1d500000 ; clc ; jmp qword ptr [rsi]
0x00000000004c5d5a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sldt word ptr [rax] ; xor byte ptr [rdx - 8], cl ; call rdi
0x00000000004c6c1e : add byte ptr [rax], al ; loopne 0x4c6c78 ; cld ; call rdi
0x00000000004c649e : add byte ptr [rax], al ; mov bl, -7 ; jmp rbx
0x00000000004b428f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004bacb8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ad568 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000045d084 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ece0 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048cf1a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000048d34d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000048d5c9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000048d1a1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004c739f : add byte ptr [rax], al ; mov esi, edi ; call qword ptr [rdx]
0x0000000000476b81 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000046167f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000458c33 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415799 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c737e : add byte ptr [rax], al ; mov sil, dil ; call rdx
0x00000000004c6d3a : add byte ptr [rax], al ; mov word ptr [rdi], ds ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], dl ; call qword ptr [rbx]
0x00000000004c759e : add byte ptr [rax], al ; nop ; or edi, edi ; jmp rcx
0x00000000004c6bbe : add byte ptr [rax], al ; nop ; push rax ; cld ; jmp qword ptr [rbx]
0x00000000004c6a2e : add byte ptr [rax], al ; nop ; sti ; call qword ptr [rdx]
0x00000000004c5fba : add byte ptr [rax], al ; or al, 0x12 ; add byte ptr [rax], al ; and dh, cl ; clc ; call qword ptr [rax]
0x00000000004c4726 : add byte ptr [rax], al ; or al, 0x1c ; stc ; call rsp
0x00000000004c6bba : add byte ptr [rax], al ; or al, 0x1e ; add byte ptr [rax], al ; nop ; push rax ; cld ; jmp qword ptr [rbx]
0x0000000000406d81 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000048a7e3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456dec : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000047028e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c4e36 : add byte ptr [rax], al ; push -0x4d000be1 ; ret 0
0x00000000004c6e02 : add byte ptr [rax], al ; push rsp ; and byte ptr [rax], al ; add byte ptr [rax], bl ; pop rsp ; cld ; jmp qword ptr [rbx]
0x00000000004c4dce : add byte ptr [rax], al ; rcl al ; call rax
0x00000000004008e6 : add byte ptr [rax], al ; ret
0x000000000040077e : add byte ptr [rax], al ; ret 3
0x00000000004c69ce : add byte ptr [rax], al ; rol byte ptr [rbp - 5], 1 ; jmp qword ptr [rsi]
0x00000000004c5a5e : add byte ptr [rax], al ; rol byte ptr [rbx], 1 ; clc ; jmp qword ptr [rdi]
0x00000000004c48e6 : add byte ptr [rax], al ; sbb al, -0x11 ; cli ; jmp rsp
0x00000000004c46a6 : add byte ptr [rax], al ; sbb al, -0x63 ; clc ; call rsp
0x00000000004c46e6 : add byte ptr [rax], al ; sbb al, -8 ; clc ; call rsp
0x00000000004c4dca : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; rcl al ; call rax
0x00000000004c69ca : add byte ptr [rax], al ; sbb al, 0x1c ; add byte ptr [rax], al ; rol byte ptr [rbp - 5], 1 ; jmp qword ptr [rsi]
0x00000000004c4766 : add byte ptr [rax], al ; sbb al, 0x4a ; stc ; call rsp
0x00000000004c71d6 : add byte ptr [rax], al ; sbb byte ptr [rdi - 2], bl ; call rdi
0x00000000004c5e1e : add byte ptr [rax], al ; shl byte ptr [rdx - 8], 1 ; jmp rsp
0x00000000004c609e : add byte ptr [rax], al ; shr cl, 1 ; clc ; call qword ptr [rcx]
0x00000000004c47e6 : add byte ptr [rax], al ; sub al, -0x3e ; stc ; call rsp
0x00000000004c6e86 : add byte ptr [rax], al ; test al, 0x61 ; cld ; jmp qword ptr [rax]
0x00000000004c6d3e : add byte ptr [rax], al ; xor byte ptr [rdi - 4], dl ; call qword ptr [rbx]
0x00000000004c5d5e : add byte ptr [rax], al ; xor byte ptr [rdx - 8], cl ; call rdi
0x00000000004c505e : add byte ptr [rax], al ; xor ch, dh ; cmc ; jmp qword ptr [rdi]
0x00000000004c4926 : add byte ptr [rax], al ; xor r15, rbx ; jmp rsp
0x00000000004c6e07 : add byte ptr [rax], bl ; pop rsp ; cld ; jmp qword ptr [rbx]
0x00000000004c6f27 : add byte ptr [rax], cl ; cld ; jmp qword ptr [rdi]
0x00000000004c5d5f : add byte ptr [rax], dh ; clc ; call rdi
0x00000000004c505f : add byte ptr [rax], dh ; cmc ; cmc ; jmp qword ptr [rdi]
0x00000000004c6d3f : add byte ptr [rax], dh ; push rdi ; cld ; call qword ptr [rbx]
0x00000000004c6e03 : add byte ptr [rax], dl ; add byte ptr [rax], bl ; pop rsp ; cld ; jmp qword ptr [rbx]
0x00000000004b86d4 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000405d13 : add byte ptr [rbp + 1], al ; rol dword ptr [rcx - 0x77], 1 ; ret 0x2945
0x00000000004c5b5b : add byte ptr [rbp + rcx + 0x1d500000], ch ; clc ; jmp qword ptr [rsi]
0x00000000004c631b : add byte ptr [rbp + rdx], ch ; add byte ptr [rax], al ; jl 0x4c6324 ; call qword ptr [rdx]
0x00000000004c62fb : add byte ptr [rbp + rdx], cl ; add byte ptr [rax], al ; jl 0x4c6304 ; call qword ptr [rdx]
0x0000000000456786 : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000410b82 : add byte ptr [rbp - 0x77], al ; ret 0xb841
0x0000000000410b81 : add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x000000000044c2a5 : add byte ptr [rbx + 0x1c2da445], cl ; ret 0x323c
0x000000000044c322 : add byte ptr [rbx + 0x1d2da445], cl ; ret 0x323c
0x0000000000468f0d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x00000000004690ab : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000445933 : add byte ptr [rbx + 0x2d2ddc45], cl ; ret
0x00000000004549d0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000445a93 : add byte ptr [rbx + 0x2e2ddc45], cl ; ret
0x0000000000440623 : add byte ptr [rbx + 0x342db445], cl ; ret
0x0000000000440834 : add byte ptr [rbx + 0x352db445], cl ; ret
0x000000000041e5d7 : add byte ptr [rbx + 0x3b2de845], cl ; push rsp ; ret
0x000000000041e619 : add byte ptr [rbx + 0x3c2de845], cl ; push rsp ; ret
0x0000000000473ad4 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x000000000041d969 : add byte ptr [rbx + 0x412da845], cl ; ret 0x37e8
0x000000000048a7e4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000456ded : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000046d9fe : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041deaf : add byte ptr [rbx + 0x422da845], cl ; ret 0x37e8
0x0000000000460044 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000443ce5 : add byte ptr [rbx + 0x442db445], cl ; jae 0x443c90 ; ret 0x4589
0x0000000000460170 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000426ae3 : add byte ptr [rbx + 0x452d9445], cl ; ret
0x0000000000443d27 : add byte ptr [rbx + 0x452db445], cl ; jae 0x443cd2 ; ret 0x4589
0x0000000000426c0f : add byte ptr [rbx + 0x462d9445], cl ; ret
0x00000000004b47cd : add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x00000000004b48c7 : add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x0000000000413d75 : add byte ptr [rbx + 0x502da045], cl ; ret 0xe5d6
0x0000000000413da7 : add byte ptr [rbx + 0x512da045], cl ; ret 0xe5d6
0x000000000044c6bf : add byte ptr [rbx + 0x562de845], cl ; ret 0x1a45
0x000000000047028f : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e8a6 : add byte ptr [rbx + 0x5f2dbc45], cl ; ret
0x000000000047062f : add byte ptr [rbx + 0x642da445], cl ; mov dl, 0x62 ; ret
0x000000000047078d : add byte ptr [rbx + 0x652da445], cl ; mov dl, 0x62 ; ret
0x0000000000413910 : add byte ptr [rbx + 0x712da045], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000413b9a : add byte ptr [rbx + 0x722da045], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000048d684 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x00000000004c43e7 : add byte ptr [rbx + rbx*2 - 9], cl ; call rsp
0x00000000004c4927 : add byte ptr [rbx + rsi - 5], cl ; jmp rsp
0x00000000004474d0 : add byte ptr [rbx - 0x15d223bb], cl ; ret
0x00000000004471e3 : add byte ptr [rbx - 0x16d223bb], cl ; ret
0x000000000044c983 : add byte ptr [rbx - 0x19d23bbb], cl ; xchg eax, ebp ; ret 0x890e
0x000000000044c8ff : add byte ptr [rbx - 0x1ad23bbb], cl ; xchg eax, ebp ; ret 0x890e
0x0000000000426445 : add byte ptr [rbx - 0x1bb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004568fc : add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x000000000044fda2 : add byte ptr [rbx - 0x1fd26fbb], cl ; jmp rsi
0x000000000044ec40 : add byte ptr [rbx - 0x20d26fbb], cl ; jmp rsi
0x00000000004adda5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004add5a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000045d47c : add byte ptr [rbx - 0x2fd213bb], cl ; std ; ret
0x000000000045d3a0 : add byte ptr [rbx - 0x30d213bb], cl ; std ; ret
0x0000000000461190 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x00000000004663d5 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000460cd2 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000451684 : add byte ptr [rbx - 0x45d213bb], cl ; ret
0x0000000000447b99 : add byte ptr [rbx - 0x48d23bbb], cl ; ret
0x0000000000466213 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000045ab49 : add byte ptr [rbx - 0x52d22bbb], cl ; ret 0x89af
0x000000000045ab07 : add byte ptr [rbx - 0x53d22bbb], cl ; ret 0x89af
0x00000000004bea2e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000449673 : add byte ptr [rbx - 0x5fd21fbb], cl ; adc dword ptr [rbx], eax ; ret 0x4589
0x0000000000449631 : add byte ptr [rbx - 0x60d21fbb], cl ; adc dword ptr [rbx], eax ; ret 0x4589
0x000000000042788b : add byte ptr [rbx - 0x62d233bb], cl ; and byte ptr [rcx], ah ; ret 0x8589
0x0000000000427843 : add byte ptr [rbx - 0x63d233bb], cl ; and byte ptr [rcx], ah ; ret 0x4589
0x00000000004b47e6 : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x00000000004b479b : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000043ece1 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x000000000045d085 : add byte ptr [rbx - 0x76b70bbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004bacb9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004b070b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000044a937 : add byte ptr [rbx - 0x7ad24bbb], cl ; ret 0xec45
0x000000000041df13 : add byte ptr [rbx - 0x7ad257bb], cl ; ret
0x000000000044a8ec : add byte ptr [rbx - 0x7bd24bbb], cl ; ret 0xec45
0x000000000041d90b : add byte ptr [rbx - 0x7bd257bb], cl ; ret
0x0000000000406461 : add byte ptr [rbx - 0x87f7ac4], cl ; add r8b, bpl ; ret 0xffbd
0x000000000043d929 : add byte ptr [rbx - 0xbd223bb], cl ; add al, -0xa ; ret
0x000000000043d7f5 : add byte ptr [rbx - 0xcd223bb], cl ; add al, -0xa ; ret
0x0000000000426c73 : add byte ptr [rbx - 0xdd26bbb], cl ; pop rsp ; ret 0x8940
0x0000000000426a7f : add byte ptr [rbx - 0xed26bbb], cl ; pop rsp ; ret 0x8940
0x0000000000405714 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045a6e6 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000043b9ba : add byte ptr [rcx + 0xf], -0x6e ; ret 0x8445
0x000000000042c2a7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405bc9 : add byte ptr [rcx + 0xf], al ; sahf ; ret
0x00000000004a2bab : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000406119 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004a44fe : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x000000000047a02c : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000040e97c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004c4f53 : add byte ptr [rcx + rax + 0xe980000], ah ; cmc ; call qword ptr [rdi]
0x00000000004498f5 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004c5f1b : add byte ptr [rcx + rdx], ch ; add byte ptr [rax - 0x80], al ; clc ; call rdi
0x0000000000410b7c : add byte ptr [rcx - 0x48], al ; and byte ptr [rip - 0x76baffb4], cl ; ret 0xb841
0x000000000046ff0e : add byte ptr [rcx - 0x77], al ; ret
0x000000000040629a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e16f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049330c : add byte ptr [rcx], al ; add cl, ch ; xchg eax, esp ; ret 0
0x0000000000402628 : add byte ptr [rcx], al ; ret
0x00000000004bac75 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004052f7 : add byte ptr [rcx], bh ; ret 0xf40
0x00000000004baed7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000412343 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004c6f23 : add byte ptr [rcx], dh ; add byte ptr [rax], cl ; cld ; jmp qword ptr [rdi]
0x00000000004c45e7 : add byte ptr [rdi + rax*2], bh ; clc ; call rsp
0x00000000004c48e7 : add byte ptr [rdi + rbp*8], bl ; cli ; jmp rsp
0x00000000004c6d3b : add byte ptr [rdi + rbx + 0x57300000], cl ; cld ; call qword ptr [rbx]
0x00000000004c6d1b : add byte ptr [rdi + rbx], ch ; add byte ptr [rax + 0x55], dh ; cld ; call rdx
0x00000000004c5d3b : add byte ptr [rdi + rcx + 0x47600000], cl ; clc ; jmp rsi
0x00000000004c5d5b : add byte ptr [rdi + rcx + 0x4a300000], ch ; clc ; call rdi
0x00000000004a456e : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000048d5fa : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000478eb7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042ee18 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041c527 : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004b2b39 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405589 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000415b55 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004bd8d7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043809a : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000000004500d8 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405718 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000449b79 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004c505b : add byte ptr [rdx + rax - 0xad00000], ch ; cmc ; jmp qword ptr [rdi]
0x00000000004c4527 : add byte ptr [rdx + rax - 8], ch ; call rsp
0x00000000004c47e7 : add byte ptr [rdx + rax*8], ch ; stc ; call rsp
0x00000000004c4767 : add byte ptr [rdx + rcx*2], bl ; stc ; call rsp
0x00000000004c4867 : add byte ptr [rdx + rdi - 6], bh ; call rsp
0x00000000004c5fbb : add byte ptr [rdx + rdx], cl ; add byte ptr [rax], al ; and dh, cl ; clc ; call qword ptr [rax]
0x000000000041a03b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405978 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043bd0d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419ff6 : add byte ptr [rip + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x000000000045ef4d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004c6c1b : add byte ptr [rsi + rbx], ch ; add al, ah ; push rcx ; cld ; call rdi
0x00000000004c6bbb : add byte ptr [rsi + rbx], cl ; add byte ptr [rax], al ; nop ; push rax ; cld ; jmp qword ptr [rbx]
0x00000000004c5c3b : add byte ptr [rsi + rcx + 0x2f600000], cl ; clc ; jmp rdi
0x00000000004c5c1b : add byte ptr [rsi + rcx], ch ; add byte ptr [rax + 0x2d], ah ; clc ; call qword ptr [rsi]
0x00000000004c4567 : add byte ptr [rsi + rdx - 8], cl ; call rsp
0x000000000042c6d4 : add byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000414e0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004c69cb : add byte ptr [rsp + rbx], bl ; add byte ptr [rax], al ; rol byte ptr [rbp - 5], 1 ; jmp qword ptr [rsi]
0x00000000004c4727 : add byte ptr [rsp + rbx], cl ; stc ; call rsp
0x00000000004c5a5b : add byte ptr [rsp + rcx + 0x3d00000], ch ; clc ; jmp qword ptr [rdi]
0x00000000004c4967 : add byte ptr [rsp + rsi*2 - 5], bh ; jmp rsp
0x00000000004c71d3 : add byte ptr [rsp], ah ; add byte ptr [rax], al ; sbb byte ptr [rdi - 2], bl ; call rdi
0x000000000044c753 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004c4925 : add byte ptr es:[rax], al ; xor r15, rbx ; jmp rsp
0x000000000048770c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004931f6 : add cl, ch ; lodsb al, byte ptr [rsi] ; ret
0x0000000000493346 : add cl, ch ; pop rsp ; ret 0
0x000000000042d805 : add cl, ch ; ret
0x000000000044e5fb : add cl, ch ; ret 0x1a
0x000000000041418a : add cl, ch ; ret 1
0x000000000049330e : add cl, ch ; xchg eax, esp ; ret 0
0x0000000000469621 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004b3ede : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004397ed : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004652be : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044c2a3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x1c2da445], cl ; ret 0x323c
0x000000000047028d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045e1c4 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000448971 : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000049330d : add dword ptr [rax], eax ; jmp 0x49f5ac
0x00000000004245b3 : add dword ptr [rax], eax ; pop rbp ; ret
0x00000000004692cf : add dword ptr [rax], ecx ; ret 0x840
0x000000000041a7a3 : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x0000000000415b5b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x000000000044c81b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430bf3 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000436419 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462a80 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004ba1c2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000415536 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044789e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004a351f : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x000000000045c7ea : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xe280
0x000000000045cf86 : add eax, 0x18afbf00 ; ret 0xba72
0x0000000000402624 : add eax, 0x2c600e ; add ebx, esi ; ret
0x0000000000430368 : add eax, 0x49b80000 ; ret
0x00000000004b3e43 : add eax, 0x5d5b0000 ; ret
0x000000000044dcf4 : add eax, 0x6d39472b ; ret 0x4818
0x000000000041dfba : add eax, 0x85b80000 ; ret
0x0000000000424019 : add eax, 0x89480000 ; in al, dx ; pop rbp ; ret
0x00000000004421d7 : add eax, 0xb92461d4 ; ret 0x9e89
0x000000000042b351 : add eax, 0xb99e8362 ; cmp al, 0x55 ; ret
0x00000000004500d5 : add eax, 0xf000000 ; xchg eax, edx ; ret 0xd284
0x0000000000419ff7 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x00000000004c519d : add eax, dword ptr [rax] ; add al, dh ; and al, 0xfffffffffffffff6 ; call qword ptr [rdx]
0x000000000042425c : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x00000000004471e1 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x16d223bb], cl ; ret
0x000000000044fda0 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x1fd26fbb], cl ; jmp rsi
0x00000000004247ad : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000479e0d : add eax, dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8844
0x000000000045cad7 : add eax, ebp ; ret
0x00000000004025eb : add eax, edx ; sar rax, 1 ; jne 0x4025fc ; pop rbp ; ret
0x0000000000402629 : add ebx, esi ; ret
0x0000000000479677 : add ecx, dword ptr [rax + 1] ; ret 0x8b48
0x00000000004c5a61 : add edi, eax ; jmp qword ptr [rdi]
0x0000000000438e99 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x000000000043bab5 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x0000000000465139 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004c4c19 : add edi, edi ; call rsp
0x000000000041091b : add esi, ebx ; mov ch, -0x47 ; ret
0x0000000000415b86 : add esp, 0x10 ; pop rbp ; ret
0x000000000042e16d : add esp, 0x100 ; pop rbp ; ret
0x00000000004275e4 : add esp, 0x110 ; pop rbp ; ret
0x0000000000426f8e : add esp, 0x120 ; pop rbp ; ret
0x0000000000461438 : add esp, 0x140 ; pop rbp ; ret
0x000000000043993d : add esp, 0x150 ; pop rbp ; ret
0x000000000045b3d4 : add esp, 0x160 ; pop rbp ; ret
0x000000000041f0b0 : add esp, 0x180 ; pop rbp ; ret
0x0000000000452dba : add esp, 0x190 ; pop rbp ; ret
0x000000000041e438 : add esp, 0x1a0 ; pop rbp ; ret
0x000000000047028a : add esp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x00000000004730e0 : add esp, 0x1b0 ; pop rbp ; ret
0x00000000004652d9 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000042ca34 : add esp, 0x1cf0 ; pop rbp ; ret
0x0000000000468d2f : add esp, 0x1d0 ; pop rbp ; ret
0x000000000043d701 : add esp, 0x20 ; pop rbp ; ret
0x000000000043bd0b : add esp, 0x200 ; pop rbp ; ret
0x000000000043d21a : add esp, 0x210 ; pop rbp ; ret
0x0000000000425507 : add esp, 0x30 ; pop rbp ; ret
0x000000000045a832 : add esp, 0x380 ; pop rbp ; ret
0x0000000000414ea9 : add esp, 0x3b0 ; pop rbp ; ret
0x00000000004794c8 : add esp, 0x3e0 ; pop rbp ; ret
0x000000000044b42c : add esp, 0x40 ; pop rbp ; ret
0x00000000004761f4 : add esp, 0x420 ; pop rbp ; ret
0x00000000004be559 : add esp, 0x440 ; pop rbp ; ret
0x000000000042ee5d : add esp, 0x480 ; pop rbp ; ret
0x00000000004b7c5e : add esp, 0x4f0 ; pop rbp ; ret
0x0000000000415dc3 : add esp, 0x50 ; pop rbp ; ret
0x00000000004b3e40 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x00000000004513a3 : add esp, 0x5d0 ; pop rbp ; ret
0x000000000042802a : add esp, 0x60 ; pop rbp ; ret
0x0000000000430bf8 : add esp, 0x70 ; pop rbp ; ret
0x0000000000473ea4 : add esp, 0x78 ; pop rbp ; ret
0x0000000000439d1c : add esp, 0x80 ; pop rbp ; ret
0x000000000045ee0f : add esp, 0x88 ; pop rbp ; ret
0x000000000043e037 : add esp, 0x90 ; pop rbp ; ret
0x000000000044a3d7 : add esp, 0x98 ; pop rbp ; ret
0x000000000042d75e : add esp, 0xa0 ; pop rbp ; ret
0x00000000004253bd : add esp, 0xb0 ; pop rbp ; ret
0x000000000043c1c8 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041cafe : add esp, 0xd0 ; pop rbp ; ret
0x0000000000460438 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044c577 : add esp, 0xf0 ; pop rbp ; ret
0x000000000047b693 : add esp, 8 ; pop rbp ; ret
0x0000000000401e96 : add esp, 8 ; ret
0x0000000000406467 : add r8b, bpl ; ret 0xffbd
0x0000000000449f5c : add r8b, byte ptr [r8] ; add cl, ch ; ret 1
0x00000000004025ea : add rax, rdx ; sar rax, 1 ; jne 0x4025fd ; pop rbp ; ret
0x0000000000415b85 : add rsp, 0x10 ; pop rbp ; ret
0x000000000042e16c : add rsp, 0x100 ; pop rbp ; ret
0x00000000004275e3 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000426f8d : add rsp, 0x120 ; pop rbp ; ret
0x0000000000461437 : add rsp, 0x140 ; pop rbp ; ret
0x000000000043993c : add rsp, 0x150 ; pop rbp ; ret
0x000000000045b3d3 : add rsp, 0x160 ; pop rbp ; ret
0x000000000041f0af : add rsp, 0x180 ; pop rbp ; ret
0x0000000000452db9 : add rsp, 0x190 ; pop rbp ; ret
0x000000000041e437 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000470289 : add rsp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x00000000004730df : add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004652d8 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000042ca33 : add rsp, 0x1cf0 ; pop rbp ; ret
0x0000000000468d2e : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000043d700 : add rsp, 0x20 ; pop rbp ; ret
0x000000000043bd0a : add rsp, 0x200 ; pop rbp ; ret
0x000000000043d219 : add rsp, 0x210 ; pop rbp ; ret
0x0000000000425506 : add rsp, 0x30 ; pop rbp ; ret
0x000000000045a831 : add rsp, 0x380 ; pop rbp ; ret
0x0000000000414ea8 : add rsp, 0x3b0 ; pop rbp ; ret
0x00000000004794c7 : add rsp, 0x3e0 ; pop rbp ; ret
0x000000000044b42b : add rsp, 0x40 ; pop rbp ; ret
0x00000000004761f3 : add rsp, 0x420 ; pop rbp ; ret
0x00000000004be558 : add rsp, 0x440 ; pop rbp ; ret
0x000000000042ee5c : add rsp, 0x480 ; pop rbp ; ret
0x00000000004b7c5d : add rsp, 0x4f0 ; pop rbp ; ret
0x0000000000415dc2 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004b3e3f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x00000000004513a2 : add rsp, 0x5d0 ; pop rbp ; ret
0x0000000000428029 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000430bf7 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000473ea3 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000439d1b : add rsp, 0x80 ; pop rbp ; ret
0x000000000045ee0e : add rsp, 0x88 ; pop rbp ; ret
0x000000000043e036 : add rsp, 0x90 ; pop rbp ; ret
0x000000000044a3d6 : add rsp, 0x98 ; pop rbp ; ret
0x000000000042d75d : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004253bc : add rsp, 0xb0 ; pop rbp ; ret
0x000000000043c1c7 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041cafd : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000460437 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044c576 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000047b692 : add rsp, 8 ; pop rbp ; ret
0x0000000000401e95 : add rsp, 8 ; ret
0x00000000004c5fa0 : and ah, al ; clc ; jmp qword ptr [rax]
0x0000000000479558 : and ah, bl ; sub cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0xbae8
0x0000000000436da9 : and ah, byte ptr [rdi] ; ret
0x00000000004c71d4 : and al, 0x24 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 2], bl ; call rdi
0x00000000004bac7d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004421da : and al, 0xffffffffffffffb9 ; ret 0x9e89
0x00000000004c51a1 : and al, 0xfffffffffffffff6 ; call qword ptr [rdx]
0x0000000000415535 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044789d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c7085 : and al, byte ptr [rax] ; add al, cl ; cld ; call qword ptr [rdx]
0x00000000004c4825 : and al, byte ptr [rax] ; add byte ptr [rax + rbp*8 - 7], ch ; call rsp
0x000000000046961f : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004714c1 : and byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x00000000004c47a5 : and byte ptr [rax], al ; add ah, bl ; pushfq ; stc ; call rsp
0x00000000004639fa : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004c6e05 : and byte ptr [rax], al ; add byte ptr [rax], bl ; pop rsp ; cld ; jmp qword ptr [rbx]
0x0000000000438098 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x000000000041e1de : and byte ptr [rbx + 0x42b9e1a7], dl ; ret 0x37e8
0x0000000000427849 : and byte ptr [rcx], ah ; ret 0x4589
0x0000000000427a55 : and byte ptr [rcx], ah ; ret 0x57b9
0x0000000000427d2a : and byte ptr [rcx], ah ; ret 0x6be9
0x0000000000427891 : and byte ptr [rcx], ah ; ret 0x8589
0x0000000000426f90 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044618c : and byte ptr [rdi], dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410b7f : and byte ptr [rip - 0x76baffb4], cl ; ret 0xb841
0x00000000004b043b : and byte ptr [rsi + 0x58], ah ; jb 0x4b0472 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004c5fc0 : and dh, cl ; clc ; call qword ptr [rax]
0x000000000046961e : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000415b59 : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x000000000045a336 : and dl, byte ptr [rcx] ; ret 0x76b9
0x000000000045915e : and dl, byte ptr [rcx] ; ret 0x8589
0x00000000004c6f25 : and dword ptr [rax], eax ; add byte ptr [rax], cl ; cld ; jmp qword ptr [rdi]
0x00000000004c47e5 : and dword ptr [rax], eax ; add byte ptr [rdx + rax*8], ch ; stc ; call rsp
0x0000000000450e6b : and dword ptr [rdi], 0x81f8558b ; ret 0x3e9e
0x0000000000450e6a : and dword ptr cs:[rdi], 0x81f8558b ; ret 0x3e9e
0x0000000000415797 : and eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000486941 : and eax, 0x75b4b9d3 ; ret
0x00000000004b428d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004c48e5 : and eax, 0xef1c0000 ; cli ; jmp rsp
0x00000000004c4865 : and eax, dword ptr [rax] ; add byte ptr [rdx + rdi - 6], bh ; call rsp
0x00000000004b8db8 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004b88cf : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004251f3 : and ecx, dword ptr [rax + rax - 0x77] ; mov r8b, r13b ; ret 0xfdce
0x00000000004b8e7a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000044349d : call 0x36fd46f9
0x0000000000406898 : call 0x402049
0x0000000000475528 : call 0x402077
0x00000000004050cc : call 0x402406
0x000000000040687c : call 0x402409
0x0000000000476288 : call 0x4024d2
0x000000000044c6c2 : call 0x46071cf7
0x000000000044c6c1 : call 0x46071cf8
0x000000000046956f : call 0x49091ebf
0x000000000046956e : call 0x49091ec0
0x00000000004695bd : call 0x49091f0d
0x00000000004695bc : call 0x49091f0e
0x00000000004b0835 : call 0x4b08f9
0x0000000000430963 : call 0x5f2ccb97
0x0000000000430962 : call 0x5f2ccb98
0x00000000004befcd : call 0xffffffffacacb201
0x00000000004befcc : call 0xffffffffacacb202
0x0000000000440a41 : call 0xffffffffb9c3b6f2
0x000000000041e5da : call 0xffffffffc3962110
0x000000000041e5d9 : call 0xffffffffc3962111
0x000000000041e61c : call 0xffffffffc3962252
0x000000000041e61b : call 0xffffffffc3962253
0x00000000004a9fb0 : call 0xffffffffc3e658d4
0x00000000004ab2ab : call 0xffffffffc84ab2b3
0x000000000046c9d3 : call 0xffffffffe1098399
0x000000000046c9d2 : call 0xffffffffe109839a
0x000000000048a3f9 : call 0xffffffffe90b2d49
0x000000000048a3f8 : call 0xffffffffe90b2d4a
0x0000000000452adb : call 0xffffffffffb5b0ad
0x0000000000452ada : call 0xffffffffffb5b0ae
0x00000000004bf6d9 : call qword ptr [r12 + rbx*8]
0x0000000000412d3d : call qword ptr [rax]
0x0000000000410d90 : call qword ptr [rbx]
0x000000000041c2c3 : call qword ptr [rcx]
0x000000000041be93 : call qword ptr [rdi]
0x00000000004116e9 : call qword ptr [rdx]
0x000000000046dcd8 : call qword ptr [rsi]
0x00000000004bf6da : call qword ptr [rsp + rbx*8]
0x000000000044939a : call r10
0x000000000040264d : call rax
0x000000000041c277 : call rbx
0x000000000041154d : call rcx
0x000000000041c4d2 : call rdi
0x000000000041b915 : call rdx
0x000000000041c0bb : call rsi
0x000000000045497b : call rsp
0x000000000048bf35 : cdq ; add byte ptr [rax], al ; add al, ch ; ret 0xf75f
0x000000000047535e : cdq ; ret
0x000000000042d802 : clc ; add al, byte ptr [rax] ; add cl, ch ; ret
0x000000000048d350 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045b3d2 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000471839 : clc ; add rsp, 0x180 ; pop rbp ; ret
0x000000000046232b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x00000000004730de : clc ; add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004be557 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004ad296 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004403f3 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043e035 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000444895 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000042d3cb : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000041f591 : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x00000000004c5fc2 : clc ; call qword ptr [rax]
0x00000000004c60a2 : clc ; call qword ptr [rcx]
0x00000000004c5c22 : clc ; call qword ptr [rsi]
0x00000000004c5d62 : clc ; call rdi
0x00000000004c452a : clc ; call rsp
0x00000000004c46e9 : clc ; clc ; call rsp
0x000000000049b9f7 : clc ; hlt ; ret
0x00000000004443e3 : clc ; jmp 0x4444a6
0x00000000004443e2 : clc ; jmp 0x4444a7
0x00000000004c5fa2 : clc ; jmp qword ptr [rax]
0x00000000004c5a62 : clc ; jmp qword ptr [rdi]
0x00000000004c5b62 : clc ; jmp qword ptr [rsi]
0x00000000004c5c42 : clc ; jmp rdi
0x00000000004c5d42 : clc ; jmp rsi
0x00000000004c5e22 : clc ; jmp rsp
0x00000000004025ef : clc ; jne 0x4025f8 ; pop rbp ; ret
0x00000000004b8db9 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004b8b83 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000439d86 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004b44ee : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468dee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004517f7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045df0b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000045df2b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048d77b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048d75b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004b85d1 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000044bba7 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000493043 : clc ; out -0x55, al ; ret
0x000000000042e289 : clc ; pop rbp ; ret
0x000000000040680e : clc ; pop rbx ; pop rbp ; ret
0x00000000004c45a2 : clc ; push qword ptr [rax + rbx + 0x2efc0000] ; clc ; call rsp
0x00000000004c46e2 : clc ; push qword ptr [rbp + rbx - 0x7e40000] ; clc ; call rsp
0x00000000004c4662 : clc ; push qword ptr [rbx + rbx + 0x7eac0000] ; clc ; call rsp
0x00000000004c45e2 : clc ; push qword ptr [rcx + rbx + 0x473c0000] ; clc ; call rsp
0x00000000004c4562 : clc ; push qword ptr [rdi + rdx + 0x164c0000] ; clc ; call rsp
0x00000000004c4622 : clc ; push qword ptr [rdx + rbx + 0x61fc0000] ; clc ; call rsp
0x00000000004c4522 : clc ; push qword ptr [rsi + rdx + 0x26c0000] ; clc ; call rsp
0x00000000004c46a2 : clc ; push qword ptr [rsp + rbx - 0x62e40000] ; clc ; call rsp
0x000000000042b4e7 : clc ; rcr dword ptr [rdx], -0x17 ; ret
0x00000000004a689b : clc ; ret 0x1bb9
0x000000000049b81b : clc ; ret 0x3ee4
0x00000000004abe2d : clc ; ret 0x50e9
0x000000000047cecd : clc ; ret 0x77a8
0x0000000000492f65 : clc ; ret 0x8589
0x00000000004a29d2 : clc ; sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004b88d0 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000425567 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004457ad : cld ; add rsp, 0x110 ; pop rbp ; ret
0x00000000004794c6 : cld ; add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000445031 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004427f2 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000445c6d : cld ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000044006b : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000442e25 : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004bf60e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004bb95d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004c6d42 : cld ; call qword ptr [rbx]
0x00000000004c708a : cld ; call qword ptr [rdx]
0x00000000004c6c22 : cld ; call rdi
0x00000000004c6d22 : cld ; call rdx
0x00000000004c49e2 : cld ; call rsp
0x00000000004c45a8 : cld ; clc ; call rsp
0x000000000046dc16 : cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x00000000004549ff : cld ; jmp 0x454a6c
0x00000000004549fe : cld ; jmp 0x454a6d
0x00000000004c6e8a : cld ; jmp qword ptr [rax]
0x00000000004c6bc2 : cld ; jmp qword ptr [rbx]
0x00000000004c6f2a : cld ; jmp qword ptr [rdi]
0x000000000043ece4 : cld ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c49da : cld ; push qword ptr [rcx + rbp + 0x7bbc0000] ; cld ; call rsp
0x00000000004c4a1a : cld ; push qword ptr [rdx + rbp - 0x7fb40000] ; cld ; call rsp
0x000000000042820f : cld ; ret
0x0000000000492f9d : cld ; ret 0x8589
0x000000000043a3f3 : cld ; ret 0x8954
0x00000000004a3e6f : cld ; ret 0x8b48
0x000000000043aa49 : cld ; ret 0xb954
0x00000000004c68ac : cld ; sbb al, byte ptr [rax] ; add byte ptr [rax - 2], al ; cli ; call qword ptr [rdx]
0x00000000004663da : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000466b2b : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000430ad4 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004c68b2 : cli ; call qword ptr [rdx]
0x00000000004c486a : cli ; call rsp
0x00000000004c48e2 : cli ; inc esp ; and eax, 0xef1c0000 ; cli ; jmp rsp
0x00000000004c48aa : cli ; jmp rsp
0x00000000004b0440 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004c4862 : cli ; push qword ptr [rbx + 0x3a7c0000] ; cli ; call rsp
0x00000000004567bc : cli ; ret
0x00000000004bac7c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004c4f5a : cmc ; call qword ptr [rdi]
0x00000000004c42ea : cmc ; call rsp
0x00000000004c5061 : cmc ; cmc ; jmp qword ptr [rdi]
0x00000000004c5062 : cmc ; jmp qword ptr [rdi]
0x00000000004c42e2 : cmc ; push qword ptr [rbp + rcx - 0x4c240000] ; cmc ; call rsp
0x00000000004af35b : cmc ; ret 0x4f0b
0x0000000000470358 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004932d3 : cmp ah, ah ; add byte ptr [rax], al ; jmp 0x49f5ae
0x000000000042a803 : cmp ah, ah ; ret
0x0000000000406463 : cmp al, -0x7b ; xor bh, 0x4b ; add al, ch ; ret 0xffbd
0x000000000043567c : cmp al, 0x18 ; cmp eax, 0x12fc0fb9 ; ret 0x558a
0x0000000000406883 : cmp al, 0x25 ; ret 0x4c2f
0x000000000042876b : cmp al, 0x2f ; ret 0x89a2
0x00000000004c45e8 : cmp al, 0x47 ; clc ; call rsp
0x000000000041e61e : cmp al, 0x54 ; ret
0x000000000042882f : cmp al, 0x55 ; ret
0x000000000040a7e9 : cmp al, 0x6b ; ret
0x0000000000411297 : cmp al, ch ; ret
0x0000000000488468 : cmp al, ch ; ret 0xf7a0
0x00000000004c4869 : cmp bh, dl ; call rsp
0x0000000000405bc5 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; sahf ; ret
0x00000000004a2ba7 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000406115 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000047a028 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000412744 : cmp cl, byte ptr [rax - 0x77] ; ret 0xa3e8
0x0000000000412f2d : cmp cl, byte ptr [rax - 0x77] ; ret 0xbae8
0x00000000004a3011 : cmp cl, byte ptr [rbx - 0x34] ; jmp 0x4acb8d
0x00000000004a4246 : cmp cl, byte ptr [rcx + 0x10b80000] ; jns 0x4a42a6 ; ret 0xd4b9
0x00000000004af4f1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004b11f7 : cmp dl, al ; ret
0x000000000044dcf6 : cmp dword ptr [r13 + 0x36], r13d ; ret 0x4818
0x0000000000461462 : cmp dword ptr [rax - 0x75], ecx ; jne 0x461444 ; call rax
0x0000000000447a9f : cmp dword ptr [rax - 0x75], ecx ; loopne 0x447af5 ; mov esi, dword ptr [rcx] ; call rax
0x000000000044892c : cmp dword ptr [rax - 0x75], ecx ; loopne 0x448982 ; mov esi, dword ptr [rcx] ; call rax
0x00000000004ac83b : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000044dcf7 : cmp dword ptr [rbp + 0x36], ebp ; ret 0x4818
0x000000000043567e : cmp eax, 0x12fc0fb9 ; ret 0x558a
0x0000000000455c49 : cmp eax, 0x45c6a0d8 ; ret
0x000000000043d685 : cmp eax, 0x5d000000 ; ret
0x000000000040f279 : cmp eax, 0x73b80000 ; jmp rax
0x000000000045094a : cmp eax, 0x81f0558b ; ret 0x8132
0x000000000040e358 : cmp eax, 0x8944004c ; ret 0xb841
0x0000000000410ed3 : cmp eax, 0x8945004c ; ret 0xb841
0x00000000004b32c9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000423a4c : cmp eax, 0xb99e07f5 ; ret 0x1045
0x00000000004025ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025c0 ; pop rbp ; ret
0x000000000040a795 : cmp ebp, dword ptr [rbx + 0x2e] ; ret
0x0000000000477374 : cmp ecx, ebp ; ret 1
0x0000000000487797 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000042aaa3 : cmp esp, esp ; ret
0x000000000041e1e0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; loope 0x41e1a0 ; ret 0x37e8
0x00000000004b3e42 : cwde ; add eax, 0x5d5b0000 ; ret
0x000000000043abfe : cwde ; mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047530a : cwde ; ret
0x0000000000468d87 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000043057e : dec dword ptr [rax + 0x29] ; ret 0x950f
0x0000000000411420 : dec dword ptr [rax + 0x39] ; ret 0xf41
0x000000000046c038 : dec dword ptr [rax + 0x69] ; ret 0xa
0x000000000042b6ef : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000406880 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4c2f
0x0000000000448670 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x00000000004a0450 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000486c9b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041171f : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000411294 : dec dword ptr [rax - 0x75] ; cmp al, ch ; ret
0x0000000000412741 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0xa3e8
0x0000000000412f2a : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0xbae8
0x00000000004ac1db : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x46], ecx ; ret 0xb7cc
0x0000000000486e13 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000476283 : dec dword ptr [rax - 0x75] ; push rbp ; mov al, ch ; ret 0xfff8
0x00000000004491bb : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000046dcf2 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000043a921 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004b4c86 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x000000000042cf3e : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042644b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042ace5 : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004a3b3e : dec dword ptr [rax - 0x7d] ; ret 0x4817
0x000000000046db5b : dec dword ptr [rax - 0x7f] ; ret 0
0x000000000046ccfd : dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004a31f2 : dec dword ptr [rax - 1] ; ret 0x8b48
0x00000000004a47ab : dec dword ptr [rbx + 0x1f02931] ; ret 0x9589
0x000000000040e64b : dec dword ptr [rbx - 0x119b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000041028d : dec dword ptr [rbx - 0x11f36b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000046ffce : dec dword ptr [rbx - 0x1a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000459f3c : dec dword ptr [rbx - 0x33b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000459fe2 : dec dword ptr [rbx - 0x3476b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000045a123 : dec dword ptr [rbx - 0x35b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004a0960 : dec dword ptr [rbx - 0x69] ; jmp 0x4acb8b
0x000000000041b6e6 : dec dword ptr [rbx - 0x6c] ; ret 0xe9ad
0x00000000004aa2ce : dec dword ptr [rbx - 0x7e05d6c2] ; ret 1
0x00000000004484ec : dec dword ptr [rbx - 0xbf63] ; dec dword ptr [rdi] ; ret
0x00000000004af356 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000430808 : dec dword ptr [rcx - 0xd] ; ret
0x00000000004a558e : dec dword ptr [rdi - 0x71] ; ret 0xe9f9
0x000000000041b9a2 : dec dword ptr [rdi] ; pushfq ; ret 0xd284
0x000000000041c53c : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x00000000004484f2 : dec dword ptr [rdi] ; ret
0x000000000046ffd4 : dec dword ptr [rdi] ; ret 0x4589
0x000000000040e651 : dec dword ptr [rdi] ; ret 0x8589
0x000000000045f231 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000443e2c : dec dword ptr [rdi] ; test al, ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000431808 : dec dword ptr [rdi] ; test bh, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000044a9db : dec dword ptr [rdi] ; test bh, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004640ab : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004247a9 : dec dword ptr [rdi] ; test byte ptr [rax], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000499888 : dec dword ptr [rdi] ; test byte ptr [rax], bl ; ret
0x000000000044c204 : dec dword ptr [rdi] ; test byte ptr [rax], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045e9ca : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000049f548 : dec dword ptr [rdi] ; test byte ptr [rbx], bl ; ret 0
0x0000000000493340 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x33], cl ; add byte ptr [rax], al ; jmp 0x49f5b1
0x000000000049def8 : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; ret
0x000000000047cbaa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000453c64 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000441edc : dec dword ptr [rdi] ; test byte ptr [rdi], ch ; add al, 0 ; add cl, ch ; ret 1
0x0000000000493308 : dec dword ptr [rdi] ; test byte ptr [rdi], ch ; add dword ptr [rax], eax ; jmp 0x49f5b1
0x0000000000493260 : dec dword ptr [rdi] ; test byte ptr [rdx + rdx*8 + 0x3ce90000], bl ; ret
0x0000000000490860 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; ret 1
0x000000000044fef5 : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000493bc8 : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; ret 0
0x0000000000495170 : dec dword ptr [rdi] ; test byte ptr [rsi], bh ; ret
0x0000000000414184 : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret 1
0x000000000041eaad : dec dword ptr [rdi] ; test ch, ah ; add al, 0 ; add cl, ch ; ret 1
0x0000000000493b58 : dec dword ptr [rdi] ; test ch, cl ; ret 0
0x000000000045e1c0 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004999a0 : dec dword ptr [rdi] ; test dh, ah ; ret 0
0x000000000049d050 : dec dword ptr [rdi] ; test dh, bl ; ret
0x00000000004674a5 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000046c104 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000041d365 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000412ea6 : dec dword ptr [rdx + rbx*4 + 0xa] ; ret 0x9de9
0x000000000046cd54 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000415a50 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000049b9a3 : div esp ; ret
0x0000000000415a4f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004267e9 : enter -0x74b8, 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045f640 : enter -0x74b8, 0x31 ; call rax
0x00000000004270a3 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x0000000000470ad1 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004bdb39 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042c24c : enter 0x2d48, -0x54 ; ret 0xf0
0x0000000000415b1c : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000046ee04 : enter 0x4c42, 0x29 ; ret 0x2948
0x000000000046f127 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004b86f5 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000464388 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004536d5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046ed8e : fadd st(7), st(0) ; or cl, ch ; ret
0x00000000004b89ab : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004b5d45 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000499886 : fdivp st(7) ; dec dword ptr [rdi] ; test byte ptr [rax], bl ; ret
0x000000000049999e : fdivp st(7) ; dec dword ptr [rdi] ; test dh, ah ; ret 0
0x00000000004640ae : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004584d7 : fimul dword ptr [rax + 0x29] ; ret 0xf748
0x00000000004b8e7b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000046ff18 : fimul dword ptr [rdi] ; sahf ; ret
0x0000000000438065 : fimul word ptr [rcx - 0x39] ; ret 0xffff
0x00000000004b40ab : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000472ccb : fisttp qword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004b9238 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000043eb6f : fmul dword ptr [r11 - 0x1376b800] ; pop rbp ; ret
0x0000000000462f8e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004be717 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000046e540 : fmul dword ptr [rax + 0xf] ; ret 0x8b48
0x0000000000462f8f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045f63c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000046fef4 : fmul dword ptr [rax - 0x77] ; ret 0xf3e8
0x0000000000472ccf : fmul dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000046037d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000046febf : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000043d1c2 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000043eb70 : fmul dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x00000000004be718 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004bf6dc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004b5ecd : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x00000000004b74e7 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x000000000046edff : fstp st(7), st(0) ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x000000000045dd27 : fsub st(1), st(0) ; mov ebx, 0xb8000000 ; ret 0xebc8
0x00000000004b4b02 : fsubr qword ptr [rdi - 0x6946a2c4] ; ret
0x00000000004270a7 : fsubr st(0) ; ret
0x000000000043d92e : hlt ; add al, -0xa ; ret
0x000000000044c752 : hlt ; add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425419 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045a830 : hlt ; add rsp, 0x380 ; pop rbp ; ret
0x00000000004bec7c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000047b691 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004c70a4 : hlt ; and al, byte ptr [rax] ; add al, cl ; cld ; call qword ptr [rdx]
0x000000000045a335 : hlt ; and dl, byte ptr [rcx] ; ret 0x76b9
0x00000000004591b1 : hlt ; and dl, byte ptr [rcx] ; ret 0x8589
0x00000000004485d5 : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000045d088 : hlt ; mov rsp, rbp ; pop rbp ; ret
0x00000000004025c0 : hlt ; pop rbp ; mov edi, 0x6c85d8 ; jmp rax
0x000000000044c777 : hlt ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000049b9a4 : hlt ; ret
0x00000000004999a3 : hlt ; ret 0
0x00000000004b056b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000046dc17 : idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x00000000004c5622 : idiv edi ; ret 8
0x0000000000456aed : imul cl ; ret
0x0000000000449896 : in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0x43e9
0x0000000000449834 : in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0xa5e9
0x0000000000440471 : in al, 0x2d ; ret
0x000000000044775a : in al, 0x2d ; test al, 0x73 ; ret
0x00000000004bb2a1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041eab0 : in al, dx ; add al, 0 ; add cl, ch ; ret 1
0x00000000004c519c : in al, dx ; add eax, dword ptr [rax] ; add al, dh ; and al, 0xfffffffffffffff6 ; call qword ptr [rdx]
0x00000000004b8205 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044c575 : in al, dx ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004a689a : in al, dx ; clc ; ret 0x1bb9
0x00000000004abe2c : in al, dx ; clc ; ret 0x50e9
0x0000000000492f64 : in al, dx ; clc ; ret 0x8589
0x0000000000430b8c : in al, dx ; jmp 0x430c19
0x0000000000469251 : in al, dx ; jmp 0x46941d
0x0000000000469250 : in al, dx ; jmp 0x46941e
0x00000000004bf08c : in al, dx ; jmp 0x4bf109
0x00000000004bf08b : in al, dx ; jmp 0x4bf10a
0x00000000004b8865 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041553c : in al, dx ; pop rbp ; ret
0x0000000000430b94 : in al, dx ; ret
0x000000000046621a : in al, dx ; ret 0x8589
0x0000000000469234 : in al, dx ; ret 0xe8ff
0x0000000000466b2d : in al, dx ; ret 0xff3
0x000000000044ca1a : in eax, -0x47 ; out -0x6b, al ; ret 0x480e
0x00000000004498f3 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000044c904 : in eax, -0x6b ; ret 0x890e
0x000000000041710c : in eax, -0x7a ; pop rbx ; ret
0x000000000041a0dd : in eax, 0x2a ; add byte ptr [rax + 0x558801e2], al ; ret 0x1b2
0x000000000045443a : in eax, dx ; adc eax, ebp ; js 0x45442d ; ret
0x000000000043bc9f : in eax, dx ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000456d16 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000415b33 : inc dword ptr [rax + 0x558801e2] ; ret
0x00000000004a44fb : inc dword ptr [rax + 0xf41003f] ; xchg eax, ebp ; ret 0x8845
0x0000000000430ad2 : inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x000000000042ed73 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000045a778 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000046d516 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041c523 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000042c118 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a7f1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040e3ac : inc dword ptr [rbp + 0xf] ; ret
0x00000000004791d7 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x00000000004ac839 : inc dword ptr [rcx + 0x39] ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004a4568 : inc dword ptr [rcx + 0x3e] ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000042bc75 : inc dword ptr [rcx + 0xf] ; lahf ; ret
0x000000000042c19e : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000438594 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000042bf26 : inc dword ptr [rcx - 0x42aaab3f] ; ret
0x00000000004ac3bf : inc dword ptr [rcx - 0x7f] ; out dx, al ; ret
0x000000000046cb1b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000449831 : inc edi ; in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0xa5e9
0x000000000043dbce : inc edi ; loopne 0x43dbce ; add al, -0xa ; ret
0x0000000000406b88 : inc edi ; mov word ptr [r8], ds ; xchg rax, r13 ; ret 0x8589
0x000000000042429d : inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000424462 : inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x00000000004b3f79 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000430802 : inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rcx - 0xd] ; ret
0x00000000004ac6fa : inc edi ; test dword ptr [rdx + rdi*8 + 0x3ffdffff], eax ; ret 0x48be
0x000000000042b5ce : inc esi ; jmp qword ptr [rax]
0x00000000004c4923 : inc esp ; add byte ptr es:[rax], al ; xor r15, rbx ; jmp rsp
0x00000000004c48e3 : inc esp ; and eax, 0xef1c0000 ; cli ; jmp rsp
0x00000000004c5f1c : insb byte ptr [rdi], dx ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; clc ; call rdi
0x00000000004c631c : insb byte ptr [rdi], dx ; adc eax, 0x7c000000 ; stc ; call qword ptr [rdx]
0x0000000000430796 : insb byte ptr [rdi], dx ; add al, ch ; ret
0x00000000004c4528 : insb byte ptr [rdi], dx ; add bh, al ; call rsp
0x000000000045176f : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043ab54 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042ee13 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405a7e : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004059a0 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000441c9d : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405713 : insb byte ptr [rdi], dx ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406299 : insb byte ptr [rdi], dx ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a03a : insb byte ptr [rdi], dx ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405977 : insb byte ptr [rdi], dx ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000419ff5 : insb byte ptr [rdi], dx ; add byte ptr [rip + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x0000000000414e0b : insb byte ptr [rdi], dx ; add byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004c561c : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x65], ah ; idiv edi ; ret 8
0x000000000043acc5 : insb byte ptr [rdi], dx ; ret 0x9704
0x00000000004b0cb6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000044dcf8 : insd dword ptr [rdi], dx ; ret 0x4818
0x00000000004b0d0a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000046ca66 : insd dword ptr [rdi], dx ; xor ebx, dword ptr [rdi] ; jle 0x46c9fb ; int 0x80
0x000000000048c8a7 : int 0x5b
0x000000000046ca6c : int 0x80
0x0000000000470a4d : int 0x89
0x0000000000467244 : int 6
0x0000000000456782 : int1 ; add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000426a84 : int1 ; pop rsp ; ret 0x8940
0x00000000004ad895 : iretd ; test al, -0x47 ; call rsi
0x00000000004025b3 : ja 0x4025ba ; pop rbp ; ret
0x000000000042b4e6 : ja 0x42b4e5 ; rcr dword ptr [rdx], -0x17 ; ret
0x0000000000468df1 : ja 0x468e3e ; pop rbp ; ret
0x0000000000409aad : jae 0x409a62 ; ret 0x89a7
0x0000000000443ceb : jae 0x443c8a ; ret 0x4589
0x0000000000443cea : jae 0x443c8b ; ret 0x4589
0x0000000000443d2d : jae 0x443ccc ; ret 0x4589
0x0000000000443d2c : jae 0x443ccd ; ret 0x4589
0x0000000000444135 : jae 0x4440d4 ; ret 0x8b48
0x0000000000444134 : jae 0x4440d5 ; ret 0x8b48
0x0000000000413b9f : jb 0x413b52 ; ret
0x0000000000414594 : jb 0x414547 ; ret
0x000000000042429a : jb 0x424286 ; std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000447885 : jb 0x447844 ; test al, 0x73 ; ret
0x0000000000492fd4 : jb 0x49300a ; ret
0x0000000000492fd3 : jb 0x49300b ; ret
0x0000000000493028 : jb 0x49305e ; ret
0x0000000000493027 : jb 0x49305f ; ret
0x00000000004a0c7c : jb 0x4a0cb2 ; ret
0x00000000004a0c7b : jb 0x4a0cb3 ; ret
0x00000000004b043e : jb 0x4b046f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000473d8d : jbe 0x473d66 ; adc ch, cl ; ret
0x00000000004025bf : je 0x4025bd ; pop rbp ; mov edi, 0x6c85d8 ; jmp rax
0x0000000000409b01 : je 0x409ab6 ; ret 0x89a7
0x000000000040f282 : je 0x40f237 ; ret 0x8ba7
0x0000000000493341 : je 0x4a0098 ; jmp 0x49f5b0
0x00000000004932d1 : je 0x4a1717 ; jmp 0x49f5b0
0x0000000000493379 : je 0x4a1a9e ; jmp 0x49f5b0
0x0000000000493309 : je 0x4a3386 ; jmp 0x49f5b0
0x00000000004c4969 : je 0x4c4968 ; jmp rsp
0x00000000004c4bc4 : je 0x4c4bfc ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000041cb85 : jg 0x41cb19 ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000478fbd : jg 0x478fd1 ; xchg eax, esp ; ret 0xd284
0x0000000000479224 : jg 0x479238 ; xchg eax, esp ; ret 0xd284
0x000000000047935a : jg 0x47936e ; xchg eax, esp ; ret 0xd284
0x000000000043b321 : jge 0x43b2e4 ; ret 0x89d3
0x000000000043bcb8 : jge 0x43bc7b ; ret 0xb2d3
0x000000000043bcd4 : jge 0x43bc97 ; ret 0x48d3
0x000000000044c751 : jge 0x44c74f ; add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044c776 : jge 0x44c774 ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004500d3 : jge 0x450089 ; add eax, 0xf000000 ; xchg eax, edx ; ret 0xd284
0x00000000004517f6 : jge 0x4517f7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004527c5 : jge 0x45281c ; ret 0x89b9
0x0000000000452c45 : jge 0x452c9c ; ret 0xb2b9
0x0000000000452c61 : jge 0x452cb8 ; ret 0x48b9
0x000000000045df0a : jge 0x45df0b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000045df2a : jge 0x45df2b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045f63b : jge 0x45f61e ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000468ded : jge 0x468dee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000485d36 : jge 0x485cbb ; ret 0xffd5
0x0000000000486800 : jge 0x4867e0 ; shr cl, cl ; ret 0x3b
0x000000000048d75a : jge 0x48d75b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000048d77a : jge 0x48d77b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000043b2cd : jl 0x43b290 ; ret 0x89d3
0x0000000000452691 : jl 0x4526e8 ; ret 0x89b9
0x00000000004c4868 : jl 0x4c48a7 ; cli ; call rsp
0x00000000004c4968 : jl 0x4c49e1 ; sti ; jmp rsp
0x00000000004c6301 : jl 0x4c62fe ; call qword ptr [rdx]
0x00000000004c6321 : jl 0x4c631e ; call qword ptr [rdx]
0x00000000004c6a2c : jl 0x4c6a51 ; add byte ptr [rax], al ; nop ; sti ; call qword ptr [rdx]
0x00000000004c7a81 : jl 0x4c7a84 ; call qword ptr [rax]
0x00000000004c7ab1 : jl 0x4c7ab4 ; call qword ptr [rax]
0x0000000000465f78 : jle 0x465f0c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000046ca69 : jle 0x46c9f8 ; int 0x80
0x00000000004c4669 : jle 0x4c4665 ; call rsp
0x0000000000450fff : jmp 0x2c2eec08
0x0000000000401feb : jmp 0x401ea7
0x000000000040e228 : jmp 0x413053
0x000000000040f277 : jmp 0x413054
0x000000000041458e : jmp 0x415050
0x000000000041a2c8 : jmp 0x41c70a
0x000000000041dfb8 : jmp 0x41e4ed
0x0000000000426f56 : jmp 0x427019
0x000000000042bfc6 : jmp 0x42bfcb
0x000000000042afd5 : jmp 0x42cfb8
0x000000000042c5c7 : jmp 0x42cfb9
0x000000000042c147 : jmp 0x42cfba
0x000000000042ff76 : jmp 0x4308d9
0x0000000000430366 : jmp 0x4308da
0x0000000000430b8d : jmp 0x430c18
0x0000000000431b27 : jmp 0x432268
0x0000000000435c6d : jmp 0x43675d
0x00000000004365c4 : jmp 0x43675f
0x00000000004380c5 : jmp 0x4392c5
0x0000000000439a1f : jmp 0x439aba
0x000000000043cf08 : jmp 0x43d409
0x000000000043e596 : jmp 0x43e678
0x0000000000441216 : jmp 0x441606
0x00000000004443e4 : jmp 0x4444a5
0x0000000000445b47 : jmp 0x445cb6
0x0000000000446751 : jmp 0x4468af
0x0000000000447c79 : jmp 0x447d96
0x000000000044a6a9 : jmp 0x44a787
0x0000000000424a5f : jmp 0x44b80c6c
0x000000000044c4f2 : jmp 0x44c5d5
0x0000000000451002 : jmp 0x451638
0x0000000000452c3a : jmp 0x452de3
0x0000000000454a00 : jmp 0x454a6b
0x0000000000459f4c : jmp 0x45a979
0x000000000045c9a0 : jmp 0x45d29c
0x000000000045cd65 : jmp 0x45d29e
0x000000000045d5ff : jmp 0x45d72f
0x000000000045dd0e : jmp 0x45ddee
0x000000000045ec44 : jmp 0x45eea0
0x000000000045f4d9 : jmp 0x45f665
0x000000000046136a : jmp 0x4614ae
0x0000000000461369 : jmp 0x4614af
0x0000000000461369 : jmp 0x4614b0
0x0000000000469252 : jmp 0x46941c
0x000000000046c409 : jmp 0x46de9b
0x000000000046c7a6 : jmp 0x46de9c
0x000000000046ed91 : jmp 0x46f15f
0x000000000047166e : jmp 0x471958
0x0000000000477198 : jmp 0x477542
0x00000000004773b3 : jmp 0x477543
0x0000000000486f50 : jmp 0x48a3d0
0x0000000000484e54 : jmp 0x48a3d1
0x0000000000486221 : jmp 0x48a3d2
0x000000000048bf34 : jmp 0x48bfd8
0x00000000004668af : jmp 0x4908f1ff
0x00000000004669fb : jmp 0x4908f34b
0x0000000000466acd : jmp 0x4908f41d
0x0000000000466b4e : jmp 0x4908f49e
0x0000000000468af4 : jmp 0x49091444
0x0000000000468b6f : jmp 0x490914bf
0x00000000004932d7 : jmp 0x49f5aa
0x00000000004a9faf : jmp 0x4a9f9e
0x00000000004a089f : jmp 0x4acb86
0x00000000004a0964 : jmp 0x4acb87
0x00000000004a0963 : jmp 0x4acb88
0x00000000004a12ac : jmp 0x4acb8a
0x00000000004a99c6 : jmp 0x4acb8b
0x00000000004ae77b : jmp 0x4af1e7
0x00000000004ae6b8 : jmp 0x4af1e9
0x00000000004b07e3 : jmp 0x4b0848
0x00000000004b2f7b : jmp 0x4b40c0
0x00000000004b3996 : jmp 0x4b40c1
0x00000000004b41e9 : jmp 0x4b41f4
0x00000000004b6cf6 : jmp 0x4b7db9
0x00000000004b6b13 : jmp 0x4b7dba
0x00000000004b7f50 : jmp 0x4b7f5b
0x00000000004b8665 : jmp 0x4b8670
0x00000000004b87c7 : jmp 0x4b87d2
0x00000000004b8a35 : jmp 0x4b8a40
0x00000000004be3f6 : jmp 0x4be6d8
0x00000000004bf08d : jmp 0x4bf108
0x00000000004af35a : jmp 0x4f56b656
0x000000000047602a : jmp 0xffffffffc248a8d2
0x0000000000476029 : jmp 0xffffffffc248a8d3
0x0000000000413000 : jmp qword ptr [rax]
0x0000000000423caa : jmp qword ptr [rbx]
0x0000000000412a75 : jmp qword ptr [rcx]
0x000000000041b924 : jmp qword ptr [rdi]
0x000000000041a82c : jmp qword ptr [rdx]
0x0000000000439020 : jmp qword ptr [rsi]
0x00000000004abe2a : jmp qword ptr [rsp + rbp*8 + 0x50e9c2f8]
0x000000000049b5eb : jmp r14
0x00000000004025c7 : jmp rax
0x0000000000412e52 : jmp rbx
0x0000000000486d5a : jmp rcx
0x000000000042ca5d : jmp rdi
0x0000000000402607 : jmp rdx
0x0000000000424264 : jmp rsi
0x0000000000454520 : jmp rsp
0x00000000004025f0 : jne 0x4025f7 ; pop rbp ; ret
0x0000000000415a51 : jne 0x415a49 ; mov rax, rdx ; pop rbp ; ret
0x000000000045f699 : jne 0x45f664 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000461465 : jne 0x461441 ; call rax
0x00000000004b5d46 : jne 0x4b5dc1 ; ret 0x8589
0x00000000004b5ece : jne 0x4b5f49 ; ret 0x8589
0x00000000004b74e8 : jne 0x4b7563 ; ret 0xedb9
0x00000000004b7740 : jne 0x4b77bb ; ret 0xedb9
0x0000000000413915 : jno 0x4138c8 ; ret
0x0000000000477394 : jno 0x4773f9 ; mov word ptr [rcx + rdi*4], es ; mov ah, 0x3a ; ret
0x00000000004c49e1 : jnp 0x4c49e1 ; call rsp
0x0000000000492e4c : jns 0x492ea0 ; ret 0x8589
0x0000000000492ea0 : jns 0x492ef4 ; ret 0x8589
0x00000000004a424c : jns 0x4a42a0 ; ret 0xd4b9
0x0000000000430bfa : jo 0x430c5b ; ret
0x000000000046d1f4 : jo 0x46d189 ; xchg eax, ebp ; push -1 ; ret 0x9589
0x00000000004769e2 : jo 0x476a43 ; ret
0x000000000047fc4e : jo 0x47fc5a ; ret
0x00000000004818be : jo 0x4818ca ; ret
0x0000000000484e0d : jo 0x484e19 ; ret
0x000000000048c0f4 : jo 0x48c155 ; ret
0x000000000048d75f : jo 0x48d7c0 ; ret
0x000000000048d75e : jo 0x48d7c1 ; ret
0x00000000004c6d20 : jo 0x4c6d7a ; cld ; call rdx
0x000000000041a15f : jp 0x41a156 ; mov cl, -0x76 ; push rbp ; ret
0x000000000042bf24 : jrcxz 0x42bf2d ; inc dword ptr [rcx - 0x42aaab3f] ; ret
0x000000000042c19c : jrcxz 0x42c1a3 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000042cf3c : jrcxz 0x42cf42 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000478adb : jrcxz 0x478a60 ; ret 0xffbf
0x0000000000478adb : jrcxz 0x478a66 ; ret 0xffbf
0x000000000044674f : js 0x446763 ; jmp 0x4468b1
0x000000000045443d : js 0x45442a ; ret
0x0000000000473ea6 : js 0x473f07 ; ret
0x0000000000449636 : lahf ; adc dword ptr [rbx], eax ; ret 0x4589
0x000000000042bc78 : lahf ; ret
0x00000000004a4570 : lahf ; ret 0xd284
0x0000000000448afe : lahf ; ret 0xe280
0x00000000004867fe : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000046db91 : lcall ptr [rsi] ; jmp qword ptr [rdx]
0x00000000004878fe : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000455206 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c538 : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x0000000000447884 : lea esi, dword ptr [rdx - 0x47] ; test al, 0x73 ; ret
0x00000000004125b9 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000046eefd : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040680c : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000447883 : lea r14, qword ptr [rdx - 0x47] ; test al, 0x73 ; ret
0x00000000004125b8 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040680b : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004a3f92 : ljmp ptr [rax] ; ret 0xeb2b
0x000000000041c436 : ljmp ptr [rcx - 0x161225ea] ; ret 2
0x00000000004a07ca : ljmp ptr [rcx] ; or eax, 0xb0e9b409 ; ret
0x000000000046dc19 : ljmp ptr [rcx] ; ret 0xd701
0x000000000046c8ba : ljmp ptr [rcx] ; ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x000000000048515e : ljmp ptr [rdi] ; ret 0x23da
0x000000000042cd05 : ljmp ptr [rsp + rbx] ; ret 0xe9cb
0x00000000004c505c : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], dh ; cmc ; cmc ; jmp qword ptr [rdi]
0x00000000004500d4 : lodsb al, byte ptr [rsi] ; add eax, 0xf000000 ; xchg eax, edx ; ret 0xd284
0x00000000004c4668 : lodsb al, byte ptr [rsi] ; jle 0x4c4666 ; call rsp
0x000000000041dfb7 : lodsb al, byte ptr [rsi] ; jmp 0x41e4ee
0x000000000041dfb6 : lodsb al, byte ptr [rsi] ; jmp 0x41e4ef
0x000000000044c4f1 : lodsb al, byte ptr [rsi] ; jmp 0x44c5d6
0x000000000044c4f0 : lodsb al, byte ptr [rsi] ; jmp 0x44c5d7
0x00000000004c5a5c : lodsb al, byte ptr [rsi] ; or al, 0 ; add al, dl ; add edi, eax ; jmp qword ptr [rdi]
0x00000000004c5b5c : lodsb al, byte ptr [rsi] ; or eax, 0x1d500000 ; clc ; jmp qword ptr [rsi]
0x0000000000492ef3 : lodsb al, byte ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8589
0x00000000004931f8 : lodsb al, byte ptr [rsi] ; ret
0x000000000045ab0c : lodsb al, byte ptr [rsi] ; ret 0x89af
0x000000000042c24f : lodsb al, byte ptr [rsi] ; ret 0xf0
0x00000000004c5d5c : lodsb al, byte ptr [rsi] ; sldt word ptr [rax] ; xor byte ptr [rdx - 8], cl ; call rdi
0x000000000045e9cd : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000492f47 : lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8589
0x00000000004ab16b : lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8948
0x00000000004a22cb : lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8cb9
0x000000000045ab4e : lodsd eax, dword ptr [rsi] ; ret 0x89af
0x000000000045b1b1 : lodsd eax, dword ptr [rsi] ; ret 0xb9af
0x0000000000415b5a : loop 0x415b61 ; movzx eax, dl ; pop rbp ; ret
0x0000000000415b5a : loop 0x415b63 ; movzx eax, dl ; pop rbp ; ret
0x0000000000430659 : loop 0x430616 ; ret 0x78cd
0x000000000045e010 : loop 0x45e005 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000495282 : loop 0x495216 ; test dword ptr [rax + rbp*8 - 0x7bf00001], eax ; ret 0x108
0x00000000004b8962 : loop 0x4b8915 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041e1e1 : loope 0x41e19f ; ret 0x37e8
0x000000000042429b : loope 0x4242a2 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000436418 : loope 0x436424 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000449bc9 : loope 0x449bd5 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044cbdc : loope 0x44cbe8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044decf : loope 0x44dedb ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000045ed4e : loope 0x45ed09 ; xchg eax, ebp ; jmp 0x45eea3
0x0000000000488165 : loope 0x488133 ; jmp 0x48a3d3
0x000000000041acb2 : loopne 0x41ac72 ; out -0x7a, al ; pop rbx ; ret
0x000000000042b0e8 : loopne 0x42b0a8 ; xchg eax, r11d ; stc ; ret 0x8b48
0x000000000043dbd1 : loopne 0x43dbcb ; add al, -0xa ; ret
0x000000000043dbd0 : loopne 0x43dbcc ; add al, -0xa ; ret
0x000000000043e6ac : loopne 0x43e662 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000441c9c : loopne 0x441d13 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000444ccf : loopne 0x444cbc ; ret 0
0x0000000000444cce : loopne 0x444cbd ; ret 0
0x000000000044587c : loopne 0x4458af ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000447aa3 : loopne 0x447af1 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000447aa2 : loopne 0x447af2 ; mov esi, dword ptr [rcx] ; call rax
0x0000000000448930 : loopne 0x44897e ; mov esi, dword ptr [rcx] ; call rax
0x000000000044892f : loopne 0x44897f ; mov esi, dword ptr [rcx] ; call rax
0x0000000000449634 : loopne 0x449668 ; lahf ; adc dword ptr [rbx], eax ; ret 0x4589
0x0000000000449633 : loopne 0x449669 ; lahf ; adc dword ptr [rbx], eax ; ret 0x4589
0x000000000044d637 : loopne 0x44d640 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000450953 : loopne 0x4508d8 ; ret 0xffd0
0x000000000045b227 : loopne 0x45b230 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046043a : loopne 0x460441 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000463a8e : loopne 0x463adf ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000463a8d : loopne 0x463ae0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000468d2d : loopne 0x468d80 ; add esp, 0x1d0 ; pop rbp ; ret
0x000000000046e472 : loopne 0x46e4d8 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000475e68 : loopne 0x475e25 ; ret 0xd50f
0x00000000004794ca : loopne 0x4794d4 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047c543 : loopne 0x47c596 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000048baed : loopne 0x48bb53 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000048ced4 : loopne 0x48cf27 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004afea3 : loopne 0x4afeac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004b082e : loopne 0x4b087e ; add esp, 0x60 ; pop rbp ; ret
0x00000000004b082d : loopne 0x4b087f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004b80bf : loopne 0x4b8053 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b80be : loopne 0x4b8054 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004bacbc : loopne 0x4bad0b ; mov esp, ebp ; pop rbp ; ret
0x00000000004bacbb : loopne 0x4bad0c ; mov esp, ebp ; pop rbp ; ret
0x00000000004baf0c : loopne 0x4baf5b ; mov esp, ebp ; pop rbp ; ret
0x00000000004baf0b : loopne 0x4baf5c ; mov esp, ebp ; pop rbp ; ret
0x00000000004bec80 : loopne 0x4bec87 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004bf612 : loopne 0x4bf619 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004c6c20 : loopne 0x4c6c76 ; cld ; call rdi
0x0000000000454439 : mov ah, -0x13 ; adc eax, ebp ; js 0x45442e ; ret
0x00000000004b8961 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000485d2d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000485e07 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000479298 : mov ah, -1 ; ret 0x5589
0x00000000004c4524 : mov ah, 0x16 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add bh, al ; call rsp
0x00000000004c45a4 : mov ah, 0x18 ; add byte ptr [rax], al ; cld ; clc ; call rsp
0x00000000004c45e4 : mov ah, 0x19 ; add byte ptr [rax], al ; cmp al, 0x47 ; clc ; call rsp
0x00000000004c4664 : mov ah, 0x1b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4c466a ; call rsp
0x00000000004c46a4 : mov ah, 0x1c ; add byte ptr [rax], al ; sbb al, -0x63 ; clc ; call rsp
0x00000000004c46e4 : mov ah, 0x1d ; add byte ptr [rax], al ; sbb al, -8 ; clc ; call rsp
0x00000000004c4724 : mov ah, 0x1e ; add byte ptr [rax], al ; or al, 0x1c ; stc ; call rsp
0x00000000004c4764 : mov ah, 0x1f ; add byte ptr [rax], al ; sbb al, 0x4a ; stc ; call rsp
0x00000000004c47e4 : mov ah, 0x21 ; add byte ptr [rax], al ; sub al, -0x3e ; stc ; call rsp
0x00000000004c4864 : mov ah, 0x23 ; add byte ptr [rax], al ; jl 0x4c48ab ; cli ; call rsp
0x0000000000443ce8 : mov ah, 0x2d ; jae 0x443c8d ; ret 0x4589
0x0000000000443d2a : mov ah, 0x2d ; jae 0x443ccf ; ret 0x4589
0x0000000000441182 : mov ah, 0x2d ; ret
0x00000000004b47d0 : mov ah, 0x2d ; ret 0x37ac
0x0000000000446230 : mov ah, 0x2d ; ret 0x40b5
0x0000000000441f80 : mov ah, 0x2d ; ret 0x9e89
0x0000000000440e94 : mov ah, 0x2d ; ret 0xc99b
0x00000000004b479e : mov ah, 0x2d ; xchg eax, ebp ; ret
0x00000000004b47e9 : mov ah, 0x2d ; xchg eax, esi ; ret
0x0000000000446b4a : mov ah, 0x2d ; xor byte ptr [rdi], dl ; ret 0x898f
0x0000000000446c28 : mov ah, 0x2d ; xor dword ptr [rdi], edx ; ret 0x898f
0x0000000000476d9f : mov ah, 0x3a ; ret
0x000000000045efae : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000483db5 : mov ah, 0x75 ; ret
0x000000000049300b : mov ah, bl ; ret
0x000000000048c8c3 : mov al, -0x47 ; ret
0x000000000045ed4f : mov al, -0x6b ; jmp 0x45eea2
0x00000000004bdbbf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000414da6 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004253bf : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004498f4 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043bd09 : mov al, 0x48 ; add esp, 0x200 ; pop rbp ; ret
0x0000000000468130 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000041c21b : mov al, 0x48 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004730e2 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414eab : mov al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042a9df : mov al, 4 ; ret 0x8964
0x000000000042aedb : mov al, 4 ; ret 0x8a64
0x000000000042af02 : mov al, 4 ; ret 0xe964
0x00000000004b8dbb : mov al, al ; movzx eax, al ; pop rbp ; ret
0x0000000000424a58 : mov al, byte ptr [rbp + 0x29] ; rol dword ptr [rcx - 0x7f], cl ; ret
0x000000000044c7e5 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004b91fa : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044789a : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004251f8 : mov al, ch ; ret 0xfdce
0x0000000000476287 : mov al, ch ; ret 0xfff8
0x00000000004b8e7c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004b8dba : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a0871 : mov ax, 0xce9 ; ret
0x00000000004a0a54 : mov ax, 0xd9b9 ; ret
0x00000000004b8b84 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000048d5fc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004b8b89 : mov bh, -0x40 ; pop rbp ; ret
0x000000000040689a : mov bh, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4c2f
0x00000000004307da : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rax
0x00000000004a9fae : mov bl, -0x15 ; call 0xffffffffc3e658d6
0x0000000000459064 : mov bl, -0x77 ; test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret 0x15
0x00000000004c42e9 : mov bl, -0xb ; call rsp
0x0000000000406b86 : mov bl, -1 ; inc edi ; mov word ptr [r8], ds ; xchg rax, r13 ; ret 0x8589
0x00000000004c64a1 : mov bl, -7 ; jmp rbx
0x0000000000476d4b : mov bl, 0x3a ; ret
0x000000000047d755 : mov bl, 0x75 ; ret
0x0000000000411804 : mov byte ptr [rax + rax + 1], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041182c : mov byte ptr [rax + rax + 2], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430795 : mov byte ptr [rax + rax - 0x18], ch ; ret
0x0000000000405d8f : mov byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000476b80 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000046bfab : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045ee11 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439d87 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004ac3c9 : mov byte ptr [rcx - 0x7f], -0x3a ; ret
0x0000000000402623 : mov byte ptr [rip + 0x2c600e], 1 ; ret
0x000000000041091d : mov ch, -0x47 ; ret
0x00000000004c4b99 : mov ch, -2 ; call rsp
0x00000000004855af : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041a162 : mov cl, -0x76 ; push rbp ; ret
0x0000000000428ce4 : mov cs, word ptr [rax] ; ret
0x0000000000428c74 : mov dh, -0x29 ; ret 0x8589
0x000000000042b914 : mov dh, -0x29 ; ret 0xc5b9
0x0000000000469624 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000415b5d : mov dh, -0x3e ; pop rbp ; ret
0x000000000044c81d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430bf5 : mov dh, -0x3f ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043641b : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462a82 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004ba1c4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000415538 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004478a0 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004b8e7f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000042b370 : mov dh, -0x47 ; cmp al, 0x55 ; ret
0x00000000004714bf : mov dh, 0x23 ; and byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045cad5 : mov dh, 0x3c ; add eax, ebp ; ret
0x00000000004c7381 : mov dh, bh ; call rdx
0x00000000004bac7a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042b8ad : mov dl, -0x47 ; cmp esp, esp ; ret
0x0000000000470635 : mov dl, 0x62 ; ret
0x00000000004b9ef1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000047bcc9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000047b89f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044912d : mov dword ptr [rbp - 0x12c], ecx ; call rdx
0x00000000004612e5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000463929 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000046924f : mov dword ptr [rbp - 0x14], eax ; jmp 0x46941f
0x00000000004bf08a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4bf10b
0x00000000004676fd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000467930 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x0000000000479ec0 : mov dword ptr [rbp - 0x198], ecx ; call rdx
0x000000000047a108 : mov dword ptr [rbp - 0x1a0], ecx ; call rdx
0x000000000045dd0b : mov dword ptr [rbp - 0x24], eax ; jmp 0x45ddf1
0x000000000045ec41 : mov dword ptr [rbp - 0x34], eax ; jmp 0x45eea3
0x000000000044a6a6 : mov dword ptr [rbp - 0x38], eax ; jmp 0x44a78a
0x000000000045f4d6 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x45f668
0x0000000000449394 : mov dword ptr [rbp - 0x3c], eax ; mov dword ptr [rbp - 0x40], ecx ; call r10
0x000000000045f561 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x45f668
0x0000000000449397 : mov dword ptr [rbp - 0x40], ecx ; call r10
0x000000000048bf31 : mov dword ptr [rbp - 0x44], eax ; jmp 0x48bfdb
0x000000000045efac : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044c4ef : mov dword ptr [rbp - 0x54], eax ; jmp 0x44c5d8
0x00000000004a0899 : mov dword ptr [rbp - 0x57c], eax ; jmp 0x4acb8c
0x000000000043cf05 : mov dword ptr [rbp - 0x64], eax ; jmp 0x43d40c
0x00000000004ae778 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4af1ea
0x000000000045c99d : mov dword ptr [rbp - 0x74], eax ; jmp 0x45d29f
0x0000000000435c6a : mov dword ptr [rbp - 0x7c], eax ; jmp 0x436760
0x00000000004488dc : mov dword ptr [rbp - 0x90], ecx ; call rdx
0x0000000000425417 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047a7d8 : mov dword ptr [rbp - 0xe8], ecx ; call rdx
0x000000000045f541 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000425565 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004443e1 : mov dword ptr [rbp - 8], eax ; jmp 0x4444a8
0x00000000004517f5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000047bfa6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468df0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040fac0 : mov dword ptr [rip + 0x58b80000], esi ; ret 0x23d9
0x000000000047bb4d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000047b08e : mov eax, 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430683 : mov eax, 0x48008b48 ; mov esp, ebp ; pop rbp ; ret
0x0000000000467a9b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004b6cf7 : mov eax, 0xb8000010 ; ret
0x0000000000410cb3 : mov eax, 0xdb986a3 ; ret 0x762c
0x0000000000459fe5 : mov eax, 0xffffffc ; ret 0x8589
0x000000000048d11e : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406809 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004267eb : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b06ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000447d10 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048d8b1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000476b84 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004b8203 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004b4291 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004b087e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004563be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004769dc : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004bef05 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000461682 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004b082c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004b80bd : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004bacba : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000457f82 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000473ea0 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000043eb6e : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044150a : mov eax, dword ptr [rbp - 0x30] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047bb4f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045f69f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x00000000004ad56a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000466ec7 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004723a6 : mov eax, dword ptr [rbp - 0x58] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047b68f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x00000000004485d3 : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000045d086 : mov eax, dword ptr [rbp - 0xc] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044502f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043ece2 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ad294 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004b44ec : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044bba5 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004517f9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004493fc : mov eax, dword ptr [rcx] ; mov rsi, qword ptr [rax] ; call rdx
0x000000000045df0d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000045df2d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048d77d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048d75d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000047bb4e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004b8b86 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x00000000004b85d3 : mov eax, eax ; pop rbp ; ret
0x00000000004b89aa : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000048cf1c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004ad35a : mov eax, ecx ; pop rbp ; ret
0x000000000048d34f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e288 : mov eax, edi ; pop rbp ; ret
0x0000000000462401 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415a54 : mov eax, edx ; pop rbp ; ret
0x000000000048d1a3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004b88cd : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004b8b85 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x00000000004c4bc1 : mov ebp, 0x3174fffe ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000472ebd : mov ebp, 0x8b48164c ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000488568 : mov ebp, 0xe19c53ba ; ret
0x000000000040264b : mov ebp, esp ; call rax
0x00000000004025b1 : mov ebp, esp ; ja 0x4025bc ; pop rbp ; ret
0x000000000040687e : mov ebx, 0x8d48ffff ; cmp al, 0x25 ; ret 0x4c2f
0x000000000045dd29 : mov ebx, 0xb8000000 ; ret 0xebc8
0x000000000047727d : mov ebx, 0xb8000002 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb96e
0x000000000043d682 : mov ecx, 0x3de9ca ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a99c7 : mov ecx, 0xb8000031 ; jmp rsi
0x000000000047b89c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000046383b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000463a8c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000447aa1 : mov ecx, dword ptr [rbp - 0x20] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004643a6 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000448579 : mov ecx, dword ptr [rbp - 0x30] ; mov rcx, qword ptr [rcx] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000448b68 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045f63e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000449193 : mov ecx, dword ptr [rbp - 0x60] ; mov rcx, qword ptr [rcx] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000467a9d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000046383f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044857d : mov ecx, dword ptr [rcx] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043aa41 : mov ecx, gs ; ret
0x000000000044dcf3 : mov edi, 0x39472b05 ; insd dword ptr [rdi], dx ; ret 0x4818
0x00000000004a0c77 : mov edi, 0x4db80000 ; jb 0x4a0cb7 ; ret
0x0000000000402645 : mov edi, 0x6c7e20 ; mov rbp, rsp ; call rax
0x00000000004025c2 : mov edi, 0x6c85d8 ; jmp rax
0x0000000000402602 : mov edi, 0x6c85d8 ; jmp rdx
0x0000000000478ade : mov edi, 0x81ffffff ; ret 0x91d1
0x00000000004383a0 : mov edi, 0x81ffffff ; ret 0xb426
0x0000000000469253 : mov edi, 0xb8000001 ; ret
0x00000000004b2df6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000484e07 : mov edi, 0xb8000055 ; wait ; jo 0x484e1f ; ret
0x0000000000470a4b : mov edi, 0xb989cd58 ; ret 0xbd43
0x00000000004493f9 : mov edi, dword ptr [rax] ; mov rax, qword ptr [rcx] ; mov rsi, qword ptr [rax] ; call rdx
0x0000000000468dec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000045df09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000045df29 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048d779 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048d759 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000463842 : mov edi, dword ptr [rcx] ; call rax
0x0000000000447a9e : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x20] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000448b65 : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000461461 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004bf6d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004bf6d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044dd03 : mov edx, 0x39472b05 ; insd dword ptr [rdi], dx ; ret 0x4818
0x00000000004be36e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004855cb : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004758f1 : mov edx, 0xb41ebe2d ; ret
0x00000000004a22c6 : mov edx, 0xb80000a8 ; lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8cb9
0x0000000000454492 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000476285 : mov edx, dword ptr [rbp - 0x78] ; call 0x4024d5
0x000000000048d8b5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000486442 : mov esi, 0x39443e04 ; ret 0xf41
0x00000000004be357 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000430656 : mov esi, 0xb9e25f30 ; ret 0x78cd
0x0000000000432152 : mov esi, 0xec894800 ; pop rbp ; ret
0x00000000004493ff : mov esi, dword ptr [rax] ; call rdx
0x0000000000461464 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000447aa5 : mov esi, dword ptr [rcx] ; call rax
0x0000000000449392 : mov esi, dword ptr [rdx] ; mov dword ptr [rbp - 0x3c], eax ; mov dword ptr [rbp - 0x40], ecx ; call r10
0x0000000000402600 : mov esi, eax ; mov edi, 0x6c85d8 ; jmp rdx
0x000000000045f69c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004c73a1 : mov esi, edi ; call qword ptr [rdx]
0x000000000043541a : mov esp, 0x3309b939 ; ret
0x00000000004a3db3 : mov esp, 0x4f58b945 ; ret 0xb2ee
0x0000000000472cc9 : mov esp, 0x8b48dd7a ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000048bf33 : mov esp, 0x99e9 ; add al, ch ; ret 0xf75f
0x0000000000411bb7 : mov esp, 0xaafffffe ; or al, 0xffffffffffffff95 ; ret
0x0000000000447039 : mov esp, 0xb8000000 ; xor dword ptr [rdi], edx ; ret 0xb98f
0x0000000000411681 : mov esp, 0xe9fffffe ; ret
0x0000000000410d82 : mov esp, 0xe9fffffe ; ret 0x22
0x000000000040fe82 : mov esp, 0xe9fffffe ; ret 0x31
0x000000000041553b : mov esp, ebp ; pop rbp ; ret
0x000000000049305f : mov esp, ebx ; ret
0x00000000004517f4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000047bfa5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468def : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000454438 : mov r12b, -0x13 ; adc eax, ebp ; js 0x45442f ; ret
0x0000000000443ce7 : mov r12b, 0x2d ; jae 0x443c8e ; ret 0x4589
0x0000000000443d29 : mov r12b, 0x2d ; jae 0x443cd0 ; ret 0x4589
0x0000000000441181 : mov r12b, 0x2d ; ret
0x00000000004b47cf : mov r12b, 0x2d ; ret 0x37ac
0x000000000044622f : mov r12b, 0x2d ; ret 0x40b5
0x0000000000441f7f : mov r12b, 0x2d ; ret 0x9e89
0x0000000000440e93 : mov r12b, 0x2d ; ret 0xc99b
0x00000000004b479d : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x00000000004b47e8 : mov r12b, 0x2d ; xchg eax, esi ; ret
0x0000000000446b49 : mov r12b, 0x2d ; xor byte ptr [rdi], dl ; ret 0x898f
0x0000000000446c27 : mov r12b, 0x2d ; xor dword ptr [rdi], edx ; ret 0x898f
0x000000000045efad : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000048bf32 : mov r12d, 0x99e9 ; add al, ch ; ret 0xf75f
0x00000000004307d9 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], esi ; call rax
0x00000000004251f7 : mov r8b, r13b ; ret 0xfdce
0x0000000000430682 : mov r8d, 0x48008b48 ; mov esp, ebp ; pop rbp ; ret
0x000000000043aa40 : mov r9d, gs ; ret
0x00000000004267ea : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b06aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000048d8b0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000476b83 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004b087d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004563bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004769db : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000461681 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004b082b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000457f81 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000473e9f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000045f69e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004723a5 : mov rax, qword ptr [rbp - 0x58] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ad293 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044bba4 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004517f8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004493fb : mov rax, qword ptr [rcx] ; mov rsi, qword ptr [rax] ; call rdx
0x000000000045df0c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000045df2c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048d77c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048d75c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004b89a9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004b85d2 : mov rax, r8 ; pop rbp ; ret
0x000000000042e287 : mov rax, rdi ; pop rbp ; ret
0x0000000000462400 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415a53 : mov rax, rdx ; pop rbp ; ret
0x000000000040264a : mov rbp, rsp ; call rax
0x00000000004025b0 : mov rbp, rsp ; ja 0x4025bd ; pop rbp ; ret
0x0000000000447aa0 : mov rcx, qword ptr [rbp - 0x20] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004643a5 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000448b67 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045f63d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000467a9c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000046383e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044857c : mov rcx, qword ptr [rcx] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004493f8 : mov rdi, qword ptr [rax] ; mov rax, qword ptr [rcx] ; mov rsi, qword ptr [rax] ; call rdx
0x0000000000468deb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000045df08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000045df28 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048d778 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048d758 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000463841 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000461460 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000454491 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000476284 : mov rdx, qword ptr [rbp - 0x78] ; call 0x4024d6
0x000000000048d8b4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004493fe : mov rsi, qword ptr [rax] ; call rdx
0x0000000000461463 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000447aa4 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004025ff : mov rsi, rax ; mov edi, 0x6c85d8 ; jmp rdx
0x000000000045f69b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000041553a : mov rsp, rbp ; pop rbp ; ret
0x000000000042b36f : mov sil, -0x47 ; cmp al, 0x55 ; ret
0x00000000004c7380 : mov sil, dil ; call rdx
0x0000000000406b8a : mov word ptr [r8], ds ; xchg rax, r13 ; ret 0x8589
0x00000000004b0441 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000406b8b : mov word ptr [rax], ds ; xchg rax, r13 ; ret 0x8589
0x0000000000477396 : mov word ptr [rcx + rdi*4], es ; mov ah, 0x3a ; ret
0x00000000004c6d3c : mov word ptr [rdi], ds ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], dl ; call qword ptr [rbx]
0x00000000004aa2cb : movabs al, byte ptr [0x81fa293e8bfffffd] ; ret 1
0x000000000046ff08 : movabs al, byte ptr [0x894100000000ba41] ; ret
0x000000000041be8a : movabs al, byte ptr [0xfff91885c7006c88] ; call qword ptr [rdi]
0x00000000004810a8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000047a294 : movabs dword ptr [0x8148f2294840219a], eax ; ret 1
0x00000000004a66dd : movabs dword ptr [0xfffa8485c7000064], eax ; call rbx
0x000000000041e6e4 : movabs eax, dword ptr [0x8f0f90458958a6b0] ; ret 4
0x0000000000439017 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x0000000000466b2a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x00000000004a6899 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; clc ; ret 0x1bb9
0x00000000004abe2b : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; clc ; ret 0x50e9
0x0000000000492fb7 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; clc ; ret 0x8589
0x000000000041458d : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x415051
0x0000000000426f55 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x42701a
0x000000000042693f : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0x8b40
0x0000000000426f83 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0xe940
0x00000000004842f5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004ad893 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000476be0 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x896e
0x0000000000477283 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb96e
0x00000000004adad1 : movsd xmm0, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432151 : movsx eax, byte ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047035c : movsxd rax, ecx ; pop rbp ; ret
0x00000000004adad2 : movups xmm0, xmmword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462a81 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004ba1c3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000415537 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044789f : movzx eax, al ; pop rbp ; ret
0x00000000004b8e7e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004b8b88 : movzx eax, ax ; pop rbp ; ret
0x0000000000469623 : movzx eax, bh ; pop rbp ; ret
0x0000000000439d8a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000044c81c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430bf4 : movzx eax, cl ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043641a : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000048d5fb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000469622 : movzx eax, dil ; pop rbp ; ret
0x0000000000415b5c : movzx eax, dl ; pop rbp ; ret
0x00000000004be168 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000426f7d : nop ; add byte ptr [rax], al ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; ret 0xe940
0x000000000043922b : nop ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdx
0x00000000004761f2 : nop ; add rsp, 0x420 ; pop rbp ; ret
0x000000000043c036 : nop ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406808 : nop ; mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004c75a0 : nop ; or edi, edi ; jmp rcx
0x00000000004c6bc0 : nop ; push rax ; cld ; jmp qword ptr [rbx]
0x000000000047d595 : nop ; ret
0x000000000048b9a2 : nop ; ret 0x148
0x000000000048b9b6 : nop ; ret 0x2948
0x00000000004c6a30 : nop ; sti ; call qword ptr [rdx]
0x00000000004bf6f8 : nop dword ptr [rax + rax] ; ret
0x00000000004c5a5d : or al, 0 ; add al, dl ; add edi, eax ; jmp qword ptr [rdi]
0x0000000000479680 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414188 : or al, 0 ; add cl, ch ; ret 1
0x00000000004c5fbc : or al, 0x12 ; add byte ptr [rax], al ; and dh, cl ; clc ; call qword ptr [rax]
0x00000000004c4728 : or al, 0x1c ; stc ; call rsp
0x00000000004c6bbc : or al, 0x1e ; add byte ptr [rax], al ; nop ; push rax ; cld ; jmp qword ptr [rbx]
0x0000000000485d2a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000485e04 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004420ce : or al, 0x47 ; sal byte ptr [rbx + 0x48e28948], -0x7d ; ret 0x48f0
0x000000000040a7ce : or al, 0xffffffffffffff95 ; ret
0x000000000041390e : or al, byte ptr [rax] ; add byte ptr [rbx + 0x712da045], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000469231 : or bh, al ; in al, dx ; ret 0xe8ff
0x00000000004a0c76 : or bh, byte ptr [rdi + 0x4db80000] ; jb 0x4a0cb8 ; ret
0x000000000041cb8a : or byte ptr [r15], 0x8f ; ret 6
0x0000000000415b1f : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x000000000047b8a0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000423ca2 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x00000000004300cb : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdx
0x00000000004c561d : or byte ptr [rax], al ; add byte ptr [rax - 0x65], ah ; idiv edi ; ret 8
0x00000000004add58 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000044fef9 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000433943 : or byte ptr [rbx], dh ; ret
0x0000000000449b73 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041cb8b : or byte ptr [rdi], 0x8f ; ret 6
0x0000000000415b20 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000046ed90 : or cl, ch ; ret
0x00000000004ac1de : or dword ptr [rax - 0x46], ecx ; ret 0xb7cc
0x0000000000424d8c : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000044ba16 : or dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000047bfa4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000434583 : or dword ptr [rbx], esi ; ret
0x000000000043acc2 : or dword ptr [rcx - 0x47], ecx ; insb byte ptr [rdi], dx ; ret 0x9704
0x000000000045cad3 : or dword ptr [rdi], ecx ; mov dh, 0x3c ; add eax, ebp ; ret
0x00000000004c5b5d : or eax, 0x1d500000 ; clc ; jmp qword ptr [rsi]
0x000000000041ee6a : or eax, 0x543cb990 ; ret
0x0000000000410b80 : or eax, 0x8945004c ; ret 0xb841
0x00000000004a07cc : or eax, 0xb0e9b409 ; ret
0x00000000004c42e5 : or eax, 0xb3dc0000 ; cmc ; call rsp
0x00000000004b85d0 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x00000000004b88d3 : or eax, esi ; pop rbp ; ret
0x00000000004b89a7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000047bb4b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004c75a1 : or edi, edi ; jmp rcx
0x000000000046ee01 : or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x000000000041b03d : or esp, dword ptr [rdi + 0x5157b9c9] ; ret 0xb2cf
0x00000000004b89a6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004b85cf : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000493044 : out -0x55, al ; ret
0x000000000044ca1c : out -0x6b, al ; ret 0x480e
0x000000000044c988 : out -0x6b, al ; ret 0x890e
0x000000000044ca03 : out -0x6b, al ; ret 0xb20e
0x0000000000417160 : out -0x7a, al ; pop rbx ; ret
0x00000000004c44e9 : out -9, eax ; call rsp
0x000000000041a13e : out 0x2a, eax ; add byte ptr [rax + 0x558801e2], al ; ret
0x0000000000469620 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000048770b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041091a : out dx, al ; add esi, ebx ; mov ch, -0x47 ; ret
0x00000000004b91fc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004ac3c2 : out dx, al ; ret
0x0000000000464fb9 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004b7cc0 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000465138 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044c7e7 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c48e9 : out dx, eax ; cli ; jmp rsp
0x000000000048c8c2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041a160 : out dx, eax ; mov cl, -0x76 ; push rbp ; ret
0x00000000004be359 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000049ed4f : outsb dx, byte ptr [rsi] ; ret
0x000000000045ef39 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004887f5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000047d446 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000488840 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004af5e1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000049330b : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], al ; add cl, ch ; xchg eax, esp ; ret 0
0x0000000000424018 : outsd dx, dword ptr [rsi] ; add eax, 0x89480000 ; in al, dx ; pop rbp ; ret
0x000000000041ee68 : outsd dx, dword ptr [rsi] ; or eax, 0x543cb990 ; ret
0x00000000004be35c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000435680 : paddb mm2, qword ptr [rdx] ; ret 0x558a
0x0000000000433f47 : paddb mm2, qword ptr [rdx] ; ret 0x8589
0x00000000004355d5 : paddb mm2, qword ptr [rdx] ; ret 0xffba
0x00000000004b043c : pop ax ; jb 0x4b0471 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041d6ab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004bf6ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046da00 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000470b1f : pop r13 ; adc al, -0x47 ; mov dl, 0x62 ; ret
0x000000000041d6ad : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004bf6ee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d6af : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004bf6f0 : pop r14 ; pop r15 ; ret
0x00000000004125bd : pop r14 ; pop rbp ; ret
0x000000000041d6b1 : pop r15 ; pop rbp ; ret
0x00000000004bf6f2 : pop r15 ; ret
0x0000000000442e9d : pop rax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000470a4c : pop rax ; int 0x89
0x00000000004b043d : pop rax ; jb 0x4b0470 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040c8f1 : pop rax ; ret 0x23d9
0x0000000000496047 : pop rax ; ret 0x89ee
0x00000000004a3d9a : pop rax ; ret 0xb2ee
0x0000000000470b20 : pop rbp ; adc al, -0x47 ; mov dl, 0x62 ; ret
0x000000000043a50a : pop rbp ; cld ; ret 0x8954
0x000000000043aa48 : pop rbp ; cld ; ret 0xb954
0x0000000000402622 : pop rbp ; mov byte ptr [rip + 0x2c600e], 1 ; ret
0x00000000004025c1 : pop rbp ; mov edi, 0x6c85d8 ; jmp rax
0x00000000004025fe : pop rbp ; mov rsi, rax ; mov edi, 0x6c85d8 ; jmp rdx
0x00000000004bf6eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d6ae : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004bf6ef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004855b2 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000481885 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004855ce : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004025b5 : pop rbp ; ret
0x0000000000477395 : pop rbx ; mov word ptr [rcx + rdi*4], es ; mov ah, 0x3a ; ret
0x000000000046d9ff : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046ef00 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004125bc : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040680f : pop rbx ; pop rbp ; ret
0x0000000000415b81 : pop rbx ; ret
0x000000000042b8ac : pop rcx ; mov dl, -0x47 ; cmp esp, esp ; ret
0x00000000004855b3 : pop rcx ; ret 0x1b2
0x000000000047fc86 : pop rcx ; ret 0x8589
0x00000000004855cf : pop rcx ; ret 0x8b48
0x0000000000487900 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004ac567 : pop rcx ; sub edi, dword ptr [rcx] ; ret 0xf40
0x000000000044c778 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000492f9c : pop rdi ; cld ; ret 0x8589
0x00000000004a3e6e : pop rdi ; cld ; ret 0x8b48
0x0000000000430658 : pop rdi ; loop 0x430617 ; ret 0x78cd
0x0000000000475e67 : pop rdi ; loopne 0x475e26 ; ret 0xd50f
0x000000000041d6b2 : pop rdi ; pop rbp ; ret
0x000000000043e8ab : pop rdi ; ret
0x0000000000424a50 : pop rdi ; sbb byte ptr [rcx - 0x7f], al ; ret
0x00000000004365c3 : pop rdx ; jmp 0x436760
0x000000000043d681 : pop rdx ; mov ecx, 0x3de9ca ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b726 : pop rdx ; sbb dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x000000000042db3e : pop rsi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000450e69 : pop rsi ; and dword ptr cs:[rdi], 0x81f8558b ; ret 0x3e9e
0x000000000041d6b0 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004bf6f1 : pop rsi ; pop r15 ; ret
0x00000000004125be : pop rsi ; pop rbp ; ret
0x00000000004c6e09 : pop rsp ; cld ; jmp qword ptr [rbx]
0x000000000043a3f2 : pop rsp ; cld ; ret 0x8954
0x000000000049999d : pop rsp ; fdivp st(7) ; dec dword ptr [rdi] ; test dh, ah ; ret 0
0x000000000041d6ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004bf6ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046da01 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047fc85 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000493348 : pop rsp ; ret 0
0x0000000000426a85 : pop rsp ; ret 0x8940
0x0000000000426941 : pop rsp ; ret 0x8b40
0x0000000000426f85 : pop rsp ; ret 0xe940
0x000000000045ef50 : pop rsp ; ret 0xf66
0x0000000000492ef4 : pop rsp ; xchg eax, edx ; ret 0x8589
0x00000000004ab16c : pop rsp ; xchg eax, edx ; ret 0x8948
0x00000000004a22cc : pop rsp ; xchg eax, edx ; ret 0x8cb9
0x0000000000427a54 : popfq ; and byte ptr [rcx], ah ; ret 0x57b9
0x0000000000427d29 : popfq ; and byte ptr [rcx], ah ; ret 0x6be9
0x0000000000427890 : popfq ; and byte ptr [rcx], ah ; ret 0x8589
0x00000000004c46a9 : popfq ; clc ; call rsp
0x0000000000403c33 : popfq ; ret
0x0000000000478eb9 : popfq ; ret 0xd284
0x0000000000464f05 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004855b0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004c4e38 : push -0x4d000be1 ; ret 0
0x000000000048779a : push -0x75425eeb ; push rbp ; ret
0x000000000046de0c : push -0x76000001 ; ret 0xca29
0x00000000004842f8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000046d1f7 : push -1 ; ret 0x9589
0x0000000000445b2f : push 0x2eba6999 ; ret
0x0000000000405dae : push 0x7d1bb998 ; ret 0x8add
0x00000000004c45a3 : push qword ptr [rax + rbx + 0x2efc0000] ; clc ; call rsp
0x00000000004c47a3 : push qword ptr [rax - 0x63240000] ; stc ; call rsp
0x00000000004c46e3 : push qword ptr [rbp + rbx - 0x7e40000] ; clc ; call rsp
0x00000000004c42e3 : push qword ptr [rbp + rcx - 0x4c240000] ; cmc ; call rsp
0x00000000004c4863 : push qword ptr [rbx + 0x3a7c0000] ; cli ; call rsp
0x00000000004c4663 : push qword ptr [rbx + rbx + 0x7eac0000] ; clc ; call rsp
0x00000000004c49db : push qword ptr [rcx + rbp + 0x7bbc0000] ; cld ; call rsp
0x00000000004c45e3 : push qword ptr [rcx + rbx + 0x473c0000] ; clc ; call rsp
0x00000000004c4bc3 : push qword ptr [rcx + rsi] ; add ah, ch ; ret
0x00000000004c47e3 : push qword ptr [rcx - 0x3dd40000] ; stc ; call rsp
0x00000000004c4763 : push qword ptr [rdi + rbx + 0x4a1c0000] ; stc ; call rsp
0x00000000004c4563 : push qword ptr [rdi + rdx + 0x164c0000] ; clc ; call rsp
0x000000000042b4e5 : push qword ptr [rdi - 8] ; rcr dword ptr [rdx], -0x17 ; ret
0x00000000004c4a1b : push qword ptr [rdx + rbp - 0x7fb40000] ; cld ; call rsp
0x00000000004c4623 : push qword ptr [rdx + rbx + 0x61fc0000] ; clc ; call rsp
0x00000000004c4823 : push qword ptr [rdx - 0x17940000] ; stc ; call rsp
0x00000000004c4723 : push qword ptr [rsi + rbx + 0x1c0c0000] ; stc ; call rsp
0x00000000004c4523 : push qword ptr [rsi + rdx + 0x26c0000] ; clc ; call rsp
0x00000000004c46a3 : push qword ptr [rsp + rbx - 0x62e40000] ; clc ; call rsp
0x000000000045bae3 : push r11 ; push rdi ; ret
0x00000000004c6bc1 : push rax ; cld ; jmp qword ptr [rbx]
0x0000000000430794 : push rax ; mov byte ptr [rax + rax - 0x18], ch ; ret
0x0000000000442e9c : push rax ; pop rax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415dc5 : push rax ; pop rbp ; ret
0x0000000000492e4d : push rax ; ret 0x8589
0x00000000004a424d : push rax ; ret 0xd4b9
0x0000000000413d7a : push rax ; ret 0xe5d6
0x000000000043b9b9 : push rbp ; add byte ptr [rcx + 0xf], -0x6e ; ret 0x8445
0x00000000004245b2 : push rbp ; add dword ptr [rax], eax ; pop rbp ; ret
0x000000000048d8b6 : push rbp ; clc ; pop rbp ; ret
0x00000000004c6d21 : push rbp ; cld ; call rdx
0x00000000004b86f4 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x0000000000472cce : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000046037c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000046febe : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000043d1c1 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000415b32 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000430ad1 : push rbp ; inc dword ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000479297 : push rbp ; mov ah, -1 ; ret 0x5589
0x0000000000476286 : push rbp ; mov al, ch ; ret 0xfff8
0x0000000000402644 : push rbp ; mov edi, 0x6c7e20 ; mov rbp, rsp ; call rax
0x0000000000415b38 : push rbp ; ret
0x000000000041a0e4 : push rbp ; ret 0x1b2
0x000000000041a103 : push rbp ; ret 0xd284
0x0000000000438ed1 : push rbp ; ror byte ptr [rax - 0x75], 1 ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000466ca6 : push rbp ; shr al, 1 ; ret
0x0000000000485d2f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000485e09 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041acb1 : push rbx ; loopne 0x41ac73 ; out -0x7a, al ; pop rbx ; ret
0x000000000041acb0 : push rbx ; loopne 0x41ac74 ; out -0x7a, al ; pop rbx ; ret
0x000000000045bae4 : push rbx ; push rdi ; ret
0x0000000000476d67 : push rbx ; ret
0x0000000000452c62 : push rbx ; ret 0x48b9
0x0000000000452692 : push rbx ; ret 0x89b9
0x0000000000452c46 : push rbx ; ret 0xb2b9
0x00000000004435cd : push rcx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004c6c21 : push rcx ; cld ; call rdi
0x000000000042b36d : push rcx ; push rsp ; mov sil, -0x47 ; cmp al, 0x55 ; ret
0x00000000004173ad : push rcx ; ret 0x89cf
0x000000000041b05e : push rcx ; ret 0x8acf
0x000000000041b042 : push rcx ; ret 0xb2cf
0x0000000000413dac : push rcx ; ret 0xe5d6
0x000000000041b2f9 : push rcx ; rol dword ptr [rcx - 9], cl ; jmp qword ptr [rcx]
0x0000000000424a4c : push rdi ; adc byte ptr [rbx + rcx*4 + 0x5f], al ; sbb byte ptr [rcx - 0x7f], al ; ret
0x00000000004c6d41 : push rdi ; cld ; call qword ptr [rbx]
0x00000000004be35b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000417400 : push rdi ; push rcx ; ret 0x89cf
0x000000000041b05d : push rdi ; push rcx ; ret 0x8acf
0x000000000041b041 : push rdi ; push rcx ; ret 0xb2cf
0x000000000045bae5 : push rdi ; ret
0x00000000004089f1 : push rdi ; ret 0x23d9
0x00000000004a3263 : push rdi ; ret 0x2b9
0x0000000000492e85 : push rdi ; ret 0x8589
0x0000000000495ff3 : push rdi ; ret 0x89ee
0x00000000004ab36f : push rdi ; ret 0xee9
0x0000000000476d13 : push rdx ; ret
0x00000000004173ac : push rsi ; push rcx ; ret 0x89cf
0x000000000044c6c4 : push rsi ; ret 0x1a45
0x00000000004c6e04 : push rsp ; and byte ptr [rax], al ; add byte ptr [rax], bl ; pop rsp ; cld ; jmp qword ptr [rbx]
0x000000000042b36e : push rsp ; mov sil, -0x47 ; cmp al, 0x55 ; ret
0x000000000041e5dd : push rsp ; ret
0x00000000004a092c : push rsp ; ret 0
0x0000000000427848 : pushfq ; and byte ptr [rcx], ah ; ret 0x4589
0x000000000043cf07 : pushfq ; jmp 0x43d40a
0x000000000043cf06 : pushfq ; jmp 0x43d40b
0x000000000043d2ab : pushfq ; ret
0x000000000042c2aa : pushfq ; ret 0x8445
0x000000000041b9a4 : pushfq ; ret 0xd284
0x000000000041c529 : pushfq ; ret 0xe280
0x00000000004c47a9 : pushfq ; stc ; call rsp
0x00000000004c4dd0 : rcl al ; call rax
0x000000000046d8ff : rcl dword ptr [rdi - 0x97f], -1 ; jmp qword ptr [rcx]
0x000000000044c9ff : rcr byte ptr [rsp], -0x47 ; out -0x6b, al ; ret 0xb20e
0x000000000042b4e8 : rcr dword ptr [rdx], -0x17 ; ret
0x00000000004008e8 : ret
0x0000000000424e00 : ret 0
0x00000000004215ef : ret 0x10
0x000000000049b0d3 : ret 0x100
0x00000000004211bb : ret 0x1045
0x000000000049528b : ret 0x108
0x00000000004344e7 : ret 0x11
0x00000000004ab8be : ret 0x12
0x0000000000418e4c : ret 0x14
0x00000000004ac4ac : ret 0x141
0x0000000000491ad3 : ret 0x145
0x00000000004307c8 : ret 0x148
0x00000000004973cb : ret 0x14c
0x0000000000415576 : ret 0x14d
0x000000000045906d : ret 0x15
0x0000000000422ec5 : ret 0x16
0x000000000044fd4f : ret 0x17
0x000000000044e5fd : ret 0x1a
0x000000000044c6c5 : ret 0x1a45
0x000000000047db7d : ret 0x1add
0x000000000041a0e5 : ret 0x1b2
0x00000000004963ff : ret 0x1baa
0x00000000004a689c : ret 0x1bb9
0x000000000045e95d : ret 0x1cdd
0x000000000045e885 : ret 0x1e1
0x00000000004341bb : ret 0x1f
0x00000000004ac2d6 : ret 0x1f08
0x0000000000410d87 : ret 0x22
0x00000000004089f2 : ret 0x23d9
0x000000000047e4ca : ret 0x23da
0x0000000000499b04 : ret 0x26b3
0x0000000000411972 : ret 0x26b9
0x000000000048b1c8 : ret 0x279e
0x0000000000408912 : ret 0x27ef
0x000000000045ef3a : ret 0x280f
0x000000000046be35 : ret 0x28b
0x000000000042c621 : ret 0x29
0x0000000000405d19 : ret 0x2945
0x0000000000424d8f : ret 0x2948
0x0000000000487904 : ret 0x2a
0x00000000004087fa : ret 0x2b73
0x00000000004a3264 : ret 0x2b9
0x0000000000492083 : ret 0x2bc7
0x0000000000410387 : ret 0x2c
0x00000000004023f2 : ret 0x2c5e
0x00000000004021f2 : ret 0x2c5f
0x0000000000401ff2 : ret 0x2c60
0x0000000000485d32 : ret 0x2d50
0x000000000042a483 : ret 0x2d6c
0x000000000042e838 : ret 0x2e8
0x00000000004a3cb5 : ret 0x30
0x00000000004bdebe : ret 0x3040
0x000000000040fe87 : ret 0x31
0x000000000046d67b : ret 0x3144
0x0000000000456789 : ret 0x3145
0x000000000044c2ab : ret 0x323c
0x000000000046e864 : ret 0x3252
0x0000000000478aac : ret 0x3391
0x000000000044c291 : ret 0x34dd
0x000000000046004a : ret 0x3504
0x00000000004b47d3 : ret 0x37ac
0x000000000041d96f : ret 0x37e8
0x000000000040ab05 : ret 0x39
0x0000000000486804 : ret 0x3b
0x0000000000478b3f : ret 0x3bf7
0x0000000000483865 : ret 0x3e
0x0000000000450e71 : ret 0x3e9e
0x000000000049b81c : ret 0x3ee4
0x000000000046ce2c : ret 0x4030
0x0000000000446232 : ret 0x40b5
0x0000000000432299 : ret 0x4349
0x00000000004a2ed0 : ret 0x43b9
0x000000000044989a : ret 0x43e9
0x000000000040d9ad : ret 0x442d
0x0000000000424a61 : ret 0x4475
0x000000000042784b : ret 0x4589
0x0000000000451811 : ret 0x458b
0x000000000043d631 : ret 0x45c7
0x000000000046936f : ret 0x4802
0x000000000044ca1e : ret 0x480e
0x000000000042ace8 : ret 0x4810
0x00000000004be35e : ret 0x4815
0x00000000004a3b41 : ret 0x4817
0x000000000044dcfa : ret 0x4818
0x00000000004887f6 : ret 0x4861
0x0000000000438fa8 : ret 0x486f
0x00000000004470f0 : ret 0x488f
0x000000000044e93e : ret 0x48b7
0x0000000000452c63 : ret 0x48b9
0x00000000004ac703 : ret 0x48be
0x0000000000460cd7 : ret 0x48c3
0x000000000043bcd6 : ret 0x48d3
0x0000000000404fec : ret 0x48f0
0x00000000004810b1 : ret 0x4b
0x00000000004050d2 : ret 0x4c2f
0x000000000048c6c7 : ret 0x4cc0
0x000000000043908b : ret 0x4cf0
0x00000000004af35c : ret 0x4f0b
0x0000000000499be3 : ret 0x4fda
0x0000000000459879 : ret 0x507a
0x00000000004abe2e : ret 0x50e9
0x000000000041f006 : ret 0x51e9
0x000000000047929a : ret 0x5589
0x0000000000435683 : ret 0x558a
0x000000000041bfa2 : ret 0x570f
0x0000000000427a57 : ret 0x57b9
0x000000000041a5e5 : ret 0x5841
0x0000000000485fba : ret 0x5966
0x00000000004a3cbb : ret 0x59e7
0x00000000004adfb7 : ret 0x5bc6
0x0000000000441a5a : ret 0x5c
0x000000000049dbc4 : ret 0x5c90
0x000000000043836b : ret 0x5db1
0x0000000000430965 : ret 0x5ee9
0x00000000004bac7f : ret 0x61
0x000000000046c960 : ret 0x6271
0x000000000040b825 : ret 0x64
0x0000000000475565 : ret 0x65e8
0x000000000048f23f : ret 0x6958
0x000000000047d216 : ret 0x6a8a
0x0000000000427d2c : ret 0x6be9
0x000000000049e5b7 : ret 0x6c62
0x000000000043f6af : ret 0x6cb9
0x000000000045938d : ret 0x6d74
0x0000000000411c55 : ret 0x6eb9
0x000000000041bf8d : ret 0x6f9b
0x000000000049bc5f : ret 0x7174
0x00000000004072a6 : ret 0x762c
0x000000000045a338 : ret 0x76b9
0x000000000047cece : ret 0x77a8
0x000000000042f7cf : ret 0x78cd
0x00000000004ac8ec : ret 0x7a66
0x000000000047e031 : ret 0x7a8a
0x0000000000484cab : ret 0x7b7f
0x0000000000437128 : ret 0x7e31
0x000000000043f9b9 : ret 0x7ee9
0x000000000041a7a6 : ret 0x8041
0x00000000004a7d7d : ret 0x80b9
0x000000000045094f : ret 0x8132
0x0000000000405d0c : ret 0x8141
0x000000000043a77e : ret 0x8148
0x0000000000486bc4 : ret 0x822d
0x000000000041a4df : ret 0x8348
0x00000000004692d1 : ret 0x840
0x000000000040611d : ret 0x8445
0x0000000000403279 : ret 0x8589
0x0000000000414d4f : ret 0x858a
0x000000000045f309 : ret 0x86a5
0x000000000048ed54 : ret 0x86ac
0x000000000041cd76 : ret 0x871b
0x000000000045c547 : ret 0x87c5
0x000000000045676e : ret 0x8844
0x00000000004a4502 : ret 0x8845
0x000000000043423b : ret 0x886f
0x00000000004b7379 : ret 0x8902
0x000000000044c906 : ret 0x890e
0x000000000046b6f0 : ret 0x8931
0x000000000049ad2d : ret 0x8936
0x0000000000424f4f : ret 0x8937
0x0000000000468ee6 : ret 0x8938
0x0000000000426a86 : ret 0x8940
0x00000000004b406d : ret 0x8941
0x0000000000405ee2 : ret 0x8948
0x00000000004bc97f : ret 0x894a
0x000000000043a3f4 : ret 0x8954
0x000000000047d447 : ret 0x8961
0x000000000042a8c9 : ret 0x8964
0x0000000000476be1 : ret 0x896e
0x00000000004368be : ret 0x896f
0x000000000045b5a5 : ret 0x8972
0x000000000046f610 : ret 0x8989
0x000000000044d49c : ret 0x898e
0x0000000000446b4e : ret 0x898f
0x000000000042876d : ret 0x89a2
0x0000000000469c24 : ret 0x89a5
0x0000000000409aaf : ret 0x89a7
0x0000000000416c3e : ret 0x89ad
0x000000000045ab0e : ret 0x89af
0x0000000000433635 : ret 0x89b4
0x000000000045b9cd : ret 0x89b8
0x0000000000452693 : ret 0x89b9
0x0000000000492b3d : ret 0x89be
0x000000000040a807 : ret 0x89c4
0x0000000000420f71 : ret 0x89cb
0x00000000004173ae : ret 0x89cf
0x000000000043b2cf : ret 0x89d3
0x0000000000403e10 : ret 0x89dd
0x000000000044f462 : ret 0x89ea
0x0000000000495ff5 : ret 0x89ee
0x00000000004b1818 : ret 0x89f1
0x0000000000496df5 : ret 0x89f9
0x00000000004bdf78 : ret 0x8a44
0x00000000004bde75 : ret 0x8a4a
0x000000000042aedd : ret 0x8a64
0x000000000044d719 : ret 0x8a8e
0x000000000042ba5b : ret 0x8aa2
0x0000000000411659 : ret 0x8ac4
0x000000000041b05f : ret 0x8acf
0x0000000000405db3 : ret 0x8add
0x00000000004a5530 : ret 0x8af9
0x0000000000426942 : ret 0x8b40
0x0000000000411725 : ret 0x8b48
0x0000000000414a63 : ret 0x8b4c
0x000000000040f284 : ret 0x8ba7
0x00000000004a22ce : ret 0x8cb9
0x000000000043b5dd : ret 0x8f0
0x000000000049c573 : ret 0x8f2d
0x0000000000407101 : ret 0x910f
0x00000000004aaf40 : ret 0x91a3
0x0000000000478ae3 : ret 0x91d1
0x00000000004375c0 : ret 0x947f
0x00000000004b8982 : ret 0x949
0x00000000004ac2c8 : ret 0x94e2
0x000000000040940d : ret 0x95
0x0000000000430581 : ret 0x950f
0x0000000000429063 : ret 0x9513
0x000000000046cc7c : ret 0x9589
0x000000000043c2e6 : ret 0x9602
0x000000000043acc6 : ret 0x9704
0x0000000000453a10 : ret 0x9ae8
0x00000000004950a3 : ret 0x9b9f
0x000000000046cff1 : ret 0x9c0f
0x00000000004074b9 : ret 0x9d6d
0x0000000000412eaa : ret 0x9de9
0x00000000004b0cb7 : ret 0x9e6d
0x0000000000441f82 : ret 0x9e89
0x000000000046c03b : ret 0xa
0x0000000000406a59 : ret 0xa1e8
0x0000000000485e0c : ret 0xa30b
0x0000000000412747 : ret 0xa3e8
0x000000000045ceac : ret 0xa5b0
0x0000000000449838 : ret 0xa5e9
0x00000000004169d5 : ret 0xa6b8
0x000000000044aca7 : ret 0xa8
0x0000000000438571 : ret 0xa9e8
0x000000000040395a : ret 0xaaa8
0x0000000000411bf3 : ret 0xabe
0x00000000004a1ebe : ret 0xac
0x00000000004befcf : ret 0xac60
0x00000000004124eb : ret 0xb0
0x0000000000422595 : ret 0xb041
0x000000000044ca05 : ret 0xb20e
0x0000000000476d83 : ret 0xb22
0x000000000044d700 : ret 0xb28e
0x0000000000435aee : ret 0xb2b4
0x0000000000452c47 : ret 0xb2b9
0x000000000041b043 : ret 0xb2cf
0x000000000043bcba : ret 0xb2d3
0x00000000004a3d9c : ret 0xb2ee
0x0000000000409b8d : ret 0xb2f0
0x0000000000420608 : ret 0xb338
0x00000000004383a5 : ret 0xb426
0x0000000000470f26 : ret 0xb637
0x0000000000487710 : ret 0xb740
0x00000000004ac1e1 : ret 0xb7cc
0x000000000040e35d : ret 0xb841
0x0000000000426923 : ret 0xb848
0x00000000004997e3 : ret 0xb9
0x000000000046c811 : ret 0xb931
0x00000000004a4d44 : ret 0xb936
0x00000000004253a6 : ret 0xb937
0x0000000000485940 : ret 0xb940
0x000000000042cf16 : ret 0xb948
0x00000000004bde02 : ret 0xb94a
0x000000000043aa4a : ret 0xb954
0x0000000000477284 : ret 0xb96e
0x000000000046fd92 : ret 0xb989
0x0000000000447040 : ret 0xb98f
0x000000000046cc52 : ret 0xb9a5
0x000000000045b1b3 : ret 0xb9af
0x000000000045cbf4 : ret 0xb9b8
0x00000000004a9527 : ret 0xb9be
0x00000000004238b9 : ret 0xb9cb
0x00000000004509ea : ret 0xb9ea
0x00000000004b36a6 : ret 0xb9f1
0x000000000045cf8b : ret 0xba72
0x000000000046fdc6 : ret 0xba89
0x0000000000412f30 : ret 0xbae8
0x00000000004706fc : ret 0xbd43
0x0000000000406597 : ret 0xbdb9
0x000000000044a5b8 : ret 0xbec9
0x0000000000487d8c : ret 0xbf48
0x0000000000475172 : ret 0xc
0x00000000004025e5 : ret 0xc148
0x00000000004a882f : ret 0xc281
0x0000000000415b5e : ret 0xc35d
0x00000000004baec2 : ret 0xc493
0x000000000049b1fb : ret 0xc4ef
0x000000000042b916 : ret 0xc5b9
0x0000000000469ab6 : ret 0xc6e0
0x0000000000440e96 : ret 0xc99b
0x00000000004b91b9 : ret 0xca21
0x000000000042bd10 : ret 0xca29
0x00000000004bac85 : ret 0xccb2
0x00000000004384f9 : ret 0xd
0x0000000000420f1c : ret 0xd1ae
0x000000000040558c : ret 0xd284
0x00000000004be5b8 : ret 0xd2e8
0x00000000004a424e : ret 0xd4b9
0x0000000000474312 : ret 0xd50f
0x00000000004b5565 : ret 0xd5f3
0x00000000004bc5c5 : ret 0xd618
0x00000000004a6ade : ret 0xd678
0x000000000046dc1b : ret 0xd701
0x00000000004b7c16 : ret 0xd709
0x00000000004b5b4e : ret 0xdc02
0x00000000004a7e8c : ret 0xdc1c
0x0000000000437f25 : ret 0xe000
0x00000000004758ea : ret 0xe0e8
0x0000000000415b23 : ret 0xe280
0x0000000000450e46 : ret 0xe2e
0x0000000000405b17 : ret 0xe3e8
0x0000000000413d7b : ret 0xe5d6
0x0000000000468f13 : ret 0xe8ff
0x0000000000426f86 : ret 0xe940
0x0000000000488841 : ret 0xe961
0x000000000042af04 : ret 0xe964
0x0000000000439023 : ret 0xe96f
0x000000000042baa5 : ret 0xe9a2
0x000000000046dcdb : ret 0xe9a5
0x000000000041b6e9 : ret 0xe9ad
0x000000000045d196 : ret 0xe9b8
0x000000000042cd08 : ret 0xe9cb
0x00000000004a5591 : ret 0xe9f9
0x000000000047e66d : ret 0xea51
0x00000000004069a7 : ret 0xea81
0x000000000046f0a0 : ret 0xeae8
0x0000000000495d8c : ret 0xeb2b
0x000000000045dc63 : ret 0xebc8
0x000000000044a8f2 : ret 0xec45
0x00000000004b74ea : ret 0xedb9
0x000000000048a3fc : ret 0xee8
0x00000000004ab370 : ret 0xee9
0x000000000044f809 : ret 0xf
0x000000000042c250 : ret 0xf0
0x000000000046a322 : ret 0xf1f5
0x00000000004692b5 : ret 0xf280
0x000000000047bb35 : ret 0xf281
0x000000000046fef7 : ret 0xf3e8
0x00000000004052f9 : ret 0xf40
0x0000000000411423 : ret 0xf41
0x00000000004679cc : ret 0xf4e9
0x00000000004b2b7a : ret 0xf4f5
0x00000000004435f6 : ret 0xf51
0x00000000004aff0a : ret 0xf524
0x000000000045ef51 : ret 0xf66
0x0000000000411416 : ret 0xf748
0x000000000048bf3a : ret 0xf75f
0x000000000048846a : ret 0xf7a0
0x0000000000488395 : ret 0xf7f3
0x00000000004a836d : ret 0xfa6c
0x0000000000486b1e : ret 0xfc75
0x000000000043e3b8 : ret 0xfd0
0x0000000000422504 : ret 0xfd70
0x000000000042b31a : ret 0xfd71
0x00000000004251fa : ret 0xfdce
0x00000000004250fa : ret 0xfdcf
0x000000000042512a : ret 0xfdd0
0x00000000004a3488 : ret 0xfe89
0x000000000042e655 : ret 0xfef0
0x0000000000466adf : ret 0xff3
0x000000000040504e : ret 0xff60
0x000000000042248e : ret 0xff70
0x0000000000438365 : ret 0xff9f
0x000000000048838f : ret 0xffa5
0x00000000004355d8 : ret 0xffba
0x000000000040646a : ret 0xffbd
0x000000000043839f : ret 0xffbf
0x0000000000486b18 : ret 0xffc4
0x0000000000450955 : ret 0xffd0
0x0000000000485d38 : ret 0xffd5
0x0000000000485e12 : ret 0xffd8
0x0000000000486bca : ret 0xffd9
0x0000000000478b39 : ret 0xffdb
0x0000000000485fb4 : ret 0xffe0
0x000000000047628a : ret 0xfff8
0x00000000004c47e9 : ret 0xfff9
0x0000000000484ca5 : ret 0xfffa
0x000000000041a5eb : ret 0xfffd
0x0000000000438068 : ret 0xffff
0x000000000041418c : ret 1
0x000000000041bf87 : ret 2
0x0000000000400780 : ret 3
0x000000000041e6ed : ret 4
0x000000000044ddc8 : ret 5
0x0000000000413953 : ret 6
0x0000000000414882 : ret 7
0x0000000000489b04 : ret 8
0x0000000000423bc5 : ret 9
0x000000000043d2a8 : rol bh, 0x45 ; pushfq ; ret
0x000000000047752d : rol bh, 1 ; xchg eax, r12d ; push rbx ; ret
0x00000000004be33d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000465b34 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000470aa3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041cb00 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b8e6a : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004c69d0 : rol byte ptr [rbp - 5], 1 ; jmp qword ptr [rsi]
0x00000000004c5a60 : rol byte ptr [rbx], 1 ; clc ; jmp qword ptr [rdi]
0x00000000004b7ff5 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x0000000000468d31 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004be33c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000045a6e9 : rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x0000000000405d16 : rol dword ptr [rcx - 0x77], 1 ; ret 0x2945
0x0000000000424a5b : rol dword ptr [rcx - 0x7f], cl ; ret
0x000000000041b2fa : rol dword ptr [rcx - 9], cl ; jmp qword ptr [rcx]
0x000000000043d2a7 : rol r15b, 0x45 ; pushfq ; ret
0x000000000047752c : rol r15b, 1 ; xchg eax, r12d ; push rbx ; ret
0x000000000044150b : ror byte ptr [r11 - 0x1376b800], 1 ; pop rbp ; ret
0x0000000000460bb0 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000046145e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000046feba : ror byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004548e7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000446887 : ror byte ptr [r9 - 0x33ba38ff], 1 ; ret
0x000000000043b9b6 : ror byte ptr [rax + 0x3b], 1 ; push rbp ; add byte ptr [rcx + 0xf], -0x6e ; ret 0x8445
0x00000000004b0434 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004025ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025fb ; pop rbp ; ret
0x0000000000460bb1 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000046145f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000046febb : ror byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000438ed2 : ror byte ptr [rax - 0x75], 1 ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004548e8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000415539 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000045f69a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000047955d : ror byte ptr [rax - 0x77], 1 ; ret 0xbae8
0x0000000000462a83 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000044d3b8 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045ee0d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b89a5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000044150c : ror byte ptr [rbx - 0x1376b800], 1 ; pop rbp ; ret
0x0000000000446888 : ror byte ptr [rcx - 0x33ba38ff], 1 ; ret
0x000000000047bb4a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000422591 : ror byte ptr [rdi], -0x6b ; ret 0xb041
0x00000000004b8e7d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000046c8bc : ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x000000000042269c : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004b897f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x000000000043acd2 : ror dword ptr [rax - 0x48], 0x6c ; ret 0x9704
0x000000000043641c : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043d2a4 : ror dword ptr [rax - 0x77], 0x4d ; rol bh, 0x45 ; pushfq ; ret
0x00000000004be16e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000430bf6 : ror dword ptr [rax - 0x7d], -0x3c ; jo 0x430c5f ; ret
0x000000000043b981 : ror dword ptr [rbp + 0x29], cl ; ret
0x00000000004a0898 : ror dword ptr [rcx - 0x57b7b], -1 ; jmp 0x4acb8d
0x000000000048c580 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000405bcc : sahf ; ret
0x00000000004b2b3b : sahf ; ret 0xd284
0x000000000043d1bd : sahf ; xor dword ptr [rax - 0x75], ecx ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004c4dd1 : sal bl, 1 ; call rax
0x00000000004420cf : sal byte ptr [r11 + 0x48e28948], -0x7d ; ret 0x48f0
0x00000000004420d0 : sal byte ptr [rbx + 0x48e28948], -0x7d ; ret 0x48f0
0x00000000004b18da : salc ; jmp qword ptr [rdi]
0x00000000004169d4 : salc ; ret 0xa6b8
0x00000000004b1816 : salc ; sti ; ret 0x89f1
0x00000000004a29d3 : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045d481 : sar ch, 1 ; ret
0x00000000004b8964 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000455c48 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x000000000040f278 : sar dword ptr [rip + 0x73b80000], 1 ; jmp rax
0x0000000000415b50 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x00000000004025ee : sar eax, 1 ; jne 0x4025f9 ; pop rbp ; ret
0x0000000000487901 : sar ebp, -0x17 ; ret 0x2a
0x000000000049f546 : sar edi, 1 ; dec dword ptr [rdi] ; test byte ptr [rbx], bl ; ret 0
0x00000000004025ed : sar rax, 1 ; jne 0x4025fa ; pop rbp ; ret
0x00000000004c48e8 : sbb al, -0x11 ; cli ; jmp rsp
0x00000000004c46a8 : sbb al, -0x63 ; clc ; call rsp
0x00000000004c4729 : sbb al, -7 ; call rsp
0x00000000004c46e8 : sbb al, -8 ; clc ; call rsp
0x00000000004c69cd : sbb al, 0 ; add al, dl ; sti ; jmp qword ptr [rsi]
0x00000000004c4dcc : sbb al, 0 ; add byte ptr [rax], al ; rcl al ; call rax
0x00000000004c69cc : sbb al, 0x1c ; add byte ptr [rax], al ; rol byte ptr [rbp - 5], 1 ; jmp qword ptr [rsi]
0x000000000048c8c0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004c4768 : sbb al, 0x4a ; stc ; call rsp
0x00000000004b40ae : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004c68ad : sbb al, byte ptr [rax] ; add byte ptr [rax - 2], al ; cli ; call qword ptr [rdx]
0x00000000004a99c4 : sbb al, byte ptr [rcx + rbp*8] ; mov ecx, 0xb8000031 ; jmp rsi
0x00000000004301f3 : sbb bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rdi]
0x00000000004b32cb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x00000000004c45a5 : sbb byte ptr [rax], al ; add ah, bh ; clc ; call rsp
0x0000000000424a51 : sbb byte ptr [rcx - 0x7f], al ; ret
0x00000000004032ca : sbb byte ptr [rdi - 0x6b], cl ; ret 0x8589
0x0000000000406594 : sbb byte ptr [rdi - 0x6b], cl ; ret 0xbdb9
0x00000000004c71d8 : sbb byte ptr [rdi - 2], bl ; call rdi
0x000000000041f4b0 : sbb byte ptr [rdi], dl ; ret
0x000000000043567d : sbb byte ptr [rip + 0x12fc0fb9], bh ; ret 0x558a
0x000000000042b4e9 : sbb ch, cl ; ret
0x0000000000487801 : sbb cl, ch ; ret
0x00000000004301f2 : sbb dil, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rdi]
0x000000000049ad2b : sbb dl, bh ; ret 0x8936
0x00000000004931f3 : sbb dl, byte ptr [rdi - 0x5316ffff] ; ret
0x00000000004250f3 : sbb dword ptr [rax + rax - 0x77], ecx ; test al, -0x18 ; ret 0xfdcf
0x00000000004afc83 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000458c31 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004c45e5 : sbb dword ptr [rax], eax ; add byte ptr [rdi + rax*2], bh ; clc ; call rsp
0x000000000041b727 : sbb dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x000000000048d001 : sbb eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x00000000004c46e5 : sbb eax, 0xf81c0000 ; clc ; call rsp
0x000000000046167d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000048b910 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000049ad7f : sbb edx, edi ; ret 0x8936
0x00000000004a4d42 : sbb edx, edi ; ret 0xb936
0x0000000000440831 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x352db445], cl ; ret
0x00000000004ad894 : scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000413916 : scasd eax, dword ptr [rdi] ; ret
0x0000000000408911 : scasd eax, dword ptr [rdi] ; ret 0x27ef
0x00000000004b5b4d : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x0000000000462424 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415b56 : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000462426 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004c5e20 : shl byte ptr [rdx - 8], 1 ; jmp rsp
0x000000000045ef6f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000466ca7 : shr al, 1 ; ret
0x0000000000435400 : shr byte ptr [rip + 0x3309b9ab], cl ; ret
0x00000000004c60a0 : shr cl, 1 ; clc ; call qword ptr [rcx]
0x0000000000486802 : shr cl, cl ; ret 0x3b
0x000000000044ca17 : shr dword ptr [rax - 0x19461a4a], 1 ; xchg eax, ebp ; ret 0x480e
0x00000000004c5d5d : sldt word ptr [rax] ; xor byte ptr [rdx - 8], cl ; call rdi
0x00000000004c6302 : stc ; call qword ptr [rdx]
0x00000000004c472a : stc ; call rsp
0x0000000000466219 : stc ; in al, dx ; ret 0x8589
0x0000000000466b2c : stc ; in al, dx ; ret 0xff3
0x00000000004c64a2 : stc ; jmp rbx
0x0000000000493097 : stc ; out -0x55, al ; ret
0x00000000004c47a2 : stc ; push qword ptr [rax - 0x63240000] ; stc ; call rsp
0x00000000004c47e2 : stc ; push qword ptr [rcx - 0x3dd40000] ; stc ; call rsp
0x00000000004c4762 : stc ; push qword ptr [rdi + rbx + 0x4a1c0000] ; stc ; call rsp
0x00000000004c4822 : stc ; push qword ptr [rdx - 0x17940000] ; stc ; call rsp
0x00000000004c4722 : stc ; push qword ptr [rsi + rbx + 0x1c0c0000] ; stc ; call rsp
0x000000000042b0d0 : stc ; ret 0x1b2
0x000000000049b86f : stc ; ret 0x3ee4
0x000000000048463d : stc ; ret 0x77a8
0x0000000000428cad : stc ; ret 0x8589
0x000000000042b0ec : stc ; ret 0x8b48
0x000000000042429c : std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000424461 : std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x000000000045d3a6 : std ; ret
0x000000000048b1c7 : std ; ret 0x279e
0x000000000043180b : sti ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004c6a32 : sti ; call qword ptr [rdx]
0x0000000000449830 : sti ; inc edi ; in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0xa5e9
0x00000000004c4922 : sti ; inc esp ; add byte ptr es:[rax], al ; xor r15, rbx ; jmp rsp
0x00000000004c69d2 : sti ; jmp qword ptr [rsi]
0x00000000004c492a : sti ; jmp rsp
0x00000000004281bb : sti ; ret
0x00000000004b1817 : sti ; ret 0x89f1
0x00000000004b36a5 : sti ; ret 0xb9f1
0x0000000000466218 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000040a821 : stosb byte ptr [rdi], al ; or al, 0xffffffffffffff95 ; ret
0x00000000004b8963 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000043e6ad : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000493045 : stosd dword ptr [rdi], eax ; ret
0x00000000004c47e8 : sub al, -0x3e ; stc ; call rsp
0x0000000000448123 : sub al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402627 : sub al, 0 ; add ebx, esi ; ret
0x0000000000428f2f : sub al, 0x1c ; ret 0x89cb
0x000000000042be06 : sub al, 0x1c ; ret 0xb9cb
0x000000000042cd06 : sub al, 0x1c ; ret 0xe9cb
0x00000000004c4a1d : sub al, byte ptr [rax] ; add byte ptr [rax + rax*4 - 4], cl ; call rsp
0x0000000000454b4e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004bf0d6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000454a38 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000485d35 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004a3db1 : sub byte ptr [rdi + 0x58b945bc], dl ; ret 0xb2ee
0x000000000047955a : sub cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0xbae8
0x0000000000485d2b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000485e05 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004a07cb : sub dword ptr [rip - 0x4f164bf7], ecx ; ret
0x000000000041dfb9 : sub dword ptr [rip - 0x7a480000], eax ; ret
0x0000000000435401 : sub eax, 0x3309b9ab ; ret
0x0000000000425502 : sub eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000486bc5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041d490 : sub eax, 0xb9f2b6a5 ; ret 0x871b
0x000000000044dcf5 : sub eax, dword ptr [rdi + 0x39] ; insd dword ptr [rdi], dx ; ret 0x4818
0x000000000042e282 : sub eax, esi ; sub rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x0000000000452c5c : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x00000000004ad354 : sub ecx, 0xd0f97271 ; mov eax, ecx ; pop rbp ; ret
0x00000000004ac568 : sub edi, dword ptr [rcx] ; ret 0xf40
0x000000000042e285 : sub edi, eax ; mov rax, rdi ; pop rbp ; ret
0x00000000004b043f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004bf761 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042e284 : sub rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x00000000004bf760 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000045f233 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004250f8 : test al, -0x18 ; ret 0xfdcf
0x00000000004212ef : test al, -0x39 ; ret 0x89cb
0x00000000004238b7 : test al, -0x39 ; ret 0xb9cb
0x00000000004ad896 : test al, -0x47 ; call rsi
0x000000000044ca18 : test al, -0x4a ; in eax, -0x47 ; out -0x6b, al ; ret 0x480e
0x0000000000466ec9 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000485d30 : test al, -0x7f ; ret 0x2d50
0x0000000000485e0a : test al, -0x7f ; ret 0xa30b
0x0000000000468c67 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004bdc13 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041db47 : test al, 0x2d ; ret
0x000000000041d96c : test al, 0x2d ; ret 0x37e8
0x0000000000470ca2 : test al, 0x48 ; add esp, 0x180 ; pop rbp ; ret
0x000000000048bf9e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000447ac0 : test al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000448918 : test al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000488566 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004723a8 : test al, 0x48 ; mov esp, ebp ; pop rbp ; ret
0x00000000004c6e88 : test al, 0x61 ; cld ; jmp qword ptr [rax]
0x000000000044775c : test al, 0x73 ; ret
0x00000000004af4d8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000047028c : test al, 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000443e2e : test al, ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042d801 : test bh, al ; add al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043180a : test bh, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000044a9dd : test bh, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004640ad : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000041cb87 : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000414e0a : test byte ptr [rax + rax + 6], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004bf6fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004c4e34 : test byte ptr [rax], al ; add byte ptr [rax], al ; push -0x4d000be1 ; ret 0
0x00000000004247ab : test byte ptr [rax], al ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000049988a : test byte ptr [rax], bl ; ret
0x000000000044c206 : test byte ptr [rax], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045e9cc : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000049f54a : test byte ptr [rbx], bl ; ret 0
0x0000000000493342 : test byte ptr [rcx - 0x33], cl ; add byte ptr [rax], al ; jmp 0x49f5af
0x000000000041cb88 : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x0000000000475f00 : test byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000049defa : test byte ptr [rcx], bh ; ret
0x000000000047cbac : test byte ptr [rcx], ch ; ret 0
0x0000000000453c66 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000441ede : test byte ptr [rdi], ch ; add al, 0 ; add cl, ch ; ret 1
0x000000000049330a : test byte ptr [rdi], ch ; add dword ptr [rax], eax ; jmp 0x49f5af
0x0000000000493262 : test byte ptr [rdx + rdx*8 + 0x3ce90000], bl ; ret
0x0000000000490862 : test byte ptr [rdx], al ; ret 1
0x000000000044fef7 : test byte ptr [rdx], bl ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000493bca : test byte ptr [rdx], bl ; ret 0
0x0000000000472a4e : test byte ptr [rsi], 0 ; add cl, ch ; ret 1
0x0000000000495172 : test byte ptr [rsi], bh ; ret
0x0000000000414186 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret 1
0x000000000041eaaf : test ch, ah ; add al, 0 ; add cl, ch ; ret 1
0x000000000043518e : test ch, cl ; ret
0x0000000000493b5a : test ch, cl ; ret 0
0x000000000045e1c2 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004999a2 : test dh, ah ; ret 0
0x000000000049d052 : test dh, bl ; ret
0x0000000000470356 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004674a7 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000047cba6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000042ee12 : test dword ptr [rax + rax], ebp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000495284 : test dword ptr [rax + rbp*8 - 0x7bf00001], eax ; ret 0x108
0x000000000049516c : test dword ptr [rax + rbp*8 - 0x7bf00001], ebp ; ret
0x0000000000406464 : test dword ptr [rax - 0x17ffb409], eax ; ret 0xffbd
0x000000000040ad2e : test dword ptr [rbp + rsi*8 - 0x7bf00001], eax ; ret
0x000000000040abde : test dword ptr [rbp + rsi*8 - 0x7bf00001], esi ; ret
0x000000000049307b : test dword ptr [rbp - 0x24], ebx ; ret
0x000000000049a17c : test dword ptr [rbx*8 - 0x7bf00001], edi ; ret
0x00000000004090f6 : test dword ptr [rcx + rdi*8 - 0x7bf00001], ecx ; ret
0x00000000004090be : test dword ptr [rcx + rdi*8 - 0x7bf00001], edx ; ret
0x000000000049f544 : test dword ptr [rcx + rdx*8 - 1], eax ; dec dword ptr [rdi] ; test byte ptr [rbx], bl ; ret 0
0x000000000042429f : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000046c866 : test dword ptr [rdi + rdi*8 - 1], eax ; call rcx
0x0000000000439230 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdx
0x0000000000423ca6 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x00000000004244d6 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rdi]
0x000000000043901c : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x0000000000424464 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x0000000000424260 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x00000000004b3f23 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004b3f7b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004b3ee2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004397f1 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004af5e6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043b8d6 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x000000000043bab7 : test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x0000000000479f4c : test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x00000000004491b7 : test dword ptr [rdi + rdi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043bca4 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000464e91 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004301f5 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rdi]
0x00000000004307dc : test dword ptr [rdi + rdi*8 - 1], esi ; call rax
0x0000000000430804 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rcx - 0xd] ; ret
0x00000000004300cf : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdx
0x00000000004b7cc5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000048bbba : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000045a842 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000428cdd : test dword ptr [rdx + rbp*8 + 0x332dffff], ecx ; mov cs, word ptr [rax] ; ret
0x0000000000428d31 : test dword ptr [rdx + rbp*8 + 0x342dffff], ecx ; mov cs, word ptr [rax] ; ret
0x00000000004287d5 : test dword ptr [rdx + rbp*8 + 0x3b2dffff], ecx ; push rbp ; ret
0x0000000000428829 : test dword ptr [rdx + rbp*8 + 0x3c2dffff], ecx ; push rbp ; ret
0x0000000000428ca5 : test dword ptr [rdx + rbp*8 + 0x402dffff], ecx ; xchg eax, ebx ; stc ; ret 0x8589
0x0000000000428cf9 : test dword ptr [rdx + rbp*8 + 0x412dffff], ecx ; xchg eax, ebx ; stc ; ret 0x8589
0x0000000000428209 : test dword ptr [rdx + rbp*8 - 0x3d20001], ecx ; ret
0x00000000004281b5 : test dword ptr [rdx + rbp*8 - 0x4d20001], ecx ; ret
0x0000000000428cc1 : test dword ptr [rdx + rbp*8 - 0x6dd20001], ecx ; mov dh, -0x29 ; ret 0x8589
0x0000000000428c6d : test dword ptr [rdx + rbp*8 - 0x6ed20001], ecx ; mov dh, -0x29 ; ret 0x8589
0x000000000049444c : test dword ptr [rdx + rbp*8 - 0x7bf00001], ecx ; ret
0x00000000004a085f : test dword ptr [rdx + rdi*8 + 0x1be9ffff], eax ; ret
0x00000000004a0951 : test dword ptr [rdx + rdi*8 + 0x29e9ffff], eax ; ret 0
0x00000000004ab368 : test dword ptr [rdx + rdi*8 + 0x353effff], eax ; push rdi ; ret 0xee9
0x00000000004ac6fc : test dword ptr [rdx + rdi*8 + 0x3ffdffff], eax ; ret 0x48be
0x00000000004a0834 : test dword ptr [rdx + rdi*8 + 0x46e9ffff], eax ; ret
0x00000000004a0926 : test dword ptr [rdx + rdi*8 + 0x54e9ffff], eax ; ret 0
0x00000000004ab166 : test dword ptr [rdx + rdi*8 + 0x5cadffff], eax ; xchg eax, edx ; ret 0x8948
0x00000000004a0818 : test dword ptr [rdx + rdi*8 + 0x62e9ffff], eax ; ret
0x00000000004a090a : test dword ptr [rdx + rdi*8 + 0x70e9ffff], eax ; ret 0
0x00000000004a0471 : test dword ptr [rdx + rdi*8 + 0x7528ffff], eax ; ret
0x00000000004abe26 : test dword ptr [rdx + rdi*8 - 0x135b0001], eax ; clc ; ret 0x50e9
0x00000000004a9e64 : test dword ptr [rdx + rdi*8 - 0x19060001], eax ; stosd dword ptr [rdi], eax ; ret
0x00000000004a089a : test dword ptr [rdx + rdi*8 - 0x1f160001], eax ; ret 0
0x00000000004a08c6 : test dword ptr [rdx + rdi*8 - 0x4b160001], eax ; ret 0
0x00000000004a558a : test dword ptr [rdx + rdi*8 - 0x70b00001], eax ; ret 0xe9f9
0x00000000004a0784 : test dword ptr [rdx + rdi*8 - 0x9160001], eax ; ret
0x00000000004997dc : test dword ptr [rsi + rbx*8 - 0x7bf00001], ebx ; ret 0xb9
0x000000000049999c : test dword ptr [rsi + rbx*8 - 1], ebx ; dec dword ptr [rdi] ; test dh, ah ; ret 0
0x000000000040cae3 : test dword ptr [rsi + rdi*8 + 0x102dffff], edx ; ret 0x2b73
0x000000000040a7ff : test dword ptr [rsi + rdi*8 + 0x1d2dffff], edx ; wait ; ret 0x89c4
0x000000000040a853 : test dword ptr [rsi + rdi*8 + 0x1e2dffff], edx ; wait ; ret 0x89c4
0x00000000004875db : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004089eb : test dword ptr [rsi + rdi*8 + 0x572dffff], edx ; ret 0x23d9
0x000000000040c8eb : test dword ptr [rsi + rdi*8 + 0x582dffff], edx ; ret 0x23d9
0x000000000048883a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040bd8b : test dword ptr [rsi + rdi*8 + 0x722dffff], edx ; jmp rax
0x000000000040bedb : test dword ptr [rsi + rdi*8 + 0x732dffff], edx ; jmp rax
0x000000000040729f : test dword ptr [rsi + rdi*8 + 0xc2dffff], edx ; ret 0x762c
0x0000000000411bb6 : test dword ptr [rsi + rdi*8 + 0xcaaffff], edi ; xchg eax, ebp ; ret
0x000000000040db2f : test dword ptr [rsi + rdi*8 + 0xd2dffff], edx ; ret 0x762c
0x00000000004087f3 : test dword ptr [rsi + rdi*8 + 0xf2dffff], edx ; ret 0x2b73
0x000000000046dcd4 : test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x000000000040c9cb : test dword ptr [rsi + rdi*8 - 0x4fd20001], edx ; ret 0x27ef
0x000000000040890b : test dword ptr [rsi + rdi*8 - 0x50d20001], edx ; ret 0x27ef
0x000000000040a81b : test dword ptr [rsi + rdi*8 - 0x55d20001], edx ; or al, 0xffffffffffffff95 ; ret
0x000000000040a7c7 : test dword ptr [rsi + rdi*8 - 0x56d20001], edx ; or al, 0xffffffffffffff95 ; ret
0x0000000000459066 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret 0x15
0x000000000049d04c : test dword ptr [rsi + rdx*8 - 0x7bf00001], ecx ; ret
0x000000000048fb04 : test dword ptr [rsi*8 - 0x7bf00001], eax ; ret
0x00000000004842fa : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000049def4 : test dword ptr [rsp + rdx*8 - 1], esi ; dec dword ptr [rdi] ; test byte ptr [rcx], bh ; ret
0x00000000004887ef : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041c437 : test eax, 0xe9edda16 ; ret 2
0x000000000043518d : test r13b, r9b ; ret
0x00000000004a3d98 : ud2b ; pop rax ; ret 0xb2ee
0x00000000004c5621 : wait ; idiv edi ; ret 8
0x00000000004867ff : wait ; jge 0x4867e1 ; shr cl, cl ; ret 0x3b
0x00000000004818bd : wait ; jo 0x4818cb ; ret
0x0000000000484e0c : wait ; jo 0x484e1a ; ret
0x0000000000492fef : wait ; pop rdi ; cld ; ret 0x8589
0x00000000004a3e6d : wait ; pop rdi ; cld ; ret 0x8b48
0x0000000000490dcf : wait ; ret
0x0000000000443cec : wait ; ret 0x4589
0x000000000040a806 : wait ; ret 0x89c4
0x0000000000411658 : wait ; ret 0x8ac4
0x0000000000444136 : wait ; ret 0x8b48
0x000000000044982f : xchg bl, bh ; inc edi ; in al, -0x60 ; adc dword ptr [rbx], eax ; ret 0xa5e9
0x0000000000431d1a : xchg byte ptr [rax + rax + 1], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a039 : xchg byte ptr [rax + rax + 2], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405712 : xchg byte ptr [rax + rax + 3], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004263a2 : xchg byte ptr [rax + rax + 4], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000419ff4 : xchg byte ptr [rax + rax + 5], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405a7d : xchg byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040599f : xchg byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004930cf : xchg byte ptr [rbp - 0x24], bl ; ret
0x0000000000405976 : xchg dword ptr [rax + rax + 2], ebp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040594d : xchg dword ptr [rax + rax + 4], ebp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004066e5 : xchg dword ptr [rax + rax], ebp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004be358 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004a29d1 : xchg eax, ebp ; clc ; sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046dc15 : xchg eax, ebp ; cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x000000000045ed50 : xchg eax, ebp ; jmp 0x45eea1
0x0000000000459fe4 : xchg eax, ebp ; mov eax, 0xffffffc ; ret 0x8589
0x000000000046d1f6 : xchg eax, ebp ; push -1 ; ret 0x9589
0x000000000040a7cf : xchg eax, ebp ; ret
0x000000000044ca1d : xchg eax, ebp ; ret 0x480e
0x000000000040611c : xchg eax, ebp ; ret 0x8445
0x0000000000403278 : xchg eax, ebp ; ret 0x8589
0x00000000004a4501 : xchg eax, ebp ; ret 0x8845
0x000000000044c905 : xchg eax, ebp ; ret 0x890e
0x0000000000422593 : xchg eax, ebp ; ret 0xb041
0x000000000044ca04 : xchg eax, ebp ; ret 0xb20e
0x0000000000406596 : xchg eax, ebp ; ret 0xbdb9
0x000000000040558b : xchg eax, ebp ; ret 0xd284
0x0000000000415b57 : xchg eax, ebp ; ret 0xe280
0x000000000041e1df : xchg eax, ebx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; loope 0x41e1a1 ; ret 0x37e8
0x000000000047d445 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000483d45 : xchg eax, ebx ; ret
0x000000000042b0cf : xchg eax, ebx ; stc ; ret 0x1b2
0x0000000000428cac : xchg eax, ebx ; stc ; ret 0x8589
0x000000000042b0eb : xchg eax, ebx ; stc ; ret 0x8b48
0x000000000044d223 : xchg eax, ecx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428c73 : xchg eax, ecx ; mov dh, -0x29 ; ret 0x8589
0x0000000000483f75 : xchg eax, ecx ; ret
0x000000000049dbc3 : xchg eax, ecx ; ret 0x5c90
0x00000000004a0962 : xchg eax, edi ; jmp 0x4acb89
0x00000000004a3db2 : xchg eax, edi ; mov esp, 0x4f58b945 ; ret 0xb2ee
0x00000000004bd8d9 : xchg eax, edi ; ret 0xd284
0x0000000000428cc7 : xchg eax, edx ; mov dh, -0x29 ; ret 0x8589
0x000000000042b913 : xchg eax, edx ; mov dh, -0x29 ; ret 0xc5b9
0x000000000043809c : xchg eax, edx ; ret
0x000000000049e21b : xchg eax, edx ; ret 0x5c90
0x000000000043b9bd : xchg eax, edx ; ret 0x8445
0x0000000000492ef5 : xchg eax, edx ; ret 0x8589
0x0000000000479e10 : xchg eax, edx ; ret 0x8844
0x00000000004ab16d : xchg eax, edx ; ret 0x8948
0x00000000004a22cd : xchg eax, edx ; ret 0x8cb9
0x00000000004500da : xchg eax, edx ; ret 0xd284
0x000000000045c7ec : xchg eax, edx ; ret 0xe280
0x00000000004353ff : xchg eax, edx ; shr byte ptr [rip + 0x3309b9ab], cl ; ret
0x00000000004b47eb : xchg eax, esi ; ret
0x0000000000452cfe : xchg eax, esi ; ret 0xd284
0x00000000004679c8 : xchg eax, esp ; int 6
0x00000000004ae77a : xchg eax, esp ; jmp 0x4af1e8
0x00000000004ae6b7 : xchg eax, esp ; jmp 0x4af1ea
0x00000000004887f4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004840c5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000048883f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000477530 : xchg eax, esp ; push rbx ; ret
0x00000000004171ed : xchg eax, esp ; ret
0x0000000000493310 : xchg eax, esp ; ret 0
0x00000000004515aa : xchg eax, esp ; ret 0x48b7
0x000000000048b659 : xchg eax, esp ; ret 0x8041
0x000000000040e97f : xchg eax, esp ; ret 0x8445
0x0000000000416c3d : xchg eax, esp ; ret 0x89ad
0x000000000048770e : xchg eax, esp ; ret 0xb740
0x000000000040571a : xchg eax, esp ; ret 0xd284
0x0000000000415b22 : xchg eax, esp ; ret 0xe280
0x000000000041b6e8 : xchg eax, esp ; ret 0xe9ad
0x0000000000462425 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045e012 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000042b0ce : xchg eax, r11d ; stc ; ret 0x1b2
0x0000000000428cff : xchg eax, r11d ; stc ; ret 0x8589
0x000000000042b0ea : xchg eax, r11d ; stc ; ret 0x8b48
0x00000000004679c7 : xchg eax, r12d ; int 6
0x00000000004ae779 : xchg eax, r12d ; jmp 0x4af1e9
0x000000000047752f : xchg eax, r12d ; push rbx ; ret
0x0000000000417240 : xchg eax, r12d ; ret
0x00000000004515a9 : xchg eax, r12d ; ret 0x48b7
0x0000000000416c90 : xchg rax, r12 ; ret 0x89ad
0x000000000041b6e7 : xchg rax, r12 ; ret 0xe9ad
0x0000000000403277 : xchg rax, r13 ; ret 0x8589
0x0000000000406595 : xchg rax, r13 ; ret 0xbdb9
0x00000000004a0961 : xchg rax, r15 ; jmp 0x4acb8a
0x0000000000416c3c : xchg rax, rsp ; ret 0x89ad
0x0000000000460ccf : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000046ee00 : xlatb ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x00000000004b85ce : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041acaf : xlatb ; push rbx ; loopne 0x41ac75 ; out -0x7a, al ; pop rbx ; ret
0x0000000000405ed5 : xlatb ; ret
0x0000000000428c75 : xlatb ; ret 0x8589
0x000000000049ad2c : xlatb ; ret 0x8936
0x0000000000416a28 : xlatb ; ret 0xa6b8
0x00000000004a4d43 : xlatb ; ret 0xb936
0x000000000042b915 : xlatb ; ret 0xc5b9
0x00000000004b186a : xlatb ; sti ; ret 0x89f1
0x00000000004b36a4 : xlatb ; sti ; ret 0xb9f1
0x0000000000487709 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000406465 : xor bh, 0x4b ; add al, ch ; ret 0xffbd
0x000000000047bfa7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000466ca3 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x000000000047bfa8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b8966 : xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004a38dd : xor byte ptr [rcx - 0x47], al ; ret 0x1baa
0x000000000045e013 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x00000000004c6d40 : xor byte ptr [rdi - 4], dl ; call qword ptr [rbx]
0x0000000000446b4c : xor byte ptr [rdi], dl ; ret 0x898f
0x00000000004c5d60 : xor byte ptr [rdx - 8], cl ; call rdi
0x000000000041ee51 : xor ch, byte ptr [rcx + rdi*4 + 0x3c] ; push rsp ; ret
0x00000000004c5060 : xor ch, dh ; cmc ; jmp qword ptr [rdi]
0x0000000000406d7d : xor cl, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043d1be : xor dword ptr [rax - 0x75], ecx ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004c4bc5 : xor dword ptr [rax], eax ; add ah, ch ; ret
0x00000000004159ef : xor dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004470ee : xor dword ptr [rdi], edx ; ret 0x488f
0x0000000000446c2a : xor dword ptr [rdi], edx ; ret 0x898f
0x000000000044703e : xor dword ptr [rdi], edx ; ret 0xb98f
0x0000000000447882 : xor dword ptr [rsi - 0x73], ecx ; jb 0x447847 ; test al, 0x73 ; ret
0x000000000040fac1 : xor eax, 0x58b80000 ; ret 0x23d9
0x000000000048d6ce : xor eax, 0x7ab99ca8 ; ret
0x000000000041a2c9 : xor eax, 0xb8000024 ; xchg eax, r12d ; ret
0x00000000004355d0 : xor eax, 0xb9ec4e20 ; paddb mm2, qword ptr [rdx] ; ret 0xffba
0x000000000046ca67 : xor ebx, dword ptr [rdi] ; jle 0x46c9fa ; int 0x80
0x00000000004c4929 : xor edi, ebx ; jmp rsp
0x00000000004b85cd : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004b88d1 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000041ee50 : xor r13b, byte ptr [r9 + r15*4 + 0x3c] ; push rsp ; ret
0x00000000004c4928 : xor r15, rbx ; jmp rsp
