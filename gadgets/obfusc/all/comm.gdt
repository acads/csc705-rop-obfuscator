0x0000000000407209 : adc al, 0x25 ; ret
0x00000000004070d6 : adc al, 0x25 ; ret 0x62b2
0x000000000040ac4a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406433 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416dee : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000416761 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041ee8b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004178eb : adc eax, 0x558abda1 ; ret
0x000000000041aec9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407207 : add al, -0x76 ; adc al, 0x25 ; ret
0x0000000000429be9 : add al, 0 ; add al, bl ; loopne 0x429bf2 ; call rax
0x0000000000406fcd : add al, 0 ; add bh, al ; in al, -0x6d ; ret
0x0000000000429bf9 : add al, 0 ; add byte ptr [rax], cl ; jrcxz 0x429c02 ; call qword ptr [rax]
0x0000000000406d82 : add al, 0 ; add cl, ch ; ret 1
0x0000000000402f54 : add al, 0x25 ; ret
0x0000000000402f40 : add al, 0x25 ; ret 0x62b2
0x0000000000425c5a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000429beb : add al, bl ; loopne 0x429bf0 ; call rax
0x0000000000429c6b : add al, bl ; sbb esi, edi ; call rax
0x00000000004063f7 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x000000000042657d : add al, byte ptr [rax] ; add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x0000000000406cf1 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x7e2dc845], cl ; ret 0xfa22
0x0000000000429eb3 : add al, ch ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000042a08f : add al, dh ; fdiv st(5), st(0) ; call qword ptr [rcx]
0x000000000042a47f : add al, dl ; sbb bh, bh ; call rdi
0x0000000000406fcf : add bh, al ; in al, -0x6d ; ret
0x0000000000421aa5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041eb64 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000417729 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004063f9 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000405ba7 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rdx
0x00000000004062fd : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004065ad : add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000428f8f : add bl, dh ; ret
0x0000000000428c62 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000428ec4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041dfba : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4298
0x000000000041be8b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403482 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040304e : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000429c2b : add byte ptr [rax - 5], ch ; std ; call rax
0x000000000042a59f : add byte ptr [rax], ah ; and bh, bh ; call qword ptr [rbx]
0x0000000000421aa3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041eb62 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004065ab : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000428f8d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004073bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040304c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000428f8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402fd7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042668d : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x0000000000407cde : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004017a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2df045], cl ; ret
0x000000000041a932 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040696d : add byte ptr [rax], al ; add byte ptr [rbx + 0x7d2dc845], cl ; ret 0xfa22
0x000000000041d323 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042052c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000406a4e : add byte ptr [rax], al ; add byte ptr [rbx - 0x6dd237bb], cl ; ret
0x0000000000402abf : add byte ptr [rax], al ; add byte ptr [rbx - 0x6fd243bb], cl ; ret 0x7944
0x0000000000420003 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000041fc89 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040297a : add byte ptr [rax], al ; add byte ptr [rbx - 0xbd243bb], cl ; ret
0x0000000000405f86 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000426409 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x0000000000428c63 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000428ec5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041ead0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000428031 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040518e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405bd0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000402fd9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004251d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041ea5a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403019 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042a08a : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, dh ; fdiv st(5), st(0) ; call qword ptr [rcx]
0x0000000000409ac0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a550 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ee8d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421f08 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004090e9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401273 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000429eb2 : add byte ptr [rax], al ; call 0x11429e9a
0x0000000000429da2 : add byte ptr [rax], al ; cmp byte ptr [rdx - 1], dl ; call rax
0x0000000000429ea2 : add byte ptr [rax], al ; cwde ; fcos ; call rax
0x0000000000429bea : add byte ptr [rax], al ; fsub st(0) ; std ; call rax
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x000000000040183d : add byte ptr [rax], al ; jmp 0x401a3b
0x0000000000428ca8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004073be : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042aaee : add byte ptr [rax], al ; nop ; ret
0x0000000000429c3a : add byte ptr [rax], al ; or bh, bh ; std ; call qword ptr [rax]
0x0000000000429bfa : add byte ptr [rax], al ; or bl, ah ; std ; call qword ptr [rax]
0x0000000000401a22 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a933 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428f8e : add byte ptr [rax], al ; ret
0x000000000042a41e : add byte ptr [rax], al ; sbb byte ptr [rcx], -1 ; jmp qword ptr [rbx]
0x0000000000429d2a : add byte ptr [rax], al ; sub dil, dil ; jmp rax
0x0000000000429bba : add byte ptr [rax], al ; test al, 0x7e ; std ; call qword ptr [rax]
0x0000000000429bfb : add byte ptr [rax], cl ; jrcxz 0x429c00 ; call qword ptr [rax]
0x000000000042657f : add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x000000000042668f : add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x0000000000407ce0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004017a4 : add byte ptr [rbx + 0x2d2df045], cl ; ret
0x000000000041a934 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406a37 : add byte ptr [rbx + 0x652dc845], cl ; ret 0x8589
0x0000000000406c2b : add byte ptr [rbx + 0x662dc845], cl ; ret 0x8589
0x000000000040696f : add byte ptr [rbx + 0x7d2dc845], cl ; ret 0xfa22
0x0000000000406cf3 : add byte ptr [rbx + 0x7e2dc845], cl ; ret 0xfa22
0x000000000041d325 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041d2da : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042052e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000406c12 : add byte ptr [rbx - 0x6cd237bb], cl ; ret
0x0000000000406a50 : add byte ptr [rbx - 0x6dd237bb], cl ; ret
0x0000000000402ac1 : add byte ptr [rbx - 0x6fd243bb], cl ; ret 0x7944
0x0000000000401e9a : add byte ptr [rbx - 0x70d243bb], cl ; ret 0x7944
0x0000000000428ca9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000420005 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000041fc8b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040297c : add byte ptr [rbx - 0xbd243bb], cl ; ret
0x0000000000402931 : add byte ptr [rbx - 0xcd243bb], cl ; ret
0x0000000000405f88 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000042a08b : add byte ptr [rcx + rax], al ; add al, dh ; fdiv st(5), st(0) ; call qword ptr [rcx]
0x0000000000426304 : add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x000000000042640b : add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x0000000000407b6d : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407bdf : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016c8 : add byte ptr [rcx], al ; ret
0x0000000000428c65 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000428ec7 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000041ead2 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000428033 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405190 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405bd2 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000402fdb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004251d7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041ea5c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040301b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042a59b : add byte ptr [rsi + rax], dl ; add byte ptr [rax], ah ; and bh, bh ; call qword ptr [rbx]
0x000000000041785c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000402512 : add cl, ch ; ret
0x0000000000406d84 : add cl, ch ; ret 1
0x0000000000402f52 : add dh, al ; add al, 0x25 ; ret
0x0000000000402f3e : add dh, al ; add al, 0x25 ; ret 0x62b2
0x000000000042a08d : add dword ptr [rax], eax ; add al, dh ; fdiv st(5), st(0) ; call qword ptr [rcx]
0x000000000040292f : add dword ptr [rax], eax ; add byte ptr [rbx - 0xcd243bb], cl ; ret
0x0000000000426302 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x000000000042a08c : add dword ptr [rax], r8d ; add al, dh ; fdiv st(5), st(0) ; call qword ptr [rcx]
0x00000000004281b2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000427004 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004271ee : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016c4 : add eax, 0x229bee ; add ebx, esi ; ret
0x0000000000429c29 : add eax, 0xfb680000 ; std ; call rax
0x0000000000429c39 : add eax, 0xff080000 ; std ; call qword ptr [rax]
0x00000000004062fb : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004219d4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406c10 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6cd237bb], cl ; ret
0x000000000040168b : add eax, edx ; sar rax, 1 ; jne 0x40169c ; pop rbp ; ret
0x00000000004016c9 : add ebx, esi ; ret
0x000000000040353b : add esi, eax ; add al, 0x25 ; ret
0x0000000000403533 : add esi, eax ; add al, 0x25 ; ret 0x62b2
0x0000000000401a7b : add esp, 0x10 ; pop rbp ; ret
0x0000000000407bdd : add esp, 0x100 ; pop rbp ; ret
0x000000000040ac48 : add esp, 0x110 ; pop rbp ; ret
0x000000000040a5b4 : add esp, 0x190 ; pop rbp ; ret
0x000000000041ed3c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000408e9d : add esp, 0x20 ; pop rbp ; ret
0x000000000041ee90 : add esp, 0x40 ; pop rbp ; ret
0x0000000000425e59 : add esp, 0x440 ; pop rbp ; ret
0x0000000000408b22 : add esp, 0x50 ; pop rbp ; ret
0x000000000041fdb0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000406431 : add esp, 0x610 ; pop rbp ; ret
0x00000000004090ec : add esp, 0x70 ; pop rbp ; ret
0x0000000000401a1e : add esp, 0x80 ; pop rbp ; ret
0x0000000000409a4d : add esp, 0x90 ; pop rbp ; ret
0x000000000041d026 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041ae2b : add esp, 0xb0 ; pop rbp ; ret
0x000000000040b1da : add esp, 0xd0 ; pop rbp ; ret
0x000000000042077e : add esp, 0xe0 ; pop rbp ; ret
0x00000000004096be : add esp, 0xf0 ; pop rbp ; ret
0x000000000040b7e3 : add esp, 8 ; pop rbp ; ret
0x0000000000401276 : add esp, 8 ; ret
0x000000000040168a : add rax, rdx ; sar rax, 1 ; jne 0x40169d ; pop rbp ; ret
0x0000000000401a7a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407bdc : add rsp, 0x100 ; pop rbp ; ret
0x000000000040ac47 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040a5b3 : add rsp, 0x190 ; pop rbp ; ret
0x000000000041ed3b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000408e9c : add rsp, 0x20 ; pop rbp ; ret
0x000000000041ee8f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000425e58 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000408b21 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041fdaf : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406430 : add rsp, 0x610 ; pop rbp ; ret
0x00000000004090eb : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401a1d : add rsp, 0x80 ; pop rbp ; ret
0x0000000000409a4c : add rsp, 0x90 ; pop rbp ; ret
0x000000000041d025 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041ae2a : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b1d9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042077d : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004096bd : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040b7e2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401275 : add rsp, 8 ; ret
0x0000000000428c6d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000427003 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004271ed : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042a5a1 : and bh, bh ; call qword ptr [rbx]
0x0000000000402e4e : and byte ptr [rip - 0x6f460344], bh ; ret 0x7944
0x000000000041f9bb : and byte ptr [rsi + 0x58], ah ; jb 0x41f9f2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040352e : and eax, 0x62b2c1 ; add esi, eax ; add al, 0x25 ; ret 0x62b2
0x0000000000403536 : and eax, 0x62b2c2 ; add esi, eax ; add al, 0x25 ; ret
0x0000000000416a91 : and eax, 0x75b4b9d3 ; ret
0x0000000000429ced : and edi, edi ; jmp rax
0x0000000000429eb4 : call 0x11429e98
0x00000000004252c4 : call 0x4014d2
0x000000000041fdb5 : call 0x41fe79
0x0000000000421dfd : call 0xffffffffaca2e031
0x0000000000421dfc : call 0xffffffffaca2e032
0x000000000041a549 : call 0xffffffffe9042e99
0x000000000041a548 : call 0xffffffffe9042e9a
0x0000000000428f69 : call qword ptr [r12 + rbx*8]
0x0000000000429bbf : call qword ptr [rax]
0x000000000041bd0e : call qword ptr [rbx]
0x0000000000425efc : call qword ptr [rcx]
0x00000000004066d5 : call qword ptr [rdi]
0x00000000004159bb : call qword ptr [rdx]
0x00000000004063ff : call qword ptr [rsi]
0x0000000000428f6a : call qword ptr [rsp + rbx*8]
0x00000000004016ed : call rax
0x0000000000417c3b : call rcx
0x0000000000419614 : call rdi
0x0000000000405bad : call rdx
0x0000000000407c8b : call rsp
0x0000000000425e57 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000041f117 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004227e9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000426a98 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040168f : clc ; jne 0x401698 ; pop rbp ; ret
0x000000000041be8f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d01d : clc ; ret 0x77a8
0x000000000042638f : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000042243e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042325d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000407d0f : cld ; jmp 0x407d7c
0x0000000000407d0e : cld ; jmp 0x407d7d
0x000000000041f9c0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000428c6c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041e8db : cmc ; ret 0x4f0b
0x000000000041dfbd : cmp al, 0x25 ; ret 0x4298
0x0000000000429da4 : cmp byte ptr [rdx - 1], dl ; call rax
0x0000000000422ab8 : cmp ch, al ; ret 0x5f
0x000000000041ea71 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000402e4f : cmp eax, 0x90b9fcbc ; ret 0x7944
0x000000000040164d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401660 ; pop rbp ; ret
0x00000000004178e7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000429ea4 : cwde ; fcos ; call rax
0x0000000000405af7 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000416deb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041675e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000416f63 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000401dbe : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004259b6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407b92 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041e8d6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000406d7e : dec dword ptr [rdi] ; test al, cl ; add al, 0 ; add cl, ch ; ret 1
0x000000000040ccfa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x00000000004217ce : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004257e3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040951c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000425439 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406a3a : enter 0x652d, 0x46 ; ret 0x8589
0x0000000000406c2e : enter 0x662d, 0x46 ; ret 0x8589
0x000000000040aff9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004269ec : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004217b0 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000429ea5 : fcos ; call rax
0x000000000042a091 : fdiv st(5), st(0) ; call qword ptr [rcx]
0x0000000000429eb5 : fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000042178f : fild word ptr [rcx - 0x77] ; ret
0x0000000000427228 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004263e1 : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000420217 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004263e2 : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000420218 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000428f6c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000429bec : fsub st(0) ; std ; call rax
0x00000000004099a7 : fsub st(1), st(0) ; mov ebx, 0xb8000000 ; ret 0xebc8
0x0000000000401a79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042077c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040b7e1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401660 : hlt ; pop rbp ; mov edi, 0x62b250 ; jmp rax
0x0000000000402981 : hlt ; ret
0x000000000041faeb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000406fd2 : in al, -0x6d ; ret
0x0000000000408f18 : in al, 0x2d ; ret 0xc226
0x0000000000422ba1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000426e28 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000421ebc : in al, dx ; jmp 0x421f39
0x0000000000421ebb : in al, dx ; jmp 0x421f3a
0x0000000000401dc1 : in al, dx ; pop rbp ; ret
0x0000000000406851 : in eax, 0x59 ; test dword ptr [rdx - 0x77], 0x8f0f8845 ; ret 5
0x0000000000405f84 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000405bce : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405870 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405b77 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402cbe : inc dword ptr [rcx + 0xf] ; ret
0x0000000000407aa0 : inc dword ptr [rcx + 0xf] ; ret 0x4589
0x000000000040518c : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004066cf : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000406420 : inc edi ; test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000041c9f7 : int 0x5b
0x0000000000401653 : ja 0x40165a ; pop rbp ; ret
0x000000000041f9be : jb 0x41f9ef ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040165f : je 0x40165d ; pop rbp ; mov edi, 0x62b250 ; jmp rax
0x0000000000415e86 : jge 0x415e0b ; ret 0xffd5
0x0000000000416950 : jge 0x416930 ; shr cl, cl ; ret 0x3b
0x0000000000429bbd : jle 0x429bbe ; call qword ptr [rax]
0x000000000040140b : jmp 0x401287
0x000000000040183f : jmp 0x401a39
0x0000000000402e92 : jmp 0x403612
0x0000000000406fcb : jmp 0x407482
0x0000000000407d10 : jmp 0x407d7b
0x000000000040998e : jmp 0x409a6e
0x00000000004170a0 : jmp 0x41a520
0x0000000000414fa4 : jmp 0x41a521
0x0000000000416371 : jmp 0x41a522
0x000000000041dcfb : jmp 0x41e767
0x000000000041dc38 : jmp 0x41e769
0x000000000041dfb6 : jmp 0x41e76a
0x000000000041fd63 : jmp 0x41fdc8
0x0000000000421ebd : jmp 0x421f38
0x0000000000425cf6 : jmp 0x425fd8
0x0000000000426258 : jmp 0x426448
0x000000000042686e : jmp 0x426ae9
0x000000000041e8da : jmp 0x4f4dabd6
0x0000000000408ed4 : jmp 0xffffffffb602b59d
0x000000000042157f : jmp 0xffffffffc4064c46
0x0000000000419e75 : jmp qword ptr [rax]
0x0000000000406303 : jmp qword ptr [rbx]
0x0000000000405f08 : jmp qword ptr [rcx]
0x0000000000417b27 : jmp qword ptr [rdi]
0x000000000041eb6a : jmp qword ptr [rdx]
0x0000000000401667 : jmp rax
0x0000000000416478 : jmp rbx
0x0000000000416eaa : jmp rcx
0x00000000004164d2 : jmp rdi
0x00000000004016a7 : jmp rdx
0x000000000042a6cb : jmp rsi
0x0000000000416788 : jmp rsp
0x0000000000401690 : jne 0x401697 ; pop rbp ; ret
0x00000000004090ee : jo 0x40914f ; ret
0x000000000040fd9e : jo 0x40fdaa ; ret
0x0000000000411a0e : jo 0x411a1a ; ret
0x0000000000414f5d : jo 0x414f69 ; ret
0x000000000041c244 : jo 0x41c2a5 ; ret
0x0000000000429bfd : jrcxz 0x429bfe ; call qword ptr [rax]
0x000000000041694e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000417a4e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000408516 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c695 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041c539 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c694 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042640d : les r8d, ptr [r10 + rcx*4 + 0x4d] ; ret
0x0000000000426306 : les r8d, ptr [r10 + rcx*4 + 0x5d] ; ret
0x00000000004152ae : ljmp ptr [rdi] ; ret 0x23da
0x00000000004182b5 : loope 0x418283 ; jmp 0x41a523
0x0000000000408e9b : loopne 0x408eeb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408e9a : loopne 0x408eec ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c693 : loopne 0x40c6e6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041bc3d : loopne 0x41bca3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d024 : loopne 0x41d077 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041f423 : loopne 0x41f42c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041fdae : loopne 0x41fdfe ; add esp, 0x60 ; pop rbp ; ret
0x000000000041fdad : loopne 0x41fdff ; add esp, 0x60 ; pop rbp ; ret
0x0000000000420780 : loopne 0x420787 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422442 : loopne 0x422449 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428cac : loopne 0x428cfb ; mov esp, ebp ; pop rbp ; ret
0x0000000000428cab : loopne 0x428cfc ; mov esp, ebp ; pop rbp ; ret
0x0000000000428efc : loopne 0x428f4b ; mov esp, ebp ; pop rbp ; ret
0x0000000000428efb : loopne 0x428f4c ; mov esp, ebp ; pop rbp ; ret
0x0000000000429bed : loopne 0x429bee ; call rax
0x0000000000415e7d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415f57 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004264bc : mov ah, 0x2d ; ret
0x0000000000413f05 : mov ah, 0x75 ; ret
0x000000000041ca13 : mov al, -0x47 ; ret
0x00000000004254bf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ae2d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429da0 : mov al, 0xb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 1], dl ; call rax
0x0000000000429ea0 : mov al, 0xf ; add byte ptr [rax], al ; cwde ; fcos ; call rax
0x0000000000429be8 : mov al, 4 ; add byte ptr [rax], al ; fsub st(0) ; std ; call rax
0x000000000042751d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004271ea : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042744d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d8a5 : mov bl, 0x75 ; ret
0x000000000042686b : mov byte ptr [rbp - 0x45], cl ; jmp 0x426aec
0x00000000004016c3 : mov byte ptr [rip + 0x229bee], 1 ; ret
0x00000000004052d5 : mov ch, -0x75 ; xchg eax, ebp ; push -2 ; ret 0x9589
0x00000000004156ff : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004281b4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000427006 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004271f0 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000428c6a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000402fd5 : mov dl, 0x62 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407b6b : mov dl, 0x62 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427ee1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040be19 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b9ef : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421eba : mov dword ptr [rbp - 0x14], eax ; jmp 0x421f3b
0x0000000000408e99 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040998b : mov dword ptr [rbp - 0x24], eax ; jmp 0x409a71
0x000000000041dcf8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x41e76a
0x0000000000401a77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c0f6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bc9d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000403481 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fc2b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fdfe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408b1e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000421d35 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040be1c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041fdac : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428caa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ffc1 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040347e : mov eax, dword ptr [rbp - 0x30] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bc9f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040b7df : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041be8d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bc9e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004186b8 : mov ebp, 0xe19c53ba ; ret
0x00000000004016eb : mov ebp, esp ; call rax
0x0000000000401651 : mov ebp, esp ; ja 0x40165c ; pop rbp ; ret
0x00000000004099a9 : mov ebx, 0xb8000000 ; ret 0xebc8
0x00000000004073bc : mov ecx, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000040b9ec : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016e5 : mov edi, 0x62ae20 ; mov rbp, rsp ; call rax
0x0000000000401662 : mov edi, 0x62b250 ; jmp rax
0x00000000004016a2 : mov edi, 0x62b250 ; jmp rdx
0x0000000000414f57 : mov edi, 0xb8000055 ; wait ; jo 0x414f6f ; ret
0x0000000000428f67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004252c2 : mov edi, esi ; call 0x4014d4
0x0000000000428f66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000425c6e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041571b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000416592 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000425c57 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004016a0 : mov esi, eax ; mov edi, 0x62b250 ; jmp rdx
0x0000000000426474 : mov esp, 0xe981c189 ; ret 0x6b4f
0x0000000000401dc0 : mov esp, ebp ; pop rbp ; ret
0x000000000040c0f5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004264bb : mov r12b, 0x2d ; ret
0x0000000000426473 : mov r12d, 0xe981c189 ; ret 0x6b4f
0x000000000040b518 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fc2a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fdfd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408b1d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041fdab : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041be8c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016ea : mov rbp, rsp ; call rax
0x0000000000401650 : mov rbp, rsp ; ja 0x40165d ; pop rbp ; ret
0x00000000004252c1 : mov rdi, rsi ; call 0x4014d5
0x000000000040169f : mov rsi, rax ; mov edi, 0x62b250 ; jmp rdx
0x0000000000401dbf : mov rsp, rbp ; pop rbp ; ret
0x000000000041f9c1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000421421 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x00000000004066cc : movabs al, byte ptr [0xfffe5485c7ffffae] ; call qword ptr [rdi]
0x00000000004111f8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000414445 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004281b3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000427005 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004271ef : movzx eax, al ; pop rbp ; ret
0x0000000000425a68 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040d6e5 : nop ; ret
0x000000000041baf2 : nop ; ret 0x148
0x000000000041bb06 : nop ; ret 0x2948
0x0000000000402ac6 : nop ; ret 0x7944
0x0000000000428f88 : nop dword ptr [rax + rax] ; ret
0x0000000000401e98 : or al, 0 ; add byte ptr [rbx - 0x70d243bb], cl ; ret 0x7944
0x0000000000415e7a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415f54 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000405c84 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rdx
0x000000000042641e : or al, byte ptr [rdx + rcx*4 + 0x4d] ; ret 0x8b48
0x0000000000426317 : or al, byte ptr [rdx + rcx*4 + 0x5d] ; ret 0x8b48
0x0000000000421ae5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000429c3c : or bh, bh ; std ; call qword ptr [rax]
0x0000000000429bfc : or bl, ah ; std ; call qword ptr [rax]
0x0000000000405afa : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000407c21 : or byte ptr [r8 - 0x77], cl ; ret 0x8148
0x000000000040b9f0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407c22 : or byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041d2d8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000405afb : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000421ae4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000416f66 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040c0f4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405ba5 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rdx
0x000000000040bc9b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000426980 : or esp, 0x1481f65 ; ret 0x8948
0x000000000041785b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004271ec : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c5 : out dx, al ; wait ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042751f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ca12 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000425c59 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000418945 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040d596 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000418990 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041eb61 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000425c5c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041f9bc : pop ax ; jb 0x41f9f1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004197f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428f7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041bc3f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004197fb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428f7e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004197fd : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428f80 : pop r14 ; pop r15 ; ret
0x000000000040c699 : pop r14 ; pop rbp ; ret
0x00000000004197ff : pop r15 ; pop rbp ; ret
0x0000000000428f82 : pop r15 ; ret
0x0000000000406cf0 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x7e2dc845], cl ; ret 0xfa22
0x000000000041f9bd : pop rax ; jb 0x41f9f0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004016c2 : pop rbp ; mov byte ptr [rip + 0x229bee], 1 ; ret
0x0000000000401661 : pop rbp ; mov edi, 0x62b250 ; jmp rax
0x000000000040169e : pop rbp ; mov rsi, rax ; mov edi, 0x62b250 ; jmp rdx
0x0000000000428f7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004197fc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428f7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000415702 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004119d5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041571e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401655 : pop rbp ; ret
0x000000000042631a : pop rbp ; ret 0x8b48
0x000000000040a028 : pop rbx ; add al, 0 ; add cl, ch ; ret 1
0x000000000041bc3e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a935 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c698 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d2e0 : pop rbx ; ret
0x0000000000415703 : pop rcx ; ret 0x1b2
0x000000000040fdd6 : pop rcx ; ret 0x8589
0x000000000041571f : pop rcx ; ret 0x8b48
0x0000000000417a50 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000406852 : pop rcx ; test dword ptr [rdx - 0x77], 0x8f0f8845 ; ret 5
0x0000000000419800 : pop rdi ; pop rbp ; ret
0x0000000000428f83 : pop rdi ; ret
0x00000000004197fe : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428f81 : pop rsi ; pop r15 ; ret
0x000000000040c69a : pop rsi ; pop rbp ; ret
0x00000000004197fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428f7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041bc40 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fdd5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000428035 : popfq ; ret 0xd284
0x0000000000415700 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004178ea : push -0x75425eeb ; push rbp ; ret
0x0000000000414448 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004052d8 : push -2 ; ret 0x9589
0x0000000000429c27 : push qword ptr [rax + 0x68000005] ; sti ; std ; call rax
0x0000000000429c67 : push qword ptr [rax - 0x27fffffa] ; sbb esi, edi ; call rax
0x0000000000429be7 : push qword ptr [rax - 0x27fffffc] ; loopne 0x429bf4 ; call rax
0x0000000000429e9f : push qword ptr [rax - 0x67fffff1] ; fcos ; call rax
0x0000000000429bf7 : push rax ; add al, 0 ; add byte ptr [rax], cl ; jrcxz 0x429c04 ; call qword ptr [rax]
0x0000000000429c37 : push rax ; add eax, 0xff080000 ; std ; call qword ptr [rax]
0x0000000000408b24 : push rax ; pop rbp ; ret
0x0000000000429eaf : push rax ; sldt word ptr [rax] ; call 0x11429e9d
0x00000000004016e4 : push rbp ; mov edi, 0x62ae20 ; mov rbp, rsp ; call rax
0x00000000004178ef : push rbp ; ret
0x0000000000417886 : push rbp ; ret 0xd284
0x0000000000422ab4 : push rbp ; ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x5f
0x0000000000415e7f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415f59 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000405c83 : push rbx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], edx ; call rdx
0x0000000000425c5b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040ac46 : pushfq ; add rsp, 0x110 ; pop rbp ; ret
0x0000000000405192 : pushfq ; ret 0xd284
0x0000000000401279 : ret
0x000000000040ccfe : ret 0
0x0000000000426585 : ret 0x12e1
0x000000000041baf3 : ret 0x148
0x0000000000418a54 : ret 0x1a
0x000000000040dccd : ret 0x1add
0x00000000004072cd : ret 0x1b2
0x0000000000401412 : ret 0x229c
0x000000000040e61a : ret 0x23da
0x000000000041b318 : ret 0x279e
0x0000000000416f69 : ret 0x2948
0x0000000000417a54 : ret 0x2a
0x0000000000415e82 : ret 0x2d50
0x00000000004257be : ret 0x3040
0x0000000000416954 : ret 0x3b
0x00000000004139b5 : ret 0x3e
0x000000000041dfbf : ret 0x4298
0x0000000000401d06 : ret 0x4589
0x0000000000416df1 : ret 0x4802
0x0000000000425c5e : ret 0x4815
0x0000000000418946 : ret 0x4861
0x0000000000401c3b : ret 0x48f0
0x0000000000411201 : ret 0x4b
0x000000000041c817 : ret 0x4cc0
0x0000000000419858 : ret 0x4cf0
0x000000000041e8dc : ret 0x4f0b
0x000000000040bc4b : ret 0x5589
0x000000000041610a : ret 0x5966
0x000000000041d537 : ret 0x5bc6
0x0000000000422aba : ret 0x5f
0x0000000000428c6f : ret 0x61
0x0000000000402f42 : ret 0x62b2
0x000000000040d366 : ret 0x6a8a
0x0000000000426479 : ret 0x6b4f
0x000000000040d01e : ret 0x77a8
0x0000000000401ea0 : ret 0x7944
0x0000000000406001 : ret 0x79e8
0x000000000040e181 : ret 0x7a8a
0x0000000000414dfb : ret 0x7b7f
0x0000000000407b35 : ret 0x7db9
0x000000000041b7aa : ret 0x8041
0x000000000041b9f2 : ret 0x8141
0x0000000000407c25 : ret 0x8148
0x0000000000416d14 : ret 0x822d
0x000000000041b7c0 : ret 0x8445
0x0000000000406a3f : ret 0x8589
0x000000000040dd93 : ret 0x8940
0x0000000000408afb : ret 0x8948
0x000000000042427f : ret 0x894a
0x000000000040d597 : ret 0x8961
0x0000000000408ed7 : ret 0x89b5
0x0000000000425878 : ret 0x8a44
0x0000000000425775 : ret 0x8a4a
0x00000000004072e6 : ret 0x8b48
0x00000000004201b7 : ret 0x8b4c
0x00000000004217b2 : ret 0x941
0x00000000004052dd : ret 0x9589
0x0000000000415f5c : ret 0xa30b
0x0000000000421dff : ret 0xac60
0x0000000000403051 : ret 0xb0
0x00000000004063b3 : ret 0xb5bf
0x0000000000417860 : ret 0xb740
0x0000000000402c7c : ret 0xb841
0x000000000041f9b7 : ret 0xb848
0x0000000000415a90 : ret 0xb940
0x0000000000425702 : ret 0xb94a
0x0000000000417edc : ret 0xbf48
0x0000000000401685 : ret 0xc148
0x0000000000408f1a : ret 0xc226
0x0000000000428eb2 : ret 0xc493
0x00000000004260f8 : ret 0xc82e
0x0000000000406d11 : ret 0xc8a8
0x00000000004271a9 : ret 0xca21
0x000000000040665a : ret 0xca29
0x0000000000428c75 : ret 0xccb2
0x0000000000402fde : ret 0xd284
0x0000000000423ec5 : ret 0xd618
0x00000000004031fe : ret 0xd701
0x0000000000405afe : ret 0xe280
0x0000000000417732 : ret 0xe940
0x0000000000418991 : ret 0xe961
0x000000000040e7bd : ret 0xea51
0x0000000000428c67 : ret 0xea81
0x00000000004098e3 : ret 0xebc8
0x000000000041a54c : ret 0xee8
0x000000000040bc85 : ret 0xf281
0x0000000000425eb8 : ret 0xf2e8
0x0000000000416597 : ret 0xf41
0x00000000004184e5 : ret 0xf7f3
0x0000000000406975 : ret 0xfa22
0x0000000000416c6e : ret 0xfc75
0x00000000004184df : ret 0xffa5
0x0000000000416c68 : ret 0xffc4
0x0000000000415e88 : ret 0xffd5
0x0000000000415f62 : ret 0xffd8
0x0000000000416d1a : ret 0xffd9
0x0000000000416104 : ret 0xffe0
0x0000000000414df5 : ret 0xfffa
0x00000000004252c6 : ret 0xfffd
0x0000000000406d86 : ret 1
0x0000000000409321 : ret 2
0x000000000040685a : ret 5
0x000000000042142a : ret 6
0x0000000000419c54 : ret 8
0x0000000000425c3d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042275c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b1dc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425c3c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040347f : ror byte ptr [r11 - 0x1376b800], 1 ; pop rbp ; ret
0x000000000041f9b4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040168c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40169b ; pop rbp ; ret
0x0000000000427007 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000403480 : ror byte ptr [rbx - 0x1376b800], 1 ; pop rbp ; ret
0x000000000040bc9a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000422ab5 : ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x5f
0x0000000000425a6e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041c6d0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000405bd4 : sahf ; ret 0xd284
0x000000000040168e : sar eax, 1 ; jne 0x401699 ; pop rbp ; ret
0x0000000000417a51 : sar ebp, -0x17 ; ret 0x2a
0x000000000040168d : sar rax, 1 ; jne 0x40169a ; pop rbp ; ret
0x0000000000407b32 : sbb al, 0x15 ; ret 0x7db9
0x0000000000407712 : sbb al, 0x15 ; ret 0x8589
0x000000000041ca10 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042a481 : sbb bh, bh ; call rdi
0x000000000042a420 : sbb byte ptr [rcx], -1 ; jmp qword ptr [rbx]
0x0000000000417951 : sbb cl, ch ; ret
0x000000000041f203 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ba60 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042a421 : sbb edi, edi ; jmp qword ptr [rbx]
0x0000000000429c6d : sbb esi, edi ; call rax
0x0000000000416952 : shr cl, cl ; ret 0x3b
0x0000000000429eb1 : sldt word ptr [rax] ; call 0x11429e9b
0x0000000000429ea1 : sldt word ptr [rax] ; cwde ; fcos ; call rax
0x000000000041478d : stc ; ret 0x77a8
0x0000000000429bbe : std ; call qword ptr [rax]
0x000000000042a092 : std ; call qword ptr [rcx]
0x0000000000429bee : std ; call rax
0x0000000000429c26 : std ; push qword ptr [rax + 0x68000005] ; sti ; std ; call rax
0x0000000000429be6 : std ; push qword ptr [rax - 0x27fffffc] ; loopne 0x429bf5 ; call rax
0x0000000000429bf6 : std ; push rax ; add al, 0 ; add byte ptr [rax], cl ; jrcxz 0x429c05 ; call qword ptr [rax]
0x0000000000429c36 : std ; push rax ; add eax, 0xff080000 ; std ; call qword ptr [rax]
0x000000000041b317 : std ; ret 0x279e
0x0000000000429c2d : sti ; std ; call rax
0x0000000000407e5e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429d2d : sub bh, bh ; jmp rax
0x0000000000421f06 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407d48 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415e85 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000415e7b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415f55 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000429d2c : sub dil, dil ; jmp rax
0x0000000000416d15 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000401271 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042a6c9 : sub edi, edi ; jmp rsi
0x000000000041f9bf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004252bf : sub esi, eax ; mov rdi, rsi ; call 0x4014d7
0x0000000000428fbd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004252be : sub rsi, rax ; mov rdi, rsi ; call 0x4014d8
0x0000000000428fbc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407205 : test al, -0x38 ; add al, -0x76 ; adc al, 0x25 ; ret
0x0000000000415e80 : test al, -0x7f ; ret 0x2d50
0x0000000000415f5a : test al, -0x7f ; ret 0xa30b
0x0000000000425513 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c0ee : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004186b6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000429bbc : test al, 0x7e ; std ; call qword ptr [rax]
0x000000000041ea58 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406d80 : test al, cl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000428f8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ccfc : test byte ptr [rcx], ch ; ret 0
0x000000000040ccf6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000421ae7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000421aa7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000421a22 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000401dba : test dword ptr [rdi + rdi*8 - 1], ebp ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041eb66 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041bd0a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000406853 : test dword ptr [rdx - 0x77], 0x8f0f8845 ; ret 5
0x000000000041772b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041898a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x00000000004066d1 : test dword ptr [rsi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x00000000004063fb : test dword ptr [rsi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000405ba9 : test dword ptr [rsi + rdi*8 - 1], edx ; call rdx
0x00000000004062ff : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004065af : test dword ptr [rsi + rdi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000041444a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041893f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000406fcc : test eax, 0xc7000004 ; in al, -0x6d ; ret
0x00000000004016c6 : wait ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041694f : wait ; jge 0x416931 ; shr cl, cl ; ret 0x3b
0x0000000000411a0d : wait ; jo 0x411a1b ; ret
0x0000000000414f5c : wait ; jo 0x414f6a ; ret
0x0000000000425c58 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004052d7 : xchg eax, ebp ; push -2 ; ret 0x9589
0x0000000000405f8b : xchg eax, ebp ; ret
0x0000000000402fdd : xchg eax, ebp ; ret 0xd284
0x0000000000405afd : xchg eax, ebp ; ret 0xe280
0x000000000040d595 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000406c17 : xchg eax, ebx ; ret
0x00000000004140c5 : xchg eax, ecx ; ret
0x00000000004251d9 : xchg eax, edi ; ret 0xd284
0x0000000000406a55 : xchg eax, edx ; ret
0x000000000041b7bf : xchg eax, edx ; ret 0x8445
0x000000000041ea5e : xchg eax, edx ; ret 0xd284
0x000000000041dcfa : xchg eax, esp ; jmp 0x41e768
0x000000000041dc37 : xchg eax, esp ; jmp 0x41e76a
0x0000000000418944 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000414215 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041898f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004217d0 : xchg eax, esp ; ret
0x000000000041b7a9 : xchg eax, esp ; ret 0x8041
0x000000000041785e : xchg eax, esp ; ret 0xb740
0x000000000040301d : xchg eax, esp ; ret 0xd284
0x000000000041dcf9 : xchg eax, r12d ; jmp 0x41e769
0x0000000000417859 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040c0f7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c0f8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042697d : xor byte ptr [rcx - 0x1b], ah ; or esp, 0x1481f65 ; ret 0x8948
