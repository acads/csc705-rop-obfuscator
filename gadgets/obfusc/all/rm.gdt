0x0000000000456583 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045fc59 : adc byte ptr [rax], al ; add al, bh ; pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004324bb : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f7be : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000044b2fd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000410535 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000461325 : adc dword ptr [rax], eax ; add al, cl ; xchg esi, edi ; jmp qword ptr [rcx]
0x0000000000427e5b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000456551 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x00000000004202bb : adc eax, 0x558abda1 ; ret
0x00000000004407f7 : adc eax, 0x85c70000 ; call 0x18440807
0x0000000000410e55 : adc eax, 0x8b000002 ; loopne 0x410e93 ; push rsi ; ret 0xc750
0x0000000000437201 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x00000000004546a3 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000423899 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041080b : adc eax, ebp ; js 0x4107fc ; ret
0x0000000000410c5f : adc ebp, ecx ; ret 0
0x0000000000404eba : adc edi, edx ; mov ah, -0x47 ; mov word ptr [rdi], es ; push rbp ; ret 0x8b48
0x0000000000461323 : add ah, ah ; adc dword ptr [rax], eax ; add al, cl ; xchg esi, edi ; jmp qword ptr [rcx]
0x0000000000460c23 : add ah, ah ; or al, byte ptr [rax] ; add al, cl ; jne 0x460c2f ; call qword ptr [rdx]
0x0000000000460c03 : add ah, al ; or al, byte ptr [rax] ; add byte ptr [rax], cl ; jne 0x460c0f ; call rdx
0x0000000000408a51 : add al, -0x2d ; mov cx, 0x5a21 ; ret 0x81c1
0x000000000042a806 : add al, -8 ; ret 0x898d
0x000000000042d661 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004318ef : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000044d9b0 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000410038 : add al, 0 ; add cl, ch ; ret 1
0x000000000045968a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000460544 : add al, 4 ; add byte ptr [rax], al ; test al, 0xe ; sti ; call qword ptr [rcx]
0x0000000000460a5f : add al, ah ; cld ; jmp qword ptr [rbx]
0x0000000000460997 : add al, bh ; cld ; call qword ptr [rbx]
0x000000000045fc5b : add al, bh ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000045ffd3 : add al, bl ; jb 0x45ffda ; call qword ptr [rax]
0x0000000000410e56 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x000000000042ea32 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000044434d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042ea31 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000411128 : add al, ch ; ret 0x382
0x000000000045fa2b : add al, cl ; and edx, edi ; call qword ptr [rax]
0x0000000000460c27 : add al, cl ; jne 0x460c2b ; call qword ptr [rdx]
0x0000000000461327 : add al, cl ; xchg esi, edi ; jmp qword ptr [rcx]
0x000000000044f308 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x000000000040997a : add bh, al ; fcom qword ptr [r14] ; ret
0x0000000000430e46 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x000000000044680b : add bh, al ; in al, 0x3e ; ret
0x0000000000411114 : add bh, al ; in al, 0x57 ; ret 0xc750
0x000000000040991b : add bh, al ; in al, 0x67 ; ret 0xf3a7
0x0000000000456068 : add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000408a85 : add bh, al ; shl byte ptr [r9], 0x5a ; ret 0xe9c1
0x000000000045b8e5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042cee2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042da5f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042d93b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042cc69 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000042d8f7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000427984 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000425b1c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000451b6f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004200f9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004546a5 : add bh, al ; xchg eax, r12d ; int 6
0x000000000044bc2a : add bh, byte ptr [rip + 0xf660001] ; pop rsp ; ret 0xf66
0x000000000045e34f : add bl, dh ; ret
0x0000000000405394 : add byte ptr [r8 - 0x77], r9b ; ret 0x2e8
0x0000000000405025 : add byte ptr [r8 - 0x77], r9b ; ret 0x71e8
0x0000000000430e07 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000446483 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000045e022 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000045e284 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000402278 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004374b9 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000460687 : add byte ptr [rax + 0x3b], bl ; sti ; call qword ptr [rdx]
0x0000000000460817 : add byte ptr [rax + 0x3f], bl ; cld ; jmp qword ptr [rbx]
0x00000000004604e7 : add byte ptr [rax + 8], cl ; sti ; call qword ptr [rsi]
0x0000000000460993 : add byte ptr [rax + rcx], dl ; add al, bh ; cld ; call qword ptr [rbx]
0x000000000043fd64 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x000000000045624b : add byte ptr [rax - 0x75], cl ; call 0x4907eba3
0x0000000000405f2d : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040227b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405395 : add byte ptr [rax - 0x77], cl ; ret 0x2e8
0x0000000000405026 : add byte ptr [rax - 0x77], cl ; ret 0x71e8
0x0000000000413635 : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x0000000000446808 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x0000000000460542 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; test al, 0xe ; sti ; call qword ptr [rcx]
0x0000000000409978 : add byte ptr [rax], al ; add bh, al ; fcom qword ptr [r14] ; ret
0x0000000000430e44 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000409919 : add byte ptr [rax], al ; add bh, al ; in al, 0x67 ; ret 0xf3a7
0x0000000000456066 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000045b8e3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042cee0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042da5d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042d939 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042d8f5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000427982 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000425b1a : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000045e34d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004374b7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000043fd62 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000456249 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4907eba5
0x0000000000402279 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000413633 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0x000000000045e34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404831 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004506db : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045e34c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045ba82 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000409ad3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x162dcc45], cl ; ret
0x00000000004076af : add byte ptr [rax], al ; add byte ptr [rbx + 0x212db845], cl ; pop rdx ; ret 0x89c1
0x0000000000455beb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000455d89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000427c70 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2b2de845], cl ; ret 0xe1a5
0x000000000041134e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004464b6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000423302 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004309a3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044cd22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044ce4e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000410e98 : add byte ptr [rax], al ; add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x00000000004302fa : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000431313 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x0000000000445fd2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x0000000000446484 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x00000000004096c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672de045], cl ; ret 0xf3a7
0x0000000000431584 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000426143 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042ebf4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000042e374 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x0000000000448b28 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x0000000000448ae6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044de6e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000409aff : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d233bb], cl ; ret
0x0000000000405d55 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3ed243bb], cl ; ret 0xd02e
0x000000000045a36c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042e6e0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x00000000004451b9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x0000000000456728 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000428c59 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042cb05 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000042a05d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408c77 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000437746 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004089e6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045e023 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000042997d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000045e285 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004278f0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045d3f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043a73f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045c508 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004303ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404833 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d545 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042787a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405155 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408c13 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045ba17 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000460682 : add byte ptr [rax], al ; add eax, 0x3b580000 ; sti ; call qword ptr [rdx]
0x00000000004098f0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422f20 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427e5d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004023d0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004328bf : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000460996 : add byte ptr [rax], al ; clc ; cld ; call qword ptr [rbx]
0x000000000045fc5a : add byte ptr [rax], al ; clc ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000045ffd2 : add byte ptr [rax], al ; fdiv dword ptr [rdx - 1] ; call qword ptr [rax]
0x0000000000460422 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; mov ch, ch ; cli ; call qword ptr [rax]
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x00000000004464d0 : add byte ptr [rax], al ; jmp 0x446842
0x000000000045ba13 : add byte ptr [rax], al ; jmp 0x45ba22
0x000000000045bb75 : add byte ptr [rax], al ; jmp 0x45bb84
0x000000000045bde3 : add byte ptr [rax], al ; jmp 0x45bdf2
0x0000000000460a5e : add byte ptr [rax], al ; loopne 0x460ab1 ; cld ; jmp qword ptr [rbx]
0x0000000000461bf2 : add byte ptr [rax], al ; mov ah, 0x1a ; add byte ptr [rax], al ; ret 0xffff
0x0000000000460426 : add byte ptr [rax], al ; mov ch, ch ; cli ; call qword ptr [rax]
0x0000000000413634 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000045e068 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004071c1 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004492b5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000460afa : add byte ptr [rax], al ; mov esp, 0xa0000009 ; push rbx ; cld ; jmp rsi
0x000000000044e35f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040227a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004604e2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax + 8], cl ; sti ; call qword ptr [rsi]
0x0000000000460d82 : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax], bl ; mov bh, ah ; jmp qword ptr [rcx]
0x00000000004604e6 : add byte ptr [rax], al ; or bl, dil ; call qword ptr [rsi]
0x0000000000460c06 : add byte ptr [rax], al ; or byte ptr [rbp - 4], dh ; call rdx
0x0000000000460686 : add byte ptr [rax], al ; pop rax ; cmp edi, ebx ; call qword ptr [rdx]
0x0000000000402684 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423303 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042f2aa : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004302fb : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000460992 : add byte ptr [rax], al ; push rsp ; or byte ptr [rax], al ; add al, bh ; cld ; call qword ptr [rbx]
0x000000000045e34e : add byte ptr [rax], al ; ret
0x0000000000461bf6 : add byte ptr [rax], al ; ret 0xffff
0x0000000000461cde : add byte ptr [rax], al ; rol dh, -1 ; call qword ptr [rax]
0x0000000000460a5a : add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; loopne 0x460ab5 ; cld ; jmp qword ptr [rbx]
0x000000000045fc4a : add byte ptr [rax], al ; sbb byte ptr [rcx - 4], bl ; jmp rax
0x0000000000460ec6 : add byte ptr [rax], al ; sub ah, dl ; cld ; jmp qword ptr [rdi]
0x0000000000460876 : add byte ptr [rax], al ; test al, 0x40 ; cld ; call rdi
0x0000000000460546 : add byte ptr [rax], al ; test al, 0xe ; sti ; call qword ptr [rcx]
0x0000000000460ec2 : add byte ptr [rax], al ; test byte ptr [rip - 0x2bd80000], cl ; cld ; jmp qword ptr [rdi]
0x0000000000460872 : add byte ptr [rax], al ; xor al, 7 ; add byte ptr [rax], al ; test al, 0x40 ; cld ; call rdi
0x0000000000460977 : add byte ptr [rax], bh ; cld ; call rdx
0x0000000000460023 : add byte ptr [rax], bh ; ret 0xffff
0x0000000000460d87 : add byte ptr [rax], bl ; mov bh, ah ; jmp qword ptr [rcx]
0x000000000045fc4b : add byte ptr [rax], bl ; pop rcx ; cld ; jmp rax
0x0000000000460c07 : add byte ptr [rax], cl ; jne 0x460c0b ; call rdx
0x000000000045fc58 : add byte ptr [rax], dl ; add byte ptr [rax], al ; clc ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000045ba84 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000460683 : add byte ptr [rbp + rax], al ; add byte ptr [rax + 0x3b], bl ; sti ; call qword ptr [rdx]
0x0000000000460ec3 : add byte ptr [rbp + rcx - 0x2bd80000], al ; cld ; jmp qword ptr [rdi]
0x0000000000409ad5 : add byte ptr [rbx + 0x162dcc45], cl ; ret
0x0000000000431428 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x00000000004317de : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x0000000000407666 : add byte ptr [rbx + 0x202db845], cl ; pop rdx ; ret 0x89c1
0x00000000004076b1 : add byte ptr [rbx + 0x212db845], cl ; pop rdx ; ret 0x89c1
0x0000000000455bed : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000455d8b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000427c72 : add byte ptr [rbx + 0x2b2de845], cl ; ret 0xe1a5
0x0000000000411350 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000445fa8 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x00000000004464b8 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000423304 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042f2ab : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044cd24 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044ce50 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000042dfff : add byte ptr [rbx + 0x462dc045], cl ; jns 0x42dfb6 ; ret
0x0000000000431441 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x00000000004317c5 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000410e58 : add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x0000000000410e9a : add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x00000000004302fc : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000431315 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x00000000004318f1 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x0000000000445fd4 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x0000000000446486 : add byte ptr [rbx + 0x602de045], cl ; ret
0x00000000004096c4 : add byte ptr [rbx + 0x672de045], cl ; ret 0xf3a7
0x0000000000431586 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000431680 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x0000000000407698 : add byte ptr [rbx + 0xe2db845], cl ; jnp 0x407628 ; ret 0x8589
0x00000000004076e3 : add byte ptr [rbx + 0xf2db845], cl ; jnp 0x407673 ; ret 0x8589
0x00000000004604e3 : add byte ptr [rbx + rax + 0x8480000], ah ; sti ; call qword ptr [rsi]
0x000000000040ef62 : add byte ptr [rbx - 0x1ed223bb], cl ; jg 0x40ef20 ; ret
0x000000000040eef4 : add byte ptr [rbx - 0x1fd223bb], cl ; jg 0x40eeb2 ; ret
0x0000000000426145 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000406d8c : add byte ptr [rbx - 0x2534b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004260fa : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004072d2 : add byte ptr [rbx - 0x2934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042ebf6 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000042e376 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x0000000000448b2a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x0000000000448ae8 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044de70 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000409b01 : add byte ptr [rbx - 0x3d233bb], cl ; ret
0x00000000004530b5 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044d9b2 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000405d57 : add byte ptr [rbx - 0x3ed243bb], cl ; ret 0xd02e
0x0000000000452ef3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000045a36e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042ea34 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000042e6e2 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000430b49 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x00000000004451bb : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x000000000045672a : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000430b07 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x0000000000445170 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000409b91 : add byte ptr [rbx - 0x6fd233bb], cl ; mov dh, 3 ; ret
0x0000000000409a51 : add byte ptr [rbx - 0x70d233bb], cl ; mov dh, 3 ; ret
0x00000000004071c2 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004492b6 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x000000000045e069 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000428c5b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042cb07 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000042a05f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408c79 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000437749 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004089e8 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000460afb : add byte ptr [rcx + rcx + 0x53a00000], bh ; cld ; jmp rsi
0x0000000000460a5b : add byte ptr [rcx + rcx], bl ; add byte ptr [rax], al ; loopne 0x460ab4 ; cld ; jmp qword ptr [rbx]
0x0000000000456580 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x00000000004303f2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000441af4 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x00000000004279ee : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c98 : add byte ptr [rcx], al ; ret
0x000000000045e025 : add byte ptr [rcx], al ; ret 0xea81
0x000000000042997f : add byte ptr [rcx], bh ; ret 0xf40
0x000000000045e287 : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004278f2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043841b : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000460873 : add byte ptr [rdi + rax], dh ; add byte ptr [rax], al ; test al, 0x40 ; cld ; call rdi
0x000000000045d3f3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043a741 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045c50a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004303bc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404835 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d547 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042787c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405157 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408c15 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000459da5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004431dd : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x000000000044bc2d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000460543 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; test al, 0xe ; sti ; call qword ptr [rcx]
0x0000000000460d83 : add byte ptr [rsp + rcx], al ; add byte ptr [rax], bl ; mov bh, ah ; jmp qword ptr [rcx]
0x0000000000401c97 : add byte ptr es:[rcx], al ; ret
0x000000000042ebf3 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000043f0a8 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x000000000042022c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042634d : add cl, ch ; ret
0x0000000000406942 : add cl, ch ; ret 1
0x000000000043a679 : add cl, ch ; ret 2
0x0000000000456301 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000044a4ee : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000411112 : add dword ptr [rax], eax ; add bh, al ; in al, 0x57 ; ret 0xc750
0x0000000000451f9e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000042f2a9 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044aea4 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004493dd : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000455faf : add dword ptr [rax], ecx ; ret 0x840
0x000000000043a9a1 : add dword ptr [rax], esp ; ret 0xd108
0x00000000004466b4 : add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000040949b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e03f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044f760 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004299a7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042df48 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045d572 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000409e93 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e3fa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c94 : add eax, 0x26069e ; add ebx, esi ; ret
0x0000000000460685 : add eax, 0x3b580000 ; sti ; call qword ptr [rdx]
0x00000000004604e5 : add eax, dword ptr [rax] ; add byte ptr [rax + 8], cl ; sti ; call qword ptr [rsi]
0x000000000045b814 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044516e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000412c52 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401c5b : add eax, edx ; sar rax, 1 ; jne 0x401c6c ; pop rbp ; ret
0x0000000000401c99 : add ebx, esi ; ret
0x0000000000441a0e : add ecx, eax ; mov rsi, rcx ; call 0x42dd17
0x0000000000451e19 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000405491 : add esp, 0x10 ; pop rbp ; ret
0x00000000004279ec : add esp, 0x100 ; pop rbp ; ret
0x00000000004425d4 : add esp, 0x120 ; pop rbp ; ret
0x0000000000443fb9 : add esp, 0x130 ; pop rbp ; ret
0x000000000044e118 : add esp, 0x140 ; pop rbp ; ret
0x0000000000452b73 : add esp, 0x160 ; pop rbp ; ret
0x000000000042fd69 : add esp, 0x170 ; pop rbp ; ret
0x0000000000447b8a : add esp, 0x18 ; pop rbp ; ret
0x0000000000451338 : add esp, 0x180 ; pop rbp ; ret
0x000000000040fc50 : add esp, 0x190 ; pop rbp ; ret
0x0000000000427b5c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000405b73 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000455a0f : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000409963 : add esp, 0x20 ; pop rbp ; ret
0x0000000000459da3 : add esp, 0x200 ; pop rbp ; ret
0x000000000044aa6e : add esp, 0x230 ; pop rbp ; ret
0x000000000040dee8 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000040e044 : add esp, 0x30 ; pop rbp ; ret
0x00000000004324b9 : add esp, 0x310 ; pop rbp ; ret
0x000000000043a801 : add esp, 0x390 ; pop rbp ; ret
0x0000000000408e10 : add esp, 0x3b0 ; pop rbp ; ret
0x0000000000427e60 : add esp, 0x40 ; pop rbp ; ret
0x0000000000459889 : add esp, 0x440 ; pop rbp ; ret
0x00000000004023d3 : add esp, 0x50 ; pop rbp ; ret
0x0000000000405284 : add esp, 0x530 ; pop rbp ; ret
0x000000000042d8dd : add esp, 0x590 ; pop rbp ; ret
0x0000000000428d80 : add esp, 0x60 ; pop rbp ; ret
0x000000000040cb84 : add esp, 0x620 ; pop rbp ; ret
0x0000000000424c12 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402680 : add esp, 0x80 ; pop rbp ; ret
0x000000000044baef : add esp, 0x88 ; pop rbp ; ret
0x000000000041089a : add esp, 0x90 ; pop rbp ; ret
0x0000000000438419 : add esp, 0x900 ; pop rbp ; ret
0x00000000004467fd : add esp, 0x98 ; pop rbp ; ret
0x00000000004259f6 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040e8c8 : add esp, 0xb0 ; pop rbp ; ret
0x00000000004302f7 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000044164b : add esp, 0xbb0 ; pop rbp ; ret
0x0000000000429353 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000413baa : add esp, 0xd0 ; pop rbp ; ret
0x000000000042a650 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000449a8f : add esp, 0xf0 ; pop rbp ; ret
0x00000000004141b3 : add esp, 8 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x0000000000401c5a : add rax, rdx ; sar rax, 1 ; jne 0x401c6d ; pop rbp ; ret
0x0000000000441a0d : add rcx, rax ; mov rsi, rcx ; call 0x42dd18
0x0000000000405490 : add rsp, 0x10 ; pop rbp ; ret
0x00000000004279eb : add rsp, 0x100 ; pop rbp ; ret
0x00000000004425d3 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000443fb8 : add rsp, 0x130 ; pop rbp ; ret
0x000000000044e117 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000452b72 : add rsp, 0x160 ; pop rbp ; ret
0x000000000042fd68 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000447b89 : add rsp, 0x18 ; pop rbp ; ret
0x0000000000451337 : add rsp, 0x180 ; pop rbp ; ret
0x000000000040fc4f : add rsp, 0x190 ; pop rbp ; ret
0x0000000000427b5b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000405b72 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000455a0e : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000409962 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000459da2 : add rsp, 0x200 ; pop rbp ; ret
0x000000000044aa6d : add rsp, 0x230 ; pop rbp ; ret
0x000000000040dee7 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000040e043 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004324b8 : add rsp, 0x310 ; pop rbp ; ret
0x000000000043a800 : add rsp, 0x390 ; pop rbp ; ret
0x0000000000408e0f : add rsp, 0x3b0 ; pop rbp ; ret
0x0000000000427e5f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000459888 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004023d2 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000405283 : add rsp, 0x530 ; pop rbp ; ret
0x000000000042d8dc : add rsp, 0x590 ; pop rbp ; ret
0x0000000000428d7f : add rsp, 0x60 ; pop rbp ; ret
0x000000000040cb83 : add rsp, 0x620 ; pop rbp ; ret
0x0000000000424c11 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040267f : add rsp, 0x80 ; pop rbp ; ret
0x000000000044baee : add rsp, 0x88 ; pop rbp ; ret
0x0000000000410899 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000438418 : add rsp, 0x900 ; pop rbp ; ret
0x00000000004467fc : add rsp, 0x98 ; pop rbp ; ret
0x00000000004259f5 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e8c7 : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004302f6 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000044164a : add rsp, 0xbb0 ; pop rbp ; ret
0x0000000000429352 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000413ba9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042a64f : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000449a8e : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004141b2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x0000000000401c34 : and ah, byte ptr [rsi] ; jmp rax
0x0000000000401c74 : and ah, byte ptr [rsi] ; jmp rdx
0x00000000004328bd : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045e02d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000409e92 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e3f9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004562ff : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004506da : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000445546 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000445736 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409917 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add bh, al ; in al, 0x67 ; ret 0xf3a7
0x00000000004425d6 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042898b : and byte ptr [rsi + 0x58], ah ; jb 0x4289c2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040cb86 : and byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044a4ec : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004562fe : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000410d3f : and eax, 0x662350 ; pop rbp ; ret
0x000000000041f461 : and eax, 0x75b4b9d3 ; ret
0x0000000000430d62 : and eax, 0xdab0b9fa ; ret
0x000000000045c168 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045bc7f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045c22a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045fa2d : and edx, edi ; call qword ptr [rax]
0x0000000000410d41 : and esp, dword ptr [rsi] ; pop rbp ; ret
0x000000000044a4eb : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000441d25 : call 0x12441d2b
0x00000000004407fc : call 0x18440802
0x0000000000441d97 : call 0x22441d9d
0x0000000000441bce : call 0x28441bd4
0x0000000000431fe5 : call 0x401768
0x0000000000425686 : call 0x4018c2
0x000000000040263c : call 0x4018d8
0x000000000040846b : call 0x408fd6
0x0000000000428d85 : call 0x428e49
0x0000000000441a13 : call 0x42dd12
0x0000000000437e33 : call 0x444062
0x0000000000437e32 : call 0x444063
0x0000000000446807 : call 0x44c815
0x000000000045624f : call 0x4907eb9f
0x000000000045624e : call 0x4907eba0
0x000000000045629d : call 0x4907ebed
0x000000000045629c : call 0x4907ebee
0x000000000044a9a2 : call 0xffffffff8a24ff3b
0x0000000000427c75 : call 0xffffffffa604a7aa
0x0000000000427c74 : call 0xffffffffa604a7ab
0x0000000000429ccd : call 0xffffffffaca35f01
0x0000000000429ccc : call 0xffffffffaca35f02
0x0000000000441b1e : call 0xffffffffe3441b24
0x0000000000441da6 : call 0xffffffffe5441dac
0x0000000000422f19 : call 0xffffffffe904b869
0x0000000000422f18 : call 0xffffffffe904b86a
0x0000000000404e3b : call 0xfffffffff26983b9
0x000000000045e329 : call qword ptr [r12 + rbx*8]
0x000000000040bd26 : call qword ptr [rax]
0x00000000004246de : call qword ptr [rbx]
0x0000000000441d28 : call qword ptr [rcx]
0x00000000004223a4 : call qword ptr [rdi]
0x000000000041e38b : call qword ptr [rdx]
0x000000000040c138 : call qword ptr [rsi]
0x000000000045e32a : call qword ptr [rsp + rbx*8]
0x000000000040beab : call qword ptr [rsp + rsi*2 - 0x3d9a8047]
0x0000000000401cbd : call rax
0x000000000040cbdb : call rbx
0x0000000000403cab : call rcx
0x0000000000421fe4 : call rdi
0x0000000000410865 : call rdx
0x000000000043a0cf : call rsi
0x00000000004112fb : call rsp
0x000000000042a132 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044f00b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000459887 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004280e7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044c5bb : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000448699 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e8c6 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000429351 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000460998 : clc ; cld ; call qword ptr [rbx]
0x0000000000401c5f : clc ; jne 0x401c68 ; pop rbp ; ret
0x000000000045c169 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045bf33 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000449b07 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000455ace : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f140 : clc ; mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044abeb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044ac0b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045b981 : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000405f31 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e427 : clc ; pop rbp ; ret
0x0000000000425caf : clc ; pop rbx ; pop rbp ; ret
0x000000000045fc5c : clc ; pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004159ed : clc ; ret 0x77a8
0x000000000042a807 : clc ; ret 0x898d
0x000000000042c6b7 : clc ; ret 0xb28d
0x0000000000441a14 : clc ; ret 0xfffe
0x000000000045bc80 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000447b88 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x000000000042a64e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000449a8d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000046099a : cld ; call qword ptr [rbx]
0x0000000000460c2a : cld ; call qword ptr [rdx]
0x000000000046087a : cld ; call rdi
0x000000000046097a : cld ; call rdx
0x000000000045fc56 : cld ; inc dword ptr [rax] ; adc byte ptr [rax], al ; add al, bh ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000045fc46 : cld ; inc eax ; sldt word ptr [rax] ; sbb byte ptr [rcx - 4], bl ; jmp rax
0x000000000041137f : cld ; jmp 0x4113ec
0x000000000041137e : cld ; jmp 0x4113ed
0x000000000045fc5e : cld ; jmp qword ptr [rax]
0x000000000046081a : cld ; jmp qword ptr [rbx]
0x0000000000460d8a : cld ; jmp qword ptr [rcx]
0x0000000000460eca : cld ; jmp qword ptr [rdi]
0x000000000045fc4e : cld ; jmp rax
0x0000000000460b02 : cld ; jmp rsi
0x00000000004071c5 : cld ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409b06 : cld ; ret
0x00000000004530ba : cld ; stc ; in al, dx ; ret 0x8589
0x000000000045380b : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000437745 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045fa2e : cli ; call qword ptr [rax]
0x0000000000430b4e : cli ; mov cl, 0x37 ; ret 0x4589
0x0000000000430dda : cli ; mov cl, 0x37 ; ret 0x94b9
0x0000000000430e4a : cli ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000428990 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004451c0 : cli ; ret
0x000000000045e02c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000436666 : cmc ; jmp 0x438822
0x000000000040a0ab : cmc ; ret
0x00000000004276fb : cmc ; ret 0x4f0b
0x0000000000410d3e : cmp al, 0x25 ; push rax ; and esp, dword ptr [rsi] ; pop rbp ; ret
0x0000000000437da7 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004348e8 : cmp byte ptr [rbx], dl ; ret
0x0000000000427891 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000044e142 : cmp dword ptr [rax - 0x75], ecx ; jne 0x44e124 ; call rax
0x0000000000432c16 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004352f8 : cmp dword ptr [rbx], edx ; ret
0x000000000041260b : cmp dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x000000000040d8de : cmp dword ptr [rsi - 0x47], eax ; ret
0x0000000000428ef2 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401c1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c30 ; pop rbp ; ret
0x000000000044bc2b : cmp eax, 0xf660001 ; pop rsp ; ret 0xf66
0x000000000042969f : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000432215 : cmp ecx, ebp ; ret 3
0x0000000000460689 : cmp edi, ebx ; call qword ptr [rdx]
0x00000000004202b7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000042dfb6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000040257a : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub byte ptr [rdi + rdx*8 - 0x47], ah ; ret
0x0000000000430d60 : cwde ; and eax, 0xdab0b9fa ; ret
0x0000000000437e2f : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x444066
0x0000000000437e2e : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x444067
0x0000000000455a67 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000407134 : dec dword ptr [rax - 0x26c6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000041f7bb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041f12e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000040e423 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000041f933 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000410574 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004593e6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040713a : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040c53f : dec dword ptr [rax - 0x77] ; ret 0x8844
0x0000000000406d92 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043f16f : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x000000000043fffc : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x0000000000405239 : dec dword ptr [rbx - 0x5036b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000040c89d : dec dword ptr [rbx - 0x5cf4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ccbf : dec dword ptr [rbx - 0x5f74b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000438091 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000043f7f3 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004292a5 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000044114e : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004276f6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004292ab : dec dword ptr [rdi] ; ret 0x4589
0x000000000040523f : dec dword ptr [rdi] ; ret 0x8589
0x000000000043173d : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x000000000044bf11 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000450d8b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000431b3e : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000446d60 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000412c4e : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000408006 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff7], bl ; ret 1
0x0000000000446304 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004156ca : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042ea8d : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000410034 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000444f3f : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000044aea0 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000442113 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000454185 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000449f2f : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045b60e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000459213 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040be04 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000447be0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000447bdf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000044c320 : enter -0x74b8, 0x31 ; call rax
0x000000000042dcfe : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000458e69 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045baa5 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000042d660 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004139c9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040faa5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000444b19 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000444ad7 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000444af8 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045b5f0 : fbld dword ptr [rcx] ; ret 0x941
0x000000000040997c : fcom qword ptr [r14] ; ret
0x000000000040997d : fcom qword ptr [rsi] ; ret
0x000000000045bd5b : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000043343c : fcomp st(3) ; ret
0x000000000045ffd4 : fdiv dword ptr [rdx - 1] ; call qword ptr [rax]
0x000000000043feaa : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000450d8e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004303c1 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045b5cf : fild word ptr [rcx - 0x77] ; ret
0x0000000000437dff : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000437dfe : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045c22b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000042fe05 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045c5e8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000044fc6e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045a057 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000044fc6f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044c31c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000044d05d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044b949 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000045a058 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000045e32c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000435cb4 : fstpnce st(3), st(0) ; ret
0x0000000000427be3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004324b7 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x0000000000408e0e : hlt ; add rsp, 0x3b0 ; pop rbp ; ret
0x0000000000444c49 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000045a5bc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004141b1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000425cab : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000401c30 : hlt ; pop rbp ; mov edi, 0x6622e0 ; jmp rax
0x000000000043cb68 : hlt ; ret
0x0000000000428abb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000438095 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000409d92 : imul eax, dword ptr [rcx], 0x90b80000 ; mov dh, 3 ; ret
0x00000000004291f0 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x00000000004466b2 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x0000000000430e49 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000445544 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000445734 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044680e : in al, 0x3e ; ret
0x000000000043a7ff : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x0000000000448a51 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000411117 : in al, 0x57 ; ret 0xc750
0x000000000040991e : in al, 0x67 ; ret 0xf3a7
0x0000000000460424 : in al, 2 ; add byte ptr [rax], al ; mov ch, ch ; cli ; call qword ptr [rax]
0x0000000000456cc8 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040cb82 : in al, dx ; add rsp, 0x620 ; pop rbp ; ret
0x0000000000429d8c : in al, dx ; jmp 0x429e09
0x0000000000429d8b : in al, dx ; jmp 0x429e0a
0x0000000000455f31 : in al, dx ; jmp 0x4560fd
0x0000000000455f30 : in al, dx ; jmp 0x4560fe
0x000000000040eeb6 : in al, dx ; jo 0x40ee88 ; in al, dx ; loope 0x40ef44 ; scasb al, byte ptr [rdi] ; ret
0x000000000045bc15 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040eeba : in al, dx ; loope 0x40ef40 ; scasb al, byte ptr [rdi] ; ret
0x000000000040eeb9 : in al, dx ; loope 0x40ef41 ; scasb al, byte ptr [rdi] ; ret
0x000000000040227e : in al, dx ; pop rbp ; ret
0x0000000000452efa : in al, dx ; ret 0x8589
0x0000000000455f14 : in al, dx ; ret 0xe8ff
0x000000000045380d : in al, dx ; ret 0xff3
0x000000000041080a : in eax, dx ; adc eax, ebp ; js 0x4107fd ; ret
0x0000000000460429 : in eax, dx ; cli ; call qword ptr [rax]
0x000000000045fc57 : inc dword ptr [rax] ; adc byte ptr [rax], al ; add al, bh ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000042cb03 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000043f779 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040beb8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040bf36 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f05d : inc dword ptr [rbp + 0x21] ; ret
0x0000000000405153 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004042cc : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004303e8 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000043a675 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x000000000045fc47 : inc eax ; sldt word ptr [rax] ; sbb byte ptr [rcx - 4], bl ; jmp rax
0x000000000043557c : insb byte ptr [rdi], dx ; ret
0x00000000004253c7 : int 0x5b
0x000000000042f17b : int 0x73
0x0000000000434141 : int 0x80
0x0000000000453f24 : int 6
0x000000000043fb4c : int 7
0x0000000000401c23 : ja 0x401c2a ; pop rbp ; ret
0x0000000000455ad1 : ja 0x455b1e ; pop rbp ; ret
0x00000000004329ec : jae 0x4329c2 ; ret 0x89e0
0x0000000000440248 : jae 0x44027e ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000440254 : jae 0x44028b ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000042898e : jb 0x4289bf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045ffd5 : jb 0x45ffd8 ; call qword ptr [rax]
0x0000000000401c2f : je 0x401c2d ; pop rbp ; mov edi, 0x6622e0 ; jmp rax
0x000000000040bead : je 0x40be6c ; jg 0x40bf1a ; ret 0x812b
0x0000000000432a2e : je 0x432a04 ; ret 0x89e0
0x0000000000432af9 : je 0x432acf ; ret 0xb9e0
0x0000000000441a0c : je 0x441a5f ; add ecx, eax ; mov rsi, rcx ; call 0x42dd19
0x000000000040b61a : jg 0x40b683 ; ret 0x892b
0x000000000040beaf : jg 0x40bf18 ; ret 0x812b
0x000000000040eebc : jg 0x40ee6e ; ret
0x000000000040eefa : jg 0x40eeac ; ret
0x000000000040ef68 : jg 0x40ef1a ; ret
0x000000000043f1a1 : jg 0x43f130 ; push rbp ; ret
0x000000000041e856 : jge 0x41e7db ; ret 0xffd5
0x000000000041f320 : jge 0x41f300 ; shr cl, cl ; ret 0x3b
0x0000000000425684 : jge 0x425662 ; call 0x4018c4
0x000000000044abea : jge 0x44abeb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044ac0a : jge 0x44ac0b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044c31b : jge 0x44c2fe ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000455acd : jge 0x455ace ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000405023 : jle 0x405016 ; add byte ptr [r8 - 0x77], r9b ; ret 0x71e8
0x000000000040ab9a : jle 0x40ac03 ; ret 0x892b
0x0000000000452c58 : jle 0x452bec ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000040194b : jmp 0x401747
0x000000000040493c : jmp 0x40541b
0x000000000040821e : jmp 0x408fcc
0x000000000040eca8 : jmp 0x40eea6
0x0000000000411380 : jmp 0x4113eb
0x000000000041fa70 : jmp 0x422ef0
0x000000000041d974 : jmp 0x422ef1
0x000000000041ed41 : jmp 0x422ef2
0x0000000000426b1b : jmp 0x427587
0x0000000000426a58 : jmp 0x427589
0x0000000000428d33 : jmp 0x428d98
0x0000000000429d8d : jmp 0x429e08
0x000000000042cc7f : jmp 0x42db42
0x000000000043225a : jmp 0x4325e4
0x0000000000436778 : jmp 0x436737
0x00000000004371c7 : jmp 0x438820
0x0000000000436667 : jmp 0x438821
0x0000000000436881 : jmp 0x438822
0x0000000000438e87 : jmp 0x438ed4
0x000000000043a02a : jmp 0x43a949
0x000000000043ecb5 : jmp 0x441db4
0x000000000044593d : jmp 0x445b93
0x00000000004464d2 : jmp 0x446840
0x000000000044658b : jmp 0x446841
0x000000000044b924 : jmp 0x44bb80
0x000000000044c1b9 : jmp 0x44c345
0x000000000044e04a : jmp 0x44e18e
0x000000000044e049 : jmp 0x44e18f
0x000000000044e049 : jmp 0x44e190
0x0000000000455f32 : jmp 0x4560fc
0x0000000000459726 : jmp 0x459a08
0x000000000045ba15 : jmp 0x45ba20
0x000000000045bb77 : jmp 0x45bb82
0x000000000045bde5 : jmp 0x45bdf0
0x000000000045358f : jmp 0x4907bedf
0x00000000004536db : jmp 0x4907c02b
0x00000000004537ad : jmp 0x4907c0fd
0x000000000045382e : jmp 0x4907c17e
0x00000000004557d4 : jmp 0x4907e124
0x000000000045584f : jmp 0x4907e19f
0x00000000004276fa : jmp 0x4f4e39f6
0x000000000045b3bf : jmp 0xffffffffc409ea86
0x0000000000422845 : jmp qword ptr [rax]
0x000000000046081b : jmp qword ptr [rbx]
0x000000000040e7cf : jmp qword ptr [rcx]
0x00000000004204f7 : jmp qword ptr [rdi]
0x000000000042798a : jmp qword ptr [rdx]
0x0000000000401c37 : jmp rax
0x000000000041ee48 : jmp rbx
0x00000000004053a3 : jmp rcx
0x000000000040c49c : jmp rdi
0x0000000000401c77 : jmp rdx
0x0000000000460b03 : jmp rsi
0x00000000004108f0 : jmp rsp
0x0000000000401c60 : jne 0x401c67 ; pop rbp ; ret
0x0000000000425680 : jne 0x42565e ; mov rdi, qword ptr [rbp - 0x28] ; call 0x4018c8
0x0000000000445bd9 : jne 0x445bbc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000447be1 : jne 0x447bd9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004481b2 : jne 0x4481aa ; mov rax, rdx ; pop rbp ; ret
0x000000000044c379 : jne 0x44c344 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000044e145 : jne 0x44e121 ; call rax
0x0000000000460c09 : jne 0x460c09 ; call rdx
0x0000000000460c29 : jne 0x460c29 ; call qword ptr [rdx]
0x000000000040769e : jnp 0x407622 ; ret 0x8589
0x00000000004076e9 : jnp 0x40766d ; ret 0x8589
0x0000000000408200 : jnp 0x408184 ; ret 0x71b9
0x000000000042dfb5 : jns 0x42df60 ; ret
0x000000000042dfb4 : jns 0x42df61 ; ret
0x000000000042e005 : jns 0x42dfb0 ; ret
0x000000000042e004 : jns 0x42dfb1 ; ret
0x00000000004374d8 : jns 0x437495 ; ret 0xcaed
0x0000000000408469 : jo 0x4084a3 ; call 0x408fd8
0x000000000040eeb7 : jo 0x40ee87 ; in al, dx ; loope 0x40ef43 ; scasb al, byte ptr [rdi] ; ret
0x000000000041876e : jo 0x41877a ; ret
0x000000000041a3de : jo 0x41a3ea ; ret
0x000000000041d92d : jo 0x41d939 ; ret
0x0000000000424c14 : jo 0x424c75 ; ret
0x000000000042daaf : jo 0x42da7e ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042daae : jo 0x42da7f ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042df4f : jo 0x42dfb0 ; ret
0x000000000042fd6b : jo 0x42fd73 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004328c4 : jo 0x432925 ; ret
0x0000000000437e31 : jo 0x437e7b ; call 0x444064
0x0000000000460030 : jo 0x460056 ; add byte ptr [rax], al ; ret
0x000000000043a3c5 : jrcxz 0x43a36f ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000041080d : js 0x4107fa ; ret
0x0000000000438e86 : lahf ; jmp 0x438ed5
0x000000000041f31e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000042041e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000411b86 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a2d4 : lea esi, dword ptr [rdx] ; ret
0x0000000000415065 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000424f09 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425cad : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000415064 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425cac : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000448b2f : leave ; ret 0x86f8
0x000000000042dfb2 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000041dc7e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000412c51 : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042977e : loop 0x4297ab ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042977d : loop 0x4297ac ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044acf0 : loop 0x44ace5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000045bd12 : loop 0x45bcc5 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040402b : loope 0x403fe1 ; ret 0x8947
0x0000000000404f78 : loope 0x404f2e ; ret 0xb947
0x00000000004053a4 : loope 0x40535a ; ret 0x4847
0x000000000040949a : loope 0x4094a6 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eebb : loope 0x40ef3f ; scasb al, byte ptr [rdi] ; ret
0x000000000040ef67 : loope 0x40efeb ; scasb al, byte ptr [rdi] ; ret
0x0000000000420c85 : loope 0x420c53 ; jmp 0x422ef3
0x0000000000440252 : loope 0x440226 ; jae 0x44028d ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000044577b : loope 0x44576c ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004477cc : loope 0x4477d8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044ba2e : loope 0x44b9e9 ; xchg eax, ebp ; jmp 0x44bb83
0x0000000000402a13 : loopne 0x4029c9 ; ret 0x8947
0x0000000000409685 : loopne 0x4096b6 ; ret
0x0000000000409684 : loopne 0x4096b7 ; ret
0x00000000004096c7 : loopne 0x4096f9 ; ret 0xf3a7
0x00000000004096c6 : loopne 0x4096fa ; ret 0xf3a7
0x000000000040eef9 : loopne 0x40ef7d ; scasb al, byte ptr [rdi] ; ret
0x0000000000410e5b : loopne 0x410e8d ; push rsi ; ret 0xc750
0x0000000000410e5a : loopne 0x410e8e ; push rsi ; ret 0xc750
0x0000000000410e9d : loopne 0x410ecf ; push rdi ; ret 0xc750
0x0000000000410e9c : loopne 0x410ed0 ; push rdi ; ret 0xc750
0x0000000000415063 : loopne 0x4150b6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042460d : loopne 0x424673 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004259f4 : loopne 0x425a47 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004283f3 : loopne 0x4283fc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428d7e : loopne 0x428dce ; add esp, 0x60 ; pop rbp ; ret
0x0000000000428d7d : loopne 0x428dcf ; add esp, 0x60 ; pop rbp ; ret
0x000000000042a652 : loopne 0x42a659 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004309a2 : loopne 0x4309ac ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000440246 : loopne 0x440219 ; jae 0x440280 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000445fd7 : loopne 0x446009 ; pop rdi ; ret
0x0000000000445fd6 : loopne 0x44600a ; pop rdi ; ret
0x00000000004464bb : loopne 0x4464ed ; ret
0x00000000004464ba : loopne 0x4464ee ; ret
0x000000000044d11a : loopne 0x44d121 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045076e : loopne 0x4507bf ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045076d : loopne 0x4507c0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000455a0d : loopne 0x455a60 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000459ffc : loopne 0x459f90 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000459ffb : loopne 0x459f91 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045a5c0 : loopne 0x45a5c7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e06c : loopne 0x45e0bb ; mov esp, ebp ; pop rbp ; ret
0x000000000045e06b : loopne 0x45e0bc ; mov esp, ebp ; pop rbp ; ret
0x000000000045e2bc : loopne 0x45e30b ; mov esp, ebp ; pop rbp ; ret
0x000000000045e2bb : loopne 0x45e30c ; mov esp, ebp ; pop rbp ; ret
0x0000000000460a60 : loopne 0x460aaf ; cld ; jmp qword ptr [rbx]
0x0000000000410809 : mov ah, -0x13 ; adc eax, ebp ; js 0x4107fe ; ret
0x000000000045bd11 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000404ebc : mov ah, -0x47 ; mov word ptr [rdi], es ; push rbp ; ret 0x8b48
0x000000000041e84d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e927 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043f0dc : mov ah, -0x76 ; ret 0x124
0x0000000000461bf4 : mov ah, 0x1a ; add byte ptr [rax], al ; ret 0xffff
0x0000000000412716 : mov ah, 0x2d ; ret
0x0000000000429f7a : mov ah, 0x2d ; ret 0xe41a
0x000000000044bc8e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041c8d5 : mov ah, 0x75 ; ret
0x0000000000430c49 : mov al, -0x26 ; ret
0x00000000004253e3 : mov al, -0x47 ; ret
0x000000000044ba2f : mov al, -0x6b ; jmp 0x44bb82
0x0000000000458eef : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042d402 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ce36 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e8ca : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043898a : mov al, 0x2d ; ret
0x0000000000438c46 : mov al, 0x2d ; ret 0x24cc
0x0000000000454e10 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000044164d : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408e12 : mov al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045c16b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000045c8dd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045c5aa : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042977c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000448358 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045c80d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e3f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045c22c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045c16a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045bf34 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000045bf39 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000430498 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000460d89 : mov bh, ah ; jmp qword ptr [rcx]
0x000000000042da05 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x0000000000447368 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437da5 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000416275 : mov bl, 0x75 ; ret
0x000000000044baf1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e1e4 : mov byte ptr [rbx], dl ; ret 0x8901
0x000000000040e060 : mov byte ptr [rbx], dl ; ret 0x8b01
0x000000000040548c : mov byte ptr [rdx + 0x1a], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c93 : mov byte ptr [rip + 0x26069e], 1 ; ret
0x000000000041e0cf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000460428 : mov ch, ch ; cli ; call qword ptr [rax]
0x0000000000430b0d : mov cl, 0x37 ; ret 0x4589
0x0000000000430ddb : mov cl, 0x37 ; ret 0x94b9
0x0000000000430e4b : mov cl, 0x37 ; ret 0xd3e9
0x000000000043cb2f : mov cl, 0x7d ; ret
0x0000000000408a53 : mov cx, 0x5a21 ; ret 0x81c1
0x0000000000456304 : mov dh, -0x39 ; pop rbp ; ret
0x000000000044a4f1 : mov dh, -0x3a ; pop rbp ; ret
0x00000000004435f8 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040949d : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e041 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044f762 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004299a9 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042df4a : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045d574 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000409e95 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e3fc : mov dh, -0x40 ; pop rbp ; ret
0x000000000045c22f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000439ec2 : mov dh, -0x47 ; ret 0x9214
0x0000000000409a57 : mov dh, 3 ; ret
0x000000000045e02a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000045d2a1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000410d3d : mov dword ptr [0x662350], edi ; pop rbp ; ret
0x0000000000456581 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004147e9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004143bf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044dfc5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000450609 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x0000000000429d8a : mov dword ptr [rbp - 0x14], eax ; jmp 0x429e0b
0x0000000000455f2f : mov dword ptr [rbp - 0x14], eax ; jmp 0x4560ff
0x000000000040995f : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004543dd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000454610 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000042567f : mov dword ptr [rbp - 0x2c], esi ; mov rdi, qword ptr [rbp - 0x28] ; call 0x4018c9
0x000000000044b921 : mov dword ptr [rbp - 0x34], eax ; jmp 0x44bb83
0x000000000044c1b6 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x44c348
0x000000000044c241 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x44c348
0x000000000040821b : mov dword ptr [rbp - 0x40], eax ; jmp 0x408fcf
0x000000000044bc8c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426b18 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42758a
0x0000000000427be1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044c221 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000414ac6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000449b08 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000455ad0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041466d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004302f9 : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000040769b : mov eax, 0x807b0e2d ; ret 0x8589
0x00000000004076e6 : mov eax, 0x807b0f2d ; ret 0x8589
0x000000000045477b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042cc80 : mov eax, 0xb800000e ; ret 0x4dbf
0x0000000000413636 : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000045657f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ee19 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428bfb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e116 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000456cc6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428dce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041218e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429c05 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004147ec : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000428d7c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000459ffa : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045e06a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000445bdf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040ee16 : mov eax, dword ptr [rbp - 0x30] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041466f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044c37f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000453ba7 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437e2d : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x444068
0x00000000004141af : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000425ca9 : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000447b86 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004071c3 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a130 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f2f : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e425 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044abed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044ac0d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040320f : mov eax, dword ptr [rdi] ; push rbp ; ret 0x8589
0x000000000041466e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000045bf36 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000045b983 : mov eax, eax ; pop rbp ; ret
0x000000000045bd5a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000044f0e1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000447be4 : mov eax, edx ; pop rbp ; ret
0x000000000045bc7d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045bf35 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000411111 : mov ebp, 0xc7000001 ; in al, 0x57 ; ret 0xc750
0x0000000000421088 : mov ebp, 0xe19c53ba ; ret
0x0000000000401cbb : mov ebp, esp ; call rax
0x0000000000401c21 : mov ebp, esp ; ja 0x401c2c ; pop rbp ; ret
0x0000000000413652 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000042d27f : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004143bc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000045051b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045076c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000451086 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044c31e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045477d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045051f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401cb5 : mov edi, 0x661e20 ; mov rbp, rsp ; call rax
0x0000000000401c32 : mov edi, 0x6622e0 ; jmp rax
0x0000000000401c72 : mov edi, 0x6622e0 ; jmp rdx
0x0000000000455f33 : mov edi, 0xb8000001 ; ret
0x000000000041d927 : mov edi, 0xb8000055 ; wait ; jo 0x41d93f ; ret
0x0000000000425683 : mov edi, dword ptr [rbp - 0x28] ; call 0x4018c5
0x0000000000455acc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044abe9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044ac09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000450522 : mov edi, dword ptr [rcx] ; call rax
0x000000000044e141 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000045e327 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045e326 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044a2d1 : mov edx, 0x328dfe07 ; ret
0x000000000045969e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041e0eb : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000410862 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x000000000041ef62 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000459687 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000408468 : mov esi, dword ptr [rax + 0x30] ; call 0x408fd9
0x0000000000437e30 : mov esi, dword ptr [rax + 0x44] ; call 0x444065
0x000000000044e144 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000044c322 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c70 : mov esi, eax ; mov edi, 0x6622e0 ; jmp rdx
0x0000000000445bdc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044c37c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000441a11 : mov esi, ecx ; call 0x42dd14
0x0000000000460afc : mov esp, 0xa0000009 ; push rbx ; cld ; jmp rsi
0x000000000040227d : mov esp, ebp ; pop rbp ; ret
0x0000000000410d3c : mov qword ptr [0x662350], rdi ; pop rbp ; ret
0x000000000040995e : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414ac5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000455acf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410808 : mov r12b, -0x13 ; adc eax, ebp ; js 0x4107ff ; ret
0x0000000000412715 : mov r12b, 0x2d ; ret
0x0000000000429f79 : mov r12b, 0x2d ; ret 0xe41a
0x000000000044bc8d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042da04 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x0000000000438989 : mov r8b, 0x2d ; ret
0x0000000000438c45 : mov r8b, 0x2d ; ret 0x24cc
0x000000000040769a : mov r8d, 0x807b0e2d ; ret 0x8589
0x00000000004076e5 : mov r8d, 0x807b0f2d ; ret 0x8589
0x000000000040f141 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428bfa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e115 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428dcd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041218d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044e361 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000428d7b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000445bde : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044c37e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000437e2c : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x444069
0x000000000042a12f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f2e : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e424 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044abec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044ac0c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000045bd59 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045b982 : mov rax, r8 ; pop rbp ; ret
0x000000000044f0e0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000447be3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cba : mov rbp, rsp ; call rax
0x0000000000401c20 : mov rbp, rsp ; ja 0x401c2d ; pop rbp ; ret
0x0000000000413651 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000451085 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044c31d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045477c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045051e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000425682 : mov rdi, qword ptr [rbp - 0x28] ; call 0x4018c6
0x0000000000455acb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044abe8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044ac08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000450521 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044e140 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000410861 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x000000000044e143 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044c321 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c6f : mov rsi, rax ; mov edi, 0x6622e0 ; jmp rdx
0x0000000000445bdb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044c37b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000441a10 : mov rsi, rcx ; call 0x42dd15
0x000000000040227c : mov rsp, rbp ; pop rbp ; ret
0x0000000000428991 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000404ea2 : mov word ptr [rdi], es ; push rbp ; ret 0x1b2
0x000000000040382f : mov word ptr [rdi], es ; push rbp ; ret 0x8589
0x0000000000404ebe : mov word ptr [rdi], es ; push rbp ; ret 0x8b48
0x000000000045b261 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000040c155 : movabs al, byte ptr [0xfffe9485c7fffffe] ; call qword ptr [rsi]
0x0000000000419bc8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000043f4cd : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004604e4 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax + 8], cl ; sti ; call qword ptr [rsi]
0x000000000045380a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x000000000043f4ce : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041ce15 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000446d63 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x000000000042fe03 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000040e040 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044f761 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004299a8 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042df49 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045d573 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000409e94 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e3fb : movzx eax, al ; pop rbp ; ret
0x000000000045c22e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045bf38 : movzx eax, ax ; pop rbp ; ret
0x0000000000456303 : movzx eax, bh ; pop rbp ; ret
0x00000000004435f7 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040949c : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a4f0 : movzx eax, dh ; pop rbp ; ret
0x0000000000456302 : movzx eax, dil ; pop rbp ; ret
0x000000000044a4ef : movzx eax, sil ; pop rbp ; ret
0x0000000000459498 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409b96 : nop ; mov dh, 3 ; ret
0x00000000004160b5 : nop ; ret
0x00000000004244c2 : nop ; ret 0x148
0x00000000004244d6 : nop ; ret 0x2948
0x000000000045e348 : nop dword ptr [rax + rax] ; ret
0x0000000000460d85 : or al, 0 ; add byte ptr [rax], bl ; mov bh, ah ; jmp qword ptr [rcx]
0x0000000000431741 : or al, 0 ; add cl, ch ; ret
0x000000000041e84a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e924 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000460c25 : or al, byte ptr [rax] ; add al, cl ; jne 0x460c2d ; call qword ptr [rdx]
0x0000000000460c05 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; jne 0x460c0d ; call rdx
0x0000000000446963 : or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000455f11 : or bh, al ; in al, dx ; ret 0xe8ff
0x000000000045b925 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004604e9 : or bl, bh ; call qword ptr [rsi]
0x00000000004604e8 : or bl, dil ; call qword ptr [rsi]
0x000000000041260d : or byte ptr [r15], 0x8f ; ret 6
0x00000000004143c0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000460995 : or byte ptr [rax], al ; add al, bh ; cld ; call qword ptr [rbx]
0x000000000042d280 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000460975 : or byte ptr [rax], al ; add byte ptr [rax], bh ; cld ; call rdx
0x00000000004260f8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004303f0 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000460c08 : or byte ptr [rbp - 4], dh ; call rdx
0x000000000041260e : or byte ptr [rdi], 0x8f ; ret 6
0x000000000042ccb8 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000045b924 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000041f936 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000414ac4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000460a5d : or dword ptr [rax], eax ; add al, ah ; cld ; jmp qword ptr [rbx]
0x000000000040800a : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000460ec5 : or eax, 0xd4280000 ; cld ; jmp qword ptr [rdi]
0x00000000004081fb : or eax, 0xfb80000 ; jnp 0x408189 ; ret 0x71b9
0x0000000000407664 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x202db845], cl ; pop rdx ; ret 0x89c1
0x000000000043049a : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045b980 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000045bc83 : or eax, esi ; pop rbp ; ret
0x000000000045bd57 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000041466b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045bd56 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045b97f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000044a4ed : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x0000000000456300 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000042022b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045c5ac : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000451c99 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000451e18 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045c8df : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004253e2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000044577e : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000459689 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044bc19 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000421315 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415f66 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000421360 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000427981 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000437dfd : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045968c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042898c : pop ax ; jb 0x4289c1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044577f : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004221c9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045e33c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042460f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004221cb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045e33e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004221cd : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045e340 : pop r14 ; pop r15 ; ret
0x0000000000415069 : pop r14 ; pop rbp ; ret
0x00000000004221cf : pop r15 ; pop rbp ; ret
0x000000000045e342 : pop r15 ; ret
0x0000000000443af3 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000460688 : pop rax ; cmp edi, ebx ; call qword ptr [rdx]
0x000000000042898d : pop rax ; jb 0x4289c0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401c92 : pop rbp ; mov byte ptr [rip + 0x26069e], 1 ; ret
0x0000000000401c31 : pop rbp ; mov edi, 0x6622e0 ; jmp rax
0x0000000000401c6e : pop rbp ; mov rsi, rax ; mov edi, 0x6622e0 ; jmp rdx
0x000000000045e33b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004221cc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045e33f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041e0d2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000041a3a5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041e0ee : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401c25 : pop rbp ; ret
0x000000000042460e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423305 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415068 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425cb0 : pop rbx ; pop rbp ; ret
0x0000000000426100 : pop rbx ; ret
0x000000000045fc4d : pop rcx ; cld ; jmp rax
0x000000000041e0d3 : pop rcx ; ret 0x1b2
0x00000000004187a6 : pop rcx ; ret 0x8589
0x000000000041e0ef : pop rcx ; ret 0x8b48
0x0000000000420420 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004291ef : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x00000000004221d0 : pop rdi ; pop rbp ; ret
0x00000000004318f6 : pop rdi ; ret
0x000000000045fc5d : pop rdx ; cld ; jmp qword ptr [rax]
0x0000000000408a56 : pop rdx ; ret 0x81c1
0x000000000040766c : pop rdx ; ret 0x89c1
0x0000000000408a8a : pop rdx ; ret 0xe9c1
0x00000000004221ce : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045e341 : pop rsi ; pop r15 ; ret
0x000000000041506a : pop rsi ; pop rbp ; ret
0x000000000043131a : pop rsi ; ret
0x00000000004221ca : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045e33d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000424610 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004187a5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000044bc30 : pop rsp ; ret 0xf66
0x000000000044516d : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000045d3f5 : popfq ; ret 0xd284
0x0000000000404c48 : push -0x16000001 ; ret
0x0000000000404d49 : push -0x16000001 ; ret 6
0x0000000000451be5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041e0d0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004202ba : push -0x75425eeb ; push rbp ; ret
0x000000000041ce18 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000046002f : push qword ptr [rax + 0x1f] ; add byte ptr [rax], al ; ret
0x0000000000410d40 : push rax ; and esp, dword ptr [rsi] ; pop rbp ; ret
0x00000000004023d5 : push rax ; pop rbp ; ret
0x000000000045baa4 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000044d05c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044b948 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401cb4 : push rbp ; mov edi, 0x661e20 ; mov rbp, rsp ; call rax
0x00000000004202bf : push rbp ; ret
0x0000000000404ea4 : push rbp ; ret 0x1b2
0x0000000000403211 : push rbp ; ret 0x8589
0x0000000000404ec0 : push rbp ; ret 0x8b48
0x0000000000420256 : push rbp ; ret 0xd284
0x00000000004425bf : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000453986 : push rbp ; shr al, 1 ; ret
0x000000000041e84f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e929 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000460b01 : push rbx ; cld ; jmp rsi
0x000000000042e7ca : push rbx ; ret
0x000000000045968b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000410e9f : push rdi ; ret 0xc750
0x000000000042d6e6 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000410e5d : push rsi ; ret 0xc750
0x0000000000460994 : push rsp ; or byte ptr [rax], al ; add al, bh ; cld ; call qword ptr [rbx]
0x000000000042cb0a : pushfq ; ret 0x8445
0x000000000043a743 : pushfq ; ret 0xd284
0x00000000004002e1 : ret
0x0000000000410c61 : ret 0
0x000000000044d060 : ret 0x10
0x000000000042d2ba : ret 0x108
0x0000000000435560 : ret 0x1111
0x000000000043f0df : ret 0x124
0x00000000004244c3 : ret 0x148
0x0000000000436e54 : ret 0x19
0x0000000000421424 : ret 0x1a
0x000000000041669d : ret 0x1add
0x0000000000436158 : ret 0x1b
0x000000000040a73a : ret 0x1b1e
0x0000000000404ea5 : ret 0x1b2
0x000000000044b63d : ret 0x1cdd
0x000000000043ffe8 : ret 0x1d
0x000000000044b565 : ret 0x1e1
0x000000000043773f : ret 0x2145
0x0000000000436454 : ret 0x23
0x0000000000416fea : ret 0x23da
0x000000000040ea2c : ret 0x2453
0x0000000000438c48 : ret 0x24cc
0x000000000043e5ce : ret 0x25
0x00000000004036df : ret 0x2507
0x0000000000401b52 : ret 0x2606
0x0000000000401952 : ret 0x2607
0x0000000000401742 : ret 0x2608
0x0000000000423ce8 : ret 0x279e
0x000000000044bc1a : ret 0x280f
0x0000000000456931 : ret 0x2941
0x000000000041f939 : ret 0x2948
0x0000000000420424 : ret 0x2a
0x0000000000440030 : ret 0x2ae8
0x000000000043c48e : ret 0x2b
0x000000000041e852 : ret 0x2d50
0x0000000000405398 : ret 0x2e8
0x00000000004591ee : ret 0x3040
0x00000000004598e8 : ret 0x32e8
0x000000000043dd2a : ret 0x33
0x000000000044cd2a : ret 0x3504
0x00000000004071a3 : ret 0x35b9
0x000000000041112a : ret 0x382
0x000000000041f324 : ret 0x3b
0x0000000000437ca0 : ret 0x3d94
0x000000000041c385 : ret 0x3e
0x0000000000405ec8 : ret 0x4240
0x0000000000428f93 : ret 0x4589
0x000000000041f7c1 : ret 0x4802
0x000000000044b300 : ret 0x4810
0x000000000043ffff : ret 0x4813
0x000000000045968e : ret 0x4815
0x00000000004053a6 : ret 0x4847
0x0000000000421316 : ret 0x4861
0x0000000000443d11 : ret 0x4878
0x000000000044d9b7 : ret 0x48c3
0x0000000000401fd4 : ret 0x48f0
0x0000000000419bd1 : ret 0x4b
0x00000000004251e7 : ret 0x4cc0
0x0000000000422228 : ret 0x4cf0
0x000000000042ab32 : ret 0x4dbf
0x00000000004276fc : ret 0x4f0b
0x00000000004384d6 : ret 0x5189
0x000000000041461b : ret 0x5589
0x000000000045342f : ret 0x558a
0x00000000004422ef : ret 0x558b
0x000000000041eada : ret 0x5966
0x0000000000426357 : ret 0x5bc6
0x000000000043a6fb : ret 0x5fe8
0x00000000004425c3 : ret 0x60
0x000000000045e02f : ret 0x61
0x00000000004330bd : ret 0x6809
0x0000000000415d36 : ret 0x6a8a
0x000000000042b26a : ret 0x6ea5
0x000000000042e37c : ret 0x6fcb
0x0000000000408202 : ret 0x71b9
0x0000000000405029 : ret 0x71e8
0x0000000000408377 : ret 0x7473
0x00000000004159ee : ret 0x77a8
0x0000000000416b51 : ret 0x7a8a
0x000000000041d7cb : ret 0x7b7f
0x000000000042417a : ret 0x8041
0x000000000040beb1 : ret 0x812b
0x00000000004243c2 : ret 0x8141
0x0000000000405ec5 : ret 0x8148
0x0000000000408a57 : ret 0x81c1
0x000000000041f6e4 : ret 0x822d
0x000000000043a6f4 : ret 0x8341
0x0000000000453592 : ret 0x8348
0x0000000000455fb1 : ret 0x840
0x00000000004042d0 : ret 0x8445
0x0000000000403212 : ret 0x8589
0x0000000000404cc8 : ret 0x858a
0x000000000044bfe9 : ret 0x86a5
0x0000000000448aee : ret 0x86f8
0x000000000040c542 : ret 0x8844
0x000000000040e162 : ret 0x8901
0x000000000040ab9c : ret 0x892b
0x0000000000455bc6 : ret 0x8938
0x0000000000416763 : ret 0x8940
0x0000000000436606 : ret 0x8941
0x00000000004303c5 : ret 0x8945
0x0000000000402a15 : ret 0x8947
0x0000000000405a51 : ret 0x8948
0x0000000000457caf : ret 0x894a
0x0000000000415f67 : ret 0x8961
0x0000000000456731 : ret 0x898c
0x000000000042a808 : ret 0x898d
0x000000000043382e : ret 0x8994
0x000000000044a69c : ret 0x899a
0x000000000040766d : ret 0x89c1
0x00000000004329ee : ret 0x89e0
0x0000000000442e7a : ret 0x89f5
0x00000000004592a8 : ret 0x8a44
0x00000000004591a5 : ret 0x8a4a
0x000000000040e062 : ret 0x8b01
0x0000000000404ec1 : ret 0x8b48
0x0000000000438064 : ret 0x8b4c
0x000000000043fd55 : ret 0x919d
0x0000000000439c58 : ret 0x9214
0x000000000045b5f2 : ret 0x941
0x000000000045bd32 : ret 0x949
0x0000000000430ddd : ret 0x94b9
0x0000000000407cb7 : ret 0xa
0x000000000041e92c : ret 0xa30b
0x0000000000431e89 : ret 0xa8b9
0x0000000000429ccf : ret 0xac60
0x0000000000403c0f : ret 0xb
0x000000000040531b : ret 0xb0
0x000000000042c6b8 : ret 0xb28d
0x0000000000420230 : ret 0xb740
0x0000000000438054 : ret 0xb841
0x0000000000428987 : ret 0xb848
0x000000000041e460 : ret 0xb940
0x000000000044299a : ret 0xb941
0x0000000000404f7a : ret 0xb947
0x000000000044fccb : ret 0xb948
0x0000000000459132 : ret 0xb94a
0x00000000004568e0 : ret 0xb98c
0x000000000044a8f0 : ret 0xb99a
0x0000000000432afb : ret 0xb9e0
0x00000000004431e4 : ret 0xb9f5
0x00000000004208ac : ret 0xbf48
0x0000000000401c55 : ret 0xc148
0x000000000045e272 : ret 0xc493
0x0000000000441745 : ret 0xc731
0x0000000000410e5e : ret 0xc750
0x00000000004293d0 : ret 0xca21
0x00000000004351e0 : ret 0xcaed
0x000000000045e035 : ret 0xccb2
0x0000000000405d5d : ret 0xd02e
0x0000000000432507 : ret 0xd0e9
0x000000000043a9a3 : ret 0xd108
0x0000000000404838 : ret 0xd284
0x0000000000430e4d : ret 0xd3e9
0x0000000000404fc5 : ret 0xd5e8
0x00000000004578f5 : ret 0xd618
0x0000000000413111 : ret 0xd701
0x0000000000408256 : ret 0xdffa
0x000000000044088f : ret 0xe083
0x0000000000427c78 : ret 0xe1a5
0x0000000000408c18 : ret 0xe280
0x000000000040cff5 : ret 0xe40a
0x0000000000429f7c : ret 0xe41a
0x0000000000407a21 : ret 0xe472
0x000000000043d30f : ret 0xe721
0x0000000000404e41 : ret 0xe8af
0x0000000000455bf3 : ret 0xe8ff
0x0000000000420102 : ret 0xe940
0x0000000000442a15 : ret 0xe941
0x0000000000421361 : ret 0xe961
0x0000000000437cec : ret 0xe994
0x000000000044aa9f : ret 0xe99a
0x0000000000408a8b : ret 0xe9c1
0x000000000041718d : ret 0xea51
0x000000000044a9ab : ret 0xea81
0x000000000040fde0 : ret 0xeae8
0x0000000000422f1c : ret 0xee8
0x000000000043d4b2 : ret 0xef52
0x0000000000455f95 : ret 0xf280
0x0000000000414655 : ret 0xf281
0x00000000004096ca : ret 0xf3a7
0x0000000000429981 : ret 0xf40
0x000000000041ef67 : ret 0xf41
0x00000000004546ac : ret 0xf4e9
0x000000000044bc31 : ret 0xf66
0x00000000004354d4 : ret 0xf6bd
0x0000000000420eb5 : ret 0xf7f3
0x0000000000441741 : ret 0xfa89
0x000000000041f63e : ret 0xfc75
0x00000000004537bf : ret 0xff3
0x0000000000420eaf : ret 0xffa5
0x0000000000431ff3 : ret 0xffbe
0x000000000041f638 : ret 0xffc4
0x000000000041e858 : ret 0xffd5
0x000000000041e932 : ret 0xffd8
0x000000000041f6ea : ret 0xffd9
0x000000000041ead4 : ret 0xffe0
0x000000000040825c : ret 0xfff6
0x000000000041d7c5 : ret 0xfffa
0x0000000000408371 : ret 0xfffd
0x0000000000441a15 : ret 0xfffe
0x000000000042fca9 : ret 0xffff
0x0000000000406944 : ret 1
0x000000000041f4d0 : ret 2
0x0000000000432217 : ret 3
0x0000000000410195 : ret 4
0x0000000000404d4e : ret 6
0x000000000040c650 : ret 7
0x0000000000422624 : ret 8
0x0000000000439628 : ret 9
0x000000000042dfb0 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045966d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000043f0ba : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x0000000000452814 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044860c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413bac : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045c21a : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000455a11 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f2a8 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042ee7a : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x000000000040deea : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045966c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000461ce0 : rol dh, -1 ; call qword ptr [rax]
0x000000000043a3c7 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000042dfaf : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000040ee17 : ror byte ptr [r11 - 0x1376b800], 1 ; pop rbp ; ret
0x000000000044d890 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e13e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000410cb7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000428984 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401c5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c6b ; pop rbp ; ret
0x000000000044d891 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e13f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000410cb8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000409e96 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044c37a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042df4b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x42dfb4 ; ret
0x000000000044f763 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000448160 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044baed : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443fb7 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004425c0 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x000000000045bd55 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000040ee18 : ror byte ptr [rbx - 0x1376b800], 1 ; pop rbp ; ret
0x000000000041466a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045fc48 : ror byte ptr [rdi], 0 ; add byte ptr [rax], bl ; pop rcx ; cld ; jmp rax
0x000000000044173e : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x000000000045c22d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000045bd2f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x00000000004435f9 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040949e : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000441a0f : ror dword ptr [rax - 0x77], -0x32 ; call 0x42dd16
0x000000000045949e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004250a0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000045c50c : sahf ; ret 0xd284
0x000000000045bd14 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000401c5e : sar eax, 1 ; jne 0x401c69 ; pop rbp ; ret
0x0000000000420421 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401c5d : sar rax, 1 ; jne 0x401c6a ; pop rbp ; ret
0x0000000000461bf0 : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x1a ; add byte ptr [rax], al ; ret 0xffff
0x00000000004253e0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000043142d : sbb al, 0x41 ; xchg eax, ebx ; ret
0x0000000000460a5c : sbb al, 9 ; add byte ptr [rax], al ; loopne 0x460ab3 ; cld ; jmp qword ptr [rbx]
0x000000000040548e : sbb al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043f172 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x000000000045fc4c : sbb byte ptr [rcx - 4], bl ; jmp rax
0x000000000043f173 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000420321 : sbb cl, ch ; ret
0x00000000004281d3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044e35d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000424430 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040eebd : scasb al, byte ptr [rdi] ; ret
0x0000000000404e3a : scasd eax, dword ptr [rdi] ; call 0xfffffffff26983ba
0x0000000000434060 : scasd eax, dword ptr [rdi] ; ret
0x0000000000456730 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004568df : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x0000000000447c1a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408a87 : shl byte ptr [r9], 0x5a ; ret 0xe9c1
0x0000000000447c1c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408a88 : shl byte ptr [rcx], 0x5a ; ret 0xe9c1
0x000000000044bc4f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000453987 : shr al, 1 ; ret
0x000000000041f322 : shr cl, cl ; ret 0x3b
0x000000000045fc49 : sldt word ptr [rax] ; sbb byte ptr [rcx - 4], bl ; jmp rax
0x0000000000452ef9 : stc ; in al, dx ; ret 0x8589
0x000000000045380c : stc ; in al, dx ; ret 0xff3
0x0000000000430b0c : stc ; mov cl, 0x37 ; ret 0x4589
0x0000000000445175 : stc ; ret
0x000000000041d15d : stc ; ret 0x77a8
0x0000000000423ce7 : std ; ret 0x279e
0x000000000040e3f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046054a : sti ; call qword ptr [rcx]
0x000000000046068a : sti ; call qword ptr [rdx]
0x00000000004604ea : sti ; call qword ptr [rsi]
0x0000000000452ef8 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000043fd54 : stosb byte ptr [rdi], al ; ret 0x919d
0x000000000045bd13 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042dcfb : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000460ec8 : sub ah, dl ; cld ; jmp qword ptr [rdi]
0x000000000044280c : sub al, 0x35 ; ret 0x8941
0x0000000000442998 : sub al, 0x35 ; ret 0xb941
0x0000000000442a13 : sub al, 0x35 ; ret 0xe941
0x0000000000444771 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x0000000000428eef : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x00000000004114ce : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429dd6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004113b8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e855 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000040257b : sub byte ptr [rdi + rdx*8 - 0x47], ah ; ret
0x000000000041e84b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e925 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043f0a9 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x000000000042c6ce : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x000000000041f6e5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000042dcfd : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042898f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045e3c9 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042dcfc : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045e3c8 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000043173f : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x000000000044bf13 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000453ba9 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041e850 : test al, -0x7f ; ret 0x2d50
0x000000000041e92a : test al, -0x7f ; ret 0xa30b
0x000000000042fbf9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000458f43 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e2d7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045672d : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000460878 : test al, 0x40 ; cld ; call rdi
0x0000000000424abe : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000421086 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000427878 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000460548 : test al, 0xe ; sti ; call qword ptr [rcx]
0x0000000000450d8d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000452c5a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000431b40 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045e34a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000446d62 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000412c50 : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000408008 : test byte ptr [rbx - 0x16fffff7], bl ; ret 1
0x0000000000452c5b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x0000000000446306 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004156cc : test byte ptr [rcx], ch ; ret 0
0x000000000042ea8f : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000410036 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000460ec4 : test byte ptr [rip - 0x2bd80000], cl ; cld ; jmp qword ptr [rdi]
0x0000000000428ef1 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x0000000000444f41 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000044aea2 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000442115 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000454187 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000449f31 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004156c6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004338bd : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x000000000045b927 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045b8e7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000045b862 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000042cee4 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042da61 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042da07 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000042d93d : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042cc6b : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000042d8f9 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000427986 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000425b1e : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000451b71 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004246da : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000439c09 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x00000000004200fb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042135a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040bbe4 : test dword ptr [rsi + rdi*8 - 0x390a0001], edx ; ret
0x000000000041ce1a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042130f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000043cb67 : test esi, esp ; ret
0x000000000041f31f : wait ; jge 0x41f301 ; shr cl, cl ; ret 0x3b
0x000000000041a3dd : wait ; jo 0x41a3eb ; ret
0x000000000041d92c : wait ; jo 0x41d93a ; ret
0x000000000043f4cc : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000408009 : wait ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040e160 : xchg dword ptr [rbx], edx ; ret 0x8901
0x0000000000459688 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044ba30 : xchg eax, ebp ; jmp 0x44bb81
0x000000000042a062 : xchg eax, ebp ; ret
0x00000000004042cf : xchg eax, ebp ; ret 0x8445
0x0000000000404837 : xchg eax, ebp ; ret 0xd284
0x0000000000415f65 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041c865 : xchg eax, ebx ; ret
0x000000000041ca95 : xchg eax, ecx ; ret
0x000000000042d549 : xchg eax, edi ; ret 0xd284
0x000000000045672f : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004568de : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x000000000040546a : xchg eax, edx ; ret
0x000000000042418f : xchg eax, edx ; ret 0x8445
0x000000000042787e : xchg eax, edx ; ret 0xd284
0x00000000004546a8 : xchg eax, esp ; int 6
0x000000000040beac : xchg eax, esp ; je 0x40be6d ; jg 0x40bf1b ; ret 0x812b
0x0000000000426b1a : xchg eax, esp ; jmp 0x427588
0x0000000000426a57 : xchg eax, esp ; jmp 0x42758a
0x0000000000421314 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041cbe5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042135f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000043774c : xchg eax, esp ; ret
0x0000000000424179 : xchg eax, esp ; ret 0x8041
0x00000000004089eb : xchg eax, esp ; ret 0x8445
0x000000000042022e : xchg eax, esp ; ret 0xb740
0x0000000000405159 : xchg eax, esp ; ret 0xd284
0x0000000000408c17 : xchg eax, esp ; ret 0xe280
0x0000000000447c1b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044acf2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000042b88a : xchg eax, r11d ; ret
0x00000000004546a7 : xchg eax, r12d ; int 6
0x0000000000426b19 : xchg eax, r12d ; jmp 0x427589
0x0000000000461329 : xchg esi, edi ; jmp qword ptr [rcx]
0x000000000044d9af : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000040beaa : xlatb ; call qword ptr [rsp + rsi*2 - 0x3d9a8047]
0x0000000000404ebb : xlatb ; mov ah, -0x47 ; mov word ptr [rdi], es ; push rbp ; ret 0x8b48
0x000000000045b97e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000412608 : xor al, 0x23 ; cmp dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x0000000000405021 : xor al, 0x25 ; jle 0x405018 ; add byte ptr [r8 - 0x77], r9b ; ret 0x71e8
0x0000000000460874 : xor al, 7 ; add byte ptr [rax], al ; test al, 0x40 ; cld ; call rdi
0x0000000000420229 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000414ac7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000453983 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000414ac8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045bd16 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000044acf3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000443fbb : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044aa70 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431447 : xor dh, dh ; ret 0x8589
0x0000000000431ff1 : xor dh, dh ; ret 0xffbe
0x00000000004098ee : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004493db : xor dword ptr [rdx], edx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000440256 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000045b97d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000045bc81 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000044024a : xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000431446 : xor r14b, r14b ; ret 0x8589
0x00000000004317ca : xor sil, sil ; ret 0x8589
0x0000000000431ff0 : xor sil, sil ; ret 0xffbe
