0x0000000000410adc : adc ah, bl ; mov ebx, 0x89494658 ; ret 0x314d
0x0000000000408b56 : adc al, -0x47 ; ret
0x0000000000408659 : adc al, 0x25 ; ret 0x6662
0x0000000000434073 : adc al, 0x70 ; add byte ptr [rbp + 9], cl ; ret
0x0000000000425f9d : adc bh, byte ptr [rdi + 0x2fb9e45e] ; ret
0x000000000043fc18 : adc byte ptr [rbx], ch ; xchg dword ptr [rax + 0x29], ecx ; ret 0x148
0x000000000043fc28 : adc byte ptr [rbx], ch ; xchg dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000408b55 : adc byte ptr [rcx + rdi*4], dl ; ret
0x000000000046437c : adc byte ptr [rsi + rdi*8], bl ; call rax
0x0000000000426530 : adc ch, byte ptr [rip - 0x76b3384f] ; ret
0x0000000000464254 : adc ch, dl ; stc ; jmp rax
0x0000000000441e07 : adc cl, byte ptr [rax + 0x29] ; ret 0x14c
0x0000000000441e17 : adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000451fae : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040816c : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041ac0b : adc cl, byte ptr [rbp - 0x77] ; ret 0xf749
0x0000000000421e6d : adc cl, byte ptr [rcx + 0x29] ; ret 0x149
0x0000000000421e7d : adc cl, byte ptr [rcx + 1] ; ret 0xb848
0x0000000000421e6c : adc cl, byte ptr cs:[rcx + 0x29] ; ret 0x149
0x0000000000421e7c : adc cl, byte ptr cs:[rcx + 1] ; ret 0xb848
0x000000000045a04b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041fc26 : adc dword ptr [rax], esp ; xor eax, 0x149f327 ; ret 0xb848
0x000000000043afff : adc dword ptr [rbp + 0x14969e0], esp ; ret 0x8b48
0x0000000000431476 : adc dword ptr [rcx + rcx*2 + 0x149ca01], ebx ; ret 0xb848
0x000000000042652e : adc dword ptr [rdx + 0x12], ebx ; sub eax, 0x894cc7b1 ; ret
0x0000000000452aab : adc eax, 0x558abda1 ; ret
0x0000000000404478 : adc eax, 0x8eb80000 ; lodsb al, byte ptr es:[rsi] ; ret 0x38b9
0x00000000004378e9 : adc eax, 0x954bdfdc ; ret 3
0x000000000040f4ae : adc eax, 0xffd4558b ; ret 0x5589
0x0000000000456089 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404707 : adc eax, dword ptr [rax] ; add dh, al ; add al, 0x25 ; ret
0x000000000040faeb : adc eax, dword ptr [rax] ; or cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000043f3fc : adc esp, esi ; mov esp, 0x894c7853 ; ret
0x0000000000404706 : adc r8d, dword ptr [rax] ; add dh, al ; add al, 0x25 ; ret
0x0000000000464923 : add ah, ch ; add al, byte ptr [rax] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp rsi
0x0000000000417268 : add al, -0x71 ; in eax, -1 ; fldz ; ret
0x0000000000464291 : add al, 0 ; add byte ptr [rax], dh ; push rdx ; cli ; jmp qword ptr [rax]
0x00000000004196ca : add al, 0x11 ; ret 0xc921
0x0000000000418ba9 : add al, 0x20 ; ret 0x339e
0x000000000040470b : add al, 0x25 ; ret
0x00000000004046cd : add al, 0x25 ; ret 0x6662
0x0000000000460b1a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000464543 : add al, al ; mov edi, edi ; call qword ptr [rax]
0x0000000000464e87 : add al, bh ; sub bh, bh ; call qword ptr [rbx]
0x0000000000459716 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x463f
0x0000000000464865 : add al, byte ptr [rax] ; add byte ptr [rax], bl ; pushfq ; cli ; call qword ptr [rcx]
0x0000000000464925 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp rsi
0x000000000040cb5c : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004052ae : add al, ch ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x00000000004052fc : add al, ch ; pop rsi ; ret 0xffff
0x0000000000405284 : add al, ch ; ret
0x000000000046438b : add al, dh ; and al, 0xfffffffffffffffe ; call qword ptr [rax]
0x000000000045c965 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000459d24 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040576f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000405a43 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rax
0x00000000004528e9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004100fa : add bh, bh ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000462faf : add bl, dh ; ret
0x0000000000462c82 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000462ee4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041188b : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000443de2 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000464653 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb ch, cl ; stc ; jmp rax
0x0000000000464e83 : add byte ptr [rax + rcx], cl ; add al, bh ; sub bh, bh ; call qword ptr [rbx]
0x00000000004642d3 : add byte ptr [rax - 0x5e], al ; cli ; jmp qword ptr [rax]
0x0000000000459718 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x463f
0x000000000040e239 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c2e9 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000443df3 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x0000000000401e26 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408bba : add byte ptr [rax - 0x77], cl ; ret 0x3de8
0x0000000000408c83 : add byte ptr [rax - 0x77], cl ; ret 0x74e8
0x0000000000408d11 : add byte ptr [rax - 0x77], cl ; ret 0xe6e8
0x0000000000408bb9 : add byte ptr [rax - 0x77], r9b ; ret 0x3de8
0x0000000000408c82 : add byte ptr [rax - 0x77], r9b ; ret 0x74e8
0x0000000000408d10 : add byte ptr [rax - 0x77], r9b ; ret 0xe6e8
0x0000000000443dfe : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000046433b : add byte ptr [rax - 3], al ; std ; call rax
0x0000000000443ddf : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000443a6f : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000443acb : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000046437a : add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], bl ; call rax
0x0000000000464252 : add byte ptr [rax], al ; adc ch, dl ; stc ; jmp rax
0x0000000000405282 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000045c963 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000459d22 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000405a41 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rax
0x0000000000462fad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000443de0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040c2e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000443df1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x0000000000401e24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000443dfc : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000462fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040b961 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040efc7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462fac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000464249 : add byte ptr [rax], al ; add byte ptr [rax], dh ; sar ecx, 1 ; call qword ptr [rax]
0x000000000041722c : add byte ptr [rax], al ; add byte ptr [rbp + rbx*4 + 9], cl ; ret
0x00000000004653b1 : add byte ptr [rax], al ; add byte ptr [rbp + rcx], bh ; add byte ptr [rax], bh ; ret
0x000000000040e3de : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000455af2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004584e3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040f7e4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x28d247bb], cl ; ret 0x7c9b
0x000000000040c747 : add byte ptr [rax], al ; add byte ptr [rbx - 0x53d253bb], cl ; ret
0x000000000045b3ec : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000045ae49 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000409ad8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d237bb], cl ; ret 0x6e12
0x000000000040beec : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ed21bbb], cl ; ret
0x00000000004094cb : add byte ptr [rax], al ; add byte ptr [rbx - 0x8d237bb], cl ; ret 0x6e12
0x000000000040c012 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040b6f0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040b482 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000462c83 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000462ee5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000459c90 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000462051 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404ea6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000445c42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404984 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443a70 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000443acc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040fda3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b963 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c07c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045608b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000455710 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045a04d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045cdc8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000445839 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000464e86 : add byte ptr [rax], al ; clc ; sub bh, bh ; call qword ptr [rbx]
0x0000000000464922 : add byte ptr [rax], al ; in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp rsi
0x0000000000464246 : add byte ptr [rax], al ; ja 0x464253 ; add byte ptr [rax], al ; xor cl, dl ; stc ; call qword ptr [rax]
0x0000000000464faa : add byte ptr [rax], al ; je 0x464fc0 ; add byte ptr [rax], al ; nop ; xor bh, bh ; jmp rsi
0x00000000004650b2 : add byte ptr [rax], al ; jl 0x4650c9 ; add byte ptr [rax], al ; sub byte ptr [rbx - 1], dl ; call qword ptr [rdx]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000462cc8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c2e8 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401e25 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004645b2 : add byte ptr [rax], al ; nop ; fcos ; call rax
0x0000000000464fae : add byte ptr [rax], al ; nop ; xor bh, bh ; jmp rsi
0x0000000000464e82 : add byte ptr [rax], al ; or byte ptr [rax], r8b ; add al, bh ; sub bh, bh ; call qword ptr [rbx]
0x0000000000464d06 : add byte ptr [rax], al ; pop rax ; and bh, bh ; jmp qword ptr [rbx]
0x0000000000409ea8 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000455af3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040573a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004645c2 : add byte ptr [rax], al ; rcr bh, -1 ; call qword ptr [rax]
0x0000000000462fae : add byte ptr [rax], al ; ret
0x0000000000433ed5 : add byte ptr [rax], al ; ret 0x6ff
0x0000000000464652 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb ch, cl ; stc ; jmp rax
0x0000000000464656 : add byte ptr [rax], al ; sbb ch, cl ; stc ; jmp rax
0x000000000046433a : add byte ptr [rax], al ; std ; std ; call rax
0x00000000004650b6 : add byte ptr [rax], al ; sub byte ptr [rbx - 1], dl ; call qword ptr [rdx]
0x00000000004645fa : add byte ptr [rax], al ; sub ch, -1 ; call qword ptr [rax]
0x000000000046443b : add byte ptr [rax], al ; xor bh, bh ; jmp rax
0x0000000000464292 : add byte ptr [rax], al ; xor byte ptr [rdx - 6], dl ; jmp qword ptr [rax]
0x000000000046424a : add byte ptr [rax], al ; xor cl, dl ; stc ; call qword ptr [rax]
0x00000000004653b7 : add byte ptr [rax], bh ; ret
0x0000000000464867 : add byte ptr [rax], bl ; pushfq ; cli ; call qword ptr [rcx]
0x0000000000464927 : add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp rsi
0x0000000000464293 : add byte ptr [rax], dh ; push rdx ; cli ; jmp qword ptr [rax]
0x000000000046424b : add byte ptr [rax], dh ; sar ecx, 1 ; call qword ptr [rax]
0x00000000004642c3 : add byte ptr [rax], dh ; xchg eax, ecx ; cli ; jmp rax
0x0000000000464303 : add byte ptr [rax], dl ; mov ah, -6 ; jmp rax
0x000000000046437b : add byte ptr [rax], dl ; sbb al, -2 ; call rax
0x0000000000434075 : add byte ptr [rbp + 9], cl ; ret
0x000000000042cd61 : add byte ptr [rbp + 9], cl ; ret 0x94d
0x000000000041722e : add byte ptr [rbp + rbx*4 + 9], cl ; ret
0x00000000004653b3 : add byte ptr [rbp + rcx], bh ; add byte ptr [rax], bh ; ret
0x00000000004100fc : add byte ptr [rbp - 0x77], al ; ret
0x000000000040e3e0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000455af4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040573b : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004584e5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000045849a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040f7e6 : add byte ptr [rbx - 0x28d247bb], cl ; ret 0x7c9b
0x000000000040c93d : add byte ptr [rbx - 0x52d253bb], cl ; ret
0x000000000040c749 : add byte ptr [rbx - 0x53d253bb], cl ; ret
0x000000000045b3ee : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004056b6 : add byte ptr [rbx - 0x6634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000462cc9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000045ae4b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000409ada : add byte ptr [rbx - 0x7d237bb], cl ; ret 0x6e12
0x000000000040beee : add byte ptr [rbx - 0x7ed21bbb], cl ; ret
0x00000000004094cd : add byte ptr [rbx - 0x8d237bb], cl ; ret 0x6e12
0x000000000040c014 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040b6f2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040b484 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000459d8e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000462c85 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004140c4 : add byte ptr [rcx], bh ; insb byte ptr [rdi], dx ; ret 0x8589
0x0000000000462ee7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000459c92 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000462053 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404ea8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000445c44 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404986 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443a72 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000443ace : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040fda5 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b965 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c07e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000464247 : add byte ptr [rdi], dh ; add byte ptr [rax], al ; xor cl, dl ; stc ; call qword ptr [rax]
0x000000000040d2ab : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401807 : add byte ptr es:[rcx], al ; ret
0x0000000000431c1a : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000431c0a : add cl, byte ptr [rax + 1] ; ret 0x148
0x0000000000452a1c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040f2f1 : add cl, byte ptr [rdx - 0x7b] ; add esi, dword ptr [rbp - 0x76b63973] ; ret 0x314d
0x00000000004586ed : add cl, ch ; ret
0x0000000000409945 : add cl, ch ; ret 1
0x0000000000404709 : add dh, al ; add al, 0x25 ; ret
0x00000000004046f2 : add dh, al ; add al, 0x25 ; ret 0x6662
0x000000000040faec : add dl, dh ; or cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404df6 : add dword ptr [rax - 0x76], eax ; cmp al, 0x25 ; ret
0x0000000000409231 : add dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000417240 : add dword ptr [rbp + 9], ecx ; ret 0x94d
0x0000000000414118 : add dword ptr [rcx], edi ; insb byte ptr [rdi], dx ; ret 0x8589
0x000000000041d014 : add dword ptr [rcx], edi ; insb byte ptr [rdi], dx ; ret 0x9ae9
0x00000000004621d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040bb8f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000046120e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x264aae ; add ebx, esi ; ret
0x00000000004642c1 : add eax, 0x91300000 ; cli ; jmp rax
0x000000000045c894 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c93b : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x52d253bb], cl ; ret
0x0000000000409943 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x000000000042cb1b : add ecx, dword ptr [rbp - 0x77] ; ret
0x00000000004226b3 : add ecx, dword ptr [rbp - 0x77] ; ret 0xc149
0x0000000000405ac7 : add edi, eax ; add rsi, rdi ; mov rax, rsi ; pop rbp ; ret
0x000000000040f2f4 : add esi, dword ptr [rbp - 0x76b63973] ; ret 0x314d
0x00000000004046cb : add esi, eax ; add al, 0x25 ; ret 0x6662
0x0000000000405aca : add esi, edi ; mov rax, rsi ; pop rbp ; ret
0x0000000000401acb : add esp, 0x10 ; pop rbp ; ret
0x0000000000459d8c : add esp, 0x100 ; pop rbp ; ret
0x0000000000409ea4 : add esp, 0x170 ; pop rbp ; ret
0x0000000000459efc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000443e7c : add esp, 0x1b0 ; pop rbp ; ret
0x00000000004455ed : add esp, 0x20 ; pop rbp ; ret
0x000000000040d2a9 : add esp, 0x200 ; pop rbp ; ret
0x000000000045a050 : add esp, 0x40 ; pop rbp ; ret
0x0000000000460d19 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401a80 : add esp, 0x50 ; pop rbp ; ret
0x000000000040f4d9 : add esp, 0x58 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045af70 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405736 : add esp, 0x688 ; pop rbx ; pop rbp ; ret
0x000000000044583c : add esp, 0x70 ; pop rbp ; ret
0x000000000040fcff : add esp, 0x78 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044559f : add esp, 0x80 ; pop rbp ; ret
0x000000000040c0d5 : add esp, 0x90 ; pop rbp ; ret
0x00000000004581e6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000455feb : add esp, 0xb0 ; pop rbp ; ret
0x000000000040a4f1 : add esp, 0xd0 ; pop rbp ; ret
0x000000000045b63e : add esp, 0xe0 ; pop rbp ; ret
0x0000000000445e0e : add esp, 0xf0 ; pop rbp ; ret
0x00000000004469a3 : add esp, 8 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004364f4 : add esp, dword ptr [rax - 0x223346de] ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000405ac9 : add rsi, rdi ; mov rax, rsi ; pop rbp ; ret
0x0000000000401aca : add rsp, 0x10 ; pop rbp ; ret
0x0000000000459d8b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000409ea3 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000459efb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000443e7b : add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004455ec : add rsp, 0x20 ; pop rbp ; ret
0x000000000040d2a8 : add rsp, 0x200 ; pop rbp ; ret
0x000000000045a04f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000460d18 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401a7f : add rsp, 0x50 ; pop rbp ; ret
0x000000000045af6f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405735 : add rsp, 0x688 ; pop rbx ; pop rbp ; ret
0x000000000044583b : add rsp, 0x70 ; pop rbp ; ret
0x000000000044559e : add rsp, 0x80 ; pop rbp ; ret
0x000000000040c0d4 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004581e5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000455fea : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040a4f0 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000045b63d : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000445e0d : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004469a2 : add rsp, 8 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x0000000000421e67 : and al, 0x5e ; or al, 0x40 ; xchg eax, edx ; adc cl, byte ptr cs:[rcx + 0x29] ; ret 0x149
0x0000000000421e77 : and al, 0x5e ; or al, 0x40 ; xchg eax, edx ; adc cl, byte ptr cs:[rcx + 1] ; ret 0xb848
0x0000000000462c8d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004356a2 : and al, 0xffffffffffffff8d ; ret 0x214c
0x00000000004356cc : and al, 0xffffffffffffff8d ; ret 0x214d
0x00000000004356af : and al, 0xffffffffffffff8d ; ret 0x8949
0x000000000046438d : and al, 0xfffffffffffffffe ; call qword ptr [rax]
0x000000000040bb8e : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046120d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000442787 : and bh, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000464d09 : and bh, bh ; jmp qword ptr [rbx]
0x0000000000419d73 : and byte ptr [rax - 0x221d952c], bl ; ret 0x2149
0x00000000004017a3 : and byte ptr [rdx + 0x66], 0 ; jmp rax
0x00000000004017e3 : and byte ptr [rdx + 0x66], 0 ; jmp rdx
0x000000000041fc27 : and byte ptr [rip + 0x149f327], dh ; ret 0xb848
0x000000000045ab7b : and byte ptr [rsi + 0x58], ah ; jb 0x45abb2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000430231 : and cl, byte ptr [rcx + 0x5942f1f6] ; ret
0x00000000004296ef : and dword ptr [rcx], ebx ; ret
0x00000000004052aa : and eax, 0x666290 ; call 0x401567
0x00000000004046ed : and eax, 0x6662c1 ; add dh, al ; add al, 0x25 ; ret 0x6662
0x00000000004046c6 : and eax, 0x6662c1 ; add esi, eax ; add al, 0x25 ; ret 0x6662
0x0000000000451c51 : and eax, 0x75b4b9d3 ; ret
0x0000000000421746 : and eax, 0x894c2411 ; ret
0x0000000000464d69 : and edi, edi ; call rdi
0x0000000000408b54 : and edx, dword ptr [rax] ; adc al, -0x47 ; ret
0x00000000004051ed : call 0x4014b2
0x00000000004052af : call 0x401562
0x000000000040a509 : call 0x401568
0x0000000000444c05 : call 0x410eb2
0x0000000000429477 : call 0x41c9cd
0x000000000045af75 : call 0x45b039
0x000000000045ccbd : call 0xffffffffaca68ef1
0x000000000045ccbc : call 0xffffffffaca68ef2
0x0000000000430cc8 : call 0xffffffffc2445598
0x0000000000430cd8 : call 0xffffffffc26c55a8
0x00000000004206e9 : call 0xffffffffc3cb502f
0x00000000004293a0 : call 0xffffffffc3cbdce6
0x0000000000455709 : call 0xffffffffe907e059
0x0000000000455708 : call 0xffffffffe907e05a
0x0000000000462f89 : call qword ptr [r12 + rbx*8]
0x0000000000416005 : call qword ptr [rax]
0x0000000000456ece : call qword ptr [rbx]
0x0000000000460dbc : call qword ptr [rcx]
0x000000000040908a : call qword ptr [rdi]
0x000000000042c927 : call qword ptr [rdx]
0x0000000000407ccd : call qword ptr [rsi]
0x0000000000462f8a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x0000000000427e1b : call rbx
0x0000000000407e3d : call rcx
0x00000000004547d4 : call rdi
0x000000000040940e : call rdx
0x00000000004173f3 : call rsi
0x00000000004085ad : call rsp
0x00000000004181d7 : cdq ; pop rbx ; sub bh, bh ; ret
0x00000000004069cc : cdq ; ret 0x8995
0x0000000000408a91 : cdq ; ret 0xb995
0x0000000000464290 : clc ; add al, 0 ; add byte ptr [rax], dh ; push rdx ; cli ; jmp qword ptr [rax]
0x0000000000460d17 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000045a2d7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000045d6a9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x0000000000405ae7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e23d : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405aeb : clc ; pop rbp ; ret
0x0000000000409adf : clc ; ret 0x6e12
0x00000000004481dd : clc ; ret 0x77a8
0x0000000000463c22 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000464e88 : clc ; sub bh, bh ; call qword ptr [rbx]
0x000000000045d2fe : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000045e11d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040e40f : cld ; jmp 0x40e47c
0x000000000040e40e : cld ; jmp 0x40e47d
0x000000000043036e : cld ; leave ; sbb esp, dword ptr [rdx] ; sbb byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000429684 : cld ; pop rdi ; ret
0x0000000000402da3 : cld ; ret 0x89dc
0x00000000004045ea : cld ; ret 0xb2dc
0x0000000000404606 : cld ; ret 0xc7dc
0x000000000043d7d8 : cld ; sbb dword ptr [rcx + 0x29], ecx ; ret 0xb848
0x000000000046486a : cli ; call qword ptr [rcx]
0x00000000004642be : cli ; inc eax ; add eax, 0x91300000 ; cli ; jmp rax
0x0000000000464296 : cli ; jmp qword ptr [rax]
0x00000000004642c6 : cli ; jmp rax
0x000000000046492a : cli ; jmp rsi
0x000000000045ab80 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000417267 : cmc ; add al, -0x71 ; in eax, -1 ; fldz ; ret
0x0000000000462c8c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004195ba : cmc ; mov ds, word ptr [rbp - 0x3e] ; sahf ; ret
0x0000000000459a9b : cmc ; ret 0x4f0b
0x0000000000410adb : cmp al, 0x10 ; fdivr qword ptr [rbx - 0x76b6b9a8] ; ret 0x314d
0x0000000000404df9 : cmp al, 0x25 ; ret
0x000000000045971b : cmp al, 0x25 ; ret 0x463f
0x0000000000430cc5 : cmp byte ptr [rbx + 0x22], ch ; call 0xffffffffc244559b
0x0000000000430cd5 : cmp byte ptr [rbx + 0x22], ch ; call 0xffffffffc26c55ab
0x00000000004164d9 : cmp cl, ah ; xchg byte ptr [rdx], ah ; ret 0x4de8
0x0000000000459c31 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004447e2 : cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040f3b0 : cmp dword ptr [rax], ebx ; fcom dword ptr [rbx - 0x76b6b6cb] ; ret 0x314d
0x00000000004196c9 : cmp dword ptr [rcx + rdx], eax ; ret 0xc921
0x0000000000404601 : cmp eax, 0x37b98f2f ; cld ; ret 0xc7dc
0x0000000000424cae : cmp eax, 0x894cd439 ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000456ed4 : cmp eax, 0xe8000000 ; ret
0x00000000004195b8 : cmp ebp, edx ; cmc ; mov ds, word ptr [rbp - 0x3e] ; sahf ; ret
0x0000000000452aa7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004196c8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rcx + rdx], eax ; ret 0xc921
0x0000000000456ed2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x456f1c
0x0000000000444c06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfffc
0x0000000000434388 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int 0x6f
0x00000000004220f6 : dec byte ptr [rax + 0x21] ; fimul dword ptr [rbp + 9] ; ret
0x000000000042643c : dec byte ptr [rax + 0x29] ; ret 0x14c
0x000000000042644c : dec byte ptr [rax + 1] ; ret 0x8948
0x0000000000425fa7 : dec byte ptr [rax - 0x41] ; adc bh, byte ptr [rdi + 0x2fb9e45e] ; ret
0x0000000000418bb3 : dec byte ptr [rax - 0x41] ; add al, 0x20 ; ret 0x339e
0x0000000000432527 : dec byte ptr [rax - 0x41] ; stosb byte ptr [rdi], al ; ret 0xbc4c
0x0000000000418abe : dec byte ptr [rax - 0x77] ; ret 0x2948
0x000000000042cb14 : dec byte ptr [rbp - 0x77] ; ret 0xc149
0x00000000004378e6 : dec byte ptr [rcx - 0x41] ; adc eax, 0x954bdfdc ; ret 3
0x0000000000427cb2 : dec dword ptr [rax + 0x21] ; ret
0x00000000004439b9 : dec dword ptr [rax + 0x21] ; ret 0x8b48
0x000000000042af29 : dec dword ptr [rax + 0x29] ; enter -0x46b8, -0x25 ; ret 0xed0a
0x000000000041fc00 : dec dword ptr [rax + 0x29] ; ret
0x00000000004285e0 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041be4f : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000042623d : dec dword ptr [rax + 9] ; ret
0x0000000000422e9b : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3cb77b2
0x000000000042bf53 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3cc076a
0x00000000004359d0 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3cca2e7
0x000000000043bf5a : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3cd0871
0x0000000000425f9a : dec dword ptr [rax - 0x41] ; adc bh, byte ptr [rdi + 0x2fb9e45e] ; ret
0x0000000000418ba6 : dec dword ptr [rax - 0x41] ; add al, 0x20 ; ret 0x339e
0x0000000000421135 : dec dword ptr [rax - 0x41] ; ret
0x000000000043251a : dec dword ptr [rax - 0x41] ; stosb byte ptr [rdi], al ; ret 0xbc4c
0x000000000043d9da : dec dword ptr [rax - 0x42] ; ret
0x0000000000428a41 : dec dword ptr [rax - 0x42] ; ret 0x1ac2
0x0000000000425580 : dec dword ptr [rax - 0x42] ; ret 0x7d5e
0x0000000000416f96 : dec dword ptr [rax - 0x42] ; ret 0xa2a4
0x000000000041b26a : dec dword ptr [rax - 0x45] ; mov al, -0x55 ; xor byte ptr [rbp - 2], al ; ret
0x000000000042d9d6 : dec dword ptr [rax - 0x45] ; ret 0x42bd
0x0000000000416f4d : dec dword ptr [rax - 0x45] ; ret 0xa2a4
0x0000000000418c5c : dec dword ptr [rax - 0x45] ; ret 0xef0b
0x000000000041970e : dec dword ptr [rax - 0x46] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rcx + rdx], eax ; ret 0xc921
0x000000000041ebab : dec dword ptr [rax - 0x46] ; fisttp dword ptr [rdx] ; jbe 0x41ec1a ; ret
0x0000000000436c12 : dec dword ptr [rax - 0x46] ; hlt ; ret
0x0000000000416265 : dec dword ptr [rax - 0x46] ; je 0x416229 ; jp 0x4162ce ; ret
0x000000000042c22e : dec dword ptr [rax - 0x46] ; push rcx ; ficomp word ptr [rsi + 0x44] ; ret 0xeca7
0x0000000000416cd0 : dec dword ptr [rax - 0x46] ; ret
0x000000000043e1b0 : dec dword ptr [rax - 0x46] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004302a1 : dec dword ptr [rax - 0x48] ; and cl, byte ptr [rcx + 0x5942f1f6] ; ret
0x000000000043ea06 : dec dword ptr [rax - 0x48] ; out dx, al ; salc ; ret 0xe51b
0x0000000000451fab : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000408169 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000408584 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000407dd1 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x000000000045acad : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041b3c6 : dec dword ptr [rax - 0x77] ; ret
0x00000000004104ab : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000408bdc : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004056bc : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004386a8 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x3f], cl ; ret
0x0000000000427d36 : dec dword ptr [rbp + 0x29] ; ret
0x000000000041d6b8 : dec dword ptr [rbp - 0x77] ; fimul dword ptr [rcx + 0x21] ; ret 0x8149
0x000000000041702f : dec dword ptr [rbp - 0x77] ; ret
0x0000000000420634 : dec dword ptr [rbp - 0x77] ; ret 0x2149
0x00000000004168d2 : dec dword ptr [rbp - 0x77] ; ret 0x214d
0x00000000004192a7 : dec dword ptr [rbp - 0x77] ; ret 0x8149
0x000000000042cac7 : dec dword ptr [rbp - 0x77] ; ret 0xc149
0x00000000004165d8 : dec dword ptr [rbp - 0x77] ; ret 0xf749
0x0000000000424fc7 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx + 0x21], cl ; ret
0x000000000042004c : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x3f], cl ; ret
0x000000000041b3d2 : dec dword ptr [rcx + 0x21] ; ret
0x000000000041b5d6 : dec dword ptr [rcx + 0x29] ; ret
0x000000000042aef4 : dec dword ptr [rcx + 0x29] ; ret 0x14c
0x0000000000428563 : dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x000000000043f275 : dec dword ptr [rcx + 0x29] ; ret 0xb848
0x0000000000422eff : dec dword ptr [rcx + 1] ; ret
0x000000000041eafb : dec dword ptr [rcx + 1] ; ret 0x149
0x000000000041e06f : dec dword ptr [rcx + 9] ; ret
0x000000000043e022 : dec dword ptr [rcx + 9] ; ret 0x214d
0x000000000041dea6 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb27f2
0x000000000042353a : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb7e86
0x0000000000433346 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cc7c92
0x000000000043691c : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ccb268
0x000000000043b601 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ccff4d
0x000000000043c5f6 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cd0f42
0x000000000043f97f : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cd42cb
0x00000000004414a0 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cd5dec
0x000000000041b294 : dec dword ptr [rcx - 0x41] ; mov al, -0x55 ; xor byte ptr [rbp - 2], al ; ret
0x000000000043f20e : dec dword ptr [rcx - 0x41] ; pop rcx ; scasb al, byte ptr [rdi] ; in eax, 0x34 ; ret 0x9e3a
0x000000000042da04 : dec dword ptr [rcx - 0x41] ; ret 0x42bd
0x0000000000418c86 : dec dword ptr [rcx - 0x41] ; ret 0xef0b
0x000000000043f1e7 : dec dword ptr [rcx - 0x42] ; pop rcx ; scasb al, byte ptr [rdi] ; in eax, 0x34 ; ret 0x9e3a
0x000000000043022e : dec dword ptr [rcx - 0x43] ; and cl, byte ptr [rcx + 0x5942f1f6] ; ret
0x0000000000418bd0 : dec dword ptr [rcx - 0x45] ; add al, 0x20 ; ret 0x339e
0x0000000000436fb1 : dec dword ptr [rcx - 0x45] ; ret
0x00000000004289f8 : dec dword ptr [rcx - 0x45] ; ret 0x1ac2
0x0000000000425537 : dec dword ptr [rcx - 0x45] ; ret 0x7d5e
0x0000000000432544 : dec dword ptr [rcx - 0x45] ; stosb byte ptr [rdi], al ; ret 0xbc4c
0x0000000000425fc4 : dec dword ptr [rcx - 0x46] ; adc bh, byte ptr [rdi + 0x2fb9e45e] ; ret
0x0000000000439566 : dec dword ptr [rcx - 0x46] ; ret
0x000000000041dd21 : dec dword ptr [rcx - 0x46] ; ret 0xc769
0x00000000004196c5 : dec dword ptr [rcx - 0x47] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rcx + rdx], eax ; ret 0xc921
0x000000000041621c : dec dword ptr [rcx - 0x47] ; je 0x4161e0 ; jp 0x416285 ; ret
0x000000000042c1e5 : dec dword ptr [rcx - 0x47] ; push rcx ; ficomp word ptr [rsi + 0x44] ; ret 0xeca7
0x0000000000416c87 : dec dword ptr [rcx - 0x47] ; ret
0x0000000000416afc : dec dword ptr [rcx - 0x47] ; ret 0x3a9a
0x00000000004364f1 : dec dword ptr [rcx - 0x48] ; add esp, dword ptr [rax - 0x223346de] ; ret
0x000000000041dcf7 : dec dword ptr [rcx - 0x48] ; ret 0xc769
0x0000000000426a5e : dec dword ptr [rcx - 0x77] ; fimul dword ptr [rcx + 0x21] ; ret 0x8148
0x000000000041bc59 : dec dword ptr [rcx - 0x77] ; ret
0x000000000042511f : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x0000000000459a96 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000414c2d : dec dword ptr [rdi] ; test ah, bh ; ret 2
0x000000000040cb58 : dec dword ptr [rdi] ; test bh, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000444474 : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffb], ah ; ret 1
0x0000000000447eba : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000045c68e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004606a3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000425287 : dec esp ; out dx, eax ; int1 ; ret 0x26e9
0x0000000000430233 : div cl ; pop rcx ; ret
0x000000000041ebbb : enter -0x46b8, -0x25 ; or dh, byte ptr [rsi + 0x61] ; ret
0x000000000042af2c : enter -0x46b8, -0x25 ; ret 0xed0a
0x000000000043e1c0 : enter -0x46b8, -0x51 ; ret
0x0000000000436c22 : enter -0x46b8, -0xc ; ret
0x000000000043e13f : enter -0x47b8, -0x3a ; pop rsp ; xor dl, dh ; iretd ; jmp rax
0x0000000000445c6c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004602f9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ef46 : enter 0x4dbe, 9 ; ret 0x8148
0x0000000000443a6e : fadd dword ptr [rax + 0xf000000] ; xchg eax, ebx ; ret 0xd284
0x0000000000443aca : fadd dword ptr [rax + 0xf000000] ; xchg eax, edi ; ret 0xd284
0x00000000004461b9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000427d7c : fadd st(6) ; or byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000427d6c : fadd st(6) ; or byte ptr [rcx + 1], cl ; ret 0x149
0x000000000045c670 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000408d0e : fbstp dword ptr [rdi] ; add byte ptr [rax - 0x77], r9b ; ret 0xe6e8
0x0000000000429682 : fcmovne st(0), st(4) ; cld ; pop rdi ; ret
0x000000000040f3b2 : fcom dword ptr [rbx - 0x76b6b6cb] ; ret 0x314d
0x00000000004378ea : fcomp st(0), st(7) ; xchg rax, r13 ; ret 3
0x00000000004645b5 : fcos ; call rax
0x0000000000410add : fdivr qword ptr [rbx - 0x76b6b9a8] ; ret 0x314d
0x0000000000441b90 : fdivr qword ptr [rbx - 9] ; test dword ptr [rbp + 9], ecx ; ret 0x8148
0x0000000000434ae9 : ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000434af9 : ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 1] ; ret 0x8948
0x000000000042c1e9 : ficomp word ptr [rsi + 0x44] ; ret 0xeca7
0x0000000000440de0 : fidiv word ptr [rbx + 0x1493146] ; ret 0xb848
0x0000000000440dd0 : fidiv word ptr [rbx + 0x29493146] ; ret 0x149
0x000000000043ebb9 : fild qword ptr [rbp - 0x76b3bcd0] ; ret
0x000000000041b77a : fild qword ptr [rsp + rdi - 0x76b32e9e] ; ret
0x000000000045c64f : fild word ptr [rcx - 0x77] ; ret
0x00000000004257fb : fimul dword ptr [rax + 9] ; ret
0x00000000004198ef : fimul dword ptr [rax + 9] ; ror dword ptr [rax - 0x77], cl ; ret 0x2948
0x000000000043423b : fimul dword ptr [rax - 0x3f] ; ret 0x4838
0x000000000042cf6e : fimul dword ptr [rax - 9] ; ror byte ptr [rbp - 0x77], cl ; ret
0x000000000042cb6d : fimul dword ptr [rbp + 0x21] ; ret 0xf749
0x00000000004220f9 : fimul dword ptr [rbp + 9] ; ret
0x0000000000418787 : fimul dword ptr [rbp + 9] ; ret 0x949
0x0000000000426a61 : fimul dword ptr [rcx + 0x21] ; ret 0x8148
0x000000000041d6bb : fimul dword ptr [rcx + 0x21] ; ret 0x8149
0x0000000000417229 : fimul dword ptr [rcx - 0x42] ; add byte ptr [rax], al ; add byte ptr [rbp + rbx*4 + 9], cl ; ret
0x0000000000439589 : fimul dword ptr [rcx - 0x46] ; ret
0x0000000000416226 : fimul dword ptr [rcx - 0x77] ; ret 0x314d
0x0000000000416f5d : fimul word ptr [rax - 0x45] ; ret 0xa2a4
0x000000000041c2b4 : fimul word ptr [rax - 0x46] ; push rdx ; ret
0x000000000041f8ff : fimul word ptr [rbp - 0x77] ; ret 0x8149
0x0000000000428a08 : fimul word ptr [rcx - 0x45] ; ret 0x1ac2
0x0000000000425547 : fimul word ptr [rcx - 0x45] ; ret 0x7d5e
0x000000000041f364 : fisttp dword ptr [rax - 0x3f] ; ret
0x000000000041b277 : fisttp dword ptr [rax - 0x45] ; mov al, -0x55 ; xor byte ptr [rbp - 2], al ; ret
0x000000000042d9e3 : fisttp dword ptr [rax - 0x45] ; ret 0x42bd
0x0000000000418c69 : fisttp dword ptr [rax - 0x45] ; ret 0xef0b
0x0000000000417336 : fisttp dword ptr [rbp + 9] ; fisttp word ptr [rbp - 0x77] ; ret
0x00000000004385a0 : fisttp dword ptr [rbp + 9] ; ret 0x94d
0x000000000041e8e1 : fisttp dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x77] ; ret
0x000000000041ebae : fisttp dword ptr [rdx] ; jbe 0x41ec17 ; ret
0x000000000041ebbe : fisttp dword ptr [rdx] ; jbe 0x41ec27 ; ret
0x000000000042cb11 : fisttp word ptr [rbp + 0x31] ; dec byte ptr [rbp - 0x77] ; ret 0xc149
0x0000000000417339 : fisttp word ptr [rbp - 0x77] ; ret
0x000000000041e75c : fisttp word ptr [rbp - 0x77] ; ret 0x8149
0x000000000041edd3 : fisttp word ptr [rbp - 0x77] ; ret 0xf749
0x00000000004378eb : fisttp word ptr [rbx - 0x6b] ; ret 3
0x000000000041eb0b : fisttp word ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000416b0f : fisttp word ptr [rcx - 0x47] ; ret 0x3a9a
0x0000000000461248 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041726c : fldz ; ret
0x000000000045b0d7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041fb47 : fmul dword ptr [rax + 9] ; ret
0x0000000000443b9d : fmul dword ptr [rax - 0x7d] ; ret 0x4880
0x0000000000427bd6 : fmul dword ptr [rbp + 9] ; ret
0x000000000045b0d8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004379cf : fmul dword ptr [rcx - 9] ; ror byte ptr [rcx - 0x77], 1 ; ror byte ptr [rbp + 0x21], cl ; ret 0xf748
0x0000000000462f8c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041e8e4 : fmul qword ptr [rcx - 0x77] ; ret
0x000000000041fd01 : frstor dword ptr [rbx] ; lodsb al, byte ptr [rsi] ; leave ; push rdx ; ret 0x148
0x000000000041fd11 : frstor dword ptr [rbx] ; lodsb al, byte ptr [rsi] ; leave ; push rdx ; ret 0x2948
0x0000000000444c04 : fsubr st(0) ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfffc
0x0000000000401ac9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045b63c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004469a1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x000000000043f3fd : hlt ; mov esp, 0x894c7853 ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x666280 ; jmp rax
0x0000000000436c15 : hlt ; ret
0x000000000045acab : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042a65b : imul eax, dword ptr [r11 + 0x49], 0x149ca29 ; ret 0xb848
0x000000000042a65c : imul eax, dword ptr [rbx + 0x49], 0x149ca29 ; ret 0xb848
0x000000000040f4f3 : imul eax, dword ptr [rcx + rcx*4 + 0x45], 0xc445c7d4 ; jmp qword ptr [rdx]
0x00000000004248d5 : imul eax, dword ptr [rdx + 0x49], 0x29 ; ret 0xb848
0x00000000004364c5 : imul esi, dword ptr [rdi + 0x4c], 0x214ccf21 ; ret 0x94c
0x0000000000431cf4 : imul esp, dword ptr [rbp + 0x4c], 0x894cdf21 ; ret
0x0000000000431cf3 : imul esp, dword ptr cs:[rbp + 0x4c], 0x894cdf21 ; ret
0x000000000043ad55 : in al, -0x5b ; sti ; ret 0x8a96
0x000000000040a00a : in al, 0x2d ; ret 0x341c
0x0000000000445668 : in al, 0x2d ; ret 0xc226
0x000000000045da61 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000463ba8 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x0000000000464924 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp rsi
0x000000000045cd7c : in al, dx ; jmp 0x45cdf9
0x000000000045cd7b : in al, dx ; jmp 0x45cdfa
0x0000000000401e29 : in al, dx ; pop rbp ; ret
0x000000000040dd9c : in eax, -0x17 ; ret
0x000000000041726a : in eax, -1 ; fldz ; ret
0x000000000043f1ec : in eax, 0x34 ; ret 0x9e3a
0x000000000042d8a9 : in eax, 0x49 ; mov esp, 0x2a99e93f ; ret
0x0000000000463c02 : in eax, dx ; leave ; ret 0x3b81
0x0000000000431633 : in eax, dx ; push rsp ; mov ecx, 0x894cc844 ; ret
0x0000000000404df3 : inc dword ptr [rax - 0x4a] ; add dword ptr [rax - 0x76], eax ; cmp al, 0x25 ; ret
0x0000000000404ea4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404982 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d5f0 : inc dword ptr [rbx + 0x3a] ; ret
0x00000000004042bf : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004642bf : inc eax ; add eax, 0x91300000 ; cli ; jmp rax
0x0000000000464437 : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor bh, bh ; jmp rax
0x0000000000441e9e : inc ebp ; xchg eax, esi ; ret
0x0000000000405920 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; lcall ptr [rcx + rdi] ; ret
0x0000000000404600 : insb byte ptr [rdi], dx ; cmp eax, 0x37b98f2f ; cld ; ret 0xc7dc
0x00000000004140c6 : insb byte ptr [rdi], dx ; ret 0x8589
0x000000000041d016 : insb byte ptr [rdi], dx ; ret 0x9ae9
0x0000000000410cd1 : insb byte ptr [rdi], dx ; sub byte ptr [rbx + 0x40], cl ; wait ; sub byte ptr [rcx + rcx*2 - 0x77], al ; ret
0x0000000000432164 : insd dword ptr [rdi], dx ; mov ecx, 0x894cac94 ; ret
0x0000000000435bf6 : insd dword ptr [rdi], dx ; test eax, 0x894c8335 ; ret
0x0000000000457bb7 : int 0x5b
0x000000000043438a : int 0x6f
0x0000000000430234 : int1 ; pop rcx ; ret
0x000000000042528a : int1 ; ret 0x26e9
0x00000000004072c3 : int1 ; ret 0x59d
0x00000000004140fe : int1 ; ret 0x8589
0x000000000043e136 : iretd ; jmp rax
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x0000000000464248 : ja 0x464251 ; add byte ptr [rax], al ; xor cl, dl ; stc ; call qword ptr [rax]
0x0000000000406748 : jb 0x406711 ; ret
0x0000000000406e48 : jb 0x406e11 ; ret
0x0000000000408c4f : jb 0x408c18 ; ret
0x0000000000408cbe : jb 0x408c87 ; ret
0x0000000000421bd6 : jb 0x421bda ; ret
0x0000000000421be3 : jb 0x421be7 ; ret
0x0000000000421c00 : jb 0x421c04 ; ret
0x000000000045ab7e : jb 0x45abaf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000407ba3 : jbe 0x407b61 ; int1 ; ret 0x59d
0x000000000040faea : jbe 0x40fb06 ; add dl, dh ; or cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000041ebb0 : jbe 0x41ec15 ; ret
0x000000000041ebc0 : jbe 0x41ec25 ; ret
0x0000000000463bff : jbe 0x463bee ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x666280 ; jmp rax
0x000000000041621f : je 0x4161dd ; jp 0x416282 ; ret
0x000000000041622f : je 0x4161ed ; jp 0x416292 ; ret
0x0000000000416242 : je 0x416200 ; jp 0x4162a5 ; ret
0x0000000000416268 : je 0x416226 ; jp 0x4162cb ; ret
0x0000000000464fac : je 0x464fbe ; add byte ptr [rax], al ; nop ; xor bh, bh ; jmp rsi
0x00000000004296ec : jg 0x429759 ; wait ; and dword ptr [rcx], ebx ; ret
0x00000000004296fc : jg 0x429769 ; wait ; and dword ptr [rcx], ebx ; ret
0x0000000000405ae6 : jge 0x405ae7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000443a6d : jge 0x443a4f ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000443ac9 : jge 0x443aab ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000444c03 : jge 0x444be1 ; call 0x410eb4
0x0000000000451046 : jge 0x450fcb ; ret 0xffd5
0x0000000000451b10 : jge 0x451af0 ; shr cl, cl ; ret 0x3b
0x0000000000426438 : jl 0x4264a9 ; mov ch, -0xe ; dec byte ptr [rax + 0x29] ; ret 0x14c
0x0000000000426448 : jl 0x4264b9 ; mov ch, -0xe ; dec byte ptr [rax + 1] ; ret 0x8948
0x00000000004328e3 : jl 0x432962 ; out -0x5f, al ; wait ; sal dword ptr [rdi + 0x48], 1 ; ret 0x14c
0x00000000004328f3 : jl 0x432972 ; out -0x5f, al ; wait ; sal dword ptr [rdi + 0x48], 0x29 ; ret 0x8948
0x00000000004650b4 : jl 0x4650c7 ; add byte ptr [rax], al ; sub byte ptr [rbx - 1], dl ; call qword ptr [rdx]
0x0000000000419c58 : jle 0x419c21 ; ret
0x0000000000423ff0 : jle 0x423fb2 ; xchg byte ptr [rcx + 0x1485ecd], bh ; ret 0x148
0x0000000000424000 : jle 0x423fc2 ; xchg byte ptr [rcx + 0x29485ecd], bh ; ret 0x8948
0x000000000042652d : jle 0x426549 ; pop rdx ; adc ch, byte ptr [rip - 0x76b3384f] ; ret
0x000000000040151b : jmp 0x401377
0x0000000000405393 : jmp 0x405a54
0x0000000000404d74 : jmp 0x405a55
0x000000000040430e : jmp 0x405a56
0x0000000000407bd3 : jmp 0x409472
0x000000000040a404 : jmp 0x40a52d
0x000000000040b34d : jmp 0x40bd3b
0x000000000040e410 : jmp 0x40e47b
0x000000000040f487 : jmp 0x40f505
0x000000000042870c : jmp 0x4286c6
0x0000000000430457 : jmp 0x43041d
0x0000000000430467 : jmp 0x43042d
0x0000000000437687 : jmp 0x4430bf
0x0000000000452260 : jmp 0x4556e0
0x0000000000450164 : jmp 0x4556e1
0x0000000000451531 : jmp 0x4556e2
0x0000000000456ed3 : jmp 0x456f1b
0x0000000000458ebb : jmp 0x459927
0x0000000000458df8 : jmp 0x459929
0x0000000000459714 : jmp 0x45992a
0x000000000045af23 : jmp 0x45af88
0x000000000045cd7d : jmp 0x45cdf8
0x0000000000460bb6 : jmp 0x460e98
0x0000000000459a9a : jmp 0x4f515d96
0x000000000040f681 : jmp 0x7cdcb95e
0x0000000000445624 : jmp 0xffffffffb6067ced
0x000000000042cd60 : jmp 0xffffffffc24c1a69
0x0000000000410767 : jmp 0xffffffffc2ca4f88
0x000000000041720f : jmp 0xffffffffc2cabf3f
0x000000000041ac0a : jmp 0xffffffffc2caf925
0x0000000000422137 : jmp 0xffffffffc2cb6e52
0x000000000042cd30 : jmp 0xffffffffc2cc1a60
0x0000000000433ff7 : jmp 0xffffffffc2cc8d12
0x00000000004384ef : jmp 0xffffffffc2ccd20a
0x000000000041b3a7 : jmp 0xffffffffc3cafced
0x000000000041dea9 : jmp 0xffffffffc3cb27ef
0x0000000000422e9e : jmp 0xffffffffc3cb77af
0x000000000042353d : jmp 0xffffffffc3cb7e83
0x00000000004284d4 : jmp 0xffffffffc3cbcde5
0x000000000042bf56 : jmp 0xffffffffc3cc0767
0x00000000004309e2 : jmp 0xffffffffc3cc5328
0x0000000000433349 : jmp 0xffffffffc3cc7c8f
0x0000000000434044 : jmp 0xffffffffc3cc8d76
0x00000000004359d3 : jmp 0xffffffffc3cca2e4
0x000000000043691f : jmp 0xffffffffc3ccb265
0x000000000043b604 : jmp 0xffffffffc3ccff4a
0x000000000043bf5d : jmp 0xffffffffc3cd086e
0x000000000043c5f9 : jmp 0xffffffffc3cd0f3f
0x000000000043f982 : jmp 0xffffffffc3cd42c8
0x00000000004414a3 : jmp 0xffffffffc3cd5de9
0x000000000045c43f : jmp 0xffffffffc409fb06
0x0000000000405775 : jmp qword ptr [rax]
0x000000000042b088 : jmp qword ptr [rbx]
0x00000000004050ab : jmp qword ptr [rcx]
0x00000000004171be : jmp qword ptr [rdi]
0x0000000000402bd2 : jmp qword ptr [rdx]
0x000000000041f5b1 : jmp qword ptr [rsi]
0x00000000004017a7 : jmp rax
0x0000000000451638 : jmp rbx
0x000000000045206a : jmp rcx
0x0000000000451692 : jmp rdi
0x00000000004017e7 : jmp rdx
0x000000000041573c : jmp rsi
0x0000000000451948 : jmp rsp
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000404704 : jno 0x4046f8 ; adc r8d, dword ptr [rax] ; add dh, al ; add al, 0x25 ; ret
0x0000000000414188 : jnp 0x4141a7 ; ret
0x000000000041e1ec : jnp 0x41e20b ; ret
0x000000000041e1ec : jnp 0x41e20d ; ret
0x0000000000441b91 : jnp 0x441b8f ; test dword ptr [rbp + 9], ecx ; ret 0x8148
0x0000000000404aea : jns 0x404af5 ; jrcxz 0x404aae ; sub al, 0x47 ; pop rax ; ret 0xe6ba
0x0000000000409ea6 : jo 0x409eae ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444c8d : jo 0x444c95 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444ced : jo 0x444cf5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044583e : jo 0x44589f ; ret
0x000000000044af5e : jo 0x44af6a ; ret
0x000000000044cbce : jo 0x44cbda ; ret
0x000000000045011d : jo 0x450129 ; ret
0x0000000000457404 : jo 0x457465 ; ret
0x0000000000463c24 : jo 0x463bb4 ; ret 0xbe30
0x0000000000414134 : jp 0x414153 ; ret
0x0000000000416221 : jp 0x416280 ; ret
0x0000000000416231 : jp 0x416290 ; ret
0x0000000000416244 : jp 0x4162a3 ; ret
0x000000000041626a : jp 0x4162c9 ; ret
0x0000000000423775 : jp 0x42378f ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9840
0x0000000000423785 : jp 0x42379f ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9840
0x000000000042cd5f : jp 0x42cd4f ; add byte ptr [rbp + 9], cl ; ret 0x94d
0x0000000000404aec : jrcxz 0x404aac ; sub al, 0x47 ; pop rax ; ret 0xe6ba
0x000000000040fd01 : js 0x40fd65 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000442853 : lahf ; mov esi, 0x894c694c ; ret
0x0000000000451b0e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000405926 : lcall ptr [rcx + rdi] ; ret
0x0000000000452c0e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040ec16 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b3a0 : lea edx, dword ptr [rbx + r8*8 - 0x76b36dc9] ; ret
0x000000000043b3a1 : lea edx, dword ptr [rbx + rax*8 - 0x76b36dc9] ; ret
0x00000000004330e6 : lea esp, dword ptr [rax + 0x37] ; ret 0x148
0x00000000004330f6 : lea esp, dword ptr [rax + 0x37] ; ret 0x2948
0x000000000040ee38 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004576f9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402aca : lea esp, dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0x8589
0x000000000040ee37 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f4ad : leave ; adc eax, 0xffd4558b ; ret 0x5589
0x0000000000435bf5 : leave ; insd dword ptr [rdi], dx ; test eax, 0x894c8335 ; ret
0x000000000041fd04 : leave ; push rdx ; ret 0x148
0x000000000041fd14 : leave ; push rdx ; ret 0x2948
0x0000000000463c05 : leave ; ret 0x3b81
0x0000000000424b88 : leave ; ret 0xf462
0x0000000000430370 : leave ; sbb esp, dword ptr [rdx] ; sbb byte ptr [rcx + 0x29], cl ; ret 0xb848
0x000000000045046e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000464388 : lock or byte ptr [rax], al ; add al, dh ; and al, 0xfffffffffffffffe ; call qword ptr [rax]
0x0000000000401e23 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040b34c : lodsb al, byte ptr [rsi] ; jmp 0x40bd3c
0x000000000040b34b : lodsb al, byte ptr [rsi] ; jmp 0x40bd3d
0x000000000041fd03 : lodsb al, byte ptr [rsi] ; leave ; push rdx ; ret 0x148
0x000000000041fd13 : lodsb al, byte ptr [rsi] ; leave ; push rdx ; ret 0x2948
0x000000000040c74e : lodsb al, byte ptr [rsi] ; ret
0x000000000040bc4f : lodsb al, byte ptr [rsi] ; ret 0x1d4a
0x000000000040447e : lodsb al, byte ptr [rsi] ; ret 0x38b9
0x0000000000402acc : lodsb al, byte ptr [rsi] ; ret 0x8589
0x00000000004052b0 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000040447d : lodsb al, byte ptr es:[rsi] ; ret 0x38b9
0x0000000000402acb : lodsb al, byte ptr es:[rsi] ; ret 0x8589
0x0000000000464929 : lodsd eax, dword ptr [rsi] ; cli ; jmp rsi
0x000000000040c942 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000414c4c : lodsd eax, dword ptr [rsi] ; ret 2
0x0000000000419d77 : loop 0x419d58 ; ret 0x2149
0x000000000042c188 : loope 0x42c1f7 ; mov esi, 0x894c4bfa ; ret
0x000000000042cd5d : loope 0x42cd9a ; jp 0x42cd51 ; add byte ptr [rbp + 9], cl ; ret 0x94d
0x0000000000434071 : loope 0x434085 ; adc al, 0x70 ; add byte ptr [rbp + 9], cl ; ret
0x0000000000453475 : loope 0x453443 ; jmp 0x4556e3
0x0000000000408f62 : loopne 0x408fc8 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004296ea : loopne 0x429718 ; jg 0x42975b ; wait ; and dword ptr [rcx], ebx ; ret
0x00000000004296fa : loopne 0x429728 ; jg 0x42976b ; wait ; and dword ptr [rcx], ebx ; ret
0x00000000004455eb : loopne 0x44563b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004455ea : loopne 0x44563c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000447853 : loopne 0x4478a6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000456dfd : loopne 0x456e63 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004581e4 : loopne 0x458237 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000045a5e3 : loopne 0x45a5ec ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045af6e : loopne 0x45afbe ; add esp, 0x60 ; pop rbp ; ret
0x000000000045af6d : loopne 0x45afbf ; add esp, 0x60 ; pop rbp ; ret
0x000000000045b640 : loopne 0x45b647 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d302 : loopne 0x45d309 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462ccc : loopne 0x462d1b ; mov esp, ebp ; pop rbp ; ret
0x0000000000462ccb : loopne 0x462d1c ; mov esp, ebp ; pop rbp ; ret
0x0000000000462f1c : loopne 0x462f6b ; mov esp, ebp ; pop rbp ; ret
0x0000000000462f1b : loopne 0x462f6c ; mov esp, ebp ; pop rbp ; ret
0x000000000043dc34 : mov ah, -0x11 ; mov edx, 0x894c4a02 ; ret
0x000000000040cea1 : mov ah, -0x17 ; ret
0x000000000045103d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000451117 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000464305 : mov ah, -6 ; jmp rax
0x000000000044f0c5 : mov ah, 0x75 ; ret
0x0000000000457bd3 : mov al, -0x47 ; ret
0x000000000041b26d : mov al, -0x55 ; xor byte ptr [rbp - 2], al ; ret
0x000000000046037f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000455fed : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004645b0 : mov al, 0x11 ; add byte ptr [rax], al ; nop ; fcos ; call rax
0x0000000000443e7e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464338 : mov al, 7 ; add byte ptr [rax], al ; std ; std ; call rax
0x0000000000464378 : mov al, 8 ; add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], bl ; call rax
0x000000000046153d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046120a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046146d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000440dd1 : mov bl, 0x46 ; xor dword ptr [rcx + 0x29], ecx ; ret 0x149
0x0000000000440de1 : mov bl, 0x46 ; xor dword ptr [rcx + 1], ecx ; ret 0xb848
0x000000000042bb37 : mov bl, 0x4e ; ret 0x53a
0x0000000000448a65 : mov bl, 0x75 ; ret
0x00000000004309de : mov byte ptr [r9 - 0x3f], r9b ; jmp 0xffffffffc3cc532c
0x00000000004309df : mov byte ptr [rcx - 0x3f], cl ; jmp 0xffffffffc3cc532b
0x0000000000401803 : mov byte ptr [rip + 0x264aae], 1 ; ret
0x0000000000433632 : mov byte ptr [rsi + 0x48], 0x29 ; ret 0x8948
0x0000000000433622 : mov byte ptr [rsi + 0x48], 1 ; ret 0x148
0x0000000000405738 : mov byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042643a : mov ch, -0xe ; dec byte ptr [rax + 0x29] ; ret 0x14c
0x000000000042644a : mov ch, -0xe ; dec byte ptr [rax + 1] ; ret 0x8948
0x000000000041fc25 : mov ch, 0x11 ; and byte ptr [rip + 0x149f327], dh ; ret 0xb848
0x0000000000463af1 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x00000000004508bf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043ad6d : mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000407ba0 : mov cl, byte ptr [rbp - 0x2e] ; jbe 0x407b64 ; int1 ; ret 0x59d
0x000000000041d7ac : mov cs, word ptr [rcx + 0x29] ; ret 0x8b48
0x00000000004621d4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040bb91 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000461210 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000462c8a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040fb26 : mov dl, -5 ; xor dword ptr [rdx - 0x58], 0x89491f0d ; ret
0x0000000000461f01 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004195bb : mov ds, word ptr [rbp - 0x3e] ; sahf ; ret
0x000000000040efc4 : mov dword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000446fd9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000446baf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000045cd7a : mov dword ptr [rbp - 0x14], eax ; jmp 0x45cdfb
0x00000000004455e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b34a : mov dword ptr [rbp - 0x54], eax ; jmp 0x40bd3e
0x00000000004051e7 : mov dword ptr [rbp - 0x620], ecx ; call 0x4014b8
0x00000000004052c4 : mov dword ptr [rbp - 0x628], eax ; call 0x401568
0x0000000000458eb8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x45992a
0x0000000000401ac7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ae5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004263bc : mov dword ptr [rcx + 0x29], ecx ; ret 0x149
0x00000000004472b6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004263cc : mov dword ptr [rcx + 1], ecx ; ret 0x8b48
0x0000000000446e5d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000423772 : mov eax, 0x157a7fa3 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9840
0x000000000043304e : mov eax, 0x1fbd9434 ; ret 0x77fb
0x000000000042d8f9 : mov eax, 0x2a99e93f ; ret
0x0000000000424b85 : mov eax, 0x4ec9c0d5 ; ret 0xf462
0x0000000000429681 : mov eax, 0x5ffcccdb ; ret
0x000000000042d96e : mov eax, 0x9ba2909a ; xchg rax, rsi ; ret 0x486a
0x000000000042d9b0 : mov eax, 0x9ba2909a ; xchg rax, rsi ; ret 0x496a
0x000000000043ad52 : mov eax, 0xa5e493cc ; sti ; ret 0x8a96
0x0000000000419c55 : mov eax, 0xc57e79fa ; ret
0x000000000043e131 : mov eax, 0xd6325cc6 ; iretd ; jmp rax
0x000000000042df46 : mov eax, 0xe05cf42d ; ret 0x2567
0x00000000004302a3 : mov eax, 0xf1f68922 ; pop rcx ; ret
0x0000000000411aeb : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045adeb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045afbe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044526e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045cbf5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446fdc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045af6c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000462cca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446e5f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000411ae8 : mov eax, dword ptr [rbp - 0x40] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044699f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040e23b : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405ae9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000441b8d : mov eax, dword ptr [rcx + 0x37] ; fdivr qword ptr [rbx - 9] ; test dword ptr [rbp + 9], ecx ; ret 0x8148
0x0000000000446e5e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000405acd : mov eax, esi ; pop rbp ; ret
0x000000000041c59d : mov ebp, 0x619b1b6b ; ret 0x30c2
0x000000000041efc5 : mov ebp, 0xb4eee818 ; ret
0x0000000000453878 : mov ebp, 0xe19c53ba ; ret
0x0000000000430230 : mov ebp, 0xf1f68922 ; pop rcx ; ret
0x000000000043d7d5 : mov ebp, eax ; test bh, ah ; sbb dword ptr [rcx + 0x29], ecx ; ret 0xb848
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x000000000040fae8 : mov ebx, 0x1376c4 ; or cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000043c8ff : mov ebx, 0x1492abe ; ret 0xb848
0x0000000000439fe6 : mov ebx, 0x183067cf ; ret
0x0000000000433005 : mov ebx, 0x1fbd9434 ; ret 0x77fb
0x000000000043c8ef : mov ebx, 0x29492abe ; ret 0x149
0x000000000042d618 : mov ebx, 0x3a43ffe0 ; ret
0x0000000000421bd3 : mov ebx, 0x72b2db ; ret
0x0000000000410ade : mov ebx, 0x89494658 ; ret 0x314d
0x00000000004200a5 : mov ebx, 0x8b964d74 ; xchg eax, esp ; ret
0x0000000000431de7 : mov ebx, 0xbd9f9c7f ; ret
0x00000000004196c7 : mov ecx, 0x110439a6 ; ret 0xc921
0x0000000000423ff3 : mov ecx, 0x1485ecd ; ret 0x148
0x0000000000424003 : mov ecx, 0x29485ecd ; ret 0x8948
0x000000000042d5ee : mov ecx, 0x3a43ffe0 ; ret
0x000000000042c1e7 : mov ecx, 0x445ede51 ; ret 0xeca7
0x000000000041621e : mov ecx, 0x5b7ab874 ; ret
0x0000000000430462 : mov ecx, 0x5db80f26 ; jmp 0x430432
0x000000000041ebbd : mov ecx, 0x61760adb ; ret
0x00000000004296f9 : mov ecx, 0x667f25e0 ; wait ; and dword ptr [rcx], ebx ; ret
0x0000000000432165 : mov ecx, 0x894cac94 ; ret
0x0000000000431635 : mov ecx, 0x894cc844 ; ret
0x000000000041fd0f : mov ecx, 0xac23dd1a ; leave ; push rdx ; ret 0x2948
0x000000000042526f : mov ecx, 0xcea4abf6 ; ret
0x0000000000426498 : mov ecx, 0xe661d59 ; ret
0x0000000000446bac : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043d7d3 : mov ecx, edx ; mov ebp, eax ; test bh, ah ; sbb dword ptr [rcx + 0x29], ecx ; ret 0xb848
0x0000000000425f9e : mov edi, 0x2fb9e45e ; ret
0x000000000043f210 : mov edi, 0x34e5ae59 ; ret 0x9e3a
0x00000000004378e8 : mov edi, 0x4bdfdc15 ; xchg eax, ebp ; ret 3
0x0000000000401825 : mov edi, 0x665e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x666280 ; jmp rax
0x00000000004017e2 : mov edi, 0x666280 ; jmp rdx
0x0000000000421bfd : mov edi, 0x72b2db ; ret
0x00000000004195b7 : mov edi, 0x8ef5d539 ; pop rbp ; ret 0xc39e
0x000000000042d946 : mov edi, 0x9ba2909a ; xchg rax, rsi ; ret 0x486a
0x000000000042d936 : mov edi, 0x9ba2909a ; xchg rax, rsi ; ret 0x496a
0x000000000042bb33 : mov edi, 0xb31f53ab ; ret 0x53a
0x0000000000450117 : mov edi, 0xb8000055 ; wait ; jo 0x45012f ; ret
0x0000000000444c02 : mov edi, dword ptr [rbp - 0x28] ; call 0x410eb5
0x0000000000462f87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000464545 : mov edi, edi ; call qword ptr [rax]
0x0000000000462f86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000419710 : mov edx, 0x110439a6 ; ret 0xc921
0x000000000042c230 : mov edx, 0x445ede51 ; ret 0xeca7
0x0000000000424baf : mov edx, 0x4ec9c0d5 ; ret 0xf462
0x0000000000460b2e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004508db : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000416267 : mov edx, 0x5b7ab874 ; ret
0x00000000004181d4 : mov edx, 0x5b99d353 ; sub bh, bh ; ret
0x0000000000430452 : mov edx, 0x5db80f26 ; jmp 0x430422
0x000000000041ebad : mov edx, 0x61760adb ; ret
0x00000000004330e1 : mov edx, 0x6267268b ; lea esp, dword ptr [rax + 0x37] ; ret 0x148
0x00000000004330f1 : mov edx, 0x6267268b ; lea esp, dword ptr [rax + 0x37] ; ret 0x2948
0x00000000004296e9 : mov edx, 0x667f25e0 ; wait ; and dword ptr [rcx], ebx ; ret
0x000000000043dc36 : mov edx, 0x894c4a02 ; ret
0x000000000043b38d : mov edx, 0x8d424614 ; xchg eax, esp ; ret
0x000000000041fcff : mov edx, 0xac23dd1a ; leave ; push rdx ; ret 0x148
0x0000000000437689 : mov edx, 0xc5b80000 ; xchg eax, esi ; ret
0x000000000042525f : mov edx, 0xcea4abf6 ; ret
0x0000000000426488 : mov edx, 0xe661d59 ; ret
0x0000000000439fbc : mov esi, 0x183067cf ; ret
0x000000000043f1e9 : mov esi, 0x34e5ae59 ; ret 0x9e3a
0x0000000000451752 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000460b17 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041821d : mov esi, 0x5b99d353 ; sub bh, bh ; ret
0x000000000042c18a : mov esi, 0x894c4bfa ; ret
0x0000000000442855 : mov esi, 0x894c694c ; ret
0x000000000043b3d6 : mov esi, 0x8d424614 ; xchg eax, esp ; ret
0x00000000004195c7 : mov esi, 0x8ef5d539 ; pop rbp ; ret 0xc39e
0x000000000042bb46 : mov esi, 0xb31f53ab ; ret 0x53a
0x0000000000463bab : mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004052a8 : mov esi, dword ptr [0x666290] ; call 0x401569
0x0000000000444bff : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x28] ; call 0x410eb8
0x00000000004017e0 : mov esi, eax ; mov edi, 0x666280 ; jmp rdx
0x0000000000430232 : mov esi, esi ; int1 ; pop rcx ; ret
0x00000000004248d4 : mov esp, 0x2949426b ; ret 0xb848
0x000000000042d89b : mov esp, 0x2a99e93f ; ret
0x000000000043f3fe : mov esp, 0x894c7853 ; ret
0x000000000040f67d : mov esp, 0xe981c189 ; salc ; ret 0x7c9b
0x0000000000401e28 : mov esp, ebp ; pop rbp ; ret
0x000000000040447c : mov fs, word ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0x38b9
0x0000000000402b1e : mov fs, word ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret 0x8589
0x000000000040efc3 : mov qword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000405ae4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004472b5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cea0 : mov r12b, -0x17 ; ret
0x000000000040f67c : mov r12d, 0xe981c189 ; salc ; ret 0x7c9b
0x00000000004466d8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045adea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045afbd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044526d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045af6b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e23a : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405ae8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405acc : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000444c01 : mov rdi, qword ptr [rbp - 0x28] ; call 0x410eb6
0x0000000000444bfe : mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x28] ; call 0x410eb9
0x00000000004017df : mov rsi, rax ; mov edi, 0x666280 ; jmp rdx
0x0000000000401e27 : mov rsp, rbp ; pop rbp ; ret
0x0000000000425bd8 : mov ss, word ptr [rdx - 0x76b3e64f] ; ret
0x000000000045ab81 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041e1a9 : movabs al, byte ptr [0x148c82948ffffef] ; ret 0x8b48
0x0000000000419b64 : movabs al, byte ptr [0x2948f82948cf2948] ; ret 0x8948
0x000000000041e17d : movabs al, byte ptr [0x2948f82948ffffef] ; ret 0x8948
0x000000000041e163 : movabs al, byte ptr [0x2949f02948ffffef] ; ret 0x8b48
0x000000000045c2e1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x00000000004218c1 : movabs byte ptr [0x214df83149c88949], al ; ret
0x000000000044c3b8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004379a4 : movabs byte ptr [0xba49c2214c4bf06c], al ; ret 0x1e4b
0x0000000000410dd7 : movabs eax, dword ptr [0x2149fb2149f38949] ; ret 0x94d
0x0000000000427e12 : movabs eax, dword ptr [0xfff9dc85c70001b2] ; call rbx
0x0000000000410ada : movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, 0x10 ; fdivr qword ptr [rbx - 0x76b6b9a8] ; ret 0x314d
0x000000000044f605 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000423777 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x9840
0x000000000040f343 : movsd dword ptr [rdi], dword ptr [rsi] ; sbb byte ptr [rdi + 0x48], -0x77 ; ret
0x000000000043ad56 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; ret 0x8a96
0x00000000004621d3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040bb90 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046120f : movzx eax, al ; pop rbp ; ret
0x0000000000460928 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004645b4 : nop ; fcos ; call rax
0x0000000000431632 : nop ; in eax, dx ; push rsp ; mov ecx, 0x894cc844 ; ret
0x00000000004488a5 : nop ; ret
0x0000000000456cb2 : nop ; ret 0x148
0x0000000000456cc6 : nop ; ret 0x2948
0x0000000000431483 : nop ; sub byte ptr [rdx + 0x29499c11], ch ; ret 0x8b48
0x0000000000464fb0 : nop ; xor bh, bh ; jmp rsi
0x0000000000462fa8 : nop dword ptr [rax + rax] ; ret
0x000000000045103a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000451114 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000421e69 : or al, 0x40 ; xchg eax, edx ; adc cl, byte ptr cs:[rcx + 0x29] ; ret 0x149
0x0000000000421e79 : or al, 0x40 ; xchg eax, edx ; adc cl, byte ptr cs:[rcx + 1] ; ret 0xb848
0x000000000040bc4c : or bh, al ; lodsb al, byte ptr [rsi] ; ret 0x1d4a
0x000000000045c9a5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000046434d : or bh, dh ; call qword ptr [rax]
0x000000000042b955 : or bl, byte ptr [rsp + rbp*4 + 0x29492bdc] ; ret 0x8b48
0x0000000000446bb0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041b4ac : or byte ptr [rax - 0x77], cl ; ret
0x0000000000464e85 : or byte ptr [rax], al ; add al, bh ; sub bh, bh ; call qword ptr [rbx]
0x0000000000464389 : or byte ptr [rax], al ; add al, dh ; and al, 0xfffffffffffffffe ; call qword ptr [rax]
0x0000000000464379 : or byte ptr [rax], al ; add byte ptr [rax], dl ; sbb al, -2 ; call rax
0x0000000000458498 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000464e84 : or byte ptr [rax], r8b ; add al, bh ; sub bh, bh ; call qword ptr [rbx]
0x0000000000427d7e : or byte ptr [rcx + 0x29], cl ; ret 0xb848
0x000000000040c078 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000427d6e : or byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000422e9f : or byte ptr [rcx - 0x77], cl ; ret
0x000000000043ef43 : or byte ptr [rdi + 0x34], al ; enter 0x4dbe, 9 ; ret 0x8148
0x0000000000463bfd : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040faee : or cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000041ebaf : or dh, byte ptr [rsi + 0x61] ; ret
0x000000000045c9a4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000408587 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000407dd4 : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x00000000004472b4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c2e6 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410523 : or eax, 0x89494146 ; ret
0x0000000000410533 : or eax, 0x894c4146 ; ret
0x0000000000464439 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor bh, bh ; jmp rax
0x0000000000442851 : or eax, dword ptr [rax] ; lahf ; mov esi, 0x894c694c ; ret
0x0000000000422334 : or ebx, edx ; ret
0x0000000000434aec : or ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000434afc : or ecx, dword ptr [rax + 1] ; ret 0x8948
0x0000000000446e5b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000434072 : or edx, dword ptr [rax + rsi*2] ; add byte ptr [rbp + 9], cl ; ret
0x0000000000463c00 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x00000000004328f5 : out -0x5f, al ; wait ; sal dword ptr [rdi + 0x48], 0x29 ; ret 0x8948
0x00000000004328e5 : out -0x5f, al ; wait ; sal dword ptr [rdi + 0x48], 1 ; ret 0x14c
0x0000000000441e66 : out -1, eax ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000440c52 : out -1, eax ; dec dword ptr [rax + 9] ; ret
0x0000000000442512 : out -1, eax ; dec dword ptr [rcx + 9] ; ret
0x0000000000452a1b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000046120c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041726d : out dx, al ; ret
0x000000000043ea09 : out dx, al ; salc ; ret 0xe51b
0x000000000046153f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425289 : out dx, eax ; int1 ; ret 0x26e9
0x00000000004140fd : out dx, eax ; int1 ; ret 0x8589
0x0000000000457bd2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000043dc35 : out dx, eax ; mov edx, 0x894c4a02 ; ret
0x0000000000463baa : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x0000000000460b19 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000453b05 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000448756 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000453b50 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004274e8 : outsb dx, byte ptr [rsi] ; sar dword ptr [rsi + rbp + 0x2949a009], cl ; ret
0x0000000000459d21 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000460b1c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045ab7c : pop ax ; jb 0x45abb1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004103b7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000462f9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408f64 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004103b9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000462f9e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408f66 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000462fa0 : pop r14 ; pop r15 ; ret
0x000000000040ee3c : pop r14 ; pop rbp ; ret
0x0000000000408f68 : pop r15 ; pop rbp ; ret
0x0000000000462fa2 : pop r15 ; ret
0x0000000000404ad3 : pop r8 ; ret 0x1b2
0x0000000000402a93 : pop r8 ; ret 0x8589
0x0000000000404aef : pop r8 ; ret 0xe6ba
0x0000000000443dfb : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000464d08 : pop rax ; and bh, bh ; jmp qword ptr [rbx]
0x000000000045ab7d : pop rax ; jb 0x45abb0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040f4db : pop rax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ad4 : pop rax ; ret 0x1b2
0x0000000000402a94 : pop rax ; ret 0x8589
0x0000000000404af0 : pop rax ; ret 0xe6ba
0x0000000000430456 : pop rbp ; jmp 0x43041e
0x0000000000430466 : pop rbp ; jmp 0x43042e
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x264aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x666280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x666280 ; jmp rdx
0x0000000000462f9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004103ba : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000462f9f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004508c2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000044cb95 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004508de : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401795 : pop rbp ; ret
0x00000000004195bc : pop rbp ; ret 0xc39e
0x0000000000441e06 : pop rbx ; adc cl, byte ptr [rax + 0x29] ; ret 0x14c
0x0000000000441e16 : pop rbx ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000043362f : pop rbx ; mov byte ptr [rsi + 0x48], 0x29 ; ret 0x8948
0x000000000043361f : pop rbx ; mov byte ptr [rsi + 0x48], 1 ; ret 0x148
0x0000000000408f63 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f4dc : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ee3b : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040573c : pop rbx ; pop rbp ; ret
0x0000000000416222 : pop rbx ; ret
0x0000000000463af4 : pop rbx ; ret 0x3956
0x00000000004181d8 : pop rbx ; sub bh, bh ; ret
0x0000000000434ae7 : pop rcx ; push rsi ; ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000434af7 : pop rcx ; push rsi ; ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 1] ; ret 0x8948
0x0000000000430236 : pop rcx ; ret
0x00000000004508c3 : pop rcx ; ret 0x1b2
0x000000000044af96 : pop rcx ; ret 0x8589
0x00000000004508df : pop rcx ; ret 0x8b48
0x0000000000452c10 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000043f1ea : pop rcx ; scasb al, byte ptr [rdi] ; in eax, 0x34 ; ret 0x9e3a
0x0000000000408f69 : pop rdi ; pop rbp ; ret
0x0000000000429685 : pop rdi ; ret
0x000000000042652f : pop rdx ; adc ch, byte ptr [rip - 0x76b3384f] ; ret
0x00000000004551a2 : pop rdx ; ret
0x0000000000431631 : pop rsi ; nop ; in eax, dx ; push rsp ; mov ecx, 0x894cc844 ; ret
0x0000000000421e68 : pop rsi ; or al, 0x40 ; xchg eax, edx ; adc cl, byte ptr cs:[rcx + 0x29] ; ret 0x149
0x0000000000421e78 : pop rsi ; or al, 0x40 ; xchg eax, edx ; adc cl, byte ptr cs:[rcx + 1] ; ret 0xb848
0x0000000000408f67 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000462fa1 : pop rsi ; pop r15 ; ret
0x000000000040ee3d : pop rsi ; pop rbp ; ret
0x000000000042c1ea : pop rsi ; ret 0xeca7
0x00000000004052fe : pop rsi ; ret 0xffff
0x0000000000405281 : pop rsp ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040b6ef : pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x00000000004103b8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000462f9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408f65 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044af95 : pop rsp ; pop rcx ; ret 0x8589
0x000000000043e133 : pop rsp ; xor dl, dh ; iretd ; jmp rax
0x0000000000462055 : popfq ; ret 0xd284
0x0000000000440d23 : popfq ; shl bh, -1 ; dec dword ptr [rax + 9] ; ret
0x0000000000436150 : popfq ; shr cl, -1 ; dec dword ptr [rcx + 9] ; ret
0x0000000000426239 : popfq ; sub ch, -1 ; dec dword ptr [rax + 9] ; ret
0x00000000004508c0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000452aaa : push -0x75425eeb ; push rbp ; ret
0x000000000044f608 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000463bfe : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000464377 : push qword ptr [rax + 0x10000008] ; sbb al, -2 ; call rax
0x0000000000464337 : push qword ptr [rax + 0x40000007] ; std ; std ; call rax
0x00000000004645af : push qword ptr [rax - 0x6fffffef] ; fcos ; call rax
0x000000000046452f : push qword ptr [rax - 0x7ffffff1] ; xchg edi, edi ; call rax
0x000000000040efc6 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464387 : push rax ; or byte ptr [rax], al ; add al, dh ; and al, 0xfffffffffffffffe ; call qword ptr [rax]
0x0000000000401a82 : push rax ; pop rbp ; ret
0x0000000000443b9c : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4880
0x0000000000401824 : push rbp ; mov edi, 0x665e20 ; mov rbp, rsp ; call rax
0x0000000000452aaf : push rbp ; ret
0x0000000000452a46 : push rbp ; ret 0xd284
0x0000000000443df6 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x000000000045103f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000451119 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040f3af : push rbx ; cmp dword ptr [rax], ebx ; fcom dword ptr [rbx - 0x76b6b6cb] ; ret 0x314d
0x000000000042c1e8 : push rcx ; ficomp word ptr [rsi + 0x44] ; ret 0xeca7
0x0000000000460b1b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403513 : push rdi ; ret
0x0000000000464295 : push rdx ; cli ; jmp qword ptr [rax]
0x000000000041c2b7 : push rdx ; ret
0x000000000041fd06 : push rdx ; ret 0x148
0x000000000041fd16 : push rdx ; ret 0x2948
0x0000000000434ae8 : push rsi ; ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000434af8 : push rsi ; ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 1] ; ret 0x8948
0x0000000000431634 : push rsp ; mov ecx, 0x894cc844 ; ret
0x0000000000464869 : pushfq ; cli ; call qword ptr [rcx]
0x0000000000404eaa : pushfq ; ret 0xd284
0x0000000000404acf : rcl byte ptr [rbp + 0x58472cb9] ; ret 0x1b2
0x0000000000404477 : rcl dword ptr [rip - 0x71480000], cl ; lodsb al, byte ptr es:[rsi] ; ret 0x38b9
0x00000000004645c4 : rcr bh, -1 ; call qword ptr [rax]
0x0000000000401361 : ret
0x0000000000447ebe : ret 0
0x00000000004437b5 : ret 0x100
0x0000000000418f44 : ret 0x148
0x000000000041b65c : ret 0x149
0x0000000000421ee5 : ret 0x14c
0x0000000000422f1f : ret 0x14d
0x0000000000453c14 : ret 0x1a
0x00000000004289fb : ret 0x1ac2
0x0000000000448e8d : ret 0x1add
0x0000000000404ad5 : ret 0x1b2
0x000000000040adb3 : ret 0x1d4a
0x00000000004379ad : ret 0x1e4b
0x000000000041077e : ret 0x2148
0x000000000040f44b : ret 0x2149
0x0000000000416567 : ret 0x214c
0x00000000004168d5 : ret 0x214d
0x0000000000415084 : ret 0x217e
0x0000000000463cd9 : ret 0x21c0
0x000000000041469c : ret 0x225
0x00000000004497da : ret 0x23da
0x000000000041e1f1 : ret 0x24e
0x000000000042df4b : ret 0x2567
0x0000000000414b34 : ret 0x258
0x0000000000401722 : ret 0x264a
0x0000000000401522 : ret 0x264b
0x000000000042528b : ret 0x26e9
0x00000000004564d8 : ret 0x279e
0x000000000040858a : ret 0x2948
0x000000000042fb1b : ret 0x2949
0x000000000041c2c7 : ret 0x294c
0x000000000042fb2a : ret 0x294d
0x0000000000452c14 : ret 0x2a
0x0000000000451042 : ret 0x2d50
0x000000000046067e : ret 0x3040
0x000000000041c5a3 : ret 0x30c2
0x00000000004172b6 : ret 0x3148
0x000000000041730c : ret 0x3149
0x000000000040f21e : ret 0x314c
0x000000000040f1eb : ret 0x314d
0x0000000000410c84 : ret 0x32f
0x0000000000418bab : ret 0x339e
0x000000000040a00c : ret 0x341c
0x000000000040447f : ret 0x38b9
0x0000000000463af5 : ret 0x3956
0x0000000000416aff : ret 0x3a9a
0x0000000000451b14 : ret 0x3b
0x0000000000463c06 : ret 0x3b81
0x0000000000408bbd : ret 0x3de8
0x000000000042cba4 : ret 0x3dfb
0x000000000044eb75 : ret 0x3e
0x000000000042d0a2 : ret 0x40a1
0x000000000040c284 : ret 0x4240
0x000000000042d9d9 : ret 0x42bd
0x0000000000460d78 : ret 0x42e8
0x000000000045910b : ret 0x463f
0x0000000000451fb1 : ret 0x4802
0x0000000000419c1b : ret 0x4812
0x0000000000460b1e : ret 0x4815
0x000000000043423e : ret 0x4838
0x0000000000453b06 : ret 0x4861
0x000000000042d94d : ret 0x486a
0x000000000042387d : ret 0x486b
0x0000000000418845 : ret 0x487e
0x0000000000443ba0 : ret 0x4880
0x0000000000443794 : ret 0x48b5
0x0000000000407a20 : ret 0x48c0
0x0000000000401c8b : ret 0x48f0
0x000000000041c669 : ret 0x492d
0x00000000004374a7 : ret 0x492e
0x000000000042d93d : ret 0x496a
0x000000000044c3c1 : ret 0x4b
0x0000000000408fcb : ret 0x4cc0
0x0000000000454a18 : ret 0x4cf0
0x000000000041ed9d : ret 0x4d17
0x0000000000431efb : ret 0x4d2d
0x00000000004164de : ret 0x4de8
0x0000000000459a9c : ret 0x4f0b
0x000000000042bb39 : ret 0x53a
0x000000000040f4b3 : ret 0x5589
0x0000000000410978 : ret 0x58
0x00000000004512ca : ret 0x5966
0x00000000004062cc : ret 0x59d
0x00000000004586f7 : ret 0x5bc6
0x0000000000462c8f : ret 0x61
0x00000000004125f9 : ret 0x611c
0x000000000040fac3 : ret 0x6348
0x00000000004046cf : ret 0x6662
0x000000000040e19b : ret 0x69b9
0x0000000000448526 : ret 0x6a8a
0x00000000004094d3 : ret 0x6e12
0x0000000000433ed7 : ret 0x6ff
0x0000000000408c86 : ret 0x74e8
0x00000000004481de : ret 0x77a8
0x000000000043300a : ret 0x77fb
0x0000000000449341 : ret 0x7a8a
0x000000000044ffbb : ret 0x7b7f
0x000000000040f683 : ret 0x7c9b
0x000000000042553a : ret 0x7d5e
0x0000000000443e01 : ret 0x80
0x000000000040b6f6 : ret 0x8041
0x0000000000456bb2 : ret 0x8141
0x000000000040c281 : ret 0x8148
0x00000000004168de : ret 0x8149
0x0000000000451ed4 : ret 0x822d
0x00000000004042c3 : ret 0x8445
0x0000000000402a95 : ret 0x8589
0x0000000000404a51 : ret 0x858a
0x0000000000407413 : ret 0x8835
0x00000000004130ea : ret 0x8912
0x0000000000448f53 : ret 0x8940
0x000000000040c295 : ret 0x8948
0x000000000042fb2d : ret 0x8949
0x000000000045f13f : ret 0x894a
0x0000000000420181 : ret 0x894c
0x0000000000448757 : ret 0x8961
0x00000000004069cd : ret 0x8995
0x0000000000411100 : ret 0x89a2
0x000000000044342d : ret 0x89b5
0x000000000042c3fc : ret 0x89d6
0x0000000000402da4 : ret 0x89dc
0x0000000000460738 : ret 0x8a44
0x0000000000460635 : ret 0x8a4a
0x000000000043ad58 : ret 0x8a96
0x00000000004080dc : ret 0x8b48
0x0000000000443c37 : ret 0x93e8
0x000000000045c672 : ret 0x941
0x000000000040f16d : ret 0x948
0x000000000040fa6f : ret 0x949
0x000000000040f1ee : ret 0x94c
0x000000000040fc74 : ret 0x94d
0x0000000000423778 : ret 0x9840
0x000000000041d017 : ret 0x9ae9
0x000000000043f1ee : ret 0x9e3a
0x000000000040362b : ret 0x9ee
0x0000000000416f50 : ret 0xa2a4
0x000000000045111c : ret 0xa30b
0x0000000000424903 : ret 0xa30e
0x000000000041aeed : ret 0xa70d
0x0000000000463bb0 : ret 0xa88f
0x000000000045ccbf : ret 0xac60
0x0000000000432cbd : ret 0xad20
0x00000000004049b2 : ret 0xb0
0x0000000000419bff : ret 0xb212
0x00000000004045eb : ret 0xb2dc
0x0000000000411cad : ret 0xb4fe
0x0000000000452a20 : ret 0xb740
0x0000000000406df3 : ret 0xb83a
0x000000000040b603 : ret 0xb848
0x000000000040f43b : ret 0xb849
0x0000000000423fef : ret 0xb87e
0x0000000000450c50 : ret 0xb940
0x0000000000419608 : ret 0xb948
0x00000000004605c2 : ret 0xb94a
0x0000000000408a92 : ret 0xb995
0x000000000041168d : ret 0xb9a2
0x00000000004379aa : ret 0xba49
0x000000000043251e : ret 0xbc4c
0x00000000004248c2 : ret 0xbc61
0x0000000000463c27 : ret 0xbe30
0x000000000041d283 : ret 0xbe48
0x000000000041c5f7 : ret 0xbe49
0x000000000042320b : ret 0xbf48
0x0000000000437b71 : ret 0xbf49
0x00000000004017c5 : ret 0xc148
0x0000000000422669 : ret 0xc149
0x000000000044566a : ret 0xc226
0x00000000004195bd : ret 0xc39e
0x0000000000462ed2 : ret 0xc493
0x000000000041dcfa : ret 0xc769
0x0000000000404607 : ret 0xc7dc
0x00000000004196cc : ret 0xc921
0x00000000004611c9 : ret 0xca21
0x0000000000462c95 : ret 0xccb2
0x0000000000404989 : ret 0xd284
0x000000000045ed85 : ret 0xd618
0x000000000041c54a : ret 0xd7f4
0x0000000000402242 : ret 0xde44
0x0000000000418ea6 : ret 0xe0eb
0x000000000040c081 : ret 0xe280
0x000000000043ea0b : ret 0xe51b
0x0000000000404af1 : ret 0xe6ba
0x0000000000408d14 : ret 0xe6e8
0x00000000004528f2 : ret 0xe940
0x0000000000453b51 : ret 0xe961
0x000000000044997d : ret 0xea51
0x0000000000462c87 : ret 0xea81
0x0000000000404f60 : ret 0xeba8
0x000000000042c1ec : ret 0xeca7
0x000000000042af30 : ret 0xed0a
0x000000000045570c : ret 0xee8
0x0000000000418c5f : ret 0xef0b
0x0000000000403d36 : ret 0xf
0x0000000000446e45 : ret 0xf281
0x0000000000451757 : ret 0xf41
0x0000000000424b8a : ret 0xf462
0x0000000000416570 : ret 0xf748
0x00000000004165a3 : ret 0xf749
0x00000000004536a5 : ret 0xf7f3
0x000000000043fecf : ret 0xf890
0x000000000046074a : ret 0xfa0d
0x00000000004593da : ret 0xfa80
0x0000000000451e2e : ret 0xfc75
0x00000000004116c3 : ret 0xfea0
0x000000000045369f : ret 0xffa5
0x0000000000451e28 : ret 0xffc4
0x0000000000451048 : ret 0xffd5
0x0000000000451122 : ret 0xffd8
0x0000000000451eda : ret 0xffd9
0x00000000004512c4 : ret 0xffe0
0x000000000044ffb5 : ret 0xfffa
0x0000000000444c07 : ret 0xfffc
0x00000000004051ef : ret 0xffff
0x0000000000404f5a : ret 1
0x0000000000414c31 : ret 2
0x00000000004378ee : ret 3
0x000000000040c4e9 : ret 6
0x0000000000454e14 : ret 8
0x0000000000460afd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000045d61c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a4f3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004642c0 : rol byte ptr [rip - 0x6ed00000], -6 ; jmp rax
0x0000000000464300 : rol byte ptr [rsi], 0 ; add byte ptr [rax], dl ; mov ah, -6 ; jmp rax
0x0000000000460afc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000411ae9 : ror byte ptr [r11 - 0x1376b800], 0x5d ; ret
0x000000000043e1bd : ror byte ptr [rax + 1], 1 ; enter -0x46b8, -0x51 ; ret
0x0000000000436c1f : ror byte ptr [rax + 1], 1 ; enter -0x46b8, -0xc ; ret
0x000000000045ab74 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000428d6b : ror byte ptr [rax + 9], 1 ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x000000000042af3c : ror byte ptr [rax - 0x48], -0x25 ; ret 0xed0a
0x000000000040bb92 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000423b3d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040d2a7 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409ea2 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x409eb2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443df7 : ror byte ptr [rax - 0x7f], 1 ; ret 0x58
0x000000000041ac60 : ror byte ptr [rbp + 0x21], 1 ; ret 0x94d
0x00000000004379d5 : ror byte ptr [rbp + 0x21], cl ; ret 0xf748
0x00000000004165ea : ror byte ptr [rbp + 0x21], cl ; ror byte ptr [rbp + 9], 1 ; ret
0x000000000042cfb2 : ror byte ptr [rbp + 0x31], 1 ; ror dword ptr [rax - 0x75], 0x15 ; ret
0x00000000004165ed : ror byte ptr [rbp + 9], 1 ; ret
0x000000000042cb6a : ror byte ptr [rbp - 0x77], 1 ; fimul dword ptr [rbp + 0x21] ; ret 0xf749
0x0000000000418fbd : ror byte ptr [rbp - 0x77], cl ; ret
0x0000000000411aea : ror byte ptr [rbx - 0x1376b800], 0x5d ; ret
0x0000000000464438 : ror byte ptr [rbx], 0 ; add byte ptr [rax], al ; xor bh, bh ; jmp rax
0x00000000004257a6 : ror byte ptr [rcx + 9], 1 ; ret
0x00000000004196e8 : ror byte ptr [rcx - 0x47], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rcx + rdx], eax ; ret 0xc921
0x000000000042c208 : ror byte ptr [rcx - 0x47], cl ; push rcx ; ficomp word ptr [rsi + 0x44] ; ret 0xeca7
0x0000000000416caa : ror byte ptr [rcx - 0x47], cl ; ret
0x00000000004379d2 : ror byte ptr [rcx - 0x77], 1 ; ror byte ptr [rbp + 0x21], cl ; ret 0xf748
0x000000000041c4ce : ror byte ptr [rcx - 9], 1 ; ror dword ptr [rcx - 9], cl ; ror byte ptr [rbp + 9], 1 ; ret
0x0000000000446e5a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000424b87 : ror cl, 0x4e ; ret 0xf462
0x000000000041c6d7 : ror dword ptr [rax - 0x3f], cl ; ret
0x000000000043e12f : ror dword ptr [rax - 0x48], -0x3a ; pop rsp ; xor dl, dh ; iretd ; jmp rax
0x000000000042cfb5 : ror dword ptr [rax - 0x75], 0x15 ; ret
0x0000000000417898 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000438e5d : ror dword ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004198f2 : ror dword ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000417284 : ror dword ptr [rbp + 0x21], cl ; ret
0x000000000041edd0 : ror dword ptr [rbp + 0x31], cl ; fisttp word ptr [rbp - 0x77] ; ret 0xf749
0x000000000041ac57 : ror dword ptr [rbp - 0x77], 1 ; ret
0x0000000000419c3e : ror dword ptr [rbp - 0x77], 1 ; ret 0x214d
0x000000000041c492 : ror dword ptr [rbp - 0x77], 1 ; ret 0x94d
0x0000000000418f70 : ror dword ptr [rbp - 0x77], 1 ; ret 0xf749
0x000000000041c0ce : ror dword ptr [rbp - 0x77], cl ; ret 0xf749
0x0000000000417333 : ror dword ptr [rcx + 0x21], cl ; fisttp dword ptr [rbp + 9] ; fisttp word ptr [rbp - 0x77] ; ret
0x0000000000424fca : ror dword ptr [rcx + 0x21], cl ; ret
0x00000000004226af : ror dword ptr [rcx - 0x3f], -0x1f ; add ecx, dword ptr [rbp - 0x77] ; ret 0xc149
0x0000000000410764 : ror dword ptr [rcx - 0x3f], 1 ; jmp 0xffffffffc2ca4f8b
0x000000000041720c : ror dword ptr [rcx - 0x3f], 1 ; jmp 0xffffffffc2cabf42
0x000000000042cd2d : ror dword ptr [rcx - 0x3f], 1 ; jmp 0xffffffffc2cc1a63
0x000000000042004f : ror dword ptr [rcx - 0x3f], cl ; ret
0x0000000000439576 : ror dword ptr [rcx - 0x46], cl ; ret
0x000000000042fb18 : ror dword ptr [rcx - 0x77], cl ; ret 0x2949
0x0000000000457890 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041ac54 : ror dword ptr [rcx - 9], 1 ; ror dword ptr [rbp - 0x77], 1 ; ret
0x000000000041c4d1 : ror dword ptr [rcx - 9], cl ; ror byte ptr [rbp + 9], 1 ; ret
0x0000000000419c70 : ror dword ptr [rcx - 9], cl ; ror dword ptr [rbp + 0x21], cl ; ret
0x00000000004195be : sahf ; ret
0x0000000000445c46 : sahf ; ret 0xd284
0x00000000004372fc : sahf ; sbb dword ptr [rcx - 0x27ab46f0], ebp ; ret
0x0000000000407ba1 : sal byte ptr [r14 - 0x47], cl ; int1 ; ret 0x59d
0x0000000000463c23 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000442a7e : sal byte ptr [rdx + 0x4c66b3f9], -0x77 ; ret
0x0000000000407ba2 : sal byte ptr [rsi - 0x47], cl ; int1 ; ret 0x59d
0x000000000040179e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; and byte ptr [rdx + 0x66], 0 ; jmp rax
0x00000000004328f8 : sal dword ptr [rdi + 0x48], 0x29 ; ret 0x8948
0x00000000004328e8 : sal dword ptr [rdi + 0x48], 1 ; ret 0x14c
0x000000000043e135 : salc ; iretd ; jmp rax
0x000000000040e19a : salc ; ret 0x69b9
0x000000000040f682 : salc ; ret 0x7c9b
0x000000000040d550 : salc ; ret 0x8589
0x000000000043ea0a : salc ; ret 0xe51b
0x00000000004274e9 : sar dword ptr [rsi + rbp + 0x2949a009], cl ; ret
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x0000000000452c11 : sar ebp, -0x17 ; ret 0x2a
0x000000000046424d : sar ecx, 1 ; call qword ptr [rax]
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000414135 : sbb ah, byte ptr [rsi] ; ret
0x000000000044342b : sbb al, -0x44 ; ret 0x89b5
0x000000000046437d : sbb al, -2 ; call rax
0x0000000000464654 : sbb al, 0 ; add byte ptr [rax], al ; sbb ch, cl ; stc ; jmp rax
0x00000000004021b6 : sbb al, 0x39 ; ret
0x0000000000457bd0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000410768 : sbb byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000430373 : sbb byte ptr [rcx + 0x29], cl ; ret 0xb848
0x000000000040f344 : sbb byte ptr [rdi + 0x48], -0x77 ; ret
0x0000000000404acd : sbb byte ptr [rdx], bl ; rcl byte ptr [rbp + 0x58472cb9] ; ret 0x1b2
0x0000000000463c1e : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x463bba ; ret 0xbe30
0x0000000000464658 : sbb ch, cl ; stc ; jmp rax
0x0000000000452b11 : sbb cl, ch ; ret
0x000000000045a3c3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042ea24 : sbb dword ptr [rcx + 0x29], ecx ; ret 0x149
0x000000000043d7d9 : sbb dword ptr [rcx + 0x29], ecx ; ret 0xb848
0x000000000042ea34 : sbb dword ptr [rcx + 1], ecx ; ret 0xb848
0x00000000004372fd : sbb dword ptr [rcx - 0x27ab46f0], ebp ; ret
0x0000000000456c20 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000402162 : sbb edi, dword ptr [rcx] ; ret
0x0000000000430371 : sbb esp, dword ptr [rdx] ; sbb byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000401805 : scasb al, byte ptr [rdi] ; add byte ptr es:[rcx], al ; ret
0x000000000043f1eb : scasb al, byte ptr [rdi] ; in eax, 0x34 ; ret 0x9e3a
0x0000000000463c01 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x00000000004034a2 : scasb al, byte ptr [rdi] ; ret
0x000000000043f3fa : scasb al, byte ptr [rdi] ; wait ; adc esp, esi ; mov esp, 0x894c7853 ; ret
0x0000000000403b6a : scasd eax, dword ptr [rdi] ; ret
0x0000000000440d24 : shl bh, -1 ; dec dword ptr [rax + 9] ; ret
0x0000000000422f1b : shl dword ptr [rbp + 0x49], 0x29 ; ret 0x14d
0x0000000000422f2b : shl dword ptr [rbp + 0x49], 1 ; ret 0x8b48
0x00000000004046ee : shl dword ptr [rdx + 0x66], 0 ; add dh, al ; add al, 0x25 ; ret 0x6662
0x00000000004046c7 : shl dword ptr [rdx + 0x66], 0 ; add esi, eax ; add al, 0x25 ; ret 0x6662
0x0000000000425b2e : shr ch, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000436151 : shr cl, -1 ; dec dword ptr [rcx + 9] ; ret
0x0000000000451b12 : shr cl, cl ; ret 0x3b
0x000000000043153d : shr dl, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004314ac : shr dl, -1 ; dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x00000000004221f4 : shr dword ptr [rip + 0x49fb8949], -0x3f ; ret
0x000000000046424e : stc ; call qword ptr [rax]
0x0000000000464256 : stc ; jmp rax
0x000000000040b6ee : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000044f94d : stc ; ret 0x77a8
0x000000000046433e : std ; call rax
0x0000000000464336 : std ; push qword ptr [rax + 0x40000007] ; std ; std ; call rax
0x00000000004564d7 : std ; ret 0x279e
0x000000000046433d : std ; std ; call rax
0x000000000040cb5b : sti ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042a65a : sti ; imul eax, dword ptr [r11 + 0x49], 0x149ca29 ; ret 0xb848
0x000000000043ad57 : sti ; ret 0x8a96
0x000000000040fb27 : sti ; xor dword ptr [rdx - 0x58], 0x89491f0d ; ret
0x0000000000431475 : stosb byte ptr [rdi], al ; adc dword ptr [rcx + rcx*2 + 0x149ca01], ebx ; ret 0xb848
0x000000000043251d : stosb byte ptr [rdi], al ; ret 0xbc4c
0x000000000041b26e : stosd dword ptr [rdi], eax ; xor byte ptr [rbp - 2], al ; ret
0x0000000000404ad2 : sub al, 0x47 ; pop rax ; ret 0x1b2
0x0000000000402ae6 : sub al, 0x47 ; pop rax ; ret 0x8589
0x0000000000404aee : sub al, 0x47 ; pop rax ; ret 0xe6ba
0x000000000040e55e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000464e89 : sub bh, bh ; call qword ptr [rbx]
0x00000000004181d9 : sub bh, bh ; ret
0x000000000045cdc6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e448 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451045 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000410cd2 : sub byte ptr [rbx + 0x40], cl ; wait ; sub byte ptr [rcx + rcx*2 - 0x77], al ; ret
0x00000000004650b8 : sub byte ptr [rbx - 1], dl ; call qword ptr [rdx]
0x0000000000410cd6 : sub byte ptr [rcx + rcx*2 - 0x77], al ; ret
0x0000000000431484 : sub byte ptr [rdx + 0x29499c11], ch ; ret 0x8b48
0x000000000043affc : sub byte ptr [rdx + 1], al ; adc dword ptr [rbp + 0x14969e0], esp ; ret 0x8b48
0x00000000004645fc : sub ch, -1 ; call qword ptr [rax]
0x000000000042623a : sub ch, -1 ; dec dword ptr [rax + 9] ; ret
0x000000000043c8f1 : sub cl, byte ptr [rcx + 0x29] ; ret 0x149
0x000000000043c901 : sub cl, byte ptr [rcx + 1] ; ret 0xb848
0x0000000000432847 : sub dh, al ; xor eax, 0x2949aa23 ; ret
0x000000000045103b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000451115 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041e849 : sub dl, ah ; ret
0x00000000004230a0 : sub dword ptr [rax - 0x76b34980], ebx ; ret
0x0000000000434045 : sub dword ptr [rbp - 0x77], ecx ; ret
0x000000000042ea22 : sub dword ptr [rbx], edx ; sbb dword ptr [rcx + 0x29], ecx ; ret 0x149
0x000000000042ea32 : sub dword ptr [rbx], edx ; sbb dword ptr [rcx + 1], ecx ; ret 0xb848
0x000000000043b08f : sub dword ptr [rcx + 0x148f830], eax ; ret 0x14c
0x000000000043b09f : sub dword ptr [rcx + 0x2948f830], eax ; ret 0x8948
0x0000000000451ed5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000426531 : sub eax, 0x894cc7b1 ; ret
0x0000000000402a92 : sub eax, dword ptr [rdi + 0x58] ; ret 0x8589
0x000000000042b959 : sub ecx, dword ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000437688 : sub edi, dword ptr [rdx - 0x3a480000] ; xchg eax, esi ; ret
0x000000000045ab7f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000462fdd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043b08e : sub qword ptr [r9 + 0x148f830], rax ; ret 0x14c
0x000000000043b09e : sub qword ptr [r9 + 0x2948f830], rax ; ret 0x8948
0x0000000000462fdc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000414c2f : test ah, bh ; ret 2
0x0000000000402be2 : test al, -0x6b ; ret
0x0000000000463c1f : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000451040 : test al, -0x7f ; ret 0x2d50
0x000000000045111a : test al, -0x7f ; ret 0xa30b
0x00000000004603d3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004572ae : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000453876 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000459c18 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043d7d7 : test bh, ah ; sbb dword ptr [rcx + 0x29], ecx ; ret 0xb848
0x000000000040cb5a : test bh, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000444476 : test byte ptr [rax - 0x16fffffb], ah ; ret 1
0x0000000000462faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000423769 : test byte ptr [rbp + 0x497ae245], 1 ; ret
0x0000000000447ebc : test byte ptr [rcx], ch ; ret 0
0x000000000042c186 : test cl, al ; loope 0x42c1f9 ; mov esi, 0x894c4bfa ; ret
0x0000000000447eb6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004591d3 : test dword ptr [rax - 0x17000003], ebx ; ret
0x0000000000441b93 : test dword ptr [rbp + 9], ecx ; ret 0x8148
0x000000000045c9a7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045c967 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000045c8e2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000459d26 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000405771 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000405a45 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rax
0x0000000000405922 : test dword ptr [rdi + rdi*8 - 1], edx ; lcall ptr [rcx + rdi] ; ret
0x0000000000456eca : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004528eb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000453b4a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000044f60a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000435bf9 : test eax, 0x894c8335 ; ret
0x0000000000453aff : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004372fe : test eax, 0xd854b910 ; ret
0x000000000043f3fb : wait ; adc esp, esi ; mov esp, 0x894c7853 ; ret
0x00000000004296ee : wait ; and dword ptr [rcx], ebx ; ret
0x0000000000451b0f : wait ; jge 0x451af1 ; shr cl, cl ; ret 0x3b
0x000000000044cbcd : wait ; jo 0x44cbdb ; ret
0x000000000045011c : wait ; jo 0x45012a ; ret
0x0000000000418844 : wait ; ret 0x487e
0x00000000004328f7 : wait ; sal dword ptr [rdi + 0x48], 0x29 ; ret 0x8948
0x00000000004328e7 : wait ; sal dword ptr [rdi + 0x48], 1 ; ret 0x14c
0x0000000000410cd5 : wait ; sub byte ptr [rcx + rcx*2 - 0x77], al ; ret
0x000000000042d94a : wait ; xchg rax, rsi ; ret 0x486a
0x000000000042d93a : wait ; xchg rax, rsi ; ret 0x496a
0x0000000000423ff2 : xchg byte ptr [rcx + 0x1485ecd], bh ; ret 0x148
0x0000000000424002 : xchg byte ptr [rcx + 0x29485ecd], bh ; ret 0x8948
0x0000000000408c80 : xchg byte ptr [rdi], dh ; add byte ptr [rax - 0x77], r9b ; ret 0x74e8
0x00000000004164db : xchg byte ptr [rdx], ah ; ret 0x4de8
0x0000000000424cac : xchg ch, dl ; cmp eax, 0x894cd439 ; ret
0x000000000043fc1a : xchg dword ptr [rax + 0x29], ecx ; ret 0x148
0x000000000043fc2a : xchg dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000041f521 : xchg dword ptr [rbp - 0x77], ecx ; ret 0x149
0x0000000000460b18 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000431c19 : xchg eax, ebp ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000431c09 : xchg eax, ebp ; add cl, byte ptr [rax + 1] ; ret 0x148
0x0000000000442786 : xchg eax, ebp ; and bh, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004447e1 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000443055 : xchg eax, ebp ; out -1, eax ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000402be3 : xchg eax, ebp ; ret
0x00000000004042c2 : xchg eax, ebp ; ret 0x8445
0x0000000000404988 : xchg eax, ebp ; ret 0xd284
0x00000000004378ed : xchg eax, ebp ; ret 3
0x0000000000425b2d : xchg eax, ebp ; shr ch, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000043153c : xchg eax, ebp ; shr dl, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004314ab : xchg eax, ebp ; shr dl, -1 ; dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000431cf2 : xchg eax, ebx ; imul esp, dword ptr cs:[rbp + 0x4c], 0x894cdf21 ; ret
0x000000000043ad54 : xchg eax, ebx ; in al, -0x5b ; sti ; ret 0x8a96
0x0000000000448755 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000044f055 : xchg eax, ebx ; ret
0x0000000000443a74 : xchg eax, ebx ; ret 0xd284
0x00000000004642c5 : xchg eax, ecx ; cli ; jmp rax
0x0000000000434ae6 : xchg eax, ecx ; pop rcx ; push rsi ; ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000434af6 : xchg eax, ecx ; pop rcx ; push rsi ; ficomp dword ptr [rcx + 8] ; or ecx, dword ptr [rax + 1] ; ret 0x8948
0x000000000044f285 : xchg eax, ecx ; ret
0x00000000004052cb : xchg eax, ecx ; ret 0xffff
0x0000000000463c20 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000463c21 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000443ad0 : xchg eax, edi ; ret 0xd284
0x0000000000421e6b : xchg eax, edx ; adc cl, byte ptr cs:[rcx + 0x29] ; ret 0x149
0x0000000000421e7b : xchg eax, edx ; adc cl, byte ptr cs:[rcx + 1] ; ret 0xb848
0x0000000000448ad5 : xchg eax, edx ; ret
0x000000000040b724 : xchg eax, edx ; ret 0x8445
0x000000000040fda7 : xchg eax, edx ; ret 0xd284
0x0000000000404ae9 : xchg eax, esi ; jns 0x404af6 ; jrcxz 0x404aaf ; sub al, 0x47 ; pop rax ; ret 0xe6ba
0x000000000043ad6c : xchg eax, esi ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x00000000004126a1 : xchg eax, esi ; ret
0x000000000042d94c : xchg eax, esi ; ret 0x486a
0x000000000042d93c : xchg eax, esi ; ret 0x496a
0x0000000000458eba : xchg eax, esp ; jmp 0x459928
0x0000000000458df7 : xchg eax, esp ; jmp 0x45992a
0x0000000000453b04 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000044f3d5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000453b4f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004200aa : xchg eax, esp ; ret
0x000000000040b6f5 : xchg eax, esp ; ret 0x8041
0x000000000040b487 : xchg eax, esp ; ret 0x8445
0x0000000000452a1e : xchg eax, esp ; ret 0xb740
0x000000000040b967 : xchg eax, esp ; ret 0xd284
0x000000000040c080 : xchg eax, esp ; ret 0xe280
0x0000000000458eb9 : xchg eax, r12d ; jmp 0x459929
0x0000000000464535 : xchg edi, edi ; call rax
0x000000000043036d : xchg esp, edi ; leave ; sbb esp, dword ptr [rdx] ; sbb byte ptr [rcx + 0x29], cl ; ret 0xb848
0x00000000004378ec : xchg rax, r13 ; ret 3
0x000000000042d94b : xchg rax, rsi ; ret 0x486a
0x000000000042d93b : xchg rax, rsi ; ret 0x496a
0x000000000040f7eb : xlatb ; ret 0x7c9b
0x0000000000408d0c : xor al, 0x25 ; fbstp dword ptr [rdi] ; add byte ptr [rax - 0x77], r9b ; ret 0xe6e8
0x0000000000408c7e : xor al, 0x25 ; xchg byte ptr [rdi], dh ; add byte ptr [rax - 0x77], r9b ; ret 0x74e8
0x000000000042cd5e : xor al, 0x7a ; jmp 0xffffffffc24c1a6b
0x0000000000452a19 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000046443d : xor bh, bh ; jmp rax
0x0000000000464fb1 : xor bh, bh ; jmp rsi
0x0000000000439fbe : xor byte ptr [eax], bl ; ret
0x00000000004472b7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000444c00 : xor byte ptr [rax - 0x75], cl ; jge 0x444be4 ; call 0x410eb7
0x00000000004472b8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000439fbf : xor byte ptr [rax], bl ; ret
0x000000000041b26f : xor byte ptr [rbp - 2], al ; ret
0x000000000040fbce : xor byte ptr [rcx + rcx*2 - 0x77], dh ; ret
0x0000000000464294 : xor byte ptr [rdx - 6], dl ; jmp qword ptr [rax]
0x0000000000410908 : xor cl, byte ptr [rbp - 0x77] ; ret
0x000000000046424c : xor cl, dl ; stc ; call qword ptr [rax]
0x000000000043e134 : xor dl, dh ; iretd ; jmp rax
0x0000000000440dd3 : xor dword ptr [rcx + 0x29], ecx ; ret 0x149
0x0000000000440dd2 : xor dword ptr [rcx + 0x29], r9d ; ret 0x149
0x0000000000440de3 : xor dword ptr [rcx + 1], ecx ; ret 0xb848
0x0000000000440de2 : xor dword ptr [rcx + 1], r9d ; ret 0xb848
0x000000000040fb28 : xor dword ptr [rdx - 0x58], 0x89491f0d ; ret
0x000000000041fc28 : xor eax, 0x149f327 ; ret 0xb848
0x000000000043284a : xor eax, 0x2949aa23 ; ret
0x00000000004363c6 : xor eax, 0x894cf810 ; ret
0x000000000046444d : xor edi, edi ; jmp qword ptr [rax]
