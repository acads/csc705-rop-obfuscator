0x0000000000424d96 : adc al, -9 ; pop rbp ; ret
0x000000000040a43f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408252 : adc cl, byte ptr [rax - 0x77] ; add al, -0x36 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041be0e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000043657d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000042781e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000040b014 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004442cb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ed9b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040821b : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041c90b : adc eax, 0x558abda1 ; ret
0x000000000043f923 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x000000000041fee9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401689 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004499cb : add ah, bh ; add eax, 0x73f00000 ; std ; jmp qword ptr [rbx]
0x0000000000408255 : add al, -0x36 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044983d : add al, 0 ; add al, dh ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x0000000000428bbc : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000438c30 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000040b7fc : add al, 0 ; add cl, ch ; ret 1
0x0000000000443f2a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044965f : add al, al ; cld ; call qword ptr [rcx]
0x000000000044961f : add al, al ; sub bh, ah ; jmp qword ptr [rdi]
0x0000000000448ea3 : add al, bl ; jl 0x448ea7 ; jmp rax
0x000000000044965d : add al, byte ptr [rax] ; add al, al ; cld ; call qword ptr [rcx]
0x000000000044961d : add al, byte ptr [rax] ; add al, al ; sub bh, ah ; jmp qword ptr [rdi]
0x00000000004245bb : add al, byte ptr [rax] ; add byte ptr [rcx - 0x48], al ; movsxd rbx, edx ; ret 0xb941
0x0000000000407d88 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000405fc8 : add al, ch ; ret 0xffba
0x000000000044919b : add al, ch ; sar dh, 1 ; jmp rax
0x00000000004454bf : add al, ch ; stosd dword ptr [rdi], eax ; ret 0xfffb
0x000000000044ab27 : add al, cl ; ret 0xffff
0x00000000004499cf : add al, dh ; jae 0x4499d4 ; jmp qword ptr [rbx]
0x000000000044983f : add al, dh ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x0000000000449b2f : add al, dl ; js 0x449b34 ; call rdx
0x000000000043a588 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x00000000004412e8 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000040a4ed : add bh, al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004455b5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004333b1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000433370 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000409883 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004097e0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsp
0x000000000042ea74 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043cdef : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041c749 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043f925 : add bh, al ; xchg eax, r12d ; int 6
0x000000000044801f : add bl, dh ; ret
0x00000000004396f4 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000409ca8 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000447cf2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000447f54 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004231c4 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000448df3 : add byte ptr [rax + 0x24], cl ; cld ; jmp qword ptr [rax]
0x000000000043de1d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000448e73 : add byte ptr [rax + 0x63], bh ; cld ; jmp qword ptr [rax]
0x0000000000449a2f : add byte ptr [rax + 0x75], al ; std ; call rdi
0x0000000000449c17 : add byte ptr [rax + 0x7f], bh ; std ; jmp qword ptr [rbx]
0x0000000000428bbb : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000449c13 : add byte ptr [rax + rcx], al ; add byte ptr [rax + 0x7f], bh ; std ; jmp qword ptr [rbx]
0x000000000042362a : add byte ptr [rax - 0x75], cl ; call 0x4904bf82
0x00000000004414cb : add byte ptr [rax - 0x75], cl ; call 0x49069e23
0x000000000040beae : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004236a8 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040bc84 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000428bbe : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000405b5c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000448f5b : add byte ptr [rax - 0x78], ch ; std ; call rax
0x0000000000448f2b : add byte ptr [rax - 0x7c], cl ; std ; call qword ptr [rax]
0x00000000004412e6 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000040a4eb : add byte ptr [rax], al ; add bh, al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004455b3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004333af : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042ea72 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044801d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043de1b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000423628 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4904bf84
0x00000000004414c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49069e25
0x00000000004236a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040c4e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405b5a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000044801b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043b95b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004004ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000445752 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000440e6b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000441009 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040c47e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000423128 : add byte ptr [rax], al ; add byte ptr [rbx + 0x322dec45], cl ; ret 0x4c6a
0x000000000041f952 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042abac : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000437fa2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x00000000004380ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000429c58 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10d267bb], cl ; ret
0x000000000042d233 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004390ee : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000433d2c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042fb99 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000043218a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000427a7f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040602d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000447cf3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000447f55 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042e9e0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000044ab21 : add byte ptr [rax], al ; add byte ptr [rdi + rdx], dl ; add al, cl ; ret 0xffff
0x00000000004470c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000435b6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000431fc7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405b8f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004434a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042e96a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406426 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043367b : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000044961a : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add al, al ; sub bh, ah ; jmp qword ptr [rdi]
0x000000000040f0e0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f570 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ed9d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004343d8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d889 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040168b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000448df2 : add byte ptr [rax], al ; and al, 0xfffffffc ; jmp qword ptr [rax]
0x0000000000449f56 : add byte ptr [rax], al ; call 0x11449d3d
0x0000000000448eb2 : add byte ptr [rax], al ; call 0x21448b3e
0x000000000044919a : add byte ptr [rax], al ; call 0xffffffffe1449076
0x00000000004499ca : add byte ptr [rax], al ; cld ; add eax, 0x73f00000 ; std ; jmp qword ptr [rbx]
0x000000000044916a : add byte ptr [rax], al ; cwde ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000448e32 : add byte ptr [rax], al ; fdivr dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00000000004490ea : add byte ptr [rax], al ; fsub dword ptr [rdx - 2] ; jmp qword ptr [rax]
0x000000000044911a : add byte ptr [rax], al ; fsubr dword ptr [rbp - 2] ; jmp rax
0x000000000044926a : add byte ptr [rax], al ; fsubr dword ptr [rsi - 1] ; jmp qword ptr [rax]
0x000000000044983a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; add al, dh ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x0000000000449b4a : add byte ptr [rax], al ; jl 0x449b5e ; add byte ptr [rax], al ; nop ; jp 0x449b59 ; call qword ptr [rbx]
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x0000000000433677 : add byte ptr [rax], al ; jmp 0x433686
0x00000000004456e3 : add byte ptr [rax], al ; jmp 0x4456f2
0x0000000000445845 : add byte ptr [rax], al ; jmp 0x445854
0x0000000000445ab3 : add byte ptr [rax], al ; jmp 0x445ac2
0x0000000000449a2e : add byte ptr [rax], al ; jne 0x449a35 ; call rdi
0x0000000000448e72 : add byte ptr [rax], al ; js 0x448ede ; cld ; jmp qword ptr [rax]
0x0000000000449c16 : add byte ptr [rax], al ; js 0x449c9e ; std ; jmp qword ptr [rbx]
0x0000000000448de2 : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; cld ; jmp rax
0x000000000043371f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000447d38 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b0c1 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004395df : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004236a7 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c4ea : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044965a : add byte ptr [rax], al ; mov word ptr [rdx], es ; add byte ptr [rax], al ; shr byte ptr [rsi], -4 ; call qword ptr [rcx]
0x0000000000449b4e : add byte ptr [rax], al ; nop ; jp 0x449b55 ; call qword ptr [rbx]
0x0000000000449c12 : add byte ptr [rax], al ; or byte ptr [rax], r8b ; add byte ptr [rax + 0x7f], bh ; std ; jmp qword ptr [rbx]
0x000000000044915a : add byte ptr [rax], al ; pop rax ; mov dl, -2 ; jmp rax
0x0000000000401f18 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f953 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042abad : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004332d4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004004ae : add byte ptr [rax], al ; ret
0x0000000000449b2e : add byte ptr [rax], al ; sar byte ptr [rax - 3], 1 ; call rdx
0x0000000000448e62 : add byte ptr [rax], al ; sbb byte ptr [rbx - 4], ah ; jmp rax
0x000000000044961e : add byte ptr [rax], al ; shr byte ptr [rdx], -4 ; jmp qword ptr [rdi]
0x000000000044965e : add byte ptr [rax], al ; shr byte ptr [rsi], -4 ; call qword ptr [rcx]
0x0000000000449c96 : add byte ptr [rax], al ; test al, -0x7a ; std ; call qword ptr [rcx]
0x0000000000448e22 : add byte ptr [rax], al ; test al, 0x37 ; cld ; jmp rax
0x0000000000449f52 : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax], al ; call 0x11449d41
0x0000000000448f2a : add byte ptr [rax], al ; test dil, bpl ; call qword ptr [rax]
0x0000000000448e63 : add byte ptr [rax], bl ; movsxd rdi, esp ; jmp rax
0x0000000000449183 : add byte ptr [rax], bl ; ret
0x00000000004491ab : add byte ptr [rax], ch ; sar esi, 1 ; jmp qword ptr [rax]
0x0000000000448df0 : add byte ptr [rax], cl ; add byte ptr [rax], al ; and al, 0xfffffffc ; jmp qword ptr [rax]
0x000000000044922b : add byte ptr [rax], cl ; and bh, bh ; jmp qword ptr [rax]
0x0000000000445754 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000440e6d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000044100b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040c480 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000042312a : add byte ptr [rbx + 0x322dec45], cl ; ret 0x4c6a
0x000000000041f954 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042abae : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000437fa4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x00000000004380d0 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x00000000004332d5 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004285b5 : add byte ptr [rbx + 0xb2de845], cl ; pop rbx ; ret
0x0000000000449f53 : add byte ptr [rbx + rcx - 0x24180000], al ; std ; call qword ptr [rax]
0x0000000000428040 : add byte ptr [rbx + rcx*4 + 0x45], cl ; fmul dword ptr [rax - 0x7f] ; ret 0
0x0000000000429c5a : add byte ptr [rbx - 0x10d267bb], cl ; ret
0x0000000000429c0f : add byte ptr [rbx - 0x11d267bb], cl ; ret
0x0000000000409d7a : add byte ptr [rbx - 0x2334b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042d235 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042d1ea : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004390f0 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000043e335 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000438c32 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000043e173 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000433d2e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040dc37 : add byte ptr [rbx - 0x6dd237bb], cl ; jge 0x40dc1a ; ret
0x000000000040dbec : add byte ptr [rbx - 0x6ed237bb], cl ; jge 0x40dbcf ; ret
0x000000000040b0c2 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000447d39 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042fb9b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040718f : add byte ptr [rbx - 0x9834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407bdc : add byte ptr [rbx - 0x9cb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408c16 : add byte ptr [rbx - 0xe74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000448eb0 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; call 0x21448b40
0x000000000043218c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000427a81 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040602f : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004245bd : add byte ptr [rcx - 0x48], al ; movsxd rbx, edx ; ret 0xb941
0x00000000004282bb : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x0000000000447cf5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000448d77 : add byte ptr [rcx], al ; sbb eax, dword ptr [rbx] ; cmp esp, dword ptr [rsi + rax] ; add byte ptr [rax], al ; ret
0x0000000000447f57 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000042e9e2 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000448e30 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; fdivr dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000042b97f : add byte ptr [rdi + 0x2a], cl ; ret
0x0000000000449b2b : add byte ptr [rdi + rax], bl ; add al, dl ; js 0x449b38 ; call rdx
0x000000000044ab23 : add byte ptr [rdi + rdx], dl ; add al, cl ; ret 0xffff
0x00000000004470c3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000429e00 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000431fc9 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405b91 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042429d : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004434a7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042e96c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406428 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044965b : add byte ptr [rdx + rax + 0x2ec00000], cl ; cld ; call qword ptr [rcx]
0x000000000044961b : add byte ptr [rdx + rax], cl ; add al, al ; sub bh, ah ; jmp qword ptr [rdi]
0x000000000042429b : add byte ptr [rdx], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000449268 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; fsubr dword ptr [rsi - 1] ; jmp qword ptr [rax]
0x0000000000448e70 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; js 0x448ee0 ; cld ; jmp qword ptr [rax]
0x0000000000436ead : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000449a2b : add byte ptr [rsi + rax], bl ; add byte ptr [rax + 0x75], al ; std ; call rdi
0x0000000000449168 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; cwde ; mov dh, -2 ; jmp qword ptr [rax]
0x000000000044983b : add byte ptr [rsp + rax], ch ; add al, dh ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x000000000041c87c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040e07e : add cl, ch ; ret
0x0000000000407d8a : add cl, ch ; ret 1
0x0000000000441581 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000043336e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000043d21e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000429c0d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x11d267bb], cl ; ret
0x0000000000429dfe : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000436124 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004248f5 : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044122f : add dword ptr [rax], ecx ; ret 0x840
0x0000000000448d78 : add dword ptr [rbx], ebx ; add edi, dword ptr [rbx] ; and al, 6 ; add byte ptr [rax], al ; ret
0x000000000043a9e0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000447242 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000446094 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c3e9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c04 : add eax, 0x24972e ; add ebx, esi ; ret
0x00000000004332d3 : add eax, 0x5d5b0000 ; ret
0x00000000004499cd : add eax, 0x73f00000 ; std ; jmp qword ptr [rbx]
0x000000000040e7f8 : add eax, 0x92b80000 ; jge 0x40e7d9 ; ret
0x000000000040e7f7 : add eax, 0x92b80000 ; jge 0x40e7da ; ret
0x0000000000409d87 : add eax, 0xc7ffff7d ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rax
0x0000000000409a99 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004454e4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a096 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000448d7a : add edi, dword ptr [rbx] ; and al, 6 ; add byte ptr [rax], al ; ret
0x000000000043d099 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040207b : add esp, 0x10 ; pop rbp ; ret
0x00000000004282b9 : add esp, 0x100 ; pop rbp ; ret
0x000000000040a43d : add esp, 0x110 ; pop rbp ; ret
0x0000000000408827 : add esp, 0x130 ; pop rbp ; ret
0x00000000004297b6 : add esp, 0x140 ; pop rbp ; ret
0x000000000043ddf3 : add esp, 0x160 ; pop rbp ; ret
0x000000000043c5b8 : add esp, 0x180 ; pop rbp ; ret
0x000000000040fbd4 : add esp, 0x190 ; pop rbp ; ret
0x00000000004258e7 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000422f64 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000440c8f : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040d63d : add esp, 0x20 ; pop rbp ; ret
0x0000000000409e1b : add esp, 0x240 ; pop rbp ; ret
0x000000000040ec88 : add esp, 0x280 ; pop rbp ; ret
0x000000000042c871 : add esp, 0x320 ; pop rbp ; ret
0x0000000000427329 : add esp, 0x3e0 ; pop rbp ; ret
0x000000000042eda0 : add esp, 0x40 ; pop rbp ; ret
0x0000000000444129 : add esp, 0x440 ; pop rbp ; ret
0x000000000040d2c2 : add esp, 0x50 ; pop rbp ; ret
0x00000000004332d0 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042fcc0 : add esp, 0x60 ; pop rbp ; ret
0x000000000040d88c : add esp, 0x70 ; pop rbp ; ret
0x0000000000402321 : add esp, 0x80 ; pop rbp ; ret
0x0000000000436d6f : add esp, 0x88 ; pop rbp ; ret
0x000000000042f41d : add esp, 0x90 ; pop rbp ; ret
0x0000000000401f14 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040a8e4 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040b643 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000424d20 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000408ec2 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000410803 : add esp, 8 ; pop rbp ; ret
0x000000000040168e : add esp, 8 ; ret
0x00000000004248f4 : add qword ptr [rax], r8 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044961c : add r8b, byte ptr [rax] ; add al, al ; sub bh, ah ; jmp qword ptr [rdi]
0x000000000040a095 : add r8d, dword ptr [r8] ; add cl, ch ; ret 1
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x000000000040207a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004282b8 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040a43c : add rsp, 0x110 ; pop rbp ; ret
0x0000000000408826 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004297b5 : add rsp, 0x140 ; pop rbp ; ret
0x000000000043ddf2 : add rsp, 0x160 ; pop rbp ; ret
0x000000000043c5b7 : add rsp, 0x180 ; pop rbp ; ret
0x000000000040fbd3 : add rsp, 0x190 ; pop rbp ; ret
0x00000000004258e6 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000422f63 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000440c8e : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040d63c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000409e1a : add rsp, 0x240 ; pop rbp ; ret
0x000000000040ec87 : add rsp, 0x280 ; pop rbp ; ret
0x000000000042c870 : add rsp, 0x320 ; pop rbp ; ret
0x0000000000427328 : add rsp, 0x3e0 ; pop rbp ; ret
0x000000000042ed9f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000444128 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040d2c1 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004332cf : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042fcbf : add rsp, 0x60 ; pop rbp ; ret
0x000000000040d88b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402320 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000436d6e : add rsp, 0x88 ; pop rbp ; ret
0x000000000042f41c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000401f13 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a8e3 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b642 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000424d1f : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000408ec1 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000410802 : add rsp, 8 ; pop rbp ; ret
0x000000000040168d : add rsp, 8 ; ret
0x0000000000401c07 : and al, 0 ; add ebx, esi ; ret
0x0000000000448df4 : and al, 0xfffffffc ; jmp qword ptr [rax]
0x0000000000447cfd : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000426b66 : and al, 0xffffffffffffffb9 ; jrcxz 0x426b8b ; ret 0x4877
0x0000000000448df5 : and al, 0xfffffffffffffffc ; jmp qword ptr [rax]
0x0000000000446093 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c3e8 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000448d7c : and al, 6 ; add byte ptr [rax], al ; ret
0x000000000042b248 : and al, byte ptr [rbp + 0x29486d2d] ; ret 0x8948
0x000000000044157f : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000044922d : and bh, bh ; jmp qword ptr [rax]
0x000000000043b95a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040a3f8 : and byte ptr [rax], dl ; jmp 0x40a4fd
0x000000000042c873 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f8cb : and byte ptr [rsi + 0x58], ah ; jb 0x42f902 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044157e : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000424e85 : and eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000041bab1 : and eax, 0x75b4b9d3 ; ret
0x000000000043371d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000445e38 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000044594f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000429a55 : and ecx, edi ; mov rax, rcx ; pop rbp ; ret
0x0000000000445efa : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000429a54 : and rcx, rdi ; mov rax, rcx ; pop rbp ; ret
0x0000000000449f58 : call 0x11449d3b
0x0000000000448eb4 : call 0x21448b3c
0x00000000004454c0 : call 0x401772
0x00000000004257f7 : call 0x401a82
0x000000000042fcc5 : call 0x42fd89
0x000000000042362e : call 0x4904bf7e
0x000000000042362d : call 0x4904bf7f
0x00000000004414cf : call 0x49069e1f
0x00000000004414ce : call 0x49069e20
0x000000000044151d : call 0x49069e6d
0x000000000044151c : call 0x49069e6e
0x000000000042acfa : call 0xc04db7c
0x00000000004342cd : call 0xffffffffaca40501
0x00000000004342cc : call 0xffffffffaca40502
0x000000000044919c : call 0xffffffffe1449074
0x000000000041f569 : call 0xffffffffe9047eb9
0x000000000041f568 : call 0xffffffffe9047eba
0x0000000000447ff9 : call qword ptr [r12 + rbx*8]
0x0000000000407b3a : call qword ptr [rax]
0x00000000004061a4 : call qword ptr [rbx]
0x000000000042702e : call qword ptr [rcx]
0x000000000041e9f4 : call qword ptr [rdi]
0x000000000041a9db : call qword ptr [rdx]
0x0000000000405cec : call qword ptr [rsi]
0x0000000000447ffa : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000041cc5b : call rcx
0x000000000041e634 : call rdi
0x000000000041de65 : call rdx
0x0000000000409889 : call rsi
0x00000000004097cc : call rsp
0x000000000043a28b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000422f62 : clc ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040ec86 : clc ; add rsp, 0x280 ; pop rbp ; ret
0x0000000000444127 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042f027 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043783b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000434cb9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x0000000000445e39 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000445c03 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000043397e : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427573 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000440d4e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427553 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000424d93 : clc ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000435e6b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000435e8b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042234b : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000445651 : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000422347 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040beb2 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004230c2 : clc ; pop rbp ; ret
0x000000000041203d : clc ; ret 0x77a8
0x00000000004230bb : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000445950 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004499cc : cld ; add eax, 0x73f00000 ; std ; jmp qword ptr [rbx]
0x00000000004020a7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a43b : cld ; add rsp, 0x110 ; pop rbp ; ret
0x000000000040a8e2 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b641 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000043490e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000043572d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000449662 : cld ; call qword ptr [rcx]
0x0000000000449842 : cld ; call qword ptr [rdx]
0x0000000000448e6e : cld ; inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax + 0x63], bh ; cld ; jmp qword ptr [rax]
0x0000000000448dee : cld ; inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax + 0x24], cl ; cld ; jmp qword ptr [rax]
0x0000000000448e9e : cld ; inc eax ; or al, byte ptr [rax] ; add al, bl ; jl 0x448eac ; jmp rax
0x0000000000448e5e : cld ; inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rdi, esp ; jmp rax
0x000000000040c4af : cld ; jmp 0x40c51c
0x000000000040c4ae : cld ; jmp 0x40c51d
0x0000000000448df6 : cld ; jmp qword ptr [rax]
0x0000000000449622 : cld ; jmp qword ptr [rdi]
0x0000000000448de6 : cld ; jmp rax
0x000000000040b0c5 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000043e33a : cld ; stc ; in al, dx ; ret 0x8589
0x000000000043ea8b : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000409a98 : cli ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000042f8d0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000447cfc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042b401 : cmc ; push rsi ; ret
0x000000000042e7eb : cmc ; ret 0x4f0b
0x00000000004291f1 : cmp byte ptr [rax + 1], cl ; ret 0x8948
0x000000000042908e : cmp cl, byte ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000042e981 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000430687 : cmp dl, al ; ret
0x00000000004393c2 : cmp dword ptr [rax - 0x75], ecx ; jne 0x4393a4 ; call rax
0x0000000000432759 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x000000000041c907 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000448d7b : cmp esp, dword ptr [rsi + rax] ; add byte ptr [rax], al ; ret
0x00000000004332d2 : cwde ; add eax, 0x5d5b0000 ; ret
0x000000000044916c : cwde ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000429a0f : dec dword ptr [rax + 0x21] ; ret 0x148
0x00000000004295c2 : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000040a31d : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041be0b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041b77e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041bf83 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042f9fd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042c293 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042916b : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407762 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000407195 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040775c : dec dword ptr [rax - 0x9a46b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000405c35 : dec dword ptr [rbx - 0x8e36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000405d69 : dec dword ptr [rbx - 0x8f36b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000042a675 : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x000000000042b3fc : dec dword ptr [rcx - 0xa167e3f] ; push rsi ; ret
0x000000000042e7e6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000405c3b : dec dword ptr [rdi] ; ret 0x8589
0x0000000000437191 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043c00b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000040b7f8 : dec dword ptr [rdi] ; test byte ptr [rax], dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000043692a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000407d84 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffe], ah ; ret 1
0x0000000000411d1a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000425370 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffffd], cl ; ret 1
0x0000000000436120 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040e078 : dec dword ptr [rdi] ; test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000043f405 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000406ba3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004452de : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000042c678 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000042b92b : dec dword ptr [rsi + 0x2a] ; ret
0x0000000000424ee0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000424edf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004375a0 : enter -0x74b8, 0x31 ; call rax
0x000000000042a109 : enter -0x74b8, 0x55 ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000422328 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000042c674 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000435b6c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000443709 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000445775 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000040ec10 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000424299 : fadd dword ptr [rax] ; add byte ptr [rdx], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004452c0 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000445a2b : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000448e34 : fdivr dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000043c00e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000044529f : fild word ptr [rcx - 0x77] ; ret
0x0000000000445efb : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000042af29 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000043353b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042af2c : fisttp word ptr [rcx - 0x77] ; ret
0x00000000004462b8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000043aeee : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000428043 : fmul dword ptr [r8 - 0x7f] ; ret 0
0x0000000000433a17 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000429fba : fmul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000043aeef : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043759c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x0000000000428044 : fmul dword ptr [rax - 0x7f] ; ret 0
0x00000000004382dd : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000436bc9 : fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000433a18 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000447ffc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004076ee : fstp xword ptr [rdx + rcx*4 + 0x55] ; ret
0x00000000004490ec : fsub dword ptr [rdx - 2] ; jmp qword ptr [rax]
0x000000000044911c : fsubr dword ptr [rbp - 2] ; jmp rax
0x000000000044926c : fsubr dword ptr [rsi - 1] ; jmp qword ptr [rax]
0x0000000000402079 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423260 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000433f7c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000410801 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x64b2e0 ; jmp rax
0x0000000000407760 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000407193 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042f9fb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000405c39 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x000000000040d6b8 : in al, 0x2d ; ret 0xc226
0x0000000000435071 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000043438c : in al, dx ; jmp 0x434409
0x000000000043438b : in al, dx ; jmp 0x43440a
0x00000000004411b1 : in al, dx ; jmp 0x44137d
0x00000000004411b0 : in al, dx ; jmp 0x44137e
0x00000000004458e5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408259 : in al, dx ; pop rbp ; ret
0x000000000043e17a : in al, dx ; ret 0x8589
0x0000000000441194 : in al, dx ; ret 0xe8ff
0x000000000043ea8d : in al, dx ; ret 0xff3
0x0000000000449f99 : in eax, -3 ; call rax
0x000000000040736b : inc dword ptr [rax + 0x558801e2] ; ret 0x1b2
0x000000000040602b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000405b8d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004073b1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000448e6f : inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax + 0x63], bh ; cld ; jmp qword ptr [rax]
0x0000000000448def : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax + 0x24], cl ; cld ; jmp qword ptr [rax]
0x0000000000449227 : inc dword ptr [rax] ; sbb dword ptr [rax], eax ; add byte ptr [rax], cl ; and bh, bh ; jmp qword ptr [rax]
0x00000000004076cb : inc dword ptr [rbp + 0x45950fd2] ; ret
0x000000000040bbaa : inc dword ptr [rbp + 0xf] ; ret
0x0000000000405e20 : inc dword ptr [rbp - 0x77] ; ret
0x0000000000405754 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004061bd : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000422f04 : inc dword ptr [rsi - 0x26] ; ret
0x0000000000448e9f : inc eax ; or al, byte ptr [rax] ; add al, bl ; jl 0x448eab ; jmp rax
0x0000000000448e5f : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rdi, esp ; jmp rax
0x0000000000433409 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000409d8a : inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rax
0x000000000044983c : insb byte ptr [rdi], dx ; add al, 0 ; add al, dh ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x00000000004288db : insb byte ptr [rdi], dx ; ret
0x0000000000430146 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000043019a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000421a17 : int 0x5b
0x000000000043f1a4 : int 6
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000427556 : ja 0x427563 ; pop rbp ; ret
0x0000000000427576 : ja 0x42758b ; pop rbp ; ret
0x0000000000440d51 : ja 0x440d9e ; pop rbp ; ret
0x00000000004499d1 : jae 0x4499d2 ; jmp qword ptr [rbx]
0x000000000042a59e : jb 0x42a57c ; ret
0x000000000042a5ae : jb 0x42a58c ; ret
0x000000000042f8ce : jb 0x42f8ff ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401dbe : jbe 0x401d7b ; ret 0x6440
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x64b2e0 ; jmp rax
0x0000000000449c19 : jg 0x449c1a ; jmp qword ptr [rbx]
0x0000000000409d88 : jge 0x409d91 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rax
0x000000000040dbf2 : jge 0x40dbc9 ; ret
0x000000000040dc3d : jge 0x40dc14 ; ret
0x000000000040e7fd : jge 0x40e7d4 ; ret
0x000000000040ecb0 : jge 0x40ec87 ; ret
0x000000000041aea6 : jge 0x41ae2b ; ret 0xffd5
0x000000000041b970 : jge 0x41b950 ; shr cl, cl ; ret 0x3b
0x000000000042234a : jge 0x42234a ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000424d92 : jge 0x424d93 ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000427552 : jge 0x427553 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000427572 : jge 0x427573 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000435e6a : jge 0x435e6b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000435e8a : jge 0x435e8b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043759b : jge 0x43757e ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000440d4d : jge 0x440d4e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004076ef : jl 0x40767e ; push rbp ; ret
0x0000000000448ea5 : jl 0x448ea5 ; jmp rax
0x0000000000449b4c : jl 0x449b5c ; add byte ptr [rax], al ; nop ; jp 0x449b57 ; call qword ptr [rbx]
0x000000000043ded8 : jle 0x43de6c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004017eb : jmp 0x4016a7
0x000000000040a3fa : jmp 0x40a4fb
0x000000000040a4e9 : jmp 0x40a4fd
0x000000000040c4b0 : jmp 0x40c51b
0x000000000041c0c0 : jmp 0x41f540
0x0000000000419fc4 : jmp 0x41f541
0x000000000041b391 : jmp 0x41f542
0x000000000042c78c : jmp 0x42c9de
0x000000000042dc0b : jmp 0x42e677
0x000000000042db48 : jmp 0x42e679
0x000000000042fc73 : jmp 0x42fcd8
0x000000000043240b : jmp 0x433550
0x0000000000432e26 : jmp 0x433551
0x0000000000433679 : jmp 0x433684
0x000000000043438d : jmp 0x434408
0x0000000000436ba4 : jmp 0x436e00
0x0000000000437439 : jmp 0x4375c5
0x00000000004392ca : jmp 0x43940e
0x00000000004392c9 : jmp 0x43940f
0x00000000004392c9 : jmp 0x439410
0x00000000004411b2 : jmp 0x44137c
0x0000000000443fc6 : jmp 0x4442a8
0x00000000004452ed : jmp 0x445607
0x00000000004456e5 : jmp 0x4456f0
0x0000000000445847 : jmp 0x445852
0x0000000000445ab5 : jmp 0x445ac0
0x000000000043e80f : jmp 0x4906715f
0x000000000043e95b : jmp 0x490672ab
0x000000000043ea2d : jmp 0x4906737d
0x000000000043eaae : jmp 0x490673fe
0x0000000000440a54 : jmp 0x490693a4
0x0000000000440acf : jmp 0x4906941f
0x000000000042e7ea : jmp 0x4f4eaae6
0x000000000040d674 : jmp 0xffffffffb602fd3d
0x0000000000428574 : jmp 0xffffffffc38ee087
0x000000000044508f : jmp 0xffffffffc4088756
0x000000000041ee95 : jmp qword ptr [rax]
0x0000000000405803 : jmp qword ptr [rbx]
0x000000000040c113 : jmp qword ptr [rcx]
0x000000000041cb47 : jmp qword ptr [rdi]
0x0000000000427526 : jmp qword ptr [rdx]
0x0000000000407b96 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x000000000041b498 : jmp rbx
0x000000000041beca : jmp rcx
0x000000000041b4f2 : jmp rdi
0x0000000000401be7 : jmp rdx
0x000000000044a0bb : jmp rsi
0x000000000041b7a8 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x0000000000424ee1 : jne 0x424ed9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004375f9 : jne 0x4375c4 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004393c5 : jne 0x4393a1 ; call rax
0x0000000000449a31 : jne 0x449a32 ; call rdi
0x0000000000449a30 : jne 0x449a33 ; call rdi
0x000000000040d88e : jo 0x40d8ef ; ret
0x0000000000414dbe : jo 0x414dca ; ret
0x0000000000416a2e : jo 0x416a3a ; ret
0x0000000000419f7d : jo 0x419f89 ; ret
0x0000000000421264 : jo 0x4212c5 ; ret
0x0000000000427b2b : jo 0x427b8c ; ret
0x0000000000428533 : jo 0x428594 ; ret
0x0000000000427b18 : jp 0x427b2c ; call rax
0x000000000042acfb : jp 0x42ad2d ; ret 0x410b
0x000000000042ad09 : jp 0x42ad3b ; ret 0x490b
0x0000000000449b51 : jp 0x449b52 ; call qword ptr [rbx]
0x00000000004267e3 : jrcxz 0x426804 ; ret 0x8977
0x0000000000426b4c : jrcxz 0x426b6d ; ret 0xb277
0x0000000000426b68 : jrcxz 0x426b89 ; ret 0x4877
0x000000000040e635 : js 0x40e5c9 ; test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000448e74 : js 0x448edc ; cld ; jmp qword ptr [rax]
0x0000000000449b31 : js 0x449b32 ; call rdx
0x0000000000449c18 : js 0x449c9c ; std ; jmp qword ptr [rbx]
0x000000000044a861 : js 0x44a864 ; call rdi
0x000000000040a4e8 : lahf ; jmp 0x40a4fe
0x000000000041b96e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041ca6e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040ccb6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004291ee : lea ecx, dword ptr [rbx - 0x3c] ; cmp byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040723a : lea esp, dword ptr [rax - 0x16000002] ; ret 9
0x00000000004116b5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421559 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004116b4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004257f0 : leave ; mov dword ptr [rbp - 0x178], eax ; call 0x401a89
0x000000000041a2ce : ljmp ptr [rdi] ; ret 0x23da
0x00000000004075bf : ljmp ptr [rsi + 6] ; ret 0xe947
0x000000000040a4f0 : lodsb al, byte ptr [rsi] ; ret
0x000000000043692d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000408aef : loop 0x408aaf ; ret 0x8589
0x0000000000408d4a : loop 0x408d0a ; ret 0xf4b9
0x0000000000425afb : loop 0x425b1c ; ret 0x8977
0x0000000000435f70 : loop 0x435f65 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x00000000004459e2 : loop 0x445995 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004076ed : loope 0x4076cf ; jl 0x407680 ; push rbp ; ret
0x0000000000408991 : loope 0x408951 ; ret 0x8589
0x000000000041d2d5 : loope 0x41d2a3 ; jmp 0x41f543
0x0000000000436cae : loope 0x436c69 ; xchg eax, ebp ; jmp 0x436e03
0x000000000040d63b : loopne 0x40d68b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d63a : loopne 0x40d68c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004116b3 : loopne 0x411706 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000420c5d : loopne 0x420cc3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422044 : loopne 0x422097 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000424d22 : loopne 0x424d29 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042732b : loopne 0x427335 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427a7d : loopne 0x427a87 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000042abab : loopne 0x42abb5 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042cf05 : loopne 0x42cf0c ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f333 : loopne 0x42f33c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042fcbe : loopne 0x42fd0e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042fcbd : loopne 0x42fd0f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000433f80 : loopne 0x433f87 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434912 : loopne 0x434919 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043839a : loopne 0x4383a1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043b9ee : loopne 0x43ba3f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043b9ed : loopne 0x43ba40 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000440c8d : loopne 0x440ce0 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000447d3c : loopne 0x447d8b ; mov esp, ebp ; pop rbp ; ret
0x0000000000447d3b : loopne 0x447d8c ; mov esp, ebp ; pop rbp ; ret
0x0000000000447f8c : loopne 0x447fdb ; mov esp, ebp ; pop rbp ; ret
0x0000000000447f8b : loopne 0x447fdc ; mov esp, ebp ; pop rbp ; ret
0x00000000004459e1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041ae9d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041af77 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000436f0e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000418f25 : mov ah, 0x75 ; ret
0x0000000000422fdf : mov al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000421a33 : mov al, -0x47 ; ret
0x0000000000436caf : mov al, -0x6b ; jmp 0x436e02
0x000000000044378f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000424be4 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a8e6 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004454be : mov al, 0 ; call 0x401774
0x0000000000440090 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000445e3b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x00000000004465ad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044627a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c3e5 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004464dd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000445efc : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000445e3a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000445c04 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000445c09 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004128c5 : mov bl, 0x75 ; ret
0x0000000000409c7d : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436d71 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000448de4 : mov byte ptr [rdi], dl ; cld ; jmp rax
0x0000000000401c03 : mov byte ptr [rip + 0x24972e], 1 ; ret
0x00000000004492ad : mov ch, -1 ; jmp qword ptr [rax]
0x0000000000407bde : mov ch, 0x34 ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407191 : mov ch, 0x7c ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000448f5d : mov ch, bh ; call rax
0x000000000041a71f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000441584 : mov dh, -0x39 ; pop rbp ; ret
0x000000000043a9e2 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000447244 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000446096 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c3eb : mov dh, -0x40 ; pop rbp ; ret
0x0000000000445eff : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000044916d : mov dh, -2 ; jmp qword ptr [rax]
0x0000000000447cfa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000044915d : mov dl, -2 ; jmp rax
0x0000000000446f71 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000410e39 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042a1e3 : mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x0000000000428bba : mov dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000410a0f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439245 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x000000000043b889 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000043438a : mov dword ptr [rbp - 0x14], eax ; jmp 0x43440b
0x00000000004411af : mov dword ptr [rbp - 0x14], eax ; jmp 0x44137f
0x00000000004257f1 : mov dword ptr [rbp - 0x178], eax ; call 0x401a88
0x000000000043f65d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x000000000043f890 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000040d639 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000436ba1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x436e03
0x0000000000437436 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x4375c8
0x00000000004374c1 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x4375c8
0x0000000000436f0c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042dc08 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42e67a
0x0000000000402077 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004374a1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x00000000004020a5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411116 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427575 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x0000000000440d50 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000427555 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x0000000000424d95 : mov dword ptr [rdi + rsi*8], edx ; pop rbp ; ret
0x0000000000408254 : mov dword ptr [rdx + rcx*8], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410cbd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043f9fb : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042a59b : mov eax, 0xda72bf48 ; ret
0x000000000040bc83 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fb3b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000433721 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004259fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d2be : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434205 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410e3c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042fcbc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000447d3a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042852d : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000422326 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410cbf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004375ff : mov eax, dword ptr [rbp - 0x40] ; call rax
0x000000000040bc80 : mov eax, dword ptr [rbp - 0x40] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ee27 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042325e : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004107ff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040b0c3 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043397c : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040beb0 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004236aa : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000435e6d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000435e8d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042234d : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x0000000000410cbe : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000445c06 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000445653 : mov eax, eax ; pop rbp ; ret
0x0000000000445a2a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000429a58 : mov eax, ecx ; pop rbp ; ret
0x00000000004230c1 : mov eax, edi ; pop rbp ; ret
0x000000000043a361 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424ee4 : mov eax, edx ; pop rbp ; ret
0x000000000044594d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000445c05 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041d6d8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000410a0c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b79b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043b9ec : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043c306 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043759e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043f9fd : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043b79f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401c25 : mov edi, 0x64ae20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x64b2e0 ; jmp rax
0x0000000000401be2 : mov edi, 0x64b2e0 ; jmp rdx
0x00000000004411b3 : mov edi, 0xb8000001 ; ret
0x0000000000432286 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000419f77 : mov edi, 0xb8000055 ; wait ; jo 0x419f8f ; ret
0x0000000000427571 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000440d4c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427551 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000424d91 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000435e69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000435e89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422349 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000043b7a2 : mov edi, dword ptr [rcx] ; call rax
0x00000000004393c1 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000427b17 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000447ff7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000447ff6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000443f3e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a73b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000427b13 : mov edx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000041b5b2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000443f27 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004393c4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x00000000004375a2 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401be0 : mov esi, eax ; mov edi, 0x64b2e0 ; jmp rdx
0x00000000004375fc : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004267de : mov esp, 0x2dfffffe ; jrcxz 0x426809 ; ret 0x8977
0x0000000000425af6 : mov esp, 0x2dfffffe ; loop 0x425b21 ; ret 0x8977
0x0000000000408258 : mov esp, ebp ; pop rbp ; ret
0x00000000004076ec : mov esp, ecx ; fstp xword ptr [rdx + rcx*4 + 0x55] ; ret
0x0000000000411115 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427574 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000440d4f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427554 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000424d94 : mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000408253 : mov qword ptr [rdx + rcx*8], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000436f0d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000422fde : mov r8b, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000410538 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fb3a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004259fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d2bd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004395e1 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042fcbb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422325 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004375fe : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000040beaf : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004236a9 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000435e6c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000435e8c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042234c : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000445a29 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000445652 : mov rax, r8 ; pop rbp ; ret
0x0000000000429a57 : mov rax, rcx ; pop rbp ; ret
0x00000000004230c0 : mov rax, rdi ; pop rbp ; ret
0x000000000043a360 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424ee3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x000000000043c305 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043759d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043f9fc : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043b79e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000427570 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000440d4b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000427550 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000424d90 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000435e68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000435e88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422348 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000043b7a1 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004393c0 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000427b16 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000427b12 : mov rdx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x00000000004393c3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004375a1 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x64b2e0 ; jmp rdx
0x00000000004375fb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000408257 : mov rsp, rbp ; pop rbp ; ret
0x000000000042f8d1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044965c : mov word ptr [rdx], es ; add byte ptr [rax], al ; shr byte ptr [rsi], -4 ; call qword ptr [rcx]
0x0000000000408ec0 : movabs al, byte ptr [0x5d000000f0c48148] ; ret
0x0000000000407b37 : movabs al, byte ptr [0xe9c60adf10fffffe] ; ret 0
0x0000000000444f31 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000416218 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000042a26a : movabs dword ptr [0x14899fe09a5aea4], eax ; ret 0x8948
0x000000000043ea8a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000419465 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000407d87 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000423a40 : movsxd rbx, edx ; ret 0x8589
0x00000000004245c0 : movsxd rbx, edx ; ret 0xb941
0x0000000000448e75 : movsxd rdi, esp ; jmp qword ptr [rax]
0x0000000000448e65 : movsxd rdi, esp ; jmp rax
0x000000000043a9e1 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000447243 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000446095 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c3ea : movzx eax, al ; pop rbp ; ret
0x0000000000445efe : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000445c08 : movzx eax, ax ; pop rbp ; ret
0x0000000000441583 : movzx eax, bh ; pop rbp ; ret
0x0000000000441582 : movzx eax, dil ; pop rbp ; ret
0x0000000000443d38 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000449b50 : nop ; jp 0x449b53 ; call qword ptr [rbx]
0x0000000000412705 : nop ; ret
0x0000000000420b12 : nop ; ret 0x148
0x0000000000420b26 : nop ; ret 0x2948
0x0000000000448018 : nop dword ptr [rax + rax] ; ret
0x0000000000448f29 : or al, 0 ; add byte ptr [rax - 0x7c], cl ; std ; call qword ptr [rax]
0x000000000041ae9a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041af74 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000448ea1 : or al, byte ptr [rax] ; add al, bl ; jl 0x448ea9 ; jmp rax
0x0000000000448e71 : or al, byte ptr [rax] ; add byte ptr [rax + 0x63], bh ; cld ; jmp qword ptr [rax]
0x0000000000441191 : or bh, al ; in al, dx ; ret 0xe8ff
0x00000000004455f5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000428575 : or bl, byte ptr [rbx + 0x4c] ; ret
0x000000000043dedd : or byte ptr [r15], 0x8f ; ret 6
0x0000000000423baa : or byte ptr [r8], al ; add cl, ch ; ret
0x000000000040af81 : or byte ptr [r9 + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004230bf : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x0000000000410a10 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000448df1 : or byte ptr [rax], al ; add byte ptr [rax + 0x24], cl ; cld ; jmp qword ptr [rax]
0x0000000000449c15 : or byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; std ; jmp qword ptr [rbx]
0x000000000042803e : or byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x45], cl ; fmul dword ptr [rax - 0x7f] ; ret 0
0x000000000042d1e8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000423bab : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000449c14 : or byte ptr [rax], r8b ; add byte ptr [rax + 0x7f], bh ; std ; jmp qword ptr [rbx]
0x000000000040af82 : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043dede : or byte ptr [rdi], 0x8f ; ret 6
0x00000000004455f4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040af7e : or dword ptr [rax + 0x3b], ecx ; or byte ptr [r9 + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041bf86 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000411114 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000448e61 : or dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rdi, esp ; jmp rax
0x00000000004236a5 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000448f59 : or eax, 0x88680000 ; std ; call rax
0x000000000042ca01 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e07c : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000445650 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000445953 : or eax, esi ; pop rbp ; ret
0x00000000004285ba : or ebx, dword ptr [rbx + 0x4c] ; ret
0x0000000000445a27 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000042a735 : or ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000410cbb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000445a26 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000044564f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000441580 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004230be : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000041c87b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044627c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429c14 : out dx, al ; ret
0x000000000043cf19 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043d098 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004465af : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421a32 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000429c5f : out dx, eax ; ret
0x0000000000443f29 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000427878 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436e99 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041d965 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004125b6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041d9b0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042ea71 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000449841 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x0000000000443f2c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042f8cc : pop ax ; jb 0x42f901 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004077f6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044800c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420c5f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004077f8 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044800e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004077fa : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000448010 : pop r14 ; pop r15 ; ret
0x00000000004116b9 : pop r14 ; pop rbp ; ret
0x00000000004077fc : pop r15 ; pop rbp ; ret
0x0000000000448012 : pop r15 ; ret
0x000000000042f8cd : pop rax ; jb 0x42f900 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044915c : pop rax ; mov dl, -2 ; jmp rax
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x24972e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x64b2e0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x64b2e0 ; jmp rdx
0x000000000044800b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004077f9 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044800f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041a722 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004169f5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041a73e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b95 : pop rbp ; ret
0x000000000040f648 : pop rbx ; add al, 0 ; add cl, ch ; ret 1
0x000000000040775f : pop rbx ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000420c5e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f955 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004116b8 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004332d6 : pop rbx ; pop rbp ; ret
0x0000000000428576 : pop rbx ; ret
0x000000000041a723 : pop rcx ; ret 0x1b2
0x0000000000414df6 : pop rcx ; ret 0x8589
0x000000000041a73f : pop rcx ; ret 0x8b48
0x000000000041ca70 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004077fd : pop rdi ; pop rbp ; ret
0x0000000000448013 : pop rdi ; ret
0x00000000004077fb : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000448011 : pop rsi ; pop r15 ; ret
0x00000000004116ba : pop rsi ; pop rbp ; ret
0x00000000004077f7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044800d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420c60 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414df5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000436eb0 : pop rsp ; ret 0xf66
0x00000000004470c5 : popfq ; ret 0xd284
0x000000000042a180 : push -0x2b ; ret 0xf79f
0x000000000043ce65 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041a720 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041c90a : push -0x75425eeb ; push rbp ; ret
0x0000000000419468 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000448f57 : push qword ptr [rax + 0x6800000d] ; mov ch, bh ; call rax
0x0000000000448f27 : push rax ; or al, 0 ; add byte ptr [rax - 0x7c], cl ; std ; call qword ptr [rax]
0x000000000040d2c4 : push rax ; pop rbp ; ret
0x0000000000445774 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x0000000000429fb9 : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004382dc : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000436bc8 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401c24 : push rbp ; mov edi, 0x64ae20 ; mov rbp, rsp ; call rax
0x00000000004076f1 : push rbp ; ret
0x0000000000407370 : push rbp ; ret 0x1b2
0x000000000040738f : push rbp ; ret 0xd284
0x000000000042a10c : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000429091 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000042972d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000043ec06 : push rbp ; shr al, 1 ; ret
0x000000000041ae9f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041af79 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000443f2b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042b402 : push rsi ; ret
0x0000000000429e02 : pushfq ; ret 0xd284
0x0000000000449118 : rcl byte ptr [rax + rax], 0 ; fsubr dword ptr [rbp - 2] ; jmp rax
0x0000000000449158 : rcl byte ptr [rip - 0x4da80000], -2 ; jmp rax
0x0000000000449198 : rcl byte ptr [rsi], 0 ; add al, ch ; sar dh, 1 ; jmp rax
0x00000000004004b0 : ret
0x0000000000407b40 : ret 0
0x00000000004382e0 : ret 0x10
0x0000000000420b13 : ret 0x148
0x000000000042a017 : ret 0x1772
0x000000000041da74 : ret 0x1a
0x0000000000412ced : ret 0x1add
0x0000000000407371 : ret 0x1b2
0x00000000004368bd : ret 0x1cdd
0x00000000004367e5 : ret 0x1e1
0x0000000000429731 : ret 0x20
0x000000000042a678 : ret 0x2149
0x0000000000444188 : ret 0x22e8
0x000000000041363a : ret 0x23da
0x00000000004019f2 : ret 0x2497
0x00000000004017f2 : ret 0x2498
0x0000000000420338 : ret 0x279e
0x0000000000436e9a : ret 0x280f
0x000000000041bf89 : ret 0x2948
0x000000000042af61 : ret 0x294c
0x000000000041ca74 : ret 0x2a
0x000000000041aea2 : ret 0x2d50
0x0000000000404876 : ret 0x30
0x0000000000443a8e : ret 0x3040
0x000000000042afcd : ret 0x314c
0x0000000000437faa : ret 0x3504
0x000000000041b974 : ret 0x3b
0x00000000004189d5 : ret 0x3e
0x000000000042acfd : ret 0x410b
0x000000000042239d : ret 0x43b8
0x0000000000445779 : ret 0x4589
0x000000000041be11 : ret 0x4802
0x0000000000428140 : ret 0x4808
0x0000000000436580 : ret 0x4810
0x0000000000443f2e : ret 0x4815
0x0000000000427821 : ret 0x4818
0x0000000000425862 : ret 0x4820
0x000000000041d966 : ret 0x4861
0x0000000000426b6a : ret 0x4877
0x0000000000429f6f : ret 0x4878
0x0000000000438c37 : ret 0x48c3
0x0000000000407f7f : ret 0x48f0
0x000000000042ad0b : ret 0x490b
0x0000000000416221 : ret 0x4b
0x00000000004230dc : ret 0x4c6a
0x0000000000421837 : ret 0x4cc0
0x000000000041e878 : ret 0x4cf0
0x000000000042e7ec : ret 0x4f0b
0x0000000000410c6b : ret 0x5589
0x000000000043e6af : ret 0x558a
0x000000000041b12a : ret 0x5966
0x000000000042d447 : ret 0x5bc6
0x0000000000447cff : ret 0x61
0x00000000004065ef : ret 0x6122
0x0000000000401ce9 : ret 0x6440
0x0000000000412386 : ret 0x6a8a
0x0000000000409f9b : ret 0x7010
0x0000000000408c9f : ret 0x713f
0x000000000041203e : ret 0x77a8
0x00000000004131a1 : ret 0x7a8a
0x0000000000419e1b : ret 0x7b7f
0x0000000000428160 : ret 0x800
0x00000000004207ca : ret 0x8041
0x0000000000420a12 : ret 0x8141
0x0000000000428b47 : ret 0x8148
0x000000000042afb0 : ret 0x8149
0x000000000041bd34 : ret 0x822d
0x000000000043e812 : ret 0x8348
0x0000000000441231 : ret 0x840
0x0000000000405758 : ret 0x8445
0x0000000000405c3e : ret 0x8589
0x0000000000407765 : ret 0x858a
0x0000000000437269 : ret 0x86a5
0x0000000000445757 : ret 0x8844
0x000000000042ab59 : ret 0x8908
0x0000000000440e46 : ret 0x8938
0x0000000000412db3 : ret 0x8940
0x00000000004334fd : ret 0x8941
0x0000000000404f18 : ret 0x8947
0x0000000000401e0f : ret 0x8948
0x000000000044254f : ret 0x894a
0x00000000004125b7 : ret 0x8961
0x0000000000425afd : ret 0x8977
0x000000000040d677 : ret 0x89b5
0x0000000000430ca8 : ret 0x89f1
0x0000000000403d98 : ret 0x89f2
0x0000000000443b48 : ret 0x8a44
0x0000000000443a45 : ret 0x8a4a
0x000000000040b017 : ret 0x8b48
0x00000000004257e0 : ret 0x8b4c
0x00000000004452c2 : ret 0x941
0x0000000000428b8f : ret 0x948
0x0000000000445a02 : ret 0x949
0x00000000004328a5 : ret 0x9589
0x0000000000430147 : ret 0x9e6d
0x00000000004065f7 : ret 0x9ede
0x000000000044a704 : ret 0xa
0x000000000041af7c : ret 0xa30b
0x00000000004342cf : ret 0xac60
0x0000000000405b5f : ret 0xb0
0x0000000000426b4e : ret 0xb277
0x000000000041c880 : ret 0xb740
0x00000000004291e7 : ret 0xb848
0x000000000042804e : ret 0xb849
0x000000000041aab0 : ret 0xb940
0x00000000004245c3 : ret 0xb941
0x000000000043af4b : ret 0xb948
0x00000000004439d2 : ret 0xb94a
0x0000000000432b36 : ret 0xb9f1
0x0000000000407706 : ret 0xb9f2
0x0000000000408db2 : ret 0xbe0f
0x000000000041cefc : ret 0xbf48
0x0000000000401bc5 : ret 0xc148
0x000000000040d6ba : ret 0xc226
0x0000000000447f42 : ret 0xc493
0x0000000000446239 : ret 0xca21
0x000000000042a3af : ret 0xca29
0x0000000000447d05 : ret 0xccb2
0x0000000000405b94 : ret 0xd284
0x0000000000442195 : ret 0xd618
0x00000000004471eb : ret 0xe280
0x0000000000440e73 : ret 0xe8ff
0x000000000041c752 : ret 0xe940
0x00000000004075c2 : ret 0xe947
0x000000000041d9b1 : ret 0xe961
0x0000000000407bf5 : ret 0xe9f2
0x00000000004137dd : ret 0xea51
0x0000000000408221 : ret 0xea81
0x000000000041f56c : ret 0xee8
0x0000000000441215 : ret 0xf280
0x000000000040c0fb : ret 0xf281
0x000000000041b5b7 : ret 0xf41
0x0000000000408d4d : ret 0xf4b9
0x000000000043f92c : ret 0xf4e9
0x0000000000436eb1 : ret 0xf66
0x00000000004242ed : ret 0xf748
0x000000000042a182 : ret 0xf79f
0x000000000041d505 : ret 0xf7f3
0x000000000042816f : ret 0xf800
0x000000000041bc8e : ret 0xfc75
0x000000000043268a : ret 0xfcf1
0x000000000043ea3f : ret 0xff3
0x000000000041d4ff : ret 0xffa5
0x0000000000405fca : ret 0xffba
0x000000000041bc88 : ret 0xffc4
0x000000000041aea8 : ret 0xffd5
0x000000000041af82 : ret 0xffd8
0x000000000041bd3a : ret 0xffd9
0x000000000041b124 : ret 0xffe0
0x0000000000419e15 : ret 0xfffa
0x00000000004454c2 : ret 0xfffb
0x00000000004257f9 : ret 0xfffd
0x000000000044ab29 : ret 0xffff
0x0000000000407d8c : ret 1
0x000000000041bb20 : ret 2
0x0000000000407540 : ret 6
0x0000000000423ee3 : ret 7
0x000000000041ec74 : ret 8
0x0000000000407240 : ret 9
0x0000000000443f0d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000043da94 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000434c2c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b645 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000445eea : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000440c91 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443f0c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040bc81 : ror byte ptr [r11 - 0x1376b800], 0x5d ; ret
0x0000000000438b10 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004393be : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000429fdc : ror byte ptr [rax + 0x21], 1 ; ret 0x948
0x000000000042a10d : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000042f8c4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x0000000000438b11 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004393bf : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000446097 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004375fa : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043a9e3 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000429092 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x0000000000436d6d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042972e : ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x0000000000445a25 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000040bc82 : ror byte ptr [rbx - 0x1376b800], 0x5d ; ret
0x0000000000410cba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000448e60 : ror byte ptr [rcx], 0 ; add byte ptr [rax], bl ; movsxd rdi, esp ; jmp rax
0x0000000000445efd : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004076cd : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000448ea0 : ror byte ptr [rdx], 0 ; add al, bl ; jl 0x448eaa ; jmp rax
0x0000000000429a53 : ror dword ptr [rax + 0x21], -7 ; mov rax, rcx ; pop rbp ; ret
0x00000000004459ff : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000443d3e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004216f0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000431fcb : sahf ; ret 0xd284
0x0000000000401dbd : sal dword ptr [rsi - 0x47], 1 ; ret 0x6440
0x0000000000401dbc : sal dword ptr fs:[rsi - 0x47], 1 ; ret 0x6440
0x0000000000430d6a : salc ; jmp qword ptr [rdi]
0x0000000000430ca6 : salc ; sti ; ret 0x89f1
0x0000000000449b30 : sar byte ptr [rax - 3], 1 ; call rdx
0x00000000004295bf : sar dh, -1 ; dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000044919d : sar dh, 1 ; jmp rax
0x00000000004459e4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x000000000041ca71 : sar ebp, -0x17 ; ret 0x2a
0x00000000004491ad : sar esi, 1 ; jmp qword ptr [rax]
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000421a30 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000043353e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000043275b : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000448e64 : sbb byte ptr [rbx - 4], ah ; jmp rax
0x000000000041c971 : sbb cl, ch ; ret
0x000000000042f113 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000449229 : sbb dword ptr [rax], eax ; add byte ptr [rax], cl ; and bh, bh ; jmp qword ptr [rax]
0x0000000000436eab : sbb eax, 0xf660001 ; pop rsp ; ret 0xf66
0x00000000004395dd : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000448d79 : sbb eax, dword ptr [rbx] ; cmp esp, dword ptr [rsi + rax] ; add byte ptr [rax], al ; ret
0x0000000000420a80 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042a1df : sbb esi, dword ptr [rdi + 0x33] ; mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x000000000042a1de : sbb esi, dword ptr [rdi + r12*4 + 0x33] ; mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x0000000000449e19 : scasd eax, dword ptr [rdi] ; std ; call qword ptr [rbx]
0x0000000000424f1a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424f1c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000436ecf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x00000000004230bd : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x00000000004230bc : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000043ec07 : shr al, 1 ; ret
0x0000000000449620 : shr byte ptr [rdx], -4 ; jmp qword ptr [rdi]
0x0000000000449660 : shr byte ptr [rsi], -4 ; call qword ptr [rcx]
0x000000000041b972 : shr cl, cl ; ret 0x3b
0x0000000000426b64 : shr dword ptr [rax], 1 ; and al, 0xffffffffffffffb9 ; jrcxz 0x426b8d ; ret 0x4877
0x000000000043e179 : stc ; in al, dx ; ret 0x8589
0x000000000043ea8c : stc ; in al, dx ; ret 0xff3
0x0000000000429a56 : stc ; mov rax, rcx ; pop rbp ; ret
0x00000000004197ad : stc ; ret 0x77a8
0x0000000000448f2e : std ; call qword ptr [rax]
0x0000000000449b52 : std ; call qword ptr [rbx]
0x0000000000449c9a : std ; call qword ptr [rcx]
0x0000000000448f1e : std ; call rax
0x0000000000449a32 : std ; call rdi
0x0000000000449b32 : std ; call rdx
0x00000000004499d2 : std ; jmp qword ptr [rbx]
0x0000000000448f56 : std ; push qword ptr [rax + 0x6800000d] ; mov ch, bh ; call rax
0x0000000000448f26 : std ; push rax ; or al, 0 ; add byte ptr [rax - 0x7c], cl ; std ; call qword ptr [rax]
0x0000000000420337 : std ; ret 0x279e
0x0000000000430ca7 : sti ; ret 0x89f1
0x0000000000432b35 : sti ; ret 0xb9f1
0x000000000043e178 : sti ; stc ; in al, dx ; ret 0x8589
0x00000000004459e3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004454c1 : stosd dword ptr [rdi], eax ; ret 0xfffb
0x000000000040c5fe : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000449621 : sub bh, ah ; jmp qword ptr [rdi]
0x00000000004343d6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c4e8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041aea5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000426b65 : sub byte ptr [rcx + rdi*4], ah ; jrcxz 0x426b8c ; ret 0x4877
0x000000000041ae9b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041af75 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041bd35 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000042f8cf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000429f69 : sub esi, dword ptr [rax - 0x1ca0b1a9] ; ret 0x4878
0x0000000000448061 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000448060 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000437193 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000432688 : test al, -0x18 ; ret 0xfcf1
0x0000000000426b4a : test al, -0x47 ; jrcxz 0x426b6f ; ret 0xb277
0x000000000043ee29 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000449c98 : test al, -0x7a ; std ; call qword ptr [rcx]
0x000000000041aea0 : test al, -0x7f ; ret 0x2d50
0x000000000041af7a : test al, -0x7f ; ret 0xa30b
0x0000000000432312 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004437e3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a1b3 : test al, 0x2d ; ret
0x0000000000409f99 : test al, 0x2d ; ret 0x7010
0x0000000000448e24 : test al, 0x37 ; cld ; jmp rax
0x000000000042110e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041d6d6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000042e968 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000448f2d : test bh, ch ; call qword ptr [rax]
0x000000000043c00d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000043deda : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000044801a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b7fa : test byte ptr [rax], dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000043692c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000407d86 : test byte ptr [rbp - 0x16fffffe], ah ; ret 1
0x0000000000449f54 : test byte ptr [rbx], cl ; add byte ptr [rax], al ; call 0x11449d3f
0x000000000043dedb : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x0000000000411d1c : test byte ptr [rcx], ch ; ret 0
0x0000000000425372 : test byte ptr [rsi - 0x16fffffd], cl ; ret 1
0x0000000000436122 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040e07a : test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000043f407 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000448f2c : test dil, bpl ; call qword ptr [rax]
0x0000000000411d16 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004057fd : test dword ptr [rax - 0x16000002], esp ; jmp qword ptr [rbx]
0x000000000040753a : test dword ptr [rax - 0x16000002], esp ; ret 6
0x000000000040e637 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x00000000004455f7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004455b7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000445532 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x00000000004333b3 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000043340b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000433372 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000409d8c : test dword ptr [rdi + rdi*8 - 1], ecx ; call rax
0x0000000000409885 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004097c8 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsp
0x000000000042ea76 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000422f00 : test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rsi - 0x26] ; ret
0x0000000000422fe1 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x000000000043cdf1 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000420d2a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041c74b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041d9aa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041946a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041d95f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041b96f : wait ; jge 0x41b951 ; shr cl, cl ; ret 0x3b
0x0000000000416a2d : wait ; jo 0x416a3b ; ret
0x0000000000419f7c : wait ; jo 0x419f8a ; ret
0x0000000000449c99 : xchg ch, bh ; call qword ptr [rcx]
0x00000000004291ec : xchg dword ptr [rdi], eax ; lea ecx, dword ptr [rbx - 0x3c] ; cmp byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000443f28 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000436cb0 : xchg eax, ebp ; jmp 0x436e01
0x000000000040775e : xchg eax, ebp ; pop rbx ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004076cf : xchg eax, ebp ; ret
0x0000000000405757 : xchg eax, ebp ; ret 0x8445
0x0000000000405b93 : xchg eax, ebp ; ret 0xd284
0x00000000004295be : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax + 0x21] ; ret 0x948
0x00000000004125b5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000418eb5 : xchg eax, ebx ; ret
0x000000000042429f : xchg eax, ebx ; ret 0xd284
0x000000000040dbf1 : xchg eax, ecx ; jge 0x40dbca ; ret
0x00000000004190e5 : xchg eax, ecx ; ret
0x0000000000401c06 : xchg eax, edi ; and al, 0 ; add ebx, esi ; ret
0x000000000040a3f7 : xchg eax, edi ; and byte ptr [rax], dl ; jmp 0x40a4fe
0x00000000004434a9 : xchg eax, edi ; ret 0xd284
0x000000000040dc3c : xchg eax, edx ; jge 0x40dc15 ; ret
0x000000000040e7fc : xchg eax, edx ; jge 0x40e7d5 ; ret
0x000000000040ecaf : xchg eax, edx ; jge 0x40ec88 ; ret
0x0000000000412935 : xchg eax, edx ; ret
0x00000000004207df : xchg eax, edx ; ret 0x8445
0x000000000042e96e : xchg eax, edx ; ret 0xd284
0x0000000000426b49 : xchg eax, esi ; test al, -0x47 ; jrcxz 0x426b70 ; ret 0xb277
0x000000000040231f : xchg eax, esp ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043f928 : xchg eax, esp ; int 6
0x000000000042dc0a : xchg eax, esp ; jmp 0x42e678
0x000000000042db47 : xchg eax, esp ; jmp 0x42e67a
0x000000000041d964 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000419235 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041d9af : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000427a84 : xchg eax, esp ; ret
0x00000000004207c9 : xchg eax, esp ; ret 0x8041
0x0000000000406032 : xchg eax, esp ; ret 0x8445
0x000000000041c87e : xchg eax, esp ; ret 0xb740
0x000000000040642a : xchg eax, esp ; ret 0xd284
0x0000000000424f1b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000435f72 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000043f927 : xchg eax, r12d ; int 6
0x000000000042dc09 : xchg eax, r12d ; jmp 0x42e679
0x0000000000438c2f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000044564e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000430cfa : xlatb ; sti ; ret 0x89f1
0x0000000000432b34 : xlatb ; sti ; ret 0xb9f1
0x000000000041c879 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000042ab53 : xor bl, byte ptr [rdi - 0x7c5faa75] ; ret 0x8908
0x0000000000411117 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042908c : xor byte ptr [rax + 0x558b483a], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000040b7fb : xor byte ptr [rax + rax], al ; add cl, ch ; ret 1
0x000000000043ec03 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000411118 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004459e6 : xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000435f73 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000408829 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427c10 : xor cl, byte ptr [rcx - 0x70f05fbb] ; ret 2
0x0000000000429a52 : xor ecx, eax ; and rcx, rdi ; mov rax, rcx ; pop rbp ; ret
0x000000000044564d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000445951 : xor esi, edi ; or eax, esi ; pop rbp ; ret
