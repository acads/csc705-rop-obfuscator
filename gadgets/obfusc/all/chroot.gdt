0x0000000000432d1d : adc byte ptr [rax], al ; add byte ptr [rdx - 1], cl ; call rsp
0x00000000004285bf : adc ch, cl ; ret
0x000000000041680e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000416181 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004223eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041730b : adc eax, 0x558abda1 ; ret
0x000000000041a8e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432c1f : add ah, bh ; or edi, edi ; call rsp
0x0000000000432f4b : add ah, cl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x66], dh ; std ; call qword ptr [rcx]
0x0000000000432a67 : add ah, cl ; jns 0x432a6c ; call rsp
0x000000000042d28a : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x00000000004331bd : add al, 0 ; add byte ptr [rax], al ; xchg dh, bh ; jmp qword ptr [rbx]
0x000000000042b12a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000402b45 : add al, 0x7d ; ret 0x895d
0x000000000043331f : add al, ah ; mov bh, dh ; call rdx
0x0000000000409362 : add al, bh ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000408d9c : add al, bh ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdx
0x000000000043156d : add al, byte ptr [rax] ; add byte ptr [rbx - 0x35d247bb], cl ; ret
0x0000000000431662 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004066d7 : add al, ch ; ret
0x0000000000425908 : add al, ch ; ret 0xfdbe
0x0000000000426cb1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000426c70 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004220c4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042d029 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x000000000042ceda : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x000000000042d5d3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x000000000041cb6c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000408cd6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000417149 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000431f3f : add bl, dh ; ret
0x0000000000430962 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000430bc4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000432f4f : add byte ptr [rax + 0x66], dh ; std ; call qword ptr [rcx]
0x000000000041d338 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000041b8ab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004020b7 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000433b5f : add byte ptr [rax], ah ; in al, -1 ; call qword ptr [rax]
0x0000000000426caf : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004220c2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041cb6a : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000431f3d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402584 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000431f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000431f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040951e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000401d98 : add byte ptr [rax], al ; add byte ptr [rbx + 0x362de445], cl ; ret
0x0000000000428302 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x000000000041a352 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042d7c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x12d243bb], cl ; ret
0x0000000000420883 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043127f : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d247bb], cl ; ret
0x000000000042df1c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004231e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000406338 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408be3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000408b39 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000430963 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000430bc5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000422030 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042fd31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042a991 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004258c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041d1b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004074bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040aa1b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a6a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000421fba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ca25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000426f7b : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041a8eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419f70 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004223ed : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042e5c8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004015db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000432c1e : add byte ptr [rax], al ; cld ; or edi, edi ; call rsp
0x0000000000432ec6 : add byte ptr [rax], al ; enter -0x2b3, -1 ; call qword ptr [rdi]
0x0000000000401699 : add byte ptr [rax], al ; jmp 0x4015f9
0x0000000000426f77 : add byte ptr [rax], al ; jmp 0x426f86
0x0000000000432f4e : add byte ptr [rax], al ; jo 0x432fbd ; std ; call qword ptr [rcx]
0x0000000000432d1e : add byte ptr [rax], al ; loop 0x432d27 ; call rsp
0x000000000042701f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004309a8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043333a : add byte ptr [rax], al ; mov esp, 0xa0000005 ; mov esi, dr1 ; call qword ptr [rbx]
0x00000000004020b6 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432f0a : add byte ptr [rax], al ; mov word ptr [rcx], es ; add byte ptr [rax], al ; nop ; std ; call qword ptr [rax]
0x0000000000432f0e : add byte ptr [rax], al ; nop ; std ; call qword ptr [rax]
0x0000000000407850 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a353 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426bd4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000432cae : add byte ptr [rax], al ; pop rsp ; ret
0x000000000043321e : add byte ptr [rax], al ; push rax ; xchg esi, edi ; call rdi
0x0000000000431f3e : add byte ptr [rax], al ; ret
0x00000000004331bf : add byte ptr [rax], al ; xchg dh, bh ; jmp qword ptr [rbx]
0x00000000004334a7 : add byte ptr [rax], bh ; sar esi, 1 ; jmp rsi
0x0000000000433b47 : add byte ptr [rax], ch ; in al, -1 ; call qword ptr [rax]
0x0000000000409520 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000401d9a : add byte ptr [rbx + 0x362de445], cl ; ret
0x0000000000428304 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x000000000041a354 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426bd5 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042d7c5 : add byte ptr [rbx - 0x12d243bb], cl ; ret
0x0000000000420885 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042083a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000043156f : add byte ptr [rbx - 0x35d247bb], cl ; ret
0x0000000000431281 : add byte ptr [rbx - 0x36d247bb], cl ; ret
0x000000000042df1e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004309a9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004231eb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000406127 : add byte ptr [rbx - 0x7bf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004075a4 : add byte ptr [rbx - 0x8e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407678 : add byte ptr [rbx - 0x8ef4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004076d9 : add byte ptr [rbx - 0x8f74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040633a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408be5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000408b3b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000432f0b : add byte ptr [rcx + rax + 0x65900000], cl ; std ; call qword ptr [rax]
0x000000000042212e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401b38 : add byte ptr [rcx], al ; ret
0x0000000000430965 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000430bc7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000422032 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042fd33 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042a993 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004258c9 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041d1b7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004074c1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040aa1d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a6a7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000421fbc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ca27 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043302b : add byte ptr [rdx + rax - 0x7e000000], ch ; std ; call qword ptr [rdx]
0x0000000000432d1f : add byte ptr [rdx - 1], cl ; call rsp
0x000000000041727c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000420a8d : add cl, ch ; ret
0x0000000000431664 : add cl, ch ; ret 1
0x0000000000426c6e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042d5d1 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x0000000000432f4d : add dword ptr [rax], eax ; add byte ptr [rax + 0x66], dh ; std ; call qword ptr [rcx]
0x00000000004020b5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042feb2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042ed04 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c62 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401b34 : add eax, 0x23281e ; add ebx, esi ; ret
0x0000000000426bd3 : add eax, 0x5d5b0000 ; ret
0x0000000000432a65 : add eax, 0x79cc0000 ; std ; call rsp
0x0000000000401afb : add eax, edx ; sar rax, 1 ; jne 0x401b0c ; pop rbp ; ret
0x0000000000401b39 : add ebx, esi ; ret
0x000000000040222b : add esp, 0x10 ; pop rbp ; ret
0x000000000042212c : add esp, 0x100 ; pop rbp ; ret
0x0000000000407c31 : add esp, 0x130 ; pop rbp ; ret
0x000000000042229c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000419f73 : add esp, 0x20 ; pop rbp ; ret
0x0000000000431e0d : add esp, 0x260 ; pop rbp ; ret
0x000000000042d576 : add esp, 0x3e0 ; pop rbp ; ret
0x00000000004223f0 : add esp, 0x40 ; pop rbp ; ret
0x000000000042b329 : add esp, 0x440 ; pop rbp ; ret
0x000000000040a362 : add esp, 0x50 ; pop rbp ; ret
0x0000000000426bd0 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x0000000000423310 : add esp, 0x60 ; pop rbp ; ret
0x000000000041bc62 : add esp, 0x70 ; pop rbp ; ret
0x00000000004286d4 : add esp, 0x78 ; pop rbp ; ret
0x000000000040a68f : add esp, 0x80 ; pop rbp ; ret
0x0000000000422a6d : add esp, 0x90 ; pop rbp ; ret
0x000000000041ca46 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041a84b : add esp, 0xb0 ; pop rbp ; ret
0x000000000040abfa : add esp, 0xd0 ; pop rbp ; ret
0x000000000042e16e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042807f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040b203 : add esp, 8 ; pop rbp ; ret
0x00000000004015de : add esp, 8 ; ret
0x0000000000425907 : add r8b, bpl ; ret 0xfdbe
0x0000000000401afa : add rax, rdx ; sar rax, 1 ; jne 0x401b0d ; pop rbp ; ret
0x000000000040222a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042212b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000407c30 : add rsp, 0x130 ; pop rbp ; ret
0x000000000042229b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000419f72 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000431e0c : add rsp, 0x260 ; pop rbp ; ret
0x000000000042d575 : add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004223ef : add rsp, 0x40 ; pop rbp ; ret
0x000000000042b328 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040a361 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000426bcf : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042330f : add rsp, 0x60 ; pop rbp ; ret
0x000000000041bc61 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004286d3 : add rsp, 0x78 ; pop rbp ; ret
0x000000000040a68e : add rsp, 0x80 ; pop rbp ; ret
0x0000000000422a6c : add rsp, 0x90 ; pop rbp ; ret
0x000000000041ca45 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041a84a : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040abf9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042e16d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042807e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040b202 : add rsp, 8 ; pop rbp ; ret
0x00000000004015dd : add rsp, 8 ; ret
0x000000000043096d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042ed03 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c61 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422f1b : and byte ptr [rsi + 0x58], ah ; jb 0x422f52 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004164b1 : and eax, 0x75b4b9d3 ; ret
0x000000000042701d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000401b37 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004054b6 : call 0x4016f2
0x000000000040589b : call 0x401b72
0x0000000000423315 : call 0x4233d9
0x000000000041f907 : call 0x4236f7
0x000000000042e4bd : call 0xffffffffaca3a6f1
0x000000000042e4bc : call 0xffffffffaca3a6f2
0x0000000000419f69 : call 0xffffffffe90428b9
0x0000000000419f68 : call 0xffffffffe90428ba
0x0000000000401ad3 : call 0xffffffffff407e1e
0x0000000000401b13 : call 0xffffffffff407e5e
0x0000000000431f19 : call qword ptr [r12 + rbx*8]
0x00000000004065f1 : call qword ptr [rax]
0x000000000040583c : call qword ptr [rbx]
0x000000000041eb36 : call qword ptr [rcx]
0x0000000000409368 : call qword ptr [rdi]
0x00000000004073a2 : call qword ptr [rdx]
0x0000000000431f1a : call qword ptr [rsp + rbx*8]
0x0000000000401b5d : call rax
0x000000000041cb72 : call rbx
0x000000000041765b : call rcx
0x0000000000419034 : call rdi
0x0000000000418865 : call rdx
0x00000000004094cb : call rsp
0x000000000042b327 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000422677 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000427609 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401aff : clc ; jne 0x401b08 ; pop rbp ; ret
0x00000000004094a6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042727e : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409497 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041b8af : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040949b : clc ; pop rbp ; ret
0x000000000041d33c : clc ; pop rbx ; pop rbp ; ret
0x000000000040ca3d : clc ; ret 0x77a8
0x00000000004236c2 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042eafe : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042807d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040954f : cld ; jmp 0x4095bc
0x000000000040954e : cld ; jmp 0x4095bd
0x0000000000432c20 : cld ; or edi, edi ; call rsp
0x0000000000422f20 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043096c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000421e3b : cmc ; ret 0x4f0b
0x0000000000406336 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041d1b3 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041d275 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421fd1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000423f87 : cmp dl, al ; ret
0x00000000004074bd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000426059 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x000000000041f909 : cmp eax, 0xc1ba0000 ; ret
0x0000000000401abd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ad0 ; pop rbp ; ret
0x0000000000417307 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000426bd2 : cwde ; add eax, 0x5d5b0000 ; ret
0x000000000041680b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041617e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000416983 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042304d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042ae86 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000406af7 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406cd2 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004066d2 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406af1 : dec dword ptr [rax - 0x7f86b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406e37 : dec dword ptr [rax - 0x8246b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406f7d : dec dword ptr [rax - 0x83c6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000041fe8f : dec dword ptr [rbx - 0x58b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000421e36 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000041fe95 : dec dword ptr [rdi] ; ret 0x8589
0x000000000043165e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffe], ch ; ret 1
0x000000000040c71a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042cfcd : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000042acb3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000432ec8 : enter -0x2b3, -1 ; call qword ptr [rdi]
0x000000000042cfa5 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a909 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040aa19 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004318ea : fdivr st(7) ; ret 0x5589
0x0000000000426e3b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042ef28 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042dc07 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000042dc08 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000431f1c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000402229 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e16c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040b201 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401ad0 : hlt ; pop rbp ; mov edi, 0x6342e8 ; jmp rax
0x000000000042304b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000406e3b : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406cd0 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004075a8 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000433b49 : in al, -1 ; call qword ptr [rax]
0x0000000000401d9d : in al, 0x2d ; ret
0x00000000004279c1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000402074 : in al, dx ; jmp 0x4021f0
0x0000000000402073 : in al, dx ; jmp 0x4021f1
0x000000000042e57c : in al, dx ; jmp 0x42e5f9
0x000000000042e57b : in al, dx ; jmp 0x42e5fa
0x00000000004020ba : in al, dx ; pop rbp ; ret
0x000000000042d7ca : in eax, dx ; ret
0x000000000040556f : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000407ae6 : inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0x0000000000426d09 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042d631 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042ca3f : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x0000000000423a46 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x0000000000423a9a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000041c417 : int 0x5b
0x0000000000401ac3 : ja 0x401aca ; pop rbp ; ret
0x0000000000422f1e : jb 0x422f4f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004285bd : jbe 0x428596 ; adc ch, cl ; ret
0x0000000000401acf : je 0x401acd ; pop rbp ; mov edi, 0x6342e8 ; jmp rax
0x0000000000431c36 : jg 0x431c4a ; xchg eax, esp ; ret 0xd284
0x0000000000409496 : jge 0x409497 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004158a6 : jge 0x41582b ; ret 0xffd5
0x0000000000416370 : jge 0x416350 ; shr cl, cl ; ret 0x3b
0x000000000040169b : jmp 0x4015f7
0x0000000000402075 : jmp 0x4021ef
0x00000000004060e7 : jmp 0x4076fc
0x0000000000409550 : jmp 0x4095bb
0x0000000000416ac0 : jmp 0x419f40
0x00000000004149c4 : jmp 0x419f41
0x0000000000415d91 : jmp 0x419f42
0x000000000042125b : jmp 0x421cc7
0x0000000000421198 : jmp 0x421cc9
0x00000000004232c3 : jmp 0x423328
0x0000000000425d0b : jmp 0x426e50
0x0000000000426726 : jmp 0x426e51
0x0000000000426f79 : jmp 0x426f84
0x000000000042b1c6 : jmp 0x42b4a8
0x000000000042d2d8 : jmp 0x42d78a
0x000000000042e57d : jmp 0x42e5f8
0x0000000000431951 : jmp 0x431ed4
0x0000000000421e3a : jmp 0x4f4de136
0x0000000000419895 : jmp qword ptr [rax]
0x00000000004331c3 : jmp qword ptr [rbx]
0x000000000040b692 : jmp qword ptr [rcx]
0x000000000042d5bb : jmp qword ptr [rdi]
0x00000000004220ca : jmp qword ptr [rdx]
0x000000000042d5d9 : jmp qword ptr [rsi]
0x0000000000401ad7 : jmp rax
0x0000000000415e98 : jmp rbx
0x00000000004168ca : jmp rcx
0x0000000000415ef2 : jmp rdi
0x0000000000401b17 : jmp rdx
0x000000000042058e : jmp rsi
0x00000000004161a8 : jmp rsp
0x0000000000401b00 : jne 0x401b07 ; pop rbp ; ret
0x0000000000432a69 : jns 0x432a6a ; call rsp
0x000000000040f7be : jo 0x40f7ca ; ret
0x000000000041142e : jo 0x41143a ; ret
0x000000000041497d : jo 0x414989 ; ret
0x000000000041bc64 : jo 0x41bcc5 ; ret
0x0000000000432f50 : jo 0x432fbb ; std ; call qword ptr [rcx]
0x00000000004286d6 : js 0x428737 ; ret
0x000000000041636e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041746e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000409d56 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405896 : lea ecx, dword ptr [rax + rdi*8 - 0x2f170001] ; ret 0xffff
0x000000000040706a : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041bf59 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d33a : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407069 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d339 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000431286 : leave ; ret
0x0000000000414cce : ljmp ptr [rdi] ; ret 0x23da
0x0000000000402583 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407f97 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000432d21 : loop 0x432d24 ; call rsp
0x0000000000432d20 : loop 0x432d25 ; call rsp
0x0000000000417cd5 : loope 0x417ca3 ; jmp 0x419f43
0x0000000000409244 : loopne 0x4092aa ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c0b3 : loopne 0x40c106 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b65d : loopne 0x41b6c3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041ca44 : loopne 0x41ca97 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000422983 : loopne 0x42298c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042330e : loopne 0x42335e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042330d : loopne 0x42335f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042d578 : loopne 0x42d582 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e170 : loopne 0x42e177 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042eb02 : loopne 0x42eb09 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004309ac : loopne 0x4309fb ; mov esp, ebp ; pop rbp ; ret
0x00000000004309ab : loopne 0x4309fc ; mov esp, ebp ; pop rbp ; ret
0x0000000000430bfc : loopne 0x430c4b ; mov esp, ebp ; pop rbp ; ret
0x0000000000430bfb : loopne 0x430c4c ; mov esp, ebp ; pop rbp ; ret
0x000000000041589d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415977 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000432d1c : mov ah, 0x10 ; add byte ptr [rax], al ; loop 0x432d29 ; call rsp
0x0000000000413925 : mov ah, 0x75 ; ret
0x0000000000432c1c : mov ah, 0xc ; add byte ptr [rax], al ; cld ; or edi, edi ; call rsp
0x000000000041c433 : mov al, -0x47 ; ret
0x000000000042d359 : mov al, -1 ; ret 0x5589
0x000000000042a98f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041a84d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f21d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042eeea : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f14d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433321 : mov bh, dh ; call rdx
0x000000000040d2c5 : mov bl, 0x75 ; ret
0x00000000004094a7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401b33 : mov byte ptr [rip + 0x23281e], 1 ; ret
0x000000000040767a : mov ch, 0x10 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407619 : mov ch, 0x18 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004075a6 : mov ch, 0x1c ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004076db : mov ch, 8 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041511f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042feb4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042ed06 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c64 : mov dh, -0x40 ; pop rbp ; ret
0x000000000043096a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042fbe1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040b839 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b40f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042e57a : mov dword ptr [rbp - 0x14], eax ; jmp 0x42e5fb
0x0000000000421258 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x421cca
0x00000000004054b0 : mov dword ptr [rbp - 0x750], edx ; call 0x4016f8
0x0000000000405895 : mov dword ptr [rbp - 0x774], ecx ; call 0x401b78
0x0000000000402227 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409495 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bb16 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b6bd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041d337 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040af39 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042318b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427021 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042335e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a35e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042e3f5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b83c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042330c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004309aa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004286d0 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000040b6bf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040b1ff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000042727c : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b8ad : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409499 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b6be : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004180d8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401b5b : mov ebp, esp ; call rax
0x0000000000401ac1 : mov ebp, esp ; ja 0x401acc ; pop rbp ; ret
0x0000000000407ae3 : mov ecx, 0xc7ffff9e ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0x000000000040b40c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401b55 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x0000000000401ad2 : mov edi, 0x6342e8 ; jmp rax
0x0000000000401b12 : mov edi, 0x6342e8 ; jmp rdx
0x0000000000425b86 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000414977 : mov edi, 0xb8000055 ; wait ; jo 0x41498f ; ret
0x0000000000431f17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000431f16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042b13e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041513b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000415fb2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042b127 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000433341 : mov esi, dr1 ; call qword ptr [rbx]
0x0000000000401b10 : mov esi, eax ; mov edi, 0x6342e8 ; jmp rdx
0x000000000043333c : mov esp, 0xa0000005 ; mov esi, dr1 ; call qword ptr [rbx]
0x00000000004020b9 : mov esp, ebp ; pop rbp ; ret
0x00000000004054af : mov qword ptr [rbp - 0x750], rdx ; call 0x4016f9
0x0000000000409494 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bb15 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d336 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040af38 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042318a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042335d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a35d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042330b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004286cf : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000041b8ac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409498 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b5a : mov rbp, rsp ; call rax
0x0000000000401ac0 : mov rbp, rsp ; ja 0x401acd ; pop rbp ; ret
0x0000000000401b0f : mov rsi, rax ; mov edi, 0x6342e8 ; jmp rdx
0x00000000004020b8 : mov rsp, rbp ; pop rbp ; ret
0x0000000000422f21 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000432f0c : mov word ptr [rcx], es ; add byte ptr [rax], al ; nop ; std ; call qword ptr [rax]
0x0000000000430dc0 : movabs al, byte ptr [0x840fffffff748589] ; ret
0x0000000000408fb3 : movabs al, byte ptr [0x894400000004b841] ; ret 0x8589
0x000000000042d5b5 : movabs al, byte ptr [0xd27ffffff7c85c7] ; ret 0xe9da
0x0000000000410c18 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000413e65 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000042feb3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000042ed05 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c63 : movzx eax, al ; pop rbp ; ret
0x00000000004094aa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042af38 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040d105 : nop ; ret
0x000000000041b512 : nop ; ret 0x148
0x000000000041b526 : nop ; ret 0x2948
0x0000000000432f10 : nop ; std ; call qword ptr [rax]
0x0000000000431f38 : nop dword ptr [rax + rax] ; ret
0x0000000000432c1d : or al, 0 ; add ah, bh ; or edi, edi ; call rsp
0x000000000041589a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415974 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040b410 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042ced8 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x0000000000420838 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000416986 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040bb14 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040784e : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004066cc : or dword ptr [rbx - 0x7db4b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b6bb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000432c21 : or edi, edi ; call rsp
0x000000000041727b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042eeec : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f21f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c432 : out dx, eax ; mov al, -0x47 ; ret
0x000000000042b129 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042be6c : outsb dx, byte ptr [rsi] ; ret
0x0000000000418365 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040cfb6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004183b0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004220c1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042c0d4 : outsd dx, dword ptr [rsi] ; ret
0x000000000042b12c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000422f1c : pop ax ; jb 0x422f51 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000419219 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431f2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409246 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041921b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431f2e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409248 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431f30 : pop r14 ; pop r15 ; ret
0x000000000040706e : pop r14 ; pop rbp ; ret
0x000000000040924a : pop r15 ; pop rbp ; ret
0x0000000000431f32 : pop r15 ; ret
0x0000000000422f1d : pop rax ; jb 0x422f50 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401b32 : pop rbp ; mov byte ptr [rip + 0x23281e], 1 ; ret
0x0000000000401ad1 : pop rbp ; mov edi, 0x6342e8 ; jmp rax
0x0000000000401b0e : pop rbp ; mov rsi, rax ; mov edi, 0x6342e8 ; jmp rdx
0x0000000000431f2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041921c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431f2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000415122 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004113f5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041513e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401ac5 : pop rbp ; ret
0x0000000000409245 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a355 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040706d : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d33d : pop rbx ; pop rbp ; ret
0x0000000000420840 : pop rbx ; ret
0x0000000000415123 : pop rcx ; ret 0x1b2
0x000000000040f7f6 : pop rcx ; ret 0x8589
0x000000000041513f : pop rcx ; ret 0x8b48
0x0000000000417470 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040924b : pop rdi ; pop rbp ; ret
0x0000000000431f33 : pop rdi ; ret
0x000000000042cf25 : pop rdx ; or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x0000000000409249 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000431f31 : pop rsi ; pop r15 ; ret
0x000000000040706f : pop rsi ; pop rbp ; ret
0x000000000041921a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431f2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409247 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f7f5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000432cb0 : pop rsp ; ret
0x000000000042fd35 : popfq ; ret 0xd284
0x0000000000415120 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041f6e1 : push -0x47 ; ret 0xf80
0x000000000041730a : push -0x75425eeb ; push rbp ; ret
0x0000000000413e68 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000432a63 : push qword ptr [rbp + rax + 0x79cc0000] ; std ; call rsp
0x0000000000432aa3 : push qword ptr [rsi + rax - 0x6e740000] ; std ; call rsp
0x000000000040a364 : push rax ; pop rbp ; ret
0x0000000000433220 : push rax ; xchg esi, edi ; call rdi
0x00000000004318e9 : push rbp ; fdivr st(7) ; ret 0x5589
0x000000000042d358 : push rbp ; mov al, -1 ; ret 0x5589
0x0000000000401b54 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x000000000041730f : push rbp ; ret
0x00000000004172a6 : push rbp ; ret 0xd284
0x000000000041589f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415979 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042b12b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042a995 : pushfq ; ret 0xd284
0x00000000004015e1 : ret
0x000000000040c71e : ret 0
0x00000000004074d9 : ret 0x134
0x000000000041b513 : ret 0x148
0x0000000000418474 : ret 0x1a
0x000000000040d6ed : ret 0x1add
0x0000000000415125 : ret 0x1b2
0x00000000004018a2 : ret 0x2328
0x00000000004016a2 : ret 0x2329
0x000000000040e03a : ret 0x23da
0x000000000041ad38 : ret 0x279e
0x0000000000416989 : ret 0x2948
0x0000000000417474 : ret 0x2a
0x00000000004158a2 : ret 0x2d50
0x000000000042ac8e : ret 0x3040
0x000000000042b388 : ret 0x32e8
0x0000000000416374 : ret 0x3b
0x00000000004133d5 : ret 0x3e
0x0000000000416811 : ret 0x4802
0x000000000042d3f9 : ret 0x4804
0x000000000042b12e : ret 0x4815
0x0000000000407348 : ret 0x485d
0x0000000000418366 : ret 0x4861
0x000000000041f118 : ret 0x48e0
0x0000000000401e74 : ret 0x48f0
0x0000000000410c21 : ret 0x4b
0x000000000041c237 : ret 0x4cc0
0x00000000004070c7 : ret 0x4cf0
0x0000000000421e3c : ret 0x4f0b
0x000000000040b66b : ret 0x5589
0x0000000000415b2a : ret 0x5966
0x0000000000420a97 : ret 0x5bc6
0x000000000043096f : ret 0x61
0x000000000040cd86 : ret 0x6a8a
0x000000000040ca3e : ret 0x77a8
0x000000000040dba1 : ret 0x7a8a
0x000000000041481b : ret 0x7b7f
0x000000000041b1ca : ret 0x8041
0x000000000041dbe6 : ret 0x8046
0x000000000041b412 : ret 0x8141
0x000000000042ae89 : ret 0x8148
0x0000000000416734 : ret 0x822d
0x0000000000405573 : ret 0x8445
0x0000000000408fbc : ret 0x8589
0x0000000000401f7c : ret 0x858a
0x00000000004074c4 : ret 0x8840
0x000000000040d7b3 : ret 0x8940
0x0000000000426dfd : ret 0x8941
0x0000000000408ec5 : ret 0x8948
0x000000000042974f : ret 0x894a
0x0000000000430ed2 : ret 0x8957
0x0000000000402b47 : ret 0x895d
0x000000000040cfb7 : ret 0x8961
0x000000000042bc22 : ret 0x89da
0x00000000004245a8 : ret 0x89f1
0x000000000042ad48 : ret 0x8a44
0x000000000042ac45 : ret 0x8a4a
0x0000000000406cd5 : ret 0x8b48
0x00000000004261a5 : ret 0x9589
0x0000000000423a47 : ret 0x9e6d
0x000000000041597c : ret 0xa30b
0x000000000041fb54 : ret 0xa7b9
0x000000000042e4bf : ret 0xac60
0x00000000004066d5 : ret 0xb0
0x0000000000417280 : ret 0xb740
0x0000000000422f17 : ret 0xb848
0x00000000004154b0 : ret 0xb940
0x000000000042abd2 : ret 0xb94a
0x0000000000431bc3 : ret 0xb957
0x0000000000405de9 : ret 0xb95d
0x000000000042cb60 : ret 0xb9da
0x0000000000426436 : ret 0xb9f1
0x00000000004178fc : ret 0xbf48
0x0000000000401af5 : ret 0xc148
0x0000000000430bb2 : ret 0xc493
0x000000000042eea9 : ret 0xca21
0x0000000000426cf5 : ret 0xca29
0x0000000000430975 : ret 0xccb2
0x000000000040aa20 : ret 0xd284
0x0000000000429395 : ret 0xd618
0x000000000042fe5b : ret 0xe280
0x0000000000417152 : ret 0xe940
0x00000000004183b1 : ret 0xe961
0x000000000042d5be : ret 0xe9da
0x000000000040e1dd : ret 0xea51
0x0000000000430967 : ret 0xea81
0x0000000000419f6c : ret 0xee8
0x000000000040b6a5 : ret 0xf281
0x0000000000415fb7 : ret 0xf41
0x0000000000417f05 : ret 0xf7f3
0x000000000041ed4a : ret 0xf80
0x000000000041e142 : ret 0xfc61
0x000000000041668e : ret 0xfc75
0x000000000042590a : ret 0xfdbe
0x0000000000417eff : ret 0xffa5
0x0000000000416688 : ret 0xffc4
0x00000000004158a8 : ret 0xffd5
0x0000000000415982 : ret 0xffd8
0x000000000041673a : ret 0xffd9
0x0000000000415b24 : ret 0xffe0
0x0000000000414815 : ret 0xfffa
0x00000000004054b8 : ret 0xffff
0x0000000000415ff0 : ret 1
0x0000000000416520 : ret 2
0x000000000042d2bd : ret 4
0x000000000041ff07 : ret 6
0x0000000000419674 : ret 8
0x000000000042b10d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042757c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040abfc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b10c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004015d9 : rol dword ptr [rdx], cl ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000422f14 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401afc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b0b ; pop rbp ; ret
0x000000000042ed07 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040935f : ror byte ptr [rax - 0x77], 1 ; add al, bh ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000408d99 : ror byte ptr [rax - 0x77], 1 ; add al, bh ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdx
0x0000000000407c2f : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b6ba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042af3e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041c0f0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004258cb : sahf ; ret 0xd284
0x0000000000401ace : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407e23
0x000000000042466a : salc ; jmp qword ptr [rdi]
0x00000000004245a6 : salc ; sti ; ret 0x89f1
0x0000000000401afe : sar eax, 1 ; jne 0x401b09 ; pop rbp ; ret
0x0000000000417471 : sar ebp, -0x17 ; ret 0x2a
0x00000000004334a9 : sar esi, 1 ; jmp rsi
0x0000000000401afd : sar rax, 1 ; jne 0x401b0a ; pop rbp ; ret
0x0000000000407f95 : sbb al, -0x78 ; lodsd eax, dword ptr [rsi] ; ret
0x000000000041c430 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000426e3e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042605b : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000417371 : sbb cl, ch ; ret
0x0000000000422763 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b480 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042d5d0 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x0000000000407c5e : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407c60 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416372 : shr cl, cl ; ret 0x3b
0x00000000004141ad : stc ; ret 0x77a8
0x0000000000432f12 : std ; call qword ptr [rax]
0x0000000000432f52 : std ; call qword ptr [rcx]
0x0000000000433032 : std ; call qword ptr [rdx]
0x0000000000432a6a : std ; call rsp
0x0000000000432a62 : std ; push qword ptr [rbp + rax + 0x79cc0000] ; std ; call rsp
0x0000000000432aa2 : std ; push qword ptr [rsi + rax - 0x6e740000] ; std ; call rsp
0x000000000041ad37 : std ; ret 0x279e
0x00000000004245a7 : sti ; ret 0x89f1
0x0000000000426435 : sti ; ret 0xb9f1
0x000000000040969e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042e5c6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409588 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004158a5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000401b36 : sub byte ptr [rbx], ah ; add byte ptr [rcx], al ; ret
0x000000000041589b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000415975 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000416735 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000422f1f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000431f91 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000431f90 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004158a0 : test al, -0x7f ; ret 0x2d50
0x000000000041597a : test al, -0x7f ; ret 0xa30b
0x0000000000425c12 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a9e3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041bb0e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004180d6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000404921 : test al, 0x73 ; ret
0x0000000000421fb8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000431660 : test byte ptr [rax - 0x16fffffe], ch ; ret 1
0x0000000000431f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c71c : test byte ptr [rcx], ch ; ret 0
0x000000000040c716 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000041db0b : test dword ptr [rbp + rdi*8 - 0x7bf00001], ecx ; ret
0x0000000000407ae8 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0x0000000000426cb3 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000426d0b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000426c72 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004220c6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042d02b : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x000000000042d633 : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042ca41 : test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x000000000042d5b7 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdi]
0x000000000042d57f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdx]
0x000000000042d5d5 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x000000000041cb6e : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000408cd8 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000409364 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000408d9e : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdx
0x000000000041b72a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041714b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004183aa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041d5a4 : test dword ptr [rsi + rdi*8 - 0x26d20001], ecx ; ret
0x000000000041d550 : test dword ptr [rsi + rdi*8 - 0x27d20001], ecx ; ret
0x000000000041ed28 : test dword ptr [rsi + rdi*8 - 0x3ed20001], ecx ; ret
0x000000000041d860 : test dword ptr [rsi + rdi*8 - 0x3fd20001], ecx ; ret
0x0000000000413e6a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041835f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041636f : wait ; jge 0x416351 ; shr cl, cl ; ret 0x3b
0x000000000041142d : wait ; jo 0x41143b ; ret
0x000000000041497c : wait ; jo 0x41498a ; ret
0x00000000004331c1 : xchg dh, bh ; jmp qword ptr [rbx]
0x000000000042b128 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040633d : xchg eax, ebp ; ret
0x0000000000405572 : xchg eax, ebp ; ret 0x8445
0x00000000004074c3 : xchg eax, ebp ; ret 0x8840
0x000000000040aa1f : xchg eax, ebp ; ret 0xd284
0x000000000040cfb5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004138b5 : xchg eax, ebx ; ret
0x0000000000413ae5 : xchg eax, ecx ; ret
0x0000000000432aa9 : xchg eax, ecx ; std ; call rsp
0x000000000042a6a9 : xchg eax, edi ; ret 0xd284
0x000000000040d335 : xchg eax, edx ; ret
0x000000000041b1df : xchg eax, edx ; ret 0x8445
0x0000000000421fbe : xchg eax, edx ; ret 0xd284
0x000000000041f6df : xchg eax, esi ; xor byte ptr [rdx - 0x47], ch ; ret 0xf80
0x000000000042125a : xchg eax, esp ; jmp 0x421cc8
0x0000000000421197 : xchg eax, esp ; jmp 0x421cca
0x0000000000418364 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000413c35 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004183af : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041b1c9 : xchg eax, esp ; ret 0x8041
0x0000000000408b3e : xchg eax, esp ; ret 0x8445
0x000000000041727e : xchg eax, esp ; ret 0xb740
0x000000000041ca29 : xchg eax, esp ; ret 0xd284
0x0000000000407c5f : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000421259 : xchg eax, r12d ; jmp 0x421cc9
0x0000000000433221 : xchg esi, edi ; call rdi
0x00000000004245fa : xlatb ; sti ; ret 0x89f1
0x0000000000426434 : xlatb ; sti ; ret 0xb9f1
0x0000000000417279 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040bb17 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040bb18 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004020b4 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c33 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f6e0 : xor byte ptr [rdx - 0x47], ch ; ret 0xf80
