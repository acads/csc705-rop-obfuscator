0x0000000000421300 : adc byte ptr [rbp - 1], al ; call rdi
0x00000000004106ae : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000410021 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041871b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004111ab : adc eax, 0x558abda1 ; ret
0x0000000000414789 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cf0a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042102c : add al, 1 ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], ah ; call qword ptr [rcx]
0x0000000000420fcf : add al, ah ; or al, 0xfffffffffffffffe ; jmp rsi
0x000000000042160f : add al, al ; jae 0x421616 ; call rdx
0x000000000042182f : add al, al ; ret 0xffff
0x0000000000403338 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401d2f : add bh, al ; mov r12b, -0x6a ; ret 0x8930
0x00000000004183f4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000410fe9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042034f : add bl, dh ; ret
0x0000000000420022 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000420284 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041740f : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041574b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403238 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040342b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004212fe : add byte ptr [rax], al ; adc byte ptr [rbp - 1], al ; call rdi
0x000000000042102a : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], ah ; call qword ptr [rcx]
0x0000000000420fcd : add byte ptr [rax], al ; add al, ah ; or al, 0xfffffffffffffffe ; jmp rsi
0x00000000004183f2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042034d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403236 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000403429 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042034b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042034c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000420d92 : add byte ptr [rax], al ; add byte ptr [rbp - 1], bl ; call qword ptr [rax]
0x00000000004033be : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004141f2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416bb3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041d5dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000401fbb : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d26fbb], cl ; ret 0x8930
0x0000000000419519 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000420023 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000420285 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000418360 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041f3f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041c771 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041e508 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004048bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041c485 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004182ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004168c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041478b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413e10 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041871d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041dc88 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000420d82 : add byte ptr [rax], al ; and byte ptr [rax - 1], bl ; call rax
0x0000000000421526 : add byte ptr [rax], al ; call 0xffffffffe7421485
0x000000000042110a : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; sar byte ptr [rdi], -2 ; call qword ptr [rdx]
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000420068 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040342a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420fca : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ah ; or al, 0xfffffffffffffffe ; jmp rsi
0x00000000004018d2 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004141f3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420cda : add byte ptr [rax], al ; push rax ; cmp edi, edi ; jmp qword ptr [rax]
0x000000000042034e : add byte ptr [rax], al ; ret
0x000000000042110e : add byte ptr [rax], al ; sar byte ptr [rdi], -2 ; call qword ptr [rdx]
0x000000000042102e : add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], ah ; call qword ptr [rcx]
0x000000000042102f : add byte ptr [rax], dh ; and al, 0xfffffffffffffffe ; call qword ptr [rcx]
0x0000000000420ccb : add byte ptr [rax], dl ; xor bh, bh ; jmp rax
0x0000000000420d94 : add byte ptr [rbp - 1], bl ; call qword ptr [rax]
0x00000000004033c0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004141f4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000416bb5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000416b6a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041d5de : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000401fbd : add byte ptr [rbx - 0x69d26fbb], cl ; ret 0x8930
0x0000000000401f72 : add byte ptr [rbx - 0x6ad26fbb], cl ; ret 0x8930
0x0000000000420069 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041951b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042102b : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], ah ; call qword ptr [rcx]
0x000000000041845e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x0000000000420025 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000420287 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000418362 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041f3f3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041c773 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041e50a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004048bd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041c487 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004182ec : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004168c7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420cd8 : add byte ptr [rsi], al ; add byte ptr [rax], al ; push rax ; cmp edi, edi ; jmp qword ptr [rax]
0x000000000041111c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000416dbd : add cl, ch ; ret
0x0000000000402869 : add cl, ch ; ret 1
0x000000000042102d : add dword ptr [rax], eax ; add byte ptr [rax], dh ; and al, 0xfffffffffffffffe ; call qword ptr [rcx]
0x000000000041f572 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041e3c4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e5ae : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x220d3e ; add ebx, esi ; ret
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x000000000041845c : add esp, 0x100 ; pop rbp ; ret
0x00000000004185cc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000413e13 : add esp, 0x20 ; pop rbp ; ret
0x00000000004031b3 : add esp, 0x2c0 ; pop rbp ; ret
0x0000000000418720 : add esp, 0x40 ; pop rbp ; ret
0x000000000041d109 : add esp, 0x440 ; pop rbp ; ret
0x0000000000404202 : add esp, 0x50 ; pop rbp ; ret
0x0000000000419640 : add esp, 0x60 ; pop rbp ; ret
0x0000000000415b02 : add esp, 0x70 ; pop rbp ; ret
0x0000000000401c61 : add esp, 0x80 ; pop rbp ; ret
0x0000000000418d9d : add esp, 0x90 ; pop rbp ; ret
0x00000000004018ce : add esp, 0xa0 ; pop rbp ; ret
0x00000000004146eb : add esp, 0xb0 ; pop rbp ; ret
0x0000000000404a9a : add esp, 0xd0 ; pop rbp ; ret
0x000000000041d82e : add esp, 0xe0 ; pop rbp ; ret
0x000000000041a50f : add esp, 0xf0 ; pop rbp ; ret
0x00000000004050a3 : add esp, 8 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000041845b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004185cb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000413e12 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004031b2 : add rsp, 0x2c0 ; pop rbp ; ret
0x000000000041871f : add rsp, 0x40 ; pop rbp ; ret
0x000000000041d108 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000404201 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041963f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000415b01 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401c60 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000418d9c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004018cd : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004146ea : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000404a99 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041d82d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041a50e : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004050a2 : add rsp, 8 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x00000000004014f4 : and ah, byte ptr [rdx] ; jmp rax
0x0000000000401534 : and ah, byte ptr [rdx] ; jmp rdx
0x000000000042002d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000421031 : and al, 0xfffffffffffffffe ; call qword ptr [rcx]
0x000000000041e3c3 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e5ad : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000420d84 : and byte ptr [rax - 1], bl ; call rax
0x000000000041924b : and byte ptr [rsi + 0x58], ah ; jb 0x419282 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000410351 : and eax, 0x75b4b9d3 ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402b6c : and ebx, dword ptr [rbp - 0x6bd6c47] ; test al, dh ; ret
0x0000000000414f89 : call 0x401192
0x0000000000414ee1 : call 0x4011a2
0x0000000000419645 : call 0x419709
0x000000000041db7d : call 0xffffffffaca29db1
0x000000000041db7c : call 0xffffffffaca29db2
0x0000000000421528 : call 0xffffffffe7421483
0x0000000000413e09 : call 0xffffffffe903c759
0x0000000000413e08 : call 0xffffffffe903c75a
0x0000000000420329 : call qword ptr [r12 + rbx*8]
0x0000000000420d97 : call qword ptr [rax]
0x00000000004155ce : call qword ptr [rbx]
0x000000000041d1ac : call qword ptr [rcx]
0x0000000000413294 : call qword ptr [rdi]
0x000000000040f27b : call qword ptr [rdx]
0x000000000042032a : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x00000000004114fb : call rcx
0x0000000000412ed4 : call rdi
0x0000000000412705 : call rdx
0x000000000040336b : call rsp
0x0000000000404e03 : cdq ; ret
0x000000000041d107 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004189a7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000419a99 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x000000000041574f : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004068dd : clc ; ret 0x77a8
0x000000000041e1be : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041a50d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004033ef : cld ; jmp 0x40345c
0x00000000004033ee : cld ; jmp 0x40345d
0x0000000000419250 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042002c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041816b : cmc ; ret 0x4f0b
0x0000000000417412 : cmp al, 0x25 ; ret
0x0000000000418301 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x0000000000420cdd : cmp edi, edi ; jmp qword ptr [rax]
0x00000000004111a7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004106ab : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041001e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000410823 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041937d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041cc66 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041743b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418166 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000402863 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff7], cl ; ret 1
0x00000000004065ba : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041ca93 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041c6e9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004048b9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000400287 : fcom st(6) ; xor bl, byte ptr [rax + 0x7cfcd223] ; ret 0x3369
0x000000000041e5e8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041d2c7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000040323c : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040300c : fmul dword ptr [rax - 1] ; ret 0x8a40
0x000000000041d2c8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000042032c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031b1 : hlt ; add rsp, 0x2c0 ; pop rbp ; ret
0x000000000041d82c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004050a1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x622228 ; jmp rax
0x0000000000415fd8 : hlt ; ret 0x20
0x000000000041937b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000415fbc : imul esi, eax, 0x2b358b4c ; ret
0x0000000000419e51 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000042110c : in al, 1 ; add byte ptr [rax], al ; sar byte ptr [rdi], -2 ; call qword ptr [rdx]
0x000000000041dc3c : in al, dx ; jmp 0x41dcb9
0x000000000041dc3b : in al, dx ; jmp 0x41dcba
0x000000000040342e : in al, dx ; pop rbp ; ret
0x0000000000402a71 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000402c0b : inc edi ; mov r12b, -0x6a ; ret 0x8930
0x00000000004162b7 : int 0x5b
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x0000000000421611 : jae 0x421614 ; call rdx
0x000000000041924e : jb 0x41927f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x622228 ; jmp rax
0x0000000000421631 : je 0x421634 ; call qword ptr [rdx]
0x000000000040f746 : jge 0x40f6cb ; ret 0xffd5
0x0000000000410210 : jge 0x4101f0 ; shr cl, cl ; ret 0x3b
0x000000000040132b : jmp 0x401167
0x00000000004033f0 : jmp 0x40345b
0x0000000000410960 : jmp 0x413de0
0x000000000040e864 : jmp 0x413de1
0x000000000040fc31 : jmp 0x413de2
0x000000000041758b : jmp 0x417ff7
0x00000000004174c8 : jmp 0x417ff9
0x000000000041740b : jmp 0x417ffa
0x00000000004195f3 : jmp 0x419658
0x000000000041cfa6 : jmp 0x41d288
0x000000000041dc3d : jmp 0x41dcb8
0x000000000041816a : jmp 0x4f4d4466
0x0000000000413735 : jmp qword ptr [rax]
0x00000000004212a3 : jmp qword ptr [rbx]
0x0000000000405532 : jmp qword ptr [rcx]
0x00000000004113e7 : jmp qword ptr [rdi]
0x00000000004183fa : jmp qword ptr [rdx]
0x00000000004014f7 : jmp rax
0x000000000040fd38 : jmp rbx
0x000000000041076a : jmp rcx
0x000000000040fd92 : jmp rdi
0x0000000000401537 : jmp rdx
0x0000000000420fd3 : jmp rsi
0x0000000000410048 : jmp rsp
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x000000000040965e : jo 0x40966a ; ret
0x000000000040b2ce : jo 0x40b2da ; ret
0x000000000040e81d : jo 0x40e829 ; ret
0x0000000000415b04 : jo 0x415b65 ; ret
0x000000000041020e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041130e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000403bf6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405f55 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415df9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f54 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040eb6e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000411b75 : loope 0x411b43 ; jmp 0x413de3
0x0000000000405f53 : loopne 0x405fa6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004154fd : loopne 0x415563 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004168e4 : loopne 0x416937 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000418cb3 : loopne 0x418cbc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041963e : loopne 0x41968e ; add esp, 0x60 ; pop rbp ; ret
0x000000000041963d : loopne 0x41968f ; add esp, 0x60 ; pop rbp ; ret
0x000000000041d830 : loopne 0x41d837 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e1c2 : loopne 0x41e1c9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042006c : loopne 0x4200bb ; mov esp, ebp ; pop rbp ; ret
0x000000000042006b : loopne 0x4200bc ; mov esp, ebp ; pop rbp ; ret
0x00000000004202bc : loopne 0x42030b ; mov esp, ebp ; pop rbp ; ret
0x00000000004202bb : loopne 0x42030c ; mov esp, ebp ; pop rbp ; ret
0x0000000000401d32 : mov ah, -0x6a ; ret 0x8930
0x000000000040f73d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f817 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040d7c5 : mov ah, 0x75 ; ret
0x00000000004162d3 : mov al, -0x47 ; ret
0x000000000041c76f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004146ed : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420d80 : mov al, 8 ; add byte ptr [rax], al ; and byte ptr [rax - 1], bl ; call rax
0x000000000041e8dd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e5aa : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e80d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407165 : mov bl, 0x75 ; ret
0x0000000000401553 : mov byte ptr [rip + 0x220d3e], 1 ; ret
0x000000000040efbf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000403007 : mov cs, word ptr [r8 - 0x75] ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8a40
0x0000000000403008 : mov cs, word ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8a40
0x000000000041f574 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041e3c6 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e5b0 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042002a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041f2a1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004056d9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004052af : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041dc3a : mov dword ptr [rbp - 0x14], eax ; jmp 0x41dcbb
0x0000000000414edb : mov dword ptr [rbp - 0x1a8], ecx ; call 0x4011a8
0x0000000000414f83 : mov dword ptr [rbp - 0x1b0], ecx ; call 0x401198
0x0000000000417588 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x417ffa
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004059b6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040555d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404dd9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004194bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041968e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041dab5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004056dc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041963c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042006a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040555f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040509f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041574d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040555e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000411f78 : mov ebp, 0xe19c53ba ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x00000000004052ac : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401575 : mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x622228 ; jmp rax
0x0000000000401532 : mov edi, 0x622228 ; jmp rdx
0x000000000040e817 : mov edi, 0xb8000055 ; wait ; jo 0x40e82f ; ret
0x0000000000420327 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000420326 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041cf1e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040efdb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040fe52 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041cf07 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401530 : mov esi, eax ; mov edi, 0x622228 ; jmp rdx
0x000000000040342d : mov esp, ebp ; pop rbp ; ret
0x00000000004059b5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401d31 : mov r12b, -0x6a ; ret 0x8930
0x0000000000404dd8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004194ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041968d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041963b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041574c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x000000000040152f : mov rsi, rax ; mov edi, 0x622228 ; jmp rdx
0x000000000040342c : mov rsp, rbp ; pop rbp ; ret
0x0000000000419251 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000415fb9 : movabs al, byte ptr [0x2b358b4cf069894d] ; ret
0x000000000040aab8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000420fcc : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ah ; or al, 0xfffffffffffffffe ; jmp rsi
0x000000000040dd05 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041f573 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041e3c5 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e5af : movzx eax, al ; pop rbp ; ret
0x000000000041cd18 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000406fa5 : nop ; ret
0x00000000004153b2 : nop ; ret 0x148
0x00000000004153c6 : nop ; ret 0x2948
0x0000000000420348 : nop dword ptr [rax + rax] ; ret
0x000000000040f73a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f814 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000420fd1 : or al, 0xfffffffffffffffe ; jmp rsi
0x0000000000401f70 : or al, byte ptr [rax] ; add byte ptr [rbx - 0x6ad26fbb], cl ; ret 0x8930
0x00000000004052b0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000416b68 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000410826 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004059b4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042182d : or dword ptr [rax], eax ; add al, al ; ret 0xffff
0x0000000000402867 : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000401556 : or eax, 0xf3010022 ; ret
0x000000000041740d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040555b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401d2d : out 1, al ; add bh, al ; mov r12b, -0x6a ; ret 0x8930
0x000000000041111b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041e5ac : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e8df : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000400286 : out dx, eax ; fcom st(6) ; xor bl, byte ptr [rax + 0x7cfcd223] ; ret 0x3369
0x00000000004162d2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041cf09 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000412205 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000406e56 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000412250 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004183f1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041cf0c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041924c : pop ax ; jb 0x419281 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004130b9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042033c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004154ff : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004130bb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042033e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004130bd : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420340 : pop r14 ; pop r15 ; ret
0x0000000000405f59 : pop r14 ; pop rbp ; ret
0x00000000004130bf : pop r15 ; pop rbp ; ret
0x0000000000420342 : pop r15 ; ret
0x000000000041924d : pop rax ; jb 0x419280 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x220d3e], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x622228 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x622228 ; jmp rdx
0x000000000042033b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004130bc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042033f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040efc2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040b295 : pop rbp ; pop rcx ; ret 0x8589
0x000000000040efde : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004014e5 : pop rbp ; ret
0x00000000004154fe : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004141f5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f58 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416b70 : pop rbx ; ret
0x000000000040efc3 : pop rcx ; ret 0x1b2
0x0000000000409696 : pop rcx ; ret 0x8589
0x000000000040efdf : pop rcx ; ret 0x8b48
0x0000000000411310 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004130c0 : pop rdi ; pop rbp ; ret
0x0000000000420343 : pop rdi ; ret
0x00000000004130be : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000420341 : pop rsi ; pop r15 ; ret
0x0000000000405f5a : pop rsi ; pop rbp ; ret
0x00000000004130ba : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042033d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415500 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409695 : pop rsp ; pop rcx ; ret 0x8589
0x000000000041f3f5 : popfq ; ret 0xd284
0x000000000040efc0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004111aa : push -0x75425eeb ; push rbp ; ret
0x000000000040dd08 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000420cdc : push rax ; cmp edi, edi ; jmp qword ptr [rax]
0x0000000000404204 : push rax ; pop rbp ; ret
0x000000000040323b : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040300b : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8a40
0x0000000000401574 : push rbp ; mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x00000000004111af : push rbp ; ret
0x0000000000411146 : push rbp ; ret 0xd284
0x000000000040f73f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f819 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041cf0b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041c775 : pushfq ; ret 0xd284
0x0000000000401151 : ret
0x00000000004065be : ret 0
0x000000000041d168 : ret 0x12e8
0x00000000004153b3 : ret 0x148
0x0000000000412314 : ret 0x1a
0x000000000040758d : ret 0x1add
0x000000000040efc5 : ret 0x1b2
0x0000000000415fd9 : ret 0x20
0x0000000000401332 : ret 0x220d
0x0000000000407eda : ret 0x23da
0x0000000000414bd8 : ret 0x279e
0x0000000000410829 : ret 0x2948
0x0000000000411314 : ret 0x2a
0x000000000040f742 : ret 0x2d50
0x000000000041ca6e : ret 0x3040
0x000000000040028f : ret 0x3369
0x0000000000410214 : ret 0x3b
0x000000000040d275 : ret 0x3e
0x00000000004106b1 : ret 0x4802
0x0000000000403101 : ret 0x4808
0x000000000041cf0e : ret 0x4815
0x0000000000412206 : ret 0x4861
0x0000000000403978 : ret 0x48f0
0x000000000040aac1 : ret 0x4b
0x00000000004160d7 : ret 0x4cc0
0x0000000000413118 : ret 0x4cf0
0x000000000041816c : ret 0x4f0b
0x000000000040550b : ret 0x5589
0x000000000040f9ca : ret 0x5966
0x0000000000416dc7 : ret 0x5bc6
0x000000000042002f : ret 0x61
0x0000000000406c26 : ret 0x6a8a
0x00000000004068de : ret 0x77a8
0x0000000000407a41 : ret 0x7a8a
0x000000000040e6bb : ret 0x7b7f
0x000000000041506a : ret 0x8041
0x00000000004152b2 : ret 0x8141
0x000000000041cc69 : ret 0x8148
0x00000000004105d4 : ret 0x822d
0x0000000000402a75 : ret 0x8445
0x000000000040967c : ret 0x8589
0x0000000000401d34 : ret 0x8930
0x0000000000407653 : ret 0x8940
0x00000000004041db : ret 0x8948
0x000000000041b52f : ret 0x894a
0x0000000000406e57 : ret 0x8961
0x000000000040300f : ret 0x8a40
0x000000000040303f : ret 0x8a44
0x000000000041ca25 : ret 0x8a4a
0x000000000040efe1 : ret 0x8b48
0x000000000040f81c : ret 0xa30b
0x000000000041db7f : ret 0xac60
0x0000000000402d13 : ret 0xb0
0x0000000000411120 : ret 0xb740
0x0000000000419247 : ret 0xb848
0x000000000040f350 : ret 0xb940
0x000000000041c9b2 : ret 0xb94a
0x000000000041179c : ret 0xbf48
0x0000000000401515 : ret 0xc148
0x0000000000420272 : ret 0xc493
0x000000000041e569 : ret 0xca21
0x0000000000420035 : ret 0xccb2
0x000000000040317b : ret 0xd139
0x00000000004048c0 : ret 0xd284
0x000000000041b175 : ret 0xd618
0x000000000041f51b : ret 0xe280
0x0000000000410ff2 : ret 0xe940
0x0000000000412251 : ret 0xe961
0x000000000040807d : ret 0xea51
0x0000000000420027 : ret 0xea81
0x0000000000413e0c : ret 0xee8
0x0000000000405545 : ret 0xf281
0x000000000040fe57 : ret 0xf41
0x0000000000411da5 : ret 0xf7f3
0x000000000041052e : ret 0xfc75
0x0000000000417aaa : ret 0xfe97
0x0000000000411d9f : ret 0xffa5
0x0000000000410528 : ret 0xffc4
0x000000000040f748 : ret 0xffd5
0x000000000040f822 : ret 0xffd8
0x00000000004105da : ret 0xffd9
0x000000000040f9c4 : ret 0xffe0
0x000000000040e6b5 : ret 0xfffa
0x0000000000414ee3 : ret 0xfffe
0x0000000000421831 : ret 0xffff
0x000000000040286b : ret 1
0x00000000004103c0 : ret 2
0x0000000000413514 : ret 8
0x000000000041ceed : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000419a0c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404a9c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420cc8 : rol byte ptr [rip + 0x32100000], -1 ; jmp rax
0x000000000041ceec : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000419244 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x000000000041e3c7 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040555a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041cd1e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000415f90 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041e50c : sahf ; ret 0xd284
0x0000000000400288 : salc ; xor bl, byte ptr [rax + 0x7cfcd223] ; ret 0x3369
0x0000000000421110 : sar byte ptr [rdi], -2 ; call qword ptr [rdx]
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x0000000000411311 : sar ebp, -0x17 ; ret 0x2a
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x00000000004162d0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000411211 : sbb cl, ch ; ret
0x0000000000418a93 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415320 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000410212 : shr cl, cl ; ret 0x3b
0x000000000040e04d : stc ; ret 0x77a8
0x0000000000402b71 : stc ; test al, dh ; ret
0x0000000000414bd7 : std ; ret 0x279e
0x0000000000403006 : stosd dword ptr [rdi], eax ; mov cs, word ptr [r8 - 0x75] ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8a40
0x000000000040353e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041dc86 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403428 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f745 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000040f73b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000040f815 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004105d5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041924f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042037d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042037c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f740 : test al, -0x7f ; ret 0x2d50
0x000000000040f81a : test al, -0x7f ; ret 0xa30b
0x000000000041c7c3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004159ae : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000411f76 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004182e8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000402b72 : test al, dh ; ret
0x000000000042034a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402865 : test byte ptr [rcx - 0x16fffff7], cl ; ret 1
0x00000000004065bc : test byte ptr [rcx], ch ; ret 0
0x00000000004065b6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004178a3 : test dword ptr [rax - 0x17000003], ebx ; ret
0x00000000004183f6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004155ca : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000410feb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041224a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040dd0a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004121ff : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041020f : wait ; jge 0x4101f1 ; shr cl, cl ; ret 0x3b
0x000000000040b2cd : wait ; jo 0x40b2db ; ret
0x000000000040e81c : wait ; jo 0x40e82a ; ret
0x000000000041cf08 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000402a74 : xchg eax, ebp ; ret 0x8445
0x0000000000401f77 : xchg eax, ebp ; ret 0x8930
0x00000000004048bf : xchg eax, ebp ; ret 0xd284
0x0000000000406e55 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040d755 : xchg eax, ebx ; ret
0x0000000000402b6f : xchg eax, ebx ; stc ; test al, dh ; ret
0x000000000040d985 : xchg eax, ecx ; ret
0x000000000041c489 : xchg eax, edi ; ret 0xd284
0x00000000004071d5 : xchg eax, edx ; ret
0x000000000041507f : xchg eax, edx ; ret 0x8445
0x00000000004182ee : xchg eax, edx ; ret 0xd284
0x0000000000401d33 : xchg eax, esi ; ret 0x8930
0x000000000041758a : xchg eax, esp ; jmp 0x417ff8
0x00000000004174c7 : xchg eax, esp ; jmp 0x417ffa
0x0000000000412204 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040dad5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041224f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000415069 : xchg eax, esp ; ret 0x8041
0x000000000041111e : xchg eax, esp ; ret 0xb740
0x00000000004168c9 : xchg eax, esp ; ret 0xd284
0x0000000000417589 : xchg eax, r12d ; jmp 0x417ff9
0x0000000000411119 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000402d07 : xor al, byte ptr [rdx + rcx*4 + 0x45] ; ret
0x0000000000420ccd : xor bh, bh ; jmp rax
0x0000000000400289 : xor bl, byte ptr [rax + 0x7cfcd223] ; ret 0x3369
0x00000000004059b7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004059b8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000421030 : xor byte ptr [rsi + rdi*8], ah ; call qword ptr [rcx]
