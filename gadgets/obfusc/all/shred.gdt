0x0000000000411ecf : adc al, 0x5e ; ret
0x00000000004491ac : adc al, 0xa ; add byte ptr [rax], al ; and byte ptr [rdx - 2], dh ; jmp qword ptr [rbx]
0x00000000004494ac : adc al, 0xd ; add byte ptr [rax], al ; shr ah, -2 ; jmp rsi
0x0000000000449a15 : adc al, byte ptr [rax] ; add al, ch ; ret
0x00000000004499f5 : adc al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x000000000043cf28 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x0000000000410910 : adc byte ptr [rax], al ; add bh, al ; test edx, esp ; idiv bh ; jmp rbx
0x0000000000449875 : adc byte ptr [rax], al ; add byte ptr [rax], bl ; mov dr1, edi ; call rdi
0x0000000000448575 : adc byte ptr [rax], al ; add byte ptr [rsi + rdi*4 - 2], bh ; jmp rsp
0x000000000040946d : adc byte ptr [rbp + 1], cl ; fimul dword ptr [rcx - 0x7f] ; ret 1
0x000000000040847f : adc byte ptr [rip + 0x294c9e78], cl ; ret 0x2948
0x000000000041e31f : adc ch, cl ; ret
0x000000000043e282 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000042a64e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000043439e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x00000000004144e5 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000439f7b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004485b5 : adc dword ptr [rax], eax ; add byte ptr [rbx - 2], bl ; jmp rsp
0x000000000042b14b : adc eax, 0x558abda1 ; ret
0x000000000042e729 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017d9 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004147bb : adc eax, ebp ; js 0x4147ac ; ret
0x0000000000414c0f : adc ebp, ecx ; ret 0
0x0000000000449873 : add ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax], bl ; mov dr1, edi ; call rdi
0x0000000000448b83 : add ah, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x3e], ch ; cld ; call qword ptr [rcx]
0x000000000043573c : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000413fe8 : add al, 0 ; add cl, ch ; ret 1
0x00000000004444ea : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004488bf : add al, al ; ret 0xfffb
0x0000000000419917 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x0000000000405054 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004154cc : add al, ch ; pop rsi ; ret
0x0000000000449a17 : add al, ch ; ret
0x00000000004120cc : add bh, al ; loopne 0x412129 ; adc al, 0x5e ; ret
0x000000000043fd75 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000439c54 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040a4c3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x000000000040ae01 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000043df53 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042af89 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041b7b2 : add bh, al ; test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x0000000000411834 : add bh, al ; test edx, esp ; idiv bh ; call qword ptr [rdx]
0x00000000004115a1 : add bh, al ; test edx, esp ; idiv bh ; jmp qword ptr [rax]
0x0000000000411909 : add bh, al ; test edx, esp ; idiv bh ; jmp qword ptr [rcx]
0x0000000000410912 : add bh, al ; test edx, esp ; idiv bh ; jmp rbx
0x0000000000410f74 : add bh, al ; test edx, esp ; idiv bh ; jmp rdi
0x00000000004469af : add bl, dh ; ret
0x0000000000446682 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004468e4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000431a04 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041cc0d : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000043573b : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000448fc3 : add byte ptr [rax + rcx], ch ; add byte ptr [rax], al ; call 0xffffffffd8448e3c
0x0000000000448b87 : add byte ptr [rax - 0x3e], ch ; cld ; call qword ptr [rcx]
0x000000000042f6eb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412ec8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040d407 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043573e : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040cfca : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000040407a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000419919 : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x00000000004491af : add byte ptr [rax], ah ; jb 0x4491b5 ; jmp qword ptr [rbx]
0x00000000004491aa : add byte ptr [rax], al ; adc al, 0xa ; add byte ptr [rax], al ; and byte ptr [rdx - 2], dh ; jmp qword ptr [rbx]
0x00000000004494aa : add byte ptr [rax], al ; adc al, 0xd ; add byte ptr [rax], al ; shr ah, -2 ; jmp rsi
0x000000000043fd73 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000439c52 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040adff : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000043df51 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004469ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041cc0b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000412ec6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000414db9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404078 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004469ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400a70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004040c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004469ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004487b5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; nop ; sti ; jmp qword ptr [rax]
0x000000000041196e : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000414d4e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000431968 : add byte ptr [rax], al ; add byte ptr [rbx + 0x322dec45], cl ; ret 0x4c6a
0x000000000041e062 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x000000000042e192 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043772c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004367d8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10d267bb], cl ; ret
0x0000000000401e76 : add byte ptr [rax], al ; add byte ptr [rbx - 0x23d20fbb], cl ; ret
0x0000000000401e34 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d20fbb], cl ; ret
0x0000000000438413 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043e7fc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000405108 : add byte ptr [rax], al ; add byte ptr [rbx - 0x70d23fbb], cl ; call qword ptr [rcx]
0x000000000043ad79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041abf8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004345ff : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041d9ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000446683 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004468e5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000439bc0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040fdc2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407ef8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043cdb6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403fcb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443a65 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041a836 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004040c2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000449a11 : add byte ptr [rax], al ; add byte ptr [rdx + rdx], bh ; add al, ch ; ret
0x00000000004499f1 : add byte ptr [rax], al ; add byte ptr [rdx + rdx], bl ; add byte ptr [rax], cl ; ret 0xffff
0x000000000043e1e2 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000042e72b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ddb0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000439f7d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004130cf : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004120e6 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004346a6 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004491ae : add byte ptr [rax], al ; and byte ptr [rdx - 2], dh ; jmp qword ptr [rbx]
0x00000000004155b8 : add byte ptr [rax], al ; call 0x401834
0x0000000000448fc6 : add byte ptr [rax], al ; call 0xffffffffd8448e39
0x00000000004490e6 : add byte ptr [rax], al ; cmp byte ptr [rbp - 2], ch ; call qword ptr [rbx]
0x00000000004489a6 : add byte ptr [rax], al ; cwde ; cld ; call rdi
0x0000000000449596 : add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; call rdx
0x0000000000448b82 : add byte ptr [rax], al ; in al, dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x3e], ch ; cld ; call qword ptr [rcx]
0x0000000000401899 : add byte ptr [rax], al ; jmp 0x4017f9
0x000000000043e1de : add byte ptr [rax], al ; jmp 0x43e1ed
0x00000000004482be : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call rsp
0x00000000004466c8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041cfe2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d406 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004489a2 : add byte ptr [rax], al ; or al, 2 ; add byte ptr [rax], al ; cwde ; cld ; call rdi
0x00000000004022fa : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e193 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411580 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004091f7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004499f2 : add byte ptr [rax], al ; pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004485b6 : add byte ptr [rax], al ; pop rsp ; jrcxz 0x4485be ; jmp rsp
0x000000000044922e : add byte ptr [rax], al ; push rax ; jns 0x449236 ; call qword ptr [rcx]
0x00000000004469ae : add byte ptr [rax], al ; ret
0x0000000000400a76 : add byte ptr [rax], al ; ret 1
0x00000000004494ae : add byte ptr [rax], al ; shr ah, -2 ; jmp rsi
0x0000000000448fc2 : add byte ptr [rax], al ; sub al, 8 ; add byte ptr [rax], al ; call 0xffffffffd8448e3d
0x00000000004487b7 : add byte ptr [rax], bh ; nop ; sti ; jmp qword ptr [rax]
0x0000000000449877 : add byte ptr [rax], bl ; mov dr1, edi ; call rdi
0x00000000004499f7 : add byte ptr [rax], cl ; ret 0xffff
0x00000000004493af : add byte ptr [rax], dl ; mov bl, -2 ; call qword ptr [rax]
0x0000000000411970 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000414d50 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043196a : add byte ptr [rbx + 0x322dec45], cl ; ret 0x4c6a
0x000000000041e064 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x000000000042e194 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411581 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041b4de : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411ec9 : add byte ptr [rbx + 0x502dd845], cl ; adc al, 0x5e ; ret
0x0000000000411f0b : add byte ptr [rbx + 0x512dd845], cl ; adc al, 0x5e ; ret
0x00000000004091f8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000435135 : add byte ptr [rbx + 0xb2de845], cl ; pop rbx ; ret
0x0000000000434bc0 : add byte ptr [rbx + rcx*4 + 0x45], cl ; fmul dword ptr [rax - 0x7f] ; ret 0
0x00000000004367da : add byte ptr [rbx - 0x10d267bb], cl ; ret
0x000000000043678f : add byte ptr [rbx - 0x11d267bb], cl ; ret
0x000000000040b10e : add byte ptr [rbx - 0x1cd223bb], cl ; push rcx ; ret 0x8589
0x000000000040b0ad : add byte ptr [rbx - 0x1dd223bb], cl ; push rcx ; ret 0x4589
0x0000000000401e78 : add byte ptr [rbx - 0x23d20fbb], cl ; ret
0x0000000000401e36 : add byte ptr [rbx - 0x24d20fbb], cl ; ret
0x0000000000438415 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004383ca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000043e7fe : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040510a : add byte ptr [rbx - 0x70d23fbb], cl ; call qword ptr [rcx]
0x00000000004050bf : add byte ptr [rbx - 0x71d23fbb], cl ; call qword ptr [rcx]
0x000000000041cfe3 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004466c9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000043ad7b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004485b7 : add byte ptr [rbx - 2], bl ; jmp rsp
0x000000000043de3f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041abfa : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000434601 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041d9ee : add byte ptr [rcx - 0x77], al ; ret
0x000000000040b53b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401dc8 : add byte ptr [rcx], al ; ret
0x0000000000446685 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004468e7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000439bc2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000044796f : add byte ptr [rdi + rsi*2 + 0x44], bh ; add byte ptr [rax], al ; ret
0x000000000040fdc4 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407efa : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043cdb8 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403fcd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443a67 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041a838 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004040c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004489a3 : add byte ptr [rdx + rax], cl ; add byte ptr [rax], al ; cwde ; cld ; call rdi
0x00000000004491ab : add byte ptr [rdx + rcx], dl ; add byte ptr [rax], al ; and byte ptr [rdx - 2], dh ; jmp qword ptr [rbx]
0x0000000000449a13 : add byte ptr [rdx + rdx], bh ; add al, ch ; ret
0x00000000004499f3 : add byte ptr [rdx + rdx], bl ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000448577 : add byte ptr [rsi + rdi*4 - 2], bh ; jmp rsp
0x0000000000448537 : add byte ptr [rsi + rdx*4 - 2], ch ; jmp rsp
0x00000000004040bf : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b0bc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000409513 : add cl, ch ; push rbp ; ret 0xffff
0x000000000043861d : add cl, ch ; ret
0x0000000000405056 : add cl, ch ; ret 1
0x00000000004488bd : add dword ptr [rax], eax ; add al, al ; ret 0xfffb
0x00000000004154ca : add dword ptr [rax], eax ; add al, ch ; pop rsi ; ret
0x0000000000411832 : add dword ptr [rax], eax ; add bh, al ; test edx, esp ; idiv bh ; call qword ptr [rdx]
0x0000000000411907 : add dword ptr [rax], eax ; add bh, al ; test edx, esp ; idiv bh ; jmp qword ptr [rcx]
0x0000000000412dec : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041dd6d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043678d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x11d267bb], cl ; ret
0x00000000004050bd : add dword ptr [rax], eax ; add byte ptr [rbx - 0x71d23fbb], cl ; call qword ptr [rcx]
0x000000000043697e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041314c : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bcbb : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000445bd2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000444a24 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bea2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401dc4 : add eax, 0x2485ae ; add ebx, esi ; ret
0x00000000004482bd : add eax, 0xa5ac0000 ; sti ; call rsp
0x0000000000448b85 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3e], ch ; cld ; call qword ptr [rcx]
0x000000000040d405 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043fca4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000431ef4 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040d404 : add eax, dword ptr es:[rax] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401d8b : add eax, edx ; sar rax, 1 ; jne 0x401d9c ; pop rbp ; ret
0x0000000000401dc9 : add ebx, esi ; ret
0x0000000000410637 : add edi, eax ; test edx, esp ; idiv bh ; jmp rbx
0x0000000000411e43 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x000000000040251b : add esp, 0x10 ; pop rbp ; ret
0x000000000040b539 : add esp, 0x100 ; pop rbp ; ret
0x0000000000436336 : add esp, 0x140 ; pop rbp ; ret
0x0000000000405619 : add esp, 0x180 ; pop rbp ; ret
0x0000000000413c00 : add esp, 0x190 ; pop rbp ; ret
0x0000000000432467 : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041dd6a : add esp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x00000000004317a4 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000042ddb3 : add esp, 0x20 ; pop rbp ; ret
0x00000000004170ae : add esp, 0x230 ; pop rbp ; ret
0x00000000004156c6 : add esp, 0x30 ; pop rbp ; ret
0x000000000040464f : add esp, 0x390 ; pop rbp ; ret
0x0000000000433ea9 : add esp, 0x3e0 ; pop rbp ; ret
0x0000000000439f80 : add esp, 0x40 ; pop rbp ; ret
0x00000000004446e9 : add esp, 0x440 ; pop rbp ; ret
0x000000000043deee : add esp, 0x4f0 ; pop rbp ; ret
0x00000000004130d2 : add esp, 0x50 ; pop rbp ; ret
0x00000000004120e9 : add esp, 0x60 ; pop rbp ; ret
0x000000000042faa2 : add esp, 0x70 ; pop rbp ; ret
0x000000000041e434 : add esp, 0x78 ; pop rbp ; ret
0x00000000004091f3 : add esp, 0x7d8 ; pop rbx ; pop rbp ; ret
0x0000000000412415 : add esp, 0x80 ; pop rbp ; ret
0x000000000041484a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404b45 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000416238 : add esp, 0xb0 ; pop rbp ; ret
0x000000000041ea3a : add esp, 0xd0 ; pop rbp ; ret
0x000000000043ea4e : add esp, 0xe0 ; pop rbp ; ret
0x00000000004022f6 : add esp, 0xf0 ; pop rbp ; ret
0x000000000041f043 : add esp, 8 ; pop rbp ; ret
0x00000000004017de : add esp, 8 ; ret
0x00000000004154c9 : add qword ptr [rax], rax ; add al, ch ; pop rsi ; ret
0x0000000000401d8a : add rax, rdx ; sar rax, 1 ; jne 0x401d9d ; pop rbp ; ret
0x0000000000411e42 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040251a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040b538 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000436335 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000405618 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000413bff : add rsp, 0x190 ; pop rbp ; ret
0x0000000000432466 : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041dd69 : add rsp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x00000000004317a3 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000042ddb2 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004170ad : add rsp, 0x230 ; pop rbp ; ret
0x00000000004156c5 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040464e : add rsp, 0x390 ; pop rbp ; ret
0x0000000000433ea8 : add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000439f7f : add rsp, 0x40 ; pop rbp ; ret
0x00000000004446e8 : add rsp, 0x440 ; pop rbp ; ret
0x000000000043deed : add rsp, 0x4f0 ; pop rbp ; ret
0x00000000004130d1 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004120e8 : add rsp, 0x60 ; pop rbp ; ret
0x000000000042faa1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041e433 : add rsp, 0x78 ; pop rbp ; ret
0x00000000004091f2 : add rsp, 0x7d8 ; pop rbx ; pop rbp ; ret
0x0000000000412414 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000414849 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404b44 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000416237 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041ea39 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000043ea4d : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004022f5 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000041f042 : add rsp, 8 ; pop rbp ; ret
0x00000000004017dd : add rsp, 8 ; ret
0x0000000000401dc7 : and al, 0 ; add ebx, esi ; ret
0x000000000044668d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004336e6 : and al, 0xffffffffffffffb9 ; jrcxz 0x43370b ; ret 0x4877
0x0000000000444a23 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bea1 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000437dc8 : and al, byte ptr [rbp + 0x29486d2d] ; ret 0x8948
0x00000000004491b0 : and byte ptr [rdx - 2], dh ; jmp qword ptr [rbx]
0x000000000043aaab : and byte ptr [rsi + 0x58], ah ; jb 0x43aae2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000415606 : and eax, 0x64a2c0 ; call 0x401877
0x000000000042a2f1 : and eax, 0x75b4b9d3 ; ret
0x00000000004365d5 : and ecx, edi ; mov rax, rcx ; pop rbp ; ret
0x00000000004365d4 : and rcx, rdi ; mov rax, rcx ; pop rbp ; ret
0x00000000004155ba : call 0x401832
0x000000000041560b : call 0x401872
0x00000000004056c4 : call 0x4019a2
0x000000000041205b : call 0x4111e9
0x000000000041205a : call 0x4111ea
0x000000000043aea5 : call 0x43af69
0x000000000043787a : call 0xc05a6fc
0x0000000000416fe2 : call 0xffffffff8a21c57b
0x00000000004400cd : call 0xffffffffaca4c301
0x00000000004400cc : call 0xffffffffaca4c302
0x0000000000448fc8 : call 0xffffffffd8448e37
0x000000000041a4b3 : call 0xffffffffe1045e79
0x000000000041a4b2 : call 0xffffffffe1045e7a
0x000000000042dda9 : call 0xffffffffe90566f9
0x000000000042dda8 : call 0xffffffffe90566fa
0x0000000000410fe8 : call 0xfffffffffb025834
0x000000000040b583 : call 0xffffffffff496b1c
0x000000000040b4e3 : call 0xffffffffff556a7c
0x0000000000404a01 : call 0xffffffffffb4ff9a
0x0000000000446989 : call qword ptr [r12 + rbx*8]
0x00000000004092ad : call qword ptr [rax]
0x0000000000408f4c : call qword ptr [rbx]
0x00000000004050c5 : call qword ptr [rcx]
0x000000000041ae8f : call qword ptr [rdi]
0x000000000041183a : call qword ptr [rdx]
0x000000000041b7b8 : call qword ptr [rsi]
0x000000000044698a : call qword ptr [rsp + rbx*8]
0x0000000000401ded : call rax
0x000000000040ae07 : call rbx
0x000000000041a34a : call rcx
0x0000000000409343 : call rdi
0x0000000000414815 : call rdx
0x0000000000414cfb : call rsp
0x000000000040d6c3 : cdq ; mov bh, 0x27 ; fisttp dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004317a2 : clc ; add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004446e7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000043a207 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000440ab9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401d8f : clc ; jne 0x401d98 ; pop rbp ; ret
0x00000000004340f3 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x00000000004340d3 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000430b8b : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000430b87 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000042f6ef : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000431902 : clc ; pop rbp ; ret
0x000000000042087d : clc ; ret 0x77a8
0x00000000004318fb : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000402547 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044070e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044152d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000448aaa : cld ; call qword ptr [rax]
0x0000000000448b8a : cld ; call qword ptr [rcx]
0x00000000004489aa : cld ; call rdi
0x000000000041b6f6 : cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x0000000000414d7f : cld ; jmp 0x414dec
0x0000000000414d7e : cld ; jmp 0x414ded
0x000000000041cfe6 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000043aab0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044668c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004124e3 : cmc ; mov word ptr [rdi], cs ; xor al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004124b1 : cmc ; mov word ptr [rdi], cs ; xor al, byte ptr [rbp - 0x77] ; ret
0x00000000004399cb : cmc ; ret 0x4f0b
0x000000000041de38 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000041203a : cmp al, 0x21 ; ret 0xd709
0x0000000000435d71 : cmp byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004490e8 : cmp byte ptr [rbp - 2], ch ; call qword ptr [rbx]
0x0000000000435c0e : cmp cl, byte ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x0000000000439b61 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004056d4 : cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000416079 : cmp eax, 0x45c6a0d8 ; ret
0x0000000000401d4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d60 ; pop rbp ; ret
0x000000000040d665 : cmp ebp, ecx ; ret
0x000000000042b147 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000448aa9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000404b52 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x20e9
0x000000000040483f : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4589
0x0000000000404a25 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x98b9
0x00000000004489a8 : cwde ; cld ; call rdi
0x0000000000449598 : cwde ; or al, 0xffffffffffffffff ; call rdx
0x000000000043658f : dec dword ptr [rax + 0x21] ; ret 0x148
0x0000000000436142 : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000040fe74 : dec dword ptr [rax + 0x29] ; ret 0xf41
0x0000000000419b18 : dec dword ptr [rax + 0x69] ; ret 0xa
0x00000000004053c7 : dec dword ptr [rax - 0x1586b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004054ed : dec dword ptr [rax - 0x1706b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040a9f4 : dec dword ptr [rax - 0x2d06b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000042a64b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000429fbe : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042a7c3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000414524 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041b7d2 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041ae74 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004053cd : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040b38f : dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004100b8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404a07 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041b63b : dec dword ptr [rax - 0x7f] ; ret 0
0x000000000041a7dd : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000041daae : dec dword ptr [rbx - 0x1a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000403e5a : dec dword ptr [rbx - 0x32b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004041b4 : dec dword ptr [rbx - 0x3576b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000407c91 : dec dword ptr [rbx - 0x7374b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040911d : dec dword ptr [rbx - 0x7bb4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040fd8a : dec dword ptr [rbx - 0xe7b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410947 : dec dword ptr [rbx - 0xefb4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004027c2 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x00000000004371f5 : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x00000000004399c6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000041dab4 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000403e60 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000405050 : dec dword ptr [rdi] ; test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042055a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000413fe4 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000431ef0 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffffd], cl ; ret 1
0x0000000000419be4 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000043fa9e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000444073 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041a834 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000436c89 : enter -0x74b8, 0x55 ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000430b68 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000044196c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043ce19 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443cc9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c8e4 : enter 0x4c42, 0x29 ; ret 0x2948
0x000000000041cc07 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000041e859 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413a55 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004091f5 : fadd dword ptr [rdi] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c86e : fadd st(7), st(0) ; or cl, ch ; ret
0x000000000043fa80 : fbld dword ptr [rcx] ; ret 0x941
0x000000000043bfd5 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x000000000043fa5f : fild word ptr [rcx - 0x77] ; ret
0x0000000000409470 : fimul dword ptr [rcx - 0x7f] ; ret 1
0x000000000041d9f8 : fimul dword ptr [rdi] ; sahf ; ret
0x0000000000437aa9 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000040d6c6 : fisttp dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000437aac : fisttp word ptr [rcx - 0x77] ; ret
0x0000000000444c48 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000434bc3 : fmul dword ptr [r8 - 0x7f] ; ret 0
0x000000000043e4e7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000436b3a : fmul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041c020 : fmul dword ptr [rax + 0xf] ; ret 0x8b48
0x000000000041d9d4 : fmul dword ptr [rax - 0x77] ; ret 0x93e8
0x0000000000434bc4 : fmul dword ptr [rax - 0x7f] ; ret 0
0x000000000041d99f : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000043e4e8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000044698c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000043c15d : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x000000000043d777 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x000000000041c8df : fstp st(7), st(0) ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x00000000004109fd : fsub dword ptr [rcx - 0x76] ; jmp 0x411a1b
0x000000000044071b : fsubr st(0) ; call qword ptr [rbx]
0x0000000000402519 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b537 : hlt ; add rsp, 0x100 ; pop rbp ; ret
0x0000000000431aa0 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043ea4c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041f041 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401d60 : hlt ; pop rbp ; mov edi, 0x64a320 ; jmp rax
0x0000000000411838 : idiv bh ; call qword ptr [rdx]
0x000000000041118c : idiv bh ; inc edi ; test edx, esp ; idiv bh ; jmp qword ptr [rsi]
0x00000000004115a5 : idiv bh ; jmp qword ptr [rax]
0x000000000041190d : idiv bh ; jmp qword ptr [rcx]
0x0000000000411192 : idiv bh ; jmp qword ptr [rsi]
0x000000000041063b : idiv bh ; jmp rbx
0x0000000000410f78 : idiv bh ; jmp rdi
0x000000000043abdb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041b6f7 : idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x0000000000404b50 : in al, -0x5f ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x20e9
0x0000000000404895 : in al, -0x5f ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4589
0x0000000000404a23 : in al, -0x5f ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x98b9
0x0000000000440e71 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000448b84 : in al, dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x3e], ch ; cld ; call qword ptr [rcx]
0x000000000043e495 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044018c : in al, dx ; jmp 0x440209
0x000000000044018b : in al, dx ; jmp 0x44020a
0x00000000004027c8 : in al, dx ; pop rbp ; ret
0x00000000004147ba : in eax, dx ; adc eax, ebp ; js 0x4147ad ; ret
0x000000000040fdc0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407ef6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004082e4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004104dc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004045d7 : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x0000000000411884 : inc dword ptr [rcx + 0x1ec104f1] ; lea eax, dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000403a7c : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004124aa : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000041a5fb : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000431744 : inc dword ptr [rsi - 0x26] ; ret
0x000000000040950f : inc eax ; lahf ; out dx, eax ; add cl, ch ; push rbp ; ret 0xffff
0x000000000040d65e : inc edi ; pushfq ; mov edx, 0xe93b1cd5 ; ret
0x000000000041118e : inc edi ; test edx, esp ; idiv bh ; jmp qword ptr [rsi]
0x0000000000448573 : inc esp ; adc byte ptr [rax], al ; add byte ptr [rsi + rdi*4 - 2], bh ; jmp rsp
0x00000000004485b3 : inc esp ; adc dword ptr [rax], eax ; add byte ptr [rbx - 2], bl ; jmp rsp
0x000000000043545b : insb byte ptr [rdi], dx ; ret
0x000000000041a546 : insd dword ptr [rdi], dx ; xor ebx, dword ptr [rdi] ; jle 0x41a4db ; int 0x80
0x0000000000430257 : int 0x5b
0x000000000041a54c : int 0x80
0x0000000000401d53 : ja 0x401d5a ; pop rbp ; ret
0x00000000004340d6 : ja 0x4340e3 ; pop rbp ; ret
0x00000000004340f6 : ja 0x43410b ; pop rbp ; ret
0x000000000043711e : jb 0x4370fc ; ret
0x000000000043712e : jb 0x43710c ; ret
0x000000000043aaae : jb 0x43aadf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004491b1 : jb 0x4491b3 ; jmp qword ptr [rbx]
0x000000000041e31d : jbe 0x41e2f6 ; adc ch, cl ; ret
0x0000000000401d5f : je 0x401d5d ; pop rbp ; mov edi, 0x64a320 ; jmp rax
0x00000000004296e6 : jge 0x42966b ; ret 0xffd5
0x000000000042a1b0 : jge 0x42a190 ; shr cl, cl ; ret 0x3b
0x0000000000430b8a : jge 0x430b8a ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004340d2 : jge 0x4340d3 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004340f2 : jge 0x4340f3 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041a549 : jle 0x41a4d8 ; int 0x80
0x000000000040189b : jmp 0x4017f7
0x0000000000403c45 : jmp 0x404774
0x00000000004052ad : jmp 0x40570c
0x0000000000409514 : jmp 0x405770
0x0000000000408327 : jmp 0x40951a
0x00000000004082cf : jmp 0x40951c
0x00000000004082ce : jmp 0x40951d
0x0000000000410a00 : jmp 0x411a18
0x0000000000414d80 : jmp 0x414deb
0x00000000004154c8 : jmp 0x41561e
0x0000000000419ee9 : jmp 0x41b97b
0x000000000041a286 : jmp 0x41b97c
0x000000000041c871 : jmp 0x41cc3f
0x000000000042a900 : jmp 0x42dd80
0x0000000000428804 : jmp 0x42dd81
0x0000000000429bd1 : jmp 0x42dd82
0x0000000000438deb : jmp 0x439857
0x0000000000438d28 : jmp 0x439859
0x000000000043ae53 : jmp 0x43aeb8
0x000000000043cf86 : jmp 0x43e049
0x000000000043cda3 : jmp 0x43e04a
0x000000000043e1e0 : jmp 0x43e1eb
0x000000000044018d : jmp 0x440208
0x0000000000444586 : jmp 0x444868
0x00000000004399ca : jmp 0x4f4f5cc6
0x00000000004350f4 : jmp 0xffffffffc38fac07
0x000000000043f84f : jmp 0xffffffffc4082f16
0x0000000000408106 : jmp qword ptr [rax]
0x000000000041b760 : jmp qword ptr [rbx]
0x0000000000407dae : jmp qword ptr [rcx]
0x00000000004093a8 : jmp qword ptr [rdi]
0x0000000000417a9f : jmp qword ptr [rdx]
0x0000000000411194 : jmp qword ptr [rsi]
0x0000000000401d67 : jmp rax
0x000000000041063d : jmp rbx
0x000000000042a70a : jmp rcx
0x0000000000410f7a : jmp rdi
0x0000000000401da7 : jmp rdx
0x00000000004494b3 : jmp rsi
0x000000000040adc9 : jmp rsp
0x0000000000401d90 : jne 0x401d97 ; pop rbp ; ret
0x000000000043bfd6 : jne 0x43c051 ; ret 0x8589
0x000000000043c15e : jne 0x43c1d9 ; ret 0x8589
0x000000000043d778 : jne 0x43d7f3 ; ret 0xedb9
0x000000000043d9d0 : jne 0x43da4b ; ret 0xedb9
0x0000000000449231 : jns 0x449233 ; call qword ptr [rcx]
0x000000000041acd4 : jo 0x41ac69 ; xchg eax, ebp ; push -1 ; ret 0x9589
0x00000000004235fe : jo 0x42360a ; ret
0x000000000042526e : jo 0x42527a ; ret
0x00000000004287bd : jo 0x4287c9 ; ret
0x000000000042faa4 : jo 0x42fb05 ; ret
0x00000000004346ab : jo 0x43470c ; ret
0x00000000004350b3 : jo 0x435114 ; ret
0x0000000000434698 : jp 0x4346ac ; call rax
0x000000000043787b : jp 0x4378ad ; ret 0x410b
0x0000000000437889 : jp 0x4378bb ; ret 0x490b
0x000000000040483d : jrcxz 0x4047e3 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4589
0x000000000040b113 : jrcxz 0x40b169 ; ret 0x8589
0x000000000040b322 : jrcxz 0x40b378 ; ret 0x6fb9
0x0000000000433363 : jrcxz 0x433384 ; ret 0x8977
0x00000000004336cc : jrcxz 0x4336ed ; ret 0xb277
0x00000000004336e8 : jrcxz 0x433709 ; ret 0x4877
0x00000000004485b9 : jrcxz 0x4485bb ; jmp rsp
0x00000000004147bd : js 0x4147aa ; ret
0x000000000041e436 : js 0x41e497 ; ret
0x0000000000409511 : lahf ; out dx, eax ; add cl, ch ; push rbp ; ret 0xffff
0x000000000042a1ae : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041b671 : lcall ptr [rsi] ; jmp qword ptr [rdx]
0x000000000042b2ae : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000415586 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041188a : lea eax, dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000435d6e : lea ecx, dword ptr [rbx - 0x3c] ; cmp byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004054bf : lea edx, dword ptr [rsi + rdi*8 + 0x67e8ffff] ; ret
0x000000000041fef5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041c9dd : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fef4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b6f9 : ljmp ptr [rcx] ; ret 0xd701
0x000000000041a39a : ljmp ptr [rcx] ; ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x0000000000428b0e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004482c0 : lodsb al, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call rsp
0x000000000040b0b2 : loop 0x40b108 ; ret 0x4589
0x000000000043267b : loop 0x43269c ; ret 0x8977
0x000000000040bcba : loope 0x40bcc6 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bb15 : loope 0x42bae3 ; jmp 0x42dd83
0x000000000040ac41 : loopne 0x40aca7 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041157e : loopne 0x411597 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004120cf : loopne 0x412126 ; adc al, 0x5e ; ret
0x00000000004120ce : loopne 0x412127 ; adc al, 0x5e ; ret
0x000000000041bf52 : loopne 0x41bfb8 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fef3 : loopne 0x41ff46 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042f49d : loopne 0x42f503 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430884 : loopne 0x4308d7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000433eab : loopne 0x433eb5 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004345fd : loopne 0x434607 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000043772b : loopne 0x437735 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043814c : loopne 0x4380e0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043814b : loopne 0x4380e1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043a513 : loopne 0x43a51c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043ae9e : loopne 0x43aeee ; add esp, 0x60 ; pop rbp ; ret
0x000000000043ae9d : loopne 0x43aeef ; add esp, 0x60 ; pop rbp ; ret
0x000000000043e34f : loopne 0x43e2e3 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e34e : loopne 0x43e2e4 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043ea50 : loopne 0x43ea57 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000440712 : loopne 0x440719 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004466cc : loopne 0x44671b ; mov esp, ebp ; pop rbp ; ret
0x00000000004466cb : loopne 0x44671c ; mov esp, ebp ; pop rbp ; ret
0x000000000044691c : loopne 0x44696b ; mov esp, ebp ; pop rbp ; ret
0x000000000044691b : loopne 0x44696c ; mov esp, ebp ; pop rbp ; ret
0x00000000004147b9 : mov ah, -0x13 ; adc eax, ebp ; js 0x4147ae ; ret
0x00000000004296dd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004297b7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000427765 : mov ah, 0x75 ; ret
0x00000000004482bc : mov ah, 5 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call rsp
0x000000000040a5f1 : mov al, -0x18 ; stc ; ret
0x000000000043181f : mov al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000430273 : mov al, -0x47 ; ret
0x0000000000443d4f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043d379 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041623a : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412073 : mov al, 0x31 ; sbb eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000040be9e : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000444c0a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000444e6d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411dab : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d6c4 : mov bh, 0x27 ; fisttp dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000040946b : mov bh, 0x75 ; adc byte ptr [rbp + 1], cl ; fimul dword ptr [rcx - 0x7f] ; ret 1
0x00000000004493b1 : mov bl, -2 ; call qword ptr [rax]
0x0000000000421105 : mov bl, 0x75 ; ret
0x0000000000419a8b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401dc3 : mov byte ptr [rip + 0x2485ae], 1 ; ret
0x0000000000428f5f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004109ff : mov ch, cl ; or eax, 0xb8000010 ; ret
0x000000000040bcbd : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000445bd4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000444a26 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bea4 : mov dh, -0x40 ; pop rbp ; ret
0x000000000044668a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000449879 : mov dr1, edi ; call rdi
0x0000000000445901 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000041f679 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000436d63 : mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x000000000043573a : mov dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000041f24f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044018a : mov dword ptr [rbp - 0x14], eax ; jmp 0x44020b
0x00000000004056be : mov dword ptr [rbp - 0x180], esi ; call 0x4019a8
0x0000000000438de8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x43985a
0x00000000004027c3 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402517 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402545 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f956 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004340f5 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x00000000004340d5 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x000000000041f4fd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043cf87 : mov eax, 0xb8000010 ; ret
0x000000000043711b : mov eax, 0xda72bf48 ; ret
0x000000000040cf62 : mov eax, 0xe9fffffd ; ret
0x0000000000414c6a : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ad1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e493 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043257e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004156c2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004167ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000440005 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f67c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043ae9c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043814a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004466ca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004350ad : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041e430 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000430b66 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f4ff : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000431a9e : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f03f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041cfe4 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f6ed : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430b8d : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x000000000041f4fe : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004365d8 : mov eax, ecx ; pop rbp ; ret
0x0000000000431901 : mov eax, edi ; pop rbp ; ret
0x0000000000411e46 : mov eax, esi ; pop rbp ; ret
0x000000000042bf18 : mov ebp, 0xe19c53ba ; ret
0x0000000000401deb : mov ebp, esp ; call rax
0x0000000000401d51 : mov ebp, esp ; ja 0x401d5c ; pop rbp ; ret
0x000000000041f24c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401de5 : mov edi, 0x649e20 ; mov rbp, rsp ; call rax
0x0000000000401d62 : mov edi, 0x64a320 ; jmp rax
0x0000000000401da2 : mov edi, 0x64a320 ; jmp rdx
0x00000000004101d1 : mov edi, 0x7034a5c4 ; shr byte ptr [rbp - 0x25], cl ; ret
0x00000000004287b7 : mov edi, 0xb8000055 ; wait ; jo 0x4287cf ; ret
0x0000000000415604 : mov edi, dword ptr [0x64a2c0] ; call 0x401879
0x00000000004340f1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x00000000004340d1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000430b89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000434697 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000446987 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000446986 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004444fe : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000428f7b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040d662 : mov edx, 0xe93b1cd5 ; ret
0x0000000000434693 : mov edx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000414812 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000429df2 : mov esi, 0x39443e04 ; ret 0xf41
0x00000000004444e7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004101e1 : mov esi, 0x7034a5c4 ; shr byte ptr [rbp - 0x25], cl ; ret
0x00000000004110be : mov esi, 0xb998634a ; ret 0xdd44
0x0000000000401da0 : mov esi, eax ; mov edi, 0x64a320 ; jmp rdx
0x000000000043335e : mov esp, 0x2dfffffe ; jrcxz 0x433389 ; ret 0x8977
0x0000000000432676 : mov esp, 0x2dfffffe ; loop 0x4326a1 ; ret 0x8977
0x00000000004113da : mov esp, 0x3d ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004027c7 : mov esp, ebp ; pop rbp ; ret
0x000000000041f955 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004340f4 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x00000000004340d4 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004147b8 : mov r12b, -0x13 ; adc eax, ebp ; js 0x4147af ; ret
0x000000000043181e : mov r8b, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000414c69 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ad1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043257d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004156c1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004167ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043ae9b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041e42f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000430b65 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042f6ec : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430b8c : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004365d7 : mov rax, rcx ; pop rbp ; ret
0x0000000000431900 : mov rax, rdi ; pop rbp ; ret
0x0000000000411e45 : mov rax, rsi ; pop rbp ; ret
0x0000000000401dea : mov rbp, rsp ; call rax
0x0000000000401d50 : mov rbp, rsp ; ja 0x401d5d ; pop rbp ; ret
0x00000000004340f0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x00000000004340d0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000430b88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000434696 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000434692 : mov rdx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000414811 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000401d9f : mov rsi, rax ; mov edi, 0x64a320 ; jmp rdx
0x00000000004027c6 : mov rsp, rbp ; pop rbp ; ret
0x00000000004027c4 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x000000000043aab1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004027c5 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x00000000004124e4 : mov word ptr [rdi], cs ; xor al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004124b2 : mov word ptr [rdi], cs ; xor al, byte ptr [rbp - 0x77] ; ret
0x000000000041d9e8 : movabs al, byte ptr [0x894100000000ba41] ; ret
0x000000000043f6f1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000424a58 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000436dea : movabs dword ptr [0x14899fe09a5aea4], eax ; ret 0x8948
0x00000000004155b3 : movabs dword ptr [0x71e80000005de92e], eax ; ret 0xfffe
0x00000000004040be : movabs dword ptr [0x940f000000000064], eax ; ret 0xd284
0x0000000000427ca5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004482c1 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call rsp
0x00000000004101d3 : movsd dword ptr [rdi], dword ptr [rsi] ; xor al, 0x70 ; shr byte ptr [rbp - 0x25], cl ; ret
0x000000000041de3c : movsxd rax, ecx ; pop rbp ; ret
0x0000000000445bd3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000444a25 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040bea3 : movzx eax, al ; pop rbp ; ret
0x000000000040bcbc : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411dac : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000411dad : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004442f8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000420f45 : nop ; ret
0x000000000042f352 : nop ; ret 0x148
0x000000000042f366 : nop ; ret 0x2948
0x00000000004487b9 : nop ; sti ; jmp qword ptr [rax]
0x00000000004469a8 : nop dword ptr [rax + rax] ; ret
0x00000000004493ad : or al, 0 ; add byte ptr [rax], dl ; mov bl, -2 ; call qword ptr [rax]
0x00000000004296da : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004297b4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004070c2 : or al, 0xffffffffffffffb5 ; ret
0x0000000000449599 : or al, 0xffffffffffffffff ; call rdx
0x00000000004489a4 : or al, 2 ; add byte ptr [rax], al ; cwde ; cld ; call rdi
0x0000000000410f72 : or al, byte ptr [rax] ; add bh, al ; test edx, esp ; idiv bh ; jmp rdi
0x00000000004491ad : or al, byte ptr [rax] ; add byte ptr [rax], ah ; jb 0x4491b7 ; jmp qword ptr [rbx]
0x000000000043fdb5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040a950 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x00000000004350f5 : or bl, byte ptr [rbx + 0x4c] ; ret
0x00000000004318ff : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x000000000041f250 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000434bbe : or byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x45], cl ; fmul dword ptr [rax - 0x7f] ; ret 0
0x00000000004383c8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041c870 : or cl, ch ; ret
0x000000000043fdb4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040d568 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041f954 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040a4c1 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x0000000000411041 : or dword ptr [rax], eax ; add bh, al ; test edx, esp ; idiv bh ; jmp rdi
0x000000000040abd5 : or dword ptr [rbx - 0x2eb4b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ae55 : or dword ptr [rbx - 0x33f4b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408480 : or eax, 0x294c9e78 ; ret 0x2948
0x0000000000410a01 : or eax, 0xb8000010 ; ret
0x000000000041159f : or eax, dword ptr [rax] ; add bh, al ; test edx, esp ; idiv bh ; jmp qword ptr [rax]
0x000000000043513a : or ebx, dword ptr [rbx + 0x4c] ; ret
0x00000000004372b5 : or ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041f4fb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041c8e1 : or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x0000000000402f38 : out -0x74, al ; ret
0x00000000004318fe : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000042b0bb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000444c0c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436794 : out dx, al ; ret
0x000000000043df50 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000409512 : out dx, eax ; add cl, ch ; push rbp ; ret 0xffff
0x000000000040bea0 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000430272 : out dx, eax ; mov al, -0x47 ; ret
0x00000000004367df : out dx, eax ; ret
0x00000000004444e9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004343f8 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042c1a5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000420df6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042c1f0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000439c51 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004444ec : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040847d : paddd mm2, qword ptr [rax] ; or eax, 0x294c9e78 ; ret 0x2948
0x000000000043aaac : pop ax ; jb 0x43aae1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042d059 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044699c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ac43 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042d05b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044699e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ac45 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004469a0 : pop r14 ; pop r15 ; ret
0x0000000000411583 : pop r14 ; pop rbp ; ret
0x000000000040ac47 : pop r15 ; pop rbp ; ret
0x00000000004469a2 : pop r15 ; ret
0x000000000043aaad : pop rax ; jb 0x43aae0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004109b1 : pop rbp ; adc byte ptr [rax], al ; add bh, al ; test edx, esp ; idiv bh ; jmp rbx
0x0000000000401dc2 : pop rbp ; mov byte ptr [rip + 0x2485ae], 1 ; ret
0x0000000000401d61 : pop rbp ; mov edi, 0x64a320 ; jmp rax
0x0000000000401d9e : pop rbp ; mov rsi, rax ; mov edi, 0x64a320 ; jmp rdx
0x000000000044699b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042d05c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044699f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000428f62 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000425235 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000428f7e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401d55 : pop rbp ; ret
0x000000000040ac42 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c9e0 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411582 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004091f9 : pop rbx ; pop rbp ; ret
0x00000000004350f6 : pop rbx ; ret
0x0000000000428f63 : pop rcx ; ret 0x1b2
0x0000000000423636 : pop rcx ; ret 0x8589
0x0000000000428f7f : pop rcx ; ret 0x8b48
0x000000000042b2b0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040ac48 : pop rdi ; pop rbp ; ret
0x00000000004469a3 : pop rdi ; ret
0x00000000004050bc : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x71d23fbb], cl ; call qword ptr [rcx]
0x000000000041159e : pop rsi ; or eax, dword ptr [rax] ; add bh, al ; test edx, esp ; idiv bh ; jmp qword ptr [rax]
0x000000000040ac46 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004469a1 : pop rsi ; pop r15 ; ret
0x0000000000411584 : pop rsi ; pop rbp ; ret
0x0000000000411ed0 : pop rsi ; ret
0x00000000004499f4 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004485b8 : pop rsp ; jrcxz 0x4485bc ; jmp rsp
0x000000000042d05a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044699d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ac44 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423635 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000410f71 : popfq ; or al, byte ptr [rax] ; add bh, al ; test edx, esp ; idiv bh ; jmp rdi
0x000000000040fdc6 : popfq ; ret 0xd284
0x0000000000436d00 : push -0x2b ; ret 0xf79f
0x0000000000428f60 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042b14a : push -0x75425eeb ; push rbp ; ret
0x000000000041b8ec : push -0x76000001 ; ret 0xca29
0x0000000000427ca8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041acd7 : push -1 ; ret 0x9589
0x0000000000412037 : push 0x213ca16f ; ret 0xd709
0x00000000004482bb : push qword ptr [rbp + rax - 0x5a540000] ; sti ; call rsp
0x0000000000411ece : push rax ; adc al, 0x5e ; ret
0x0000000000449230 : push rax ; jns 0x449234 ; call qword ptr [rcx]
0x00000000004130d4 : push rax ; pop rbp ; ret
0x0000000000436b39 : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041d99e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000401de4 : push rbp ; mov edi, 0x649e20 ; mov rbp, rsp ; call rax
0x000000000041a3cc : push rbp ; ret
0x0000000000419fee : push rbp ; ret 0xd284
0x0000000000409515 : push rbp ; ret 0xffff
0x0000000000436c8c : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000435c11 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000004362ad : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x00000000004296df : push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004297b9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411f10 : push rcx ; adc al, 0x5e ; ret
0x000000000040b0b3 : push rcx ; ret 0x4589
0x000000000040b323 : push rcx ; ret 0x6fb9
0x000000000040b114 : push rcx ; ret 0x8589
0x00000000004444eb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040d6c1 : push rdx ; wait ; cdq ; mov bh, 0x27 ; fisttp dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000040d661 : pushfq ; mov edx, 0xe93b1cd5 ; ret
0x000000000041aad3 : pushfq ; ret
0x000000000041a656 : pushfq ; ret 0x8445
0x0000000000407efc : pushfq ; ret 0xd284
0x000000000041b3df : rcl dword ptr [rdi - 0x97f], -1 ; jmp qword ptr [rcx]
0x00000000004017e1 : ret
0x000000000040ccc9 : ret 0
0x00000000004160b3 : ret 0x148
0x0000000000436b97 : ret 0x1772
0x000000000042c2b4 : ret 0x1a
0x000000000042152d : ret 0x1add
0x0000000000428f65 : ret 0x1b2
0x00000000004362b1 : ret 0x20
0x0000000000404b53 : ret 0x20e9
0x00000000004371f8 : ret 0x2149
0x000000000040ec89 : ret 0x2236
0x0000000000421e7a : ret 0x23da
0x0000000000401ca2 : ret 0x2485
0x0000000000401aa2 : ret 0x2486
0x00000000004018a2 : ret 0x2487
0x000000000042eb78 : ret 0x279e
0x0000000000419915 : ret 0x28b
0x0000000000410ec2 : ret 0x28f5
0x0000000000408485 : ret 0x2948
0x0000000000437ae1 : ret 0x294c
0x000000000042b2b4 : ret 0x2a
0x00000000004296e2 : ret 0x2d50
0x000000000044404e : ret 0x3040
0x000000000041b15b : ret 0x3144
0x0000000000410ff0 : ret 0x3145
0x0000000000437b4d : ret 0x314c
0x000000000041c344 : ret 0x3252
0x000000000042a1b4 : ret 0x3b
0x0000000000427215 : ret 0x3e
0x000000000041a90c : ret 0x4030
0x000000000043787d : ret 0x410b
0x0000000000430bdd : ret 0x43b8
0x0000000000404840 : ret 0x4589
0x000000000042a651 : ret 0x4802
0x0000000000434cc0 : ret 0x4808
0x00000000004444ee : ret 0x4815
0x00000000004343a1 : ret 0x4818
0x00000000004323e2 : ret 0x4820
0x000000000042c1a6 : ret 0x4861
0x00000000004336ea : ret 0x4877
0x0000000000436aef : ret 0x4878
0x000000000040d3dd : ret 0x48b8
0x0000000000402687 : ret 0x48f0
0x000000000043788b : ret 0x490b
0x0000000000424a61 : ret 0x4b
0x000000000043191c : ret 0x4c6a
0x0000000000430077 : ret 0x4cc0
0x000000000040ac96 : ret 0x4cf0
0x00000000004399cc : ret 0x4f0b
0x0000000000406412 : ret 0x4fc7
0x000000000041f4ab : ret 0x5589
0x000000000042996a : ret 0x5966
0x0000000000438627 : ret 0x5bc6
0x000000000044668f : ret 0x61
0x000000000041a440 : ret 0x6271
0x0000000000420bc6 : ret 0x6a8a
0x000000000040b325 : ret 0x6fb9
0x000000000040a5ba : ret 0x70e8
0x000000000040965e : ret 0x7121
0x000000000042087e : ret 0x77a8
0x00000000004219e1 : ret 0x7a8a
0x000000000041cb80 : ret 0x7ae8
0x000000000042865b : ret 0x7b7f
0x0000000000434ce0 : ret 0x800
0x000000000042f00a : ret 0x8041
0x00000000004045da : ret 0x8141
0x000000000040cfcd : ret 0x8148
0x0000000000437b30 : ret 0x8149
0x000000000042a574 : ret 0x822d
0x0000000000403a80 : ret 0x8445
0x0000000000403e63 : ret 0x8589
0x00000000004053d0 : ret 0x858a
0x000000000040b392 : ret 0x8844
0x000000000043d609 : ret 0x8902
0x00000000004376d9 : ret 0x8908
0x00000000004191d0 : ret 0x8931
0x00000000004215f3 : ret 0x8940
0x00000000004118c7 : ret 0x8944
0x000000000040d696 : ret 0x8948
0x0000000000442b0f : ret 0x894a
0x0000000000420df7 : ret 0x8961
0x000000000043267d : ret 0x8977
0x000000000041d0f0 : ret 0x8989
0x0000000000416cdc : ret 0x899a
0x0000000000417704 : ret 0x89a5
0x0000000000404d13 : ret 0x89c4
0x0000000000444108 : ret 0x8a44
0x0000000000444005 : ret 0x8a4a
0x000000000040458b : ret 0x8b48
0x0000000000432360 : ret 0x8b4c
0x0000000000405428 : ret 0x8bc4
0x0000000000408eb6 : ret 0x8d89
0x000000000041d9d7 : ret 0x93e8
0x000000000043fa82 : ret 0x941
0x000000000043570f : ret 0x948
0x000000000041a75c : ret 0x9589
0x0000000000404a26 : ret 0x98b9
0x000000000041aad1 : ret 0x9c0f
0x0000000000419b1b : ret 0xa
0x00000000004044d7 : ret 0xa2b9
0x00000000004297bc : ret 0xa30b
0x000000000040f1ad : ret 0xa5d1
0x00000000004400cf : ret 0xac60
0x000000000040407d : ret 0xb0
0x0000000000419fb9 : ret 0xb041
0x00000000004336ce : ret 0xb277
0x000000000040540f : ret 0xb2c4
0x0000000000444748 : ret 0xb2e8
0x000000000042b0c0 : ret 0xb740
0x000000000040d6bc : ret 0xb848
0x0000000000434bce : ret 0xb849
0x000000000041a2f1 : ret 0xb931
0x00000000004292f0 : ret 0xb940
0x0000000000443f92 : ret 0xb94a
0x000000000041d872 : ret 0xb989
0x0000000000416f30 : ret 0xb99a
0x000000000041a732 : ret 0xb9a5
0x000000000041d8a6 : ret 0xba89
0x000000000042b73c : ret 0xbf48
0x0000000000401d85 : ret 0xc148
0x00000000004029a3 : ret 0xc48b
0x00000000004468d2 : ret 0xc493
0x0000000000417596 : ret 0xc6e0
0x0000000000444bc9 : ret 0xca21
0x000000000041b794 : ret 0xca29
0x0000000000413d90 : ret 0xcae8
0x0000000000446695 : ret 0xccb2
0x0000000000403fd0 : ret 0xd284
0x000000000043b7f5 : ret 0xd5f3
0x0000000000442755 : ret 0xd618
0x000000000041b6fb : ret 0xd701
0x000000000041203c : ret 0xd709
0x000000000043bdde : ret 0xdc02
0x000000000040e72d : ret 0xdd44
0x0000000000419be7 : ret 0xe280
0x000000000042af92 : ret 0xe940
0x000000000042c1f1 : ret 0xe961
0x00000000004170df : ret 0xe99a
0x000000000041b7bb : ret 0xe9a5
0x000000000042201d : ret 0xea51
0x0000000000416feb : ret 0xea81
0x000000000043d77a : ret 0xedb9
0x000000000042ddac : ret 0xee8
0x0000000000417e02 : ret 0xf1f5
0x0000000000412063 : ret 0xf281
0x000000000040fe77 : ret 0xf41
0x0000000000410f53 : ret 0xf748
0x0000000000436d02 : ret 0xf79f
0x000000000042bd45 : ret 0xf7f3
0x0000000000434cef : ret 0xf800
0x000000000042a4ce : ret 0xfc75
0x00000000004393da : ret 0xfc85
0x000000000040a9da : ret 0xff6f
0x000000000040a28f : ret 0xff70
0x000000000042bd3f : ret 0xffa5
0x000000000042a4c8 : ret 0xffc4
0x00000000004296e8 : ret 0xffd5
0x00000000004297c2 : ret 0xffd8
0x000000000042a57a : ret 0xffd9
0x0000000000429964 : ret 0xffe0
0x0000000000428655 : ret 0xfffa
0x00000000004488c1 : ret 0xfffb
0x0000000000448b89 : ret 0xfffc
0x000000000041991c : ret 0xfffd
0x00000000004155bc : ret 0xfffe
0x00000000004056c6 : ret 0xffff
0x0000000000400a78 : ret 1
0x0000000000404804 : ret 2
0x000000000040cfd0 : ret 4
0x000000000041b3af : ret 5
0x000000000043f6fa : ret 6
0x000000000040a0e9 : ret 8
0x00000000004444cd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000440a2c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ea3c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004124e9 : rol byte ptr [rbp + 9], 1 ; ret
0x000000000043e285 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000004444cc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000041d99a : ror byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000414c67 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412ecb : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000436b5c : ror byte ptr [rax + 0x21], 1 ; ret 0x948
0x0000000000436c8d : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000043aaa4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401d8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d9b ; pop rbp ; ret
0x000000000041d99b : ror byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000414c68 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000444a27 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000412ecc : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000435c12 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000004362ae : ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000041f4fa : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041a39c : ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x00000000004365d3 : ror dword ptr [rax + 0x21], -7 ; mov rax, rcx ; pop rbp ; ret
0x000000000040bcbe : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004442fe : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000042ff30 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000040adfe : sahf ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000041d9fa : sahf ; ret
0x000000000043cdba : sahf ; ret 0xd284
0x000000000040946a : sal byte ptr [rdi + 0x14d1075], 1 ; fimul dword ptr [rcx - 0x7f] ; ret 1
0x000000000040ae58 : sar ah, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043613f : sar dh, -1 ; dec dword ptr [rax + 0x21] ; ret 0x948
0x0000000000416078 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x0000000000401d8e : sar eax, 1 ; jne 0x401d99 ; pop rbp ; ret
0x000000000042b2b1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401d8d : sar rax, 1 ; jne 0x401d9a ; pop rbp ; ret
0x00000000004499f0 : sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000430270 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042b1b1 : sbb cl, ch ; ret
0x000000000043a2f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412075 : sbb eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000042f2c0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000436d5f : sbb esi, dword ptr [rdi + 0x33] ; mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x0000000000436d5e : sbb esi, dword ptr [rdi + r12*4 + 0x33] ; mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x0000000000401dc5 : scasb al, byte ptr [rdi] ; test dword ptr [rax + rax], esp ; add ebx, esi ; ret
0x000000000043bddd : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x00000000004318fd : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x00000000004318fc : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x00000000004494b0 : shr ah, -2 ; jmp rsi
0x00000000004101d6 : shr byte ptr [rbp - 0x25], cl ; ret
0x000000000042a1b2 : shr cl, cl ; ret 0x3b
0x00000000004336e4 : shr dword ptr [rax], 1 ; and al, 0xffffffffffffffb9 ; jrcxz 0x43370d ; ret 0x4877
0x000000000041157f : sldt word ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004365d6 : stc ; mov rax, rcx ; pop rbp ; ret
0x000000000040a5f3 : stc ; ret
0x0000000000427fed : stc ; ret 0x77a8
0x0000000000448dda : std ; call qword ptr [rdx]
0x000000000042eb77 : std ; ret 0x279e
0x00000000004482c2 : sti ; call rsp
0x00000000004487ba : sti ; jmp qword ptr [rax]
0x00000000004482ba : sti ; push qword ptr [rbp + rax - 0x5a540000] ; sti ; call rsp
0x0000000000448fc4 : sub al, 8 ; add byte ptr [rax], al ; call 0xffffffffd8448e3b
0x0000000000414ece : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004401d6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414db8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004296e5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004336e5 : sub byte ptr [rcx + rdi*4], ah ; jrcxz 0x43370c ; ret 0x4877
0x00000000004296db : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004297b5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042a575 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000411e40 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000043aaaf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000436ae9 : sub esi, dword ptr [rax - 0x1ca0b1a9] ; ret 0x4878
0x0000000000446a01 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000446a00 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004336ca : test al, -0x47 ; jrcxz 0x4336ef ; ret 0xb277
0x00000000004296e0 : test al, -0x7f ; ret 0x2d50
0x00000000004297ba : test al, -0x7f ; ret 0xa30b
0x0000000000443da3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f94e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000042bf16 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000439b48 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041dd6c : test al, 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000405052 : test bl, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004469aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042055c : test byte ptr [rcx], ch ; ret 0
0x0000000000413fe6 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000431ef2 : test byte ptr [rsi - 0x16fffffd], cl ; ret 1
0x000000000041de36 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000420556 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000401dc6 : test dword ptr [rax + rax], esp ; add ebx, esi ; ret
0x000000000040a0e2 : test dword ptr [rbp + rdi*8 - 0x7bf00001], eax ; ret 8
0x000000000043fdb7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000041a346 : test dword ptr [rdi + rdi*8 - 1], eax ; call rcx
0x000000000043fd77 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000043fcf2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000439c56 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000431740 : test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rsi - 0x26] ; ret
0x0000000000431821 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x000000000040a4c5 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0x000000000040ae03 : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000040adc5 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rsp
0x000000000043df55 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042f56a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000042af8b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042c1ea : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041b7b4 : test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x0000000000427caa : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042c19f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000411836 : test edx, esp ; idiv bh ; call qword ptr [rdx]
0x00000000004115a3 : test edx, esp ; idiv bh ; jmp qword ptr [rax]
0x000000000041190b : test edx, esp ; idiv bh ; jmp qword ptr [rcx]
0x0000000000411190 : test edx, esp ; idiv bh ; jmp qword ptr [rsi]
0x0000000000410639 : test edx, esp ; idiv bh ; jmp rbx
0x0000000000410f76 : test edx, esp ; idiv bh ; jmp rdi
0x000000000040d6c2 : wait ; cdq ; mov bh, 0x27 ; fisttp dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000042a1af : wait ; jge 0x42a191 ; shr cl, cl ; ret 0x3b
0x000000000042526d : wait ; jo 0x42527b ; ret
0x00000000004287bc : wait ; jo 0x4287ca ; ret
0x00000000004084d7 : xchg byte ptr [rbx - 0xa], cl ; ret
0x0000000000435d6c : xchg dword ptr [rdi], eax ; lea ecx, dword ptr [rbx - 0x3c] ; cmp byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004444e8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041b6f5 : xchg eax, ebp ; cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x000000000040cf61 : xchg eax, ebp ; mov eax, 0xe9fffffd ; ret
0x000000000041acd6 : xchg eax, ebp ; push -1 ; ret 0x9589
0x000000000043de42 : xchg eax, ebp ; ret
0x0000000000403a7f : xchg eax, ebp ; ret 0x8445
0x0000000000403fcf : xchg eax, ebp ; ret 0xd284
0x000000000043613e : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax + 0x21] ; ret 0x948
0x0000000000420df5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004276f5 : xchg eax, ebx ; ret
0x0000000000427925 : xchg eax, ecx ; ret
0x0000000000443a69 : xchg eax, edi ; ret 0xd284
0x000000000041a39e : xchg eax, edx ; ret
0x000000000042f01f : xchg eax, edx ; ret 0x8445
0x000000000041a83a : xchg eax, edx ; ret 0xd284
0x0000000000419be6 : xchg eax, edx ; ret 0xe280
0x00000000004336c9 : xchg eax, esi ; test al, -0x47 ; jrcxz 0x4336f0 ; ret 0xb277
0x0000000000438dea : xchg eax, esp ; jmp 0x439858
0x0000000000438d27 : xchg eax, esp ; jmp 0x43985a
0x000000000042c1a4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000427a75 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042c1ef : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000434604 : xchg eax, esp ; ret
0x000000000042f009 : xchg eax, esp ; ret 0x8041
0x000000000042b0be : xchg eax, esp ; ret 0xb740
0x00000000004040c6 : xchg eax, esp ; ret 0xd284
0x0000000000438de9 : xchg eax, r12d ; jmp 0x439859
0x000000000041c8e0 : xlatb ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x00000000004056c5 : xlatb ; ret 0xffff
0x00000000004101d4 : xor al, 0x70 ; shr byte ptr [rbp - 0x25], cl ; ret
0x00000000004130cd : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004124e6 : xor al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004124b4 : xor al, byte ptr [rbp - 0x77] ; ret
0x000000000042b0b9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x00000000004376d3 : xor bl, byte ptr [rdi - 0x7c5faa75] ; ret 0x8908
0x000000000041f957 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000435c0c : xor byte ptr [rax + 0x558b483a], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000041f958 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412deb : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004170b0 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434790 : xor cl, byte ptr [rcx - 0x70f05fbb] ; ret 2
0x000000000041a547 : xor ebx, dword ptr [rdi] ; jle 0x41a4da ; int 0x80
0x00000000004365d2 : xor ecx, eax ; and rcx, rdi ; mov rax, rcx ; pop rbp ; ret
