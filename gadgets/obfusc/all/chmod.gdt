0x000000000045e16c : adc al, 5 ; add byte ptr [rax], al ; loopne 0x45e1ca ; cld ; jmp qword ptr [rbx]
0x000000000045d8e9 : adc al, byte ptr [rax] ; add byte ptr [rax], bh ; sub al, -2 ; call qword ptr [rax]
0x0000000000453d63 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045d869 : adc byte ptr [rax], al ; add byte ptr [rax - 0x1f], bh ; cld ; call qword ptr [rax]
0x000000000045d859 : adc byte ptr [rax], al ; add byte ptr [rax - 0x23], ch ; cld ; call rax
0x000000000042fc9b : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e39e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000448add : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000041dd11 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000040af6d : adc dl, byte ptr [rdx - 0x1464ade] ; ret
0x000000000045ed5d : adc dword ptr [rax], eax ; add al, dl ; ret
0x000000000042656b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045d899 : adc dword ptr [rax], eax ; add byte ptr [rax], ch ; or al, 0xfffffffffffffffd ; call rax
0x000000000045d8a9 : adc dword ptr [rax], eax ; add byte ptr [rax], cl ; sub ch, bh ; call qword ptr [rax]
0x0000000000453d31 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041ee9b : adc eax, 0x558abda1 ; ret
0x000000000043dfd7 : adc eax, 0x85c70000 ; call 0x1843dfe7
0x000000000040f848 : adc eax, 0x8b1dc18f ; push rbp ; loopne 0x40f7d9 ; ret 0x33f7
0x00000000004349e1 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x0000000000451e83 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000422479 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411f2c : adc eax, dword ptr [rbx - 0x76ba95ea] ; ret 0x8141
0x0000000000401a44 : add ah, byte ptr [rsi] ; jmp rax
0x0000000000401a84 : add ah, byte ptr [rsi] ; jmp rdx
0x0000000000427fe6 : add al, -8 ; ret 0x898d
0x000000000042ae41 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042f0cf : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000044b190 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000043f8f7 : add al, 0 ; add cl, ch ; ret 1
0x0000000000456e6a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045df5c : add al, 3 ; add byte ptr [rax], al ; mov al, 0x2d ; sti ; jmp qword ptr [rbx]
0x000000000045e16f : add al, ah ; push rcx ; cld ; jmp qword ptr [rbx]
0x000000000045dfdf : add al, ah ; sti ; call qword ptr [rdx]
0x000000000045e2cf : add al, al ; push rsi ; cld ; call rdx
0x000000000045d6b3 : add al, bh ; push rdi ; sti ; call qword ptr [rax]
0x000000000042c212 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000405392 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042c211 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000045d723 : add al, ch ; pop rsi ; cld ; jmp rax
0x0000000000427a87 : add al, ch ; ret
0x0000000000404a88 : add al, ch ; ret 0xffce
0x000000000045d82b : add al, ch ; sahf ; cld ; call qword ptr [rax]
0x000000000045f44f : add al, dh ; ret 0xffff
0x000000000045ed5f : add al, dl ; ret
0x000000000044cae8 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x000000000042e626 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000443feb : add bh, al ; in al, 0x3e ; ret
0x0000000000453848 : add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004590c5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042a6c2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042b23f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042b11b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042a449 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000042b0d7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000426244 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040497d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x00000000004246fc : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000044f34f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041ecd9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000451e85 : add bh, al ; xchg eax, r12d ; int 6
0x000000000045c4ef : add bl, dh ; ret
0x000000000042e5e7 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000443c63 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000045c1c2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000045c424 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000434c99 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000045e16b : add byte ptr [rax + 0x51e00000], dl ; cld ; jmp qword ptr [rbx]
0x000000000045e3b7 : add byte ptr [rax + 0x5d], ch ; cld ; jmp qword ptr [rbx]
0x000000000045e417 : add byte ptr [rax + 0x63], cl ; cld ; jmp rsi
0x000000000040805e : add byte ptr [rax + 0xf410000], ah ; xchg eax, esp ; ret 0x8445
0x000000000045e4fb : add byte ptr [rax + rcx - 0x7ce00000], ah ; cld ; call rdx
0x000000000045d673 : add byte ptr [rax - 0x12], bh ; cli ; call qword ptr [rax]
0x000000000045d86b : add byte ptr [rax - 0x1f], bh ; cld ; call qword ptr [rax]
0x000000000045d85b : add byte ptr [rax - 0x23], ch ; cld ; call rax
0x000000000045d623 : add byte ptr [rax - 0x3c], bl ; cli ; call rax
0x000000000045ddbf : add byte ptr [rax - 0x43], dh ; cli ; call qword ptr [rcx]
0x000000000043d544 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x000000000045d7db : add byte ptr [rax - 0x72], ch ; cld ; call rax
0x0000000000453a2b : add byte ptr [rax - 0x75], cl ; call 0x4907c383
0x000000000042343b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409afb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040acf3 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000443fe8 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x000000000045e16a : add byte ptr [rax], al ; adc al, 5 ; add byte ptr [rax], al ; loopne 0x45e1cc ; cld ; jmp qword ptr [rbx]
0x000000000045df5a : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; mov al, 0x2d ; sti ; jmp qword ptr [rbx]
0x000000000042e624 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000453846 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004590c3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000042a6c0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042b23d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042b119 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042b0d5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000426242 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004246fa : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000045c4ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000434c97 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000043d542 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000453a29 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4907c385
0x0000000000409af9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045c4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040836b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044debb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000459c22 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000040acf4 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004533cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000453569 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000409a8e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000443c96 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000421ee2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b35b : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044a502 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044a62e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000042dada : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042eaf3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x00000000004437b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x0000000000443c64 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000042ed64 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x00000000004094cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x14d247bb], cl ; ret 0x571d
0x0000000000409481 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d247bb], cl ; ret 0x571d
0x000000000040ae6a : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x0000000000424a03 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042c3d4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000042bb54 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x0000000000446308 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004462c6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044b64e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000457b4c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042bec0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000442999 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x0000000000453f08 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000427369 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042a2e5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004119aa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b07a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000434f26 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004119c9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000045c1c3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000045c425 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004261b0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045b591 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000437f1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ee10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000045a6a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040867b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404633 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ad25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042613a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040836d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f179 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000459bb7 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ddba : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x43], dh ; cli ; call qword ptr [rcx]
0x000000000042247b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421b00 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042656d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042bab9 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043009f : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040159b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045eb7a : add byte ptr [rax], al ; and al, 0xf ; add byte ptr [rax], al ; push rax ; xchg esi, edi ; jmp qword ptr [rcx]
0x000000000045d82a : add byte ptr [rax], al ; call 0x1145d4d4
0x000000000045d722 : add byte ptr [rax], al ; call 0xffffffffe145d38c
0x000000000045d6b2 : add byte ptr [rax], al ; clc ; push rdi ; sti ; call qword ptr [rax]
0x000000000045d8ea : add byte ptr [rax], al ; cmp byte ptr [rsi + rdi*8], ch ; call qword ptr [rax]
0x000000000045dbaa : add byte ptr [rax], al ; cwde ; fcos ; jmp qword ptr [rax]
0x000000000045d762 : add byte ptr [rax], al ; cwde ; movsxd rdi, esp ; jmp rax
0x000000000045e1ca : add byte ptr [rax], al ; je 0x45e1dc ; add byte ptr [rax], al ; xor byte ptr [rbx - 4], dl ; call rdi
0x00000000004016d9 : add byte ptr [rax], al ; jmp 0x4015b9
0x0000000000443cb0 : add byte ptr [rax], al ; jmp 0x444022
0x0000000000459bb3 : add byte ptr [rax], al ; jmp 0x459bc2
0x0000000000459d15 : add byte ptr [rax], al ; jmp 0x459d24
0x0000000000459f83 : add byte ptr [rax], al ; jmp 0x459f92
0x000000000045ddbe : add byte ptr [rax], al ; jo 0x45dd84 ; cli ; call qword ptr [rcx]
0x000000000045d672 : add byte ptr [rax], al ; js 0x45d669 ; cli ; call qword ptr [rax]
0x000000000045d86a : add byte ptr [rax], al ; js 0x45d854 ; cld ; call qword ptr [rax]
0x000000000045dfde : add byte ptr [rax], al ; loopne 0x45e034 ; sti ; call qword ptr [rdx]
0x000000000045e16e : add byte ptr [rax], al ; loopne 0x45e1c8 ; cld ; jmp qword ptr [rbx]
0x000000000045e51e : add byte ptr [rax], al ; loopne 0x45e4aa ; cld ; call qword ptr [rdx]
0x000000000045e71e : add byte ptr [rax], al ; mov al, -0x2d ; cld ; jmp qword ptr [rdi]
0x000000000045df5e : add byte ptr [rax], al ; mov al, 0x2d ; sti ; jmp qword ptr [rbx]
0x000000000045d632 : add byte ptr [rax], al ; mov dh, al ; cli ; call qword ptr [rax]
0x000000000045c208 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446a95 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045e412 : add byte ptr [rax], al ; mov esp, 0x48000007 ; movsxd rdi, esp ; jmp rsi
0x000000000044bb3f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409afa : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045e416 : add byte ptr [rax], al ; movsxd rdi, esp ; jmp rsi
0x000000000045d8aa : add byte ptr [rax], al ; or byte ptr [rax], ch ; std ; call qword ptr [rax]
0x000000000045d6a2 : add byte ptr [rax], al ; or byte ptr [rdx - 5], dl ; call rax
0x000000000045d91a : add byte ptr [rax], al ; or byte ptr [rsi - 2], bl ; call rax
0x000000000045d92a : add byte ptr [rax], al ; pop rax ; push -2 ; call qword ptr [rax]
0x0000000000408f8d : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421ee3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e40 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408841 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045eb7e : add byte ptr [rax], al ; push rax ; xchg esi, edi ; jmp qword ptr [rcx]
0x000000000045c4ee : add byte ptr [rax], al ; ret
0x000000000045d5e2 : add byte ptr [rax], al ; sbb byte ptr [rbp - 6], al ; call rax
0x000000000045daaa : add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ah ; call qword ptr [rax]
0x000000000045d732 : add byte ptr [rax], al ; sbb byte ptr [rcx - 4], ah ; jmp qword ptr [rax]
0x000000000045d662 : add byte ptr [rax], al ; test al, -0x23 ; cli ; call rax
0x000000000045d5f2 : add byte ptr [rax], al ; test al, 0x47 ; cli ; call qword ptr [rax]
0x000000000045d772 : add byte ptr [rax], al ; test al, 0x65 ; cld ; jmp qword ptr [rax]
0x000000000045dfda : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; loopne 0x45e038 ; sti ; call qword ptr [rdx]
0x000000000045e1ce : add byte ptr [rax], al ; xor byte ptr [rbx - 4], dl ; call rdi
0x000000000045d8eb : add byte ptr [rax], bh ; sub al, -2 ; call qword ptr [rax]
0x000000000045d5e3 : add byte ptr [rax], bl ; cli ; call rax
0x000000000045daab : add byte ptr [rax], bl ; movsxd rdi, edi ; call qword ptr [rax]
0x000000000045d81b : add byte ptr [rax], bl ; popfq ; cld ; call rax
0x000000000045d89b : add byte ptr [rax], ch ; or al, 0xfffffffffffffffd ; call rax
0x000000000045d6a3 : add byte ptr [rax], cl ; push rdx ; sti ; call rax
0x000000000045d8ab : add byte ptr [rax], cl ; sub ch, bh ; call qword ptr [rax]
0x000000000045e1cf : add byte ptr [rax], dh ; push rbx ; cld ; call rdi
0x0000000000459c24 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000045e1cb : add byte ptr [rbp + rax], dh ; add byte ptr [rax], dh ; push rbx ; cld ; call rdi
0x000000000040acf6 : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000042ec08 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x000000000042efbe : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x00000000004533cd : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045356b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000409a90 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000443788 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x0000000000443c98 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000421ee4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e41 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044a504 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044a630 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000042b7df : add byte ptr [rbx + 0x462dc045], cl ; jns 0x42b796 ; ret
0x000000000042ec21 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x000000000042efa5 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000408842 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042eaf5 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x000000000042f0d1 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x00000000004437b4 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x0000000000443c66 : add byte ptr [rbx + 0x602de045], cl ; ret
0x0000000000405303 : add byte ptr [rbx + 0x702dc845], cl ; xor edx, dword ptr [rax] ; ret
0x0000000000405367 : add byte ptr [rbx + 0x712dc845], cl ; xor edx, dword ptr [rax] ; ret
0x000000000042ed66 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x000000000042ee60 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x000000000045dfdb : add byte ptr [rbx + rax + 0x4de00000], al ; sti ; call qword ptr [rdx]
0x000000000045df5b : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; mov al, 0x2d ; sti ; jmp qword ptr [rbx]
0x0000000000405950 : add byte ptr [rbx - 0x10b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004094ce : add byte ptr [rbx - 0x14d247bb], cl ; ret 0x571d
0x0000000000409483 : add byte ptr [rbx - 0x15d247bb], cl ; ret 0x571d
0x000000000040ae6c : add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x0000000000424a05 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004249ba : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042c3d6 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000042bb56 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x000000000044630a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004462c8 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044b650 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000450895 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044b192 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004506d3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000457b4e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042c214 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000042bec2 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x000000000042e329 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x000000000044299b : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x0000000000453f0a : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000042e2e7 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x0000000000442950 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000446a96 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x000000000045c209 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042736b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004056cb : add byte ptr [rbx - 0xef4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042a2e7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004119ac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b07c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000434f29 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000408061 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045ddbb : add byte ptr [rcx + rax], ah ; add byte ptr [rax - 0x43], dh ; cli ; call qword ptr [rcx]
0x0000000000453d60 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x000000000042dbd2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000411987 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000043f2d4 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x00000000004262ae : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x000000000045c1c5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000045c427 : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004261b2 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000435bfb : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e413 : add byte ptr [rdi + rax + 0x63480000], bh ; cld ; jmp rsi
0x000000000045e3b3 : add byte ptr [rdi + rax], bl ; add byte ptr [rax + 0x5d], ch ; cld ; jmp qword ptr [rbx]
0x000000000045eb7b : add byte ptr [rdi + rcx], ah ; add byte ptr [rax], al ; push rax ; xchg esi, edi ; jmp qword ptr [rcx]
0x000000000045b593 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000437f21 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ee12 : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000045a6aa : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040867d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404635 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ad27 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042613c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040836f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f17b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000408226 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000457585 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d770 : add byte ptr [rip + 0x65a80000], cl ; cld ; jmp qword ptr [rax]
0x00000000004409bd : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x000000000044940d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045e2eb : add byte ptr [rsi + rax + 0x58800000], dl ; cld ; call qword ptr [rbx]
0x000000000045e2cb : add byte ptr [rsi + rax], dh ; add al, al ; push rsi ; cld ; call rdx
0x000000000045dba8 : add byte ptr [rsi], bl ; add byte ptr [rax], al ; cwde ; fcos ; jmp qword ptr [rax]
0x000000000042c3d3 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000043c888 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x000000000041ee0c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000424c0d : add cl, ch ; ret
0x0000000000405394 : add cl, ch ; ret 1
0x0000000000437e59 : add cl, ch ; ret 2
0x0000000000453ae1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000447cce : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x000000000044f77e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045ddbd : add dword ptr [rax], eax ; add byte ptr [rax - 0x43], dh ; cli ; call qword ptr [rcx]
0x000000000042ca89 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000411985 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000409382 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000446bbd : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045378f : add dword ptr [rax], ecx ; ret 0x840
0x0000000000438181 : add dword ptr [rax], esp ; ret 0xd108
0x0000000000443e94 : add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000040fe6e : add dword ptr [rcx], esp ; ret 0xd709
0x0000000000444fad : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000044cf40 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b728 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045b712 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004058b0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427e90 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045ddbc : add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x43], dh ; cli ; call qword ptr [rcx]
0x0000000000401aa4 : add eax, 0x25e86e ; add ebx, esi ; ret
0x0000000000404e3f : add eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x000000000045e16d : add eax, 0x51e00000 ; cld ; jmp qword ptr [rbx]
0x000000000045e1cd : add eax, 0x53300000 ; cld ; call rdi
0x0000000000408840 : add eax, 0x5d5b0000 ; ret
0x000000000045dfdd : add eax, dword ptr [rax] ; add al, ah ; sti ; call qword ptr [rdx]
0x0000000000458ff4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044294e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000042f322 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x000000000043f1ee : add ecx, eax ; mov rsi, rcx ; call 0x42b4f7
0x000000000044f5f9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000401d6b : add esp, 0x10 ; pop rbp ; ret
0x00000000004262ac : add esp, 0x100 ; pop rbp ; ret
0x000000000043fdb4 : add esp, 0x120 ; pop rbp ; ret
0x0000000000441799 : add esp, 0x130 ; pop rbp ; ret
0x000000000044b8f8 : add esp, 0x140 ; pop rbp ; ret
0x0000000000408f89 : add esp, 0x160 ; pop rbp ; ret
0x000000000042d549 : add esp, 0x170 ; pop rbp ; ret
0x000000000044536a : add esp, 0x18 ; pop rbp ; ret
0x000000000044eb18 : add esp, 0x180 ; pop rbp ; ret
0x000000000040993a : add esp, 0x190 ; pop rbp ; ret
0x000000000042641c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004120a5 : add esp, 0x1a8 ; pop rbp ; ret
0x00000000004432d3 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004531ef : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040ac47 : add esp, 0x20 ; pop rbp ; ret
0x0000000000457583 : add esp, 0x200 ; pop rbp ; ret
0x000000000044824e : add esp, 0x230 ; pop rbp ; ret
0x00000000004433c5 : add esp, 0x30 ; pop rbp ; ret
0x000000000042fc99 : add esp, 0x310 ; pop rbp ; ret
0x0000000000437fe1 : add esp, 0x390 ; pop rbp ; ret
0x0000000000426570 : add esp, 0x40 ; pop rbp ; ret
0x0000000000457069 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401d1f : add esp, 0x50 ; pop rbp ; ret
0x000000000040883d : add esp, 0x568 ; pop rbx ; pop rbp ; ret
0x000000000042b0bd : add esp, 0x590 ; pop rbp ; ret
0x0000000000427490 : add esp, 0x60 ; pop rbp ; ret
0x00000000004104e9 : add esp, 0x6a0 ; pop rbp ; ret
0x00000000004237f2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040abff : add esp, 0x80 ; pop rbp ; ret
0x00000000004492cf : add esp, 0x88 ; pop rbp ; ret
0x0000000000426bed : add esp, 0x90 ; pop rbp ; ret
0x0000000000435bf9 : add esp, 0x900 ; pop rbp ; ret
0x0000000000443fdd : add esp, 0x98 ; pop rbp ; ret
0x00000000004245d6 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004223db : add esp, 0xb0 ; pop rbp ; ret
0x000000000042dad7 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000043ee2b : add esp, 0xbb0 ; pop rbp ; ret
0x000000000040bdcb : add esp, 0xc0 ; pop rbp ; ret
0x000000000040c3f8 : add esp, 0xd0 ; pop rbp ; ret
0x000000000044a8f8 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044726f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000412d93 : add esp, 8 ; pop rbp ; ret
0x000000000040159e : add esp, 8 ; ret
0x0000000000427a86 : add r8b, r13b ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x000000000043f1ed : add rcx, rax ; mov rsi, rcx ; call 0x42b4f8
0x0000000000401d6a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004262ab : add rsp, 0x100 ; pop rbp ; ret
0x000000000043fdb3 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000441798 : add rsp, 0x130 ; pop rbp ; ret
0x000000000044b8f7 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000408f88 : add rsp, 0x160 ; pop rbp ; ret
0x000000000042d548 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000445369 : add rsp, 0x18 ; pop rbp ; ret
0x000000000044eb17 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000409939 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042641b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004120a4 : add rsp, 0x1a8 ; pop rbp ; ret
0x00000000004432d2 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004531ee : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040ac46 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000457582 : add rsp, 0x200 ; pop rbp ; ret
0x000000000044824d : add rsp, 0x230 ; pop rbp ; ret
0x00000000004433c4 : add rsp, 0x30 ; pop rbp ; ret
0x000000000042fc98 : add rsp, 0x310 ; pop rbp ; ret
0x0000000000437fe0 : add rsp, 0x390 ; pop rbp ; ret
0x000000000042656f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000457068 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401d1e : add rsp, 0x50 ; pop rbp ; ret
0x000000000040883c : add rsp, 0x568 ; pop rbx ; pop rbp ; ret
0x000000000042b0bc : add rsp, 0x590 ; pop rbp ; ret
0x000000000042748f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004104e8 : add rsp, 0x6a0 ; pop rbp ; ret
0x00000000004237f1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040abfe : add rsp, 0x80 ; pop rbp ; ret
0x00000000004492ce : add rsp, 0x88 ; pop rbp ; ret
0x0000000000426bec : add rsp, 0x90 ; pop rbp ; ret
0x0000000000435bf8 : add rsp, 0x900 ; pop rbp ; ret
0x0000000000443fdc : add rsp, 0x98 ; pop rbp ; ret
0x00000000004245d5 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004223da : add rsp, 0xb0 ; pop rbp ; ret
0x000000000042dad6 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000043ee2a : add rsp, 0xbb0 ; pop rbp ; ret
0x000000000040bdca : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040c3f7 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044a8f7 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044726e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000412d92 : add rsp, 8 ; pop rbp ; ret
0x000000000040159d : add rsp, 8 ; ret
0x000000000043009d : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040feda : and al, 0x21 ; ret 0xd709
0x000000000045eb7c : and al, 0xf ; add byte ptr [rax], al ; push rax ; xchg esi, edi ; jmp qword ptr [rcx]
0x000000000045c1cd : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004058af : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427e8f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000453adf : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000044deba : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000442d26 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000442f16 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043fdb6 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042709b : and byte ptr [rsi + 0x58], ah ; jb 0x4270d2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000447ccc : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000453ade : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041e041 : and eax, 0x75b4b9d3 ; ret
0x000000000042e542 : and eax, 0xdab0b9fa ; ret
0x000000000045a308 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000459e1f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045a3ca : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040f558 : and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000447ccb : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000045d82c : call 0x1145d4d2
0x000000000043f505 : call 0x1243f50b
0x000000000043dfdc : call 0x1843dfe2
0x000000000043f577 : call 0x2243f57d
0x000000000043f3ae : call 0x2843f3b4
0x0000000000404171 : call 0x3b5c03f9
0x00000000004352ef : call 0x4015d2
0x000000000042f7c5 : call 0x4015d8
0x000000000043535a : call 0x4015f2
0x000000000043566d : call 0x401902
0x00000000004056d7 : call 0x401952
0x0000000000407ebf : call 0x4240f2
0x0000000000407e74 : call 0x424122
0x0000000000404c71 : call 0x424608
0x0000000000427495 : call 0x427559
0x000000000043f1f3 : call 0x42b4f2
0x0000000000435613 : call 0x441842
0x0000000000435612 : call 0x441843
0x0000000000443fe7 : call 0x449ff5
0x0000000000453a2f : call 0x4907c37f
0x0000000000453a2e : call 0x4907c380
0x0000000000453a7d : call 0x4907c3cd
0x0000000000453a7c : call 0x4907c3ce
0x0000000000448182 : call 0xffffffff8a24d71b
0x000000000045941d : call 0xffffffffaca65651
0x000000000045941c : call 0xffffffffaca65652
0x0000000000403e7d : call 0xffffffffca5a0105
0x0000000000404137 : call 0xffffffffcc6d03bf
0x000000000045d724 : call 0xffffffffe145d38a
0x000000000043f2fe : call 0xffffffffe343f304
0x000000000043f586 : call 0xffffffffe543f58c
0x0000000000421af9 : call 0xffffffffe904a449
0x0000000000421af8 : call 0xffffffffe904a44a
0x000000000045c4c9 : call qword ptr [r12 + rbx*8]
0x0000000000404ff0 : call qword ptr [rax]
0x0000000000403b5e : call qword ptr [rbx]
0x000000000043f508 : call qword ptr [rcx]
0x0000000000420f84 : call qword ptr [rdi]
0x00000000004048e1 : call qword ptr [rdx]
0x000000000042b245 : call qword ptr [rsi]
0x000000000045c4ca : call qword ptr [rsp + rbx*8]
0x0000000000401acd : call rax
0x0000000000424702 : call rbx
0x0000000000408968 : call rcx
0x0000000000420bc4 : call rdi
0x00000000004203f5 : call rdx
0x0000000000411311 : call rsi
0x0000000000408989 : call rsp
0x000000000044c7eb : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000457067 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004267f7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000449d9b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000445e79 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000427a61 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000045a309 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045a0d3 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004472e7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004532ae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004483cb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004483eb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000459b21 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000042343f : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410964 : clc ; pop rbx ; pop rbp ; ret
0x000000000045d6b4 : clc ; push rdi ; sti ; call qword ptr [rax]
0x00000000004145cd : clc ; ret 0x77a8
0x0000000000427fe7 : clc ; ret 0x898d
0x0000000000429e97 : clc ; ret 0xb28d
0x000000000043f1f4 : clc ; ret 0xfffe
0x0000000000459e20 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000445368 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000459a5e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044726d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040fed9 : cld ; and al, 0x21 ; ret 0xd709
0x000000000045d7ee : cld ; call qword ptr [rax]
0x000000000045e2f2 : cld ; call qword ptr [rbx]
0x000000000045e522 : cld ; call qword ptr [rdx]
0x000000000045d7de : cld ; call rax
0x000000000045e1d2 : cld ; call rdi
0x000000000045e2d2 : cld ; call rdx
0x000000000045d76e : cld ; inc dword ptr [rax] ; or eax, 0x65a80000 ; cld ; jmp qword ptr [rax]
0x000000000045d71e : cld ; inc eax ; or eax, dword ptr [rax] ; add al, ch ; pop rsi ; cld ; jmp rax
0x0000000000409abf : cld ; jmp 0x409b2c
0x0000000000409abe : cld ; jmp 0x409b2d
0x000000000045d736 : cld ; jmp qword ptr [rax]
0x000000000045e172 : cld ; jmp qword ptr [rbx]
0x000000000045e722 : cld ; jmp qword ptr [rdi]
0x000000000045d726 : cld ; jmp rax
0x000000000045e41a : cld ; jmp rsi
0x00000000004107e6 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004107e9 : cld ; pop rbp ; ret
0x000000000045d816 : cld ; push qword ptr [rax + 0x1800000f] ; popfq ; cld ; call rax
0x000000000045d7d6 : cld ; push qword ptr [rax + 0x6800000e] ; mov dr1, esp ; call rax
0x000000000045d866 : cld ; push rax ; adc byte ptr [rax], al ; add byte ptr [rax - 0x1f], bh ; cld ; call qword ptr [rax]
0x000000000045d826 : cld ; push rax ; sldt word ptr [rax] ; call 0x1145d4d8
0x000000000045089a : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000450feb : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000434f25 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045d5f6 : cli ; call qword ptr [rax]
0x000000000045ddc2 : cli ; call qword ptr [rcx]
0x000000000045d5e6 : cli ; call rax
0x000000000042e32e : cli ; mov cl, 0x37 ; ret 0x4589
0x000000000042e5ba : cli ; mov cl, 0x37 ; ret 0x94b9
0x000000000042e62a : cli ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004270a0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045d66e : cli ; push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x12], bh ; cli ; call qword ptr [rax]
0x000000000040ad2c : cli ; ret
0x000000000045c1cc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000433e46 : cmc ; jmp 0x436002
0x0000000000425fbb : cmc ; ret 0x4f0b
0x0000000000406399 : cmp al, 0x47 ; ret 0x8589
0x00000000004076fc : cmp al, 0x47 ; ret 0xb9b9
0x0000000000435587 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004320c8 : cmp byte ptr [rbx], dl ; ret
0x000000000045d8ec : cmp byte ptr [rsi + rdi*8], ch ; call qword ptr [rax]
0x000000000040ac72 : cmp ch, byte ptr [rdi + rdi*8 - 1] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426151 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000044b922 : cmp dword ptr [rax - 0x75], ecx ; jne 0x44b904 ; call rax
0x00000000004303f6 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432ad8 : cmp dword ptr [rbx], edx ; ret
0x000000000040416c : cmp eax, 0x558bffdd ; call 0x3b5c03fe
0x0000000000403e78 : cmp eax, 0x558bffdd ; call 0xffffffffca5a010a
0x0000000000404132 : cmp eax, 0x558bffdd ; call 0xffffffffcc6d03c4
0x0000000000427602 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x0000000000427daf : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042f9f5 : cmp ecx, ebp ; ret 3
0x000000000041ee97 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000411e81 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x000000000042b796 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000407e75 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 1
0x0000000000411e80 : cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x000000000042e540 : cwde ; and eax, 0xdab0b9fa ; ret
0x000000000045dbac : cwde ; fcos ; jmp qword ptr [rax]
0x000000000043560f : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x441846
0x000000000043560e : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x441847
0x000000000045d764 : cwde ; movsxd rdi, esp ; jmp rax
0x0000000000453247 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041e39b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041dd0e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041e513 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004271cd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000456bc6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040582c : dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004056d1 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043c94f : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x000000000043d7dc : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x0000000000405826 : dec dword ptr [rax - 0xfc6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000435871 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000043cfd3 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004279b5 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000043e92e : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000411ebb : dec dword ptr [rcx + 0x21ca31c2] ; ret 0x458b
0x0000000000425fb6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004279bb : dec dword ptr [rdi] ; ret 0x4589
0x0000000000435877 : dec dword ptr [rdi] ; ret 0x8589
0x000000000042ef1d : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x00000000004496f1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044e56b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000042f31e : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000444540 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000448e8a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x00000000004115ef : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffa], ah ; ret 1
0x0000000000443ae4 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004142aa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042c26d : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x000000000044271f : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000040937e : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000043f8f3 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000451965 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040538e : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000458dee : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004569f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004453c0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040f851 : div dword ptr [rbx] ; push rsp ; in al, -0x7f ; ret 0xffd0
0x00000000004453bf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000449b00 : enter -0x74b8, 0x31 ; call rax
0x000000000042b4de : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000405128 : enter -1, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x0000000000404656 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000456649 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000459c45 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000042ae40 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004125a9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004422f9 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004422b7 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004422d8 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000458dd0 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000459efb : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000430c1c : fcomp st(3) ; ret
0x000000000045dbad : fcos ; jmp qword ptr [rax]
0x000000000043d68a : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000044e56e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000042dba1 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x0000000000458daf : fild word ptr [rcx - 0x77] ; ret
0x00000000004355df : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004355de : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x000000000045a3cb : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000042d5e5 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045a788 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000044d44e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000457837 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000044d44f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000449afc : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000044a83d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000449129 : fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000457838 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000045c4cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000411ad5 : frstor dword ptr [rcx] ; ret 0xd709
0x0000000000433494 : fstpnce st(3), st(0) ; ret
0x0000000000401d69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fc97 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x0000000000442429 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000457d9c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000412d91 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6602b0 ; jmp rax
0x000000000043a348 : hlt ; ret
0x00000000004271cb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000435875 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x000000000040b05d : imul cl ; ret
0x0000000000427900 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x0000000000443e92 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x000000000040f854 : in al, -0x7f ; ret 0xffd0
0x000000000042e629 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x0000000000442d24 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000442f14 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000443fee : in al, 0x3e ; ret
0x0000000000437fdf : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x0000000000446231 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004544a8 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000453711 : in al, dx ; jmp 0x4538dd
0x0000000000453710 : in al, dx ; jmp 0x4538de
0x00000000004594dc : in al, dx ; jmp 0x459559
0x00000000004594db : in al, dx ; jmp 0x45955a
0x0000000000459db5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058b6 : in al, dx ; pop rbp ; ret
0x00000000004506da : in al, dx ; ret 0x8589
0x00000000004536f4 : in al, dx ; ret 0xe8ff
0x0000000000450fed : in al, dx ; ret 0xff3
0x00000000004107e3 : in eax, -0x77 ; jge 0x4107eb ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000045da1d : in eax, -2 ; call rax
0x0000000000411a34 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b286 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042a2e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040b0d5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043cf59 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000408679 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000043ce2c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045d76f : inc dword ptr [rax] ; or eax, 0x65a80000 ; cld ; jmp qword ptr [rax]
0x000000000042c83d : inc dword ptr [rbp + 0x21] ; ret
0x0000000000403c14 : inc dword ptr [rcx + 0xf] ; ret
0x000000000042dbc8 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000437e55 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x000000000045d71f : inc eax ; or eax, dword ptr [rax] ; add al, ch ; pop rsi ; cld ; jmp rax
0x0000000000404fea : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000004048db : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x000000000040512a : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x000000000040da5d : insb byte ptr [rdi], dx ; ret
0x0000000000423fa7 : int 0x5b
0x000000000042c95b : int 0x73
0x0000000000431921 : int 0x80
0x0000000000451704 : int 6
0x000000000043d32c : int 7
0x000000000040acf2 : int1 ; add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004119c7 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x00000000004532b1 : ja 0x4532fe ; pop rbp ; ret
0x00000000004301cc : jae 0x4301a2 ; ret 0x89e0
0x000000000043da28 : jae 0x43da5e ; xor esp, dword ptr [rcx] ; ret 0x8941
0x000000000043da34 : jae 0x43da6b ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000042709e : jb 0x4270cf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000406424 : jbe 0x40640f ; leave ; ret
0x0000000000407d53 : jbe 0x407d3e ; leave ; ret
0x000000000040889f : jbe 0x40888a ; leave ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6602b0 ; jmp rax
0x000000000043020e : je 0x4301e4 ; ret 0x89e0
0x00000000004302d9 : je 0x4302af ; ret 0xb9e0
0x000000000043f1ec : je 0x43f23f ; add ecx, eax ; mov rsi, rcx ; call 0x42b4f9
0x000000000045e1cc : je 0x45e1da ; add byte ptr [rax], al ; xor byte ptr [rbx - 4], dl ; call rdi
0x000000000043c981 : jg 0x43c910 ; push rbp ; ret
0x000000000040fed8 : jge 0x40feda ; and al, 0x21 ; ret 0xd709
0x00000000004107e5 : jge 0x4107e9 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041d436 : jge 0x41d3bb ; ret 0xffd5
0x000000000041df00 : jge 0x41dee0 ; shr cl, cl ; ret 0x3b
0x00000000004483ca : jge 0x4483cb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004483ea : jge 0x4483eb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000449afb : jge 0x449ade ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004532ad : jge 0x4532ae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x0000000000411ad3 : jle 0x411b0c ; frstor dword ptr [rcx] ; ret 0xd709
0x0000000000450438 : jle 0x4503cc ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004016db : jmp 0x4015b7
0x0000000000403ccf : jmp 0x40513b
0x00000000004049e2 : jmp 0x40513d
0x0000000000407da7 : jmp 0x4089a9
0x0000000000408f0b : jmp 0x409048
0x00000000004094d3 : jmp 0x409498
0x000000000040981e : jmp 0x4097e3
0x0000000000409ac0 : jmp 0x409b2b
0x000000000040f114 : jmp 0x4107d8
0x000000000041e650 : jmp 0x421ad0
0x000000000041c554 : jmp 0x421ad1
0x000000000041d921 : jmp 0x421ad2
0x00000000004253db : jmp 0x425e47
0x0000000000425318 : jmp 0x425e49
0x0000000000427443 : jmp 0x4274a8
0x000000000042a45f : jmp 0x42b322
0x000000000042fa3a : jmp 0x42fdc4
0x0000000000433f58 : jmp 0x433f17
0x00000000004349a7 : jmp 0x436000
0x0000000000433e47 : jmp 0x436001
0x0000000000434061 : jmp 0x436002
0x0000000000436667 : jmp 0x4366b4
0x000000000043780a : jmp 0x438129
0x000000000043c495 : jmp 0x43f594
0x000000000044311d : jmp 0x443373
0x0000000000443cb2 : jmp 0x444020
0x0000000000443d6b : jmp 0x444021
0x0000000000449104 : jmp 0x449360
0x0000000000449999 : jmp 0x449b25
0x000000000044b82a : jmp 0x44b96e
0x000000000044b829 : jmp 0x44b96f
0x000000000044b829 : jmp 0x44b970
0x0000000000453712 : jmp 0x4538dc
0x0000000000456f06 : jmp 0x4571e8
0x00000000004594dd : jmp 0x459558
0x0000000000459bb5 : jmp 0x459bc0
0x0000000000459d17 : jmp 0x459d22
0x0000000000459f85 : jmp 0x459f90
0x0000000000450d6f : jmp 0x490796bf
0x0000000000450ebb : jmp 0x4907980b
0x0000000000450f8d : jmp 0x490798dd
0x000000000045100e : jmp 0x4907995e
0x0000000000452fb4 : jmp 0x4907b904
0x000000000045302f : jmp 0x4907b97f
0x0000000000425fba : jmp 0x4f4e22b6
0x0000000000406e50 : jmp 0xffffffff897130dc
0x0000000000458b9f : jmp 0xffffffffc409c266
0x0000000000421425 : jmp qword ptr [rax]
0x000000000045df63 : jmp qword ptr [rbx]
0x00000000004089f4 : jmp qword ptr [rcx]
0x000000000040f88b : jmp qword ptr [rdi]
0x000000000040872c : jmp qword ptr [rdx]
0x0000000000405130 : jmp qword ptr [rsi]
0x0000000000401a47 : jmp rax
0x000000000041da28 : jmp rbx
0x000000000041e45a : jmp rcx
0x000000000040f669 : jmp rdi
0x0000000000401a87 : jmp rdx
0x00000000004087d5 : jmp rsi
0x000000000041dd38 : jmp rsp
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x00000000004063d0 : jne 0x4063bb ; leave ; ret
0x00000000004433b9 : jne 0x44339c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004453c1 : jne 0x4453b9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000445992 : jne 0x44598a ; mov rax, rdx ; pop rbp ; ret
0x0000000000449b59 : jne 0x449b24 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000044b925 : jne 0x44b901 ; call rax
0x000000000042b795 : jns 0x42b740 ; ret
0x000000000042b794 : jns 0x42b741 ; ret
0x000000000042b7e5 : jns 0x42b790 ; ret
0x000000000042b7e4 : jns 0x42b791 ; ret
0x0000000000434cb8 : jns 0x434c75 ; ret 0xcaed
0x0000000000404e3e : jo 0x404e4d ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040fe6c : jo 0x40fe35 ; add dword ptr [rcx], esp ; ret 0xd709
0x000000000041734e : jo 0x41735a ; ret
0x0000000000418fbe : jo 0x418fca ; ret
0x000000000041c50d : jo 0x41c519 ; ret
0x00000000004237f4 : jo 0x423855 ; ret
0x000000000042b28f : jo 0x42b25e ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042b28e : jo 0x42b25f ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042b72f : jo 0x42b790 ; ret
0x000000000042d54b : jo 0x42d553 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004300a4 : jo 0x430105 ; ret
0x0000000000435611 : jo 0x43565b ; call 0x441844
0x000000000045ddc0 : jo 0x45dd82 ; cli ; call qword ptr [rcx]
0x0000000000437ba5 : jrcxz 0x437b4f ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000040fed7 : js 0x40ff5b ; cld ; and al, 0x21 ; ret 0xd709
0x000000000045d5e0 : js 0x45d5ef ; add byte ptr [rax], al ; sbb byte ptr [rbp - 6], al ; call rax
0x000000000045d674 : js 0x45d667 ; cli ; call qword ptr [rax]
0x000000000045d86c : js 0x45d852 ; cld ; call qword ptr [rax]
0x0000000000436666 : lahf ; jmp 0x4366b5
0x000000000041defe : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041effe : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040a2c6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000447ab4 : lea esi, dword ptr [rdx] ; ret
0x0000000000413c45 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423ae9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410962 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000413c44 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000410961 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004063d2 : leave ; ret
0x000000000044630f : leave ; ret 0x86f8
0x000000000042b792 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000041c85e : ljmp ptr [rdi] ; ret 0x23da
0x000000000045d868 : lock adc byte ptr [rax], al ; add byte ptr [rax - 0x1f], bh ; cld ; call qword ptr [rax]
0x000000000045d8a8 : lock adc dword ptr [rax], eax ; add byte ptr [rax], cl ; sub ch, bh ; call qword ptr [rax]
0x000000000045d670 : lock or byte ptr [rax], al ; add byte ptr [rax - 0x12], bh ; cli ; call qword ptr [rax]
0x000000000045d6b0 : lock or dword ptr [rax], eax ; add al, bh ; push rdi ; sti ; call qword ptr [rax]
0x000000000045daa8 : lock sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000448e8d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040da77 : lodsd eax, dword ptr [rsi] ; loopne 0x40da64 ; ret 0x8589
0x0000000000427e8e : loop 0x427ebb ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000427e8d : loop 0x427ebc ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004484d0 : loop 0x4484c5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000459eb2 : loop 0x459e65 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041f865 : loope 0x41f833 ; jmp 0x421ad3
0x000000000043da32 : loope 0x43da06 ; jae 0x43da6d ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000442f5b : loope 0x442f4c ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000444fac : loope 0x444fb8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000044920e : loope 0x4491c9 ; xchg eax, ebp ; jmp 0x449363
0x000000000045d86d : loope 0x45d86d ; call qword ptr [rax]
0x000000000040da78 : loopne 0x40da63 ; ret 0x8589
0x000000000040db90 : loopne 0x40db7b ; ret 0x8589
0x000000000040f33a : loopne 0x40f325 ; ret 0x558b
0x000000000040f84e : loopne 0x40f7d3 ; ret 0x33f7
0x0000000000411e7e : loopne 0x411e81 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x0000000000413c43 : loopne 0x413c96 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004231ed : loopne 0x423253 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004245d4 : loopne 0x424627 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000426b03 : loopne 0x426b0c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042748e : loopne 0x4274de ; add esp, 0x60 ; pop rbp ; ret
0x000000000042748d : loopne 0x4274df ; add esp, 0x60 ; pop rbp ; ret
0x000000000042e182 : loopne 0x42e18c ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043da26 : loopne 0x43d9f9 ; jae 0x43da60 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x00000000004437b7 : loopne 0x4437e9 ; pop rdi ; ret
0x00000000004437b6 : loopne 0x4437ea ; pop rdi ; ret
0x0000000000443c9b : loopne 0x443ccd ; ret
0x0000000000443c9a : loopne 0x443cce ; ret
0x000000000044a8fa : loopne 0x44a901 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044df4e : loopne 0x44df9f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044df4d : loopne 0x44dfa0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004531ed : loopne 0x453240 ; add esp, 0x1d0 ; pop rbp ; ret
0x00000000004577dc : loopne 0x457770 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004577db : loopne 0x457771 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000457da0 : loopne 0x457da7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000459a62 : loopne 0x459a69 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045c20c : loopne 0x45c25b ; mov esp, ebp ; pop rbp ; ret
0x000000000045c20b : loopne 0x45c25c ; mov esp, ebp ; pop rbp ; ret
0x000000000045c45c : loopne 0x45c4ab ; mov esp, ebp ; pop rbp ; ret
0x000000000045c45b : loopne 0x45c4ac ; mov esp, ebp ; pop rbp ; ret
0x000000000045dfe0 : loopne 0x45e032 ; sti ; call qword ptr [rdx]
0x000000000045e170 : loopne 0x45e1c6 ; cld ; jmp qword ptr [rbx]
0x000000000045e520 : loopne 0x45e4a8 ; cld ; call qword ptr [rdx]
0x0000000000459eb1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041d42d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d507 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043c8bc : mov ah, -0x76 ; ret 0x124
0x0000000000411b9f : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401f10 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041b4b5 : mov ah, 0x75 ; ret
0x000000000042e429 : mov al, -0x26 ; ret
0x000000000045e720 : mov al, -0x2d ; cld ; jmp qword ptr [rdi]
0x0000000000423fc3 : mov al, -0x47 ; ret
0x000000000044920f : mov al, -0x6b ; jmp 0x449362
0x00000000004566cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042abe2 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a616 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004223dd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004056d5 : mov al, 0 ; call 0x401954
0x000000000045d918 : mov al, 0x13 ; add byte ptr [rax], al ; or byte ptr [rsi - 2], bl ; call rax
0x000000000043616a : mov al, 0x2d ; ret
0x0000000000436426 : mov al, 0x2d ; ret 0x24cc
0x000000000045df60 : mov al, 0x2d ; sti ; jmp qword ptr [rbx]
0x00000000004525f0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000043ee2d : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d660 : mov al, 8 ; add byte ptr [rax], al ; test al, -0x23 ; cli ; call rax
0x000000000045d6a0 : mov al, 9 ; add byte ptr [rax], al ; or byte ptr [rdx - 5], dl ; call rax
0x000000000045a30b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000045aa7d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a74a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427e8c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000445b38 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a9ad : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a3cc : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045a30a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045a0d4 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000045a0d9 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042dc78 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000042b1e5 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x0000000000444b48 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000435585 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000414e55 : mov bl, 0x75 ; ret
0x00000000004492d1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa3 : mov byte ptr [rip + 0x25e86e], 1 ; ret
0x000000000041ccaf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042e2ed : mov cl, 0x37 ; ret 0x4589
0x000000000042e5bb : mov cl, 0x37 ; ret 0x94b9
0x000000000042e62b : mov cl, 0x37 ; ret 0xd3e9
0x000000000043a30f : mov cl, 0x7d ; ret
0x0000000000453ae4 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000447cd1 : mov dh, -0x3a ; pop rbp ; ret
0x0000000000440dd8 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000444faf : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000044cf42 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b72a : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045b714 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004058b2 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427e92 : mov dh, -0x40 ; pop rbp ; ret
0x000000000045a3cf : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004376a2 : mov dh, -0x47 ; ret 0x9214
0x000000000045d634 : mov dh, al ; cli ; call qword ptr [rax]
0x000000000045c1ca : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000045d7dd : mov dr1, esp ; call rax
0x000000000045b441 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000453d61 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004133c9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412f9f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b7a5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x000000000044dde9 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000045370f : mov dword ptr [rbp - 0x14], eax ; jmp 0x4538df
0x00000000004594da : mov dword ptr [rbp - 0x14], eax ; jmp 0x45955b
0x0000000000451bbd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000451df0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x0000000000449101 : mov dword ptr [rbp - 0x34], eax ; jmp 0x449363
0x0000000000449996 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x449b28
0x0000000000449a21 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x449b28
0x0000000000401f0e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407e6e : mov dword ptr [rbp - 0x508], eax ; call 0x424128
0x0000000000407eb9 : mov dword ptr [rbp - 0x510], eax ; call 0x4240f8
0x0000000000407ed2 : mov dword ptr [rbp - 0x518], eax ; call 0x4240f8
0x00000000004253d8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x425e4a
0x000000000043534f : mov dword ptr [rbp - 0x8b0], ecx ; call 0x4015d8
0x0000000000435667 : mov dword ptr [rbp - 0x8bc], ecx ; call 0x401908
0x0000000000401d67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000449a01 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x00000000004107e4 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004136a6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004472e8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004532b0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041324d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042dad9 : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000451f5b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040919b : mov eax, 0xa11d432d ; ret
0x00000000004091e3 : mov eax, 0xa11d442d ; ret
0x000000000042a460 : mov eax, 0xb800000e ; ret 0x4dbf
0x0000000000453d5f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410cac : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042730b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b8f6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041095e : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004544a6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004274de : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a8ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000459355 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004133cc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042748c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004577da : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c20a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004433bf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000041324f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000449b5f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000451387 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043560d : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x441848
0x00000000004352e9 : mov eax, dword ptr [rbp - 0x70] ; mov rdi, rax ; call 0x4015d8
0x0000000000412d8f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000445366 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x00000000004107e7 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042343d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004483cd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004483ed : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041324e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000045a0d6 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000459b23 : mov eax, eax ; pop rbp ; ret
0x0000000000459efa : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000044c8c1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004453c4 : mov eax, edx ; pop rbp ; ret
0x0000000000459e1d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045a0d5 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041fc68 : mov ebp, 0xe19c53ba ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x00000000004107e2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f115 : mov ecx, 0xb8000016 ; ret
0x000000000042aa5f : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000412f9c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044dcfb : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044df4c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044e866 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000449afe : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000451f5d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044dcff : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401ac5 : mov edi, 0x65fe20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6602b0 ; jmp rax
0x0000000000401a82 : mov edi, 0x6602b0 ; jmp rdx
0x0000000000453713 : mov edi, 0xb8000001 ; ret
0x000000000041c507 : mov edi, 0xb8000055 ; wait ; jo 0x41c51f ; ret
0x00000000004532ac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004483c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004483e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044dd02 : mov edi, dword ptr [rcx] ; call rax
0x000000000044b921 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004352ed : mov edi, eax ; call 0x4015d4
0x000000000045c4c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045c4c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000447ab1 : mov edx, 0x328dfe07 ; ret
0x0000000000456e7e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041cccb : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004056d3 : mov edx, eax ; mov al, 0 ; call 0x401956
0x000000000041db42 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000456e67 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000435610 : mov esi, dword ptr [rax + 0x44] ; call 0x441845
0x000000000044b924 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000449b02 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6602b0 ; jmp rdx
0x00000000004433bc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449b5c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043f1f1 : mov esi, ecx ; call 0x42b4f4
0x000000000045e414 : mov esp, 0x48000007 ; movsxd rdi, esp ; jmp rsi
0x00000000004058b5 : mov esp, ebp ; pop rbp ; ret
0x0000000000407e6d : mov qword ptr [rbp - 0x508], rax ; call 0x424129
0x0000000000407eb8 : mov qword ptr [rbp - 0x510], rax ; call 0x4240f9
0x0000000000407ed1 : mov qword ptr [rbp - 0x518], rax ; call 0x4240f9
0x00000000004136a5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004532af : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000401f0f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042b1e4 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x0000000000436169 : mov r8b, 0x2d ; ret
0x0000000000436425 : mov r8b, 0x2d ; ret 0x24cc
0x000000000040919a : mov r8d, 0xa11d432d ; ret
0x00000000004091e2 : mov r8d, 0xa11d442d ; ret
0x0000000000410cab : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042730a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b8f5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004274dd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a8cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044bb41 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042748b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004433be : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449b5e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043560c : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x441849
0x00000000004352e8 : mov rax, qword ptr [rbp - 0x70] ; mov rdi, rax ; call 0x4015d9
0x000000000042343c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004483cc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004483ec : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000459ef9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000459b22 : mov rax, r8 ; pop rbp ; ret
0x000000000044c8c0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004453c3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x000000000044e865 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000449afd : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000451f5c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044dcfe : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004532ab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004483c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004483e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044dd01 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044b920 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004352ec : mov rdi, rax ; call 0x4015d5
0x00000000004056d2 : mov rdx, rax ; mov al, 0 ; call 0x401957
0x000000000044b923 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000449b01 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6602b0 ; jmp rdx
0x00000000004433bb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449b5b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043f1f0 : mov rsi, rcx ; call 0x42b4f5
0x00000000004058b4 : mov rsp, rbp ; pop rbp ; ret
0x00000000004270a1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000458a41 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x00000000004187a8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000041002d : movabs eax, dword ptr [0xffff6085c7000007] ; jmp rsi
0x000000000043ccad : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000450fea : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x000000000043ccae : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041b9f5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000444543 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x000000000045daad : movsxd rdi, edi ; call qword ptr [rax]
0x000000000045d765 : movsxd rdi, esp ; jmp rax
0x000000000045e419 : movsxd rdi, esp ; jmp rsi
0x000000000042d5e3 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000044cf41 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b729 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045b713 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004058b1 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427e91 : movzx eax, al ; pop rbp ; ret
0x000000000045a3ce : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045a0d8 : movzx eax, ax ; pop rbp ; ret
0x0000000000453ae3 : movzx eax, bh ; pop rbp ; ret
0x0000000000440dd7 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000444fae : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000447cd0 : movzx eax, dh ; pop rbp ; ret
0x0000000000453ae2 : movzx eax, dil ; pop rbp ; ret
0x0000000000447ccf : movzx eax, sil ; pop rbp ; ret
0x0000000000456c78 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004352eb : nop ; mov rdi, rax ; call 0x4015d6
0x0000000000414c95 : nop ; ret
0x00000000004230a2 : nop ; ret 0x148
0x00000000004230b6 : nop ; ret 0x2948
0x000000000045c4e8 : nop dword ptr [rax + rax] ; ret
0x0000000000427a84 : or ah, dl ; add r8b, r13b ; ret
0x000000000042ef21 : or al, 0 ; add cl, ch ; ret
0x0000000000427a82 : or al, 0x25 ; or ah, dl ; add r8b, r13b ; ret
0x000000000041d42a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d504 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000045d89d : or al, 0xfffffffffffffffd ; call rax
0x0000000000444143 : or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004536f1 : or bh, al ; in al, dx ; ret 0xe8ff
0x0000000000459105 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045043d : or byte ptr [r15], 0x8f ; ret 6
0x0000000000412fa0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042aa60 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000045d671 : or byte ptr [rax], al ; add byte ptr [rax - 0x12], bh ; cli ; call qword ptr [rax]
0x00000000004249b8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042dbd0 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000045d8ac : or byte ptr [rax], ch ; std ; call qword ptr [rax]
0x000000000040f175 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040ee0c : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000411e82 : or byte ptr [rcx], ah ; ret 0x8941
0x000000000045043e : or byte ptr [rdi], 0x8f ; ret 6
0x000000000045d6a4 : or byte ptr [rdx - 5], dl ; call rax
0x000000000045d91c : or byte ptr [rsi - 2], bl ; call rax
0x000000000042a498 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000459104 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000041e516 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004136a4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045d6b1 : or dword ptr [rax], eax ; add al, bh ; push rdi ; sti ; call qword ptr [rax]
0x000000000045d6a1 : or dword ptr [rax], eax ; add byte ptr [rax], cl ; push rdx ; sti ; call rax
0x000000000045d771 : or eax, 0x65a80000 ; cld ; jmp qword ptr [rax]
0x0000000000435277 : or eax, 0x71e80000 ; ret
0x000000000045d721 : or eax, dword ptr [rax] ; add al, ch ; pop rsi ; cld ; jmp rax
0x000000000042dc7a : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000459b20 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000459e23 : or eax, esi ; pop rbp ; ret
0x0000000000459ef7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000041324b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000459ef6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000459b1f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004063d1 : out -0x37, al ; ret
0x0000000000447ccd : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x0000000000453ae0 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041ee0b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045a74c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045d675 : out dx, al ; cli ; call qword ptr [rax]
0x000000000044f479 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044f5f8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045aa7f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423fc2 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000442f5e : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000456e69 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004493f9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041fef5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000414b46 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041ff40 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000426241 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004355dd : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x0000000000456e6c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042709c : pop ax ; jb 0x4270d1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000442f5f : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000420da9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c4dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004231ef : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420dab : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c4de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420dad : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c4e0 : pop r14 ; pop r15 ; ret
0x0000000000404e43 : pop r14 ; pop rbp ; ret
0x0000000000420daf : pop r15 ; pop rbp ; ret
0x000000000045c4e2 : pop r15 ; ret
0x00000000004412d3 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045e2f1 : pop rax ; cld ; call qword ptr [rbx]
0x000000000042709d : pop rax ; jb 0x4270d0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045d92c : pop rax ; push -2 ; call qword ptr [rax]
0x000000000045e3b9 : pop rbp ; cld ; jmp qword ptr [rbx]
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x25e86e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6602b0 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6602b0 ; jmp rdx
0x000000000045c4db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420dac : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c4df : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041ccb2 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000418f85 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041ccce : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401a35 : pop rbp ; ret
0x00000000004231ee : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421ee5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e42 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408843 : pop rbx ; pop rbp ; ret
0x00000000004249c0 : pop rbx ; ret
0x000000000040fe6b : pop rcx ; jo 0x40fe36 ; add dword ptr [rcx], esp ; ret 0xd709
0x000000000041ccb3 : pop rcx ; ret 0x1b2
0x0000000000417386 : pop rcx ; ret 0x8589
0x000000000041cccf : pop rcx ; ret 0x8b48
0x000000000041f000 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040f849 : pop rcx ; sbb eax, 0x81e0558b ; ret 0x33f7
0x00000000004278ff : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x0000000000420db0 : pop rdi ; pop rbp ; ret
0x000000000042f0d6 : pop rdi ; ret
0x000000000045d725 : pop rsi ; cld ; jmp rax
0x0000000000420dae : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045c4e1 : pop rsi ; pop r15 ; ret
0x0000000000404e44 : pop rsi ; pop rbp ; ret
0x000000000042eafa : pop rsi ; ret
0x0000000000411ad2 : pop rsp ; jle 0x411b0d ; frstor dword ptr [rcx] ; ret 0xd709
0x0000000000420daa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c4dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004231f0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417385 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000449410 : pop rsp ; ret 0xf66
0x000000000044294d : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x000000000045d81d : popfq ; cld ; call rax
0x000000000045b595 : popfq ; ret 0xd284
0x0000000000401fa5 : push -0x17000001 ; ret 0xfff6
0x000000000044f3c5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000041ccb0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041ee9a : push -0x75425eeb ; push rbp ; ret
0x000000000041b9f8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000045d92d : push -2 ; call qword ptr [rax]
0x000000000040883f : push 0x5b000005 ; pop rbp ; ret
0x000000000045d817 : push qword ptr [rax + 0x1800000f] ; popfq ; cld ; call rax
0x000000000045d897 : push qword ptr [rax + 0x28000011] ; or al, 0xfffffffffffffffd ; call rax
0x000000000045d7d7 : push qword ptr [rax + 0x6800000e] ; mov dr1, esp ; call rax
0x000000000045d69f : push qword ptr [rax + 0x8000009] ; push rdx ; sti ; call rax
0x000000000045da17 : push qword ptr [rax - 0x57ffffe9] ; in eax, -2 ; call rax
0x000000000040889e : push qword ptr [rsi - 0x1a] ; leave ; ret
0x000000000045d8e7 : push rax ; adc al, byte ptr [rax] ; add byte ptr [rax], bh ; sub al, -2 ; call qword ptr [rax]
0x000000000045d867 : push rax ; adc byte ptr [rax], al ; add byte ptr [rax - 0x1f], bh ; cld ; call qword ptr [rax]
0x000000000045d8a7 : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], cl ; sub ch, bh ; call qword ptr [rax]
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000045d66f : push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x12], bh ; cli ; call qword ptr [rax]
0x000000000045d6af : push rax ; or dword ptr [rax], eax ; add al, bh ; push rdi ; sti ; call qword ptr [rax]
0x0000000000401d21 : push rax ; pop rbp ; ret
0x000000000045daa7 : push rax ; sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rdi, edi ; call qword ptr [rax]
0x000000000045d827 : push rax ; sldt word ptr [rax] ; call 0x1145d4d7
0x000000000045eb80 : push rax ; xchg esi, edi ; jmp qword ptr [rcx]
0x0000000000404170 : push rbp ; call 0x3b5c03fa
0x0000000000403e7c : push rbp ; call 0xffffffffca5a0106
0x0000000000404136 : push rbp ; call 0xffffffffcc6d03c0
0x0000000000459c44 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000044a83c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000449128 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000040f84d : push rbp ; loopne 0x40f7d4 ; ret 0x33f7
0x0000000000401ac4 : push rbp ; mov edi, 0x65fe20 ; mov rbp, rsp ; call rax
0x000000000041ee9f : push rbp ; ret
0x000000000043c89f : push rbp ; ret 0x1b2
0x000000000041ee36 : push rbp ; ret 0xd284
0x000000000043fd9f : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000451166 : push rbp ; shr al, 1 ; ret
0x000000000041d42f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d509 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000045e1d1 : push rbx ; cld ; call rdi
0x000000000042bfaa : push rbx ; ret
0x000000000045e171 : push rcx ; cld ; jmp qword ptr [rbx]
0x0000000000456e6b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045d6b5 : push rdi ; sti ; call qword ptr [rax]
0x000000000042aec6 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000045d6a5 : push rdx ; sti ; call rax
0x000000000045e2d1 : push rsi ; cld ; call rdx
0x000000000040f853 : push rsp ; in al, -0x7f ; ret 0xffd0
0x0000000000408b80 : pushfq ; call qword ptr [rax]
0x000000000042a2ea : pushfq ; ret 0x8445
0x0000000000437f23 : pushfq ; ret 0xd284
0x000000000040ee14 : pushfq ; ret 0xe280
0x000000000045db98 : rcr byte ptr [rip - 0x29980000], -1 ; jmp rax
0x00000000004002dd : ret
0x00000000004142ae : ret 0
0x000000000044a840 : ret 0x10
0x000000000042aa9a : ret 0x108
0x0000000000403f6f : ret 0x11
0x0000000000432d40 : ret 0x1111
0x000000000043c8bf : ret 0x124
0x00000000004230a3 : ret 0x148
0x0000000000434634 : ret 0x19
0x0000000000420004 : ret 0x1a
0x000000000041527d : ret 0x1add
0x0000000000433938 : ret 0x1b
0x000000000041ccb5 : ret 0x1b2
0x0000000000448e1d : ret 0x1cdd
0x000000000043d7c8 : ret 0x1d
0x0000000000448d45 : ret 0x1e1
0x000000000041196b : ret 0x2145
0x00000000004055fa : ret 0x21f
0x0000000000433c34 : ret 0x23
0x0000000000415bca : ret 0x23da
0x0000000000436428 : ret 0x24cc
0x000000000043bdae : ret 0x25
0x000000000040356a : ret 0x255a
0x0000000000407d82 : ret 0x2585
0x00000000004018e2 : ret 0x25e8
0x00000000004016e2 : ret 0x25e9
0x00000000004228c8 : ret 0x279e
0x00000000004493fa : ret 0x280f
0x0000000000454111 : ret 0x2941
0x0000000000404386 : ret 0x2948
0x000000000041f004 : ret 0x2a
0x000000000043d810 : ret 0x2ae8
0x0000000000439c6e : ret 0x2b
0x000000000041d432 : ret 0x2d50
0x000000000040849c : ret 0x3040
0x000000000040c93b : ret 0x31
0x000000000041212f : ret 0x3144
0x000000000040acf9 : ret 0x3145
0x000000000040c5bb : ret 0x33
0x000000000040f850 : ret 0x33f7
0x000000000044a50a : ret 0x3504
0x000000000041df04 : ret 0x3b
0x0000000000404173 : ret 0x3b1b
0x0000000000435480 : ret 0x3d94
0x000000000041af65 : ret 0x3e
0x00000000004276a3 : ret 0x4589
0x0000000000411ec1 : ret 0x458b
0x000000000041e3a1 : ret 0x4802
0x0000000000412047 : ret 0x4810
0x000000000043d7df : ret 0x4813
0x0000000000456e6e : ret 0x4815
0x000000000041fef6 : ret 0x4861
0x00000000004414f1 : ret 0x4878
0x000000000044b197 : ret 0x48c3
0x000000000040a048 : ret 0x48f0
0x00000000004187b1 : ret 0x4b
0x0000000000423dc7 : ret 0x4cc0
0x0000000000420e08 : ret 0x4cf0
0x0000000000428312 : ret 0x4dbf
0x0000000000425fbc : ret 0x4f0b
0x00000000004043fb : ret 0x4fe8
0x0000000000435cb6 : ret 0x5189
0x0000000000411c01 : ret 0x5589
0x0000000000450c0f : ret 0x558a
0x000000000040f33c : ret 0x558b
0x0000000000409489 : ret 0x571d
0x000000000041d6ba : ret 0x5966
0x0000000000424c17 : ret 0x5bc6
0x0000000000437edb : ret 0x5fe8
0x000000000043fda3 : ret 0x60
0x000000000045c1cf : ret 0x61
0x000000000043089d : ret 0x6809
0x0000000000414916 : ret 0x6a8a
0x0000000000428a4a : ret 0x6ea5
0x000000000042bb5c : ret 0x6fcb
0x00000000004145ce : ret 0x77a8
0x0000000000415731 : ret 0x7a8a
0x000000000041c3ab : ret 0x7b7f
0x00000000004061a0 : ret 0x803
0x0000000000422d5a : ret 0x8041
0x000000000040acff : ret 0x8141
0x00000000004043e8 : ret 0x8148
0x000000000041e2c4 : ret 0x822d
0x00000000004570c8 : ret 0x82e8
0x0000000000437ed4 : ret 0x8341
0x0000000000450d72 : ret 0x8348
0x0000000000453791 : ret 0x840
0x0000000000408065 : ret 0x8445
0x000000000040639b : ret 0x8589
0x00000000004046be : ret 0x858a
0x00000000004497c9 : ret 0x86a5
0x00000000004462ce : ret 0x86f8
0x000000000040acde : ret 0x8844
0x0000000000406e52 : ret 0x8930
0x00000000004533a6 : ret 0x8938
0x0000000000415343 : ret 0x8940
0x0000000000411e84 : ret 0x8941
0x000000000042dba5 : ret 0x8945
0x0000000000404d25 : ret 0x8948
0x000000000045548f : ret 0x894a
0x0000000000414b47 : ret 0x8961
0x0000000000453f11 : ret 0x898c
0x0000000000427fe8 : ret 0x898d
0x000000000043100e : ret 0x8994
0x0000000000447e7c : ret 0x899a
0x00000000004301ce : ret 0x89e0
0x000000000044065a : ret 0x89f5
0x0000000000456a88 : ret 0x8a44
0x0000000000456985 : ret 0x8a4a
0x000000000041ccd1 : ret 0x8b48
0x000000000040b08a : ret 0x8b4c
0x000000000043d535 : ret 0x919d
0x0000000000437438 : ret 0x9214
0x0000000000458dd2 : ret 0x941
0x0000000000459ed2 : ret 0x949
0x000000000042e5bd : ret 0x94b9
0x000000000040fd0c : ret 0xa
0x000000000041d50c : ret 0xa30b
0x0000000000406184 : ret 0xa7d6
0x000000000042f669 : ret 0xa8b9
0x000000000045941f : ret 0xac60
0x00000000004048d4 : ret 0xb0
0x0000000000429e98 : ret 0xb28d
0x000000000041ee10 : ret 0xb740
0x0000000000435834 : ret 0xb841
0x0000000000427097 : ret 0xb848
0x00000000004077c5 : ret 0xb930
0x000000000041d040 : ret 0xb940
0x000000000044017a : ret 0xb941
0x000000000044d4ab : ret 0xb948
0x0000000000456912 : ret 0xb94a
0x00000000004540c0 : ret 0xb98c
0x00000000004480d0 : ret 0xb99a
0x00000000004076fe : ret 0xb9b9
0x00000000004302db : ret 0xb9e0
0x00000000004409c4 : ret 0xb9f5
0x000000000041f48c : ret 0xbf48
0x0000000000412177 : ret 0xc131
0x0000000000401a65 : ret 0xc148
0x0000000000412132 : ret 0xc221
0x000000000040f8db : ret 0xc283
0x000000000045c412 : ret 0xc493
0x000000000043ef25 : ret 0xc731
0x0000000000403e7f : ret 0xca19
0x00000000004085de : ret 0xca21
0x0000000000411ebd : ret 0xca31
0x00000000004329c0 : ret 0xcaed
0x0000000000404139 : ret 0xcc2c
0x000000000045c1d5 : ret 0xccb2
0x0000000000408bf0 : ret 0xcd97
0x000000000042fce7 : ret 0xd0e9
0x0000000000438183 : ret 0xd108
0x0000000000411eca : ret 0xd109
0x0000000000404638 : ret 0xd284
0x000000000042e62d : ret 0xd3e9
0x00000000004550d5 : ret 0xd618
0x000000000040f55a : ret 0xd709
0x000000000040355a : ret 0xe
0x000000000043e06f : ret 0xe083
0x000000000040ee15 : ret 0xe280
0x000000000043aaef : ret 0xe721
0x00000000004533d3 : ret 0xe8ff
0x000000000040333a : ret 0xe925
0x000000000041ece2 : ret 0xe940
0x00000000004401f5 : ret 0xe941
0x000000000041ff41 : ret 0xe961
0x00000000004354cc : ret 0xe994
0x000000000044827f : ret 0xe99a
0x0000000000415d6d : ret 0xea51
0x000000000040d307 : ret 0xea59
0x000000000044818b : ret 0xea81
0x0000000000421afc : ret 0xee8
0x000000000043ac92 : ret 0xef52
0x0000000000453775 : ret 0xf280
0x0000000000408f4f : ret 0xf281
0x000000000041db47 : ret 0xf41
0x0000000000451e8c : ret 0xf4e9
0x0000000000449411 : ret 0xf66
0x0000000000432cb4 : ret 0xf6bd
0x000000000041fa95 : ret 0xf7f3
0x000000000043ef21 : ret 0xfa89
0x000000000043dc0a : ret 0xfc39
0x000000000041e21e : ret 0xfc75
0x00000000004356ca : ret 0xfcc0
0x0000000000450f9f : ret 0xff3
0x0000000000403e85 : ret 0xff8e
0x000000000041fa8f : ret 0xffa5
0x000000000042f7d3 : ret 0xffbe
0x000000000041e218 : ret 0xffc4
0x0000000000404a8a : ret 0xffce
0x000000000040413f : ret 0xffd0
0x0000000000404179 : ret 0xffd5
0x000000000041d512 : ret 0xffd8
0x000000000041e2ca : ret 0xffd9
0x000000000041d6b4 : ret 0xffe0
0x0000000000401faa : ret 0xfff6
0x000000000041c3a5 : ret 0xfffa
0x00000000004352f1 : ret 0xfffc
0x000000000043f1f5 : ret 0xfffe
0x00000000004056d9 : ret 0xffff
0x0000000000405396 : ret 1
0x000000000041e0b0 : ret 2
0x000000000042f9f7 : ret 3
0x000000000042f402 : ret 4
0x00000000004083dd : ret 5
0x0000000000410f80 : ret 6
0x000000000040ff0c : ret 8
0x0000000000436e08 : ret 9
0x000000000042b790 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000456e4d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000043c89a : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x000000000044940a : rol byte ptr [rax + 1], cl ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000044fff4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000445dec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c3fa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045a3ba : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004531f1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ca88 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042c65a : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x0000000000456e4c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000437ba7 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x000000000042b78f : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000044b070 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b91e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000427094 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000045d760 : ror byte ptr [rax + rax], 0 ; cwde ; movsxd rdi, esp ; jmp rax
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x000000000044b071 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b91f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004058b3 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000449b5a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042b72b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x42b794 ; ret
0x000000000044cf43 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000445940 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004492cd : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000441797 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043fda0 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x0000000000459ef5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045d720 : ror byte ptr [rbx], 0 ; add al, ch ; pop rsi ; cld ; jmp rax
0x000000000041324a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043ef1e : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x000000000045a3cd : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000459ecf : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000440dd9 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000444fb0 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043f1ef : ror dword ptr [rax - 0x77], -0x32 ; call 0x42b4f6
0x0000000000456c7e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000423c80 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000045d82d : sahf ; cld ; call qword ptr [rax]
0x000000000045a6ac : sahf ; ret 0xd284
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x00000000004048d9 : sar bh, 1 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x0000000000459eb4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x000000000041f001 : sar ebp, -0x17 ; ret 0x2a
0x000000000045e721 : sar esp, cl ; jmp qword ptr [rdi]
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x0000000000423fc0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042ec0d : sbb al, 0x41 ; xchg eax, ebx ; ret
0x000000000040f556 : sbb bl, byte ptr [rsi] ; and esp, dword ptr [rcx] ; ret 0xd709
0x000000000040f555 : sbb bl, byte ptr fs:[rsi] ; and esp, dword ptr [rcx] ; ret 0xd709
0x000000000043c952 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x000000000045d5e4 : sbb byte ptr [rbp - 6], al ; call rax
0x000000000045daac : sbb byte ptr [rbx - 1], ah ; call qword ptr [rax]
0x000000000045d734 : sbb byte ptr [rcx - 4], ah ; jmp qword ptr [rax]
0x000000000043c953 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041ef01 : sbb cl, ch ; ret
0x00000000004268e3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000045daa9 : sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rdi, edi ; call qword ptr [rax]
0x000000000040f84b : sbb eax, 0x81e0558b ; ret 0x33f7
0x000000000044bb3d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423010 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040db8f : scasb al, byte ptr [rdi] ; loopne 0x40db7c ; ret 0x8589
0x000000000040f339 : scasb al, byte ptr [rdi] ; loopne 0x40f326 ; ret 0x558b
0x00000000004317ec : scasb al, byte ptr [rdi] ; ret
0x0000000000431840 : scasd eax, dword ptr [rdi] ; ret
0x0000000000453f10 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004540bf : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x00000000004453fa : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004453fc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044942f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000451167 : shr al, 1 ; ret
0x000000000041df02 : shr cl, cl ; ret 0x3b
0x000000000045d829 : sldt word ptr [rax] ; call 0x1145d4d5
0x000000000045eb7d : sldt word ptr [rax] ; push rax ; xchg esi, edi ; jmp qword ptr [rcx]
0x000000000040805d : stc ; add byte ptr [rax + 0xf410000], ah ; xchg eax, esp ; ret 0x8445
0x00000000004506d9 : stc ; in al, dx ; ret 0x8589
0x0000000000450fec : stc ; in al, dx ; ret 0xff3
0x000000000042e2ec : stc ; mov cl, 0x37 ; ret 0x4589
0x0000000000442955 : stc ; ret
0x000000000041bd3d : stc ; ret 0x77a8
0x000000000040f177 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000045d8ae : std ; call qword ptr [rax]
0x000000000045d89e : std ; call rax
0x000000000045d896 : std ; push qword ptr [rax + 0x28000011] ; or al, 0xfffffffffffffffd ; call rax
0x000000000045d8a6 : std ; push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], cl ; sub ch, bh ; call qword ptr [rax]
0x00000000004228c7 : std ; ret 0x279e
0x000000000045d6b6 : sti ; call qword ptr [rax]
0x000000000045dfe2 : sti ; call qword ptr [rdx]
0x000000000045d6a6 : sti ; call rax
0x0000000000411e7f : sti ; cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x000000000045df62 : sti ; jmp qword ptr [rbx]
0x000000000045d69e : sti ; push qword ptr [rax + 0x8000009] ; push rdx ; sti ; call rax
0x000000000045d6ae : sti ; push rax ; or dword ptr [rax], eax ; add al, bh ; push rdi ; sti ; call qword ptr [rax]
0x00000000004506d8 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000043d534 : stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000459eb3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042b4db : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045d8ed : sub al, -2 ; call qword ptr [rax]
0x000000000043ffec : sub al, 0x35 ; ret 0x8941
0x0000000000440178 : sub al, 0x35 ; ret 0xb941
0x00000000004401f3 : sub al, 0x35 ; ret 0xe941
0x0000000000441f51 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x00000000004275ff : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x0000000000409c0e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000459526 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409af8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d435 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000045d8ad : sub ch, bh ; call qword ptr [rax]
0x000000000041d42b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d505 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043c889 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x0000000000429eae : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x000000000041e2c5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000040f178 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000042b4dd : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042709f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045c569 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042b4dc : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045c568 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042ef1f : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x00000000004496f3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045d664 : test al, -0x23 ; cli ; call rax
0x0000000000451389 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041d430 : test al, -0x7f ; ret 0x2d50
0x000000000041d50a : test al, -0x7f ; ret 0xa30b
0x0000000000404631 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000456723 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042bab7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000453f0d : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x000000000045d5f4 : test al, 0x47 ; cli ; call qword ptr [rax]
0x000000000042369e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041fc66 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000045d774 : test al, 0x65 ; cld ; jmp qword ptr [rax]
0x0000000000426138 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004120a7 : test al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044e56d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045043a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000042f320 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000045c4ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040fa12 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000444542 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000448e8c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000045dfdc : test byte ptr [rbx], al ; add byte ptr [rax], al ; loopne 0x45e036 ; sti ; call qword ptr [rdx]
0x00000000004115f1 : test byte ptr [rcx - 0x16fffffa], ah ; ret 1
0x000000000045043b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x0000000000443ae6 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004142ac : test byte ptr [rcx], ch ; ret 0
0x0000000000406398 : test byte ptr [rdi + rax*2], bh ; ret 0x8589
0x000000000042c26f : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000427601 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x0000000000442721 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x0000000000409380 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000043f8f5 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000451967 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000405390 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004142a6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000043109d : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x00000000004063ec : test dword ptr [rdi + rax*2], edi ; ret 0x8589
0x00000000004076fb : test dword ptr [rdi + rax*2], edi ; ret 0xb9b9
0x0000000000459107 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004590c7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000459042 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000042a6c4 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042b241 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000042b1e7 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000042b11d : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000042a44b : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000042b0d9 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x0000000000426246 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000404fec : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000004048dd : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x000000000040512c : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x00000000004246fe : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000044f351 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004232ba : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000402f87 : test dword ptr [rdi*8 - 0x7bf00001], ebx ; ret
0x00000000004373e9 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x000000000041ecdb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041ff3a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040c934 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret 0x31
0x000000000041b9fa : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004076f6 : test eax, 0xb8000012 ; test dword ptr [rdi + rax*2], edi ; ret 0xb9b9
0x000000000041feef : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000045d96d : test edi, esi ; call qword ptr [rax]
0x000000000043a347 : test esi, esp ; ret
0x0000000000408b2c : wait ; call qword ptr [rax]
0x000000000041deff : wait ; jge 0x41dee1 ; shr cl, cl ; ret 0x3b
0x0000000000418fbd : wait ; jo 0x418fcb ; ret
0x000000000041c50c : wait ; jo 0x41c51a ; ret
0x000000000043ccac : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000456e68 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000449210 : xchg eax, ebp ; jmp 0x449361
0x000000000040867f : xchg eax, ebp ; ret
0x000000000040b07f : xchg eax, ebp ; ret 0x8445
0x0000000000404637 : xchg eax, ebp ; ret 0xd284
0x0000000000414b45 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041b445 : xchg eax, ebx ; ret
0x000000000041b675 : xchg eax, ecx ; ret
0x000000000043535b : xchg eax, ecx ; ret 0xfffc
0x000000000042ad29 : xchg eax, edi ; ret 0xd284
0x0000000000453f0f : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004540be : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x00000000004119c8 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ed99 : xchg eax, edx ; ret
0x0000000000422d6f : xchg eax, edx ; ret 0x8445
0x000000000042613e : xchg eax, edx ; ret 0xd284
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000451e88 : xchg eax, esp ; int 6
0x00000000004253da : xchg eax, esp ; jmp 0x425e48
0x0000000000425317 : xchg eax, esp ; jmp 0x425e4a
0x000000000041fef4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041b7c5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041ff3f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000434f2c : xchg eax, esp ; ret
0x0000000000422d59 : xchg eax, esp ; ret 0x8041
0x0000000000408064 : xchg eax, esp ; ret 0x8445
0x000000000041ee0e : xchg eax, esp ; ret 0xb740
0x0000000000408371 : xchg eax, esp ; ret 0xd284
0x000000000040f17d : xchg eax, esp ; ret 0xe280
0x00000000004453fb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004484d2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000042906a : xchg eax, r11d ; ret
0x0000000000451e87 : xchg eax, r12d ; int 6
0x00000000004253d9 : xchg eax, r12d ; jmp 0x425e49
0x00000000004352ea : xchg eax, r8d ; mov rdi, rax ; call 0x4015d7
0x000000000045eb81 : xchg esi, edi ; jmp qword ptr [rcx]
0x000000000044b18f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000459b1e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041ee09 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x00000000004136a7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000451163 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x00000000004136a8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000459eb6 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000045e1d0 : xor byte ptr [rbx - 4], dl ; call rdi
0x00000000004484d3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000044179b : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000448250 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ec27 : xor dh, dh ; ret 0x8589
0x000000000042f7d1 : xor dh, dh ; ret 0xffbe
0x0000000000446bbb : xor dword ptr [rdx], edx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043da36 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000459b1d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000405309 : xor edx, dword ptr [rax] ; ret
0x000000000040f852 : xor edx, dword ptr [rsp - 0x7f] ; ret 0xffd0
0x0000000000459e21 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043da2a : xor esp, dword ptr [rcx] ; ret 0x8941
0x000000000042ec26 : xor r14b, r14b ; ret 0x8589
0x000000000042efaa : xor sil, sil ; ret 0x8589
0x000000000042f7d0 : xor sil, sil ; ret 0xffbe
