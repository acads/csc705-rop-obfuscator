0x00000000004253a7 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x6a2d9c45], cl ; ret 0x1ac3
0x0000000000429a93 : adc byte ptr [rbp - 8], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040651a : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004109ff : adc ch, cl ; ret
0x000000000041cd2e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041c6a1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000429b7b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000432b19 : adc dword ptr [rax], eax ; add byte ptr [rax], bh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000432b09 : adc dword ptr [rax], eax ; add byte ptr [rax], cl ; fcos ; call rax
0x000000000041d82b : adc eax, 0x558abda1 ; ret
0x000000000040ced9 : adc eax, 0xb2b80000 ; ret 0x9a2c
0x0000000000420e09 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040227f : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ad06 : add al, 0 ; add bh, al ; in al, -0x13 ; ret
0x0000000000433015 : add al, 0 ; add byte ptr [rax], bh ; out -3, eax ; call qword ptr [rdx]
0x000000000040a7c3 : add al, 0 ; add byte ptr [rbx - 0x13d21fbb], cl ; ret
0x000000000042e36a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000432eb4 : add al, 3 ; add byte ptr [rax], al ; sub dl, al ; std ; call qword ptr [rax]
0x00000000004333ef : add al, al ; idiv dh ; jmp qword ptr [rbx]
0x0000000000433b07 : add al, bl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040ea09 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043298b : add al, cl ; add bh, bh ; call rax
0x0000000000433b1f : add al, dl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040228e : add bh, al ; hlt ; jl 0x40226a ; ret 0xe9ae
0x000000000040ad08 : add bh, al ; in al, -0x13 ; ret
0x00000000004276e9 : add bh, al ; lodsb al, byte ptr [rsi] ; and al, r12b ; shr cl, 1 ; ret
0x000000000041d669 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043299d : add bh, bh ; call qword ptr [rax]
0x000000000043298d : add bh, bh ; call rax
0x0000000000408d76 : add bh, bh ; ret 0x5589
0x00000000004317af : add bl, dh ; ret
0x0000000000401f23 : add byte ptr [r8 - 0x77], cl ; shr r8b, 1 ; ret 0xfff3
0x0000000000431482 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004316e4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004333eb : add byte ptr [rax + rcx], bh ; add byte ptr [rax], al ; sal dh, -2 ; jmp qword ptr [rbx]
0x0000000000421dcb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f3fb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401f24 : add byte ptr [rax - 0x77], cl ; shr r8b, 1 ; ret 0xfff3
0x0000000000433012 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], bh ; out -3, eax ; call qword ptr [rdx]
0x0000000000432eb2 : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; sub dl, al ; std ; call qword ptr [rax]
0x000000000040b07e : add byte ptr [rax], al ; add bh, al ; in al, -0x13 ; ret
0x00000000004317ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040f3f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004317ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004231ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000400630 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004231bb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004317ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400634 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040f38e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000404be1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x342de445], cl ; ret 0x73d6
0x0000000000405a2e : add byte ptr [rax], al ; add byte ptr [rbx + 0x352de445], cl ; ret 0x73d6
0x00000000004282a8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x382dcc45], cl ; ret
0x000000000040e667 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3a2dd845], cl ; ret 0x2145
0x000000000040bd90 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2d9045], cl ; ret 0xe224
0x0000000000410742 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000420872 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a9d1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x422de045], cl ; in eax, dx ; ret 0x8938
0x000000000040abc5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432de045], cl ; in eax, dx ; ret 0x8938
0x0000000000405484 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432de445], cl ; ret 0xdfcb
0x00000000004253f2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6b2d9c45], cl ; ret 0x1ac3
0x0000000000424db2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6e2d9c45], cl ; ret
0x0000000000422fd2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x000000000040a805 : add byte ptr [rax], al ; add byte ptr [rbx - 0x12d21fbb], cl ; ret
0x0000000000425f46 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d263bb], cl ; ret
0x000000000040b449 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4dd26fbb], cl ; ret 0x9a2c
0x000000000042ea3c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042a979 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040d618 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403d9a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000426c3e : add byte ptr [rax], al ; add byte ptr [rcx - 0x608c783e], al ; ret
0x0000000000431483 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000429089 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004292f0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x7b2d, -0x6e ; ret 0x89a8
0x00000000004316e5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000430851 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042dbd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f968 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000410f3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d8e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042744b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000405e27 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a3e6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000420e0b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420490 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403011 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004046a9 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401c00 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404230 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004333ea : add byte ptr [rax], al ; cmp al, 8 ; add byte ptr [rax], al ; sal dh, -2 ; jmp qword ptr [rbx]
0x0000000000433016 : add byte ptr [rax], al ; cmp bh, ah ; std ; call qword ptr [rdx]
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x00000000004314c8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429528 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000429941 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f3fa : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004329da : add byte ptr [rax], al ; pop rax ; or bh, bh ; call qword ptr [rax]
0x0000000000401eb4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420873 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004317ae : add byte ptr [rax], al ; ret
0x0000000000400636 : add byte ptr [rax], al ; ret 0
0x00000000004333ee : add byte ptr [rax], al ; sal dh, -2 ; jmp qword ptr [rbx]
0x0000000000432f16 : add byte ptr [rax], al ; sbb ch, al ; std ; call qword ptr [rcx]
0x0000000000432a0a : add byte ptr [rax], al ; sub byte ptr [rax - 1], bl ; call rax
0x0000000000432eb6 : add byte ptr [rax], al ; sub dl, al ; std ; call qword ptr [rax]
0x0000000000432b1b : add byte ptr [rax], bh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000433017 : add byte ptr [rax], bh ; out -3, eax ; call qword ptr [rdx]
0x0000000000432ed7 : add byte ptr [rax], bl ; ret 0xfffd
0x00000000004329cb : add byte ptr [rax], ch ; or edi, edi ; call rax
0x0000000000432eb7 : add byte ptr [rax], ch ; ret 0xfffd
0x0000000000432b0b : add byte ptr [rax], cl ; fcos ; call rax
0x000000000040f390 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000404be3 : add byte ptr [rbx + 0x342de445], cl ; ret 0x73d6
0x0000000000405a30 : add byte ptr [rbx + 0x352de445], cl ; ret 0x73d6
0x00000000004282aa : add byte ptr [rbx + 0x382dcc45], cl ; ret
0x00000000004288ea : add byte ptr [rbx + 0x392dcc45], cl ; ret
0x000000000040e669 : add byte ptr [rbx + 0x3a2dd845], cl ; ret 0x2145
0x000000000040ea74 : add byte ptr [rbx + 0x3b2dd845], cl ; ret 0x2145
0x000000000040bd47 : add byte ptr [rbx + 0x3e2d9045], cl ; ret 0xe224
0x000000000040bd92 : add byte ptr [rbx + 0x3f2d9045], cl ; ret 0xe224
0x0000000000410744 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000420874 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a9d3 : add byte ptr [rbx + 0x422de045], cl ; in eax, dx ; ret 0x8938
0x000000000040543b : add byte ptr [rbx + 0x422de445], cl ; ret 0xdfcb
0x000000000040abc7 : add byte ptr [rbx + 0x432de045], cl ; in eax, dx ; ret 0x8938
0x0000000000405486 : add byte ptr [rbx + 0x432de445], cl ; ret 0xdfcb
0x0000000000401cdd : add byte ptr [rbx + 0x612ddc45], cl ; ror byte ptr [rax], 1 ; ret
0x0000000000401d1f : add byte ptr [rbx + 0x622ddc45], cl ; ror byte ptr [rax], 1 ; ret
0x00000000004253a9 : add byte ptr [rbx + 0x6a2d9c45], cl ; ret 0x1ac3
0x00000000004253f4 : add byte ptr [rbx + 0x6b2d9c45], cl ; ret 0x1ac3
0x0000000000424d69 : add byte ptr [rbx + 0x6d2d9c45], cl ; ret
0x0000000000424db4 : add byte ptr [rbx + 0x6e2d9c45], cl ; ret
0x0000000000422fd4 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000432eb3 : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; sub dl, al ; std ; call qword ptr [rax]
0x000000000040a807 : add byte ptr [rbx - 0x12d21fbb], cl ; ret
0x000000000040a7c5 : add byte ptr [rbx - 0x13d21fbb], cl ; ret
0x0000000000425f48 : add byte ptr [rbx - 0x15d263bb], cl ; ret
0x0000000000425efd : add byte ptr [rbx - 0x16d263bb], cl ; ret
0x00000000004286dd : add byte ptr [rbx - 0x45d233bb], cl ; loopne 0x428749 ; ret
0x00000000004284b7 : add byte ptr [rbx - 0x46d233bb], cl ; loopne 0x428523 ; ret
0x000000000040b44b : add byte ptr [rbx - 0x4dd26fbb], cl ; ret 0x9a2c
0x000000000040b400 : add byte ptr [rbx - 0x4ed26fbb], cl ; ret 0x9a2c
0x000000000042ea3e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000429942 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004314c9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042a97b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040d61a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403d9c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000426c40 : add byte ptr [rcx - 0x608c783e], al ; ret
0x000000000040382f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016a8 : add byte ptr [rcx], al ; ret
0x0000000000431485 : add byte ptr [rcx], al ; ret 0xea81
0x000000000042908b : add byte ptr [rcx], al ; ret 0xfa81
0x00000000004292f2 : add byte ptr [rcx], ch ; enter 0x7b2d, -0x6e ; ret 0x89a8
0x00000000004316e7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000433b1b : add byte ptr [rdi + rcx], ch ; add al, dl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000433b03 : add byte ptr [rdi + rcx], dl ; add al, bl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000430853 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042dbd3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f96a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000410f3d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d8e7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042744d : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000405e29 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a3e8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000433013 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], bh ; out -3, eax ; call qword ptr [rdx]
0x000000000040a3e5 : add byte ptr gs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041d79c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040c5a8 : add cl, ch ; ret
0x0000000000403b47 : add cl, ch ; ret 0
0x00000000004058e6 : add cl, ch ; ret 1
0x00000000004267ee : add dword ptr [rax + 0x45c7c655], ecx ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000403064 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040ea72 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3b2dd845], cl ; ret 0x2145
0x0000000000402cbe : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402efb : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404a94 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004048c7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004309d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040e23e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fa0e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016a4 : add eax, 0x232bde ; add ebx, esi ; ret
0x0000000000432ed5 : add eax, dword ptr [rax] ; add byte ptr [rax], bl ; ret 0xfffd
0x0000000000432eb5 : add eax, dword ptr [rax] ; add byte ptr [rax], ch ; ret 0xfffd
0x00000000004288e8 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x392dcc45], cl ; ret
0x0000000000403b45 : add eax, dword ptr [rax] ; add cl, ch ; ret 0
0x000000000040166b : add eax, edx ; sar rax, 1 ; jne 0x40167c ; pop rbp ; ret
0x00000000004016a9 : add ebx, esi ; ret
0x0000000000420e0e : add esp, 0x10 ; pop rbp ; ret
0x000000000040382d : add esp, 0x100 ; pop rbp ; ret
0x000000000040ef88 : add esp, 0x180 ; pop rbp ; ret
0x00000000004291ff : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000420493 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403014 : add esp, 0x30 ; pop rbp ; ret
0x0000000000406518 : add esp, 0x310 ; pop rbp ; ret
0x00000000004046ac : add esp, 0x40 ; pop rbp ; ret
0x000000000042e569 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401c03 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404233 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402124 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a324 : add esp, 0x740 ; pop rbp ; ret
0x0000000000410b14 : add esp, 0x78 ; pop rbp ; ret
0x0000000000401eb0 : add esp, 0x80 ; pop rbp ; ret
0x0000000000427cde : add esp, 0x890 ; pop rbp ; ret
0x000000000042a1fd : add esp, 0x90 ; pop rbp ; ret
0x0000000000422f66 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040b0e4 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403f86 : add esp, 0xd0 ; pop rbp ; ret
0x000000000042ec8e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042b96f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000411723 : add esp, 8 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040166a : add rax, rdx ; sar rax, 1 ; jne 0x40167d ; pop rbp ; ret
0x0000000000420e0d : add rsp, 0x10 ; pop rbp ; ret
0x000000000040382c : add rsp, 0x100 ; pop rbp ; ret
0x000000000040ef87 : add rsp, 0x180 ; pop rbp ; ret
0x00000000004291fe : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000420492 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403013 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406517 : add rsp, 0x310 ; pop rbp ; ret
0x00000000004046ab : add rsp, 0x40 ; pop rbp ; ret
0x000000000042e568 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401c02 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404232 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402123 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a323 : add rsp, 0x740 ; pop rbp ; ret
0x0000000000410b13 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000401eaf : add rsp, 0x80 ; pop rbp ; ret
0x0000000000427cdd : add rsp, 0x890 ; pop rbp ; ret
0x000000000042a1fc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000422f65 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040b0e3 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403f85 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042ec8d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042b96e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000411722 : add rsp, 8 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x000000000043148d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040e23d : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fa0d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004276ee : and al, ah ; shr cl, 1 ; ret
0x00000000004276ed : and al, r12b ; shr cl, 1 ; ret
0x0000000000403062 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040d6c1 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042a6ab : and byte ptr [rsi + 0x58], ah ; jb 0x42a6e2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000403061 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040e4c9 : and eax, 0x63429c ; pop rbp ; ret
0x000000000041c9d1 : and eax, 0x75b4b9d3 ; ret
0x0000000000401f22 : and eax, 0x89480043 ; shr r8b, 1 ; ret 0xfff3
0x0000000000408ff8 : and eax, 0xb9b8e58f ; jmp qword ptr [rbx]
0x0000000000408d73 : and eax, 0xff0022b5 ; ret 0x5589
0x00000000004016a7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000401a91 : call 0x401369
0x000000000042aaa5 : call 0x42ab69
0x000000000040ec6e : call 0x4903ebbe
0x000000000040ee64 : call 0x4903edb4
0x000000000042efdd : call 0xffffffffaca3b211
0x000000000042efdc : call 0xffffffffaca3b212
0x0000000000420489 : call 0xffffffffe9048dd9
0x0000000000420488 : call 0xffffffffe9048dda
0x0000000000431789 : call qword ptr [r12 + rbx*8]
0x000000000043299f : call qword ptr [rax]
0x0000000000421c4e : call qword ptr [rbx]
0x000000000042e60c : call qword ptr [rcx]
0x000000000041f914 : call qword ptr [rdi]
0x000000000040f2a7 : call qword ptr [rdx]
0x0000000000409579 : call qword ptr [rsi]
0x000000000043178a : call qword ptr [rsp + rbx*8]
0x00000000004016cd : call rax
0x000000000041db7b : call rcx
0x000000000041f554 : call rdi
0x000000000040a56a : call rdx
0x0000000000429770 : call rsi
0x000000000040f33b : call rsp
0x000000000042e567 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000429e07 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042aef9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040166f : clc ; jne 0x401678 ; pop rbp ; ret
0x000000000040f0e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004230cb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004230ab : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000421dcf : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423207 : clc ; pop rbp ; ret
0x0000000000412f5d : clc ; ret 0x77a8
0x000000000042f61e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042b96d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040f3bf : cld ; jmp 0x40f42c
0x000000000040f3be : cld ; jmp 0x40f42d
0x0000000000429945 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a6b0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043148c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000401a98 : cmp al, 0x25 ; ret
0x00000000004333ec : cmp al, 8 ; add byte ptr [rax], al ; sal dh, -2 ; jmp qword ptr [rbx]
0x0000000000401ad7 : cmp al, ch ; ret
0x0000000000433018 : cmp bh, ah ; std ; call qword ptr [rdx]
0x0000000000401f21 : cmp byte ptr [rip - 0x76b7ffbd], ah ; shr r8b, 1 ; ret 0xfff3
0x000000000040162d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401640 ; pop rbp ; ret
0x0000000000401231 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041d827 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000401a95 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000041cd2b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041c69e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041cea3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000401adc : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042e0c6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040a55b : dec dword ptr [rax - 0x7f] ; ret 0xe902
0x00000000004058e0 : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffb], cl ; ret 1
0x0000000000412c3a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040c5a2 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16ffffe6], al ; ret
0x000000000040ea05 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffffe], al ; ret 1
0x0000000000428a24 : dec dword ptr [rdi] ; test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042def3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040a362 : enter -3, -1 ; pop rbx ; imul eax, ebx, -0x17 ; ret
0x000000000042db49 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004292f4 : enter 0x7b2d, -0x6e ; ret 0x89a8
0x0000000000410f39 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000432b0d : fcos ; call rax
0x0000000000432b1d : fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004016a5 : fisubr word ptr [rbx] ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000042fa48 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042e727 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000042e728 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000043178c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040f00d : fsub st(1), st(0) ; ret
0x0000000000402122 : hlt ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042ec8c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000411721 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000402291 : hlt ; jl 0x402267 ; ret 0xe9ae
0x0000000000402290 : hlt ; jl 0x402268 ; ret 0xe9ae
0x0000000000401640 : hlt ; pop rbp ; mov edi, 0x634258 ; jmp rax
0x00000000004333f1 : idiv dh ; jmp qword ptr [rbx]
0x000000000042a7db : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040a368 : imul eax, ebx, -0x17 ; ret
0x0000000000401deb : imul edx, dword ptr [rbp - 0x2f9d46d5], 8 ; ret
0x0000000000401dea : imul rdx, qword ptr [r13 - 0x2f9d46d5], 8 ; ret
0x000000000040ad0b : in al, -0x13 ; ret
0x000000000040535d : in al, 0x2d ; or bl, dh ; ret
0x0000000000405312 : in al, 0x2d ; or esi, ebx ; ret
0x0000000000405a97 : in al, 0x2d ; ret
0x0000000000404b8e : in al, 0x2d ; ret 0xb7af
0x000000000040543e : in al, 0x2d ; ret 0xdfcb
0x000000000042b2b1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004291fd : in al, dx ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040628b : in al, dx ; jmp 0x406686
0x000000000040628a : in al, dx ; jmp 0x406687
0x00000000004063bc : in al, dx ; jmp 0x406688
0x000000000042f09c : in al, dx ; jmp 0x42f119
0x000000000042f09b : in al, dx ; jmp 0x42f11a
0x0000000000401adf : in al, dx ; pop rbp ; ret
0x000000000040a7ca : in al, dx ; ret
0x000000000040a80c : in eax, dx ; ret
0x000000000040a9d9 : in eax, dx ; ret 0x8938
0x000000000040afde : in eax, dx ; ret 0xb938
0x0000000000409eba : inc dword ptr [rax] ; jmp 0x40a63b
0x0000000000409a1b : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000424d6e : insd dword ptr [rdi], dx ; ret
0x0000000000422937 : int 0x5b
0x0000000000429855 : iretd ; test al, -0x47 ; call rsi
0x0000000000401633 : ja 0x40163a ; pop rbp ; ret
0x0000000000432a4d : ja 0x432a50 ; call rax
0x0000000000426c38 : jae 0x426bdb ; ret
0x0000000000426c44 : jae 0x426be7 ; ret
0x000000000042a6ae : jb 0x42a6df ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004109fd : jbe 0x4109d6 ; adc ch, cl ; ret
0x000000000040163f : je 0x40163d ; pop rbp ; mov edi, 0x634258 ; jmp rax
0x0000000000409031 : jg 0x409084 ; sub bl, -0x47 ; jmp qword ptr [rbx]
0x000000000041bdc6 : jge 0x41bd4b ; ret 0xffd5
0x000000000041c890 : jge 0x41c870 ; shr cl, cl ; ret 0x3b
0x00000000004230aa : jge 0x4230ab ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004230ca : jge 0x4230cb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004021a6 : jl 0x40217a ; ret 0x89ae
0x000000000040223b : jl 0x40220f ; ret 0xb9ae
0x0000000000402292 : jl 0x402266 ; ret 0xe9ae
0x000000000040144b : jmp 0x401247
0x000000000040628c : jmp 0x406685
0x00000000004063bd : jmp 0x406687
0x000000000040a1ed : jmp 0x40a638
0x0000000000409ebc : jmp 0x40a639
0x000000000040ad4c : jmp 0x40b11d
0x000000000040ad04 : jmp 0x40b120
0x000000000040edde : jmp 0x40f0dc
0x000000000040f3c0 : jmp 0x40f42b
0x000000000041cfe0 : jmp 0x420460
0x000000000041aee4 : jmp 0x420461
0x000000000041c2b1 : jmp 0x420462
0x00000000004267a6 : jmp 0x427fbf
0x0000000000427044 : jmp 0x427fc0
0x00000000004272bd : jmp 0x427fc1
0x000000000042aa53 : jmp 0x42aab8
0x000000000042e406 : jmp 0x42e6e8
0x000000000042f09d : jmp 0x42f118
0x000000000041fdb5 : jmp qword ptr [rax]
0x0000000000408b8f : jmp qword ptr [rbx]
0x0000000000405b03 : jmp qword ptr [rcx]
0x000000000041da67 : jmp qword ptr [rdi]
0x0000000000401647 : jmp rax
0x000000000041c3b8 : jmp rbx
0x000000000041cdea : jmp rcx
0x000000000041c412 : jmp rdi
0x0000000000401687 : jmp rdx
0x000000000041c6c8 : jmp rsp
0x0000000000401670 : jne 0x401677 ; pop rbp ; ret
0x000000000040adec : jne 0x40ada1 ; xor eax, 0x81fc558b ; ret 0x5c59
0x000000000040ae82 : jne 0x40ae37 ; xor eax, 0x81fc558b ; ret 0x3624
0x000000000040af4d : jne 0x40af02 ; xor eax, 0x81fc558b ; ret 0x145c
0x000000000040dbbe : jno 0x40dbbc ; jmp qword ptr [rcx]
0x0000000000402164 : jnp 0x402138 ; ret 0x89ae
0x00000000004292c4 : jnp 0x42925a ; ret 0xb9a8
0x00000000004292f6 : jnp 0x42928c ; ret 0x89a8
0x0000000000402126 : jo 0x402187 ; ret
0x0000000000415cde : jo 0x415cea ; ret
0x000000000041794e : jo 0x41795a ; ret
0x000000000041ae9d : jo 0x41aea9 ; ret
0x0000000000422184 : jo 0x4221e5 ; ret
0x00000000004230af : jo 0x423110 ; ret
0x00000000004230ae : jo 0x423111 ; ret
0x0000000000410b16 : js 0x410b77 ; ret
0x0000000000426c39 : lahf ; ret
0x000000000040a365 : lcall ptr [rbx + 0x26] ; imul eax, ebx, -0x17 ; ret
0x000000000041c88e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041d98e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040fbc6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004125d5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000422479 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004125d4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b1ee : ljmp ptr [rdi] ; ret 0x23da
0x0000000000432b18 : lock adc dword ptr [rax], eax ; add byte ptr [rax], bh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004276ec : lodsb al, byte ptr [rsi] ; and al, r12b ; shr cl, 1 ; ret
0x00000000004267f4 : lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x000000000040af4e : lodsb al, byte ptr [rsi] ; xor eax, 0x81fc558b ; ret 0x145c
0x000000000040ae83 : lodsb al, byte ptr [rsi] ; xor eax, 0x81fc558b ; ret 0x3624
0x000000000040aded : lodsb al, byte ptr [rsi] ; xor eax, 0x81fc558b ; ret 0x5c59
0x0000000000402efa : loope 0x402f06 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e1f5 : loope 0x41e1c3 ; jmp 0x420463
0x000000000040a7c8 : loopne 0x40a7fa ; in al, dx ; ret
0x000000000040a7c7 : loopne 0x40a7fb ; in al, dx ; ret
0x000000000040a80a : loopne 0x40a83c ; in eax, dx ; ret
0x000000000040a809 : loopne 0x40a83d ; in eax, dx ; ret
0x000000000040a927 : loopne 0x40a958 ; ret 0xf6a5
0x000000000040a926 : loopne 0x40a959 ; ret 0xf6a5
0x000000000040a9d6 : loopne 0x40aa09 ; in eax, dx ; ret 0x8938
0x000000000040a9d5 : loopne 0x40aa0a ; in eax, dx ; ret 0x8938
0x000000000040abca : loopne 0x40abfd ; in eax, dx ; ret 0x8938
0x000000000040abc9 : loopne 0x40abfe ; in eax, dx ; ret 0x8938
0x000000000040ac79 : loopne 0x40acaa ; ret
0x000000000040ac78 : loopne 0x40acab ; ret
0x000000000040ef86 : loopne 0x40efd9 ; add esp, 0x180 ; pop rbp ; ret
0x00000000004125d3 : loopne 0x412626 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421b7d : loopne 0x421be3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422f64 : loopne 0x422fb7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000427cdc : loopne 0x427d2f ; add esp, 0x890 ; pop rbp ; ret
0x00000000004284bd : loopne 0x42851d ; ret
0x00000000004286e3 : loopne 0x428743 ; ret
0x0000000000428c84 : loopne 0x428ce4 ; ret
0x0000000000429233 : loopne 0x429293 ; ret
0x000000000042a113 : loopne 0x42a11c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042aa9e : loopne 0x42aaee ; add esp, 0x60 ; pop rbp ; ret
0x000000000042aa9d : loopne 0x42aaef ; add esp, 0x60 ; pop rbp ; ret
0x000000000042ec90 : loopne 0x42ec97 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f622 : loopne 0x42f629 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004314cc : loopne 0x43151b ; mov esp, ebp ; pop rbp ; ret
0x00000000004314cb : loopne 0x43151c ; mov esp, ebp ; pop rbp ; ret
0x000000000043171c : loopne 0x43176b ; mov esp, ebp ; pop rbp ; ret
0x000000000043171b : loopne 0x43176c ; mov esp, ebp ; pop rbp ; ret
0x000000000041bdbd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041be97 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000419e45 : mov ah, 0x75 ; ret
0x0000000000422953 : mov al, -0x47 ; ret
0x000000000042dbcf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040b0e6 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d6be : mov al, 0x3b ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040d59e : mov al, 0x3b ; sbb al, 0xf ; xchg eax, esp ; ret 0xe280
0x0000000000432a08 : mov al, 0xd ; add byte ptr [rax], al ; sub byte ptr [rax - 1], bl ; call rax
0x000000000042fd3d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042fa0a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042fc6d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004267f1 : mov bh, 0x45 ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x000000000040b2c0 : mov bh, cl ; ret 0x8984
0x000000000040d099 : mov bh, cl ; ret 0xb984
0x00000000004137e5 : mov bl, 0x75 ; ret
0x0000000000403b40 : mov byte ptr [r15], r9b ; test byte ptr [rbx - 0x16fffffd], bh ; ret 0
0x000000000040f0e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403b41 : mov byte ptr [rdi], cl ; test byte ptr [rbx - 0x16fffffd], bh ; ret 0
0x00000000004016a3 : mov byte ptr [rip + 0x232bde], 1 ; ret
0x0000000000408d74 : mov ch, 0x22 ; add bh, bh ; ret 0x5589
0x000000000041b63f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000403067 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000402efd : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404a96 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004048c9 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004309d4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040e240 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fa10 : mov dh, -0x40 ; pop rbp ; ret
0x000000000043148a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000430701 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040e4c7 : mov dword ptr [0x63429c], edi ; pop rbp ; ret
0x0000000000411d59 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041192f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406289 : mov dword ptr [rbp - 0x14], eax ; jmp 0x406688
0x000000000042f09a : mov dword ptr [rbp - 0x14], eax ; jmp 0x42f11b
0x000000000040ad49 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x40b120
0x000000000040eddb : mov dword ptr [rbp - 0x24], eax ; jmp 0x40f0df
0x0000000000412036 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411bdd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000411459 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a91b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423201 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042aaee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004101ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042ef15 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411d5c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042aa9c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004314ca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410b10 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000411bdf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042952a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000402120 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041171f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000429943 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421dcd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004230cd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004230ad : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411bde : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004063be : mov ebp, 0xb8000002 ; or bl, dh ; ret
0x000000000041e5f8 : mov ebp, 0xe19c53ba ; ret
0x00000000004016cb : mov ebp, esp ; call rax
0x0000000000401631 : mov ebp, esp ; ja 0x40163c ; pop rbp ; ret
0x0000000000403b44 : mov ebx, 0xe9000003 ; ret 0
0x000000000041192c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404b51 : mov ecx, dword ptr [rcx - 0x7bf033bb] ; ret
0x00000000004016c5 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x0000000000401642 : mov edi, 0x634258 ; jmp rax
0x0000000000401682 : mov edi, 0x634258 ; jmp rdx
0x000000000041ae97 : mov edi, 0xb8000055 ; wait ; jo 0x41aeaf ; ret
0x00000000004230c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004230a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000431787 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000431786 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042e37e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041b65b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000423205 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409d17 : mov esi, 0x39440246 ; ret 0xf41
0x0000000000409d53 : mov esi, 0x39440346 ; ret 0xf41
0x000000000041c4d2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042e367 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401680 : mov esi, eax ; mov edi, 0x634258 ; jmp rdx
0x0000000000401ade : mov esp, ebp ; pop rbp ; ret
0x0000000000412035 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d6bd : mov r8b, 0x3b ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040d59d : mov r8b, 0x3b ; sbb al, 0xf ; xchg eax, esp ; ret 0xe280
0x0000000000411458 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a91a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423200 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042aaed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004101cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042aa9b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410b0f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000421dcc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004230cc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004230ac : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016ca : mov rbp, rsp ; call rax
0x0000000000401630 : mov rbp, rsp ; ja 0x40163d ; pop rbp ; ret
0x00000000004230c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004230a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000423204 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040167f : mov rsi, rax ; mov edi, 0x634258 ; jmp rdx
0x0000000000401add : mov rsp, rbp ; pop rbp ; ret
0x000000000042a6b1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000417138 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000041a385 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000429853 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000429a91 : movsd xmm0, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429a92 : movups xmm0, xmmword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404a95 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004048c8 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004309d3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040e23f : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fa0f : movzx eax, al ; pop rbp ; ret
0x0000000000403066 : movzx eax, bh ; pop rbp ; ret
0x000000000040f0ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402efc : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403065 : movzx eax, dil ; pop rbp ; ret
0x000000000042e178 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000413625 : nop ; ret
0x0000000000421a32 : nop ; ret 0x148
0x0000000000421a46 : nop ; ret 0x2948
0x00000000004317a8 : nop dword ptr [rax + rax] ; ret
0x00000000004329c9 : or al, 0 ; add byte ptr [rax], ch ; or edi, edi ; call rax
0x000000000041bdba : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041be94 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004232a2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004329dd : or bh, bh ; call qword ptr [rax]
0x000000000040535f : or bl, dh ; ret
0x0000000000411930 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004333ed : or byte ptr [rax], al ; add al, al ; idiv dh ; jmp qword ptr [rbx]
0x0000000000428627 : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000428626 : or byte ptr [rax], r8b ; add cl, ch ; ret
0x000000000040f047 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041cea6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000412034 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000432989 : or eax, dword ptr [rax] ; add al, cl ; add bh, bh ; call rax
0x0000000000411bdb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004329cd : or edi, edi ; call rax
0x0000000000405314 : or esi, ebx ; ret
0x0000000000433019 : out -3, eax ; call qword ptr [rdx]
0x0000000000403063 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041d79b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042fa0c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004272bc : out dx, al ; jmp 0x427fc2
0x000000000042fd3f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422952 : out dx, eax ; mov al, -0x47 ; ret
0x000000000040524e : out dx, eax ; ret
0x000000000042e369 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000424db9 : outsb dx, byte ptr [rsi] ; ret
0x000000000041e885 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004134d6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041e8d0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042e36c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040ee5f : outsd dx, dword ptr [rsi] ; ror dword ptr [rax - 0x75], 0x55 ; call 0x4903edb9
0x000000000042a6ac : pop ax ; jb 0x42a6e1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041f739 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043179c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421b7f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f73b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043179e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f73d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004317a0 : pop r14 ; pop r15 ; ret
0x00000000004125d9 : pop r14 ; pop rbp ; ret
0x000000000041f73f : pop r15 ; pop rbp ; ret
0x00000000004317a2 : pop r15 ; ret
0x000000000042a6ad : pop rax ; jb 0x42a6e0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004329dc : pop rax ; or bh, bh ; call qword ptr [rax]
0x00000000004016a2 : pop rbp ; mov byte ptr [rip + 0x232bde], 1 ; ret
0x0000000000401641 : pop rbp ; mov edi, 0x634258 ; jmp rax
0x000000000040167e : pop rbp ; mov rsi, rax ; mov edi, 0x634258 ; jmp rdx
0x000000000043179b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f73c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043179f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041b642 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000417915 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041b65e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401635 : pop rbp ; ret
0x000000000040a366 : pop rbx ; imul eax, ebx, -0x17 ; ret
0x0000000000421b7e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420875 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004125d8 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b643 : pop rcx ; ret 0x1b2
0x0000000000415d16 : pop rcx ; ret 0x8589
0x000000000041b65f : pop rcx ; ret 0x8b48
0x000000000041d990 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000041f740 : pop rdi ; pop rbp ; ret
0x00000000004317a3 : pop rdi ; ret
0x000000000040ea71 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x3b2dd845], cl ; ret 0x2145
0x000000000041f73e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004317a1 : pop rsi ; pop r15 ; ret
0x00000000004125da : pop rsi ; pop rbp ; ret
0x000000000041f73a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043179d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421b80 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415d15 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004284be : pop rsp ; ret
0x0000000000430855 : popfq ; ret 0xd284
0x00000000004253ae : push -0x3e ; ret
0x000000000041b640 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041d82a : push -0x75425eeb ; push rbp ; ret
0x000000000041a388 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000406130 : push -0x7effdd1f ; ret 0x4643
0x000000000040ee5e : push 0x6f ; ror dword ptr [rax - 0x75], 0x55 ; call 0x4903edba
0x00000000004329c7 : push qword ptr [rax + 0x2800000c] ; or edi, edi ; call rax
0x0000000000432a47 : push qword ptr [rax + 0x7800000e] ; ja 0x432a56 ; call rax
0x0000000000432b07 : push qword ptr [rax + 0x8000011] ; fcos ; call rax
0x0000000000432987 : push qword ptr [rax - 0x37fffff5] ; add bh, bh ; call rax
0x0000000000432b17 : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], bh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004267ed : push rax ; add dword ptr [rax + 0x45c7c655], ecx ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000401c05 : push rax ; pop rbp ; ret
0x000000000040ec6d : push rbp ; call 0x4903ebbf
0x000000000040ee63 : push rbp ; call 0x4903edb5
0x0000000000423206 : push rbp ; clc ; pop rbp ; ret
0x00000000004267f0 : push rbp ; mov bh, 0x45 ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x00000000004016c4 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x000000000041d82f : push rbp ; ret
0x000000000041d7c6 : push rbp ; ret 0xd284
0x000000000041bdbf : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041be99 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042e36b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000424591 : push rdx ; sub al, 0 ; add cl, ch ; ret
0x000000000042dbd5 : pushfq ; ret 0xd284
0x000000000040d8c9 : pushfq ; ret 0xe280
0x0000000000401239 : ret
0x0000000000400638 : ret 0
0x000000000040af54 : ret 0x145c
0x0000000000421a33 : ret 0x148
0x000000000041e994 : ret 0x1a
0x00000000004253af : ret 0x1ac3
0x0000000000413c0d : ret 0x1add
0x000000000041b645 : ret 0x1b2
0x000000000040e66f : ret 0x2145
0x0000000000401452 : ret 0x232c
0x0000000000401242 : ret 0x232d
0x000000000041455a : ret 0x23da
0x0000000000421258 : ret 0x279e
0x000000000041cea9 : ret 0x2948
0x000000000041d994 : ret 0x2a
0x0000000000423982 : ret 0x2b80
0x000000000041bdc2 : ret 0x2d50
0x000000000042dece : ret 0x3040
0x000000000040ae89 : ret 0x3624
0x000000000041c894 : ret 0x3b
0x00000000004198f5 : ret 0x3e
0x0000000000406ab6 : ret 0x4324
0x0000000000427456 : ret 0x4589
0x0000000000406135 : ret 0x4643
0x000000000041cd31 : ret 0x4802
0x000000000042e36e : ret 0x4815
0x000000000041e886 : ret 0x4861
0x0000000000401846 : ret 0x48f0
0x0000000000417141 : ret 0x4b
0x0000000000422757 : ret 0x4cc0
0x000000000041f798 : ret 0x4cf0
0x0000000000408d78 : ret 0x5589
0x000000000041c04a : ret 0x5966
0x0000000000426be7 : ret 0x5a85
0x00000000004279be : ret 0x5a9c
0x000000000040adf3 : ret 0x5c59
0x000000000043148f : ret 0x61
0x00000000004132a6 : ret 0x6a8a
0x000000000040e821 : ret 0x6f6a
0x0000000000426c42 : ret 0x7387
0x0000000000404be9 : ret 0x73d6
0x0000000000412f5e : ret 0x77a8
0x00000000004140c1 : ret 0x7a8a
0x000000000041ad3b : ret 0x7b7f
0x00000000004216ea : ret 0x8041
0x0000000000421932 : ret 0x8141
0x000000000042e0c9 : ret 0x8148
0x000000000041cc54 : ret 0x822d
0x0000000000426657 : ret 0x83d0
0x0000000000402cc0 : ret 0x840
0x0000000000403da0 : ret 0x8445
0x0000000000409a1f : ret 0x8589
0x0000000000407b99 : ret 0x8902
0x0000000000409866 : ret 0x8903
0x000000000040a9da : ret 0x8938
0x0000000000413cd3 : ret 0x8940
0x000000000040ec71 : ret 0x8948
0x000000000042c98f : ret 0x894a
0x00000000004134d7 : ret 0x8961
0x000000000040b277 : ret 0x8984
0x00000000004292f8 : ret 0x89a8
0x0000000000402166 : ret 0x89ae
0x000000000042df88 : ret 0x8a44
0x000000000042de85 : ret 0x8a4a
0x000000000041b661 : ret 0x8b48
0x0000000000403d73 : ret 0x8b4c
0x000000000040730f : ret 0x8f31
0x000000000040b406 : ret 0x9a2c
0x00000000004058fc : ret 0xa
0x000000000041be9c : ret 0xa30b
0x00000000004279b6 : ret 0xa564
0x000000000042efdf : ret 0xac60
0x0000000000425ccf : ret 0xb
0x000000000041d7a0 : ret 0xb740
0x0000000000404b90 : ret 0xb7af
0x000000000042a6a7 : ret 0xb848
0x000000000040a026 : ret 0xb902
0x000000000040afdf : ret 0xb938
0x000000000041b9d0 : ret 0xb940
0x000000000042de12 : ret 0xb94a
0x000000000040d09b : ret 0xb984
0x00000000004292c6 : ret 0xb9a8
0x000000000040223d : ret 0xb9ae
0x000000000040613d : ret 0xb9bd
0x000000000041de1c : ret 0xbf48
0x0000000000401665 : ret 0xc148
0x000000000042329e : ret 0xc189
0x000000000042e5c8 : ret 0xc2e8
0x000000000040d867 : ret 0xc42c
0x00000000004316d2 : ret 0xc493
0x000000000042f9c9 : ret 0xca21
0x00000000004038f8 : ret 0xca29
0x0000000000431495 : ret 0xccb2
0x0000000000405e2c : ret 0xd284
0x000000000042c5d5 : ret 0xd618
0x0000000000401e9a : ret 0xdd
0x0000000000405441 : ret 0xdfcb
0x000000000040bd4d : ret 0xe224
0x000000000040a3eb : ret 0xe280
0x000000000040a55e : ret 0xe902
0x000000000041d672 : ret 0xe940
0x000000000041e8d1 : ret 0xe961
0x0000000000402294 : ret 0xe9ae
0x00000000004146fd : ret 0xea51
0x000000000042683a : ret 0xea81
0x000000000042048c : ret 0xee8
0x0000000000402ca4 : ret 0xf280
0x0000000000411bc5 : ret 0xf281
0x0000000000409d1c : ret 0xf41
0x000000000040e772 : ret 0xf5c0
0x000000000040a929 : ret 0xf6a5
0x000000000041e425 : ret 0xf7f3
0x000000000040da3a : ret 0xfa81
0x000000000041cbae : ret 0xfc75
0x000000000040cbac : ret 0xff70
0x000000000040adf9 : ret 0xff89
0x000000000040ae8f : ret 0xff92
0x000000000040af5a : ret 0xff9f
0x000000000041e41f : ret 0xffa5
0x000000000041cba8 : ret 0xffc4
0x000000000041bdc8 : ret 0xffd5
0x000000000041bea2 : ret 0xffd8
0x000000000041cc5a : ret 0xffd9
0x000000000041c044 : ret 0xffe0
0x0000000000401f2a : ret 0xfff3
0x000000000041ad35 : ret 0xfffa
0x0000000000432eb9 : ret 0xfffd
0x00000000004058e8 : ret 1
0x000000000041ca40 : ret 2
0x000000000042887e : ret 3
0x0000000000428270 : ret 6
0x000000000040a815 : ret 8
0x000000000042e34d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042ae6c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403f88 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e34c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000042a6a4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040166c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40167b ; pop rbp ; ret
0x000000000040e241 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004048ca : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000406516 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040382b : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b0e2 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403f84 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401ce3 : ror byte ptr [rax], 1 ; ret
0x0000000000411bda : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040ee60 : ror dword ptr [rax - 0x75], 0x55 ; call 0x4903edb8
0x0000000000402efe : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000042e17e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000422610 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042f96c : sahf ; ret 0xd284
0x00000000004333f0 : sal dh, -2 ; jmp qword ptr [rbx]
0x000000000040166e : sar eax, 1 ; jne 0x401679 ; pop rbp ; ret
0x000000000041d991 : sar ebp, -0x17 ; ret 0x2a
0x000000000040166d : sar rax, 1 ; jne 0x40167a ; pop rbp ; ret
0x0000000000422950 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000040d5a1 : sbb al, 0xf ; xchg eax, esp ; ret 0xe280
0x000000000040c5a6 : sbb al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000432f18 : sbb ch, al ; std ; call qword ptr [rcx]
0x000000000041d891 : sbb cl, ch ; ret
0x0000000000429ef3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004219a0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000429854 : scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000401f28 : shr al, 1 ; ret 0xfff3
0x00000000004276f0 : shr cl, 1 ; ret
0x0000000000428f48 : shr cl, 1 ; ret 3
0x000000000041c892 : shr cl, cl ; ret 0x3b
0x0000000000401f27 : shr r8b, 1 ; ret 0xfff3
0x0000000000428f47 : shr r9b, 1 ; ret 3
0x000000000041a6cd : stc ; ret 0x77a8
0x000000000040f049 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000432eba : std ; call qword ptr [rax]
0x0000000000432f1a : std ; call qword ptr [rcx]
0x000000000043301a : std ; call qword ptr [rdx]
0x0000000000421257 : std ; ret 0x279e
0x0000000000424592 : sub al, 0 ; add cl, ch ; ret
0x000000000040f50e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409033 : sub bl, -0x47 ; jmp qword ptr [rbx]
0x0000000000432a0c : sub byte ptr [rax - 1], bl ; call rax
0x000000000042f0e6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f3f8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041bdc5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041bdbb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041be95 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000432eb8 : sub dl, al ; std ; call qword ptr [rax]
0x000000000041cc55 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000040f04a : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000042a6af : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000431801 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004016a6 : sub esp, dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x0000000000431800 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000429856 : test al, -0x47 ; call rsi
0x000000000041bdc0 : test al, -0x7f ; ret 0x2d50
0x000000000041be9a : test al, -0x7f ; ret 0xa30b
0x000000000042dc23 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042202e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041e5f6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004058e2 : test byte ptr [rax - 0x16fffffb], cl ; ret 1
0x00000000004317aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403b43 : test byte ptr [rbx - 0x16fffffd], bh ; ret 0
0x0000000000412c3c : test byte ptr [rcx], ch ; ret 0
0x000000000040c5a4 : test byte ptr [rdi - 0x16ffffe6], al ; ret
0x000000000040ea07 : test byte ptr [rdi - 0x16fffffe], al ; ret 1
0x0000000000428a26 : test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000412c36 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004272be : test dword ptr [rax + rax], 0xc26bb800 ; ret
0x0000000000408cbd : test dword ptr [rbp + rdi*8 - 0x42d20001], esp ; ret
0x00000000004074ad : test dword ptr [rbp + rdi*8 - 0x43d20001], esp ; ret
0x00000000004083a9 : test dword ptr [rbp + rdi*8 - 0x46d20001], esp ; ret
0x0000000000407dc1 : test dword ptr [rbp + rdi*8 - 0x47d20001], esp ; ret
0x00000000004058f5 : test dword ptr [rbp + rdi*8 - 0x7bf00001], edx ; ret 0xa
0x0000000000409d14 : test dword ptr [rdi + rcx - 0x42], 0x39440246 ; ret 0xf41
0x0000000000409d50 : test dword ptr [rdi + rcx - 0x42], 0x39440346 ; ret 0xf41
0x0000000000421c4a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041d66b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041e8ca : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041a38a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041e87f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041c88f : wait ; jge 0x41c871 ; shr cl, cl ; ret 0x3b
0x000000000041794d : wait ; jo 0x41795b ; ret
0x000000000041ae9c : wait ; jo 0x41aeaa ; ret
0x0000000000426c37 : xchg dword ptr [rbx - 0x61], esi ; ret
0x000000000042e368 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040d61d : xchg eax, ebp ; ret 0x8445
0x0000000000410f3f : xchg eax, ebp ; ret 0xd284
0x00000000004134d5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000419dd5 : xchg eax, ebx ; ret
0x000000000041a005 : xchg eax, ecx ; ret
0x000000000040adeb : xchg eax, edi ; jne 0x40ada2 ; xor eax, 0x81fc558b ; ret 0x5c59
0x000000000040ae81 : xchg eax, edi ; jne 0x40ae38 ; xor eax, 0x81fc558b ; ret 0x3624
0x000000000040af4c : xchg eax, edi ; jne 0x40af03 ; xor eax, 0x81fc558b ; ret 0x145c
0x000000000042d8e9 : xchg eax, edi ; ret 0xd284
0x0000000000413855 : xchg eax, edx ; ret
0x00000000004216ff : xchg eax, edx ; ret 0x8445
0x00000000004292f7 : xchg eax, edx ; ret 0x89a8
0x00000000004292c5 : xchg eax, edx ; ret 0xb9a8
0x000000000040b07d : xchg eax, esi ; add byte ptr [rax], al ; add bh, al ; in al, -0x13 ; ret
0x000000000042744f : xchg eax, esi ; ret 0xe280
0x000000000041e884 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041a155 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041e8cf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004216e9 : xchg eax, esp ; ret 0x8041
0x0000000000403d9f : xchg eax, esp ; ret 0x8445
0x000000000041d79e : xchg eax, esp ; ret 0xb740
0x0000000000405e2b : xchg eax, esp ; ret 0xd284
0x000000000040a3ea : xchg eax, esp ; ret 0xe280
0x000000000040b275 : xchg edi, ecx ; ret 0x8984
0x0000000000432a9d : xchg edi, edi ; call qword ptr [rax]
0x000000000041d799 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040d8c6 : xor byte ptr [r15], cl ; pushfq ; ret 0xe280
0x0000000000412037 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412038 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040d8c7 : xor byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000404b4f : xor ch, dl ; mov ecx, dword ptr [rcx - 0x7bf033bb] ; ret
0x000000000042301e : xor eax, 0x7ab99ca8 ; ret
0x000000000040af4f : xor eax, 0x81fc558b ; ret 0x145c
0x000000000040ae84 : xor eax, 0x81fc558b ; ret 0x3624
0x000000000040adee : xor eax, 0x81fc558b ; ret 0x5c59
