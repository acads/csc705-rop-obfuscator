0x0000000000432405 : adc ah, al ; ret 0x1b2
0x0000000000430142 : adc ah, al ; ret 0x8589
0x0000000000432421 : adc ah, al ; ret 0x958a
0x0000000000468ffa : adc al, -9 ; jbe 0x468fde ; adc eax, dword ptr [rax] ; ret
0x0000000000401bf5 : adc al, 0x25 ; clc ; ret 0x66
0x00000000004447a9 : adc al, 0x25 ; pop rax ; ret 0x66
0x0000000000444702 : adc al, 0x25 ; ret
0x0000000000408819 : adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x0000000000424354 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000456e96 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000408a7a : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x0000000000420367 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004593b2 : adc byte ptr [rdi], ch ; ret
0x0000000000404b3a : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432290 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000408a79 : adc byte ptr gs:[rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x000000000042f0bf : adc ch, cl ; ret
0x000000000040dd49 : adc cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004148a3 : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000445706 : adc cl, byte ptr [rax - 0x75] ; xor al, 0x25 ; ret 0x66
0x0000000000465ace : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x00000000004407fe : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000046539b : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000453faa : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000045dc4b : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x0000000000454096 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x00000000004535cf : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x00000000004483c8 : adc cl, byte ptr [rax - 1] ; ret 0x1be
0x000000000044841d : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x000000000041603a : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000404f03 : adc dl, byte ptr [rdi] ; pop rax ; ret 0x8589
0x000000000044d41b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000046940e : adc dword ptr [rax], eax ; in eax, 0x7e ; ret 0x92d
0x0000000000459652 : adc dword ptr [rdi], ebp ; ret
0x0000000000468e5e : adc eax, 0x11473300 ; ret
0x000000000041642e : adc eax, 0x14c637f ; ret 0x8148
0x0000000000416442 : adc eax, 0x294c637f ; ret 0xb70f
0x00000000004412fb : adc eax, 0x558abda1 ; ret
0x00000000004172f4 : adc eax, 0xe92a28a8 ; ret
0x0000000000468df8 : adc eax, 0xf989d1eb ; ret
0x0000000000408795 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x00000000004198db : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004448d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000468ffe : adc eax, dword ptr [rax] ; ret
0x000000000046823a : adc eax, dword ptr [rcx + 0x2a4eff] ; int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004053dc : adc edx, dword ptr [rdi] ; pop rax ; ret 0x49b9
0x000000000040568d : adc edx, dword ptr [rdi] ; pop rax ; ret 0x49e9
0x000000000040502f : adc edx, dword ptr [rdi] ; pop rax ; ret 0x8589
0x0000000000408794 : adc rax, qword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x000000000046b3b3 : add ah, bl ; or byte ptr [rax], al ; add byte ptr [rax], bl ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rbx]
0x000000000046b0a3 : add ah, cl ; add eax, 0xa1780000 ; cld ; call qword ptr [rdx]
0x000000000045c1b1 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000468df4 : add al, 0x1a ; sbb ch, byte ptr [rdi] ; adc eax, 0xf989d1eb ; ret
0x000000000042f7f4 : add al, 0x25 ; clc ; ret 0x66
0x0000000000444866 : add al, 0x25 ; pop rax ; ret 0x66
0x0000000000444830 : add al, 0x25 ; push rax ; ret 0x66
0x0000000000402a58 : add al, 0x25 ; ret
0x000000000044436d : add al, 0x25 ; ret 0x66
0x0000000000445361 : add al, 0x48 ; mov edi, eax ; call 0x401606
0x000000000045256a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000046ad8f : add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rcx]
0x00000000004009bf : add al, al ; ret 0x66
0x000000000040989d : add al, byte ptr [r8] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000046ad8d : add al, byte ptr [rax] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rcx]
0x000000000040989e : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x0000000000400971 : add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x00000000004050a0 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000046b027 : add al, ch ; cld ; jmp qword ptr [rcx]
0x000000000040348b : add al, ch ; jmp rax
0x000000000040538e : add al, ch ; ret 0xffff
0x000000000046b297 : add al, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rdi
0x000000000040095f : add al, cl ; ret 0x66
0x000000000046a72b : add al, dh ; cld ; call rax
0x000000000046a7fb : add al, dh ; mov ch, -3 ; jmp qword ptr [rax]
0x000000000046a8b3 : add al, dh ; sub al, -2 ; call qword ptr [rax]
0x00000000004009a7 : add al, dl ; ret 0x66
0x000000000046a6fb : add al, dl ; xor esp, edi ; call qword ptr [rax]
0x000000000040348a : add al, r13b ; jmp rax
0x000000000040538d : add al, r13b ; ret 0xffff
0x000000000044482e : add bh, al ; add al, 0x25 ; push rax ; ret 0x66
0x000000000045bf9a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000045c1b3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000044d0f4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000408b67 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000408bae : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rcx]
0x0000000000408797 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x00000000004091ad : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x00000000004098a0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x0000000000408fac : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsi
0x0000000000409a07 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x00000000004085ca : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdi]
0x000000000042736a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000040881b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000043426a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004341cb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042c786 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rcx
0x000000000042afb1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rcx]
0x000000000042a587 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rdx]
0x000000000044a6cc : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x000000000042038a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rbx
0x000000000042b044 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000044b441 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000042b0a2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rcx
0x0000000000441139 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041e3f1 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x453ffff], esi ; call rdi
0x00000000004686bf : add bl, bh ; xor ch, byte ptr [rdx] ; ret 0xf718
0x000000000046673f : add bl, dh ; ret
0x0000000000467a2e : add byte ptr [ecx + 0x7f00663d], al ; ret 0xff99
0x0000000000467bde : add byte ptr [r15 + 0x58077722], r8b ; ret
0x0000000000464d02 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000464f64 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000046aaf7 : add byte ptr [rax + 0x69], ch ; stc ; jmp qword ptr [rax]
0x000000000046b393 : add byte ptr [rax + rcx - 0x55a80000], bh ; std ; call rdx
0x000000000046ac7f : add byte ptr [rax - 0x12], dh ; stc ; call rdi
0x0000000000444863 : add byte ptr [rax - 0x39], cl ; add al, 0x25 ; pop rax ; ret 0x66
0x0000000000444768 : add byte ptr [rax - 0x39], cl ; add eax, 0x227aec ; ret
0x000000000041ec48 : add byte ptr [rax - 0x41], cl ; loope 0x41ec36 ; xchg eax, esp ; sub dword ptr [rbx - 6], ebp ; ret
0x000000000042aacf : add byte ptr [rax - 0x41], cl ; ret
0x000000000046a77b : add byte ptr [rax - 0x4e], ah ; cld ; call qword ptr [rax]
0x000000000046a76b : add byte ptr [rax - 0x52], dl ; cld ; call rax
0x000000000046b397 : add byte ptr [rax - 0x56], bl ; std ; call rdx
0x000000000046b237 : add byte ptr [rax - 0x5b], bh ; std ; jmp qword ptr [rbx]
0x000000000046b0a7 : add byte ptr [rax - 0x5f], bh ; cld ; call qword ptr [rdx]
0x00000000004198dd : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000415472 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x466b
0x0000000000401bf2 : add byte ptr [rax - 0x75], cl ; adc al, 0x25 ; clc ; ret 0x66
0x000000000044436a : add byte ptr [rax - 0x75], cl ; add al, 0x25 ; ret 0x66
0x000000000044589b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004452ee : add byte ptr [rax - 0x75], cl ; or al, 0x25 ; pop rax ; ret 0x66
0x00000000004665b1 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000444897 : add byte ptr [rax - 0x77], cl ; add al, 0x25 ; ret 0x66
0x0000000000422022 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042856a : add byte ptr [rax - 0x77], cl ; ret 0x3148
0x0000000000415489 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000401f74 : add byte ptr [rax - 0x77], cl ; sub r8b, -0x5e ; ret
0x000000000046ba2f : add byte ptr [rax], ah ; movsxd rdi, edi ; call qword ptr [rcx]
0x0000000000400dd5 : add byte ptr [rax], al ; add al, al ; ret 0x66
0x0000000000400ded : add byte ptr [rax], al ; add al, cl ; ret 0x66
0x0000000000400e05 : add byte ptr [rax], al ; add al, dl ; ret 0x66
0x000000000044482c : add byte ptr [rax], al ; add bh, al ; add al, 0x25 ; push rax ; ret 0x66
0x000000000045bf98 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000044d0f2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042b042 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000042b0a0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rcx
0x000000000046673d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000046aaf5 : add byte ptr [rax], al ; add byte ptr [rax + 0x69], ch ; stc ; jmp qword ptr [rax]
0x000000000042aacd : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; ret
0x0000000000444368 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0x25 ; ret 0x66
0x00000000004665af : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000042dab9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000428568 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3148
0x0000000000415487 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000400dd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x66
0x0000000000400deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x66
0x0000000000400e03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x66
0x000000000046673b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400dd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x66
0x0000000000400de9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x66
0x0000000000400e01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x66
0x00000000004013d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x66
0x0000000000401419 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x66
0x00000000004013e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x66
0x0000000000401401 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x66
0x00000000004013d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x66
0x000000000040141b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x66
0x00000000004013eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x66
0x0000000000401403 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x66
0x0000000000446a7b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046673c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004013d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x66
0x000000000040141d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x66
0x00000000004013ed : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x66
0x0000000000401405 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x66
0x0000000000466154 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x0000000000452cf7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000042da4e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000042ee02 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000444342 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404d21 : add byte ptr [rax], al ; add byte ptr [rbx + 0x482d8c45], cl ; ret
0x0000000000405203 : add byte ptr [rax], al ; add byte ptr [rbx + 0x492d8c45], cl ; ret
0x0000000000452c61 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000044b8b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004622bc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000044ecf1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x000000000044ec41 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x000000000044e219 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004042aa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040889f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000405d70 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000400959 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x00000000004255bc : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x0000000000464d03 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000464f65 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040e4b1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004009b9 : add byte ptr [rax], al ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x66
0x0000000000425c3f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004475e3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004631e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040897a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041996a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000405d27 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004040b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045daf3 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000046b022 : add byte ptr [rax], al ; add rax, 0x4be80000 ; cld ; jmp qword ptr [rcx]
0x00000000004448db : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000443f60 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044d41d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000462968 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000466047 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040144b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000046ba2e : add byte ptr [rax], al ; and byte ptr [rbx - 1], ah ; call qword ptr [rcx]
0x000000000046b9cf : add byte ptr [rax], al ; and edi, edi ; call qword ptr [rdx]
0x000000000046b026 : add byte ptr [rax], al ; call 0x2246ac7d
0x000000000046b94a : add byte ptr [rax], al ; je 0x46b965 ; add byte ptr [rax], al ; xor dh, 0xfe ; call rbx
0x0000000000401629 : add byte ptr [rax], al ; jmp 0x401469
0x000000000045daef : add byte ptr [rax], al ; jmp 0x45dafe
0x000000000046ac7e : add byte ptr [rax], al ; jo 0x46ac75 ; stc ; call rdi
0x000000000046b0a6 : add byte ptr [rax], al ; js 0x46b050 ; cld ; call qword ptr [rdx]
0x000000000046b236 : add byte ptr [rax], al ; js 0x46b1e4 ; std ; jmp qword ptr [rbx]
0x000000000046b682 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x000000000046ad8e : add byte ptr [rax], al ; loopne 0x46ad3e ; sti ; jmp qword ptr [rcx]
0x000000000046ad8a : add byte ptr [rax], al ; mov ah, 2 ; add byte ptr [rax], al ; loopne 0x46ad42 ; sti ; jmp qword ptr [rcx]
0x000000000046a672 : add byte ptr [rax], al ; mov al, 0x4f ; cli ; call rax
0x000000000046b47f : add byte ptr [rax], al ; mov cl, -3 ; jmp qword ptr [rbx]
0x0000000000464d48 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046b392 : add byte ptr [rax], al ; mov esp, 0x58000008 ; stosb byte ptr [rdi], al ; std ; call rdx
0x000000000046b292 : add byte ptr [rax], al ; mov esp, 0xc8000007 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rdi
0x000000000042daba : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046ac7a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x12], dh ; stc ; call rdi
0x000000000046b47a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov cl, -3 ; jmp qword ptr [rbx]
0x000000000046b57e : add byte ptr [rax], al ; nop ; add dh, bh ; jmp rsi
0x000000000046a602 : add byte ptr [rax], al ; nop ; jb 0x46a605 ; call rax
0x000000000046a6c2 : add byte ptr [rax], al ; nop ; loope 0x46a6c7 ; jmp qword ptr [rax]
0x000000000046a7ea : add byte ptr [rax], al ; nop ; mov ch, -3 ; jmp rax
0x000000000046b396 : add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; std ; call rdx
0x0000000000401bda : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444343 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040432e : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004096e9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046a8e2 : add byte ptr [rax], al ; push rax ; cmp edi, esi ; call rax
0x000000000046a76a : add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000046ba2a : add byte ptr [rax], al ; push rsp ; sldt word ptr [rax] ; and byte ptr [rbx - 1], ah ; call qword ptr [rcx]
0x000000000046673e : add byte ptr [rax], al ; ret
0x00000000004013d7 : add byte ptr [rax], al ; ret 0x66
0x000000000046a682 : add byte ptr [rax], al ; rol byte ptr [rsi], 1 ; sti ; call qword ptr [rax]
0x000000000046a6fa : add byte ptr [rax], al ; sal byte ptr [rcx], 1 ; cld ; call qword ptr [rax]
0x000000000046a8a2 : add byte ptr [rax], al ; sub sil, dil ; call rax
0x000000000046ae36 : add byte ptr [rax], al ; test al, -0x26 ; sti ; call rcx
0x000000000046af46 : add byte ptr [rax], al ; test al, 0x2b ; cld ; call qword ptr [rcx]
0x000000000046a73a : add byte ptr [rax], al ; xor byte ptr [rdx - 4], dl ; call qword ptr [rax]
0x000000000046b94e : add byte ptr [rax], al ; xor dh, 0xfe ; call rbx
0x000000000046b3b7 : add byte ptr [rax], bl ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rbx]
0x000000000040141f : add byte ptr [rax], bl ; ret 0x66
0x000000000046b687 : add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x000000000046a6c0 : add byte ptr [rax], cl ; add byte ptr [rax], al ; nop ; loope 0x46a6c9 ; jmp qword ptr [rax]
0x00000000004013ef : add byte ptr [rax], cl ; ret 0x66
0x000000000046a73b : add byte ptr [rax], dh ; push rdx ; cld ; call qword ptr [rax]
0x0000000000401407 : add byte ptr [rax], dl ; ret 0x66
0x0000000000453b9a : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004009b8 : add byte ptr [rax], r8b ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x66
0x0000000000466156 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x0000000000468d4f : add byte ptr [rbp + 0x2e], ch ; ret
0x0000000000409a53 : add byte ptr [rbp + 1], al ; rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0x5fe8
0x0000000000409900 : add byte ptr [rbp + 1], al ; rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0xb2e8
0x0000000000409aca : add byte ptr [rbp + 1], al ; rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0xe8e8
0x0000000000468e4f : add byte ptr [rbp + 8], bl ; lodsb al, byte ptr [rsi] ; mov ebx, 0xf006b0cc ; ret
0x000000000046b023 : add byte ptr [rbp + rax], cl ; add al, ch ; cld ; jmp qword ptr [rcx]
0x000000000046967f : add byte ptr [rbp - 0x4158e275], ch ; popfq ; ret 0x766e
0x000000000046614c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000046614b : add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x0000000000452cae : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x0000000000452cf9 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000042da50 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000042ee04 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000444344 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040432f : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041f001 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404d23 : add byte ptr [rbx + 0x482d8c45], cl ; ret
0x0000000000405205 : add byte ptr [rbx + 0x492d8c45], cl ; ret
0x00000000004096ea : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004685ef : add byte ptr [rbx - 0x18], bl ; ret 0xd9e9
0x0000000000452c63 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000452c18 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x000000000044b8b5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000044b86a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004622be : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000044ecf3 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x000000000044ec43 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x00000000004685ff : add byte ptr [rbx - 0x64], dl ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000464d49 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000044e21b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000046917f : add byte ptr [rbx], al ; test dword ptr [rdx + 0x1a7c3b68], esi ; ret 0x56fd
0x0000000000445370 : add byte ptr [rcx + 0x250c89c1], cl ; push rax ; ret 0x66
0x0000000000467a2f : add byte ptr [rcx + 0x7f00663d], al ; ret 0xff99
0x00000000004042ac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004088a1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000405d72 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000046ac7b : add byte ptr [rcx + rax - 0x11900000], ah ; stc ; call rdi
0x000000000046b47b : add byte ptr [rcx + rcx - 0x4f000000], ah ; std ; jmp qword ptr [rbx]
0x000000000046772f : add byte ptr [rcx - 0x309e019], dh ; ret
0x0000000000468aef : add byte ptr [rcx - 0x36a149e7], ah ; xchg eax, esi ; ret
0x0000000000405608 : add byte ptr [rcx - 0x773fce39], cl ; ret 0xd088
0x0000000000405607 : add byte ptr [rcx - 0x773fce39], r9b ; ret 0xd088
0x000000000040095b : add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x000000000044d15e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401938 : add byte ptr [rcx], al ; ret
0x00000000004255be : add byte ptr [rcx], al ; ret 0x5589
0x0000000000464d05 : add byte ptr [rcx], al ; ret 0xea81
0x000000000046845f : add byte ptr [rcx], bh ; mov bh, -1 ; jno 0x4684d9 ; jmp rbx
0x00000000004009bd : add byte ptr [rcx], bl ; add al, al ; ret 0x66
0x000000000040095d : add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x00000000004009a5 : add byte ptr [rcx], bl ; add al, dl ; ret 0x66
0x0000000000464f67 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000040e4b3 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004009bb : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x66
0x0000000000400973 : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x00000000004009a3 : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x66
0x0000000000467bdf : add byte ptr [rdi + 0x58077722], al ; ret
0x000000000046b293 : add byte ptr [rdi + rax - 0x59380000], bh ; std ; call rdi
0x000000000046b233 : add byte ptr [rdi + rax], bl ; add byte ptr [rax - 0x5b], bh ; std ; jmp qword ptr [rbx]
0x000000000046ba2b : add byte ptr [rdi + rcx], dl ; add byte ptr [rax], ah ; movsxd rdi, edi ; call qword ptr [rcx]
0x000000000046783f : add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000468dcf : add byte ptr [rdi], al ; ret 0x3fd9
0x00000000004699bf : add byte ptr [rdi], cl ; cmp eax, 0x9b59d4d7 ; ret 0x7982
0x000000000046960f : add byte ptr [rdi], cl ; jmp rax
0x0000000000425c41 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004475e5 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004631ea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040897c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041996c : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000405d29 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004040b3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046ad8b : add byte ptr [rdx + rax - 0x58200000], dh ; sti ; jmp qword ptr [rcx]
0x0000000000405e95 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000467986 : add byte ptr [rdx], bl ; jg 0x467a07 ; ret
0x000000000046a600 : add byte ptr [rip + 0x72900000], al ; stc ; call rax
0x0000000000467cef : add byte ptr [rip - 0x1f8ed3a8], ah ; ret
0x0000000000467cee : add byte ptr [rip - 0x1f8ed3a8], r12b ; ret
0x00000000004685cf : add byte ptr [rip - 0x21754bc3], al ; sbb byte ptr [rsi], dh ; ret 0xe990
0x000000000046a7f8 : add byte ptr [rip - 0x4a100000], cl ; std ; jmp qword ptr [rax]
0x00000000004668ff : add byte ptr [rsi + 0x69], cl ; insb byte ptr [rdi], dx ; jae 0x46692e ; ret
0x0000000000401f73 : add byte ptr es:[rax - 0x77], cl ; sub r8b, -0x5e ; ret
0x0000000000401937 : add byte ptr es:[rcx], al ; ret
0x0000000000405202 : add byte ptr fs:[rax], al ; add byte ptr [rbx + 0x492d8c45], cl ; ret
0x0000000000467b7f : add ch, cl ; push rcx ; xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000467e6f : add cl, bh ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x000000000044126c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044babd : add cl, ch ; ret
0x00000000004025b8 : add cl, ch ; ret 1
0x000000000045c7fa : add cl, ch ; ret 9
0x000000000046823f : add cl, dh ; stosb byte ptr [rdi], al ; ret
0x000000000046b581 : add dh, bh ; jmp rsi
0x0000000000467c78 : add dh, bl ; ret
0x00000000004041d3 : add dword ptr [rax + 0x39], ecx ; inc byte ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x00000000004452c6 : add dword ptr [rax - 0x77], ecx ; add al, 0x25 ; ret 0x66
0x000000000040547f : add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x000000000045dc5b : add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x0000000000427368 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000434af3 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042afaf : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rcx]
0x000000000044b43f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000046ac7d : add dword ptr [rax], eax ; add byte ptr [rax - 0x12], dh ; stc ; call rdi
0x000000000045d80c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040432d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004009a1 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x66
0x00000000004281cd : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000468239 : add dword ptr [rbx], edx ; cmp edi, 0xf1002a4e ; stosb byte ptr [rdi], al ; ret
0x0000000000448274 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebx ; ret 0x8445
0x0000000000427cc1 : add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret 0x8445
0x000000000041ffe7 : add dword ptr [rcx - 0x2f7cb708], ecx ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000402e95 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000464252 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004479de : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000046328e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040de7c : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000400970 : add dword ptr [rdx], 0 ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x0000000000468fa5 : add eax, 0x10d78564 ; ret 0x75a6
0x00000000004447ff : add eax, 0x227a40 ; pop rax ; ret 0x66
0x000000000044476b : add eax, 0x227aec ; ret
0x0000000000401934 : add eax, 0x26a99e ; add ebx, esi ; ret
0x000000000046b025 : add eax, 0x4be80000 ; cld ; jmp qword ptr [rcx]
0x000000000046a601 : add eax, 0x72900000 ; stc ; call rax
0x000000000042d978 : add eax, 0x8b039bdf ; push rbp ; in al, -1 ; ret 0x5589
0x000000000046b0a5 : add eax, 0xa1780000 ; cld ; call qword ptr [rdx]
0x000000000044aafc : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004685d0 : add eax, 0xde8ab43d ; sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000434875 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000420388 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rbx
0x00000000004613e5 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004018fb : add eax, edx ; sar rax, 1 ; jne 0x40190c ; pop rbp ; ret
0x000000000045d949 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000421996 : add ebx, dword ptr [rdx + 0x314c241d] ; ret 0x948
0x0000000000401939 : add ebx, esi ; ret
0x000000000044876e : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000042c685 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call rcx
0x000000000042cc90 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x0000000000419f77 : add edx, dword ptr [rsi + 0x6f] ; jmp 0x41acc2
0x0000000000469a91 : add edx, ebp ; shr bl, 0x60 ; mov al, 0x20 ; push rax ; ret
0x0000000000401cbb : add esp, 0x10 ; pop rbp ; ret
0x000000000044d15c : add esp, 0x100 ; pop rbp ; ret
0x0000000000461d0a : add esp, 0x120 ; pop rbp ; ret
0x000000000045f67a : add esp, 0x1360 ; pop rbp ; ret
0x0000000000406000 : add esp, 0x140 ; pop rbp ; ret
0x0000000000402bd3 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000405676 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000447728 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000443f63 : add esp, 0x20 ; pop rbp ; ret
0x0000000000404b38 : add esp, 0x210 ; pop rbp ; ret
0x0000000000420365 : add esp, 0x310 ; pop rbp ; ret
0x00000000004613e2 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000042afc6 : add esp, 0x3e0 ; pop rbp ; ret
0x000000000044d420 : add esp, 0x40 ; pop rbp ; ret
0x0000000000452769 : add esp, 0x440 ; pop rbp ; ret
0x000000000041a97a : add esp, 0x4d0 ; pop rbp ; ret
0x000000000042b51d : add esp, 0x50 ; pop rbp ; ret
0x000000000044b36c : add esp, 0x5b0 ; pop rbp ; ret
0x000000000044e340 : add esp, 0x60 ; pop rbp ; ret
0x00000000004096e5 : add esp, 0x618 ; pop rbx ; pop rbp ; ret
0x0000000000432a94 : add esp, 0x650 ; pop rbp ; ret
0x0000000000428f9e : add esp, 0x70 ; pop rbp ; ret
0x000000000042f1d4 : add esp, 0x78 ; pop rbp ; ret
0x0000000000401bd6 : add esp, 0x80 ; pop rbp ; ret
0x000000000044da9d : add esp, 0x90 ; pop rbp ; ret
0x0000000000446a36 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401ffe : add esp, 0xb0 ; pop rbp ; ret
0x000000000042bad0 : add esp, 0xc0 ; pop rbp ; ret
0x000000000042f7da : add esp, 0xd0 ; pop rbp ; ret
0x0000000000425fa6 : add esp, 0xd8 ; pop rbp ; ret
0x00000000004034d4 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044fb6f : add esp, 0xf0 ; pop rbp ; ret
0x00000000004288c8 : add esp, 8 ; pop rbp ; ret
0x000000000040144e : add esp, 8 ; ret
0x000000000040432c : add qword ptr [rax], rax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000046b024 : add rax, 0x4be80000 ; cld ; jmp qword ptr [rcx]
0x00000000004018fa : add rax, rdx ; sar rax, 1 ; jne 0x40190d ; pop rbp ; ret
0x000000000045d948 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401cba : add rsp, 0x10 ; pop rbp ; ret
0x000000000044d15b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000461d09 : add rsp, 0x120 ; pop rbp ; ret
0x000000000045f679 : add rsp, 0x1360 ; pop rbp ; ret
0x0000000000405fff : add rsp, 0x140 ; pop rbp ; ret
0x0000000000402bd2 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000405675 : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000447727 : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000443f62 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b37 : add rsp, 0x210 ; pop rbp ; ret
0x0000000000420364 : add rsp, 0x310 ; pop rbp ; ret
0x00000000004613e1 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000042afc5 : add rsp, 0x3e0 ; pop rbp ; ret
0x000000000044d41f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000452768 : add rsp, 0x440 ; pop rbp ; ret
0x000000000041a979 : add rsp, 0x4d0 ; pop rbp ; ret
0x000000000042b51c : add rsp, 0x50 ; pop rbp ; ret
0x000000000044b36b : add rsp, 0x5b0 ; pop rbp ; ret
0x000000000044e33f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004096e4 : add rsp, 0x618 ; pop rbx ; pop rbp ; ret
0x0000000000432a93 : add rsp, 0x650 ; pop rbp ; ret
0x0000000000428f9d : add rsp, 0x70 ; pop rbp ; ret
0x000000000042f1d3 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000401bd5 : add rsp, 0x80 ; pop rbp ; ret
0x000000000044da9c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000446a35 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401ffd : add rsp, 0xb0 ; pop rbp ; ret
0x000000000042bacf : add rsp, 0xc0 ; pop rbp ; ret
0x000000000042f7d9 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000425fa5 : add rsp, 0xd8 ; pop rbp ; ret
0x00000000004034d3 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044fb6e : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004288c7 : add rsp, 8 ; pop rbp ; ret
0x000000000040144d : add rsp, 8 ; ret
0x0000000000464d0d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000444858 : and al, 0xffffffffffffffcc ; sti ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x00000000004479dd : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046328d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000444802 : and al, byte ptr [rax] ; pop rax ; ret 0x66
0x000000000044476e : and al, byte ptr [rax] ; ret
0x000000000042ffb9 : and bl, ch ; ret 0x89b1
0x00000000004685ce : and byte ptr [rax], al ; add eax, 0xde8ab43d ; sbb byte ptr [rsi], dh ; ret 0xe990
0x00000000004685fe : and byte ptr [rax], al ; push rbx ; pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000046861e : and byte ptr [rax], al ; ret
0x00000000004679c9 : and byte ptr [rbp + rsi - 0x4b], ch ; push 0x25e9006d ; call rcx
0x000000000046ba30 : and byte ptr [rbx - 1], ah ; call qword ptr [rcx]
0x0000000000461d0c : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044df4b : and byte ptr [rsi + 0x58], ah ; jb 0x44df82 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000046b669 : and dh, bh ; call rdx
0x0000000000467be1 : and dh, byte ptr [rdi + 7] ; pop rax ; ret
0x0000000000468d4b : and eax, 0x168759 ; insd dword ptr [rdi], dx ; ret
0x00000000004252a2 : and eax, 0x4669f1 ; call 0x401597
0x000000000040538a : and eax, 0x466d36 ; call 0x4015e7
0x00000000004404a1 : and eax, 0x75b4b9d3 ; ret
0x0000000000467cf0 : and eax, 0xe0712c58 ; ret
0x000000000043000d : and ebx, ebp ; ret 0x89b1
0x0000000000432295 : and ebx, ebp ; ret 0x8bb1
0x0000000000432279 : and ebx, ebp ; ret 0xb2b1
0x0000000000466ee0 : and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x0000000000468cea : and edi, dword ptr [rax + 0x16f051] ; movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x468d27 ; ret 0x715e
0x000000000046b9d1 : and edi, edi ; call qword ptr [rdx]
0x00000000004678c7 : and esi, ecx ; int1 ; lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x000000000046b689 : and esi, edi ; call qword ptr [rdx]
0x0000000000467510 : and esp, dword ptr [rdi + 0x58] ; jo 0x4674c7 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x000000000046b028 : call 0x2246ac7b
0x0000000000434b56 : call 0x401567
0x00000000004252a7 : call 0x401592
0x000000000040538f : call 0x4015e2
0x0000000000445365 : call 0x401602
0x000000000041ef56 : call 0x409af7
0x000000000040202e : call 0x42e322
0x000000000044e345 : call 0x44e409
0x0000000000431bfa : call 0x45c6b6
0x00000000004020cd : call 0x466759
0x000000000041a815 : call 0x49043165
0x000000000041a814 : call 0x49043166
0x000000000042b5b6 : call 0x49053f06
0x000000000046285d : call 0xffffffffaca6ea91
0x000000000046285c : call 0xffffffffaca6ea92
0x0000000000448251 : call 0xffffffffb886825d
0x0000000000443f59 : call 0xffffffffe906c8a9
0x0000000000443f58 : call 0xffffffffe906c8aa
0x000000000045f4e4 : call 0xfffffffff77eb7a4
0x000000000042afda : call 0xffffffffffa735ac
0x000000000042afd9 : call 0xffffffffffa735ad
0x000000000040608a : call 0xffffffffffbce65c
0x0000000000406089 : call 0xffffffffffbce65d
0x0000000000466719 : call qword ptr [r12 + rbx*8]
0x0000000000408b6d : call qword ptr [rax]
0x0000000000415149 : call qword ptr [rbx]
0x000000000045ae3c : call qword ptr [rcx]
0x000000000040879d : call qword ptr [rdi]
0x0000000000408518 : call qword ptr [rdx]
0x000000000041e82c : call qword ptr [rsi]
0x000000000046671a : call qword ptr [rsp + rbx*8]
0x000000000040195d : call rax
0x0000000000404bb6 : call rbx
0x000000000040ce70 : call rcx
0x000000000041b9c4 : call rdi
0x000000000040cf15 : call rdx
0x0000000000408fb2 : call rsi
0x0000000000409a0d : call rsp
0x0000000000468f48 : cdq ; call rsi
0x0000000000468f45 : cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x0000000000461d08 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000402bd1 : clc ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000434a14 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000452767 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000044b36a : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x0000000000428f9c : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044d6a7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044f0f9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000046669b : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004018ff : clc ; jne 0x401908 ; pop rbp ; ret
0x000000000041a13f : clc ; lahf ; scasd eax, dword ptr [rdi] ; fsubr dword ptr [rdx + 0x6d] ; ret 0x48ce
0x000000000044589f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000042869a : clc ; pop rbx ; pop rbp ; ret
0x000000000041d082 : clc ; ret
0x0000000000401bef : clc ; ret 0x66
0x0000000000436a2d : clc ; ret 0x77a8
0x000000000045f678 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x0000000000462e9e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044fb6d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000046a6fe : cld ; call qword ptr [rax]
0x000000000046af4a : cld ; call qword ptr [rcx]
0x000000000046af0a : cld ; call qword ptr [rdi]
0x000000000046b0aa : cld ; call qword ptr [rdx]
0x000000000046a72e : cld ; call rax
0x0000000000434b59 : cld ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000434bfc : cld ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000042da7f : cld ; jmp 0x42daec
0x000000000042da7e : cld ; jmp 0x42daed
0x000000000046b02a : cld ; jmp qword ptr [rcx]
0x0000000000469052 : cld ; or eax, 0xe4b786e ; xchg eax, esi ; sbb al, -0x7c ; ret
0x000000000046a766 : cld ; push qword ptr [rax + 0x5000000a] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000046a726 : cld ; push qword ptr [rax - 0xffffff7] ; cld ; call rax
0x000000000046a776 : cld ; push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x4e], ah ; cld ; call qword ptr [rax]
0x000000000046a736 : cld ; push rax ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; push rdx ; cld ; call qword ptr [rax]
0x0000000000467734 : cld ; ret
0x000000000043017a : cld ; stc ; ret
0x00000000004447a3 : cld ; vpsubw xmm1, xmm15, xmmword ptr [rax - 0x73] ; adc al, 0x25 ; pop rax ; ret 0x66
0x000000000046a676 : cli ; call rax
0x000000000044df50 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004478b6 : cli ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000046a66e : cli ; push qword ptr [rax - 0x4ffffffa] ; cli ; call rax
0x000000000040709d : cli ; ret
0x0000000000464d0c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000467ea0 : cmc ; out dx, eax ; std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x000000000044ce6b : cmc ; ret 0x4f0b
0x0000000000401fd4 : cmp al, 0x25 ; clc ; ret 0x66
0x00000000004198e0 : cmp al, 0x25 ; ret
0x0000000000415475 : cmp al, 0x25 ; ret 0x466b
0x000000000042e1fc : cmp al, 0x25 ; ret 0x66
0x0000000000467d2a : cmp al, 0xd ; ret 0x43c5
0x0000000000467517 : cmp bh, byte ptr [rcx] ; ret
0x00000000004686bc : cmp byte ptr [rdi + 0x1f], bl ; add bl, bh ; xor ch, byte ptr [rdx] ; ret 0xf718
0x00000000004678b5 : cmp byte ptr [rdx], ch ; outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x000000000043470a : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x0000000000449225 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x0000000000424ad0 : cmp cl, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x0000000000414893 : cmp cl, byte ptr [rcx - 0x50f0b706] ; ret 0x8b48
0x000000000044d001 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000041489d : cmp dh, -1 ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x00000000004491d1 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x00000000004685d1 : cmp eax, 0x18de8ab4 ; ret 0xe990
0x0000000000424996 : cmp eax, 0x3025148a ; ret 0x66
0x000000000042c661 : cmp eax, 0x3db9edae ; ror dh, 1 ; ret
0x00000000004699c1 : cmp eax, 0x9b59d4d7 ; ret 0x7982
0x000000000045db7d : cmp eax, 0xb8000001 ; ret
0x00000000004018bd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4018d0 ; pop rbp ; ret
0x0000000000467e6e : cmp eax, dword ptr [rax] ; stc ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x00000000004447a5 : cmp ecx, 0x25148d48 ; pop rax ; ret 0x66
0x000000000046823b : cmp edi, 0xf1002a4e ; stosb byte ptr [rdi], al ; ret
0x000000000046a8f5 : cmp edi, esi ; call qword ptr [rax]
0x000000000046a8e5 : cmp edi, esi ; call rax
0x00000000004412f7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004678b4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp byte ptr [rdx], ch ; outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000432d96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000046b299 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rdi
0x00000000004018b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x66
0x000000000046ad91 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rcx]
0x000000000042b60c : dec dword ptr [rax + 0x21] ; ret 0x8948
0x00000000004179a0 : dec dword ptr [rax + 0x21] ; ret 0xb848
0x000000000041ffed : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004653ea : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000040de79 : dec dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000040deaa : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041ea9a : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004327c4 : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000004447fc : dec dword ptr [rax - 0x39] ; add eax, 0x227a40 ; pop rax ; ret 0x66
0x000000000041d593 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc2cb1de1
0x0000000000425488 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc2cb9c98
0x0000000000434b5a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000044488f : dec dword ptr [rax - 0x73] ; add al, 0x25 ; pop rax ; ret 0x66
0x000000000044485b : dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x0000000000401ca0 : dec dword ptr [rax - 0x75] ; adc al, 0x25 ; clc ; ret 0x66
0x00000000004148a0 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x00000000004407fb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000416037 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000401fd1 : dec dword ptr [rax - 0x75] ; cmp al, 0x25 ; clc ; ret 0x66
0x0000000000417a7a : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x46], ecx ; ret
0x0000000000440973 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000456e92 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000401bea : dec dword ptr [rax - 0x75] ; xor al, 0x25 ; clc ; ret 0x66
0x000000000044e07d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000044b5a7 : dec dword ptr [rax - 0x77] ; ret 0x10e8
0x000000000041a4cf : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041a430 : dec dword ptr [rax - 0x77] ; ret 0x3148
0x000000000045d489 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x0000000000457d7d : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x000000000044a74f : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x000000000045734b : dec dword ptr [rax - 0x77] ; ret 0x7ce8
0x000000000040cba3 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000424ad3 : dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x000000000044c13b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004586de : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x000000000044b0a9 : dec dword ptr [rax - 0x77] ; ret 0xee8
0x000000000040d810 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000045c34d : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000458379 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000041e43c : dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004538a9 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000045d3b6 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000042ada6 : dec dword ptr [rbx - 0x3d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000419de8 : dec dword ptr [rbx - 0x4736b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000040f44f : dec dword ptr [rbx - 0xc76b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000415bce : dec dword ptr [rbx - 0xd076b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000416733 : dec dword ptr [rbx - 0xd436b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000044ce66 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040f455 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000415bd4 : dec dword ptr [rdi] ; ret 0x8589
0x00000000004281c9 : dec dword ptr [rdi] ; test ah, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000045319e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x0000000000405b1e : dec dword ptr [rdi] ; test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043670a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040509c : dec dword ptr [rdi] ; test cl, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004520f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000046823c : dec dword ptr [rsi + 0x2a] ; add cl, dh ; stosb byte ptr [rdi], al ; ret
0x000000000044b438 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x0000000000468ffb : div dword ptr [rsi - 0x26] ; adc eax, dword ptr [rax] ; ret
0x0000000000467c77 : enter -0x2200, 0x44 ; ret
0x000000000044ecf6 : enter -0x62d3, 0x51 ; ret 0x8929
0x000000000044ec46 : enter -0x63d3, 0x51 ; ret 0x8929
0x000000000042201f : enter -0x74b8, 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408c76 : enter -0x74b8, 0x75 ; mov eax, 0x81b4558b ; ret 0xd48f
0x0000000000434bfb : enter -4, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000041ee80 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004580f0 : enter 0xf41, -0x6b ; ret 0x8445
0x000000000042f5f9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428d4f : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425fa8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000468ff9 : fcom qword ptr [rdi + rsi*8] ; jbe 0x468fdf ; adc eax, dword ptr [rax] ; ret
0x00000000004679f5 : ficom dword ptr [rcx - 0x74] ; ret 0x4b96
0x00000000004685d4 : ficomp word ptr [rax] ; ret 0xe990
0x0000000000467c75 : fidivr dword ptr [rdi - 0x38] ; add dh, bl ; ret
0x000000000040e637 : fimul dword ptr [rdx - 0x763f7695] ; ret 0x8948
0x0000000000426f6e : fisttp dword ptr [rax + 0x21] ; ret 0xbb49
0x00000000004632c8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041a0df : fmul dword ptr [r15] ; xchg eax, edx ; ret 0xe280
0x000000000042fbb1 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000461fa7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041a13c : fmul dword ptr [rax - 0x47] ; clc ; lahf ; scasd eax, dword ptr [rdi] ; fsubr dword ptr [rdx + 0x6d] ; ret 0x48ce
0x000000000042fbb2 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000465ad2 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000461fa8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000041a0e0 : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000046671c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000468602 : fsub qword ptr [rcx] ; ret 0xc591
0x000000000041a142 : fsubr dword ptr [rdx + 0x6d] ; ret 0x48ce
0x0000000000458014 : fsubr st(1) ; ret
0x000000000042b041 : hlt ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000401cb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046250c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004351f1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004018d0 : hlt ; pop rbp ; mov edi, 0x66c2a0 ; jmp rax
0x0000000000467ea8 : hlt ; ret
0x0000000000467733 : idiv ah ; ret
0x000000000046b951 : idiv dh ; call rbx
0x0000000000467dc6 : idiv dword ptr [rbx - 0x54abd34f] ; ret 0x3f90
0x000000000044e07b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000044ad31 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000466edc : imul edx, dword ptr [rbx + 0x75], 0xedcb211f ; xlatb ; pop rcx ; ret
0x0000000000468c30 : imul edx, ebp, 0xd17237d ; ret 0x399f
0x000000000040ef26 : imul esp, dword ptr [rsp + rsi*8 + 0x48606ce2], 0x29 ; ret 0x8b48
0x0000000000415fdb : imul esp, ecx, -0x47 ; ret
0x0000000000415fda : imul r12, r9, -0x47 ; ret
0x000000000045db7b : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x000000000042d97e : in al, -1 ; ret 0x5589
0x0000000000453996 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000465d92 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000044f4b1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000467ea7 : in al, dx ; hlt ; ret
0x0000000000453446 : in al, dx ; jmp 0x453a86
0x0000000000453445 : in al, dx ; jmp 0x453a87
0x000000000046291c : in al, dx ; jmp 0x462999
0x000000000046291b : in al, dx ; jmp 0x46299a
0x0000000000402e9b : in al, dx ; pop rbp ; ret
0x00000000004682ba : in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x000000000041b98a : in eax, -0x25 ; ret
0x0000000000467985 : in eax, 0 ; sbb bh, byte ptr [rdi + 0x79] ; ret
0x0000000000469410 : in eax, 0x7e ; ret 0x92d
0x000000000044b2df : in eax, dx ; jge 0x44b286 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000040202f : in eax, dx ; ret 2
0x0000000000467ea5 : in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000466ee2 : in eax, dx ; xlatb ; pop rcx ; ret
0x00000000004042a8 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004041d6 : inc byte ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x000000000046772d : inc ch ; add byte ptr [rcx - 0x309e019], dh ; ret
0x0000000000426cd6 : inc dword ptr [rax + rsi*8 - 0x6d] ; xor ebp, ecx ; ret
0x0000000000419968 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041e7f5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046a5ff : inc dword ptr [rax] ; add eax, 0x72900000 ; stc ; call rax
0x000000000046a7f7 : inc dword ptr [rax] ; or eax, 0xb5f00000 ; std ; jmp qword ptr [rax]
0x000000000040d42c : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x00000000004027c0 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000045edaa : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000402dfe : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000045ef67 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x000000000041e06a : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044aceb : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434bfd : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000466903 : insb byte ptr [rdi], dx ; jae 0x46692a ; ret
0x0000000000466902 : insb byte ptr [rdi], dx ; jae 0x46692b ; ret
0x0000000000467515 : insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x000000000040538c : insd dword ptr [rdi], dx ; add al, r13b ; ret 0xffff
0x0000000000405606 : insd dword ptr [rdi], dx ; add byte ptr [rcx - 0x773fce39], r9b ; ret 0xd088
0x0000000000468d50 : insd dword ptr [rdi], dx ; ret
0x000000000041a144 : insd dword ptr [rdi], dx ; ret 0x48ce
0x0000000000467d26 : insd dword ptr [rdi], dx ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000446407 : int 0x5b
0x00000000004678bb : int 0x80
0x0000000000467ced : int1 ; add byte ptr [rip - 0x1f8ed3a8], r12b ; ret
0x00000000004678c9 : int1 ; lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000468e90 : int1 ; pop rsi ; mov ebp, 0xbc7504e3 ; ret
0x0000000000468018 : int1 ; sar byte ptr [rcx + 0xe], -0x7b ; ret
0x0000000000468240 : int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004018c3 : ja 0x4018ca ; pop rbp ; ret
0x0000000000432e27 : ja 0x432e0e ; ret 0x8974
0x0000000000467b85 : ja 0x467b75 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000467bd1 : ja 0x467b90 ; ret 0x206d
0x0000000000467be2 : ja 0x467bee ; pop rax ; ret
0x0000000000401449 : jae 0x401455 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000466904 : jae 0x466929 ; ret
0x000000000043299e : jb 0x4329d2 ; jl 0x43295f ; ret 0x8237
0x000000000044df4e : jb 0x44df7f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000046a605 : jb 0x46a602 ; call rax
0x000000000042f0bd : jbe 0x42f096 ; adc ch, cl ; ret
0x00000000004566cd : jbe 0x45668c ; push rcx ; jmp rsp
0x00000000004566cc : jbe 0x45668d ; push rcx ; jmp rsp
0x0000000000468ffc : jbe 0x468fdc ; adc eax, dword ptr [rax] ; ret
0x00000000004018cf : je 0x4018cd ; pop rbp ; mov edi, 0x66c2a0 ; jmp rax
0x000000000042273c : je 0x422736 ; ret 0x89a0
0x000000000046b94c : je 0x46b963 ; add byte ptr [rax], al ; xor dh, 0xfe ; call rbx
0x0000000000467988 : jg 0x467a05 ; ret
0x0000000000467c76 : jg 0x467c45 ; add dh, bl ; ret
0x0000000000430179 : jge 0x43017a ; stc ; ret
0x0000000000431bf8 : jge 0x431b82 ; call 0x45c6b8
0x000000000043f896 : jge 0x43f81b ; ret 0xffd5
0x0000000000440360 : jge 0x440340 ; shr cl, cl ; ret 0x3b
0x000000000044b2e0 : jge 0x44b285 ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004329a0 : jl 0x43295d ; ret 0x8237
0x000000000043299f : jl 0x43295e ; ret 0x8237
0x000000000045fd57 : jl 0x45fd21 ; ret
0x0000000000460b20 : jl 0x460aea ; ret
0x0000000000468cf1 : jl 0x468d20 ; ret 0x715e
0x0000000000469185 : jl 0x4691a3 ; ret 0x56fd
0x00000000004301cd : jle 0x4301ce ; stc ; ret
0x0000000000432531 : jle 0x432532 ; stc ; ret
0x000000000040162b : jmp 0x401467
0x0000000000402962 : jmp 0x402c01
0x0000000000405edb : jmp 0x406056
0x000000000040602c : jmp 0x406058
0x000000000040602b : jmp 0x406059
0x00000000004087a2 : jmp 0x409ae9
0x0000000000415a7d : jmp 0x4180c7
0x0000000000416212 : jmp 0x4180c8
0x000000000041546e : jmp 0x4180c9
0x0000000000419f7a : jmp 0x41acbf
0x00000000004198d9 : jmp 0x41acc2
0x000000000041e6c7 : jmp 0x41f546
0x000000000042195f : jmp 0x422270
0x0000000000424d81 : jmp 0x42556b
0x0000000000424352 : jmp 0x42556e
0x000000000042ba74 : jmp 0x42bae5
0x000000000042da80 : jmp 0x42daeb
0x0000000000432748 : jmp 0x432d32
0x0000000000440ab0 : jmp 0x443f30
0x000000000043e9b4 : jmp 0x443f31
0x000000000043fd81 : jmp 0x443f32
0x000000000044482a : jmp 0x4448b0
0x000000000044c28b : jmp 0x44ccf7
0x000000000044c1c8 : jmp 0x44ccf9
0x000000000044c10b : jmp 0x44ccfa
0x000000000044e2f3 : jmp 0x44e358
0x0000000000452606 : jmp 0x4528e8
0x0000000000453447 : jmp 0x453a85
0x00000000004539c3 : jmp 0x453a87
0x0000000000453e4b : jmp 0x453de1
0x000000000045daf1 : jmp 0x45dafc
0x000000000045db7c : jmp 0x45dcc4
0x000000000045f058 : jmp 0x45f7e3
0x0000000000460f9e : jmp 0x461611
0x0000000000460b1a : jmp 0x461613
0x000000000046291d : jmp 0x462998
0x0000000000465af3 : jmp 0x465bcc
0x000000000044ce6a : jmp 0x4f509166
0x000000000040547e : jmp 0xffffffffc2c99c88
0x000000000040cf39 : jmp 0xffffffffc2ca1781
0x000000000040e28c : jmp 0xffffffffc2ca2ad4
0x0000000000415ed2 : jmp 0xffffffffc2caa6dc
0x000000000041999d : jmp 0xffffffffc2cae1a7
0x000000000041d596 : jmp 0xffffffffc2cb1dde
0x00000000004218e7 : jmp 0xffffffffc2cb60f1
0x0000000000421ccb : jmp 0xffffffffc2cb64d5
0x0000000000421eb2 : jmp 0xffffffffc2cb66bc
0x000000000042548b : jmp 0xffffffffc2cb9c95
0x000000000042a886 : jmp 0xffffffffc2cbf090
0x0000000000403dfc : jmp qword ptr [rax]
0x000000000041dd68 : jmp qword ptr [rbx]
0x0000000000402e60 : jmp qword ptr [rcx]
0x00000000004085d0 : jmp qword ptr [rdi]
0x000000000040644d : jmp qword ptr [rdx]
0x0000000000468dc8 : jmp qword ptr [rip + 0xefe30c5]
0x000000000042228f : jmp qword ptr [rsi]
0x00000000004018d7 : jmp rax
0x00000000004175be : jmp rbx
0x000000000040e8f8 : jmp rcx
0x0000000000415e76 : jmp rdi
0x0000000000401917 : jmp rdx
0x000000000040d966 : jmp rsi
0x0000000000408821 : jmp rsp
0x0000000000401900 : jne 0x401907 ; pop rbp ; ret
0x000000000041ef54 : jne 0x41ef1f ; call 0x409af9
0x0000000000422790 : jne 0x42278a ; ret 0x89a0
0x0000000000424f59 : jne 0x424f53 ; ret 0xb2a0
0x0000000000424f75 : jne 0x424f6f ; ret 0x48a0
0x0000000000466ede : jne 0x466f06 ; and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x000000000046783c : jne 0x46789f ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000468399 : jne 0x468325 ; pop rdi ; ret 0x2692
0x0000000000468e96 : jne 0x468e57 ; ret
0x0000000000447b6f : jno 0x447bbe ; ret
0x0000000000447bc3 : jno 0x447c12 ; ret
0x0000000000448257 : jno 0x4482a6 ; ret
0x0000000000467cf3 : jno 0x467cd7 ; ret
0x0000000000468463 : jno 0x4684d5 ; jmp rbx
0x000000000045fd03 : jnp 0x45fccd ; ret
0x0000000000468f47 : jns 0x468ee4 ; call rsi
0x0000000000428fa0 : jo 0x429001 ; ret
0x00000000004397ae : jo 0x4397ba ; ret
0x000000000043b41e : jo 0x43b42a ; ret
0x000000000043e96d : jo 0x43e979 ; ret
0x0000000000445c54 : jo 0x445cb5 ; ret
0x000000000044edbb : jo 0x44ee1c ; ret
0x000000000046604c : jo 0x4660ad ; ret
0x0000000000467513 : jo 0x4674c4 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x000000000046ac80 : jo 0x46ac73 ; stc ; call rdi
0x00000000004687d5 : jrcxz 0x468795 ; ret
0x0000000000468e94 : jrcxz 0x468e9f ; jne 0x468e59 ; ret
0x000000000042f1d6 : js 0x42f237 ; ret
0x0000000000432277 : js 0x432236 ; and ebx, ebp ; ret 0xb2b1
0x0000000000433f37 : js 0x433f1e ; ret 0x8974
0x0000000000434636 : js 0x43461d ; ret 0x8a74
0x000000000043465c : js 0x434643 ; ret 0xe974
0x000000000046b0a8 : js 0x46b04e ; cld ; call qword ptr [rdx]
0x000000000046b238 : js 0x46b1e2 ; std ; jmp qword ptr [rbx]
0x0000000000467d29 : lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000467e73 : lahf ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x23b4
0x000000000041a140 : lahf ; scasd eax, dword ptr [rdi] ; fsubr dword ptr [rdx + 0x6d] ; ret 0x48ce
0x000000000044035e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004141e0 : lcall ptr [rcx - 0x72] ; ret 0xe97f
0x0000000000457841 : lcall ptr [rsi - 7] ; ret 0xe980
0x000000000044145e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000456884 : lea eax, dword ptr [rax - 0x17000007] ; ret 0xfaac
0x000000000042e286 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405388 : lea ecx, dword ptr [0x466d36] ; call 0x4015e9
0x00000000004252a0 : lea edi, dword ptr [0x4669f1] ; call 0x401599
0x0000000000431bf7 : lea edi, dword ptr [rbp - 0x80] ; call 0x45c6b9
0x00000000004272e6 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000445f49 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428698 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000468243 : lea esp, dword ptr [rsi + rdi*4 - 0x53] ; ret 0xdf32
0x00000000004272e5 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000428697 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000468af4 : leave ; xchg eax, esi ; ret
0x0000000000417e33 : ljmp ptr [rdi + 0x25] ; ret
0x000000000045c4d1 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x000000000043ecbe : ljmp ptr [rdi] ; ret 0x23da
0x000000000046a738 : lock or dword ptr [rax], eax ; add byte ptr [rax], dh ; push rdx ; cld ; call qword ptr [rax]
0x00000000004678ca : lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000468e52 : lodsb al, byte ptr [rsi] ; mov ebx, 0xf006b0cc ; ret
0x000000000046b684 : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x0000000000467841 : lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000000000046b3b9 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rbx]
0x0000000000469680 : lodsd eax, dword ptr [rsi] ; mov ebx, dword ptr [rip - 0x620d4159] ; ret 0x766e
0x0000000000467e74 : lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x23b4
0x0000000000468246 : lodsd eax, dword ptr [rsi] ; ret 0xdf32
0x0000000000445360 : loop 0x44536d ; mov rdi, rax ; call 0x401607
0x0000000000402e94 : loope 0x402ea0 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415fdc : loope 0x415f99 ; ret
0x0000000000417349 : loope 0x417355 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ec4b : loope 0x41ec33 ; xchg eax, esp ; sub dword ptr [rbx - 6], ebp ; ret
0x000000000041ec5b : loope 0x41ec43 ; xchg eax, esp ; sub dword ptr [rbx - 6], ebp ; ret
0x0000000000441cc5 : loope 0x441c93 ; jmp 0x443f33
0x000000000046a6c5 : loope 0x46a6c4 ; jmp qword ptr [rax]
0x00000000004034d6 : loopne 0x4034dd ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405d25 : loopne 0x405d30 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000408978 : loopne 0x408981 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e505 : loopne 0x40e56b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f52f : loopne 0x40f536 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041cb5e : loopne 0x41cbc6 ; ret
0x000000000041db6e : loopne 0x41dbd6 ; ret
0x000000000041db8a : loopne 0x41dbf2 ; ret
0x000000000041ec4c : loopne 0x41ebe7 ; sub dword ptr [rbx - 6], ebp ; ret
0x000000000041ec5c : loopne 0x41ebf7 ; sub dword ptr [rbx - 6], ebp ; ret
0x000000000042a4cc : loopne 0x42a4d5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042afc8 : loopne 0x42afd2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434a18 : loopne 0x434a22 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004360a3 : loopne 0x4360f6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044564d : loopne 0x4456b3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000446a34 : loopne 0x446a87 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000044772a : loopne 0x447732 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044d9b3 : loopne 0x44d9bc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044e33e : loopne 0x44e38e ; add esp, 0x60 ; pop rbp ; ret
0x000000000044e33d : loopne 0x44e38f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000462510 : loopne 0x462517 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462ea2 : loopne 0x462ea9 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464d4c : loopne 0x464d9b ; mov esp, ebp ; pop rbp ; ret
0x0000000000464d4b : loopne 0x464d9c ; mov esp, ebp ; pop rbp ; ret
0x0000000000464f9c : loopne 0x464feb ; mov esp, ebp ; pop rbp ; ret
0x0000000000464f9b : loopne 0x464fec ; mov esp, ebp ; pop rbp ; ret
0x0000000000465b45 : loopne 0x465b4c ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046ad90 : loopne 0x46ad3c ; sti ; jmp qword ptr [rcx]
0x000000000043f88d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043f967 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004685d2 : mov ah, -0x76 ; ficomp word ptr [rax] ; ret 0xe990
0x0000000000408948 : mov ah, -0x77 ; ret 0xca29
0x0000000000408c7d : mov ah, -0x7f ; ret 0xd48f
0x00000000004040af : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043d915 : mov ah, 0x75 ; ret
0x000000000046ad8c : mov ah, 2 ; add byte ptr [rax], al ; loopne 0x46ad40 ; sti ; jmp qword ptr [rcx]
0x0000000000467402 : mov ah, byte ptr [rax - 0x34115b1f] ; ret
0x00000000004682b8 : mov al, -0x11 ; in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x0000000000468a1c : mov al, -0x1c ; sbb dword ptr [rax], eax ; ret
0x0000000000446423 : mov al, -0x47 ; ret
0x0000000000451dcf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000402000 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046a8e0 : mov al, 0x10 ; add byte ptr [rax], al ; push rax ; cmp edi, esi ; call rax
0x0000000000469a96 : mov al, 0x20 ; push rax ; ret
0x000000000046a674 : mov al, 0x4f ; cli ; call rax
0x000000000046a768 : mov al, 0xa ; add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000046a8a0 : mov al, 0xf ; add byte ptr [rax], al ; sub sil, dil ; call rax
0x0000000000405678 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044b36e : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046a670 : mov al, 6 ; add byte ptr [rax], al ; mov al, 0x4f ; cli ; call rax
0x00000000004635bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046328a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004634ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000468461 : mov bh, -1 ; jno 0x4684d7 ; jmp rbx
0x0000000000453ff5 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403dfa : mov bl, -0x7f ; jmp qword ptr [rax]
0x0000000000416359 : mov bl, 0x5f ; jmp 0x4180c9
0x00000000004372b5 : mov bl, 0x75 ; ret
0x00000000004685d3 : mov bl, dh ; sbb byte ptr [rsi], dh ; ret 0xe990
0x000000000040dd46 : mov byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004342ef : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401933 : mov byte ptr [rip + 0x26a99e], 1 ; ret
0x000000000046a7fd : mov ch, -3 ; jmp qword ptr [rax]
0x000000000046b4c1 : mov ch, -3 ; jmp qword ptr [rcx]
0x000000000046a7ed : mov ch, -3 ; jmp rax
0x000000000043f10f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000468f43 : mov cl, -0x63 ; cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x000000000046a7bd : mov cl, -3 ; jmp qword ptr [rax]
0x000000000046b481 : mov cl, -3 ; jmp qword ptr [rbx]
0x00000000004678cb : mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000467dc8 : mov cl, 0x2c ; push rsp ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x0000000000402e97 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000464254 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004479e0 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000463290 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042ba72 : mov dh, 0x3a ; jmp 0x42bae7
0x0000000000468af2 : mov dh, 0x5e ; leave ; xchg eax, esi ; ret
0x0000000000464d0a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000046a77d : mov dl, -4 ; call qword ptr [rax]
0x0000000000467b84 : mov dr0, word ptr [rdi - 0x15] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000463f81 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000435829 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004353ff : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000046291a : mov dword ptr [rbp - 0x14], eax ; jmp 0x46299b
0x000000000045db79 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x45dcc7
0x0000000000405ef1 : mov dword ptr [rbp - 0x2c], eax ; jmp 0x406059
0x000000000044c288 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x44ccfa
0x0000000000402028 : mov dword ptr [rbp - 0xa0], eax ; call 0x42e328
0x0000000000401cb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000435b06 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045d94c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000446a78 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0x00000000004478b4 : mov dword ptr [rdx + rdi*8], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004356ad : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000468ceb : mov eax, 0x16f051 ; movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x468d26 ; ret 0x715e
0x0000000000408c7a : mov eax, 0x81b4558b ; ret 0xd48f
0x00000000004685fd : mov eax, 0x9c530020 ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000409a04 : mov eax, 0xc700023d ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x000000000041a14e : mov eax, 0xd8af9ff8 ; push 0x6d ; ret 0x48ce
0x0000000000422021 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e1bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000461f44 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428694 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000458245 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e38e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042b519 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000462795 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043582c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000465d90 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044e33c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000464d4a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f1d0 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x00000000004356af : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004288c4 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 8 ; pop rbp ; ret
0x00000000004351ef : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000428f9a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044589d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004356ae : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000042d9af : mov ebp, 0x48ffff7b ; add esp, 0x50 ; pop rbp ; ret
0x0000000000468e93 : mov ebp, 0xbc7504e3 ; ret
0x00000000004420c8 : mov ebp, 0xe19c53ba ; ret
0x000000000040195b : mov ebp, esp ; call rax
0x00000000004018c1 : mov ebp, esp ; ja 0x4018cc ; pop rbp ; ret
0x0000000000467984 : mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x467a09 ; ret
0x0000000000467dc7 : mov ebx, 0xab542cb1 ; ret 0x3f90
0x0000000000434267 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000468e53 : mov ebx, 0xf006b0cc ; ret
0x0000000000469681 : mov ebx, dword ptr [rip - 0x620d4159] ; ret 0x766e
0x000000000045ef6b : mov ecx, 0xba41a9ee ; ret
0x000000000041a13e : mov ecx, 0xd8af9ff8 ; push 0x6d ; ret 0x48ce
0x00000000004353fc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468dfb : mov ecx, edi ; ret
0x00000000004566af : mov edi, 0x51b94936 ; jmp rsp
0x0000000000401955 : mov edi, 0x66be20 ; mov rbp, rsp ; call rax
0x00000000004018d2 : mov edi, 0x66c2a0 ; jmp rax
0x0000000000401912 : mov edi, 0x66c2a0 ; jmp rdx
0x00000000004678b3 : mov edi, 0x6f2a38a6 ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x000000000044e40c : mov edi, 0x8b0046a4 ; add al, 0x25 ; ret 0x66
0x000000000043e967 : mov edi, 0xb8000055 ; wait ; jo 0x43e97f ; ret
0x0000000000445363 : mov edi, eax ; call 0x401604
0x0000000000466717 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000466716 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040cbbf : mov edx, 0x366326ea ; ret
0x000000000045257e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043f12b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041d83d : mov edx, 0xdbe6b921 ; ret
0x000000000040cbaf : mov esi, 0x366326ea ; ret
0x000000000043ffa2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000452567 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401910 : mov esi, eax ; mov edi, 0x66c2a0 ; jmp rdx
0x0000000000459397 : mov esi, es ; ret
0x000000000046b394 : mov esp, 0x58000008 ; stosb byte ptr [rdi], al ; std ; call rdx
0x000000000046b294 : mov esp, 0xc8000007 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rdi
0x0000000000405e8e : mov esp, 0xdc253c81 ; ret 0x66
0x0000000000424f56 : mov esp, 0xf675b955 ; ret 0xb2a0
0x0000000000424f72 : mov esp, 0xf675b9bf ; ret 0x48a0
0x0000000000416736 : mov esp, 0xffffff2 ; ret 0x8589
0x0000000000402e9a : mov esp, ebp ; pop rbp ; ret
0x0000000000402027 : mov qword ptr [rbp - 0xa0], rax ; call 0x42e329
0x0000000000435b05 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045d94b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000446a77 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0x00000000004478b3 : mov qword ptr [rdx + rdi*8], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408947 : mov r12b, -0x77 ; ret 0xca29
0x0000000000422020 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e1ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000461f43 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000458244 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e38d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042b518 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044e33b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042f1cf : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x00000000004288c3 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 8 ; pop rbp ; ret
0x0000000000428f99 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044589c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040195a : mov rbp, rsp ; call rax
0x00000000004018c0 : mov rbp, rsp ; ja 0x4018cd ; pop rbp ; ret
0x0000000000445362 : mov rdi, rax ; call 0x401605
0x000000000040190f : mov rsi, rax ; mov edi, 0x66c2a0 ; jmp rdx
0x0000000000402e99 : mov rsp, rbp ; pop rbp ; ret
0x000000000044df51 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000420363 : movabs al, byte ptr [0x5d00000310c48148] ; ret
0x0000000000413d05 : movabs al, byte ptr [0x8348e28948fffffe] ; ret 0x48f0
0x00000000004288a0 : movabs al, byte ptr [0x8948d62948c68948] ; ret 0x2948
0x0000000000404236 : movabs al, byte ptr [0x920f41fe3948d789] ; ret
0x0000000000417a77 : movabs al, byte ptr [0xba48098b48fffffe] ; ret
0x000000000041d894 : movabs al, byte ptr [0xdbe6fffffeb485c7] ; ret
0x00000000004454e7 : movabs byte ptr [0x4025148d48fa0853], al ; ret
0x000000000046112b : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x000000000043ac08 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000041e79a : movabs byte ptr [0xfffeb485c700000d], al ; call qword ptr [rdi]
0x0000000000401f72 : movabs dword ptr [0xa2e8804589480026], eax ; ret
0x000000000046ac7c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x12], dh ; stc ; call rdi
0x000000000046b47c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov cl, -3 ; jmp qword ptr [rbx]
0x000000000043de55 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000405ed9 : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; jmp 0x406058
0x0000000000405ed8 : movsb byte ptr [rdi], byte ptr ss:[rsi] ; scasb al, byte ptr [rdi] ; jmp 0x406059
0x000000000046614a : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x00000000004566cb : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x45668e ; push rcx ; jmp rsp
0x0000000000468cf0 : movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x468d21 ; ret 0x715e
0x0000000000449162 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004307b6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000431ed5 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x0000000000467b87 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x000000000046b239 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rbx]
0x000000000046ba31 : movsxd rdi, edi ; call qword ptr [rcx]
0x0000000000464253 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004479df : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046328f : movzx eax, al ; pop rbp ; ret
0x0000000000402e96 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000452378 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000046b580 : nop ; add dh, bh ; jmp rsi
0x000000000046a604 : nop ; jb 0x46a603 ; call rax
0x000000000046a6c4 : nop ; loope 0x46a6c5 ; jmp qword ptr [rax]
0x000000000046a7ec : nop ; mov ch, -3 ; jmp rax
0x00000000004370f5 : nop ; ret
0x0000000000445502 : nop ; ret 0x148
0x0000000000445516 : nop ; ret 0x2948
0x0000000000466738 : nop dword ptr [rax + rax] ; ret
0x000000000044a9b1 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000452da1 : or al, 0 ; add cl, ch ; ret
0x0000000000405389 : or al, 0x25 ; insd dword ptr [rdi], dx ; add al, r13b ; ret 0xffff
0x00000000004452f1 : or al, 0x25 ; pop rax ; ret 0x66
0x0000000000445322 : or al, 0x25 ; push rax ; ret 0x66
0x000000000043f88a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043f964 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000466147 : or al, 0xffffffffffffff95 ; shl byte ptr [rbp - 0x76baffba], 1 ; ret 0x8141
0x00000000004341c9 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000044abf5 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000046a779 : or al, byte ptr [rax] ; add byte ptr [rax - 0x4e], ah ; cld ; call qword ptr [rax]
0x000000000046a769 : or al, byte ptr [rax] ; add byte ptr [rax - 0x52], dl ; cld ; call rax
0x000000000046b4fd : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004580ed : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x000000000042d688 : or al, ch ; ret 0xff1e
0x000000000040dead : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000419999 : or byte ptr [r8 - 0x3f], 0xe9 ; add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x00000000004574b7 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004653dc : or byte ptr [rax + 0x69], cl ; ret 0x101
0x000000000041999a : or byte ptr [rax - 0x3f], 0xe9 ; add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x00000000004574b8 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000435400 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046a6f9 : or byte ptr [rax], al ; add al, dl ; xor esp, edi ; call qword ptr [rax]
0x000000000046b395 : or byte ptr [rax], al ; add byte ptr [rax - 0x56], bl ; std ; call rdx
0x000000000046b3b5 : or byte ptr [rax], al ; add byte ptr [rax], bl ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rbx]
0x000000000044b868 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040eeac : or byte ptr [rbx + 0x12d11], 0 ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000468e51 : or byte ptr [rbx + rdi*4 - 0xff94f34], ch ; ret
0x000000000040888b : or byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8041
0x000000000040deae : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042f9ac : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x0000000000465f9c : or cl, ch ; ret 0
0x0000000000467d24 : or dl, byte ptr [rsi + 0x6d] ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x000000000040cf36 : or dword ptr [rax - 0x3f], ecx ; jmp 0xffffffffc2ca1784
0x000000000040e289 : or dword ptr [rax - 0x3f], ecx ; jmp 0xffffffffc2ca2ad7
0x0000000000415ecf : or dword ptr [rax - 0x3f], ecx ; jmp 0xffffffffc2caa6df
0x00000000004218e4 : or dword ptr [rax - 0x3f], ecx ; jmp 0xffffffffc2cb60f4
0x0000000000421cc8 : or dword ptr [rax - 0x3f], ecx ; jmp 0xffffffffc2cb64d8
0x0000000000421eaf : or dword ptr [rax - 0x3f], ecx ; jmp 0xffffffffc2cb66bf
0x0000000000417a7d : or dword ptr [rax - 0x46], ecx ; ret
0x0000000000440976 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000435b04 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046a729 : or dword ptr [rax], eax ; add al, dh ; cld ; call rax
0x00000000004091ab : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x0000000000434268 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000046b47d : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov cl, -3 ; jmp qword ptr [rbx]
0x000000000046a739 : or dword ptr [rax], eax ; add byte ptr [rax], dh ; push rdx ; cld ; call qword ptr [rax]
0x0000000000469b0e : or eax, 0x28844f00 ; ret 0xdf30
0x000000000046a7f9 : or eax, 0xb5f00000 ; std ; jmp qword ptr [rax]
0x000000000044abf4 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000432025 : or eax, 0xc8b80000 ; ret 0xdbca
0x000000000044a870 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000469053 : or eax, 0xe4b786e ; xchg eax, esi ; sbb al, -0x7c ; ret
0x0000000000408faa : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsi
0x000000000042a585 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rdx]
0x000000000044aafd : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000044c10d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000046b685 : or eax, dword ptr [rax] ; add byte ptr [rax], ch ; and esi, edi ; call qword ptr [rdx]
0x00000000004685fc : or edi, dword ptr [rax - 0x63acffe0] ; fsub qword ptr [rcx] ; ret 0xc591
0x00000000004356ab : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041c9ba : out -0x25, al ; ret
0x0000000000467d28 : out -0x61, al ; cmp al, 0xd ; ret 0x43c5
0x0000000000467731 : out 0x1f, eax ; idiv ah ; ret
0x000000000046861c : out 0x7d, eax ; and byte ptr [rax], al ; ret
0x000000000044126b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000046328c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415fd9 : out dx, al ; imul r12, r9, -0x47 ; ret
0x000000000046ac81 : out dx, al ; stc ; call rdi
0x00000000004635bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000467516 : out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x00000000004682b9 : out dx, eax ; in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x0000000000446422 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000467842 : out dx, eax ; ret
0x0000000000467ea1 : out dx, eax ; std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000452569 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000468464 : outsb dx, byte ptr [rsi] ; jmp rbx
0x0000000000442355 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000436fa6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004423a0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000044d0f1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000467ea4 : outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000419f79 : outsd dx, dword ptr [rsi] ; jmp 0x41acc0
0x000000000045256c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004678b7 : outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x000000000046783b : pcmpeqw mm3, qword ptr [rdx - 0x69] ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000000000044df4c : pop ax ; jb 0x44df81 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000427de2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046672c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e507 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427de4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046672e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e509 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000466730 : pop r14 ; pop r15 ; ret
0x0000000000404331 : pop r14 ; pop rbp ; ret
0x000000000040e50b : pop r15 ; pop rbp ; ret
0x0000000000466732 : pop r15 ; ret
0x000000000044df4d : pop rax ; jb 0x44df80 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000467512 : pop rax ; jo 0x4674c5 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000467511 : pop rax ; jo 0x4674c6 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000467be4 : pop rax ; ret
0x0000000000467e75 : pop rax ; ret 0x23b4
0x00000000004053de : pop rax ; ret 0x49b9
0x000000000040568f : pop rax ; ret 0x49e9
0x00000000004447ab : pop rax ; ret 0x66
0x0000000000404f05 : pop rax ; ret 0x8589
0x000000000046b398 : pop rax ; stosb byte ptr [rdi], al ; std ; call rdx
0x0000000000401932 : pop rbp ; mov byte ptr [rip + 0x26a99e], 1 ; ret
0x00000000004018d1 : pop rbp ; mov edi, 0x66c2a0 ; jmp rax
0x000000000040190e : pop rbp ; mov rsi, rax ; mov edi, 0x66c2a0 ; jmp rdx
0x0000000000468e50 : pop rbp ; or byte ptr [rbx + rdi*4 - 0xff94f34], ch ; ret
0x000000000046672b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000427de5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046672f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000043f112 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000043b3e5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000043f12e : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004018c5 : pop rbp ; ret
0x0000000000454e83 : pop rbp ; stc ; ret 0x8980
0x000000000040e506 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000444345 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404330 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004096eb : pop rbx ; pop rbp ; ret
0x000000000044b870 : pop rbx ; ret
0x0000000000468a79 : pop rbx ; ret 0x517e
0x0000000000466ee4 : pop rcx ; ret
0x000000000043f113 : pop rcx ; ret 0x1b2
0x00000000004397e6 : pop rcx ; ret 0x8589
0x000000000043f12f : pop rcx ; ret 0x8b48
0x0000000000441460 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004699c4 : pop rcx ; wait ; ret 0x7982
0x0000000000468d4c : pop rcx ; xchg dword ptr [rsi], edx ; add byte ptr [rbp + 0x2e], ch ; ret
0x000000000041635a : pop rdi ; jmp 0x4180c8
0x000000000040e50c : pop rdi ; pop rbp ; ret
0x0000000000466733 : pop rdi ; ret
0x000000000046839b : pop rdi ; ret 0x2692
0x00000000004341c8 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000046783d : pop rdx ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000468af3 : pop rsi ; leave ; xchg eax, esi ; ret
0x0000000000468e92 : pop rsi ; mov ebp, 0xbc7504e3 ; ret
0x000000000040e50a : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000466731 : pop rsi ; pop r15 ; ret
0x0000000000404332 : pop rsi ; pop rbp ; ret
0x000000000045e9fd : pop rsi ; ret
0x0000000000454ed7 : pop rsi ; stc ; ret 0x8980
0x0000000000457842 : pop rsi ; stc ; ret 0xe980
0x0000000000427de3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046672d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e508 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004397e5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000468f44 : popfq ; cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x000000000044ecf8 : popfq ; push rcx ; ret 0x8929
0x000000000044ed26 : popfq ; push rcx ; ret 0xb929
0x0000000000469686 : popfq ; ret 0x766e
0x0000000000425c43 : popfq ; ret 0xd284
0x000000000043f110 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000460f9f : push -0x47fffffa ; ret
0x0000000000402a53 : push -0x72b3ffba ; add al, 0x25 ; ret
0x00000000004412fa : push -0x75425eeb ; push rbp ; ret
0x000000000043de58 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000424f54 : push 0x17 ; mov esp, 0xf675b955 ; ret 0xb2a0
0x00000000004679cd : push 0x25e9006d ; call rcx
0x000000000041ba86 : push 0x62 ; ret 0x89d2
0x000000000041a143 : push 0x6d ; ret 0x48ce
0x000000000046a89f : push qword ptr [rax + 0x4000000f] ; sub dh, bh ; call rax
0x000000000046a767 : push qword ptr [rax + 0x5000000a] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000046a8df : push qword ptr [rax + 0x50000010] ; cmp edi, esi ; call rax
0x000000000046a66f : push qword ptr [rax - 0x4ffffffa] ; cli ; call rax
0x000000000046a727 : push qword ptr [rax - 0xffffff7] ; cld ; call rax
0x0000000000468462 : push qword ptr [rcx + 0x6e] ; jmp rbx
0x0000000000458010 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000467982 : push r12 ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x467a0b ; ret
0x000000000046a8e4 : push rax ; cmp edi, esi ; call rax
0x0000000000454c37 : push rax ; jmp rsp
0x000000000046a777 : push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x4e], ah ; cld ; call qword ptr [rax]
0x000000000046a737 : push rax ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; push rdx ; cld ; call qword ptr [rax]
0x000000000042b51f : push rax ; pop rbp ; ret
0x0000000000469a98 : push rax ; ret
0x0000000000444832 : push rax ; ret 0x66
0x0000000000422abe : push rax ; ret 0x8589
0x0000000000424415 : push rax ; ret 0xcb9
0x000000000046a76c : push rax ; scasb al, byte ptr [rdi] ; cld ; call rax
0x0000000000424995 : push rbp ; cmp eax, 0x3025148a ; ret 0x66
0x0000000000465ad1 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000042d97d : push rbp ; in al, -1 ; ret 0x5589
0x0000000000408c7c : push rbp ; mov ah, -0x7f ; ret 0xd48f
0x000000000040dd45 : push rbp ; mov byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000401954 : push rbp ; mov edi, 0x66be20 ; mov rbp, rsp ; call rax
0x00000000004412ff : push rbp ; ret
0x00000000004068d9 : push rbp ; ret 0xb294
0x0000000000441296 : push rbp ; ret 0xd284
0x000000000043f88f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043f969 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000466edd : push rbx ; jne 0x466f07 ; and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x0000000000468600 : push rbx ; pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000456e95 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000044ad30 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000455b4f : push rcx ; jmp rsp
0x000000000044a9b0 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000044ec49 : push rcx ; ret 0x8929
0x000000000044ed27 : push rcx ; ret 0xb929
0x0000000000453b73 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000467b81 : push rcx ; xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x000000000045256b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045dc5a : push rdx ; add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x000000000046a73d : push rdx ; cld ; call qword ptr [rax]
0x0000000000467d25 : push rsi ; insd dword ptr [rdi], dx ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000419f78 : push rsi ; outsd dx, dword ptr [rsi] ; jmp 0x41acc1
0x0000000000467983 : push rsp ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x467a0a ; ret
0x00000000004678b2 : push rsp ; mov edi, 0x6f2a38a6 ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000406885 : push rsp ; ret 0xb294
0x000000000046ba2c : push rsp ; sldt word ptr [rax] ; and byte ptr [rbx - 1], ah ; call qword ptr [rcx]
0x0000000000467dca : push rsp ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x0000000000400958 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x66
0x0000000000468601 : pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000467ea3 : pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x000000000044ec48 : pushfq ; push rcx ; ret 0x8929
0x00000000004130ea : pushfq ; ret 0x32b9
0x0000000000410857 : pushfq ; ret 0x89ad
0x00000000004148ef : pushfq ; ret 0x8aad
0x00000000004475e7 : pushfq ; ret 0xd284
0x000000000044b2e1 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x0000000000468d49 : rcl dword ptr [rbx + 0x16875925], 0 ; insd dword ptr [rdi], dx ; ret
0x00000000004688d1 : rcl dword ptr [rsi + 0x1ea0f6c4], 0xe ; ret
0x00000000004091dc : rcr cl, -0x47 ; ret
0x0000000000401451 : ret
0x000000000043670e : ret 0
0x0000000000415961 : ret 0x10
0x000000000045b6f9 : ret 0x1002
0x00000000004653df : ret 0x101
0x0000000000425ab9 : ret 0x1046
0x000000000044b5aa : ret 0x10e8
0x000000000045e111 : ret 0x12
0x000000000045b5c5 : ret 0x1252
0x0000000000428e84 : ret 0x148
0x00000000004681c2 : ret 0x1685
0x0000000000468aed : ret 0x18
0x0000000000442464 : ret 0x1a
0x00000000004376dd : ret 0x1add
0x0000000000432407 : ret 0x1b2
0x00000000004483cb : ret 0x1be
0x0000000000422bfc : ret 0x1c
0x0000000000461540 : ret 0x1d90
0x0000000000467e06 : ret 0x1dd9
0x0000000000467bd4 : ret 0x206d
0x0000000000405482 : ret 0x2148
0x0000000000467e77 : ret 0x23b4
0x000000000043802a : ret 0x23da
0x000000000041bfd2 : ret 0x24
0x00000000004192c9 : ret 0x256f
0x000000000046839c : ret 0x2692
0x0000000000401832 : ret 0x26a9
0x0000000000401632 : ret 0x26aa
0x0000000000425e4d : ret 0x26f5
0x0000000000444d28 : ret 0x279e
0x0000000000408b16 : ret 0x2944
0x000000000041a4d2 : ret 0x2948
0x0000000000441464 : ret 0x2a
0x000000000040b1be : ret 0x2b
0x0000000000468182 : ret 0x2c60
0x000000000043f892 : ret 0x2d50
0x00000000004076bd : ret 0x2dff
0x00000000004527c8 : ret 0x2e8
0x000000000040988c : ret 0x2ee8
0x0000000000431c83 : ret 0x3040
0x000000000041a433 : ret 0x3148
0x0000000000428f1b : ret 0x314c
0x0000000000410e5b : ret 0x32b9
0x00000000004103a2 : ret 0x348f
0x0000000000446ac5 : ret 0x35e8
0x0000000000425e79 : ret 0x38c9
0x0000000000468c36 : ret 0x399f
0x000000000040af1e : ret 0x3b
0x000000000043149d : ret 0x3c58
0x0000000000424cb9 : ret 0x3d48
0x000000000043d3c5 : ret 0x3e
0x000000000045d48c : ret 0x3ee8
0x0000000000467dcc : ret 0x3f90
0x0000000000468dd1 : ret 0x3fd9
0x000000000040ff43 : ret 0x3fe6
0x0000000000408542 : ret 0x40
0x0000000000469654 : ret 0x4152
0x0000000000467d2c : ret 0x43c5
0x0000000000465811 : ret 0x43dd
0x000000000045d9b0 : ret 0x4449
0x000000000040f458 : ret 0x4589
0x0000000000401b3f : ret 0x458a
0x0000000000415477 : ret 0x466b
0x0000000000431156 : ret 0x4777
0x0000000000440801 : ret 0x4802
0x000000000040d813 : ret 0x4808
0x0000000000414424 : ret 0x4810
0x000000000045256e : ret 0x4815
0x0000000000453fad : ret 0x4818
0x000000000040ec61 : ret 0x4853
0x0000000000442356 : ret 0x4861
0x0000000000424f77 : ret 0x48a0
0x0000000000414035 : ret 0x48b1
0x000000000045e2e1 : ret 0x48c
0x000000000045670b : ret 0x48c0
0x000000000041a145 : ret 0x48ce
0x0000000000402d60 : ret 0x48f0
0x000000000040ec28 : ret 0x4953
0x0000000000468345 : ret 0x496d
0x00000000004053df : ret 0x49b9
0x0000000000405690 : ret 0x49e9
0x0000000000468c87 : ret 0x4ae4
0x0000000000457d80 : ret 0x4ae8
0x000000000043ac11 : ret 0x4b
0x00000000004679f8 : ret 0x4b96
0x000000000040ec1b : ret 0x4c53
0x0000000000446227 : ret 0x4cc0
0x0000000000427e41 : ret 0x4cf0
0x000000000044ce6c : ret 0x4f0b
0x0000000000467391 : ret 0x4f72
0x0000000000468a7a : ret 0x517e
0x000000000040fdba : ret 0x52c7
0x0000000000420ebc : ret 0x5350
0x0000000000460e97 : ret 0x53e8
0x0000000000460297 : ret 0x5452
0x0000000000405c5a : ret 0x5456
0x00000000004255c0 : ret 0x5589
0x0000000000418ddd : ret 0x5603
0x0000000000469187 : ret 0x56fd
0x0000000000454404 : ret 0x581e
0x000000000043fb1a : ret 0x5966
0x0000000000448c06 : ret 0x5aa2
0x000000000044bac7 : ret 0x5bc6
0x0000000000409a5b : ret 0x5fe8
0x000000000045ecf1 : ret 0x6044
0x000000000042713d : ret 0x60e9
0x0000000000464d0f : ret 0x61
0x0000000000400919 : ret 0x66
0x000000000044a752 : ret 0x68e8
0x0000000000436d76 : ret 0x6a8a
0x0000000000468a48 : ret 0x6fc7
0x0000000000460228 : ret 0x701
0x0000000000468cf3 : ret 0x715e
0x000000000040c9a1 : ret 0x7480
0x0000000000468faa : ret 0x75a6
0x0000000000469687 : ret 0x766e
0x0000000000436a2e : ret 0x77a8
0x00000000004699c6 : ret 0x7982
0x0000000000423be8 : ret 0x79f1
0x0000000000437b91 : ret 0x7a8a
0x000000000043e80b : ret 0x7b7f
0x000000000041bd5e : ret 0x7cd2
0x000000000045734e : ret 0x7ce8
0x0000000000434b5d : ret 0x7f0f
0x0000000000468c4b : ret 0x7f7e
0x000000000040888f : ret 0x8041
0x000000000042603c : ret 0x808a
0x0000000000445402 : ret 0x8141
0x000000000040cba6 : ret 0x8148
0x0000000000440724 : ret 0x822d
0x00000000004318e1 : ret 0x8237
0x0000000000408548 : ret 0x82ac
0x0000000000403fa1 : ret 0x83d0
0x00000000004027c4 : ret 0x8445
0x00000000004677f1 : ret 0x84b1
0x0000000000404f06 : ret 0x8589
0x000000000045c0f0 : ret 0x85c7
0x0000000000466159 : ret 0x8845
0x000000000045ef62 : ret 0x88e8
0x0000000000460245 : ret 0x8904
0x000000000042bd26 : ret 0x8929
0x00000000004377a3 : ret 0x8940
0x0000000000417693 : ret 0x8941
0x000000000040d430 : ret 0x8944
0x000000000040548b : ret 0x8948
0x0000000000428f0f : ret 0x8949
0x0000000000450b8f : ret 0x894a
0x0000000000453b77 : ret 0x894d
0x0000000000421436 : ret 0x894f
0x0000000000436fa7 : ret 0x8961
0x0000000000432e29 : ret 0x8974
0x000000000040f64c : ret 0x897f
0x0000000000454e85 : ret 0x8980
0x000000000042273e : ret 0x89a0
0x0000000000410858 : ret 0x89ad
0x00000000004109e0 : ret 0x89b1
0x000000000041ba88 : ret 0x89d2
0x00000000004307b7 : ret 0x89f4
0x0000000000452188 : ret 0x8a44
0x0000000000452085 : ret 0x8a4a
0x0000000000409980 : ret 0x8a58
0x0000000000434638 : ret 0x8a74
0x00000000004148f0 : ret 0x8aad
0x000000000040cf46 : ret 0x8b48
0x000000000041dbd0 : ret 0x8b4c
0x0000000000432297 : ret 0x8bb1
0x0000000000408de7 : ret 0x8d89
0x0000000000469847 : ret 0x8e5
0x00000000004058d9 : ret 0x910d
0x0000000000469412 : ret 0x92d
0x000000000042199c : ret 0x948
0x000000000040ec45 : ret 0x949
0x0000000000404a16 : ret 0x9589
0x0000000000432423 : ret 0x958a
0x000000000040f79a : ret 0x9bba
0x000000000045f44e : ret 0x9ce8
0x0000000000430649 : ret 0xa2bc
0x000000000043f96c : ret 0xa30b
0x000000000046285f : ret 0xac60
0x00000000004699d7 : ret 0xaf5c
0x000000000044aa3f : ret 0xb
0x000000000041548c : ret 0xb0
0x0000000000406886 : ret 0xb294
0x0000000000424f5b : ret 0xb2a0
0x0000000000414019 : ret 0xb2b1
0x0000000000409908 : ret 0xb2e8
0x0000000000465d62 : ret 0xb60f
0x0000000000416447 : ret 0xb70f
0x0000000000441270 : ret 0xb740
0x000000000041b81e : ret 0xb7e9
0x000000000040ef21 : ret 0xb848
0x0000000000409a02 : ret 0xb8e8
0x0000000000461151 : ret 0xb904
0x000000000042c905 : ret 0xb929
0x000000000043f4a0 : ret 0xb940
0x0000000000452012 : ret 0xb94a
0x0000000000421e1b : ret 0xb94f
0x000000000041d820 : ret 0xb9d2
0x0000000000431ed6 : ret 0xb9f4
0x0000000000421efa : ret 0xba48
0x000000000040975f : ret 0xba49
0x0000000000426f71 : ret 0xbb49
0x0000000000452cb4 : ret 0xbe70
0x00000000004418ec : ret 0xbf48
0x00000000004535d2 : ret 0xc
0x0000000000467b88 : ret 0xc0be
0x00000000004018f5 : ret 0xc148
0x0000000000408b19 : ret 0xc189
0x00000000004164ba : ret 0xc281
0x0000000000464f52 : ret 0xc493
0x0000000000468604 : ret 0xc591
0x0000000000419681 : ret 0xc805
0x000000000042a6bd : ret 0xc9df
0x0000000000463249 : ret 0xca21
0x0000000000402b8c : ret 0xca29
0x0000000000424416 : ret 0xcb9
0x0000000000464d15 : ret 0xccb2
0x000000000040bed2 : ret 0xcd3c
0x000000000040560e : ret 0xd088
0x00000000004040b6 : ret 0xd284
0x000000000046773e : ret 0xd300
0x0000000000408c7f : ret 0xd48f
0x00000000004507d5 : ret 0xd618
0x0000000000417745 : ret 0xd789
0x00000000004685f2 : ret 0xd9e9
0x000000000043054e : ret 0xdbca
0x0000000000469c66 : ret 0xdc85
0x0000000000469b14 : ret 0xdf30
0x0000000000468247 : ret 0xdf32
0x00000000004685c1 : ret 0xe066
0x000000000040deb1 : ret 0xe280
0x000000000044ad95 : ret 0xe2b9
0x0000000000467879 : ret 0xe3fd
0x000000000040424e : ret 0xe4cd
0x000000000040c49e : ret 0xe7a6
0x0000000000409ad2 : ret 0xe8e8
0x0000000000441142 : ret 0xe940
0x0000000000422250 : ret 0xe94f
0x00000000004423a1 : ret 0xe961
0x000000000043465e : ret 0xe974
0x00000000004141e3 : ret 0xe97f
0x0000000000457844 : ret 0xe980
0x00000000004685d7 : ret 0xe990
0x00000000004586e1 : ret 0xe9e8
0x00000000004381cd : ret 0xea51
0x0000000000408b0b : ret 0xea81
0x0000000000469964 : ret 0xebbc
0x0000000000443f5c : ret 0xee8
0x0000000000417b06 : ret 0xeefb
0x0000000000409341 : ret 0xf0b9
0x0000000000415ca7 : ret 0xf186
0x0000000000435695 : ret 0xf281
0x000000000044b50c : ret 0xf3e9
0x00000000004201fd : ret 0xf41
0x00000000004087c9 : ret 0xf48
0x000000000045e079 : ret 0xf62a
0x000000000041f70c : ret 0xf637
0x00000000004686c3 : ret 0xf718
0x000000000045e9e1 : ret 0xf738
0x00000000004147a0 : ret 0xf748
0x0000000000458fde : ret 0xf7c7
0x0000000000441ef5 : ret 0xf7f3
0x000000000046885a : ret 0xf7f9
0x000000000045f1da : ret 0xfa22
0x000000000045688a : ret 0xfaac
0x000000000044067e : ret 0xfc75
0x0000000000413c3c : ret 0xfce0
0x000000000040c619 : ret 0xff00
0x000000000042d68a : ret 0xff1e
0x0000000000467a35 : ret 0xff99
0x0000000000441eef : ret 0xffa5
0x0000000000440678 : ret 0xffc4
0x000000000043f898 : ret 0xffd5
0x000000000043f972 : ret 0xffd8
0x000000000044072a : ret 0xffd9
0x000000000043fb14 : ret 0xffe0
0x00000000004027aa : ret 0xffed
0x0000000000432b7d : ret 0xfff9
0x000000000043e805 : ret 0xfffa
0x0000000000445367 : ret 0xfffb
0x00000000004252a9 : ret 0xfffd
0x0000000000447a11 : ret 0xfffe
0x0000000000405391 : ret 0xffff
0x00000000004025ba : ret 1
0x0000000000402030 : ret 2
0x000000000042a089 : ret 3
0x000000000040961c : ret 4
0x000000000040369a : ret 6
0x000000000040921c : ret 8
0x000000000040396f : ret 9
0x000000000045254d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004084d6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042f7dc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e468 : rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x000000000046a684 : rol byte ptr [rsi], 1 ; sti ; call qword ptr [rax]
0x000000000045254c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000468c49 : rol dh, 1 ; ret 0x7f7e
0x0000000000409a56 : rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0x5fe8
0x0000000000409903 : rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0xb2e8
0x0000000000409acd : rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0xe8e8
0x0000000000432b73 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x000000000041a0db : ror byte ptr [r8 + 0x3b], 1 ; fmul dword ptr [r15] ; xchg eax, edx ; ret 0xe280
0x000000000040547a : ror byte ptr [r8 - 0x3f], -0x17 ; add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x00000000004665b4 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000041a0dc : ror byte ptr [rax + 0x3b], 1 ; fmul dword ptr [r15] ; xchg eax, edx ; ret 0xe280
0x000000000044df44 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000046a7e8 : ror byte ptr [rax + rax], 0 ; nop ; mov ch, -3 ; jmp rax
0x00000000004018fc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40190b ; pop rbp ; ret
0x000000000040547b : ror byte ptr [rax - 0x3f], -0x17 ; add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x00000000004479e1 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044876b : ror byte ptr [rax - 0x77], 1 ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x00000000004665b5 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004034d2 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x4034e1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428f0c : ror byte ptr [rbp + 0x21], cl ; ret 0x8949
0x00000000004356aa : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000465d5f : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x000000000042bee5 : ror dh, 1 ; ret
0x000000000040975c : ror dword ptr [rax + 0x21], cl ; ret 0xba49
0x0000000000402e98 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000045237e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000424cb6 : ror dword ptr [rcx + 0x63], 1 ; ret 0x3d48
0x00000000004460e0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000467bdd : ror dword ptr [rdi], cl ; xchg dword ptr [rdx], esp ; ja 0x467bf3 ; pop rax ; ret
0x00000000004631ec : sahf ; ret 0xd284
0x0000000000401935 : sahf ; test eax, 0xf3010026 ; ret
0x000000000046a6fc : sal byte ptr [rcx], 1 ; cld ; call qword ptr [rax]
0x0000000000428e82 : sal byte ptr [rdi], cl ; ret 0x148
0x0000000000428e6f : sal byte ptr [rdi], cl ; ret 0x2948
0x0000000000469608 : sal dword ptr [rbx + rcx*8 + 0x1017213f], cl ; add byte ptr [rdi], cl ; jmp rax
0x0000000000432404 : salc ; adc ah, al ; ret 0x1b2
0x0000000000430195 : salc ; adc ah, al ; ret 0x8589
0x0000000000432420 : salc ; adc ah, al ; ret 0x958a
0x0000000000468019 : sar byte ptr [rcx + 0xe], -0x7b ; ret
0x0000000000432b6d : sar dh, -1 ; call rdi
0x0000000000432bce : sar dh, -1 ; call rdx
0x0000000000432ae1 : sar dh, -1 ; call rsp
0x00000000004323aa : sar dh, -1 ; jmp qword ptr [rsi]
0x00000000004018fe : sar eax, 1 ; jne 0x401909 ; pop rbp ; ret
0x0000000000441461 : sar ebp, -0x17 ; ret 0x2a
0x00000000004018fd : sar rax, 1 ; jne 0x40190a ; pop rbp ; ret
0x0000000000432292 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x000000000045c4d4 : sbb al, -0x17 ; ret
0x000000000044b43a : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x0000000000469059 : sbb al, -0x7c ; ret
0x00000000004478b5 : sbb al, -6 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000446420 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000414366 : sbb al, 0x75 ; xor al, byte ptr [rbp - 0x195f2547] ; ret
0x000000000045d80b : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467987 : sbb bh, byte ptr [rdi + 0x79] ; ret
0x0000000000453b74 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000406ad1 : sbb byte ptr [rdi], cl ; std ; ret 0x8589
0x000000000040933e : sbb byte ptr [rdi], cl ; std ; ret 0xf0b9
0x00000000004096e7 : sbb byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004685d5 : sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000468df6 : sbb ch, byte ptr [rdi] ; adc eax, 0xf989d1eb ; ret
0x0000000000441361 : sbb cl, ch ; ret
0x000000000044d793 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000468a1e : sbb dword ptr [rax], eax ; ret
0x000000000041635d : sbb eax, 0x14b80000 ; ret
0x0000000000469682 : sbb eax, 0x9df2bea7 ; ret 0x766e
0x0000000000466045 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000467bdc : sbb ebx, edx ; add byte ptr [r15 + 0x58077722], r8b ; ret
0x0000000000445470 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000044b43c : sbb ecx, ebp ; ret
0x0000000000434874 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000046a76d : scasb al, byte ptr [rdi] ; cld ; call rax
0x0000000000405eda : scasb al, byte ptr [rdi] ; jmp 0x406057
0x000000000041a141 : scasd eax, dword ptr [rdi] ; fsubr dword ptr [rdx + 0x6d] ; ret 0x48ce
0x000000000041ea9d : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000040dd4c : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000466149 : shl byte ptr [rbp - 0x76baffba], 1 ; ret 0x8141
0x000000000044535f : shl edx, 4 ; mov rdi, rax ; call 0x401608
0x000000000044535e : shl rdx, 4 ; mov rdi, rax ; call 0x401609
0x0000000000469a93 : shr bl, 0x60 ; mov al, 0x20 ; push rax ; ret
0x0000000000440362 : shr cl, cl ; ret 0x3b
0x000000000046ba2d : sldt word ptr [rax] ; and byte ptr [rbx - 1], ah ; call qword ptr [rcx]
0x000000000046a8a1 : sldt word ptr [rax] ; sub sil, dil ; call rax
0x000000000046a606 : stc ; call rax
0x000000000046ac82 : stc ; call rdi
0x000000000046a5fe : stc ; inc dword ptr [rax] ; add eax, 0x72900000 ; stc ; call rax
0x000000000046aafa : stc ; jmp qword ptr [rax]
0x000000000043017b : stc ; ret
0x000000000043e19d : stc ; ret 0x77a8
0x0000000000454e84 : stc ; ret 0x8980
0x0000000000457843 : stc ; ret 0xe980
0x0000000000467e70 : stc ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x0000000000432275 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x000000000046b3ba : std ; call qword ptr [rbx]
0x000000000046b29a : std ; call rdi
0x000000000046b39a : std ; call rdx
0x000000000046a7f6 : std ; inc dword ptr [rax] ; or eax, 0xb5f00000 ; std ; jmp qword ptr [rax]
0x000000000046a7be : std ; jmp qword ptr [rax]
0x000000000046b23a : std ; jmp qword ptr [rbx]
0x000000000046b4c2 : std ; jmp qword ptr [rcx]
0x000000000046a7ee : std ; jmp rax
0x0000000000467ea2 : std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000444d27 : std ; ret 0x279e
0x0000000000406a7f : std ; ret 0x8589
0x0000000000409340 : std ; ret 0xf0b9
0x0000000000468fa4 : sti ; add eax, 0x10d78564 ; ret 0x75a6
0x000000000046a686 : sti ; call qword ptr [rax]
0x000000000046ae3a : sti ; call rcx
0x000000000044488e : sti ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; pop rax ; ret 0x66
0x000000000044485a : sti ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x000000000040e636 : sti ; fimul dword ptr [rdx - 0x763f7695] ; ret 0x8948
0x000000000046a6c6 : sti ; jmp qword ptr [rax]
0x000000000046ad92 : sti ; jmp qword ptr [rcx]
0x00000000004070f1 : sti ; ret
0x00000000004686c0 : sti ; xor ch, byte ptr [rdx] ; ret 0xf718
0x0000000000468241 : stosb byte ptr [rdi], al ; ret
0x000000000046b399 : stosb byte ptr [rdi], al ; std ; call rdx
0x0000000000458012 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000467dcb : stosd dword ptr [rdi], eax ; ret 0x3f90
0x000000000042713c : stosd dword ptr [rdi], eax ; ret 0x60e9
0x0000000000426435 : stosd dword ptr [rdi], eax ; ret 0x8589
0x000000000046af09 : sub ah, bh ; call qword ptr [rdi]
0x0000000000401f78 : sub al, -0x5e ; ret
0x000000000046a8b5 : sub al, -2 ; call qword ptr [rax]
0x0000000000415470 : sub al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x466b
0x0000000000467dc9 : sub al, 0x54 ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x000000000042dbce : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046823e : sub al, byte ptr [rax] ; int1 ; stosb byte ptr [rdi], al ; ret
0x0000000000468f46 : sub bh, byte ptr [rcx - 0x67] ; call rsi
0x0000000000462966 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042dab8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043f895 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004172f7 : sub ch, cl ; ret
0x000000000042713a : sub dh, al ; stosd dword ptr [rdi], eax ; ret 0x60e9
0x0000000000426487 : sub dh, al ; stosd dword ptr [rdi], eax ; ret 0x8589
0x000000000046a8a5 : sub dh, bh ; call rax
0x000000000043f88b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043f965 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041ec4e : sub dword ptr [rbx - 6], ebp ; ret
0x0000000000467e71 : sub eax, 0x58ad9f63 ; ret 0x23b4
0x0000000000440725 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000409753 : sub eax, 0x894d2de7 ; ret
0x000000000044b2e2 : sub eax, 0x9a6b3ab9 ; ret
0x000000000046af49 : sub edi, esp ; call qword ptr [rcx]
0x000000000044df4f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000046676d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000468f40 : sub esp, dword ptr [rdx - 0x66624ecf] ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x0000000000401f77 : sub r8b, -0x5e ; ret
0x000000000046823d : sub r8b, byte ptr [rax] ; int1 ; stosb byte ptr [rdi], al ; ret
0x000000000046676c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046a8a4 : sub sil, dil ; call rax
0x00000000004281cb : test ah, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000046ae38 : test al, -0x26 ; sti ; call rcx
0x000000000043f890 : test al, -0x7f ; ret 0x2d50
0x000000000043f96a : test al, -0x7f ; ret 0xa30b
0x0000000000451e23 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004172f5 : test al, 0x28 ; sub ch, cl ; ret
0x000000000046af48 : test al, 0x2b ; cld ; call qword ptr [rcx]
0x0000000000445afe : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004420c6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000044cfe8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041a757 : test al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004613e4 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421434 : test al, 9 ; ret 0x894f
0x0000000000469b10 : test byte ptr [r8], r13b ; ret 0xdf30
0x00000000004531a0 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000046673a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000469b11 : test byte ptr [rax], ch ; ret 0xdf30
0x0000000000405b20 : test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043670c : test byte ptr [rcx], ch ; ret 0
0x000000000045c7f6 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x000000000046783a : test byte ptr [rdi], 0x75 ; pop rdx ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000467ea6 : test ch, ah ; hlt ; ret
0x000000000040509e : test cl, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000436706 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000411f48 : test dword ptr [rbp + rdi*8 + 0x132dffff], ecx ; ret
0x0000000000411ff0 : test dword ptr [rbp + rdi*8 + 0x142dffff], ecx ; ret
0x0000000000411730 : test dword ptr [rbp + rdi*8 + 0x1d2dffff], ecx ; ret
0x0000000000411068 : test dword ptr [rbp + rdi*8 + 0x1e2dffff], ecx ; ret
0x0000000000412ed0 : test dword ptr [rbp + rdi*8 + 0x1f2dffff], ecx ; ret
0x000000000041bf34 : test dword ptr [rbp + rdi*8 + 0x4a2dffff], edx ; ret
0x000000000041bf88 : test dword ptr [rbp + rdi*8 + 0x4b2dffff], edx ; ret
0x000000000040ff3c : test dword ptr [rbp + rdi*8 + 0x4e2dffff], ecx ; ret 0x3fe6
0x00000000004132a4 : test dword ptr [rbp + rdi*8 + 0x4f2dffff], ecx ; ret 0x3fe6
0x00000000004108a4 : test dword ptr [rbp + rdi*8 - 0x14d20001], ecx ; pushfq ; ret 0x89ad
0x0000000000410850 : test dword ptr [rbp + rdi*8 - 0x15d20001], ecx ; pushfq ; ret 0x89ad
0x000000000041cb58 : test dword ptr [rbp + rdi*8 - 0x1fd20001], edx ; ret
0x000000000041b7e0 : test dword ptr [rbp + rdi*8 - 0x20d20001], edx ; ret
0x0000000000412fe8 : test dword ptr [rbp + rdi*8 - 0x2bd20001], ecx ; ret
0x0000000000410f50 : test dword ptr [rbp + rdi*8 - 0x2cd20001], ecx ; ret
0x0000000000413234 : test dword ptr [rbp + rdi*8 - 0x41d20001], ecx ; ret
0x000000000040ffac : test dword ptr [rbp + rdi*8 - 0x42d20001], ecx ; ret
0x00000000004130e4 : test dword ptr [rbp + rdi*8 - 0x63d20001], ecx ; ret 0x32b9
0x0000000000410e54 : test dword ptr [rbp + rdi*8 - 0x64d20001], ecx ; ret 0x32b9
0x000000000041c688 : test dword ptr [rbp + rdi*8 - 0x70d20001], edx ; ret
0x000000000041bcb0 : test dword ptr [rbp + rdi*8 - 0x71d20001], edx ; ret
0x000000000041d07c : test dword ptr [rbp + rdi*8 - 0x7d20001], edx ; ret
0x000000000041b2bc : test dword ptr [rbp + rdi*8 - 0x8d20001], edx ; ret
0x000000000045bf9c : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000045c1b5 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000044d0f6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000408b69 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000408bb0 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rcx]
0x0000000000408799 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x0000000000408514 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdx]
0x00000000004098a2 : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x0000000000408fae : test dword ptr [rdi + rdi*8 - 1], edi ; call rsi
0x0000000000409a09 : test dword ptr [rdi + rdi*8 - 1], edi ; call rsp
0x000000000040608c : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rcx]
0x00000000004085cc : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdi]
0x000000000042736c : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000040881d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000043426c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000434bff : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000042d798 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rcx
0x00000000004341cd : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042c687 : test dword ptr [rdi + rdi*8 - 1], esi ; call rcx
0x000000000042cc92 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x000000000044571a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000042a6d5 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rcx]
0x000000000042a589 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rdx]
0x000000000044a6ce : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x000000000042038c : test dword ptr [rdi + rdi*8 - 1], esp ; call rbx
0x000000000042b046 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000042afdc : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000042b0a4 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rcx
0x000000000042bd24 : test dword ptr [rdi], ecx ; ret 0x8929
0x0000000000469181 : test dword ptr [rdx + 0x1a7c3b68], esi ; ret 0x56fd
0x000000000044113b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000045ae38 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x000000000041e3f3 : test dword ptr [rsi + rdi*8 + 0x453ffff], esi ; call rdi
0x00000000004307af : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000430803 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000044239a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000430173 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x00000000004301c7 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x000000000041d896 : test dword ptr [rsi + rdi*8 - 0x24190001], esi ; ret
0x000000000043018f : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x000000000043013b : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000043059b : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x0000000000430547 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x00000000004311a3 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000043114f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x000000000045cd7f : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000043de5a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000430b8e : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x0000000000467514 : test eax, 0x393aef6c ; ret
0x000000000044234f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000401936 : test eax, 0xf3010026 ; ret
0x0000000000467d27 : test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x000000000046967e : verw word ptr [rbp - 0x4158e275] ; popfq ; ret 0x766e
0x00000000004447a4 : vpsubw xmm1, xmm15, xmmword ptr [rax - 0x73] ; adc al, 0x25 ; pop rax ; ret 0x66
0x000000000044035f : wait ; jge 0x440341 ; shr cl, cl ; ret 0x3b
0x000000000043b41d : wait ; jo 0x43b42b ; ret
0x000000000043e96c : wait ; jo 0x43e97a ; ret
0x0000000000410e5a : wait ; ret 0x32b9
0x00000000004699c5 : wait ; ret 0x7982
0x00000000004678ce : xchg byte ptr [rax], al ; ret
0x0000000000467981 : xchg byte ptr [rcx + 0x54], cl ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x467a0c ; ret
0x000000000042c2d4 : xchg byte ptr [rdi], cl ; ret 0x8929
0x000000000042c903 : xchg byte ptr [rdi], cl ; ret 0xb929
0x0000000000467be0 : xchg dword ptr [rdx], esp ; ja 0x467bf0 ; pop rax ; ret
0x0000000000452568 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000468d4d : xchg dword ptr [rsi], edx ; add byte ptr [rbp + 0x2e], ch ; ret
0x0000000000424acf : xchg eax, ebp ; cmp cl, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x0000000000416735 : xchg eax, ebp ; mov esp, 0xffffff2 ; ret 0x8589
0x00000000004042af : xchg eax, ebp ; ret
0x00000000004027c3 : xchg eax, ebp ; ret 0x8445
0x000000000040897e : xchg eax, ebp ; ret 0xd284
0x000000000040deb0 : xchg eax, ebp ; ret 0xe280
0x0000000000466148 : xchg eax, ebp ; shl byte ptr [rbp - 0x76baffba], 1 ; ret 0x8141
0x0000000000468d4a : xchg eax, ebx ; and eax, 0x168759 ; insd dword ptr [rdi], dx ; ret
0x0000000000436fa5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043d8a5 : xchg eax, ebx ; ret
0x0000000000448277 : xchg eax, ebx ; ret 0x8445
0x0000000000426cd9 : xchg eax, ebx ; xor ebp, ecx ; ret
0x000000000043dad5 : xchg eax, ecx ; ret
0x000000000046783e : xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000000000040d204 : xchg eax, edi ; ret
0x0000000000468a47 : xchg eax, edi ; ret 0x6fc7
0x000000000040888e : xchg eax, edi ; ret 0x8041
0x000000000041996e : xchg eax, edi ; ret 0xd284
0x000000000044a86f : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004041d9 : xchg eax, edx ; ret
0x00000000004451cf : xchg eax, edx ; ret 0x8445
0x0000000000405d2b : xchg eax, edx ; ret 0xd284
0x000000000041a0e2 : xchg eax, edx ; ret 0xe280
0x00000000004678cd : xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x000000000042b09f : xchg eax, esi ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rcx
0x000000000045ef6a : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x0000000000468af5 : xchg eax, esi ; ret
0x0000000000445366 : xchg eax, esi ; ret 0xfffb
0x0000000000469058 : xchg eax, esi ; sbb al, -0x7c ; ret
0x000000000044c28a : xchg eax, esp ; jmp 0x44ccf8
0x000000000044c1c7 : xchg eax, esp ; jmp 0x44ccfa
0x0000000000442354 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000043dc25 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000044239f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000045edad : xchg eax, esp ; ret
0x00000000004451b9 : xchg eax, esp ; ret 0x8041
0x0000000000402e01 : xchg eax, esp ; ret 0x8445
0x0000000000465d61 : xchg eax, esp ; ret 0xb60f
0x000000000044126e : xchg eax, esp ; ret 0xb740
0x00000000004040b5 : xchg eax, esp ; ret 0xd284
0x000000000041ec4d : xchg eax, esp ; sub dword ptr [rbx - 6], ebp ; ret
0x000000000044c289 : xchg eax, r12d ; jmp 0x44ccf9
0x0000000000468a1a : xchg ebp, ecx ; mov al, -0x1c ; sbb dword ptr [rax], eax ; ret
0x000000000046b911 : xchg esi, edi ; jmp qword ptr [rdx]
0x0000000000449161 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000466ee3 : xlatb ; pop rcx ; ret
0x0000000000467ba1 : xlatb ; ret
0x0000000000467fbe : xor al, 0 ; ret
0x0000000000401bed : xor al, 0x25 ; clc ; ret 0x66
0x0000000000445181 : xor al, 0x25 ; pop rax ; ret 0x66
0x0000000000445709 : xor al, 0x25 ; ret 0x66
0x000000000043299d : xor al, 0x72 ; jl 0x432960 ; ret 0x8237
0x000000000040e466 : xor al, 0xffffffffffffff84 ; rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x0000000000414368 : xor al, byte ptr [rbp - 0x195f2547] ; ret
0x0000000000441269 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000435b07 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000435b08 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c996 : xor byte ptr [rbx + rdi*4 - 6], 0x81 ; ret 0x40
0x000000000046a73c : xor byte ptr [rdx - 4], dl ; call qword ptr [rax]
0x00000000004686c1 : xor ch, byte ptr [rdx] ; ret 0xf718
0x000000000042539c : xor ch, cl ; ret
0x000000000046b950 : xor dh, 0xfe ; call rbx
0x0000000000468f42 : xor dword ptr [rcx + 0x792a999d], esi ; cdq ; call rsi
0x00000000004682bc : xor eax, 0x770028ef ; ret
0x0000000000408fa9 : xor eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], edi ; call rsi
0x0000000000432276 : xor eax, 0xeb21b978 ; ret 0xb2b1
0x0000000000467b82 : xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x00000000004678b8 : xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000468e60 : xor eax, dword ptr [rdi + 0x11] ; ret
0x0000000000426cda : xor ebp, ecx ; ret
0x000000000046a6fd : xor esp, edi ; call qword ptr [rax]
