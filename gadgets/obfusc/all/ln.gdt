0x000000000040518d : adc al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x0000000000417513 : adc al, 0x25 ; ret
0x0000000000445434 : adc byte ptr [rax - 0x75], cl ; jge 0x4453ee ; call rax
0x0000000000445433 : adc byte ptr [rax - 0x75], cl ; jge 0x4453ef ; call rax
0x0000000000445870 : adc byte ptr [rax - 0x75], cl ; jge 0x44582a ; call rax
0x000000000044586f : adc byte ptr [rax - 0x75], cl ; jge 0x44582b ; call rax
0x0000000000445ab1 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041652a : adc ch, cl ; ret
0x000000000041ad0a : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x00000000004267fc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041baad : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000410380 : adc cl, byte ptr [rax - 0x7f] ; ret 0x13
0x0000000000433001 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041aaf4 : adc cl, byte ptr [rax - 9] ; fimul dword ptr [rax + 0x29] ; ret 0xf748
0x000000000040ea4e : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000044ec15 : adc dword ptr [rax], eax ; add al, bl ; and bh, bh ; jmp qword ptr [rax]
0x000000000043bf2b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043418b : adc eax, 0x558abda1 ; ret
0x0000000000417195 : adc eax, 0x8b000002 ; loopne 0x4171d3 ; push rsi ; ret 0xc750
0x00000000004403a2 : adc eax, 0xe9000007 ; ret 1
0x00000000004052c3 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x0000000000424e53 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000437769 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004430fb : adc eax, ebp ; js 0x4430ec ; ret
0x000000000044354f : adc ebp, ecx ; ret 0
0x0000000000401b74 : add ah, byte ptr [rbp] ; jmp rax
0x0000000000401bb4 : add ah, byte ptr [rbp] ; jmp rdx
0x000000000044e453 : add ah, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x64], bl ; std ; call qword ptr [rdx]
0x000000000040afb8 : add al, -0x77 ; jmp 0x40bb8a
0x0000000000445ae2 : add al, 0 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x000000000041e160 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000041db78 : add al, 0 ; add cl, ch ; ret 1
0x0000000000410889 : add al, 0x13 ; xor ebp, dword ptr [rax + rbp + 0x294ce11b] ; ret 0xb849
0x00000000004491aa : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000410e11 : add al, bh ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x000000000044d4cb : add al, bh ; xchg eax, ecx ; sti ; jmp rax
0x000000000044ec17 : add al, bl ; and bh, bh ; jmp qword ptr [rax]
0x000000000044dd35 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; xchg eax, ebx ; cld ; call qword ptr [rsi]
0x000000000040bbd9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x3c2d9445], cl ; ret
0x000000000040d65c : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000417196 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x000000000041c6c5 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000044da4b : add al, ch ; out -1, eax ; jmp qword ptr [rax]
0x000000000041fab8 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x0000000000417454 : add bh, al ; in al, 0x57 ; ret 0xc750
0x0000000000426818 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000040bb9a : add bh, al ; mov r12b, 0x3d ; ret
0x0000000000445ae4 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x0000000000445479 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rsp
0x0000000000445b50 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x0000000000445b5f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x000000000043e695 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000043bc04 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042231f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004063d0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000040518f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x0000000000406187 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; inc dword ptr [rcx] ; scasb al, byte ptr [rdi] ; ret 0xe9c4
0x0000000000405bc0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000405b55 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000433fc9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000424e55 : add bh, al ; xchg eax, r12d ; int 6
0x000000000044bc2f : add bl, dh ; ret
0x0000000000402105 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044b902 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000044bb64 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042334d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000044e117 : add byte ptr [rax + 0xb], bl ; std ; jmp rbx
0x0000000000445ae1 : add byte ptr [rax + rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x000000000044dbcf : add byte ptr [rax - 0x19], al ; sti ; jmp qword ptr [rcx]
0x000000000044df93 : add byte ptr [rax - 0x2be80000], cl ; cld ; call qword ptr [rdx]
0x000000000040f183 : add byte ptr [rax - 0x47], cl ; add ebx, dword ptr [rdx - 0x38b2464a] ; ret 0x48cd
0x0000000000410a06 : add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x000000000044e457 : add byte ptr [rax - 0x64], bl ; std ; call qword ptr [rdx]
0x0000000000417510 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000043ac1f : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004269fb : add byte ptr [rax - 0x75], cl ; call 0x4904f353
0x000000000040c1d4 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b254 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000445a01 : add byte ptr [rax - 0x75], cl ; jge 0x4459b3 ; call rax
0x0000000000445b26 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffb90 ; call rax
0x0000000000402108 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405315 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000426816 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000445b4e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x0000000000445b5d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x000000000043e693 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000043bc02 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044bc2d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042334b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000410a17 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x000000000041750e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x00000000004269f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4904f355
0x000000000041b252 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000402106 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405313 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000044bc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405eef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040a0e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044bc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000443762 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000410866 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; ret
0x000000000042639b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000426539 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000041768e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000040bc1b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3d2d9445], cl ; ret
0x00000000004371d2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041d4d2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000041d5fe : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x00000000004171d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x0000000000417010 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004180ac : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2dc045], cl ; ret
0x000000000043a3c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041e61e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000044987c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041174b : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bd22fbb], cl ; cdq ; ret 0x890e
0x000000000043cd29 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000445364 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000043ed7d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000405ef1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000044b903 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000411e6c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf281
0x000000000043d36d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000044bb65 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000043bb70 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000044acd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000044080b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041823c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000406ff2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e1e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000448725 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043bafa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a6b2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ac7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004436f7 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000044dbca : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax - 0x19], al ; sti ; jmp qword ptr [rcx]
0x000000000043776b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000436df0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043bf2d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043eaf8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040166b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000044f1aa : add byte ptr [rax], al ; and al, 0x17 ; add byte ptr [rax], al ; ror dl, -1 ; call qword ptr [rax]
0x000000000044da4a : add byte ptr [rax], al ; call 0x2144da3d
0x000000000044d4ca : add byte ptr [rax], al ; clc ; xchg eax, ecx ; sti ; jmp rax
0x000000000044dd96 : add byte ptr [rax], al ; cwde ; cdq ; cld ; call qword ptr [rcx]
0x000000000044eaf6 : add byte ptr [rax], al ; cwde ; out -2, al ; jmp qword ptr [rcx]
0x000000000044d97a : add byte ptr [rax], al ; cwde ; push -1 ; call rax
0x000000000044e996 : add byte ptr [rax], al ; fdivr st(6) ; call rdx
0x000000000044eefa : add byte ptr [rax], al ; je 0x44ef1b ; add byte ptr [rax], al ; push rax ; test bh, bh ; call rdi
0x0000000000401809 : add byte ptr [rax], al ; jmp 0x401689
0x00000000004436f3 : add byte ptr [rax], al ; jmp 0x443702
0x0000000000443855 : add byte ptr [rax], al ; jmp 0x443864
0x0000000000443ac3 : add byte ptr [rax], al ; jmp 0x443ad2
0x000000000044dd32 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; xchg eax, ebx ; cld ; call qword ptr [rsi]
0x000000000044b948 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb0f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041b253 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402107 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e112 : add byte ptr [rax], al ; mov word ptr [rsi], es ; add byte ptr [rax], al ; pop rax ; or edi, ebp ; jmp rbx
0x000000000044e992 : add byte ptr [rax], al ; or al, 0xf ; add byte ptr [rax], al ; fdivr st(6) ; call rdx
0x000000000044dd92 : add byte ptr [rax], al ; or al, 3 ; add byte ptr [rax], al ; cwde ; cdq ; cld ; call qword ptr [rcx]
0x000000000044df92 : add byte ptr [rax], al ; or al, 5 ; add byte ptr [rax], al ; sbb ah, dl ; cld ; call qword ptr [rdx]
0x000000000044d4da : add byte ptr [rax], al ; or bh, ah ; sti ; jmp qword ptr [rax]
0x000000000044dbce : add byte ptr [rax], al ; out -5, eax ; jmp qword ptr [rcx]
0x000000000044e116 : add byte ptr [rax], al ; pop rax ; or edi, ebp ; jmp rbx
0x000000000044e456 : add byte ptr [rax], al ; pop rax ; pushfq ; std ; call qword ptr [rdx]
0x000000000040721a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004371d3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d65d : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000417011 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044eefe : add byte ptr [rax], al ; push rax ; test bh, bh ; call rdi
0x000000000044bc2e : add byte ptr [rax], al ; ret
0x000000000044f1ae : add byte ptr [rax], al ; ror dl, -1 ; call qword ptr [rax]
0x000000000044df76 : add byte ptr [rax], al ; sbb ah, dl ; cld ; call qword ptr [rdx]
0x000000000044dcb2 : add byte ptr [rax], al ; sub al, 2 ; add byte ptr [rax], al ; test al, 0x39 ; cld ; call qword ptr [rbx]
0x000000000044dcb6 : add byte ptr [rax], al ; test al, 0x39 ; cld ; call qword ptr [rbx]
0x000000000044dcd6 : add byte ptr [rax], al ; test al, 0x3c ; cld ; jmp qword ptr [rax]
0x000000000044dd37 : add byte ptr [rax], bh ; xchg eax, ebx ; cld ; call qword ptr [rsi]
0x000000000044d98b : add byte ptr [rax], bh ; xchg edi, edi ; call qword ptr [rax]
0x000000000044e9b7 : add byte ptr [rax], cl ; fsin ; call qword ptr [rdx]
0x000000000044d4db : add byte ptr [rax], cl ; out -5, eax ; jmp qword ptr [rax]
0x000000000044f0bf : add byte ptr [rax], dl ; ret
0x0000000000443764 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000410868 : add byte ptr [rbp + 1], cl ; ret
0x000000000042639d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000042653b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000417690 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000040bbdb : add byte ptr [rbx + 0x3c2d9445], cl ; ret
0x000000000040bc1d : add byte ptr [rbx + 0x3d2d9445], cl ; ret
0x00000000004371d4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d65e : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041d4d4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000041d600 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000043f5ec : add byte ptr [rbx + 0x4c2d8c45], cl ; pushfq ; ret
0x000000000043f650 : add byte ptr [rbx + 0x4d2d8c45], cl ; pushfq ; ret
0x0000000000417198 : add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x00000000004171da : add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x0000000000417012 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004180ae : add byte ptr [rbx + 0xf2dc045], cl ; ret
0x000000000044dd93 : add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; cwde ; cdq ; cld ; call qword ptr [rcx]
0x000000000043a3c5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043a37a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041e620 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000423865 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000041e162 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004236a3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044987e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041174d : add byte ptr [rbx - 0x6bd22fbb], cl ; cdq ; ret 0x890e
0x000000000041170b : add byte ptr [rbx - 0x6cd22fbb], cl ; cdq ; ret 0x890e
0x000000000044b949 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000043cd2b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000445366 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000043ed7f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000405ef3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000044dbcb : add byte ptr [rcx + rax], al ; add byte ptr [rax - 0x19], al ; sti ; jmp qword ptr [rcx]
0x0000000000410858 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; ret
0x000000000040e537 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bd8 : add byte ptr [rcx], al ; ret
0x000000000044b905 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000411e6e : add byte ptr [rcx], al ; ret 0xf281
0x000000000043d36f : add byte ptr [rcx], bh ; ret 0xf40
0x000000000044bb67 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000043bb72 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000044e993 : add byte ptr [rdi + rcx], cl ; add byte ptr [rax], al ; fdivr st(6) ; call rdx
0x000000000044f1ab : add byte ptr [rdi + rdx], ah ; add byte ptr [rax], al ; ror dl, -1 ; call qword ptr [rax]
0x000000000044d4d8 : add byte ptr [rdi], al ; add byte ptr [rax], al ; or bh, ah ; sti ; jmp qword ptr [rax]
0x000000000044acd3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000044080d : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041823e : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000406ff4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e1e7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000448727 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043bafc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a6b4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ac80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000044dd33 : add byte ptr [rdx + rax - 0x6cc80000], ch ; cld ; call qword ptr [rsi]
0x000000000044dcb3 : add byte ptr [rdx + rax], ch ; add byte ptr [rax], al ; test al, 0x39 ; cld ; call qword ptr [rbx]
0x0000000000405bbd : add byte ptr [rdx], 0x65 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x000000000041c3dd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000044e113 : add byte ptr [rsi + rax + 0xb580000], cl ; std ; jmp rbx
0x0000000000445b4d : add byte ptr gs:[rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x0000000000405eee : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040a0e0 : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004340fc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040db6b : add cl, ch ; ret
0x000000000041b656 : add cl, ch ; ret 1
0x0000000000426ab1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000419baa : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x0000000000417452 : add dword ptr [rax], eax ; add bh, al ; in al, 0x57 ; ret 0xc750
0x000000000040bb98 : add dword ptr [rax], eax ; add bh, al ; mov r12b, 0x3d ; ret
0x000000000042274e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044dbcd : add dword ptr [rax], eax ; add byte ptr [rax - 0x19], al ; sti ; jmp qword ptr [rcx]
0x0000000000411709 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6cd22fbb], cl ; cdq ; ret 0x890e
0x000000000041b654 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042675f : add dword ptr [rax], ecx ; ret 0x840
0x000000000044dbcc : add dword ptr [rax], r8d ; add byte ptr [rax - 0x19], al ; sti ; jmp qword ptr [rcx]
0x000000000041ff10 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043d397 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044ae52 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040eafe : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c51f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bd4 : add eax, 0x24e77e ; add ebx, esi ; ret
0x000000000044df95 : add eax, 0xd4180000 ; cld ; call qword ptr [rdx]
0x000000000043e5c4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041be5e : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b9b : add eax, edx ; sar rax, 1 ; jne 0x401bac ; pop rbp ; ret
0x000000000040f173 : add ebx, dword ptr [rdx - 0x38b2464a] ; ret 0x48cd
0x0000000000401bd9 : add ebx, esi ; ret
0x00000000004225c9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004051a6 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x00000000004059f3 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000040219b : add esp, 0x10 ; pop rbp ; ret
0x000000000040e535 : add esp, 0x100 ; pop rbp ; ret
0x000000000041e8c8 : add esp, 0x140 ; pop rbp ; ret
0x000000000040f430 : add esp, 0x150 ; pop rbp ; ret
0x0000000000423323 : add esp, 0x160 ; pop rbp ; ret
0x0000000000421ae8 : add esp, 0x180 ; pop rbp ; ret
0x000000000041f7bd : add esp, 0x190 ; pop rbp ; ret
0x0000000000424ee5 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000422769 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004261bf : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000440abf : add esp, 0x1f0 ; pop rbp ; ret
0x000000000041f894 : add esp, 0x20 ; pop rbp ; ret
0x000000000043a07d : add esp, 0x240 ; pop rbp ; ret
0x0000000000407216 : add esp, 0x250 ; pop rbp ; ret
0x0000000000418456 : add esp, 0x30 ; pop rbp ; ret
0x000000000041a5a6 : add esp, 0x40 ; pop rbp ; ret
0x00000000004493a9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000402372 : add esp, 0x50 ; pop rbp ; ret
0x000000000043ce50 : add esp, 0x60 ; pop rbp ; ret
0x0000000000438ae2 : add esp, 0x70 ; pop rbp ; ret
0x0000000000445aaf : add esp, 0x710 ; pop rbp ; ret
0x000000000041194c : add esp, 0x80 ; pop rbp ; ret
0x000000000041c29f : add esp, 0x88 ; pop rbp ; ret
0x000000000041683d : add esp, 0x8b0 ; pop rbp ; ret
0x000000000041cd6d : add esp, 0x90 ; pop rbp ; ret
0x000000000040b7ca : add esp, 0x9a0 ; pop rbp ; ret
0x000000000041a44b : add esp, 0xa0 ; pop rbp ; ret
0x0000000000411d44 : add esp, 0xb0 ; pop rbp ; ret
0x000000000041700d : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041838c : add esp, 0xc0 ; pop rbp ; ret
0x000000000041d2cd : add esp, 0xd0 ; pop rbp ; ret
0x000000000041d8c8 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044625f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000428083 : add esp, 8 ; pop rbp ; ret
0x000000000040166e : add esp, 8 ; ret
0x00000000004063cd : add esp, dword ptr [rbp] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004051c2 : add esp, dword ptr [rbp] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x00000000004051a3 : add esp, dword ptr [rbp] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x0000000000417081 : add esp, dword ptr [rbp] ; pop rbp ; ret
0x0000000000401b9a : add rax, rdx ; sar rax, 1 ; jne 0x401bad ; pop rbp ; ret
0x000000000040219a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040e534 : add rsp, 0x100 ; pop rbp ; ret
0x000000000041e8c7 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040f42f : add rsp, 0x150 ; pop rbp ; ret
0x0000000000423322 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000421ae7 : add rsp, 0x180 ; pop rbp ; ret
0x000000000041f7bc : add rsp, 0x190 ; pop rbp ; ret
0x0000000000424ee4 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000422768 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004261be : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000440abe : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000041f893 : add rsp, 0x20 ; pop rbp ; ret
0x000000000043a07c : add rsp, 0x240 ; pop rbp ; ret
0x0000000000407215 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000418455 : add rsp, 0x30 ; pop rbp ; ret
0x000000000041a5a5 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004493a8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000402371 : add rsp, 0x50 ; pop rbp ; ret
0x000000000043ce4f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000438ae1 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000445aae : add rsp, 0x710 ; pop rbp ; ret
0x000000000041194b : add rsp, 0x80 ; pop rbp ; ret
0x000000000041c29e : add rsp, 0x88 ; pop rbp ; ret
0x000000000041683c : add rsp, 0x8b0 ; pop rbp ; ret
0x000000000041cd6c : add rsp, 0x90 ; pop rbp ; ret
0x000000000040b7c9 : add rsp, 0x9a0 ; pop rbp ; ret
0x000000000041a44a : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000411d43 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041700c : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041838b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041d2cc : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041d8c7 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044625e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000428082 : add rsp, 8 ; pop rbp ; ret
0x000000000040166d : add rsp, 8 ; ret
0x000000000043fe69 : and ah, dh ; ret 0x89c5
0x0000000000440917 : and ah, dh ; ret 0xb9c5
0x0000000000440afd : and ah, dh ; ret 0xe9c5
0x0000000000401bd7 : and al, 0 ; add ebx, esi ; ret
0x000000000044f1ac : and al, 0x17 ; add byte ptr [rax], al ; ror dl, -1 ; call qword ptr [rax]
0x000000000044b90d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000414111 : and al, 0xffffffffffffff89 ; test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x000000000040eafd : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c51e : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426aaf : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000044ec19 : and bh, bh ; jmp qword ptr [rax]
0x0000000000420e8a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000446790 : and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000043ca5b : and byte ptr [rsi + 0x58], ah ; jb 0x43ca92 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000426aae : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041707f : and eax, 0x650378 ; pop rbp ; ret
0x0000000000433331 : and eax, 0x75b4b9d3 ; ret
0x0000000000445aed : and eax, dword ptr [rbx - 0x17] ; ret 0
0x0000000000443e48 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000044395f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000443f0a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000043fe1e : and esi, esp ; ret 0x89c5
0x0000000000445aad : call 0x1108dc03
0x000000000044da4c : call 0x2144da3b
0x0000000000445447 : call 0x4016c2
0x000000000043ce55 : call 0x43cf19
0x00000000004269ff : call 0x4904f34f
0x00000000004269fe : call 0x4904f350
0x0000000000426a4d : call 0x4904f39d
0x0000000000426a4c : call 0x4904f39e
0x000000000043e9ed : call 0xffffffffaca4ac21
0x000000000043e9ec : call 0xffffffffaca4ac22
0x0000000000436de9 : call 0xffffffffe905f739
0x0000000000436de8 : call 0xffffffffe905f73a
0x000000000044160b : call 0xffffffffffb49bdd
0x000000000044160a : call 0xffffffffffb49bde
0x000000000044bc09 : call qword ptr [r12 + rbx*8]
0x000000000040b87d : call qword ptr [rax]
0x00000000004063d6 : call qword ptr [rbx]
0x000000000044944c : call qword ptr [rcx]
0x000000000040de33 : call qword ptr [rdi]
0x000000000043225b : call qword ptr [rdx]
0x000000000044dd3b : call qword ptr [rsi]
0x000000000044bc0a : call qword ptr [rsp + rbx*8]
0x0000000000445352 : call r8
0x0000000000401bfd : call rax
0x0000000000445aea : call rbx
0x0000000000409ec6 : call rcx
0x000000000041517b : call rdi
0x0000000000405195 : call rdx
0x0000000000407389 : call rsi
0x0000000000414c54 : call rsp
0x000000000044dd99 : cdq ; cld ; call qword ptr [rcx]
0x0000000000411711 : cdq ; ret 0x890e
0x000000000041167f : cdq ; ret 0x8b0e
0x000000000043ee52 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f42e : clc ; add rsp, 0x150 ; pop rbp ; ret
0x000000000041f7bb : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000440abd : clc ; add rsp, 0x1f0 ; pop rbp ; ret
0x00000000004493a7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000043c1b7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041cd6b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000440ea9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401b9f : clc ; jne 0x401ba8 ; pop rbp ; ret
0x0000000000443e49 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000443c13 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000042627e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041b39b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041b3bb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000443661 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000040c1d8 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b258 : clc ; pop rbp ; ret
0x000000000043fb9e : clc ; pop rbx ; pop rbp ; ret
0x00000000004298bd : clc ; ret 0x77a8
0x000000000044d4cc : clc ; xchg eax, ecx ; sti ; jmp rax
0x0000000000443960 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004021c7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e533 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041194a : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043f36e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044625d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000044dcba : cld ; call qword ptr [rbx]
0x000000000044dd9a : cld ; call qword ptr [rcx]
0x000000000044df7a : cld ; call qword ptr [rdx]
0x000000000044dd3a : cld ; call qword ptr [rsi]
0x00000000004176bf : cld ; jmp 0x41772c
0x00000000004176be : cld ; jmp 0x41772d
0x000000000044dcda : cld ; jmp qword ptr [rax]
0x000000000044d50e : cld ; jmp rax
0x000000000042386a : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000423fbb : cld ; stc ; in al, dx ; ret 0xff3
0x000000000043ca60 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044b90c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043b97b : cmc ; ret 0x4f0b
0x000000000044dcd9 : cmp al, -4 ; jmp qword ptr [rax]
0x000000000043ac22 : cmp al, 0x25 ; ret
0x000000000044678e : cmp cl, byte ptr [rdx] ; and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000043bb11 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000041e8f2 : cmp dword ptr [rax - 0x75], ecx ; jne 0x41e8d4 ; call rax
0x0000000000441a72 : cmp dword ptr [rax - 0x75], ecx ; xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000418e09 : cmp eax, 0x45c6a0d8 ; ret
0x0000000000401b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b70 ; pop rbp ; ret
0x0000000000434187 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000044dcb9 : cmp esp, edi ; call qword ptr [rbx]
0x000000000044dd98 : cwde ; cdq ; cld ; call qword ptr [rcx]
0x000000000044eaf8 : cwde ; out -2, al ; jmp qword ptr [rcx]
0x000000000044d97c : cwde ; push -1 ; call rax
0x000000000040714d : dec byte ptr [rdi] ; pushfq ; ret 0xd284
0x0000000000426217 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000043368b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000432ffe : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000433803 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000410e0e : dec dword ptr [rax - 0x77] ; add al, bh ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x000000000043cb8d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000448f06 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000043ac4b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410855 : dec dword ptr [rbp - 0x75] ; add byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; ret
0x000000000043fb3d : dec dword ptr [rbx - 0x1276b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000406286 : dec dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x00000000004409c3 : dec dword ptr [rbx - 0x1cf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000407383 : dec dword ptr [rcx - 0x4f167e3f] ; call rsi
0x000000000043b976 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000043fb43 : dec dword ptr [rdi] ; ret 0x4589
0x000000000041c6c1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042153b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000041be5a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000042959a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000442924 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000044039f : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff9], dl ; ret 1
0x000000000041b650 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040db65 : dec dword ptr [rdi] ; test dh, al ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000424935 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000445957 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x000000000043e3be : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000448d33 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000426cd1 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000426cd0 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041cad0 : enter -0x74b8, 0x31 ; call rax
0x0000000000445282 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448989 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410a13 : enter 0x548, 2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x0000000000443785 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000421818 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000442395 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041823a : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043e3a0 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000443a3b : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000044e999 : fdivr st(6) ; call rdx
0x000000000042153e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000043e37f : fild word ptr [rcx - 0x77] ; ret
0x000000000041aaf7 : fimul dword ptr [rax + 0x29] ; ret 0xf748
0x0000000000443f0b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000449ec8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042041e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000449567 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004467d6 : fmul dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000042041f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041cacc : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000041d80d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041c0f9 : fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000449568 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000044bc0c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000044e9b9 : fsin ; call qword ptr [rdx]
0x0000000000402199 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000449acc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000428081 : hlt ; add rsp, 8 ; pop rbp ; ret
0x000000000043fb9a : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000401b70 : hlt ; pop rbp ; mov edi, 0x6502f0 ; jmp rax
0x000000000043cb8b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004162a8 : imul eax, dword ptr [rbp + 0x2c], -0x47 ; push rsp ; ret 0x8be9
0x0000000000444291 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000417457 : in al, 0x57 ; ret 0xc750
0x00000000004162c4 : in al, 7 ; jb 0x416286 ; push rsp ; ret 0x8be9
0x000000000040bb96 : in al, dx ; add dword ptr [rax], eax ; add bh, al ; mov r12b, 0x3d ; ret
0x0000000000411d42 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004266e1 : in al, dx ; jmp 0x4268ad
0x00000000004266e0 : in al, dx ; jmp 0x4268ae
0x000000000043eaac : in al, dx ; jmp 0x43eb29
0x000000000043eaab : in al, dx ; jmp 0x43eb2a
0x00000000004438f5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040210b : in al, dx ; pop rbp ; ret
0x00000000004236aa : in al, dx ; ret 0x8589
0x00000000004266c4 : in al, dx ; ret 0xe8ff
0x0000000000423fbd : in al, dx ; ret 0xff3
0x00000000004430fa : in eax, dx ; adc eax, ebp ; js 0x4430ed ; ret
0x0000000000445362 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000406ff0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ac7c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040f1fd : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x000000000040d6b0 : inc dword ptr [rbp - 0x77] ; ret
0x0000000000404bff : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004453a0 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x000000000040a7b8 : inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040a6b0 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040618d : inc dword ptr [rcx] ; scasb al, byte ptr [rdi] ; ret 0xe9c4
0x0000000000440af9 : inc edi ; lodsb al, byte ptr [rsi] ; and ah, dh ; ret 0xe9c5
0x0000000000439297 : int 0x5b
0x00000000004246d4 : int 6
0x0000000000401b63 : ja 0x401b6a ; pop rbp ; ret
0x0000000000426281 : ja 0x4262ce ; pop rbp ; ret
0x00000000004162c6 : jb 0x416284 ; push rsp ; ret 0x8be9
0x000000000043ca5e : jb 0x43ca8f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000409f2e : jbe 0x409eeb ; ret
0x0000000000401b6f : je 0x401b6d ; pop rbp ; mov edi, 0x6502f0 ; jmp rax
0x000000000044eefc : je 0x44ef19 ; add byte ptr [rax], al ; push rax ; test bh, bh ; call rdi
0x000000000041b39a : jge 0x41b39b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041b3ba : jge 0x41b3bb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041cacb : jge 0x41caae ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042627d : jge 0x42627e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000432726 : jge 0x4326ab ; ret 0xffd5
0x00000000004331f0 : jge 0x4331d0 ; shr cl, cl ; ret 0x3b
0x00000000004412f5 : jge 0x44134c ; ret 0x89b9
0x0000000000441775 : jge 0x4417cc ; ret 0xb2b9
0x0000000000441791 : jge 0x4417e8 ; ret 0x48b9
0x0000000000445437 : jge 0x4453eb ; call rax
0x0000000000445873 : jge 0x445827 ; call rax
0x0000000000445a04 : jge 0x4459b0 ; call rax
0x0000000000445a75 : jge 0x445a21 ; call rax
0x00000000004411c1 : jl 0x441218 ; ret 0x89b9
0x0000000000401bd5 : jle 0x401bc4 ; and al, 0 ; add ebx, esi ; ret
0x0000000000423408 : jle 0x42339c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000040180b : jmp 0x401687
0x00000000004053ad : jmp 0x40667f
0x000000000040b77e : jmp 0x40bb87
0x000000000040b77d : jmp 0x40bb88
0x0000000000410ac9 : jmp 0x410e8f
0x0000000000416224 : jmp 0x416bf9
0x00000000004176c0 : jmp 0x41772b
0x0000000000418229 : jmp 0x4183ad
0x000000000041c0d4 : jmp 0x41c330
0x000000000041c969 : jmp 0x41caf5
0x000000000041e7fa : jmp 0x41e93e
0x000000000041e7f9 : jmp 0x41e93f
0x000000000041e7f9 : jmp 0x41e940
0x00000000004266e2 : jmp 0x4268ac
0x00000000004347b5 : jmp 0x4347ba
0x00000000004347b4 : jmp 0x4347bb
0x00000000004347b4 : jmp 0x4347bc
0x0000000000433940 : jmp 0x436dc0
0x0000000000431844 : jmp 0x436dc1
0x0000000000432c11 : jmp 0x436dc2
0x000000000043ad9b : jmp 0x43b807
0x000000000043acd8 : jmp 0x43b809
0x000000000043ac1b : jmp 0x43b80a
0x000000000043ce03 : jmp 0x43ce68
0x000000000043eaad : jmp 0x43eb28
0x000000000044176a : jmp 0x441913
0x00000000004436f5 : jmp 0x443700
0x0000000000443857 : jmp 0x443862
0x0000000000443ac5 : jmp 0x443ad0
0x0000000000445813 : jmp 0x445bbc
0x0000000000445385 : jmp 0x445bbd
0x0000000000449246 : jmp 0x449528
0x0000000000423d3f : jmp 0x4904c68f
0x0000000000423e8b : jmp 0x4904c7db
0x0000000000423f5d : jmp 0x4904c8ad
0x0000000000423fde : jmp 0x4904c92e
0x0000000000425f84 : jmp 0x4904e8d4
0x0000000000425fff : jmp 0x4904e94f
0x000000000043b97a : jmp 0x4f4f7c76
0x000000000043e16f : jmp 0xffffffffc4081836
0x0000000000436715 : jmp qword ptr [rax]
0x0000000000405bc6 : jmp qword ptr [rbx]
0x0000000000405445 : jmp qword ptr [rcx]
0x00000000004168e7 : jmp qword ptr [rdi]
0x000000000043bc0a : jmp qword ptr [rdx]
0x0000000000408dda : jmp qword ptr [rsi]
0x0000000000401b77 : jmp rax
0x0000000000406511 : jmp rbx
0x000000000040c5c5 : jmp rcx
0x0000000000406db1 : jmp rdi
0x0000000000401bb7 : jmp rdx
0x0000000000445b65 : jmp rsi
0x000000000040b7fe : jmp rsp
0x0000000000401ba0 : jne 0x401ba7 ; pop rbp ; ret
0x000000000041cb29 : jne 0x41caf4 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000041e8f5 : jne 0x41e8d1 ; call rax
0x0000000000426cd2 : jne 0x426cca ; mov rax, rdx ; pop rbp ; ret
0x000000000040b77b : jnp 0x40b750 ; jmp 0x40bb8a
0x000000000040028d : jo 0x400296 ; xor eax, 0x896e1c9 ; ret
0x0000000000413736 : jo 0x4136bb ; ret 0x890c
0x0000000000415a80 : jo 0x415a05 ; ret 0xba0c
0x0000000000415afc : jo 0x415a81 ; ret 0xb90c
0x000000000042c63e : jo 0x42c64a ; ret
0x000000000042e2ae : jo 0x42e2ba ; ret
0x00000000004317fd : jo 0x431809 ; ret
0x0000000000438ae4 : jo 0x438b45 ; ret
0x000000000044066a : jrcxz 0x440627 ; ret
0x00000000004430fd : js 0x4430ea ; ret
0x0000000000444896 : lahf ; ret 0x7a
0x00000000004331ee : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004342ee : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000417ec6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426c41 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000438dd9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043fb9c : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000426c40 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043fb9b : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000416ab4 : ljmp ptr [rdi + 0x53] ; ret 0x899e
0x0000000000431b4e : ljmp ptr [rdi] ; ret 0x23da
0x000000000040db68 : lock or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000044d988 : lock sbb dword ptr [rax], eax ; add byte ptr [rax], bh ; xchg edi, edi ; call qword ptr [rax]
0x000000000044dd34 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; xchg eax, ebx ; cld ; call qword ptr [rsi]
0x0000000000440afc : lodsb al, byte ptr [rsi] ; and ah, dh ; ret 0xe9c5
0x000000000041be5d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041b4a0 : loop 0x41b495 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x00000000004439f2 : loop 0x4439a5 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041c1de : loope 0x41c199 ; xchg eax, ebp ; jmp 0x41c333
0x0000000000434b55 : loope 0x434b23 ; jmp 0x436dc3
0x000000000041719b : loopne 0x4171cd ; push rsi ; ret 0xc750
0x000000000041719a : loopne 0x4171ce ; push rsi ; ret 0xc750
0x00000000004171dd : loopne 0x41720f ; push rdi ; ret 0xc750
0x00000000004171dc : loopne 0x417210 ; push rdi ; ret 0xc750
0x000000000041838a : loopne 0x4183dd ; add esp, 0xc0 ; pop rbp ; ret
0x000000000041d8ca : loopne 0x41d8d1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420f1e : loopne 0x420f6f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000420f1d : loopne 0x420f70 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004261bd : loopne 0x426210 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000428f33 : loopne 0x428f86 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004384dd : loopne 0x438543 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004398c4 : loopne 0x439917 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000043c4c3 : loopne 0x43c4cc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043ce4e : loopne 0x43ce9e ; add esp, 0x60 ; pop rbp ; ret
0x000000000043ce4d : loopne 0x43ce9f ; add esp, 0x60 ; pop rbp ; ret
0x000000000043f372 : loopne 0x43f379 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000449ad0 : loopne 0x449ad7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044b94c : loopne 0x44b99b ; mov esp, ebp ; pop rbp ; ret
0x000000000044b94b : loopne 0x44b99c ; mov esp, ebp ; pop rbp ; ret
0x000000000044bb9c : loopne 0x44bbeb ; mov esp, ebp ; pop rbp ; ret
0x000000000044bb9b : loopne 0x44bbec ; mov esp, ebp ; pop rbp ; ret
0x00000000004430f9 : mov ah, -0x13 ; adc eax, ebp ; js 0x4430ee ; ret
0x00000000004439f1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000043271d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004327f7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043ec9a : mov ah, 0x2d ; ret 0xe41a
0x000000000040bb9d : mov ah, 0x3d ; ret
0x0000000000402370 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004307a5 : mov ah, 0x75 ; ret
0x0000000000445a0b : mov al, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x00000000004392b3 : mov al, -0x47 ; ret
0x000000000041c1df : mov al, -0x6b ; jmp 0x41c332
0x0000000000448a0f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000445a28 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414c6b : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411d46 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044d978 : mov al, 0x19 ; add byte ptr [rax], al ; cwde ; push -1 ; call rax
0x00000000004255c0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000041683f : mov al, 8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443e4b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000044a1bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000449e8a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c51b : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000443f0c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000443e4a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x0000000000443c14 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000443c19 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004031ce : mov bh, -0x6c ; pop rcx ; ret 0x8589
0x000000000042a145 : mov bl, 0x75 ; ret
0x00000000004150dc : mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000041c2a1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bd3 : mov byte ptr [rip + 0x24e77e], 1 ; ret
0x0000000000431f9f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043a10b : mov cl, 0x32 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404baf : mov dh, -0x17 ; ret
0x0000000000426ab4 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000419bad : mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ff12 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043d399 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044ae54 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040eb00 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c521 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000443f0f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000044b90a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000044ab81 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000041707d : mov dword ptr [0x650378], edi ; pop rbp ; ret
0x00000000004286b9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042828f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e775 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000420db9 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x00000000004266df : mov dword ptr [rbp - 0x14], eax ; jmp 0x4268af
0x000000000043eaaa : mov dword ptr [rbp - 0x14], eax ; jmp 0x43eb2b
0x0000000000424b8d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000424dc0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000041c0d1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x41c333
0x000000000041c966 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x41caf8
0x000000000041c9f1 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x41caf8
0x000000000040236e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044534c : mov dword ptr [rbp - 0x6c8], eax ; call r8
0x000000000043ad98 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x43b80a
0x0000000000445441 : mov dword ptr [rbp - 0x6d4], ecx ; call 0x4016c8
0x00000000004455a5 : mov dword ptr [rbp - 0x6e8], ecx ; call rdx
0x0000000000445770 : mov dword ptr [rbp - 0x6f8], ecx ; call rdx
0x0000000000402197 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c9d1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x00000000004021c5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000428996 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426280 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000042853d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041700f : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000424f2b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000445432 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000445a70 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000445b25 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x470] ; call rax
0x0000000000445a00 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000406287 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043cccb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000441a35 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043ce9e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418452 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041957e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043e925 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb12 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043ce4c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044b94a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a5a2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042853f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041cb2f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000424357 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042807f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000043fb98 : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043ee50 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c1d6 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b256 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041b39d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041b3bd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042853e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000443c16 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000443663 : mov eax, eax ; pop rbp ; ret
0x0000000000443a3a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041f891 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426cd5 : mov eax, edx ; pop rbp ; ret
0x000000000044395d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000443c15 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000417451 : mov ebp, 0xc7000001 ; in al, 0x57 ; ret 0xc750
0x0000000000434f58 : mov ebp, 0xe19c53ba ; ret
0x000000000040afb6 : mov ebp, 0xe9890487 ; ret 0xb
0x0000000000445b29 : mov ebp, 0xfffffb90 ; call rax
0x0000000000401bfb : mov ebp, esp ; call rax
0x0000000000401b61 : mov ebp, esp ; ja 0x401b6c ; pop rbp ; ret
0x00000000004108e3 : mov ebx, 0x5bb9effe ; ret 0xd0b
0x0000000000410aca : mov ebx, 0xb8000003 ; ret
0x0000000000410a08 : mov ecx, 0xd85ebbc2 ; xchg eax, ebp ; ret 0x2018
0x000000000042828c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420ccb : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000420f1c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000421836 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041cace : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000424f2d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420ccf : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040afb9 : mov ecx, ebp ; ret 0xb
0x0000000000401bf5 : mov edi, 0x64fe20 ; mov rbp, rsp ; call rax
0x0000000000401b72 : mov edi, 0x6502f0 ; jmp rax
0x0000000000401bb2 : mov edi, 0x6502f0 ; jmp rdx
0x00000000004266e3 : mov edi, 0xb8000001 ; ret
0x00000000004317f7 : mov edi, 0xb8000055 ; wait ; jo 0x43180f ; ret
0x0000000000445b28 : mov edi, dword ptr [rbp - 0x470] ; call rax
0x0000000000445436 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x0000000000445a03 : mov edi, dword ptr [rbp - 0x58] ; call rax
0x000000000042627c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041b399 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041b3b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000420cd2 : mov edi, dword ptr [rcx] ; call rax
0x000000000041e8f1 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044bc07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000044bc06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004491be : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000431fbb : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000443152 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000432e32 : mov esi, 0x39443e04 ; ret 0xf41
0x00000000004491a7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041e8f4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000041cad2 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401bb0 : mov esi, eax ; mov edi, 0x6502f0 ; jmp rdx
0x000000000041cb2c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004463d5 : mov esp, 0x5ba9942d ; ret
0x0000000000446417 : mov esp, 0x5ba9952d ; ret
0x000000000040210a : mov esp, ebp ; pop rbp ; ret
0x000000000041707c : mov qword ptr [0x650378], rdi ; pop rbp ; ret
0x0000000000428995 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000042627f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004430f8 : mov r12b, -0x13 ; adc eax, ebp ; js 0x4430ef ; ret
0x000000000043ec99 : mov r12b, 0x2d ; ret 0xe41a
0x000000000040bb9c : mov r12b, 0x3d ; ret
0x000000000040236f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004463d4 : mov r12d, 0x5ba9942d ; ret
0x0000000000446416 : mov r12d, 0x5ba9952d ; ret
0x0000000000445a0a : mov r8b, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x0000000000445431 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000445a6f : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x00000000004459ff : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000041bada : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ccca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043ce9d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418451 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041957d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eb11 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043ce4b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a5a1 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041cb2e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043ee4f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c1d5 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b255 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041b39c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041b3bc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000443a39 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000443662 : mov rax, r8 ; pop rbp ; ret
0x000000000041f890 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426cd4 : mov rax, rdx ; pop rbp ; ret
0x0000000000401bfa : mov rbp, rsp ; call rax
0x0000000000401b60 : mov rbp, rsp ; ja 0x401b6d ; pop rbp ; ret
0x0000000000421835 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041cacd : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000424f2c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420cce : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000445b27 : mov rdi, qword ptr [rbp - 0x470] ; call rax
0x0000000000445435 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x0000000000445a02 : mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000042627b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041b398 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041b3b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000420cd1 : mov rdi, qword ptr [rcx] ; call rax
0x000000000041e8f0 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000443151 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x000000000041e8f3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000041cad1 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401baf : mov rsi, rax ; mov edi, 0x6502f0 ; jmp rdx
0x000000000041cb2b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000402109 : mov rsp, rbp ; pop rbp ; ret
0x000000000043ca61 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044e114 : mov word ptr [rsi], es ; add byte ptr [rax], al ; pop rax ; or edi, ebp ; jmp rbx
0x0000000000445482 : movabs al, byte ptr [0xa0b80000072de96b] ; ret 0x7a
0x000000000043e011 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000042da98 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000423fba : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000430ce5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041ff11 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043d398 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044ae53 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040eaff : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c520 : movzx eax, al ; pop rbp ; ret
0x0000000000443f0e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000443c18 : movzx eax, ax ; pop rbp ; ret
0x0000000000426ab3 : movzx eax, bh ; pop rbp ; ret
0x0000000000419bac : movzx eax, dh ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426ab2 : movzx eax, dil ; pop rbp ; ret
0x0000000000419bab : movzx eax, sil ; mov rsp, rbp ; pop rbp ; ret
0x0000000000448fb8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000429f85 : nop ; ret
0x0000000000438392 : nop ; ret 0x148
0x00000000004383a6 : nop ; ret 0x2948
0x000000000044bc28 : nop dword ptr [rax + rax] ; ret
0x000000000043271a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004327f4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000044e994 : or al, 0xf ; add byte ptr [rax], al ; fdivr st(6) ; call rdx
0x000000000040d678 : or al, 0xffffffffffffffe9 ; ret
0x000000000044dd94 : or al, 3 ; add byte ptr [rax], al ; cwde ; cdq ; cld ; call qword ptr [rcx]
0x000000000044df94 : or al, 5 ; add byte ptr [rax], al ; sbb ah, dl ; cld ; call qword ptr [rdx]
0x000000000044d4dc : or bh, ah ; sti ; jmp qword ptr [rax]
0x00000000004266c1 : or bh, al ; in al, dx ; ret 0xe8ff
0x000000000043e6d5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000042340d : or byte ptr [r15], 0x8f ; ret 6
0x0000000000428290 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043a378 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004162a7 : or byte ptr [rbx + 0x45], ch ; sub al, -0x47 ; push rsp ; ret 0x8be9
0x000000000041053a : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040e1e1 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042340e : or byte ptr [rdi], 0x8f ; ret 6
0x000000000043e6d4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040ea4b : or dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000040ea15 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000428994 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044e455 : or dword ptr [rax], eax ; add byte ptr [rax - 0x64], bl ; std ; call qword ptr [rdx]
0x000000000040db69 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000405b53 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000043ac1d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041c3db : or eax, dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000443660 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000443963 : or eax, esi ; pop rbp ; ret
0x0000000000443a37 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000042853b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044e119 : or edi, ebp ; jmp rbx
0x0000000000443a36 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000044365f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000044da4d : out -1, eax ; jmp qword ptr [rax]
0x000000000044eaf9 : out -2, al ; jmp qword ptr [rcx]
0x000000000044d4dd : out -5, eax ; jmp qword ptr [rax]
0x000000000044dbd1 : out -5, eax ; jmp qword ptr [rcx]
0x0000000000401bd6 : out 0x24, eax ; add byte ptr [rcx], al ; ret
0x0000000000426ab0 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004340fb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000449e8c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422449 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004225c8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044a1bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004392b2 : out dx, eax ; mov al, -0x47 ; ret
0x00000000004491a9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000412412 : outsb dx, byte ptr [rsi] ; push rbx ; ret 0x899e
0x0000000000407c6c : outsb dx, byte ptr [rsi] ; ret
0x000000000041c3c9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004351e5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000429e36 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000435230 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000043bc01 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000412466 : outsd dx, dword ptr [rsi] ; push rbx ; ret 0x899e
0x000000000041599e : outsd dx, dword ptr [rsi] ; push rbx ; ret 0xb99e
0x00000000004491ac : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043ca5c : pop ax ; jb 0x43ca91 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000410bb7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044bc1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004384df : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410bb9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044bc1e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410bbb : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044bc20 : pop r14 ; pop r15 ; ret
0x000000000040d660 : pop r14 ; pop rbp ; ret
0x0000000000410bbd : pop r15 ; pop rbp ; ret
0x000000000044bc22 : pop r15 ; ret
0x000000000043ca5d : pop rax ; jb 0x43ca90 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044e118 : pop rax ; or edi, ebp ; jmp rbx
0x000000000044e458 : pop rax ; pushfq ; std ; call qword ptr [rdx]
0x0000000000401bd2 : pop rbp ; mov byte ptr [rip + 0x24e77e], 1 ; ret
0x0000000000401b71 : pop rbp ; mov edi, 0x6502f0 ; jmp rax
0x0000000000401bae : pop rbp ; mov rsi, rax ; mov edi, 0x6502f0 ; jmp rdx
0x000000000044bc1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410bba : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044bc1f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000431fa2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000042e275 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000431fbe : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b65 : pop rbp ; ret
0x00000000004384de : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004371d5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d65f : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000417013 : pop rbx ; pop rbp ; ret
0x000000000043a380 : pop rbx ; ret
0x000000000040fd67 : pop rbx ; ret 0xd0b
0x0000000000431fa3 : pop rcx ; ret 0x1b2
0x0000000000405832 : pop rcx ; ret 0x49b9
0x00000000004031d0 : pop rcx ; ret 0x8589
0x0000000000431fbf : pop rcx ; ret 0x8b48
0x00000000004342f0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000410bbe : pop rdi ; pop rbp ; ret
0x000000000044bc23 : pop rdi ; ret
0x000000000040fa20 : pop rdi ; ret 0x8589
0x0000000000410ad0 : pop rdi ; ret 0x95b9
0x000000000040f70f : pop rdx ; ret 0xd0b
0x0000000000410bbc : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044bc21 : pop rsi ; pop r15 ; ret
0x000000000040d661 : pop rsi ; pop rbp ; ret
0x000000000040a7b7 : pop rsp ; inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000410bb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044bc1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004384e0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042c675 : pop rsp ; pop rcx ; ret 0x8589
0x000000000041c3e0 : pop rsp ; ret 0xf66
0x000000000044acd5 : popfq ; ret 0xd284
0x0000000000422395 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040a9e9 : push -0x456b16ad ; ret
0x0000000000431fa0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043418a : push -0x75425eeb ; push rbp ; ret
0x0000000000430ce8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000044d97d : push -1 ; call rax
0x000000000044d977 : push qword ptr [rax - 0x67ffffe7] ; push -1 ; call rax
0x000000000040028e : push qword ptr [rip + 0x896e1c9] ; ret
0x0000000000402374 : push rax ; pop rbp ; ret
0x000000000044d987 : push rax ; sbb dword ptr [rax], eax ; add byte ptr [rax], bh ; xchg edi, edi ; call qword ptr [rax]
0x000000000044ef00 : push rax ; test bh, bh ; call rdi
0x0000000000443784 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000041d80c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000041c0f8 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004150db : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000401bf4 : push rbp ; mov edi, 0x64fe20 ; mov rbp, rsp ; call rax
0x000000000043418f : push rbp ; ret
0x0000000000434126 : push rbp ; ret 0xd284
0x0000000000424136 : push rbp ; shr al, 1 ; ret
0x000000000043271f : push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004327f9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000441792 : push rbx ; ret 0x48b9
0x0000000000412413 : push rbx ; ret 0x899e
0x00000000004411c2 : push rbx ; ret 0x89b9
0x000000000041213a : push rbx ; ret 0x8be9
0x0000000000441776 : push rbx ; ret 0xb2b9
0x000000000041599f : push rbx ; ret 0xb99e
0x00000000004491ab : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004171df : push rdi ; ret 0xc750
0x0000000000445b5c : push rsi ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x000000000041719d : push rsi ; ret 0xc750
0x000000000041218e : push rsp ; ret 0x8be9
0x000000000043f5f2 : pushfq ; ret
0x0000000000445369 : pushfq ; ret 0x8445
0x000000000040714f : pushfq ; ret 0xd284
0x000000000044e459 : pushfq ; std ; call qword ptr [rdx]
0x0000000000400295 : ret
0x000000000042959e : ret 0
0x000000000041d810 : ret 0x10
0x0000000000410383 : ret 0x13
0x00000000004051b2 : ret 0x14
0x0000000000418e43 : ret 0x148
0x00000000004050b2 : ret 0x15
0x0000000000407b52 : ret 0x1546
0x00000000004352f4 : ret 0x1a
0x000000000042a56d : ret 0x1add
0x0000000000431fa5 : ret 0x1b2
0x000000000041bded : ret 0x1cdd
0x000000000040451a : ret 0x1e
0x000000000041bd15 : ret 0x1e1
0x0000000000410a0e : ret 0x2018
0x0000000000406100 : ret 0x2145
0x000000000041411a : ret 0x22
0x000000000042aeba : ret 0x23da
0x0000000000401a12 : ret 0x24e7
0x0000000000401812 : ret 0x24e8
0x0000000000437bb8 : ret 0x279e
0x000000000041c3ca : ret 0x280f
0x0000000000405a52 : ret 0x28e8
0x000000000040ea18 : ret 0x2948
0x00000000004342f4 : ret 0x2a
0x0000000000432722 : ret 0x2d50
0x00000000004073d2 : ret 0x2f
0x0000000000403c4f : ret 0x2f9c
0x0000000000448d0e : ret 0x3040
0x000000000043fdba : ret 0x315e
0x000000000041d4da : ret 0x3504
0x00000000004331f4 : ret 0x3b
0x0000000000430255 : ret 0x3e
0x000000000040dbd9 : ret 0x3e99
0x0000000000410a29 : ret 0x41e8
0x0000000000413ad2 : ret 0x42f
0x0000000000411d52 : ret 0x43e9
0x0000000000411a49 : ret 0x4589
0x00000000004267ff : ret 0x4802
0x000000000041bab0 : ret 0x4810
0x00000000004491ae : ret 0x4815
0x00000000004351e6 : ret 0x4861
0x0000000000441793 : ret 0x48b9
0x000000000041e167 : ret 0x48c3
0x000000000040f179 : ret 0x48cd
0x0000000000401e7e : ret 0x48f0
0x0000000000405833 : ret 0x49b9
0x000000000040fa1f : ret 0x4a5f
0x000000000042daa1 : ret 0x4b
0x00000000004390b7 : ret 0x4cc0
0x00000000004062ed : ret 0x4cf0
0x000000000043b97c : ret 0x4f0b
0x0000000000444eb6 : ret 0x5475
0x00000000004284eb : ret 0x5589
0x0000000000416357 : ret 0x558a
0x00000000004329aa : ret 0x5966
0x000000000043a5d7 : ret 0x5bc6
0x0000000000410a09 : ret 0x5ebb
0x000000000044b90f : ret 0x61
0x0000000000449408 : ret 0x62e8
0x0000000000429c06 : ret 0x6a8a
0x000000000041636f : ret 0x6fb9
0x00000000004298be : ret 0x77a8
0x0000000000444897 : ret 0x7a
0x000000000042aa21 : ret 0x7a8a
0x000000000043169b : ret 0x7b7f
0x000000000043804a : ret 0x8041
0x0000000000438292 : ret 0x8141
0x000000000041089f : ret 0x8148
0x00000000004335b4 : ret 0x822d
0x0000000000423d42 : ret 0x8348
0x0000000000426761 : ret 0x840
0x0000000000404c03 : ret 0x8445
0x000000000041378a : ret 0x84d8
0x00000000004031d1 : ret 0x8589
0x0000000000405747 : ret 0x858a
0x000000000041c799 : ret 0x86a5
0x0000000000443767 : ret 0x8844
0x00000000004136e4 : ret 0x890c
0x0000000000411712 : ret 0x890e
0x0000000000426376 : ret 0x8938
0x000000000042a633 : ret 0x8940
0x000000000040f201 : ret 0x8944
0x000000000040adff : ret 0x8948
0x00000000004477cf : ret 0x894a
0x0000000000429e37 : ret 0x8961
0x0000000000412414 : ret 0x899e
0x00000000004411c3 : ret 0x89b9
0x0000000000403240 : ret 0x89c4
0x000000000043fe20 : ret 0x89c5
0x0000000000448dc8 : ret 0x8a44
0x0000000000448cc5 : ret 0x8a4a
0x0000000000411680 : ret 0x8b0e
0x0000000000405a9d : ret 0x8b48
0x0000000000405657 : ret 0x8b4c
0x000000000041213b : ret 0x8be9
0x000000000044533b : ret 0x8d89
0x000000000043e3a2 : ret 0x941
0x0000000000443a12 : ret 0x949
0x0000000000410ad2 : ret 0x95b9
0x0000000000440576 : ret 0x9bb9
0x000000000044e21c : ret 0xa
0x00000000004327fc : ret 0xa30b
0x00000000004160c7 : ret 0xa3e8
0x000000000043e9ef : ret 0xac60
0x000000000040afbb : ret 0xb
0x0000000000405696 : ret 0xb0
0x0000000000441777 : ret 0xb2b9
0x0000000000434100 : ret 0xb740
0x000000000043ca57 : ret 0xb848
0x0000000000410885 : ret 0xb849
0x0000000000415afe : ret 0xb90c
0x0000000000432330 : ret 0xb940
0x000000000042047b : ret 0xb948
0x0000000000448c52 : ret 0xb94a
0x00000000004159a0 : ret 0xb99e
0x0000000000440919 : ret 0xb9c5
0x0000000000415a82 : ret 0xba0c
0x0000000000411c0d : ret 0xbcb9
0x0000000000415fa3 : ret 0xbe48
0x000000000043477c : ret 0xbf48
0x0000000000401b95 : ret 0xc148
0x000000000044bb52 : ret 0xc493
0x000000000041719e : ret 0xc750
0x0000000000406f9f : ret 0xca21
0x00000000004426d0 : ret 0xcae8
0x000000000044b915 : ret 0xccb2
0x000000000040f710 : ret 0xd0b
0x0000000000408faa : ret 0xd1a0
0x0000000000406ff7 : ret 0xd284
0x0000000000447415 : ret 0xd618
0x000000000040ac83 : ret 0xe280
0x000000000043ec9c : ret 0xe41a
0x00000000004263a3 : ret 0xe8ff
0x0000000000433fd2 : ret 0xe940
0x0000000000435231 : ret 0xe961
0x0000000000406190 : ret 0xe9c4
0x0000000000440aff : ret 0xe9c5
0x000000000042b05d : ret 0xea51
0x000000000044b907 : ret 0xea81
0x0000000000436dec : ret 0xee8
0x0000000000426745 : ret 0xf280
0x0000000000411e70 : ret 0xf281
0x000000000043d371 : ret 0xf40
0x00000000004104dd : ret 0xf41
0x0000000000424e5c : ret 0xf4e9
0x000000000041c3e1 : ret 0xf66
0x000000000041aafa : ret 0xf748
0x0000000000434d85 : ret 0xf7f3
0x0000000000407ae2 : ret 0xf7fd
0x000000000043350e : ret 0xfc75
0x0000000000423f6f : ret 0xff3
0x0000000000404a48 : ret 0xff70
0x0000000000434d7f : ret 0xffa5
0x0000000000433508 : ret 0xffc4
0x0000000000432728 : ret 0xffd5
0x0000000000432802 : ret 0xffd8
0x00000000004335ba : ret 0xffd9
0x00000000004329a4 : ret 0xffe0
0x0000000000431695 : ret 0xfffa
0x0000000000445449 : ret 0xfffb
0x000000000044ded9 : ret 0xfffc
0x000000000040be86 : ret 1
0x000000000040efa5 : ret 2
0x00000000004103b2 : ret 4
0x0000000000423411 : ret 6
0x00000000004364f4 : ret 8
0x0000000000405cb2 : ret 9
0x000000000044918d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000422fc4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000440e1c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041d2cf : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443efa : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004261c1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044d4c8 : rol byte ptr [rsi], 0 ; add al, bh ; xchg eax, ecx ; sti ; jmp rax
0x000000000044918c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004459fd : ror byte ptr [r8 - 0x75], 0 ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000041e040 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e8ee : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004435a7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043ca54 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bab ; pop rbp ; ret
0x00000000004459fe : ror byte ptr [rax - 0x75], 0 ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000041e041 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e8ef : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000445430 : ror byte ptr [rax - 0x75], 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x4453f2 ; call rax
0x000000000044586c : ror byte ptr [rax - 0x75], 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x44582e ; call rax
0x0000000000445a6e : ror byte ptr [rax - 0x75], 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x445a28 ; call rax
0x00000000004435a8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040eb01 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000041cb2a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000041ff13 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000041c29d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443a35 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000042853a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000443f0d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000044f1b0 : ror dl, -1 ; call qword ptr [rax]
0x0000000000443a0f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000448fbe : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041085b : ror dword ptr [rbp + 0x29], cl ; ret
0x0000000000438f70 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000445aec : sahf ; and eax, dword ptr [rbx - 0x17] ; ret 0
0x0000000000418240 : sahf ; ret 0xd284
0x000000000040028c : sal byte ptr [rax - 1], cl ; xor eax, 0x896e1c9 ; ret
0x00000000004439f4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000418e08 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x0000000000401b9e : sar eax, 1 ; jne 0x401ba9 ; pop rbp ; ret
0x00000000004342f1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401b9d : sar rax, 1 ; jne 0x401baa ; pop rbp ; ret
0x000000000044df78 : sbb ah, dl ; cld ; call qword ptr [rdx]
0x00000000004392b0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000445a72 : sbb byte ptr [rax - 0x75], cl ; jge 0x445a24 ; call rax
0x0000000000445a71 : sbb byte ptr [rax - 0x75], cl ; jge 0x445a25 ; call rax
0x0000000000404bac : sbb cl, byte ptr [rbx - 0x41] ; mov dh, -0x17 ; ret
0x00000000004341f1 : sbb cl, ch ; ret
0x000000000043c2a3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b251 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044d989 : sbb dword ptr [rax], eax ; add byte ptr [rax], bh ; xchg edi, edi ; call qword ptr [rax]
0x000000000041eb0d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000438300 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040323f : scasb al, byte ptr [rdi] ; ret 0x89c4
0x000000000040618f : scasb al, byte ptr [rdi] ; ret 0xe9c4
0x000000000041f8b4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f8b6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041c3ff : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000424137 : shr al, 1 ; ret
0x00000000004331f2 : shr cl, cl ; ret 0x3b
0x000000000044e995 : sldt word ptr [rax] ; fdivr st(6) ; call rdx
0x00000000004236a9 : stc ; in al, dx ; ret 0x8589
0x0000000000423fbc : stc ; in al, dx ; ret 0xff3
0x000000000043102d : stc ; ret 0x77a8
0x000000000044e45a : std ; call qword ptr [rdx]
0x000000000044e11a : std ; jmp rbx
0x0000000000437bb7 : std ; ret 0x279e
0x000000000044d4de : sti ; jmp qword ptr [rax]
0x000000000044dbd2 : sti ; jmp qword ptr [rcx]
0x000000000044d4ce : sti ; jmp rax
0x00000000004236a8 : sti ; stc ; in al, dx ; ret 0x8589
0x00000000004439f3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004162aa : sub al, -0x47 ; push rsp ; ret 0x8be9
0x000000000044dcb4 : sub al, 2 ; add byte ptr [rax], al ; test al, 0x39 ; cld ; call qword ptr [rbx]
0x000000000041780e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043eaf6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004176f8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432725 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000043271b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004327f5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000410899 : sub dword ptr [rip + 0x14c18da], ebp ; ret 0x8148
0x00000000004108ad : sub dword ptr [rip + 0x294c18da], ebp ; ret 0x8b4c
0x000000000040b1b1 : sub dword ptr [rip - 0x5346c19b], -0x73 ; outsb dx, byte ptr [rsi] ; ret
0x000000000041089a : sub eax, 0x14c18da ; ret 0x8148
0x00000000004108ae : sub eax, 0x294c18da ; ret 0x8b4c
0x00000000004335b5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000044178c : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x000000000043ca5f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044bc81 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000410898 : sub qword ptr [rip + 0x14c18da], r13 ; ret 0x8148
0x00000000004108ac : sub qword ptr [rip + 0x294c18da], r13 ; ret 0x8b4c
0x000000000044bc80 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041c6c3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000445b89 : test al, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x000000000040650b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rbx
0x0000000000424359 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000432720 : test al, -0x7f ; ret 0x2d50
0x00000000004327fa : test al, -0x7f ; ret 0xa30b
0x00000000004260f7 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000448a63 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044dcb8 : test al, 0x39 ; cld ; call qword ptr [rbx]
0x000000000044dcd8 : test al, 0x3c ; cld ; jmp qword ptr [rax]
0x000000000043898e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000434f56 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000043baf8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000044ef01 : test bh, bh ; call rdi
0x000000000042153d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000042340a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000044bc2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041be5c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000042340b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000042959c : test byte ptr [rcx], ch ; ret 0
0x0000000000442926 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004403a1 : test byte ptr [rip - 0x16fffff9], dl ; ret 1
0x000000000041b652 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040db67 : test dh, al ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000424937 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000429596 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000445ae6 : test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x0000000000445a0d : test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x000000000044547b : test dword ptr [rbx + rdi*8 - 1], esi ; call rsp
0x0000000000445b52 : test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x0000000000445b61 : test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x0000000000414113 : test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x000000000043e6d7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000043e697 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000043e612 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000043bc06 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000410e13 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x0000000000422321 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004063d2 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000405191 : test dword ptr [rdi + rdi*8 - 1], esp ; call rdx
0x0000000000406189 : test dword ptr [rdi + rdi*8 - 1], esp ; inc dword ptr [rcx] ; scasb al, byte ptr [rdi] ; ret 0xe9c4
0x0000000000405bc2 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x00000000004059f5 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000040650d : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rbx
0x0000000000404513 : test dword ptr [rdx + rdi*8 - 0x7bf00001], eax ; ret 0x1e
0x0000000000433fcb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000416ab0 : test dword ptr [rsi + rdi*8 + 0x536fffff], eax ; ret 0x899e
0x000000000043522a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000430cea : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004351df : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004331ef : wait ; jge 0x4331d1 ; shr cl, cl ; ret 0x3b
0x000000000042e2ad : wait ; jo 0x42e2bb ; ret
0x00000000004317fc : wait ; jo 0x43180a ; ret
0x00000000004491a8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041c1e0 : xchg eax, ebp ; jmp 0x41c331
0x000000000043ed82 : xchg eax, ebp ; ret
0x0000000000410a0d : xchg eax, ebp ; ret 0x2018
0x0000000000404c02 : xchg eax, ebp ; ret 0x8445
0x0000000000406ff6 : xchg eax, ebp ; ret 0xd284
0x000000000040e1e9 : xchg eax, ebp ; ret 0xe280
0x0000000000411710 : xchg eax, ebx ; cdq ; ret 0x890e
0x000000000044dd39 : xchg eax, ebx ; cld ; call qword ptr [rsi]
0x0000000000429e35 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000430735 : xchg eax, ebx ; ret
0x0000000000430965 : xchg eax, ecx ; ret
0x000000000044d4cd : xchg eax, ecx ; sti ; jmp rax
0x0000000000448729 : xchg eax, edi ; ret 0xd284
0x000000000042a1b5 : xchg eax, edx ; ret
0x000000000043805f : xchg eax, edx ; ret 0x8445
0x000000000043bafe : xchg eax, edx ; ret 0xd284
0x000000000044182e : xchg eax, esi ; ret 0xd284
0x0000000000411752 : xchg eax, esp ; cdq ; ret 0x890e
0x000000000041167e : xchg eax, esp ; cdq ; ret 0x8b0e
0x0000000000424e58 : xchg eax, esp ; int 6
0x000000000043ad9a : xchg eax, esp ; jmp 0x43b808
0x000000000043acd7 : xchg eax, esp ; jmp 0x43b80a
0x00000000004351e4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000430ab5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043522f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000405831 : xchg eax, esp ; pop rcx ; ret 0x49b9
0x00000000004031cf : xchg eax, esp ; pop rcx ; ret 0x8589
0x0000000000405ef6 : xchg eax, esp ; ret
0x0000000000438049 : xchg eax, esp ; ret 0x8041
0x00000000004340fe : xchg eax, esp ; ret 0xb740
0x000000000040a6b6 : xchg eax, esp ; ret 0xd284
0x000000000040ac82 : xchg eax, esp ; ret 0xe280
0x000000000041f8b5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041b4a2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000424e57 : xchg eax, r12d ; int 6
0x000000000043ad99 : xchg eax, r12d ; jmp 0x43b809
0x000000000044d98d : xchg edi, edi ; call qword ptr [rax]
0x000000000041e15f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000044365e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004340f9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000428997 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000424133 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000428998 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004439f6 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000041b4a3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000441a75 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000040028f : xor eax, 0x896e1c9 ; ret
0x000000000041088b : xor ebp, dword ptr [rax + rbp + 0x294ce11b] ; ret 0xb849
0x000000000044365d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000443961 : xor esi, edi ; or eax, esi ; pop rbp ; ret
