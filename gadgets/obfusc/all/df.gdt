0x00000000004424c5 : adc ah, al ; ret 0x1b2
0x0000000000440202 : adc ah, al ; ret 0x8589
0x00000000004424e1 : adc ah, al ; ret 0x958a
0x00000000004bb0f8 : adc al, -0x64 ; stc ; call rsp
0x00000000004bb370 : adc al, -9 ; cli ; call rsp
0x00000000004577ec : adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x00000000004bc8cd : adc al, byte ptr [rax] ; add byte ptr [rax], dh ; cli ; call qword ptr [rdx]
0x0000000000497b72 : adc al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000049e879 : adc bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000040d4bb : adc bh, al ; test dword ptr [rsi + rdi*8 - 0x216a0001], esp ; ret 0x4835
0x00000000004608b8 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x0000000000473c16 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004609b6 : adc byte ptr [rax], al ; add al, ch ; ret 0xfa11
0x00000000004bc61d : adc byte ptr [rax], al ; add byte ptr [rax - 0x66], dh ; stc ; call qword ptr [rbx]
0x000000000040989c : adc byte ptr [rax], al ; add cl, ch ; ret 8
0x00000000004bc61c : adc byte ptr [rax], r8b ; add byte ptr [rax - 0x66], dh ; stc ; call qword ptr [rbx]
0x00000000004a3989 : adc byte ptr [rbp - 0x76baffb5], ch ; ret 0x8141
0x000000000045e8d0 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000476132 : adc byte ptr [rdi], ch ; ret
0x0000000000442350 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x000000000042334a : adc ch, cl ; ret
0x0000000000492fc4 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000461c12 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000047496c : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x00000000004a330e : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000431b4c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000426dfd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000470d2a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000047a9cb : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x0000000000470e16 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x000000000047034f : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x0000000000463c39 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x000000000043cef0 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000047a9da : adc cl, byte ptr [rdx + rax - 0x1376b800] ; pop rbp ; ret
0x000000000049cb2a : adc dl, byte ptr [rax - 0xa] ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004bc6e5 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x61], bl ; stc ; jmp qword ptr [rbx]
0x000000000045c5ab : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000049ac5b : adc dword ptr [rdi - 0xa], ebp ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004763d2 : adc dword ptr [rdi], ebp ; ret
0x00000000004aa582 : adc dword ptr [rdx - 0x2b], edi ; jno 0x4aa547 ; ror dword ptr [rcx], 1 ; ret
0x000000000041d4f6 : adc dword ptr [rdx], ebp ; add byte ptr [rax - 1], cl ; ret 0x8948
0x000000000043bd27 : adc dword ptr [rdx], ebx ; jmp 0xffffffffc24505d5
0x00000000004bcaf5 : adc eax, 0x52580000 ; cli ; jmp rcx
0x00000000004513bb : adc eax, 0x558abda1 ; ret
0x00000000004091e7 : adc eax, 0xc7ffff90 ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0x000000000049efd9 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004301a3 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000454999 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000469bfb : adc eax, ebp ; js 0x469bec ; ret
0x000000000049e997 : adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000046a04f : adc ebp, ecx ; ret 0
0x00000000004bbabb : add ah, ah ; add al, 0 ; add al, ah ; test dh, dh ; call qword ptr [rcx]
0x00000000004bb99b : add ah, al ; add eax, dword ptr [rax] ; add al, dh ; ret
0x00000000004bc8cb : add ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; cli ; call qword ptr [rdx]
0x00000000004bb2ef : add ah, dh ; test al, -6 ; call rsp
0x00000000004bc1ab : add ah, dl ; or eax, dword ptr [rax] ; add byte ptr [rax + 2], al ; clc ; call qword ptr [rdx]
0x000000000041589b : add al, -0x2f ; pop rbp ; ret
0x000000000043d097 : add al, -0x47 ; mov ah, 0x3a ; ret
0x00000000004bcfe1 : add al, -5 ; call rdi
0x00000000004bbabd : add al, 0 ; add al, ah ; test dh, dh ; call qword ptr [rcx]
0x0000000000478f31 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x00000000004294b0 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000414262 : add al, 0 ; add cl, ch ; ret 1
0x00000000004bcfdc : add al, 0x1a ; add byte ptr [rax], al ; mov al, 4 ; sti ; call rdi
0x00000000004bd0dc : add al, 0x1b ; add byte ptr [rax], al ; rcl ch ; sti ; jmp qword ptr [rcx]
0x00000000004bd4dc : add al, 0x1f ; add byte ptr [rax], al ; xor byte ptr [rdi - 2], bl ; jmp rax
0x000000000045e70b : add al, 0x25 ; ret
0x00000000004bb270 : add al, 0x2e ; cli ; call rsp
0x000000000046f2ea : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004bbabf : add al, ah ; test dh, dh ; call qword ptr [rcx]
0x00000000004bc0ef : add al, al ; ret 0xfff7
0x000000000049fde9 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000049a459 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000041a601 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000435087 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x000000000045e3eb : add al, byte ptr [rax] ; add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x0000000000414ae8 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x7b2dd045], cl ; ret
0x0000000000416253 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x5ad21fbb], cl ; ret 0xad19
0x000000000045e3b9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x0000000000409f9c : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000047a9dc : add al, byte ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b25b : add al, ch ; jmp qword ptr [rax]
0x000000000040b2ad : add al, ch ; lodsd eax, dword ptr [rsi] ; and byte ptr [rcx], al ; add bh, al ; clc ; ret 0xb6bf
0x00000000004147c7 : add al, ch ; ret
0x00000000004609b8 : add al, ch ; ret 0xfa11
0x000000000040b598 : add al, ch ; ret 0xff67
0x00000000004bb73f : add al, dh ; loopne 0x4bb73b ; jmp qword ptr [rsi]
0x00000000004bb99f : add al, dh ; ret
0x00000000004bc49f : add al, dl ; xchg eax, ebx ; stc ; jmp qword ptr [rbx]
0x000000000042ae08 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x00000000004bc1b1 : add bh, al ; call qword ptr [rdx]
0x000000000040b2b2 : add bh, al ; clc ; ret 0xb6bf
0x0000000000431b68 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000049769d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000496425 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000049bc24 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000049eb03 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000049fff3 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000049efdb : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000492a66 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004988b0 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000495522 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x000000000049d117 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000049a547 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004973fe : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000049f54f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004959e9 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000408d68 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004807f5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000409428 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x0000000000409513 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rcx]
0x0000000000407cae : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x00000000004095b1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsp
0x0000000000478d1a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000478f33 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000045c284 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044432a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000044428b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042d66f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004618e3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000045985c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000459b43 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000045a5d1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041a603 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004511f9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000411137 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x284ffff], esp ; ret
0x0000000000436f22 : add bh, al ; test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x0000000000417027 : add bh, al ; xchg eax, r12d ; cmp byte ptr [rdi - 0xb], ah ; ret
0x00000000004301a5 : add bh, al ; xchg eax, r12d ; int 6
0x00000000004170f2 : add bh, al ; xchg eax, r12d ; ret 0xd38a
0x00000000004b932f : add bl, dh ; ret
0x00000000004a398b : add byte ptr [r13 - 0x77], al ; ret 0x8141
0x0000000000429f74 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a2542 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004a27a4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004bd17f : add byte ptr [rax + 0x19], dl ; cld ; call qword ptr [rcx]
0x000000000042e69d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000049ce10 : add byte ptr [rax + 0x29], cl ; ret 0xb848
0x00000000004bc28f : add byte ptr [rax + 0x3a], al ; clc ; jmp qword ptr [rcx]
0x00000000004bcaf7 : add byte ptr [rax + 0x52], bl ; cli ; jmp rcx
0x000000000043837d : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004bc1af : add byte ptr [rax + 2], al ; clc ; call qword ptr [rdx]
0x00000000004bc5fb : add byte ptr [rax + rdx], ah ; add byte ptr [rax], al ; mov al, -0x68 ; stc ; call rdx
0x00000000004bc61b : add byte ptr [rax + rdx], al ; add byte ptr [rax - 0x66], dh ; stc ; call qword ptr [rbx]
0x00000000004bb95f : add byte ptr [rax - 0x44], ah ; cmc ; call qword ptr [rax]
0x00000000004166e7 : add byte ptr [rax - 0x46], cl ; nop ; ret 0xb2b6
0x00000000004bc6e7 : add byte ptr [rax - 0x61], bl ; stc ; jmp qword ptr [rbx]
0x00000000004bc61f : add byte ptr [rax - 0x66], dh ; stc ; call qword ptr [rbx]
0x00000000004bcc57 : add byte ptr [rax - 0x73], ch ; cli ; call qword ptr [rsi]
0x0000000000431d4b : add byte ptr [rax - 0x75], cl ; call 0x4905a6a3
0x00000000004266ac : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004157eb : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004147e8 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004259f6 : add byte ptr [rax - 0x75], cl ; jge 0x4259f2 ; call 0x401c97
0x000000000043d229 : add byte ptr [rax - 0x75], cl ; rol r15b, 1 ; xchg eax, r12d ; push rbx ; ret
0x00000000004a3df1 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000415898 : add byte ptr [rax - 0x77], cl ; add al, -0x2f ; pop rbp ; ret
0x000000000040269b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000497e4f : add byte ptr [rax - 0x77], cl ; ret 0x28e8
0x000000000049ef53 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000049f4e7 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x0000000000408f0f : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000435089 : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x000000000041d4f8 : add byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004bbd9f : add byte ptr [rax], ah ; loop 0x4bbd9d ; jmp rbx
0x00000000004bc4ff : add byte ptr [rax], ah ; xchg eax, ebp ; stc ; call rdi
0x00000000004bb0f6 : add byte ptr [rax], al ; adc al, -0x64 ; stc ; call rsp
0x00000000004bb36e : add byte ptr [rax], al ; adc al, -9 ; cli ; call rsp
0x00000000004bc61a : add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add byte ptr [rax - 0x66], dh ; stc ; call qword ptr [rbx]
0x00000000004bb999 : add byte ptr [rax], al ; add ah, al ; add eax, dword ptr [rax] ; add al, dh ; ret
0x00000000004bcfda : add byte ptr [rax], al ; add al, 0x1a ; add byte ptr [rax], al ; mov al, 4 ; sti ; call rdi
0x00000000004bd0da : add byte ptr [rax], al ; add al, 0x1b ; add byte ptr [rax], al ; rcl ch ; sti ; jmp qword ptr [rcx]
0x00000000004bd4da : add byte ptr [rax], al ; add al, 0x1f ; add byte ptr [rax], al ; xor byte ptr [rdi - 2], bl ; jmp rax
0x00000000004bb26e : add byte ptr [rax], al ; add al, 0x2e ; cli ; call rsp
0x000000000040b259 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rax]
0x00000000004147c5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000431b66 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004807f3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000478d18 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000045c282 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004618e1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004170f0 : add byte ptr [rax], al ; add bh, al ; xchg eax, r12d ; ret 0xd38a
0x00000000004b932d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042e69b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000049ce0e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb848
0x000000000043837b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000431d49 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4905a6a5
0x00000000004157e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004147e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004259f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4259f4 ; call 0x401c99
0x00000000004a3def : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000402699 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408f0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040b257 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rax]
0x00000000004b932b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040b255 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rax]
0x0000000000400bf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407a6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004079ae : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042c1db : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000400bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a3994 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000046a262 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000049782b : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000046fa77 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x00000000004316eb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000431889 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000423efe : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004397d2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000454402 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428822 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000042894e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000045e4e5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x0000000000423e30 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041525a : add byte ptr [rax], al ; add byte ptr [rbx + 0x632dd045], cl ; xlatb ; ret 0x89db
0x0000000000414b33 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7c2dd045], cl ; ret
0x00000000004149ab : add byte ptr [rax], al ; add byte ptr [rbx + 0xc2dd045], cl ; ret 0x9074
0x00000000004149ed : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2dd045], cl ; ret 0x9074
0x000000000046f9e1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000045aa43 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000418693 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ed243bb], cl ; ret
0x0000000000417fef : add byte ptr [rax], al ; add byte ptr [rbx - 0x2fd243bb], cl ; ret
0x000000000046ae68 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000046ae26 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000042996e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x00000000004575be : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x000000000047f27c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004179f3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x57d233bb], cl ; ret
0x0000000000416295 : add byte ptr [rax], al ; add byte ptr [rbx - 0x59d21fbb], cl ; ret 0xad19
0x00000000004a43fc : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x00000000004a434c : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000045e091 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x000000000045dfe1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x000000000045e404 : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000045d3a9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004aa911 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x000000000041e3d5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000495c34 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041753a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041a4b5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b4c
0x00000000004636be : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000043915c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004aabab : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x00000000004a4949 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret 0xd609
0x00000000004b47e5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004a2543 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000041ec8c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf281
0x0000000000465591 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0xe280
0x00000000004aaaee : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000004a27a5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000049f184 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x000000000045c1f0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043ebb5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000436768 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000460746 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004651f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000407a6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004646aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000046e865 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000435fa6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000419fd8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8841
0x00000000004073ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000467268 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000046a1f7 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000402614 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000461b72 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004bc1ae : add byte ptr [rax], al ; add dil, al ; call qword ptr [rdx]
0x00000000004bb73a : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, dh ; loopne 0x4bb740 ; jmp qword ptr [rsi]
0x000000000045499b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043d280 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045e1d1 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045c5ad : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000480c58 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000046473c : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000417d20 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbp ; ret
0x00000000004a3887 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401b13 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004bc5fa : add byte ptr [rax], al ; and al, 0x10 ; add byte ptr [rax], al ; mov al, -0x68 ; stc ; call rdx
0x000000000043b226 : add byte ptr [rax], al ; call 0x401c89
0x00000000004bc28e : add byte ptr [rax], al ; cmp dil, al ; jmp qword ptr [rcx]
0x00000000004bc7c6 : add byte ptr [rax], al ; fcomp st(7) ; stc ; jmp rsi
0x00000000004bc8ca : add byte ptr [rax], al ; hlt ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; cli ; call qword ptr [rdx]
0x00000000004bb2ee : add byte ptr [rax], al ; hlt ; test al, -6 ; call rsp
0x0000000000401b69 : add byte ptr [rax], al ; jmp 0x401b29
0x0000000000402610 : add byte ptr [rax], al ; jmp 0x40261f
0x0000000000416ccc : add byte ptr [rax], al ; jmp 0x4171b9
0x0000000000461b6e : add byte ptr [rax], al ; jmp 0x461b7d
0x000000000046418c : add byte ptr [rax], al ; jmp 0x464241
0x000000000046a1f3 : add byte ptr [rax], al ; jmp 0x46a202
0x000000000046a355 : add byte ptr [rax], al ; jmp 0x46a364
0x000000000046a5c3 : add byte ptr [rax], al ; jmp 0x46a5d2
0x000000000047a86f : add byte ptr [rax], al ; jmp 0x47a87e
0x0000000000485f2c : add byte ptr [rax], al ; jmp 0x492177
0x00000000004bc61e : add byte ptr [rax], al ; jo 0x4bc5c1 ; stc ; call qword ptr [rbx]
0x00000000004bc8ce : add byte ptr [rax], al ; jo 0x4bc8d7 ; cli ; call qword ptr [rdx]
0x00000000004bb32e : add byte ptr [rax], al ; jrcxz 0x4bb332 ; call rsp
0x00000000004bb61e : add byte ptr [rax], al ; loopne 0x4bb692 ; hlt ; call qword ptr [rdx]
0x00000000004bd05e : add byte ptr [rax], al ; loopne 0x4bd0a4 ; sti ; jmp qword ptr [rdx]
0x00000000004bc28a : add byte ptr [rax], al ; mov ah, 0xc ; add byte ptr [rax], al ; cmp dil, al ; jmp qword ptr [rcx]
0x00000000004bd09e : add byte ptr [rax], al ; mov al, -0x54 ; sti ; call rbx
0x00000000004bc5fe : add byte ptr [rax], al ; mov al, -0x68 ; stc ; call rdx
0x00000000004bc8ae : add byte ptr [rax], al ; mov al, -1 ; stc ; call rdx
0x00000000004bcfde : add byte ptr [rax], al ; mov al, 4 ; sti ; call rdi
0x00000000004a2588 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000438752 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046b5f5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c881 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000429e5f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004a44c1 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004157ea : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004259f5 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401c98
0x000000000040269a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004bd17a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x19], dl ; cld ; call qword ptr [rcx]
0x00000000004bc6e2 : add byte ptr [rax], al ; or al, 0x11 ; add byte ptr [rax], al ; pop rax ; lahf ; stc ; jmp qword ptr [rbx]
0x00000000004bc6e6 : add byte ptr [rax], al ; pop rax ; lahf ; stc ; jmp qword ptr [rbx]
0x00000000004bcaf6 : add byte ptr [rax], al ; pop rax ; push rdx ; cli ; jmp rcx
0x0000000000402a62 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000454403 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423e31 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004bd17e : add byte ptr [rax], al ; push rax ; sbb esp, edi ; call qword ptr [rcx]
0x00000000004bb176 : add byte ptr [rax], al ; push rsp ; mov dh, -7 ; jmp rsp
0x00000000004bd0de : add byte ptr [rax], al ; rcl ch ; sti ; jmp qword ptr [rcx]
0x0000000000400bf6 : add byte ptr [rax], al ; ret
0x00000000004bcaf2 : add byte ptr [rax], al ; sbb al, 0x15 ; add byte ptr [rax], al ; pop rax ; push rdx ; cli ; jmp rcx
0x00000000004bccf2 : add byte ptr [rax], al ; sbb al, 0x17 ; add byte ptr [rax], al ; test al, -0x48 ; cli ; call qword ptr [rax]
0x00000000004bd13a : add byte ptr [rax], al ; sbb eax, dword ptr fs:[rax] ; add byte ptr [rax], dh ; hlt ; sti ; jmp qword ptr [rax]
0x00000000004bd11a : add byte ptr [rax], al ; sbb r8d, dword ptr [rax] ; add byte ptr [rax], dh ; fsincos ; call qword ptr [rdx]
0x00000000004bccf6 : add byte ptr [rax], al ; test al, -0x48 ; cli ; call qword ptr [rax]
0x00000000004bccd6 : add byte ptr [rax], al ; test al, -0x52 ; cli ; jmp qword ptr [rax]
0x00000000004bd05a : add byte ptr [rax], al ; test byte ptr [rdx], bl ; add byte ptr [rax], al ; loopne 0x4bd0a8 ; sti ; jmp qword ptr [rdx]
0x00000000004bb016 : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004bd13e : add byte ptr [rax], al ; xor ah, dh ; sti ; jmp qword ptr [rax]
0x00000000004bb2ae : add byte ptr [rax], al ; xor al, 0x74 ; cli ; call rsp
0x00000000004bd4de : add byte ptr [rax], al ; xor byte ptr [rdi - 2], bl ; jmp rax
0x00000000004bd11e : add byte ptr [rax], al ; xor cl, bl ; sti ; call qword ptr [rdx]
0x00000000004bc8cf : add byte ptr [rax], dh ; cli ; call qword ptr [rdx]
0x00000000004bd11f : add byte ptr [rax], dh ; fsincos ; call qword ptr [rdx]
0x00000000004bd13f : add byte ptr [rax], dh ; hlt ; sti ; jmp qword ptr [rax]
0x000000000047091a : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a3996 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000046a264 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000049782d : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004a398c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000046fa2e : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x000000000046fa79 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x00000000004316ed : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000043188b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000423f00 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004397d4 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000454404 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000436c4e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428824 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000428950 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000045e3ed : add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x000000000045e4e7 : add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x0000000000423e32 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041525c : add byte ptr [rbx + 0x632dd045], cl ; xlatb ; ret 0x89db
0x0000000000414aea : add byte ptr [rbx + 0x7b2dd045], cl ; ret
0x0000000000414b35 : add byte ptr [rbx + 0x7c2dd045], cl ; ret
0x00000000004149ad : add byte ptr [rbx + 0xc2dd045], cl ; ret 0x9074
0x00000000004149ef : add byte ptr [rbx + 0xd2dd045], cl ; ret 0x9074
0x00000000004bb95b : add byte ptr [rbx + rax - 0x43a00000], al ; cmc ; call qword ptr [rax]
0x00000000004bd17b : add byte ptr [rbx + rbx + 0x19500000], ah ; cld ; call qword ptr [rcx]
0x00000000004bd13b : add byte ptr [rbx + rbx], ah ; add byte ptr [rax], dh ; hlt ; sti ; jmp qword ptr [rax]
0x00000000004bd0db : add byte ptr [rbx + rbx], al ; add byte ptr [rax], al ; rcl ch ; sti ; jmp qword ptr [rcx]
0x00000000004bd11b : add byte ptr [rbx + rbx], al ; add byte ptr [rax], dh ; fsincos ; call qword ptr [rdx]
0x000000000046f9e3 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000046f998 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x000000000041e31b : add byte ptr [rbx - 0x2134b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000045aa45 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000045a9fa : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041e9e8 : add byte ptr [rbx - 0x2934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418695 : add byte ptr [rbx - 0x2ed243bb], cl ; ret
0x0000000000417ff1 : add byte ptr [rbx - 0x2fd243bb], cl ; ret
0x000000000046ae6a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000046ae28 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000429970 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000042ebb5 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x00000000004294b2 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000042e9f3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x00000000004575c0 : add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x000000000047f27e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004179f5 : add byte ptr [rbx - 0x57d233bb], cl ; ret
0x0000000000416297 : add byte ptr [rbx - 0x59d21fbb], cl ; ret 0xad19
0x0000000000416255 : add byte ptr [rbx - 0x5ad21fbb], cl ; ret 0xad19
0x00000000004a43fe : add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x00000000004a434e : add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000045e093 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x000000000045dfe3 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x000000000045e406 : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000045e3bb : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x0000000000438753 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x000000000046b5f6 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004a2589 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000045d3ab : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004bb32f : add byte ptr [rbx - 6], al ; call rsp
0x000000000040c7d4 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004aa913 : add byte ptr [rcx + 0x29], al ; ret
0x000000000041e3d7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004617cf : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041753c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041a4b7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b4c
0x0000000000492b15 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x00000000004636c0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004bb73b : add byte ptr [rcx + rax], ah ; add al, dh ; loopne 0x4bb73f ; jmp qword ptr [rsi]
0x00000000004bc6e3 : add byte ptr [rcx + rdx], cl ; add byte ptr [rax], al ; pop rax ; lahf ; stc ; jmp qword ptr [rbx]
0x00000000004bc30b : add byte ptr [rcx - 0x70300000], dh ; clc ; call qword ptr [rdx]
0x000000000043915e : add byte ptr [rcx - 0x77], al ; ret
0x00000000004aabad : add byte ptr [rcx - 0x7f], al ; ret
0x00000000004a494b : add byte ptr [rcx], ah ; ret 0xd609
0x0000000000407cce : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414fa9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004021c8 : add byte ptr [rcx], al ; ret
0x00000000004b47e7 : add byte ptr [rcx], al ; ret 0x6348
0x00000000004a2545 : add byte ptr [rcx], al ; ret 0xea81
0x000000000041ec8e : add byte ptr [rcx], al ; ret 0xf281
0x0000000000465593 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0xe280
0x00000000004aaaf0 : add byte ptr [rcx], ch ; ret
0x00000000004a27a7 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000049f186 : add byte ptr [rcx], ch ; ret 0x8840
0x000000000045c1f2 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004bd4db : add byte ptr [rdi + rbx], al ; add byte ptr [rax], al ; xor byte ptr [rdi - 2], bl ; jmp rax
0x00000000004bccf3 : add byte ptr [rdi + rdx], bl ; add byte ptr [rax], al ; test al, -0x48 ; cli ; call qword ptr [rax]
0x00000000004bb36f : add byte ptr [rdi + rsi*8], dl ; cli ; call rsp
0x000000000043ebb7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043676a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000460748 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004651f2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000407a6f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004646ac : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000046e867 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000435fa8 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000419fda : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8841
0x00000000004073ef : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046726a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004bcaf3 : add byte ptr [rdx + 0x52580000], bl ; cli ; jmp rcx
0x00000000004bd05b : add byte ptr [rdx + rbx + 0x3de00000], al ; sti ; jmp qword ptr [rdx]
0x00000000004bcfdb : add byte ptr [rdx + rbx], al ; add byte ptr [rax], al ; mov al, 4 ; sti ; call rdi
0x000000000042772d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004bb26f : add byte ptr [rsi + rbp], al ; cli ; call rsp
0x00000000004bcc53 : add byte ptr [rsi + rdx], bh ; add byte ptr [rax - 0x73], ch ; cli ; call qword ptr [rsi]
0x00000000004bb177 : add byte ptr [rsi + rsi*4 - 7], dl ; jmp rsp
0x00000000004bb0f7 : add byte ptr [rsp + rbx*4], dl ; stc ; call rsp
0x00000000004bc28b : add byte ptr [rsp + rcx + 0x3a400000], dh ; clc ; jmp qword ptr [rcx]
0x00000000004bb2af : add byte ptr [rsp + rsi*2], dh ; cli ; call rsp
0x000000000045132c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000485ddd : add cl, ch ; nop ; ret
0x0000000000485e15 : add cl, ch ; pop rax ; ret
0x00000000004180ff : add cl, ch ; ret
0x0000000000402616 : add cl, ch ; ret 0
0x0000000000409f9e : add cl, ch ; ret 1
0x000000000040989e : add cl, ch ; ret 8
0x000000000047957a : add cl, ch ; ret 9
0x00000000004bc1b0 : add dil, al ; call qword ptr [rdx]
0x00000000004bc8d1 : add dl, bh ; call qword ptr [rdx]
0x0000000000431e01 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041d654 : add dword ptr [rax - 0x77], ecx ; in al, dx ; pop rbp ; ret
0x00000000004bb73d : add dword ptr [rax], eax ; add al, dh ; loopne 0x4bb73d ; jmp qword ptr [rsi]
0x00000000004095af : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsp
0x0000000000444bb3 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042da9e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045a5cf : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000417025 : add dword ptr [rax], eax ; add bh, al ; xchg eax, r12d ; cmp byte ptr [rdi - 0xb], ah ; ret
0x000000000040a833 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004394dd : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004269a4 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000046b71d : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000485e84 : add dword ptr [rax], eax ; jmp 0x492177
0x0000000000431aaf : add dword ptr [rax], ecx ; ret 0x840
0x000000000049a2ff : add dword ptr [rbp + 0x48b97d43], ebp ; ret
0x00000000004175fe : add dword ptr [rbp - 0x78], eax ; ret 0x8041
0x000000000042b260 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a1a92 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000415b42 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ac08 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000046b71b : add dword ptr [rsi], edi ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046b71c : add dword ptr ds:[rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004bb73c : add dword ptr fs:[rax], eax ; add al, dh ; loopne 0x4bb73e ; jmp qword ptr [rsi]
0x00000000004021c4 : add eax, 0x2bc48e ; add ebx, esi ; ret
0x0000000000459c8c : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004630f5 : add eax, 0xe9000004 ; ret 1
0x00000000004bb99d : add eax, dword ptr [rax] ; add al, dh ; ret
0x000000000049fff1 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x0000000000409426 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x0000000000444935 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004bb95d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x44], ah ; cmc ; call qword ptr [rax]
0x000000000046758d : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000047e165 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004271ae : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040218b : add eax, edx ; sar rax, 1 ; jne 0x40219c ; pop rbp ; ret
0x000000000047a6c9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004021c9 : add ebx, esi ; ret
0x00000000004576f7 : add edi, eax ; in al, -0x55 ; ret
0x000000000049a3f5 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000496c68 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x000000000042d919 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000416e1e : add edi, eax ; xchg eax, r12d ; cmp byte ptr [rdi - 0xb], ah ; ret
0x000000000040255b : add esp, 0x10 ; pop rbp ; ret
0x0000000000414fa7 : add esp, 0x100 ; pop rbp ; ret
0x000000000045e8ce : add esp, 0x110 ; pop rbp ; ret
0x000000000047ea8a : add esp, 0x120 ; pop rbp ; ret
0x000000000040b59f : add esp, 0x130 ; pop rbp ; ret
0x000000000047c3fa : add esp, 0x1360 ; pop rbp ; ret
0x0000000000429c18 : add esp, 0x140 ; pop rbp ; ret
0x000000000042e673 : add esp, 0x160 ; pop rbp ; ret
0x00000000004b8931 : add esp, 0x1750 ; pop rbp ; ret
0x000000000042ce38 : add esp, 0x180 ; pop rbp ; ret
0x0000000000414814 : add esp, 0x190 ; pop rbp ; ret
0x0000000000430235 : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004394da : add esp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x000000000042dab9 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000043150f : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000465062 : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x000000000042abe4 : add esp, 0x20 ; pop rbp ; ret
0x000000000046c39e : add esp, 0x230 ; pop rbp ; ret
0x00000000004572ad : add esp, 0x240 ; pop rbp ; ret
0x0000000000424876 : add esp, 0x30 ; pop rbp ; ret
0x000000000047e162 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000043f1c8 : add esp, 0x3e0 ; pop rbp ; ret
0x000000000045c5b0 : add esp, 0x40 ; pop rbp ; ret
0x000000000043bef4 : add esp, 0x420 ; pop rbp ; ret
0x000000000046f4e9 : add esp, 0x440 ; pop rbp ; ret
0x000000000046187e : add esp, 0x4f0 ; pop rbp ; ret
0x00000000004259a2 : add esp, 0x50 ; pop rbp ; ret
0x000000000040cb76 : add esp, 0x510 ; pop rbp ; ret
0x000000000045a4fc : add esp, 0x5b0 ; pop rbp ; ret
0x000000000045d4d0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000442b54 : add esp, 0x650 ; pop rbp ; ret
0x0000000000417d23 : add esp, 0x68 ; pop rbp ; ret
0x000000000043c6e0 : add esp, 0x70 ; pop rbp ; ret
0x000000000040d47d : add esp, 0x70 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000439ba4 : add esp, 0x78 ; pop rbp ; ret
0x0000000000425ccf : add esp, 0x80 ; pop rbp ; ret
0x00000000004275ef : add esp, 0x88 ; pop rbp ; ret
0x000000000042365d : add esp, 0x8b0 ; pop rbp ; ret
0x00000000004280bd : add esp, 0x90 ; pop rbp ; ret
0x00000000004166d0 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402a5e : add esp, 0xb0 ; pop rbp ; ret
0x0000000000423e2d : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041d334 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000428c18 : add esp, 0xe0 ; pop rbp ; ret
0x000000000041561e : add esp, 0xf0 ; pop rbp ; ret
0x00000000004452b3 : add esp, 8 ; pop rbp ; ret
0x0000000000401b16 : add esp, 8 ; ret
0x000000000040b597 : add r8b, bpl ; ret 0xff67
0x000000000040218a : add rax, rdx ; sar rax, 1 ; jne 0x40219d ; pop rbp ; ret
0x000000000047a6c8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040255a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000414fa6 : add rsp, 0x100 ; pop rbp ; ret
0x000000000045e8cd : add rsp, 0x110 ; pop rbp ; ret
0x000000000047ea89 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040b59e : add rsp, 0x130 ; pop rbp ; ret
0x000000000047c3f9 : add rsp, 0x1360 ; pop rbp ; ret
0x0000000000429c17 : add rsp, 0x140 ; pop rbp ; ret
0x000000000042e672 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004b8930 : add rsp, 0x1750 ; pop rbp ; ret
0x000000000042ce37 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000414813 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000430234 : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004394d9 : add rsp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x000000000042dab8 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000043150e : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000465061 : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x000000000042abe3 : add rsp, 0x20 ; pop rbp ; ret
0x000000000046c39d : add rsp, 0x230 ; pop rbp ; ret
0x00000000004572ac : add rsp, 0x240 ; pop rbp ; ret
0x0000000000424875 : add rsp, 0x30 ; pop rbp ; ret
0x000000000047e161 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000043f1c7 : add rsp, 0x3e0 ; pop rbp ; ret
0x000000000045c5af : add rsp, 0x40 ; pop rbp ; ret
0x000000000043bef3 : add rsp, 0x420 ; pop rbp ; ret
0x000000000046f4e8 : add rsp, 0x440 ; pop rbp ; ret
0x000000000046187d : add rsp, 0x4f0 ; pop rbp ; ret
0x00000000004259a1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040cb75 : add rsp, 0x510 ; pop rbp ; ret
0x000000000045a4fb : add rsp, 0x5b0 ; pop rbp ; ret
0x000000000045d4cf : add rsp, 0x60 ; pop rbp ; ret
0x0000000000442b53 : add rsp, 0x650 ; pop rbp ; ret
0x0000000000417d22 : add rsp, 0x68 ; pop rbp ; ret
0x000000000043c6df : add rsp, 0x70 ; pop rbp ; ret
0x000000000040d47c : add rsp, 0x70 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000439ba3 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000425cce : add rsp, 0x80 ; pop rbp ; ret
0x00000000004275ee : add rsp, 0x88 ; pop rbp ; ret
0x000000000042365c : add rsp, 0x8b0 ; pop rbp ; ret
0x00000000004280bc : add rsp, 0x90 ; pop rbp ; ret
0x00000000004166cf : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402a5d : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000423e2c : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041d333 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000428c17 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041561d : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004452b2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401b15 : add rsp, 8 ; ret
0x000000000043f258 : and ah, bl ; sub cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0xeae8
0x00000000004bc5fc : and al, 0x10 ; add byte ptr [rax], al ; mov al, -0x68 ; stc ; call rdx
0x0000000000485e82 : and al, 0x32 ; add dword ptr [rax], eax ; jmp 0x492179
0x00000000004bb010 : and al, 0x7b ; idiv edi ; sbb al, 0x13 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004a254d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000420f31 : and al, 0xffffffffffffff89 ; test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x0000000000415b41 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ac07 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000431dff : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000440079 : and bl, ch ; ret 0x89b1
0x000000000042c1da : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004bb36d : and byte ptr [rax], al ; add byte ptr [rdi + rsi*8], dl ; cli ; call rsp
0x000000000046c8d0 : and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x00000000004577ee : and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000041ca2b : and byte ptr [rcx - 0x80], al ; inc dword ptr [rcx - 0x78] ; ret
0x000000000040b2b0 : and byte ptr [rcx], al ; add bh, al ; clc ; ret 0xb6bf
0x000000000047ea8c : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d0db : and byte ptr [rsi + 0x58], ah ; jb 0x45d112 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004577ed : and byte ptr ds:[rcx - 0x7bf03bbb], cl ; ret 0
0x00000000004021e6 : and dh, bl ; imul eax, dword ptr [rax], 0x48 ; mov ebp, esp ; call rax
0x000000000049fb23 : and dh, dh ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000431dfe : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000049ac47 : and dl, byte ptr [rdi] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004094f4 : and dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x0000000000450561 : and eax, 0x75b4b9d3 ; ret
0x0000000000416252 : and eax, 0x8b000002 ; loopne 0x416290 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xad19
0x000000000049a544 : and eax, 0xc700005e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000041ca76 : and eax, dword ptr [rcx - 0x80] ; inc dword ptr [rcx + 0x20] ; ret
0x000000000046a948 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000046a45f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004a5e8c : and ebx, dword ptr [rbx + 0x6a] ; ret 0x8589
0x00000000004400cd : and ebx, ebp ; ret 0x89b1
0x0000000000442355 : and ebx, ebp ; ret 0x8bb1
0x0000000000442339 : and ebx, ebp ; ret 0xb2b1
0x000000000046aa0a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000049fb22 : and sil, sil ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000041c3af : call 0x401b46
0x000000000045e704 : call 0x401b79
0x000000000043b228 : call 0x401c87
0x0000000000415a62 : call 0x401c92
0x0000000000444c16 : call 0x401c97
0x0000000000415afd : call 0x401de2
0x0000000000455be6 : call 0x401e82
0x00000000004170ee : call 0x4171c8
0x000000000040b2ae : call 0x41d368
0x000000000045d4d5 : call 0x45d599
0x000000000047e805 : call 0x46aa22
0x0000000000441cba : call 0x479436
0x0000000000431d4f : call 0x4905a69f
0x0000000000431d4e : call 0x4905a6a0
0x0000000000431d9d : call 0x4905a6ed
0x0000000000431d9c : call 0x4905a6ee
0x00000000004b7c7d : call 0x4a3f42
0x000000000046c2d2 : call 0xffffffff8a27186b
0x0000000000480b4d : call 0xffffffffaca8cd81
0x0000000000480b4c : call 0xffffffffaca8cd82
0x0000000000435c23 : call 0xffffffffe10615e9
0x0000000000435c22 : call 0xffffffffe10615ea
0x0000000000454019 : call 0xffffffffe907c969
0x0000000000454018 : call 0xffffffffe907c96a
0x000000000047c264 : call 0xfffffffff7808524
0x0000000000402163 : call 0xffffffffff408d51
0x00000000004021a3 : call 0xffffffffff408d91
0x00000000004089eb : call 0xffffffffff850fbe
0x00000000004089ea : call 0xffffffffff850fbf
0x000000000046829b : call 0xffffffffffb7086d
0x000000000046829a : call 0xffffffffffb7086e
0x00000000004b9309 : call qword ptr [r12 + rbx*8]
0x00000000004091f0 : call qword ptr [rax]
0x000000000040d4c1 : call qword ptr [rbp + 0x4835c2de]
0x0000000000408d6e : call qword ptr [rbx]
0x0000000000477bbc : call qword ptr [rcx]
0x00000000004365ff : call qword ptr [rdi]
0x000000000044f48b : call qword ptr [rdx]
0x0000000000436f28 : call qword ptr [rsi]
0x00000000004b930a : call qword ptr [rsp + rbx*8]
0x00000000004021ed : call rax
0x000000000043bf4a : call rbx
0x0000000000435aba : call rcx
0x0000000000421f9b : call rdi
0x0000000000427d27 : call rdx
0x000000000042277f : call rsi
0x000000000049e87f : call rsp
0x000000000043b05e : cdq ; ret
0x000000000047ea88 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000042ab0b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000444ad4 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x000000000046f4e7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000464224 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045a4fa : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x000000000045e157 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045c837 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004280bb : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000465979 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004a3edb : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004bc1b2 : clc ; call qword ptr [rdx]
0x00000000004bc292 : clc ; jmp qword ptr [rcx]
0x000000000040218f : clc ; jne 0x402198 ; pop rbp ; ret
0x000000000046a949 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000046a713 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004175c6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000046404b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004315ce : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004266eb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042670b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000046a161 : clc ; mov rax, r8 ; pop rbp ; ret
0x00000000004266b0 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004157ef : clc ; pop rbp ; ret
0x000000000046c81f : clc ; pop rbx ; pop rbp ; ret
0x0000000000446aed : clc ; ret 0x77a8
0x000000000040b2b5 : clc ; ret 0xb6bf
0x000000000046a460 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000402587 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047c3f8 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x000000000043f1c6 : cld ; add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000457535 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000048118e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000046bdcd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004bd182 : cld ; call qword ptr [rcx]
0x0000000000436e66 : cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x000000000040b95a : cld ; int 0x80
0x0000000000423f2f : cld ; jmp 0x423f9c
0x0000000000423f2e : cld ; jmp 0x423f9d
0x0000000000438756 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ebba : cld ; stc ; in al, dx ; ret 0x8589
0x000000000042f30b : cld ; stc ; in al, dx ; ret 0xff3
0x000000000044023a : cld ; stc ; ret
0x00000000004bccfa : cli ; call qword ptr [rax]
0x00000000004bc8d2 : cli ; call qword ptr [rdx]
0x00000000004bcc5a : cli ; call qword ptr [rsi]
0x00000000004bb272 : cli ; call rsp
0x000000000045e707 : cli ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x00000000004578e5 : cli ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004bccda : cli ; jmp qword ptr [rax]
0x00000000004bcafa : cli ; jmp rcx
0x00000000004bb26a : cli ; ljmp ptr [rsp + rbx + 0x2e040000] ; cli ; call rsp
0x000000000045d0e0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004bb36a : cli ; push qword ptr [rax - 0x8ec0000] ; cli ; call rsp
0x00000000004bb2aa : cli ; push qword ptr [rbp + rbx + 0x74340000] ; cli ; call rsp
0x00000000004bb32a : cli ; push qword ptr [rdi + rbx - 0x1cbc0000] ; cli ; call rsp
0x00000000004bb2ea : cli ; push qword ptr [rsi + rbx - 0x570c0000] ; cli ; call rsp
0x0000000000401d02 : cli ; ret
0x0000000000401f02 : cli ; ret 0x2b
0x00000000004a254c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004bb962 : cmc ; call qword ptr [rax]
0x00000000004bb8c2 : cmc ; call rdx
0x0000000000416893 : cmc ; ret
0x000000000045bffb : cmc ; ret 0x4f0b
0x00000000004395a8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000419de5 : cmp al, -0x1c ; ret 0x1db9
0x0000000000419605 : cmp al, -0x1c ; ret 0x8589
0x000000000049df33 : cmp al, -0xa ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000046ac97 : cmp al, ch ; ret
0x00000000004bc291 : cmp bh, al ; jmp qword ptr [rcx]
0x00000000004636bc : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004b70b7 : cmp byte ptr [rcx - 0x1f743], al ; call qword ptr [rax]
0x00000000004168e5 : cmp byte ptr [rdi - 0xb], ah ; ret
0x00000000004447ca : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x00000000004583b5 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x0000000000415a5b : cmp cl, byte ptr [rcx + 0x4d899445] ; nop ; call 0x401c99
0x000000000046c8ce : cmp cl, byte ptr [rdx] ; and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000045c191 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000049e2d8 : cmp dh, dh ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004bc290 : cmp dil, al ; jmp qword ptr [rcx]
0x0000000000429c42 : cmp dword ptr [rax - 0x75], ecx ; jne 0x429c24 ; call rax
0x0000000000458361 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x0000000000425229 : cmp eax, 0x45c6a0d8 ; ret
0x000000000047a8fd : cmp eax, 0xb8000001 ; ret
0x00000000004a882b : cmp eax, 0xb8000025 ; mov ebp, ecx ; ret
0x000000000040214d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402160 ; pop rbp ; ret
0x00000000004b78e1 : cmp eax, 0xe9b845c2 ; ret
0x000000000043d074 : cmp ecx, ebp ; ret 1
0x00000000004a8ebf : cmp edi, ebp ; cwde ; jmp 0x4aad75
0x00000000004513b7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004195b1 : cmp esp, esp ; ret 0x8589
0x00000000004557e2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x45582d
0x000000000041629c : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xad19
0x0000000000487aca : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcc39
0x0000000000487b1e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xcc39
0x00000000004a8ec1 : cwde ; jmp 0x4aad73
0x00000000004a8829 : cwde ; jmp 0x4aad75
0x0000000000463e26 : cwde ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b00a : cwde ; ret
0x000000000049b515 : cwde ; ret 0x2eb9
0x0000000000486c24 : cwde ; ret 0x8589
0x00000000004bc601 : cwde ; stc ; call rdx
0x000000000040c50b : dec byte ptr [rdi] ; pushfq ; ret 0xd284
0x0000000000409511 : dec byte ptr [rdx] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rcx]
0x0000000000431567 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004a2c2a : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000418a3f : dec dword ptr [rax + 0x39] ; ret 0xf40
0x0000000000435288 : dec dword ptr [rax + 0x69] ; ret 0xa
0x0000000000442884 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000444c1a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000045e708 : dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x0000000000492fc1 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x00000000004508bb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000045022e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000049ef50 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000450a33 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000473c12 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000049e994 : dec dword ptr [rax - 0x77] ; adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x00000000004024f1 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004676ed : dec dword ptr [rax - 0x77] ; jge 0x4676f0 ; pop rbp ; ret
0x00000000004598df : dec dword ptr [rax - 0x77] ; ret 0x28e8
0x0000000000436f42 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047a209 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x0000000000474afd : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x00000000004365e4 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000045e8a6 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004740cb : dec dword ptr [rax - 0x77] ; ret 0xace8
0x000000000041e321 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000045a239 : dec dword ptr [rax - 0x77] ; ret 0xcee8
0x000000000045a737 : dec dword ptr [rax - 0x77] ; ret 0xd0e8
0x000000000047545e : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x0000000000436dab : dec dword ptr [rax - 0x7f] ; ret 0
0x00000000004aae20 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x00000000004aadee : dec dword ptr [rax - 0x7f] ; ret 0x20
0x00000000004b3891 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004790cd : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004750f9 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000435f4d : dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004b6efc : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000408f4a : dec dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x000000000043921e : dec dword ptr [rbx - 0x1a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000470629 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000047a136 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000463580 : dec dword ptr [rbx - 0x34b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004639b8 : dec dword ptr [rbx - 0x36b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000463b54 : dec dword ptr [rbx - 0x3736b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000412241 : dec dword ptr [rbx - 0xa436b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004a905b : dec dword ptr [rcx - 0x7628d639] ; ret 0xea81
0x00000000004b646e : dec dword ptr [rcx - 0x7f] ; ret
0x00000000004b651e : dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000045bff6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000439224 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000412247 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000485dd7 : dec dword ptr [rdi] ; test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000427a11 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000048f307 : dec dword ptr [rdi] ; test al, bl ; ret
0x0000000000414ba7 : dec dword ptr [rdi] ; test bh, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004aaf52 : dec dword ptr [rdi] ; test bl, ch ; ret
0x000000000042c88b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000046ff1e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x00000000004271aa : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000485f27 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000049188b : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret
0x00000000004467ca : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041425e : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffffc], dh ; ret 1
0x0000000000409f98 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffffe], dh ; ret 1
0x0000000000469424 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000485e7f : dec dword ptr [rdi] ; test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x49217c
0x00000000004630f2 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], al ; ret 1
0x00000000004269a0 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042fc85 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000048a1df : dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004b824f : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x0000000000435354 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000048051e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000407bf0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000435fa4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000049ed89 : dec ebp ; or ch, dh ; ret 0xdae9
0x000000000045a5c8 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x000000000041751e : div byte ptr [rbx] ; ret 0x7e5a
0x0000000000432021 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000432020 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000417525 : enter -0x317f, 0x33 ; ret 0x7e5a
0x000000000045e096 : enter -0x62d3, 0x51 ; ret 0x8929
0x000000000045dfe6 : enter -0x63d3, 0x51 ; ret 0x8929
0x0000000000427e20 : enter -0x74b8, 0x31 ; call rax
0x00000000004607a9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046eac9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041d650 : enter 0x40c6, 0x2c ; add dword ptr [rax - 0x77], ecx ; in al, dx ; pop rbp ; ret
0x0000000000438054 : enter 0x4c42, 0x29 ; ret 0x2948
0x0000000000438377 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000474e70 : enter 0xf41, -0x6b ; ret 0x8445
0x000000000046a285 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000040c998 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000468e95 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000437fde : fadd st(7), st(0) ; or cl, ch ; ret
0x0000000000480500 : fbld dword ptr [rcx] ; ret 0x941
0x000000000046a53b : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004bc7c8 : fcomp st(7) ; stc ; jmp rsi
0x000000000045f965 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x000000000042c88e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004aa9bd : fild dword ptr [rcx - 0x7f] ; ret 8
0x00000000004804df : fild word ptr [rcx - 0x77] ; ret
0x000000000046aa0b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000439168 : fimul dword ptr [rdi] ; sahf ; ret
0x00000000004b70a6 : fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x00000000004021e7 : fisubr word ptr [rbx] ; mov rbp, rsp ; call rax
0x0000000000492a64 : fld dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004a0b08 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042b76e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004147eb : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000047ef67 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000046c916 : fmul dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000437790 : fmul dword ptr [rax + 0xf] ; ret 0x8b48
0x000000000042b76f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427e1c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000047e800 : fmul dword ptr [rax - 0x75] ; jne 0x47e7dc ; call 0x46aa27
0x00000000004147ec : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000439144 : fmul dword ptr [rax - 0x77] ; ret 0x63e8
0x00000000004a3312 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000428b5d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000043910f : fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000427449 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000047ef68 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004a0512 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x00000000004aee9d : fmul dword ptr [rdx - 0x6a] ; ret
0x00000000004b930c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000417da3 : fmul qword ptr [rcx - 0x78] ; ret
0x000000000045faed : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000461107 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x00000000004bd121 : fsincos ; call qword ptr [rdx]
0x000000000043804f : fstp st(7), st(0) ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x000000000045e722 : fsubr qword ptr [rdi - 0x6946a2c4] ; ret
0x000000000047bb07 : fsubr st(0) ; ret
0x000000000040ca08 : fsubr st(0) ; ret 0xa8
0x0000000000474d94 : fsubr st(1) ; ret
0x00000000004bc8cc : hlt ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; cli ; call qword ptr [rdx]
0x0000000000402559 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000467b3c : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000047f4cc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004452b1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004bb622 : hlt ; call qword ptr [rdx]
0x00000000004bb742 : hlt ; jmp qword ptr [rsi]
0x0000000000402160 : hlt ; pop rbp ; mov edi, 0x6be5e8 ; jmp rax
0x00000000004bd141 : hlt ; sti ; jmp qword ptr [rax]
0x00000000004bb2f0 : hlt ; test al, -6 ; call rsp
0x000000000049d9a2 : idiv byte ptr [rcx + rsi*8 - 0x17] ; ret
0x000000000045d20b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000436e67 : idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x00000000004bbea2 : idiv edi ; ret 0xa
0x00000000004bb012 : idiv edi ; sbb al, 0x13 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004bb371 : idiv edx ; call rsp
0x0000000000407a6a : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004079ad : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004097d7 : imul eax, dword ptr [rax], 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000415897 : imul eax, dword ptr [rax], 0x48 ; mov dword ptr [rcx + rdx*8], eax ; pop rbp ; ret
0x00000000004021e8 : imul eax, dword ptr [rax], 0x48 ; mov ebp, esp ; call rax
0x0000000000407ccd : imul eax, dword ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c7d3 : imul eax, dword ptr [rax], 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004073ea : imul eax, dword ptr [rax], 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004230c8 : imul eax, dword ptr [rbp + 0x2c], -0x47 ; push rsp ; ret 0x8be9
0x0000000000459ec1 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000047a8fb : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x00000000004576fa : in al, -0x55 ; ret
0x0000000000497fe8 : in al, -0x7f ; ret 0xfff7
0x0000000000470716 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419de6 : in al, 0x47 ; ret 0x1db9
0x00000000004195b2 : in al, 0x47 ; ret 0x8589
0x00000000004a35d2 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000046ad91 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004230e4 : in al, 7 ; jb 0x4230a6 ; push rsp ; ret 0x8be9
0x0000000000461e25 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000431a31 : in al, dx ; jmp 0x431bfd
0x0000000000431a30 : in al, dx ; jmp 0x431bfe
0x00000000004701c6 : in al, dx ; jmp 0x470806
0x00000000004701c5 : in al, dx ; jmp 0x470807
0x0000000000480c0c : in al, dx ; jmp 0x480c89
0x0000000000480c0b : in al, dx ; jmp 0x480c8a
0x00000000004620e5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004024f4 : in al, dx ; pop rbp ; ret
0x000000000042e9fa : in al, dx ; ret 0x8589
0x0000000000431a14 : in al, dx ; ret 0xe8ff
0x000000000042f30d : in al, dx ; ret 0xff3
0x0000000000412132 : in eax, -0x47 ; leave ; xchg eax, ebx ; ret
0x000000000048a1dd : in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000485f2b : in eax, 0 ; add cl, ch ; ret 0
0x0000000000469bfa : in eax, dx ; adc eax, ebp ; js 0x469bed ; ret
0x000000000045a46f : in eax, dx ; jge 0x45a416 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000049407c : in eax, dx ; ret 0
0x000000000041a4b3 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b4c
0x0000000000436766 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000422bd9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004777e5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000459aa4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000049f3d3 : inc dword ptr [rax] ; ret
0x0000000000492b34 : inc dword ptr [rbp + 0xf] ; ret
0x000000000044486e : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x000000000043eed7 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000041ca7a : inc dword ptr [rcx + 0x20] ; ret
0x000000000049a7bb : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000047bb2a : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000040c8b2 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000497fe2 : inc dword ptr [rcx - 0x1cb46e16] ; in al, -0x7f ; ret 0xfff7
0x000000000047bce7 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x000000000041ca2f : inc dword ptr [rcx - 0x78] ; ret
0x00000000004aa9b6 : inc dword ptr [rcx - 0x7f] ; ret 0xc350
0x0000000000435d6b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000459e7b : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000049e2da : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000049cb2d : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000049e696 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000049967e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000049f3cd : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x000000000049df35 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004993a7 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000049ec35 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x00000000004973a9 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000049f385 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000496cee : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004091ea : inc edi ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0x0000000000444cbd : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000435cb6 : insd dword ptr [rdi], dx ; xor ebx, dword ptr [rdi] ; jle 0x435c4b ; int 0x80
0x00000000004564c7 : int 0x5b
0x000000000040b95b : int 0x80
0x000000000042fa24 : int 6
0x00000000004b2761 : int1 ; ret 0x43ce
0x00000000004b7f25 : int1 ; ret 0x81e9
0x00000000004aee2f : int1 ; ret 0x8589
0x00000000004b7ebf : int1 ; ret 0x8b48
0x00000000004b1d51 : int1 ; xchg eax, esp ; ret
0x000000000049769a : iretd ; mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000402153 : ja 0x40215a ; pop rbp ; ret
0x00000000004315d1 : ja 0x43161e ; pop rbp ; ret
0x0000000000442ee7 : ja 0x442ece ; ret 0x8974
0x00000000004230e6 : jb 0x4230a4 ; push rsp ; ret 0x8be9
0x0000000000442a5e : jb 0x442a92 ; jl 0x442a1f ; ret 0x8237
0x000000000045d0de : jb 0x45d10f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000439a8d : jbe 0x439a66 ; adc ch, cl ; ret
0x000000000047344d : jbe 0x47340c ; push rcx ; jmp rsp
0x000000000047344c : jbe 0x47340d ; push rcx ; jmp rsp
0x0000000000486beb : jbe 0x486c2f ; ret 0x8589
0x0000000000486c3f : jbe 0x486c83 ; ret 0x8589
0x000000000049659b : jbe 0x4965df ; ret 0x1db9
0x000000000049f105 : jbe 0x49f149 ; ret 0x8948
0x000000000040215f : je 0x40215d ; pop rbp ; mov edi, 0x6be5e8 ; jmp rax
0x0000000000485f28 : je 0x4944c9 ; jmp 0x49217b
0x0000000000485e80 : je 0x4990b2 ; jmp 0x49217b
0x0000000000485f60 : je 0x49b704 ; jmp 0x49217b
0x0000000000485eb8 : je 0x49dc7e ; jmp 0x49217b
0x0000000000485ef0 : je 0x49ead3 ; jmp 0x49217b
0x00000000004bb2b1 : je 0x4bb2af ; call rsp
0x000000000043ecbd : jg 0x43ecd1 ; xchg eax, esp ; ret 0xd284
0x000000000043ef24 : jg 0x43ef38 ; xchg eax, esp ; ret 0xd284
0x000000000043f05a : jg 0x43f06e ; xchg eax, esp ; ret 0xd284
0x0000000000467ab1 : jg 0x467ac5 ; xchg eax, edi ; ret 0xd284
0x0000000000499c54 : jg 0x499c54 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000049f714 : jg 0x49f6e3 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x00000000004259f9 : jge 0x4259ef ; call 0x401c94
0x00000000004266ea : jge 0x4266eb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042670a : jge 0x42670b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000427e1b : jge 0x427dfe ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004315cd : jge 0x4315ce ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000440239 : jge 0x44023a ; stc ; ret
0x0000000000441cb8 : jge 0x441c42 ; call 0x479438
0x000000000044f956 : jge 0x44f8db ; ret 0xffd5
0x0000000000450420 : jge 0x450400 ; shr cl, cl ; ret 0x3b
0x000000000045a470 : jge 0x45a415 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000046404a : jge 0x46404d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004676f0 : jge 0x4676ed ; pop rbp ; ret
0x0000000000467f85 : jge 0x467fdc ; ret 0x89b9
0x0000000000468405 : jge 0x46845c ; ret 0xb2b9
0x0000000000468421 : jge 0x468478 ; ret 0x48b9
0x000000000047e7ff : jge 0x47e7e1 ; mov rsi, qword ptr [rbp - 0x30] ; call 0x46aa28
0x000000000049a302 : jge 0x49a2c0 ; ret
0x000000000049a301 : jge 0x49a2c1 ; ret
0x00000000004aee2d : jge 0x4aedcc ; int1 ; ret 0x8589
0x0000000000414b3a : jl 0x414ba2 ; ret
0x0000000000414e99 : jl 0x414f01 ; ret
0x0000000000442a60 : jl 0x442a1d ; ret 0x8237
0x0000000000442a5f : jl 0x442a1e ; ret 0x8237
0x0000000000467e51 : jl 0x467ea8 ; ret 0x89b9
0x000000000047cad7 : jl 0x47caa1 ; ret
0x000000000047d8a0 : jl 0x47d86a ; ret
0x000000000042e758 : jle 0x42e6ec ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000435cb9 : jle 0x435c48 ; int 0x80
0x000000000044028d : jle 0x44028e ; stc ; ret
0x00000000004425f1 : jle 0x4425f2 ; stc ; ret
0x00000000004aee81 : jle 0x4aee20 ; int1 ; ret 0x8589
0x00000000004b7ebd : jle 0x4b7e5c ; int1 ; ret 0x8b48
0x00000000004b7f23 : jle 0x4b7ec2 ; int1 ; ret 0x81e9
0x0000000000401b6b : jmp 0x401b27
0x0000000000401cfb : jmp 0x401b28
0x0000000000402612 : jmp 0x40261d
0x0000000000408be9 : jmp 0x40978c
0x000000000040c77d : jmp 0x40cc7b
0x0000000000412573 : jmp 0x413dff
0x0000000000416cce : jmp 0x4171b7
0x0000000000418c7d : jmp 0x418e09
0x0000000000418d4d : jmp 0x418e0b
0x000000000041a36e : jmp 0x41a85b
0x0000000000423044 : jmp 0x423a19
0x0000000000423f30 : jmp 0x423f9b
0x0000000000427424 : jmp 0x427680
0x0000000000427cb9 : jmp 0x427e45
0x0000000000429b4a : jmp 0x429c8e
0x0000000000429b49 : jmp 0x429c8f
0x0000000000429b49 : jmp 0x429c90
0x0000000000431a32 : jmp 0x431bfc
0x0000000000435659 : jmp 0x4370eb
0x00000000004359f6 : jmp 0x4370ec
0x0000000000437fe1 : jmp 0x4383af
0x000000000043ce98 : jmp 0x43d242
0x000000000043d0b3 : jmp 0x43d243
0x0000000000442808 : jmp 0x442df2
0x0000000000450b70 : jmp 0x453ff0
0x000000000044ea74 : jmp 0x453ff1
0x000000000044fe41 : jmp 0x453ff2
0x00000000004557e3 : jmp 0x45582c
0x000000000045b41b : jmp 0x45be87
0x000000000045b358 : jmp 0x45be89
0x000000000045d483 : jmp 0x45d4e8
0x0000000000460916 : jmp 0x4619d9
0x0000000000460733 : jmp 0x4619da
0x0000000000461b70 : jmp 0x461b7b
0x000000000046418e : jmp 0x46423f
0x0000000000464f2c : jmp 0x465246
0x0000000000466ed9 : jmp 0x4676d9
0x00000000004683fa : jmp 0x4685a3
0x000000000046a1f5 : jmp 0x46a200
0x000000000046a357 : jmp 0x46a362
0x000000000046a5c5 : jmp 0x46a5d0
0x000000000046f386 : jmp 0x46f668
0x00000000004701c7 : jmp 0x470805
0x0000000000470743 : jmp 0x470807
0x0000000000470bcb : jmp 0x470b61
0x000000000047a871 : jmp 0x47a87c
0x000000000047a8fc : jmp 0x47aa44
0x000000000047bdd8 : jmp 0x47c563
0x000000000047dd1e : jmp 0x47e391
0x000000000047d89a : jmp 0x47e393
0x0000000000480c0d : jmp 0x480c88
0x000000000042f08f : jmp 0x490579df
0x000000000042f1db : jmp 0x49057b2b
0x000000000042f2ad : jmp 0x49057bfd
0x000000000042f32e : jmp 0x49057c7e
0x00000000004312d4 : jmp 0x49059c24
0x000000000043134f : jmp 0x49059c9f
0x0000000000485e86 : jmp 0x492175
0x000000000049407b : jmp 0x4a036f
0x000000000049694d : jmp 0x4a0373
0x00000000004934fb : jmp 0x4a0374
0x00000000004942e2 : jmp 0x4a0375
0x00000000004a3333 : jmp 0x4a340c
0x00000000004a4487 : jmp 0x4a44d8
0x00000000004a8ec2 : jmp 0x4aad72
0x00000000004a7f94 : jmp 0x4aad73
0x00000000004a882a : jmp 0x4aad74
0x00000000004b63ae : jmp 0x4b92b4
0x00000000004b54a0 : jmp 0x4b92b5
0x000000000045bffa : jmp 0x4f5182f6
0x000000000043bd2a : jmp 0xffffffffc24505d2
0x000000000043bd29 : jmp 0xffffffffc24505d3
0x00000000004802cf : jmp 0xffffffffc40c3996
0x000000000049eb86 : jmp 0xfffffffff6cb6195
0x000000000049eb85 : jmp 0xfffffffff6cb6196
0x000000000040b25d : jmp qword ptr [rax]
0x000000000040942e : jmp qword ptr [rbx]
0x0000000000409519 : jmp qword ptr [rcx]
0x0000000000423707 : jmp qword ptr [rdi]
0x000000000043320f : jmp qword ptr [rdx]
0x00000000004020f0 : jmp qword ptr [rip + 0x2bc202]
0x00000000004020e0 : jmp qword ptr [rip + 0x2bc20a]
0x00000000004020d0 : jmp qword ptr [rip + 0x2bc212]
0x00000000004020c0 : jmp qword ptr [rip + 0x2bc21a]
0x00000000004020b0 : jmp qword ptr [rip + 0x2bc222]
0x00000000004020a0 : jmp qword ptr [rip + 0x2bc22a]
0x0000000000402090 : jmp qword ptr [rip + 0x2bc232]
0x0000000000402080 : jmp qword ptr [rip + 0x2bc23a]
0x0000000000402070 : jmp qword ptr [rip + 0x2bc242]
0x0000000000402060 : jmp qword ptr [rip + 0x2bc24a]
0x0000000000402050 : jmp qword ptr [rip + 0x2bc252]
0x0000000000402040 : jmp qword ptr [rip + 0x2bc25a]
0x0000000000402030 : jmp qword ptr [rip + 0x2bc262]
0x0000000000402020 : jmp qword ptr [rip + 0x2bc26a]
0x0000000000402010 : jmp qword ptr [rip + 0x2bc272]
0x0000000000402000 : jmp qword ptr [rip + 0x2bc27a]
0x0000000000401ff0 : jmp qword ptr [rip + 0x2bc282]
0x0000000000401fe0 : jmp qword ptr [rip + 0x2bc28a]
0x0000000000401fd0 : jmp qword ptr [rip + 0x2bc292]
0x0000000000401fc0 : jmp qword ptr [rip + 0x2bc29a]
0x0000000000401fb0 : jmp qword ptr [rip + 0x2bc2a2]
0x0000000000401fa0 : jmp qword ptr [rip + 0x2bc2aa]
0x0000000000401f90 : jmp qword ptr [rip + 0x2bc2b2]
0x0000000000401f80 : jmp qword ptr [rip + 0x2bc2ba]
0x0000000000401f60 : jmp qword ptr [rip + 0x2bc2ca]
0x0000000000401f50 : jmp qword ptr [rip + 0x2bc2d2]
0x0000000000401f40 : jmp qword ptr [rip + 0x2bc2da]
0x0000000000401f30 : jmp qword ptr [rip + 0x2bc2e2]
0x0000000000401f20 : jmp qword ptr [rip + 0x2bc2ea]
0x0000000000401f10 : jmp qword ptr [rip + 0x2bc2f2]
0x0000000000401f00 : jmp qword ptr [rip + 0x2bc2fa]
0x000000000040cb92 : jmp qword ptr [rsi]
0x0000000000402167 : jmp rax
0x0000000000411548 : jmp rbx
0x000000000045097a : jmp rcx
0x0000000000435f7b : jmp rdi
0x00000000004021a7 : jmp rdx
0x00000000004675e7 : jmp rsi
0x00000000004095b7 : jmp rsp
0x0000000000402190 : jne 0x402197 ; pop rbp ; ret
0x0000000000427e79 : jne 0x427e44 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000429c45 : jne 0x429c21 ; call rax
0x0000000000432022 : jne 0x43201a ; mov rax, rdx ; pop rbp ; ret
0x0000000000444c17 : jne 0x444bef ; sti ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000045f966 : jne 0x45f9e1 ; ret 0x8589
0x000000000045faee : jne 0x45fb69 ; ret 0x8589
0x0000000000461108 : jne 0x461183 ; ret 0xedb9
0x0000000000461360 : jne 0x4613db ; ret 0xedb9
0x000000000047e803 : jne 0x47e7d9 ; call 0x46aa24
0x000000000040645e : jno 0x4063eb ; ret
0x0000000000407d5b : jno 0x407ce8 ; ret
0x000000000043d094 : jno 0x43d0f9 ; mov word ptr [rcx + rdi*4], es ; mov ah, 0x3a ; ret
0x00000000004aa585 : jno 0x4aa544 ; ror dword ptr [rcx], 1 ; ret
0x0000000000414aef : jnp 0x414b57 ; ret
0x000000000047ca83 : jnp 0x47ca4d ; ret
0x0000000000499fb2 : jnp 0x499fb2 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004bb011 : jnp 0x4bb012 ; lcall ptr [rbx + rdx] ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000049a23d : jns 0x49a23d ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040358e : jo 0x40351b ; ret
0x000000000040d47f : jo 0x40d4e1 ; pop r14 ; pop rbp ; ret
0x0000000000420556 : jo 0x4204db ; ret 0x890c
0x00000000004228a0 : jo 0x422825 ; ret 0xba0c
0x000000000042291c : jo 0x4228a1 ; ret 0xb90c
0x0000000000436444 : jo 0x4363d9 ; xchg eax, ebp ; push -1 ; ret 0x9589
0x000000000043c6e2 : jo 0x43c743 ; ret
0x000000000044986e : jo 0x44987a ; ret
0x000000000044b4de : jo 0x44b4ea ; ret
0x000000000044ea2d : jo 0x44ea39 ; ret
0x0000000000455d14 : jo 0x455d75 ; ret
0x000000000045e15b : jo 0x45e1bc ; ret
0x00000000004a388c : jo 0x4a38ed ; ret
0x00000000004bc620 : jo 0x4bc5bf ; stc ; call qword ptr [rbx]
0x00000000004bc8d0 : jo 0x4bc8d5 ; cli ; call qword ptr [rdx]
0x00000000004988ae : jp 0x4988b8 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004aa583 : jp 0x4aa560 ; jno 0x4aa546 ; ror dword ptr [rcx], 1 ; ret
0x000000000043e7db : jrcxz 0x43e760 ; ret 0xffbf
0x000000000043e7db : jrcxz 0x43e766 ; ret 0xffbf
0x00000000004609b1 : jrcxz 0x460944 ; pop rdx ; jmp 0x4619dc
0x00000000004bb331 : jrcxz 0x4bb32f ; call rsp
0x00000000004bb330 : jrcxz 0x4bb330 ; call rsp
0x0000000000439ba6 : js 0x439c07 ; ret
0x0000000000442337 : js 0x4422f6 ; and ebx, ebp ; ret 0xb2b1
0x0000000000443ff7 : js 0x443fde ; ret 0x8974
0x00000000004446f6 : js 0x4446dd ; ret 0x8a74
0x000000000044471c : js 0x444703 ; ret 0xe974
0x0000000000469bfd : js 0x469bea ; ret
0x000000000040989b : lahf ; adc byte ptr [rax], al ; add cl, ch ; ret 8
0x00000000004bc6e9 : lahf ; stc ; jmp qword ptr [rbx]
0x0000000000496c6e : lcall ptr [rbx + 0x47] ; ret
0x00000000004bb013 : lcall ptr [rbx + rdx] ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000045041e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004959ef : lcall ptr [rdx] ; ret 0x4fab
0x00000000004745c1 : lcall ptr [rsi - 7] ; ret 0xe980
0x0000000000436de1 : lcall ptr [rsi] ; jmp qword ptr [rdx]
0x000000000045151e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000424736 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c34f : lea eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000441cb7 : lea edi, dword ptr [rbp - 0x80] ; call 0x479439
0x00000000004135fe : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041a676 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046c81d : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004135fd : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000046c81c : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000046ae6f : leave ; ret 0x86f8
0x0000000000410cdb : leave ; xchg eax, ebx ; ret
0x0000000000417d9f : les r9d, ptr [r14 - 0x77b6232e] ; ret
0x000000000049f103 : ljmp ptr [rcx] ; jbe 0x49f14b ; ret 0x8948
0x0000000000436e69 : ljmp ptr [rcx] ; ret 0xd701
0x0000000000435b0a : ljmp ptr [rcx] ; ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x00000000004238d4 : ljmp ptr [rdi + 0x53] ; ret 0x899e
0x0000000000479251 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x000000000044ed7e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004bb26b : ljmp ptr [rsp + rbx + 0x2e040000] ; cli ; call rsp
0x00000000004bb26c : lodsb al, byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rsi + rbp], al ; cli ; call rsp
0x00000000004bd0a1 : lodsb al, byte ptr [rsi] ; sti ; call rbx
0x00000000004a398a : lodsd eax, dword ptr [rsi] ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x00000000004271ad : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040b2af : lodsd eax, dword ptr [rsi] ; and byte ptr [rcx], al ; add bh, al ; clc ; ret 0xb6bf
0x000000000049a300 : lodsd eax, dword ptr [rsi] ; jge 0x49a2c2 ; ret
0x00000000004267f0 : loop 0x4267e5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000046a4f2 : loop 0x46a4a5 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004bbda1 : loop 0x4bbd9b ; jmp rbx
0x000000000042752e : loope 0x4274e9 ; xchg eax, ebp ; jmp 0x427683
0x0000000000451d85 : loope 0x451d53 ; jmp 0x453ff3
0x00000000004120e2 : loopne 0x4120a1 ; leave ; xchg eax, ebx ; ret
0x0000000000416258 : loopne 0x41628a ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xad19
0x0000000000416257 : loopne 0x41628b ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xad19
0x000000000041629a : loopne 0x4162cc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xad19
0x0000000000416299 : loopne 0x4162cd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xad19
0x0000000000428c1a : loopne 0x428c21 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042c26e : loopne 0x42c2bf ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042c26d : loopne 0x42c2c0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043150d : loopne 0x431560 ; add esp, 0x1d0 ; pop rbp ; ret
0x00000000004376c2 : loopne 0x437728 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043bb68 : loopne 0x43bb25 ; ret 0xd50f
0x000000000043f1ca : loopne 0x43f1d4 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444ad8 : loopne 0x444ae2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000446163 : loopne 0x4461b6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045570d : loopne 0x455773 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456af4 : loopne 0x456b47 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000045cb43 : loopne 0x45cb4c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045d4ce : loopne 0x45d51e ; add esp, 0x60 ; pop rbp ; ret
0x000000000045d4cd : loopne 0x45d51f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000461cdf : loopne 0x461c73 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000461cde : loopne 0x461c74 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047ef0c : loopne 0x47eea0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047ef0b : loopne 0x47eea1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047f4d0 : loopne 0x47f4d7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000481192 : loopne 0x481199 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a258c : loopne 0x4a25db ; mov esp, ebp ; pop rbp ; ret
0x00000000004a258b : loopne 0x4a25dc ; mov esp, ebp ; pop rbp ; ret
0x00000000004a27dc : loopne 0x4a282b ; mov esp, ebp ; pop rbp ; ret
0x00000000004a27db : loopne 0x4a282c ; mov esp, ebp ; pop rbp ; ret
0x00000000004a3385 : loopne 0x4a338c ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a48bf : loopne 0x4a4853 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a48be : loopne 0x4a4854 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004bb620 : loopne 0x4bb690 ; hlt ; call qword ptr [rdx]
0x00000000004bb741 : loopne 0x4bb739 ; jmp qword ptr [rsi]
0x00000000004bd060 : loopne 0x4bd0a2 ; sti ; jmp qword ptr [rdx]
0x0000000000469bf9 : mov ah, -0x13 ; adc eax, ebp ; js 0x469bee ; ret
0x000000000046a4f1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004955a0 : mov ah, -0x50 ; out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000044f94d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000044fa27 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043ef98 : mov ah, -1 ; ret 0x5589
0x00000000004bb0f4 : mov ah, 0x16 ; add byte ptr [rax], al ; adc al, -0x64 ; stc ; call rsp
0x00000000004bb2ac : mov ah, 0x1d ; add byte ptr [rax], al ; xor al, 0x74 ; cli ; call rsp
0x00000000004bb2ec : mov ah, 0x1e ; add byte ptr [rax], al ; hlt ; test al, -6 ; call rsp
0x00000000004bb32c : mov ah, 0x1f ; add byte ptr [rax], al ; jrcxz 0x4bb334 ; call rsp
0x00000000004bb36c : mov ah, 0x20 ; add byte ptr [rax], al ; adc al, -9 ; cli ; call rsp
0x000000000045e3f0 : mov ah, 0x2d ; ret 0x37ac
0x000000000045e3be : mov ah, 0x2d ; xchg eax, ebp ; ret
0x000000000045e409 : mov ah, 0x2d ; xchg eax, esi ; ret
0x000000000043ca9f : mov ah, 0x3a ; ret
0x000000000042778e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000044d9d5 : mov ah, 0x75 ; ret
0x00000000004bc28c : mov ah, 0xc ; add byte ptr [rax], al ; cmp dil, al ; jmp qword ptr [rcx]
0x00000000004564e3 : mov al, -0x47 ; ret
0x00000000004bd0a0 : mov al, -0x54 ; sti ; call rbx
0x00000000004bc600 : mov al, -0x68 ; stc ; call rdx
0x000000000042752f : mov al, -0x6b ; jmp 0x427682
0x00000000004bc8b0 : mov al, -1 ; stc ; call rdx
0x000000000046eb4f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000460d09 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421a8b : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402a60 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b3f80 : mov al, 0x21 ; ret 0x8941
0x0000000000430910 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000455bdf : mov al, 0x48 ; mov edi, esi ; mov rsi, rax ; call 0x401e89
0x00000000004bcfe0 : mov al, 4 ; sti ; call rdi
0x000000000045a4fe : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042365f : mov al, 8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046a94b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x00000000004a0dfd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a0aca : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a0d2d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046aa0c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000046a94a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000046a714 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000046a719 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004a7f92 : mov bh, -0x6d ; jmp 0x4aad75
0x0000000000470d75 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004955a5 : mov bl, -0x2e ; ret 0x1b2
0x0000000000486c5b : mov bl, -0x2e ; ret 0x8589
0x00000000004955c1 : mov bl, -0x2e ; ret 0x8b48
0x000000000043ca4b : mov bl, 0x3a ; ret
0x0000000000447375 : mov bl, 0x75 ; ret
0x000000000041ea43 : mov byte ptr [r8 - 0x75], r9b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041d651 : mov byte ptr [rax + 0x2c], 1 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ea44 : mov byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000421efc : mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000043c880 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004351fb : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004275f1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004175c7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004021c3 : mov byte ptr [rip + 0x2bc48e], 1 ; ret
0x000000000044f1cf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004a4d44 : mov ch, cl ; ret
0x00000000004934f9 : mov cl, 0x13 ; jmp 0x4a0376
0x00000000004a9c4a : mov cl, 0x13 ; ret 0x1ab9
0x00000000004aaa63 : mov cl, 0x13 ; ret 0x1e9
0x00000000004a5ea9 : mov cl, 0x13 ; ret 0x8589
0x0000000000431e04 : mov dh, -0x39 ; pop rbp ; ret
0x000000000042b262 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a1a94 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000415b44 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ac0a : mov dh, -0x40 ; pop rbp ; ret
0x000000000046aa0f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004bb179 : mov dh, -7 ; jmp rsp
0x00000000004a254a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004a17c1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004120e0 : mov dr1, word ptr [rdi - 0x6c364620] ; ret
0x000000000040972c : mov ds, word ptr [rsi + 0x6348b4ef] ; ret 0x8b48
0x00000000004458e9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004454bf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429ac5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x000000000042c109 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x0000000000431a2f : mov dword ptr [rbp - 0x14], eax ; jmp 0x431bff
0x0000000000480c0a : mov dword ptr [rbp - 0x14], eax ; jmp 0x480c8b
0x000000000042fedd : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000430110 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000047a8f9 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x47aa47
0x0000000000427421 : mov dword ptr [rbp - 0x34], eax ; jmp 0x427683
0x0000000000427cb6 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x427e48
0x0000000000427d41 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x427e48
0x00000000004940a8 : mov dword ptr [rbp - 0x49c], eax ; jmp 0x4a0375
0x000000000042778c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045b418 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x45be8a
0x0000000000415a5c : mov dword ptr [rbp - 0x6c], eax ; mov dword ptr [rbp - 0x70], ecx ; call 0x401c98
0x0000000000415a5f : mov dword ptr [rbp - 0x70], ecx ; call 0x401c95
0x0000000000415af7 : mov dword ptr [rbp - 0x7c], eax ; mov dword ptr [rbp - 0x80], ecx ; call 0x401de8
0x0000000000415afa : mov dword ptr [rbp - 0x80], ecx ; call 0x401de5
0x0000000000402557 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427d21 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000402585 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004676ef : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000445bc6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041589a : mov dword ptr [rcx + rdx*8], eax ; pop rbp ; ret
0x000000000047a6cc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x00000000004315d0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000046404c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000044576d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000423e2f : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000043027b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000460917 : mov eax, 0xb8000010 ; ret
0x0000000000408f4b : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045d34b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047ecc4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000046c819 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000417074 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c884 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000461e23 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045d51e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424872 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042599e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043c6dc : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000457727 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429e62 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004a35d0 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045d4cc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000461cdd : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a258a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439ba0 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000044576f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000427e7f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x00000000004a44c4 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042f6a7 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000463e24 : mov eax, dword ptr [rbp - 0x68] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004452af : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000457533 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000438754 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000464222 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045e155 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004266ae : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004157ed : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004266ed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042670d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044576e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000046a716 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000046a163 : mov eax, eax ; pop rbp ; ret
0x000000000046a53a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000042abe1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432025 : mov eax, edx ; pop rbp ; ret
0x000000000046a45d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000046a715 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000452188 : mov ebp, 0xe19c53ba ; ret
0x00000000004b7c78 : mov ebp, 0xfffffe00 ; call 0x4a3f47
0x00000000004a7afc : mov ebp, ecx ; ret
0x00000000004021eb : mov ebp, esp ; call rax
0x0000000000402151 : mov ebp, esp ; ja 0x40215c ; pop rbp ; ret
0x00000000004b40a2 : mov ebx, 0x214efb6f ; ret 0x8941
0x0000000000414e96 : mov ebx, 0x647cb9f0 ; ret
0x00000000004b6d6e : mov ebx, 0x81ffffff ; ret 0x8ae1
0x000000000043cf7d : mov ebx, 0xb8000002 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb96e
0x0000000000444327 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000499fb1 : mov ebx, 0xc7fff67b ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041659b : mov ecx, 0xb9f7f724 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xad19
0x000000000047bceb : mov ecx, 0xba41a9ee ; ret
0x00000000004454bc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c01b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042c26c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042cb86 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000427e1e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043027d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042c01f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000047342f : mov edi, 0x51b94936 ; jmp rsp
0x00000000004021e5 : mov edi, 0x6bde20 ; mov rbp, rsp ; call rax
0x0000000000402162 : mov edi, 0x6be5e8 ; jmp rax
0x00000000004021a2 : mov edi, 0x6be5e8 ; jmp rdx
0x000000000043e7de : mov edi, 0x81ffffff ; ret 0x91d1
0x00000000004120e1 : mov edi, 0x93c9b9e0 ; ret
0x0000000000431a33 : mov edi, 0xb8000001 ; ret
0x000000000044ea27 : mov edi, 0xb8000055 ; wait ; jo 0x44ea3f ; ret
0x000000000041c3ad : mov edi, dword ptr [rax] ; call 0x401b48
0x00000000004259f8 : mov edi, dword ptr [rbp - 0x10] ; call 0x401c95
0x00000000004b7c77 : mov edi, dword ptr [rbp - 0x200] ; call 0x4a3f48
0x000000000047e7fe : mov edi, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rbp - 0x30] ; call 0x46aa29
0x00000000004315cc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004266e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000426709 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042c022 : mov edi, dword ptr [rcx] ; call rax
0x0000000000429c41 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004b9307 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000455be1 : mov edi, esi ; mov rsi, rax ; call 0x401e87
0x00000000004b9306 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004b8acc : mov edx, 0x2144b57b ; ret 0x8941
0x000000000046f2fe : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044f1eb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000043b5f1 : mov edx, 0xb41ebe2d ; ret
0x00000000004b8ce1 : mov edx, 0xe9b9f505 ; ret
0x0000000000469c52 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x00000000004021c5 : mov es, esp ; sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000450062 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000046f2e7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000429c44 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000047e802 : mov esi, dword ptr [rbp - 0x30] ; call 0x46aa25
0x0000000000427e22 : mov esi, dword ptr [rcx] ; call rax
0x0000000000455be4 : mov esi, eax ; call 0x401e84
0x00000000004021a0 : mov esi, eax ; mov edi, 0x6be5e8 ; jmp rdx
0x0000000000427e7c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000476117 : mov esi, es ; ret
0x00000000004bb174 : mov esp, 0x54000018 ; mov dh, -7 ; jmp rsp
0x000000000046c515 : mov esp, 0x5ba9942d ; ret
0x000000000046c557 : mov esp, 0x5ba9952d ; ret
0x00000000004a43bf : mov esp, 0xb898e02d ; ret
0x00000000004988ad : mov esp, 0xc700007a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000412244 : mov esp, 0xffffff5 ; ret 0x8589
0x00000000004024f3 : mov esp, ebp ; pop rbp ; ret
0x00000000004676ee : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000445bc5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415899 : mov qword ptr [rcx + rdx*8], rax ; pop rbp ; ret
0x000000000047a6cb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004315cf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000469bf8 : mov r12b, -0x13 ; adc eax, ebp ; js 0x469bef ; ret
0x000000000045e3ef : mov r12b, 0x2d ; ret 0x37ac
0x000000000045e3bd : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x000000000045e408 : mov r12b, 0x2d ; xchg eax, esi ; ret
0x000000000042778d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000046c514 : mov r12d, 0x5ba9942d ; ret
0x000000000046c556 : mov r12d, 0x5ba9952d ; ret
0x00000000004a43be : mov r12d, 0xb898e02d ; ret
0x0000000000417589 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045d34a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047ecc3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000417073 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c883 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000045d51d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424871 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042599d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043c6db : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429e61 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045d4cb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439b9f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000427e7e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004a44c3 : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000045e154 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004266ad : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004157ec : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004266ec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042670c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000046a539 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000046a162 : mov rax, r8 ; pop rbp ; ret
0x000000000042abe0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000432024 : mov rax, rdx ; pop rbp ; ret
0x00000000004021ea : mov rbp, rsp ; call rax
0x0000000000402150 : mov rbp, rsp ; ja 0x40215d ; pop rbp ; ret
0x000000000042cb85 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000427e1d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043027c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042c01e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041c3ac : mov rdi, qword ptr [rax] ; call 0x401b49
0x00000000004259f7 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401c96
0x00000000004b7c76 : mov rdi, qword ptr [rbp - 0x200] ; call 0x4a3f49
0x00000000004315cb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004266e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000426708 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042c021 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000429c40 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000455be0 : mov rdi, rsi ; mov rsi, rax ; call 0x401e88
0x0000000000469c51 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000429c43 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000047e801 : mov rsi, qword ptr [rbp - 0x30] ; call 0x46aa26
0x0000000000427e21 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000455be3 : mov rsi, rax ; call 0x401e85
0x000000000040219f : mov rsi, rax ; mov edi, 0x6be5e8 ; jmp rdx
0x0000000000427e7b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004024f2 : mov rsp, rbp ; pop rbp ; ret
0x0000000000417da1 : mov ss, edx ; fmul qword ptr [rcx - 0x78] ; ret
0x000000000045d0e1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000049769b : mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000043d096 : mov word ptr [rcx + rdi*4], es ; mov ah, 0x3a ; ret
0x000000000047a9db : mov word ptr [rdx], es ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000492228 : movabs al, byte ptr [0x8348e28948fffffb] ; ret 0x48f0
0x000000000049244b : movabs al, byte ptr [0x8348e28948fffffc] ; ret 0x48f0
0x000000000049266b : movabs al, byte ptr [0x8348e28948fffffd] ; ret 0x48f0
0x0000000000439158 : movabs al, byte ptr [0x894100000000ba41] ; ret
0x0000000000480171 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000047deab : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x000000000044acc8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000042f30a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000486d8e : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rbx, esp ; ret
0x000000000044df15 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000048d3d3 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x00000000004978a1 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x00000000004bd17c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x19], dl ; cld ; call qword ptr [rcx]
0x0000000000418d5a : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047344b : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x47340e ; push rcx ; jmp rsp
0x0000000000417dfd : movsd dword ptr [rdi], dword ptr [rsi] ; or eax, dword ptr [rax] ; add cl, ch ; ret 8
0x00000000004582f2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043c8e0 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x896e
0x0000000000440876 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000041625a : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xad19
0x000000000043cf83 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb96e
0x0000000000441f95 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x00000000004a0741 : movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004395ac : movsxd rax, ecx ; pop rbp ; ret
0x0000000000486d3b : movsxd rbx, esp ; ret
0x0000000000415261 : movsxd rdx, edi ; ret 0x89db
0x000000000041553b : movsxd rdx, edi ; ret 0xb9db
0x000000000042b261 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a1a93 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000415b43 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ac09 : movzx eax, al ; pop rbp ; ret
0x000000000046aa0e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000046a718 : movzx eax, ax ; pop rbp ; ret
0x0000000000431e03 : movzx eax, bh ; pop rbp ; ret
0x00000000004175ca : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000431e02 : movzx eax, dil ; pop rbp ; ret
0x000000000046f0f8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043bef2 : nop ; add rsp, 0x420 ; pop rbp ; ret
0x0000000000415a61 : nop ; call 0x401c93
0x00000000004471b5 : nop ; ret
0x00000000004555c2 : nop ; ret 0x148
0x00000000004555d6 : nop ; ret 0x2948
0x00000000004166ea : nop ; ret 0xb2b6
0x00000000004259fc : nop ; ret 0xfffd
0x00000000004b9328 : nop dword ptr [rax + rax] ; ret
0x00000000004aaba3 : not byte ptr [rdx - 0x7ebe5362] ; ret
0x0000000000459b41 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004bc28d : or al, 0 ; add byte ptr [rax + 0x3a], al ; clc ; jmp qword ptr [rcx]
0x000000000046fb21 : or al, 0 ; add cl, ch ; ret
0x00000000004bc6e4 : or al, 0x11 ; add byte ptr [rax], al ; pop rax ; lahf ; stc ; jmp qword ptr [rbx]
0x000000000040b593 : or al, 0x25 ; xlatb ; pushfq ; add r8b, bpl ; ret 0xff67
0x000000000044f94a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000044fa24 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000048b436 : or al, 0x7a ; ret 0x8909
0x0000000000492ffd : or al, 0x7a ; ret 0xb909
0x00000000004a3987 : or al, 0xffffffffffffff95 ; adc byte ptr [rbp - 0x76baffb5], ch ; ret 0x8141
0x0000000000485ddb : or al, 1 ; add cl, ch ; nop ; ret
0x0000000000408d66 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000444289 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000459d85 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000474e6d : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x0000000000431a11 : or bh, al ; in al, dx ; ret 0xe8ff
0x0000000000480835 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000049df32 : or bh, byte ptr [rsi + rsi*8] ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000042e75d : or byte ptr [r15], 0x8f ; ret 6
0x0000000000474237 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004a2c1c : or byte ptr [rax + 0x69], cl ; ret 0x101
0x0000000000474238 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004454c0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b4de3 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000400bf0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045a9f8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004230c7 : or byte ptr [rbx + 0x45], ch ; sub al, -0x47 ; push rsp ; ret 0x8be9
0x000000000042e75e : or byte ptr [rdi], 0x8f ; ret 6
0x000000000043fa6c : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x0000000000486c93 : or ch, dh ; ret 0x8589
0x000000000049595b : or ch, dh ; ret 0xa2b9
0x000000000049ed8b : or ch, dh ; ret 0xdae9
0x0000000000437fe0 : or cl, ch ; ret
0x00000000004a37dc : or cl, ch ; ret 0
0x0000000000480834 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000043d1ac : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000445bc4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000444328 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000046473a : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004a44bf : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004a4117 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004bc30d : or eax, 0x8fd00000 ; clc ; call qword ptr [rdx]
0x0000000000459d84 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004420e5 : or eax, 0xc8b80000 ; ret 0xdbca
0x0000000000459a00 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004bc0ed : or eax, dword ptr [rax] ; add al, al ; ret 0xfff7
0x0000000000459c8d : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004bc1ad : or eax, dword ptr [rax] ; add byte ptr [rax + 2], al ; clc ; call qword ptr [rdx]
0x0000000000417dfe : or eax, dword ptr [rax] ; add cl, ch ; ret 8
0x000000000046a160 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000046a463 : or eax, esi ; pop rbp ; ret
0x00000000004b70a8 : or ebp, ecx ; jmp qword ptr [rcx]
0x000000000046a537 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000494078 : or ecx, edx ; stosd dword ptr [rdi], eax ; jmp 0x4a0372
0x000000000044576b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000438051 : or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x000000000046a536 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000046a15f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004aa5a1 : out -0x47, al ; ror dword ptr [rcx], 1 ; ret
0x00000000004955a2 : out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x00000000004166e5 : out 0x6b, al ; add byte ptr [rax - 0x46], cl ; nop ; ret 0xb2b6
0x0000000000415896 : out 0x6b, al ; add byte ptr [rax - 0x77], cl ; add al, -0x2f ; pop rbp ; ret
0x0000000000407a69 : out 0x6b, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004079ac : out 0x6b, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c7d2 : out 0x6b, al ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407ccc : out 0x6b, al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000431e00 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000045132b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004a0acc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041908d : out dx, al ; ret
0x0000000000486c94 : out dx, al ; ret 0x8589
0x00000000004837be : out dx, al ; ret 0x895e
0x000000000049595c : out dx, al ; ret 0xa2b9
0x000000000049ed8c : out dx, al ; ret 0xdae9
0x0000000000414e94 : out dx, al ; test eax, 0x7cb9f0bb ; ret
0x000000000042d799 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004618e0 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042d918 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004a0dff : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004564e2 : out dx, eax ; mov al, -0x47 ; ret
0x00000000004095cd : out dx, eax ; ret
0x0000000000490fa6 : out dx, eax ; ret 0x895e
0x00000000004952b4 : out dx, eax ; ret 0xe95e
0x000000000046f2e9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004973fb : outsb dx, byte ptr [rsi] ; pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000041f232 : outsb dx, byte ptr [rsi] ; push rbx ; ret 0x899e
0x0000000000427719 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000452415 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000447066 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000452460 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000045c281 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040d18b : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041f286 : outsd dx, dword ptr [rsi] ; push rbx ; ret 0x899e
0x00000000004227be : outsd dx, dword ptr [rsi] ; push rbx ; ret 0xb99e
0x0000000000491d7a : outsd dx, dword ptr [rsi] ; ret 0
0x000000000046f2ec : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045d0dc : pop ax ; jb 0x45d111 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004973fc : pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004532c9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b931c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000436c50 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004532cb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b931e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a67a : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b9320 : pop r14 ; pop r15 ; ret
0x000000000040d481 : pop r14 ; pop rbp ; ret
0x000000000041a67c : pop r15 ; pop rbp ; ret
0x00000000004b9322 : pop r15 ; ret
0x000000000045d0dd : pop rax ; jb 0x45d110 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004bc6e8 : pop rax ; lahf ; stc ; jmp qword ptr [rbx]
0x00000000004bcaf8 : pop rax ; push rdx ; cli ; jmp rcx
0x0000000000485e17 : pop rax ; ret
0x0000000000409425 : pop rbp ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x00000000004021c2 : pop rbp ; mov byte ptr [rip + 0x2bc48e], 1 ; ret
0x0000000000402161 : pop rbp ; mov edi, 0x6be5e8 ; jmp rax
0x000000000040219e : pop rbp ; mov rsi, rax ; mov edi, 0x6be5e8 ; jmp rdx
0x00000000004b931b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004532cc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b931f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000044f1d2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000044b4a5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000044f1ee : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000402155 : pop rbp ; ret
0x0000000000471c03 : pop rbp ; stc ; ret 0x8980
0x000000000043d095 : pop rbx ; mov word ptr [rcx + rdi*4], es ; mov ah, 0x3a ; ret
0x0000000000436c4f : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a679 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d480 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423e33 : pop rbx ; pop rbp ; ret
0x000000000045aa00 : pop rbx ; ret
0x000000000044f1d3 : pop rcx ; ret 0x1b2
0x00000000004498a6 : pop rcx ; ret 0x8589
0x000000000044f1ef : pop rcx ; ret 0x8b48
0x0000000000451520 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000043bb67 : pop rdi ; loopne 0x43bb26 ; ret 0xd50f
0x000000000041a67d : pop rdi ; pop rbp ; ret
0x00000000004b9323 : pop rdi ; ret
0x00000000004609b3 : pop rdx ; jmp 0x4619da
0x0000000000444288 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000401e42 : pop rdx ; ret
0x0000000000402042 : pop rdx ; ret 0x2b
0x00000000004577eb : pop rsi ; adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000041a67b : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004b9321 : pop rsi ; pop r15 ; ret
0x000000000040d482 : pop rsi ; pop rbp ; ret
0x000000000047b77d : pop rsi ; ret
0x0000000000471c57 : pop rsi ; stc ; ret 0x8980
0x00000000004745c2 : pop rsi ; stc ; ret 0xe980
0x00000000004532ca : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b931d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000436c51 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004498a5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000427730 : pop rsp ; ret 0xf66
0x000000000045e098 : popfq ; push rcx ; ret 0x8929
0x000000000045e0c6 : popfq ; push rcx ; ret 0xb929
0x000000000043ebb9 : popfq ; ret 0xd284
0x00000000004b646a : popfq ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x000000000042d6e5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044f1d0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000047dd1f : push -0x47fffffa ; ret
0x00000000004513ba : push -0x75425eeb ; push rbp ; ret
0x000000000043705c : push -0x76000001 ; ret 0xca29
0x000000000044df18 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000436447 : push -1 ; ret 0x9589
0x0000000000409825 : push 0x48006be6 ; add esp, 0x10 ; pop rbp ; ret
0x00000000004bb36b : push qword ptr [rax - 0x8ec0000] ; cli ; call rsp
0x00000000004bb2ab : push qword ptr [rbp + rbx + 0x74340000] ; cli ; call rsp
0x00000000004bb32b : push qword ptr [rdi + rbx - 0x1cbc0000] ; cli ; call rsp
0x000000000049d9a0 : push qword ptr [rdx - 0x160e830a] ; ret
0x00000000004bb2eb : push qword ptr [rsi + rbx - 0x570c0000] ; cli ; call rsp
0x00000000004bb0f3 : push qword ptr [rsi + rdx - 0x63ec0000] ; stc ; call rsp
0x0000000000474d90 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x000000000041a600 : push rax ; add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000049f183 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x00000000004719b7 : push rax ; jmp rsp
0x00000000004259a4 : push rax ; pop rbp ; ret
0x0000000000494019 : push rax ; ret
0x00000000004bd180 : push rax ; sbb esp, edi ; call qword ptr [rcx]
0x000000000046a284 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x00000000004a3311 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000428b5c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000043910e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000427448 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000043ef97 : push rbp ; mov ah, -1 ; ret 0x5589
0x0000000000421efb : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004a5ea8 : push rbp ; mov cl, 0x13 ; ret 0x8589
0x00000000004021e4 : push rbp ; mov edi, 0x6bde20 ; mov rbp, rsp ; call rax
0x0000000000418d78 : push rbp ; ret
0x000000000043575e : push rbp ; ret 0xd284
0x000000000041479d : push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000042f486 : push rbp ; shr al, 1 ; ret
0x000000000044f94f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000044fa29 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000049d114 : push rbp ; xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000043ca67 : push rbx ; ret
0x0000000000468422 : push rbx ; ret 0x48b9
0x000000000041f233 : push rbx ; ret 0x899e
0x0000000000467e52 : push rbx ; ret 0x89b9
0x000000000041ef5a : push rbx ; ret 0x8be9
0x0000000000468406 : push rbx ; ret 0xb2b9
0x00000000004227bf : push rbx ; ret 0xb99e
0x0000000000473c15 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041ca2a : push rcx ; and byte ptr [rcx - 0x80], al ; inc dword ptr [rcx - 0x78] ; ret
0x0000000000459ec0 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x00000000004728cf : push rcx ; jmp rsp
0x0000000000459b40 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000045dfe9 : push rcx ; ret 0x8929
0x000000000045e0c7 : push rcx ; ret 0xb929
0x00000000004708f3 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000485f63 : push rdi ; add dword ptr [rax], eax ; jmp 0x492178
0x000000000048d426 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x00000000004978a0 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000046f2eb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000048a396 : push rdi ; ret
0x00000000004bcaf9 : push rdx ; cli ; jmp rcx
0x0000000000401e52 : push rdx ; ret
0x0000000000402052 : push rdx ; ret 0x2b
0x00000000004a9c49 : push rsi ; mov cl, 0x13 ; ret 0x1ab9
0x00000000004aaa62 : push rsi ; mov cl, 0x13 ; ret 0x1e9
0x00000000004a6ab0 : push rsi ; mov cl, 0x13 ; ret 0x8589
0x000000000048d3d2 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x000000000048a342 : push rsi ; ret
0x00000000004bb178 : push rsp ; mov dh, -7 ; jmp rsp
0x0000000000494115 : push rsp ; ret 0
0x000000000041efae : push rsp ; ret 0x8be9
0x000000000040b596 : pushfq ; add r8b, bpl ; ret 0xff67
0x00000000004b70a5 : pushfq ; fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x000000000045dfe8 : pushfq ; push rcx ; ret 0x8929
0x0000000000436243 : pushfq ; ret
0x000000000041e3da : pushfq ; ret 0x8445
0x000000000040c50d : pushfq ; ret 0xd284
0x000000000049b15b : pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x00000000004bb0f9 : pushfq ; stc ; call rsp
0x000000000045a471 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004bd0e0 : rcl ch ; sti ; jmp qword ptr [rcx]
0x0000000000436b4f : rcl dword ptr [rdi - 0x97f], -1 ; jmp qword ptr [rcx]
0x0000000000400bf8 : ret
0x0000000000402618 : ret 0
0x0000000000428b60 : ret 0x10
0x0000000000478479 : ret 0x1002
0x00000000004a2c1f : ret 0x101
0x00000000004887da : ret 0x103
0x0000000000462ae7 : ret 0x11
0x0000000000485242 : ret 0x111
0x000000000047ae91 : ret 0x12
0x0000000000478345 : ret 0x1252
0x000000000048a022 : ret 0x135
0x0000000000404f0a : ret 0x13c4
0x0000000000425263 : ret 0x148
0x00000000004b6b51 : ret 0x14e9
0x0000000000470e19 : ret 0x18
0x0000000000452524 : ret 0x1a
0x00000000004a9c4c : ret 0x1ab9
0x000000000044779d : ret 0x1add
0x00000000004424c7 : ret 0x1b2
0x000000000042713d : ret 0x1cdd
0x000000000049e45e : ret 0x1ce8
0x000000000047e2c0 : ret 0x1d90
0x00000000004a5541 : ret 0x1dad
0x0000000000419de8 : ret 0x1db9
0x00000000004a6a84 : ret 0x1e
0x0000000000427065 : ret 0x1e1
0x00000000004aaa65 : ret 0x1e9
0x00000000004b72e7 : ret 0x1f
0x00000000004aadf1 : ret 0x20
0x00000000004651e8 : ret 0x2148
0x000000000046518a : ret 0x214c
0x0000000000420f3a : ret 0x22
0x00000000004480ea : ret 0x23da
0x00000000004ad8d9 : ret 0x273b
0x0000000000454de8 : ret 0x279e
0x000000000042771a : ret 0x280f
0x0000000000435085 : ret 0x28b
0x00000000004598e2 : ret 0x28e8
0x0000000000412a03 : ret 0x28f5
0x00000000004147ef : ret 0x2948
0x0000000000451524 : ret 0x2a
0x0000000000401f03 : ret 0x2b
0x0000000000401f72 : ret 0x2bc2
0x0000000000401d72 : ret 0x2bc3
0x0000000000401b72 : ret 0x2bc4
0x000000000044f952 : ret 0x2d50
0x000000000049b516 : ret 0x2eb9
0x0000000000441d43 : ret 0x3040
0x0000000000466a7d : ret 0x3045
0x0000000000497830 : ret 0x3141
0x00000000004368cb : ret 0x3144
0x000000000040b87b : ret 0x3194
0x0000000000437ab4 : ret 0x3252
0x000000000046f548 : ret 0x32e8
0x00000000004b276d : ret 0x33
0x000000000043e7ac : ret 0x3391
0x000000000042882a : ret 0x3504
0x000000000045e3f3 : ret 0x37ac
0x0000000000450424 : ret 0x3b
0x000000000043e83f : ret 0x3bf7
0x000000000044155d : ret 0x3c58
0x000000000044d485 : ret 0x3e
0x000000000047a20c : ret 0x3ee8
0x000000000043607c : ret 0x4030
0x00000000004208f2 : ret 0x42f
0x00000000004abfb2 : ret 0x43ce
0x00000000004a3051 : ret 0x43dd
0x000000000047a730 : ret 0x4449
0x0000000000439227 : ret 0x4589
0x0000000000441216 : ret 0x4777
0x0000000000431b4f : ret 0x4802
0x0000000000426e00 : ret 0x4810
0x000000000046f2ee : ret 0x4815
0x0000000000470d2d : ret 0x4818
0x000000000040d4c4 : ret 0x4835
0x0000000000452416 : ret 0x4861
0x0000000000468423 : ret 0x48b9
0x000000000041cae9 : ret 0x48bb
0x000000000047b061 : ret 0x48c
0x000000000047348b : ret 0x48c0
0x00000000004294b7 : ret 0x48c3
0x0000000000462108 : ret 0x48e0
0x0000000000402363 : ret 0x48f0
0x0000000000474b00 : ret 0x4ae8
0x000000000044acd1 : ret 0x4b
0x0000000000497ff0 : ret 0x4b91
0x00000000004562e7 : ret 0x4cc0
0x0000000000413651 : ret 0x4cf0
0x000000000045bffc : ret 0x4f0b
0x000000000048ff23 : ret 0x4fab
0x000000000040e3c7 : ret 0x51
0x00000000004097fa : ret 0x52d
0x000000000041813b : ret 0x539b
0x00000000004b30b9 : ret 0x54
0x000000000047d017 : ret 0x5452
0x000000000043ef9a : ret 0x5589
0x0000000000412944 : ret 0x558a
0x000000000040b145 : ret 0x558b
0x0000000000471184 : ret 0x581e
0x000000000044fbda : ret 0x5966
0x0000000000457d96 : ret 0x5aa2
0x00000000004b32e9 : ret 0x5b
0x000000000045ac57 : ret 0x5bc6
0x000000000047ba71 : ret 0x6044
0x00000000004a254f : ret 0x61
0x0000000000435bb0 : ret 0x6271
0x00000000004081a5 : ret 0x6348
0x0000000000439147 : ret 0x63e8
0x00000000004a612c : ret 0x6620
0x000000000040d9e4 : ret 0x6952
0x0000000000446e36 : ret 0x6a8a
0x0000000000402e8e : ret 0x6c6c
0x000000000042318f : ret 0x6fb9
0x000000000047cfa8 : ret 0x701
0x0000000000446aee : ret 0x77a8
0x0000000000447c51 : ret 0x7a8a
0x000000000044e8cb : ret 0x7b7f
0x0000000000417520 : ret 0x7e5a
0x0000000000444c1d : ret 0x7f0f
0x00000000004130e6 : ret 0x7fb9
0x0000000000417601 : ret 0x8041
0x000000000043eeda : ret 0x8141
0x000000000040ca2f : ret 0x8148
0x00000000004b7f26 : ret 0x81e9
0x00000000004507e4 : ret 0x822d
0x00000000004419a1 : ret 0x8237
0x000000000042f092 : ret 0x8348
0x0000000000431ab1 : ret 0x840
0x000000000040c8b6 : ret 0x8445
0x00000000004205aa : ret 0x84d8
0x000000000049540b : ret 0x8548
0x000000000040acf7 : ret 0x8589
0x0000000000478e70 : ret 0x85c7
0x0000000000427ae9 : ret 0x86a5
0x000000000046ae2e : ret 0x86f8
0x000000000049f188 : ret 0x8840
0x0000000000419fdd : ret 0x8841
0x000000000045e8a9 : ret 0x8844
0x0000000000466a83 : ret 0x8845
0x0000000000460f99 : ret 0x8902
0x000000000047cfc5 : ret 0x8904
0x000000000048b3e4 : ret 0x8909
0x0000000000420504 : ret 0x890c
0x000000000048d3d4 : ret 0x8923
0x000000000048d63c : ret 0x8925
0x000000000045dfea : ret 0x8929
0x0000000000434940 : ret 0x8931
0x0000000000410161 : ret 0x8935
0x00000000004316c6 : ret 0x8938
0x0000000000447863 : ret 0x8940
0x0000000000498270 : ret 0x8941
0x0000000000444872 : ret 0x8944
0x00000000004147a1 : ret 0x8948
0x000000000046d90f : ret 0x894a
0x00000000004708f7 : ret 0x894d
0x0000000000465ce1 : ret 0x895e
0x0000000000447067 : ret 0x8961
0x00000000004ab72b : ret 0x8962
0x0000000000403440 : ret 0x8969
0x00000000004ab517 : ret 0x896c
0x000000000043c8e1 : ret 0x896e
0x0000000000442ee9 : ret 0x8974
0x0000000000471c05 : ret 0x8980
0x0000000000438860 : ret 0x8989
0x000000000046bfcc : ret 0x899a
0x000000000041f234 : ret 0x899e
0x000000000041942b : ret 0x89a4
0x0000000000432e74 : ret 0x89a5
0x000000000044007b : ret 0x89b1
0x0000000000467e53 : ret 0x89b9
0x000000000041acd0 : ret 0x89bb
0x0000000000415263 : ret 0x89db
0x0000000000440877 : ret 0x89f4
0x000000000046ef08 : ret 0x8a44
0x000000000046ee05 : ret 0x8a4a
0x00000000004446f8 : ret 0x8a74
0x00000000004b6d73 : ret 0x8ae1
0x00000000004382f0 : ret 0x8ae8
0x000000000041b492 : ret 0x8b3d
0x00000000004094f7 : ret 0x8b48
0x000000000040ca43 : ret 0x8b4c
0x0000000000406f4e : ret 0x8b69
0x0000000000442357 : ret 0x8bb1
0x000000000041ef5b : ret 0x8be9
0x0000000000481e26 : ret 0x8cbc
0x00000000004149b3 : ret 0x9074
0x000000000043b5ea : ret 0x90e8
0x000000000043e7e3 : ret 0x91d1
0x0000000000422ee7 : ret 0x93e8
0x0000000000480502 : ret 0x941
0x0000000000464fb2 : ret 0x948
0x000000000046a512 : ret 0x949
0x0000000000435ecc : ret 0x9589
0x00000000004424e3 : ret 0x958a
0x0000000000496ca7 : ret 0x96
0x000000000041cfd6 : ret 0x99ef
0x0000000000436241 : ret 0x9c0f
0x000000000040972b : ret 0x9e8e
0x000000000043528b : ret 0xa
0x000000000049595d : ret 0xa2b9
0x0000000000440709 : ret 0xa2bc
0x000000000044fa2c : ret 0xa30b
0x000000000040ca0a : ret 0xa8
0x000000000040423e : ret 0xa96f
0x0000000000480b4f : ret 0xac60
0x00000000004740ce : ret 0xace8
0x000000000041625b : ret 0xad19
0x00000000004aa6b7 : ret 0xafe9
0x0000000000459bcf : ret 0xb
0x0000000000408f12 : ret 0xb0
0x0000000000435729 : ret 0xb041
0x000000000043ca83 : ret 0xb22
0x000000000044233b : ret 0xb2b1
0x00000000004166eb : ret 0xb2b6
0x0000000000468407 : ret 0xb2b9
0x00000000004a76f0 : ret 0xb38e
0x000000000047dc17 : ret 0xb3e8
0x000000000043b265 : ret 0xb5e8
0x00000000004a35a2 : ret 0xb60f
0x000000000040ae07 : ret 0xb6bf
0x0000000000451330 : ret 0xb740
0x0000000000494aa7 : ret 0xb8
0x000000000041220a : ret 0xb841
0x00000000004b78e2 : ret 0xb845
0x0000000000417ab6 : ret 0xb848
0x000000000047ded1 : ret 0xb904
0x0000000000492fff : ret 0xb909
0x000000000042291e : ret 0xb90c
0x00000000004978a2 : ret 0xb923
0x000000000049b180 : ret 0xb925
0x000000000045e0c8 : ret 0xb929
0x0000000000435a61 : ret 0xb931
0x000000000044f560 : ret 0xb940
0x000000000042b7cb : ret 0xb948
0x000000000046ed92 : ret 0xb94a
0x0000000000466cc6 : ret 0xb95e
0x00000000004b4647 : ret 0xb962
0x00000000004b404c : ret 0xb96c
0x000000000043cf84 : ret 0xb96e
0x0000000000438fe2 : ret 0xb989
0x000000000046c220 : ret 0xb99a
0x00000000004227c0 : ret 0xb99e
0x000000000041a045 : ret 0xb9a4
0x0000000000435ea2 : ret 0xb9a5
0x000000000041553d : ret 0xb9db
0x0000000000441f96 : ret 0xb9f4
0x00000000004228a2 : ret 0xba0c
0x0000000000412f03 : ret 0xba48
0x0000000000439016 : ret 0xba89
0x0000000000422dc3 : ret 0xbe48
0x000000000046fa34 : ret 0xbe70
0x00000000004519ac : ret 0xbf48
0x000000000041da19 : ret 0xc
0x0000000000412974 : ret 0xc084
0x0000000000402185 : ret 0xc148
0x00000000004aa9b9 : ret 0xc350
0x0000000000486d03 : ret 0xc3d7
0x00000000004a2792 : ret 0xc493
0x0000000000432d06 : ret 0xc6e0
0x00000000004876a3 : ret 0xc8c6
0x0000000000467736 : ret 0xca20
0x000000000040c5d5 : ret 0xca21
0x0000000000436f04 : ret 0xca29
0x0000000000487acb : ret 0xcc39
0x00000000004a57a8 : ret 0xcc41
0x00000000004a2555 : ret 0xccb2
0x000000000045a23c : ret 0xcee8
0x000000000045a73a : ret 0xd0e8
0x00000000004073f2 : ret 0xd284
0x0000000000416aa5 : ret 0xd38a
0x0000000000413d20 : ret 0xd3e9
0x000000000048b7d3 : ret 0xd4d
0x000000000043a012 : ret 0xd50f
0x000000000045f185 : ret 0xd5f3
0x00000000004a494d : ret 0xd609
0x000000000046d555 : ret 0xd618
0x0000000000436e6b : ret 0xd701
0x000000000040c3a2 : ret 0xd709
0x0000000000485952 : ret 0xd803
0x000000000049ed8d : ret 0xdae9
0x000000000044060e : ret 0xdbca
0x000000000045f76e : ret 0xdc02
0x0000000000496734 : ret 0xdf79
0x0000000000435357 : ret 0xe280
0x0000000000459f25 : ret 0xe2b9
0x000000000040ee3b : ret 0xe5dd
0x000000000047bce2 : ret 0xe8e8
0x00000000004316f3 : ret 0xe8ff
0x000000000049fc9b : ret 0xe925
0x0000000000451202 : ret 0xe940
0x00000000004952b6 : ret 0xe95e
0x0000000000452461 : ret 0xe961
0x00000000004b8ba0 : ret 0xe962
0x000000000044471e : ret 0xe974
0x00000000004745c4 : ret 0xe980
0x000000000046c3cf : ret 0xe99a
0x0000000000436f2b : ret 0xe9a5
0x000000000041cb6c : ret 0xe9bb
0x0000000000464124 : ret 0xe9d2
0x0000000000475461 : ret 0xe9e8
0x000000000044828d : ret 0xea51
0x000000000043eb07 : ret 0xea81
0x000000000043f260 : ret 0xeae8
0x000000000046110a : ret 0xedb9
0x000000000045401c : ret 0xee8
0x0000000000433572 : ret 0xf1f5
0x0000000000431a95 : ret 0xf280
0x000000000040c339 : ret 0xf281
0x000000000045a69c : ret 0xf3e9
0x0000000000418a42 : ret 0xf40
0x0000000000450067 : ret 0xf41
0x00000000004301ac : ret 0xf4e9
0x000000000047adf9 : ret 0xf62a
0x0000000000427731 : ret 0xf66
0x000000000047b761 : ret 0xf738
0x0000000000412bca : ret 0xf748
0x0000000000475d5e : ret 0xf7c7
0x0000000000451fb5 : ret 0xf7f3
0x00000000004094f0 : ret 0xf90
0x00000000004609ba : ret 0xfa11
0x0000000000459d2a : ret 0xfa82
0x00000000004691d0 : ret 0xfae8
0x0000000000466530 : ret 0xfc3d
0x000000000045073e : ret 0xfc75
0x000000000047c1ce : ret 0xfce8
0x00000000004923a7 : ret 0xfd40
0x00000000004921f8 : ret 0xfd70
0x00000000004a87c8 : ret 0xfdb9
0x00000000004654bb : ret 0xfe70
0x000000000049220c : ret 0xff10
0x000000000042f2bf : ret 0xff3
0x000000000040b59a : ret 0xff67
0x0000000000418711 : ret 0xff70
0x00000000004b6b57 : ret 0xff9b
0x000000000043e7a6 : ret 0xff9f
0x0000000000451faf : ret 0xffa5
0x00000000004b6d6d : ret 0xffbb
0x000000000043e7dd : ret 0xffbf
0x0000000000450738 : ret 0xffc4
0x000000000044f958 : ret 0xffd5
0x000000000044fa32 : ret 0xffd8
0x00000000004507ea : ret 0xffd9
0x000000000043e839 : ret 0xffdb
0x000000000044fbd4 : ret 0xffe0
0x0000000000497fea : ret 0xfff7
0x0000000000442c3d : ret 0xfff9
0x000000000044e8c5 : ret 0xfffa
0x00000000004259fd : ret 0xfffd
0x0000000000415a64 : ret 0xfffe
0x00000000004364a8 : ret 0xffff
0x0000000000409fa0 : ret 1
0x00000000004267f9 : ret 2
0x00000000004144ec : ret 3
0x0000000000469585 : ret 4
0x0000000000436b1f : ret 5
0x0000000000409a87 : ret 6
0x00000000004098a0 : ret 8
0x000000000047957c : ret 9
0x000000000049a59f : retf 0x5d ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043d22d : rol bh, 1 ; xchg eax, r12d ; push rbx ; ret
0x000000000046f2cd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042e314 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004658ec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041d336 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000497833 : rol byte ptr [rbp + 0x21], cl ; ret 0x8141
0x000000000046a9fa : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000461c15 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x0000000000431511 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046f2cc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000442c33 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x000000000048719a : rol ebp, cl ; ret
0x000000000043d22c : rol r15b, 1 ; xchg eax, r12d ; push rbx ; ret
0x0000000000429390 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429c3e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000043910a : ror byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000046a0a7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a3df4 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000045d0d4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040218c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40219b ; pop rbp ; ret
0x0000000000429391 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429c3f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000043910b : ror byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000046a0a8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000415b45 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000427e7a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004a3df5 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043f25d : ror byte ptr [rax - 0x77], 1 ; ret 0xeae8
0x000000000042b263 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000414fa5 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004275ed : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041479e : ror byte ptr [rax - 1], 1 ; ret 0x8948
0x0000000000465187 : ror byte ptr [rbp + 0x21], cl ; ret 0x214c
0x000000000046a535 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000044576a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004a53d4 : ror byte ptr [rcx], 1 ; ret
0x00000000004a359f : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x000000000046aa0d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000435b0c : ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x000000000046a50f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x00000000004166f4 : ror dword ptr [rax + 1], 1 ; ror dword ptr [rax - 0x48], -0x70 ; ret 0xb2b6
0x00000000004166f7 : ror dword ptr [rax - 0x48], -0x70 ; ret 0xb2b6
0x000000000046f0fe : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004940a7 : ror dword ptr [rcx - 0x49b7b], -1 ; jmp 0x4a0376
0x00000000004561a0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004a7584 : ror dword ptr [rcx], 1 ; ret
0x0000000000465595 : ror dword ptr [rdi], -0x62 ; ret 0xe280
0x00000000004a0515 : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000043916a : sahf ; ret
0x000000000046074a : sahf ; ret 0xd284
0x0000000000465597 : sahf ; ret 0xe280
0x000000000040215e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408d56
0x00000000004424c4 : salc ; adc ah, al ; ret 0x1b2
0x0000000000440255 : salc ; adc ah, al ; ret 0x8589
0x00000000004424e0 : salc ; adc ah, al ; ret 0x958a
0x0000000000444c18 : sar bl, 1 ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000442c2d : sar dh, -1 ; call rdi
0x0000000000442c8e : sar dh, -1 ; call rdx
0x0000000000442ba1 : sar dh, -1 ; call rsp
0x00000000004b388e : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004b53bb : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004b4269 : sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004b646b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x00000000004b651b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000044246a : sar dh, -1 ; jmp qword ptr [rsi]
0x000000000046a4f4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000425228 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x000000000040218e : sar eax, 1 ; jne 0x402199 ; pop rbp ; ret
0x0000000000451521 : sar ebp, -0x17 ; ret 0x2a
0x000000000049a7b9 : sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000492b32 : sar edi, cl ; inc dword ptr [rbp + 0xf] ; ret
0x000000000040218d : sar rax, 1 ; jne 0x40219a ; pop rbp ; ret
0x0000000000442352 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000479254 : sbb al, -0x17 ; ret
0x000000000045a5ca : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x00000000004bb26d : sbb al, 0 ; add byte ptr [rsi + rbp], al ; cli ; call rsp
0x00000000004bb014 : sbb al, 0x13 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004bcaf4 : sbb al, 0x15 ; add byte ptr [rax], al ; pop rax ; push rdx ; cli ; jmp rcx
0x00000000004bccf4 : sbb al, 0x17 ; add byte ptr [rax], al ; test al, -0x48 ; cli ; call qword ptr [rax]
0x00000000004564e0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000047a58b : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042772b : sbb al, 9 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000407cac : sbb al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x000000000049eb01 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004bb175 : sbb byte ptr [rax], al ; add byte ptr [rsi + rsi*4 - 7], dl ; jmp rsp
0x00000000004708f4 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000451421 : sbb cl, ch ; ret
0x000000000049e9ee : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000045c923 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000499c53 : sbb dword ptr [rdi - 0xa], edi ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004bb2ad : sbb eax, 0x74340000 ; cli ; call rsp
0x0000000000408d65 : sbb eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000049f54c : sbb eax, 0xc700000e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004bd17d : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x19], dl ; cld ; call qword ptr [rcx]
0x00000000004a3885 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429e5d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004bd11d : sbb eax, dword ptr [rax] ; add byte ptr [rax], dh ; fsincos ; call qword ptr [rdx]
0x00000000004bd13d : sbb eax, dword ptr [rax] ; add byte ptr [rax], dh ; hlt ; sti ; jmp qword ptr [rax]
0x000000000040a832 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004bd13c : sbb eax, dword ptr fs:[rax] ; add byte ptr [rax], dh ; hlt ; sti ; jmp qword ptr [rax]
0x0000000000455530 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000045a5cc : sbb ecx, ebp ; ret
0x00000000004bd181 : sbb esp, edi ; call qword ptr [rcx]
0x00000000004bd11c : sbb r8d, dword ptr [rax] ; add byte ptr [rax], dh ; fsincos ; call qword ptr [rdx]
0x0000000000444934 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004bccd9 : scasb al, byte ptr [rdi] ; cli ; jmp qword ptr [rax]
0x0000000000486c5a : scasb al, byte ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x00000000004955a4 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x0000000000486cae : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x00000000004955c0 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8b48
0x000000000045f76d : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x000000000042ac04 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ac06 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042774f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000042f487 : shr al, 1 ; ret
0x0000000000450422 : shr cl, cl ; ret 0x3b
0x00000000004a7f95 : shr dword ptr [rip - 0x21480000], cl ; ret
0x00000000004bc622 : stc ; call qword ptr [rbx]
0x00000000004bc502 : stc ; call rdi
0x00000000004bc602 : stc ; call rdx
0x00000000004bb0fa : stc ; call rsp
0x000000000042e9f9 : stc ; in al, dx ; ret 0x8589
0x000000000042f30c : stc ; in al, dx ; ret 0xff3
0x00000000004bc4a2 : stc ; jmp qword ptr [rbx]
0x00000000004bc7ca : stc ; jmp rsi
0x00000000004bb17a : stc ; jmp rsp
0x00000000004bb0f2 : stc ; push qword ptr [rsi + rdx - 0x63ec0000] ; stc ; call rsp
0x000000000044023b : stc ; ret
0x000000000044e25d : stc ; ret 0x77a8
0x0000000000471c04 : stc ; ret 0x8980
0x00000000004745c3 : stc ; ret 0xe980
0x0000000000442335 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x00000000004a8ec0 : std ; cwde ; jmp 0x4aad74
0x000000000040b9ae : std ; int 0x80
0x0000000000454de7 : std ; ret 0x279e
0x00000000004bd122 : sti ; call qword ptr [rdx]
0x00000000004bd0a2 : sti ; call rbx
0x00000000004bcfe2 : sti ; call rdi
0x0000000000444c19 : sti ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000444cbc : sti ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x00000000004bd142 : sti ; jmp qword ptr [rax]
0x00000000004bd0e2 : sti ; jmp qword ptr [rcx]
0x00000000004bd062 : sti ; jmp qword ptr [rdx]
0x00000000004a0740 : sti ; movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042e9f8 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000401da2 : stosb byte ptr [rdi], al ; ret
0x0000000000401fa2 : stosb byte ptr [rdi], al ; ret 0x2b
0x000000000046a4f3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000474d92 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x000000000049407a : stosd dword ptr [rdi], eax ; jmp 0x4a0370
0x00000000004575c5 : stosd dword ptr [rdi], eax ; ret
0x0000000000415afc : sub al, -0x22 ; ret 0xfffe
0x00000000004230ca : sub al, -0x47 ; push rsp ; ret 0x8be9
0x000000000041d653 : sub al, 1 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042407e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000480c56 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000423f68 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044f955 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000486bea : sub byte ptr [rsi + 0x40], dh ; ret 0x8589
0x000000000043f25a : sub cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0xeae8
0x000000000044f94b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000044fa25 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000049659a : sub dword ptr [rsi + 0x40], esi ; ret 0x1db9
0x0000000000486c3e : sub dword ptr [rsi + 0x40], esi ; ret 0x8589
0x000000000049f104 : sub dword ptr [rsi + 0x40], esi ; ret 0x8948
0x00000000004507e5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000045a472 : sub eax, 0x9a6b3ab9 ; ret
0x0000000000416582 : sub eax, 0xb9f4f483 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xad19
0x000000000049b93c : sub eax, 0xc700004a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004a7f96 : sub eax, 0xdeb80000 ; ret
0x00000000004021c7 : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000046841c : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x000000000045d0df : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004b9391 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000415afb : sub r8b, -0x22 ; ret 0xfffe
0x00000000004b9390 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000485dd9 : test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000427a13 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004bccf8 : test al, -0x48 ; cli ; call qword ptr [rax]
0x00000000004bccd8 : test al, -0x52 ; cli ; jmp qword ptr [rax]
0x000000000042f6a9 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044f950 : test al, -0x7f ; ret 0x2d50
0x000000000044fa2a : test al, -0x7f ; ret 0xa30b
0x00000000004bb2f1 : test al, -6 ; call rsp
0x0000000000431447 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046eba3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000455bbe : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000452186 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000045c178 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004394dc : test al, 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047e164 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048f309 : test al, bl ; ret
0x0000000000414ba9 : test bh, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004aaf54 : test bl, ch ; ret
0x000000000042c88d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000415af8 : test byte ptr [r9 - 0x21177fb3], r9b ; ret 0xfffe
0x000000000042e75a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000046ff20 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x00000000004b932a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417dfc : test byte ptr [rbp - 0x16fffff5], ah ; ret 8
0x00000000004271ac : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000485f29 : test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x0000000000415af9 : test byte ptr [rcx - 0x21177fb3], cl ; ret 0xfffe
0x000000000042e75b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000043bc00 : test byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000049188d : test byte ptr [rcx], ch ; ret
0x00000000004467cc : test byte ptr [rcx], ch ; ret 0
0x000000000040989a : test byte ptr [rdi - 0x16fffff0], bl ; ret 8
0x0000000000479576 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x0000000000414260 : test byte ptr [rdi - 0x16fffffc], dh ; ret 1
0x0000000000409f9a : test byte ptr [rdi - 0x16fffffe], dh ; ret 1
0x0000000000469426 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000485e81 : test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x49217a
0x000000000040fd1b : test byte ptr [rdx], al ; ret
0x00000000004bd05c : test byte ptr [rdx], bl ; add byte ptr [rax], al ; loopne 0x4bd0a6 ; sti ; jmp qword ptr [rdx]
0x00000000004630f4 : test byte ptr [rip - 0x16fffffc], al ; ret 1
0x00000000004269a2 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004bbac1 : test dh, dh ; call qword ptr [rcx]
0x00000000004395a6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000042fc87 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000048a1e1 : test dl, cl ; ret 0
0x00000000004467c6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000045bd23 : test dword ptr [rax - 0x17000004], ebp ; ret
0x000000000049769f : test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000496427 : test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000049bc26 : test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000049cb2f : test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000049e698 : test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000049fff5 : test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000049e87b : test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000049ed85 : test dword ptr [rbx + rdi*8 - 1], esp ; dec ebp ; or ch, dh ; ret 0xdae9
0x000000000049f3cf : test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x0000000000495d3d : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000049f1f0 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x000000000049f716 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000492a68 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004988b2 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000495524 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x000000000049d0ff : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000049a3f7 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004973ab : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000049f387 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000496c6a : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004959eb : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x000000000049f0ff : test dword ptr [rbx + rdi*8 - 1], esp ; ljmp ptr [rcx] ; jbe 0x49f14f ; ret 0x8948
0x00000000004af276 : test dword ptr [rbx + rsi*8 - 0x7bf00001], ebx ; ret
0x0000000000420f33 : test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x00000000004acaa6 : test dword ptr [rcx + rdi*8 - 1], ecx ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004091ec : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0x0000000000408d6a : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000435ab6 : test dword ptr [rdi + rdi*8 - 1], eax ; call rcx
0x00000000004807f7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000040942a : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x0000000000409515 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rcx]
0x0000000000407cb0 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x0000000000480772 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x00000000004095b3 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsp
0x0000000000478d1c : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000478f35 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000045c286 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044432c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000444cbf : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000044428d : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042d671 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004618e5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004557da : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000045985e : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000459b45 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000045a5d3 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041a605 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004511fb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000411139 : test dword ptr [rsi + rdi*8 + 0x284ffff], esp ; ret
0x0000000000477bb8 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x00000000004238d0 : test dword ptr [rsi + rdi*8 + 0x536fffff], eax ; ret 0x899e
0x000000000044086f : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x00000000004408c3 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000045245a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000440233 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x0000000000440287 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x000000000040d4bd : test dword ptr [rsi + rdi*8 - 0x216a0001], esp ; ret 0x4835
0x000000000044024f : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x00000000004401fb : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000044065b : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x0000000000440607 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x0000000000441263 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000044120f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x0000000000436f24 : test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x0000000000479aff : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000044df1a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000440c4e : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x0000000000414e95 : test eax, 0x7cb9f0bb ; ret
0x000000000045240f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000486d02 : test eax, edx ; xlatb ; ret
0x0000000000499631 : test esi, esi ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000048a1db : test esp, eax ; in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000462883 : unpckhps xmm6, xmmword ptr [rsi] ; ret
0x000000000045041f : wait ; jge 0x450401 ; shr cl, cl ; ret 0x3b
0x000000000044b4dd : wait ; jo 0x44b4eb ; ret
0x000000000044ea2c : wait ; jo 0x44ea3a ; ret
0x00000000004a0514 : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000486d56 : xchg dl, al ; xlatb ; ret
0x00000000004b761d : xchg dword ptr [rdi - 0xe46c4ed], ebp ; xchg eax, esp ; ret
0x000000000046f2e8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004a3988 : xchg eax, ebp ; adc byte ptr [rbp - 0x76baffb5], ch ; ret 0x8141
0x0000000000436e65 : xchg eax, ebp ; cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x0000000000427530 : xchg eax, ebp ; jmp 0x427681
0x0000000000412243 : xchg eax, ebp ; mov esp, 0xffffff5 ; ret 0x8589
0x0000000000436446 : xchg eax, ebp ; push -1 ; ret 0x9589
0x000000000049b15a : xchg eax, ebp ; pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000045e3c0 : xchg eax, ebp ; ret
0x000000000041753f : xchg eax, ebp ; ret 0x8445
0x000000000041a4ba : xchg eax, ebp ; ret 0x8b4c
0x0000000000407a71 : xchg eax, ebp ; ret 0xd284
0x00000000004646ae : xchg eax, ebp ; ret 0xe280
0x0000000000455be7 : xchg eax, ebp ; ret 0xfffa
0x00000000004b388d : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004b53ba : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004b4268 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004b651a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x00000000004bc501 : xchg eax, ebp ; stc ; call rdi
0x0000000000485f2a : xchg eax, ebx ; in eax, 0 ; add cl, ch ; ret 0
0x00000000004a7f93 : xchg eax, ebx ; jmp 0x4aad74
0x0000000000447065 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040d974 : xchg eax, ebx ; ret
0x00000000004b8251 : xchg eax, ebx ; ret 0xd284
0x00000000004bc4a1 : xchg eax, ebx ; stc ; jmp qword ptr [rbx]
0x000000000049efd8 : xchg eax, ecx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000044db95 : xchg eax, ecx ; ret
0x000000000040ca9f : xchg eax, edi ; ret 0x8445
0x0000000000467ab3 : xchg eax, edi ; ret 0xd284
0x00000000004599ff : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000401dd2 : xchg eax, edx ; ret
0x0000000000401fd2 : xchg eax, edx ; ret 0x2b
0x000000000045528f : xchg eax, edx ; ret 0x8445
0x0000000000492b18 : xchg eax, edx ; ret 0x8844
0x0000000000435faa : xchg eax, edx ; ret 0xd284
0x0000000000435356 : xchg eax, edx ; ret 0xe280
0x000000000042772a : xchg eax, edx ; sbb al, 9 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000047bcea : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x0000000000485f62 : xchg eax, esi ; push rdi ; add dword ptr [rax], eax ; jmp 0x492179
0x000000000045e40b : xchg eax, esi ; ret
0x00000000004684be : xchg eax, esi ; ret 0xd284
0x0000000000416e21 : xchg eax, esp ; cmp byte ptr [rdi - 0xb], ah ; ret
0x00000000004301a8 : xchg eax, esp ; int 6
0x000000000045b41a : xchg eax, esp ; jmp 0x45be88
0x000000000045b357 : xchg eax, esp ; jmp 0x45be8a
0x0000000000415a5e : xchg eax, esp ; mov dword ptr [rbp - 0x70], ecx ; call 0x401c96
0x0000000000452414 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000044dce5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000045245f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000043d230 : xchg eax, esp ; push rbx ; ret
0x000000000047bb2d : xchg eax, esp ; ret
0x0000000000455279 : xchg eax, esp ; ret 0x8041
0x000000000040c8b5 : xchg eax, esp ; ret 0x8445
0x0000000000419fdc : xchg eax, esp ; ret 0x8841
0x00000000004a35a1 : xchg eax, esp ; ret 0xb60f
0x000000000045132e : xchg eax, esp ; ret 0xb740
0x00000000004a0517 : xchg eax, esp ; ret 0xca20
0x00000000004073f1 : xchg eax, esp ; ret 0xd284
0x00000000004170f5 : xchg eax, esp ; ret 0xd38a
0x000000000046726c : xchg eax, esp ; ret 0xe280
0x000000000042ac05 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004267f2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000416e20 : xchg eax, r12d ; cmp byte ptr [rdi - 0xb], ah ; ret
0x00000000004301a7 : xchg eax, r12d ; int 6
0x000000000045b419 : xchg eax, r12d ; jmp 0x45be89
0x0000000000415a5d : xchg eax, r12d ; mov dword ptr [rbp - 0x70], ecx ; call 0x401c97
0x000000000043d22f : xchg eax, r12d ; push rbx ; ret
0x00000000004170f4 : xchg eax, r12d ; ret 0xd38a
0x00000000004993a5 : xchg esi, esi ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000415a60 : xchg rax, r8 ; call 0x401c94
0x00000000004aee9e : xchg rax, rsi ; ret
0x00000000004294af : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004582f1 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000438050 : xlatb ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x000000000046a15e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040b595 : xlatb ; pushfq ; add r8b, bpl ; ret 0xff67
0x0000000000486d04 : xlatb ; ret
0x0000000000415262 : xlatb ; ret 0x89db
0x000000000041553c : xlatb ; ret 0xb9db
0x0000000000407cab : xlatb ; sbb al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rax
0x00000000004bd140 : xor ah, dh ; sti ; jmp qword ptr [rax]
0x0000000000442a5d : xor al, 0x72 ; jl 0x442a20 ; ret 0x8237
0x00000000004bb2b0 : xor al, 0x74 ; cli ; call rsp
0x000000000045e706 : xor al, 0xfffffffffffffffa ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x000000000049d115 : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000451329 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000495d3b : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000049f1ee : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000445bc7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042f483 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000445bc8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046a4f6 : xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004267f3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000049a23c : xor byte ptr [rcx - 0xa], bh ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040b5a1 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004bd4e0 : xor byte ptr [rdi - 2], bl ; jmp rax
0x000000000046c3a0 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004bd120 : xor cl, bl ; sti ; call qword ptr [rdx]
0x0000000000442336 : xor eax, 0xeb21b978 ; ret 0xb2b1
0x0000000000435cb7 : xor ebx, dword ptr [rdi] ; jle 0x435c4a ; int 0x80
0x000000000046a15d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000046a461 : xor esi, edi ; or eax, esi ; pop rbp ; ret
