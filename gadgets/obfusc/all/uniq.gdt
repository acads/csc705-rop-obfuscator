0x0000000000433fa1 : adc byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000004053c9 : adc byte ptr [rbx + 0x63], ah ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000041e09e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040ce85 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000040b7d7 : adc cl, byte ptr [rax - 1] ; ret 0x9bbe
0x000000000042610b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041eb9b : adc eax, 0x558abda1 ; ret
0x0000000000422179 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d15b : adc eax, ebp ; js 0x40d14c ; ret
0x000000000040d5af : adc ebp, ecx ; ret 0
0x000000000043413b : add ah, al ; add byte ptr [rax], al ; add al, ah ; loope 0x434147 ; jmp qword ptr [rdx]
0x0000000000434d3b : add ah, al ; or al, 0 ; add byte ptr [rax], al ; mov edi, dr1 ; call rdi
0x0000000000411348 : add al, 0 ; add cl, ch ; ret
0x000000000040a1b9 : add al, 0 ; add cl, ch ; ret 1
0x00000000004253d9 : add al, 0x24 ; mov al, 0 ; call 0x401686
0x0000000000405916 : add al, 0x25 ; ret
0x000000000042f79a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043421f : add al, ah ; js 0x434224 ; call qword ptr [rax]
0x000000000043413f : add al, ah ; loope 0x434143 ; jmp qword ptr [rdx]
0x00000000004300bd : add al, byte ptr [rax] ; add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x000000000040abdb : add al, byte ptr [rax] ; add byte ptr [rbx - 0x3cd24bbb], cl ; ret 0xd1fa
0x000000000040abda : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x3cd24bbb], cl ; ret 0xd1fa
0x00000000004253dc : add al, ch ; sahf ; ret 0xfffd
0x0000000000433e93 : add al, dh ; add bh, bh ; call rax
0x0000000000401e2a : add bh, al ; in al, dx ; ret 0x84db
0x000000000042aa21 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042a9e0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000425de4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041e9d9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000433e95 : add bh, bh ; call rax
0x0000000000432acf : add bl, dh ; ret
0x0000000000405711 : add byte ptr [r13 - 0x77], al ; ret 0xb841
0x00000000004327a2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000432a04 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040cd7e : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4336
0x00000000004064ab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402251 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043413d : add byte ptr [rax], al ; add al, ah ; loope 0x434145 ; jmp qword ptr [rdx]
0x0000000000401e28 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0x84db
0x000000000042aa1f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000425de2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000432acd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040224f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000432acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040599c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004055cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432acc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004301cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x000000000040d6ee : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000421be2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004245a3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042b39c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000427283 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000426f09 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040a0c4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cd253bb], cl ; ret
0x000000000040a079 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7dd253bb], cl ; ret
0x00000000004297fa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042ff49 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x0000000000405db9 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004327a3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000432a05 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000425d50 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000431b71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042f001 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429637 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004049c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ed15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425cda : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004052f2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042aceb : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004106c0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421800 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042610d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042ba48 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eaf9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401423 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043453e : add byte ptr [rax], al ; and ch, 0xfd ; call qword ptr [rdx]
0x0000000000434a5a : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; sbb dil, dil ; call qword ptr [rdx]
0x0000000000401459 : add byte ptr [rax], al ; jmp 0x401439
0x000000000042ace7 : add byte ptr [rax], al ; jmp 0x42acf6
0x000000000043413e : add byte ptr [rax], al ; loopne 0x434128 ; cld ; jmp qword ptr [rdx]
0x000000000043421e : add byte ptr [rax], al ; loopne 0x43429f ; std ; call qword ptr [rax]
0x000000000042ad8f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004327e8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000434d3f : add byte ptr [rax], al ; mov edi, dr1 ; call rdi
0x0000000000402250 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043421a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, ah ; js 0x434229 ; call qword ptr [rax]
0x00000000004342fe : add byte ptr [rax], al ; nop ; xchg eax, esp ; std ; call qword ptr [rcx]
0x0000000000401d7d : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421be3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c33 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042a944 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043441e : add byte ptr [rax], al ; push rax ; ret 0xfffd
0x0000000000432ace : add byte ptr [rax], al ; ret
0x0000000000434a3e : add byte ptr [rax], al ; sbb byte ptr [rcx], -1 ; call rdx
0x0000000000434a5e : add byte ptr [rax], al ; sbb dil, dil ; call qword ptr [rdx]
0x00000000004346ce : add byte ptr [rax], al ; sub cl, -2 ; jmp qword ptr [rbx]
0x00000000004342fa : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; nop ; xchg eax, esp ; std ; call qword ptr [rcx]
0x0000000000433deb : add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x0000000000433fa3 : add byte ptr [rax], dh ; ret
0x0000000000434e3f : add byte ptr [rax], dh ; ret 0xffff
0x0000000000405712 : add byte ptr [rbp - 0x77], al ; ret 0xb841
0x0000000000409b45 : add byte ptr [rbp - 0x78], al ; ret 0x8041
0x00000000004300bf : add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x00000000004301cf : add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x000000000040d6f0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000411a6a : add byte ptr [rbx + 0x312dac45], cl ; sbb al, -0x1a ; ret
0x0000000000411b00 : add byte ptr [rbx + 0x322dac45], cl ; sbb al, -0x1a ; ret
0x0000000000421be4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c34 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040aae3 : add byte ptr [rbx + 0x4b2db445], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0x8589
0x000000000040abab : add byte ptr [rbx + 0x4c2db445], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0x8589
0x000000000042a945 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004245a5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042455a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040abdd : add byte ptr [rbx - 0x3cd24bbb], cl ; ret 0xd1fa
0x000000000042b39e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040eea7 : add byte ptr [rbx - 0x6dd237bb], cl ; jge 0x40ee8a ; ret
0x000000000040ee5c : add byte ptr [rbx - 0x6ed237bb], cl ; jge 0x40ee3f ; ret
0x00000000004327e9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000427285 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000426f0b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040a0c6 : add byte ptr [rbx - 0x7cd253bb], cl ; ret
0x000000000040a07b : add byte ptr [rbx - 0x7dd253bb], cl ; ret
0x00000000004297fc : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004053cc : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000043421b : add byte ptr [rcx + rax + 0x78e00000], ah ; std ; call qword ptr [rax]
0x000000000042fe44 : add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x000000000042ff4b : add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x0000000000408799 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425e4e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004018e8 : add byte ptr [rcx], al ; ret
0x0000000000405dbb : add byte ptr [rcx], al ; ret 0x6348
0x00000000004327a5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000432a07 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000425d52 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000431b73 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042f003 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000429639 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004049c6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042ed17 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425cdc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004052f4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004342fb : add byte ptr [rdx + rax - 0x6b700000], al ; std ; call qword ptr [rcx]
0x0000000000408b18 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041eb0c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040f2ee : add cl, ch ; ret
0x000000000040a1bb : add cl, ch ; ret 1
0x0000000000405e21 : add dh, al ; sahf ; add edi, eax ; mov r12d, dr0 ; ret 0xf3af
0x000000000043421d : add dword ptr [rax], eax ; add al, ah ; js 0x434226 ; call qword ptr [rax]
0x000000000042a9de : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042fe42 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x0000000000431cf2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000430b44 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430d2e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004018e4 : add eax, 0x234a0e ; add ebx, esi ; ret
0x000000000042a943 : add eax, 0x5d5b0000 ; ret
0x000000000040fa68 : add eax, 0x92b80000 ; jge 0x40fa49 ; ret
0x000000000040fa67 : add eax, 0x92b80000 ; jge 0x40fa4a ; ret
0x0000000000411449 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004018ab : add eax, edx ; sar rax, 1 ; jne 0x4018bc ; pop rbp ; ret
0x00000000004018e9 : add ebx, esi ; ret
0x0000000000405e25 : add edi, eax ; mov r12d, dr0 ; ret 0xf3af
0x0000000000401deb : add esp, 0x10 ; pop rbp ; ret
0x0000000000425e4c : add esp, 0x100 ; pop rbp ; ret
0x000000000040b10b : add esp, 0x140 ; pop rbp ; ret
0x000000000040c5a0 : add esp, 0x190 ; pop rbp ; ret
0x000000000040a7e1 : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e8ad : add esp, 0x20 ; pop rbp ; ret
0x000000000040fef8 : add esp, 0x280 ; pop rbp ; ret
0x0000000000426110 : add esp, 0x40 ; pop rbp ; ret
0x000000000042f999 : add esp, 0x440 ; pop rbp ; ret
0x000000000040e532 : add esp, 0x50 ; pop rbp ; ret
0x000000000042a940 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x0000000000427030 : add esp, 0x60 ; pop rbp ; ret
0x00000000004097fb : add esp, 0x630 ; pop rbp ; ret
0x000000000040eafc : add esp, 0x70 ; pop rbp ; ret
0x000000000040c766 : add esp, 0x80 ; pop rbp ; ret
0x000000000040d1ea : add esp, 0x90 ; pop rbp ; ret
0x0000000000401d79 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004220db : add esp, 0xb0 ; pop rbp ; ret
0x000000000041248a : add esp, 0xd0 ; pop rbp ; ret
0x000000000042b5ee : add esp, 0xe0 ; pop rbp ; ret
0x00000000004117ce : add esp, 0xf0 ; pop rbp ; ret
0x0000000000412a93 : add esp, 8 ; pop rbp ; ret
0x0000000000401426 : add esp, 8 ; ret
0x00000000004018aa : add rax, rdx ; sar rax, 1 ; jne 0x4018bd ; pop rbp ; ret
0x0000000000401dea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000425e4b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040b10a : add rsp, 0x140 ; pop rbp ; ret
0x000000000040c59f : add rsp, 0x190 ; pop rbp ; ret
0x000000000040a7e0 : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e8ac : add rsp, 0x20 ; pop rbp ; ret
0x000000000040fef7 : add rsp, 0x280 ; pop rbp ; ret
0x000000000042610f : add rsp, 0x40 ; pop rbp ; ret
0x000000000042f998 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040e531 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042a93f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042702f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004097fa : add rsp, 0x630 ; pop rbp ; ret
0x000000000040eafb : add rsp, 0x70 ; pop rbp ; ret
0x000000000040c765 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040d1e9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000401d78 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004220da : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000412489 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042b5ed : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004117cd : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000412a92 : add rsp, 8 ; pop rbp ; ret
0x0000000000401425 : add rsp, 8 ; ret
0x00000000004327ad : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004253da : and al, 0xffffffffffffffb0 ; add al, ch ; sahf ; ret 0xfffd
0x0000000000430b43 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430d2d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042546b : and al, 8 ; mov al, 0 ; call 0x401686
0x0000000000426c3b : and byte ptr [rsi + 0x58], ah ; jb 0x426c72 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000434540 : and ch, 0xfd ; call qword ptr [rdx]
0x000000000041dd41 : and eax, 0x75b4b9d3 ; ret
0x000000000042ad8d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004018e7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004018e6 : and rax, qword ptr [rax] ; add ebx, esi ; ret
0x0000000000433e60 : call 0x30433e77
0x0000000000425183 : call 0x401462
0x000000000042524e : call 0x401552
0x00000000004253dd : call 0x401682
0x000000000040cd7a : call 0x423e29
0x0000000000427035 : call 0x4270f9
0x0000000000401f00 : call 0xffffffff851be134
0x0000000000401eff : call 0xffffffff851be135
0x000000000042b93d : call 0xffffffffaca37b71
0x000000000042b93c : call 0xffffffffaca37b72
0x00000000004217f9 : call 0xffffffffe904a149
0x00000000004217f8 : call 0xffffffffe904a14a
0x0000000000432aa9 : call qword ptr [r12 + rbx*8]
0x0000000000408b79 : call qword ptr [rax]
0x0000000000404b3a : call qword ptr [rbx]
0x000000000042fa3c : call qword ptr [rcx]
0x0000000000420c84 : call qword ptr [rdi]
0x000000000041cc6b : call qword ptr [rdx]
0x0000000000432aaa : call qword ptr [rsp + rbx*8]
0x000000000040190d : call rax
0x000000000041eeeb : call rcx
0x00000000004208c4 : call rdi
0x000000000040d1b5 : call rdx
0x000000000040d69b : call rsp
0x0000000000433fa0 : clc ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000040fef6 : clc ; add rsp, 0x280 ; pop rbp ; ret
0x000000000042f997 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000426397 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042c329 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004117cc : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004018af : clc ; jne 0x4018b8 ; pop rbp ; ret
0x000000000042afee : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004064af : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004142cd : clc ; ret 0x77a8
0x0000000000401e17 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042fecf : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000042bf7e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042cd9d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d71f : cld ; jmp 0x40d78c
0x000000000040d71e : cld ; jmp 0x40d78d
0x0000000000434142 : cld ; jmp qword ptr [rdx]
0x0000000000426c40 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004327ac : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000425b5b : cmc ; ret 0x4f0b
0x000000000040b124 : cmc ; ret 0x59e9
0x000000000040aaea : cmc ; ret 0x8589
0x000000000040ae73 : cmc ; ret 0xa6b9
0x00000000004053c7 : cmp al, 0x25 ; adc byte ptr [rbx + 0x63], ah ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x000000000042c5f8 : cmp ch, al ; ret 0x5f
0x0000000000425cf1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000427cf7 : cmp dl, al ; ret
0x0000000000429dc9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x000000000040186d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401880 ; pop rbp ; ret
0x000000000041eb97 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000406ca1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4041
0x00000000004081d9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x4041
0x000000000042a942 : cwde ; add eax, 0x5d5b0000 ; ret
0x000000000040bacc : dec dword ptr [r15] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e09b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041da0e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041e213 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004253d6 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x401689
0x000000000040cec4 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042f4f6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040cd8d : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040516c : dec dword ptr [rbx - 0x60f6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000406340 : dec dword ptr [rbx - 0xe36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000425b56 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040bacd : dec dword ptr [rdi] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405172 : dec dword ptr [rdi] ; ret 0x4589
0x000000000040a1b5 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffc], al ; ret 1
0x000000000040ac36 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffc], bh ; ret 1
0x0000000000413faa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040c984 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000040f2e8 : dec dword ptr [rdi] ; test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004051a9 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000404950 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000411ec7 : enter -0x76b8, -0x14 ; pop rbp ; ret
0x000000000042517f : enter -3, -1 ; call 0x401466
0x000000000042ef79 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fe80 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c3f5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042abab : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000430d68 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042ff21 : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000042b087 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000042ff22 : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000411760 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000042b088 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000432aac : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004105a7 : fsub st(1), st(0) ; mov ebx, 0xb8000000 ; ret 0xebc8
0x0000000000401de9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b5ec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000412a91 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401880 : hlt ; pop rbp ; mov edi, 0x636290 ; jmp rax
0x00000000004036c6 : hlt ; ret 0xf3af
0x0000000000426d6b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040e928 : in al, 0x2d ; ret 0xc226
0x000000000042c6e1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000434a5c : in al, 9 ; add byte ptr [rax], al ; sbb dil, dil ; call qword ptr [rdx]
0x0000000000430968 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000042b9fc : in al, dx ; jmp 0x42ba79
0x000000000042b9fb : in al, dx ; jmp 0x42ba7a
0x0000000000402254 : in al, dx ; pop rbp ; ret
0x0000000000401e2d : in al, dx ; ret 0x84db
0x0000000000433ded : in eax, -2 ; jmp qword ptr [rax]
0x0000000000434541 : in eax, -3 ; call qword ptr [rdx]
0x000000000040d15a : in eax, dx ; adc eax, ebp ; js 0x40d14d ; ret
0x0000000000433de7 : inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x000000000040b8b0 : inc dword ptr [rbp + 0xf] ; ret
0x0000000000404a44 : inc dword ptr [rcx + 0xf] ; ret
0x000000000040b000 : inc dword ptr [rcx + 0xf] ; ret 0x4589
0x000000000040935e : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042aa79 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004277b6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000042780a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000423ca7 : int 0x5b
0x0000000000401873 : ja 0x40187a ; pop rbp ; ret
0x0000000000426c3e : jb 0x426c6f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040187f : je 0x40187d ; pop rbp ; mov edi, 0x636290 ; jmp rax
0x000000000040ee62 : jge 0x40ee39 ; ret
0x000000000040eead : jge 0x40ee84 ; ret
0x000000000040fa6d : jge 0x40fa44 ; ret
0x000000000040ff20 : jge 0x40fef7 ; ret
0x000000000041d136 : jge 0x41d0bb ; ret 0xffd5
0x000000000041dc00 : jge 0x41dbe0 ; shr cl, cl ; ret 0x3b
0x000000000040145b : jmp 0x401437
0x0000000000404975 : jmp 0x405f43
0x000000000040540c : jmp 0x405f45
0x000000000040a652 : jmp 0x40a88d
0x000000000040b008 : jmp 0x40b18c
0x000000000040d720 : jmp 0x40d78b
0x000000000041058e : jmp 0x41066e
0x000000000041e350 : jmp 0x4217d0
0x000000000041c254 : jmp 0x4217d1
0x000000000041d621 : jmp 0x4217d2
0x0000000000424f7b : jmp 0x4259e7
0x0000000000424eb8 : jmp 0x4259e9
0x0000000000426fe3 : jmp 0x427048
0x0000000000429a7b : jmp 0x42abc0
0x000000000042a496 : jmp 0x42abc1
0x000000000042ace9 : jmp 0x42acf4
0x000000000042b9fd : jmp 0x42ba78
0x000000000042f836 : jmp 0x42fb18
0x000000000042fd98 : jmp 0x42ff88
0x00000000004303ae : jmp 0x430629
0x0000000000425b5a : jmp 0x4f4e1e56
0x000000000040e8e4 : jmp 0xffffffffb6030fad
0x0000000000421125 : jmp qword ptr [rax]
0x00000000004346d3 : jmp qword ptr [rbx]
0x0000000000412f22 : jmp qword ptr [rcx]
0x000000000041edd7 : jmp qword ptr [rdi]
0x00000000004040d6 : jmp qword ptr [rdx]
0x0000000000401887 : jmp rax
0x000000000041d728 : jmp rbx
0x000000000041e15a : jmp rcx
0x00000000004089af : jmp rdi
0x00000000004018c7 : jmp rdx
0x0000000000402626 : jmp rsi
0x000000000040d240 : jmp rsp
0x00000000004018b0 : jne 0x4018b7 ; pop rbp ; ret
0x0000000000404be7 : jne 0x404b6c ; ret 1
0x000000000040cd7c : jo 0x40cd86 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4336
0x000000000040eafe : jo 0x40eb5f ; ret
0x000000000041704e : jo 0x41705a ; ret
0x0000000000418cbe : jo 0x418cca ; ret
0x000000000041c20d : jo 0x41c219 ; ret
0x00000000004234f4 : jo 0x423555 ; ret
0x000000000040d15d : js 0x40d14a ; ret
0x000000000040f8a5 : js 0x40f839 ; test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000434221 : js 0x434222 ; call qword ptr [rax]
0x000000000041dbfe : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041ecfe : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040df26 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408584 : lea ecx, dword ptr [rax - 0x17000006] ; ret 0x65
0x00000000004251e2 : lea edi, dword ptr [rax - 0x17000003] ; ret
0x0000000000413945 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004237e9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413944 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000411f17 : les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000042ff4d : les r8d, ptr [r10 + rcx*4 + 0x4d] ; ret
0x000000000042fe46 : les r8d, ptr [r10 + rcx*4 + 0x5d] ; ret
0x000000000041c55e : ljmp ptr [rdi] ; ret 0x23da
0x000000000041f565 : loope 0x41f533 ; jmp 0x4217d3
0x0000000000434141 : loope 0x434141 ; jmp qword ptr [rdx]
0x000000000040e8ab : loopne 0x40e8fb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e8aa : loopne 0x40e8fc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410f87 : loopne 0x410f73 ; ret
0x0000000000413943 : loopne 0x413996 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000422eed : loopne 0x422f53 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004242d4 : loopne 0x424327 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004266a3 : loopne 0x4266ac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042702e : loopne 0x42707e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042702d : loopne 0x42707f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042b5f0 : loopne 0x42b5f7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bf82 : loopne 0x42bf89 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004327ec : loopne 0x43283b ; mov esp, ebp ; pop rbp ; ret
0x00000000004327eb : loopne 0x43283c ; mov esp, ebp ; pop rbp ; ret
0x0000000000432a3c : loopne 0x432a8b ; mov esp, ebp ; pop rbp ; ret
0x0000000000432a3b : loopne 0x432a8c ; mov esp, ebp ; pop rbp ; ret
0x0000000000434140 : loopne 0x434126 ; cld ; jmp qword ptr [rdx]
0x0000000000434220 : loopne 0x43429d ; std ; call qword ptr [rax]
0x000000000040d159 : mov ah, -0x13 ; adc eax, ebp ; js 0x40d14e ; ret
0x000000000041d12d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d207 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040aae6 : mov ah, 0x2d ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0x8589
0x000000000040aa82 : mov ah, 0x2d ; ret
0x000000000040a8e4 : mov ah, 0x2d ; ret 0x6837
0x000000000040aab4 : mov ah, 0x2d ; ret 0xfac2
0x000000000041b1b5 : mov ah, 0x75 ; ret
0x0000000000423cc3 : mov al, -0x47 ; ret
0x0000000000411ec3 : mov al, -0x77 ; ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x000000000042efff : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004220dd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004253db : mov al, 0 ; call 0x401684
0x000000000043105d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000430d2a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000430f8d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414b55 : mov bl, 0x75 ; ret
0x00000000004303ab : mov byte ptr [rbp - 0x45], cl ; jmp 0x43062c
0x00000000004018e3 : mov byte ptr [rip + 0x234a0e], 1 ; ret
0x000000000041c9af : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041175c : mov cs, word ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000431cf4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040bacf : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430d30 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004327aa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000431a21 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004130c9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412c9f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b9fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x42ba7b
0x000000000040e8a9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042517d : mov dword ptr [rbp - 0x238], ecx ; call 0x401468
0x000000000041058b : mov dword ptr [rbp - 0x24], eax ; jmp 0x410671
0x0000000000425248 : mov dword ptr [rbp - 0x258], eax ; call 0x401558
0x0000000000425292 : mov dword ptr [rbp - 0x268], eax ; call 0x401558
0x0000000000425315 : mov dword ptr [rbp - 0x280], ecx ; call 0x401558
0x0000000000424f78 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4259ea
0x0000000000404972 : mov dword ptr [rbp - 0x74], eax ; jmp 0x405f46
0x0000000000401de7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e15 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004133a6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412f4d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000425469 : mov dword ptr [rsp + 8], ebx ; mov al, 0 ; call 0x401688
0x00000000004253d8 : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x401687
0x00000000004251e3 : mov eax, 0xe8fffffd ; ret
0x000000000040d60a : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426eab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ad91 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042707e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e52e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b875 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004130cc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042702c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004327ea : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427241 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412f4f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000412a8f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000042afec : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004064ad : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412f4e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000411ec6 : mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f968 : mov ebp, 0xe19c53ba ; ret
0x000000000040190b : mov ebp, esp ; call rax
0x0000000000401871 : mov ebp, esp ; ja 0x40187c ; pop rbp ; ret
0x00000000004105a9 : mov ebx, 0xb8000000 ; ret 0xebc8
0x000000000040ac39 : mov ecx, 0xe9000004 ; ret 1
0x0000000000412c9c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411ec4 : mov ecx, eax ; mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404b38 : mov ecx, gs ; call qword ptr [rbx]
0x0000000000404974 : mov ecx, gs ; ret
0x0000000000401905 : mov edi, 0x635e20 ; mov rbp, rsp ; call rax
0x0000000000401882 : mov edi, 0x636290 ; jmp rax
0x00000000004018c2 : mov edi, 0x636290 ; jmp rdx
0x00000000004298f6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000041c207 : mov edi, 0xb8000055 ; wait ; jo 0x41c21f ; ret
0x0000000000434d41 : mov edi, dr1 ; call rdi
0x0000000000432aa7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000432aa6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042f7ae : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041c9cb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040d1b2 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x000000000041d842 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042f797 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004018c0 : mov esi, eax ; mov edi, 0x636290 ; jmp rdx
0x000000000042ffb4 : mov esp, 0xe981c189 ; ret 0x6b4f
0x0000000000405e28 : mov esp, dr0 ; ret 0xf3af
0x0000000000402253 : mov esp, ebp ; pop rbp ; ret
0x0000000000425247 : mov qword ptr [rbp - 0x258], rax ; call 0x401559
0x0000000000425291 : mov qword ptr [rbp - 0x268], rax ; call 0x401559
0x00000000004133a5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425468 : mov qword ptr [rsp + 8], r11 ; mov al, 0 ; call 0x401689
0x00000000004253d7 : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x401688
0x000000000040d158 : mov r12b, -0x13 ; adc eax, ebp ; js 0x40d14f ; ret
0x000000000040aae5 : mov r12b, 0x2d ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0x8589
0x000000000040aa81 : mov r12b, 0x2d ; ret
0x000000000040a8e3 : mov r12b, 0x2d ; ret 0x6837
0x000000000040aab3 : mov r12b, 0x2d ; ret 0xfac2
0x000000000042ffb3 : mov r12d, 0xe981c189 ; ret 0x6b4f
0x0000000000405e27 : mov r12d, dr0 ; ret 0xf3af
0x0000000000404b37 : mov r9d, gs ; call qword ptr [rbx]
0x0000000000404973 : mov r9d, gs ; ret
0x000000000040d609 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426eaa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042707d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e52d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042702b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004064ac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040190a : mov rbp, rsp ; call rax
0x0000000000401870 : mov rbp, rsp ; ja 0x40187d ; pop rbp ; ret
0x000000000040d1b1 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x00000000004018bf : mov rsi, rax ; mov edi, 0x636290 ; jmp rdx
0x0000000000402252 : mov rsp, rbp ; pop rbp ; ret
0x0000000000426c41 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004184a8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004062ac : movabs eax, dword ptr [0x8348e28948a579bb] ; ret 0x48f0
0x000000000043421c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, ah ; js 0x434227 ; call qword ptr [rax]
0x000000000040b123 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0x59e9
0x000000000040aae9 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0x8589
0x000000000040ae72 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; ret 0xa6b9
0x000000000041b6f5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000431cf3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040bace : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430d2f : movzx eax, al ; pop rbp ; ret
0x000000000042f5a8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000414995 : nop ; ret
0x0000000000422da2 : nop ; ret 0x148
0x0000000000422db6 : nop ; ret 0x2948
0x0000000000434300 : nop ; xchg eax, esp ; std ; call qword ptr [rcx]
0x0000000000432ac8 : nop dword ptr [rax + rax] ; ret
0x0000000000433e91 : or al, 0 ; add al, dh ; add bh, bh ; call rax
0x0000000000434d3d : or al, 0 ; add byte ptr [rax], al ; mov edi, dr1 ; call rdi
0x000000000041d12a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d204 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000433de9 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x000000000042ff5e : or al, byte ptr [rdx + rcx*4 + 0x4d] ; ret 0x8b48
0x000000000042fe57 : or al, byte ptr [rdx + rcx*4 + 0x5d] ; ret 0x8b48
0x000000000040b31f : or byte ptr [r15], 0x84 ; ret
0x0000000000412ca0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000424558 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040b320 : or byte ptr [rdi], 0x84 ; ret
0x000000000041e216 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004133a4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040f2ec : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000412f4b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004304c0 : or esp, 0x1481f65 ; ret 0x8948
0x000000000040b8ff : out 0, al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb0b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000430d2c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043105f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423cc2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000042f799 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041fbf5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000414846 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041fc40 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000425de1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042f79c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000426c3c : pop ax ; jb 0x426c71 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000420aa9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432abc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422eef : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420aab : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432abe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420aad : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432ac0 : pop r14 ; pop r15 ; ret
0x0000000000405c36 : pop r14 ; pop rbp ; ret
0x0000000000420aaf : pop r15 ; pop rbp ; ret
0x0000000000432ac2 : pop r15 ; ret
0x0000000000426c3d : pop rax ; jb 0x426c70 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004018e2 : pop rbp ; mov byte ptr [rip + 0x234a0e], 1 ; ret
0x0000000000401881 : pop rbp ; mov edi, 0x636290 ; jmp rax
0x00000000004018be : pop rbp ; mov rsi, rax ; mov edi, 0x636290 ; jmp rdx
0x0000000000432abb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420aac : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432abf : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041c9b2 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000418c85 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041c9ce : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401875 : pop rbp ; ret
0x000000000042fe5a : pop rbp ; ret 0x8b48
0x0000000000410c28 : pop rbx ; add al, 0 ; add cl, ch ; ret 1
0x0000000000422eee : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421be5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c35 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042a946 : pop rbx ; pop rbp ; ret
0x0000000000424560 : pop rbx ; ret
0x000000000041c9b3 : pop rcx ; ret 0x1b2
0x0000000000417086 : pop rcx ; ret 0x8589
0x000000000041c9cf : pop rcx ; ret 0x8b48
0x000000000041ed00 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000420ab0 : pop rdi ; pop rbp ; ret
0x0000000000432ac3 : pop rdi ; ret
0x0000000000420aae : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000432ac1 : pop rsi ; pop r15 ; ret
0x0000000000405c37 : pop rsi ; pop rbp ; ret
0x000000000042546a : pop rsp ; and al, 8 ; mov al, 0 ; call 0x401687
0x0000000000420aaa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432abd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422ef0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417085 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004071ff : popfq ; ret
0x0000000000431b75 : popfq ; ret 0xd284
0x0000000000408b74 : push -0x16000006 ; call qword ptr [rax]
0x000000000041c9b0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041eb9a : push -0x75425eeb ; push rbp ; ret
0x000000000041b6f8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004036c1 : push 0x2dffffff ; hlt ; ret 0xf3af
0x00000000004040d1 : push 0x2dffffff ; jmp qword ptr [rdx]
0x0000000000402621 : push 0x2dffffff ; jmp rsi
0x0000000000402af1 : push 0x2dffffff ; ret
0x000000000040469d : push 0x2dffffff ; ret 0x1d3d
0x0000000000402a9d : push 0x2dffffff ; ret 0x260b
0x000000000040366d : push 0x2dffffff ; ret 0xf3af
0x0000000000404099 : push 0x2dffffff ; test al, -0x80 ; ret 0x892e
0x0000000000433e8f : push qword ptr [rax - 0xffffff4] ; add bh, bh ; call rax
0x000000000040e534 : push rax ; pop rbp ; ret
0x0000000000434420 : push rax ; ret 0xfffd
0x000000000041175f : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401904 : push rbp ; mov edi, 0x635e20 ; mov rbp, rsp ; call rax
0x0000000000404985 : push rbp ; ret
0x000000000041eb36 : push rbp ; ret 0xd284
0x000000000042c5f4 : push rbp ; ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x5f
0x000000000041d12f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d209 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042f79b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042f005 : pushfq ; ret 0xd284
0x0000000000404be5 : rdtsc ; jne 0x404b6e ; ret 1
0x0000000000401429 : ret
0x000000000040d5b1 : ret 0
0x00000000004300c5 : ret 0x12e1
0x0000000000422da3 : ret 0x148
0x00000000004040e2 : ret 0x16
0x000000000040307a : ret 0x18
0x000000000041fd04 : ret 0x1a
0x0000000000414f7d : ret 0x1add
0x000000000041c9b5 : ret 0x1b2
0x00000000004046a2 : ret 0x1d3d
0x0000000000403ac2 : ret 0x22
0x000000000040544a : ret 0x230e
0x0000000000401662 : ret 0x234a
0x0000000000401462 : ret 0x234b
0x00000000004158ca : ret 0x23da
0x0000000000402cfa : ret 0x25
0x0000000000402aa2 : ret 0x260b
0x00000000004225c8 : ret 0x279e
0x000000000040a7c6 : ret 0x2948
0x000000000041ed04 : ret 0x2a
0x0000000000403192 : ret 0x2b
0x000000000041d132 : ret 0x2d50
0x000000000042f2fe : ret 0x3040
0x000000000041dc04 : ret 0x3b
0x000000000041ac65 : ret 0x3e
0x0000000000406ca2 : ret 0x4041
0x000000000040cd83 : ret 0x4336
0x0000000000405175 : ret 0x4589
0x000000000041e0a1 : ret 0x4802
0x000000000042f79e : ret 0x4815
0x000000000041fbf6 : ret 0x4861
0x000000000040205f : ret 0x48f0
0x00000000004184b1 : ret 0x4b
0x0000000000423ac7 : ret 0x4cc0
0x0000000000420b08 : ret 0x4cf0
0x0000000000425b5c : ret 0x4f0b
0x0000000000404c11 : ret 0x5589
0x000000000041d3ba : ret 0x5966
0x000000000040b125 : ret 0x59e9
0x00000000004247b7 : ret 0x5bc6
0x000000000042c5fa : ret 0x5f
0x00000000004327af : ret 0x61
0x0000000000405dbd : ret 0x6348
0x000000000040858a : ret 0x65
0x000000000040a8e6 : ret 0x6837
0x0000000000407331 : ret 0x6a1a
0x0000000000414616 : ret 0x6a8a
0x000000000042ffb9 : ret 0x6b4f
0x00000000004142ce : ret 0x77a8
0x0000000000415431 : ret 0x7a8a
0x000000000040c730 : ret 0x7ae8
0x000000000041c0ab : ret 0x7b7f
0x0000000000409b48 : ret 0x8041
0x0000000000422ca2 : ret 0x8141
0x000000000042741c : ret 0x8148
0x000000000041dfc4 : ret 0x822d
0x00000000004053d0 : ret 0x8445
0x0000000000401e2e : ret 0x84db
0x000000000040212d : ret 0x8589
0x0000000000405b03 : ret 0x858a
0x000000000040404c : ret 0x892e
0x0000000000415043 : ret 0x8940
0x000000000042ab6d : ret 0x8941
0x000000000040892d : ret 0x8948
0x000000000042ddbf : ret 0x894a
0x0000000000414847 : ret 0x8961
0x000000000040e8e7 : ret 0x89b5
0x0000000000428318 : ret 0x89f1
0x000000000042f3b8 : ret 0x8a44
0x000000000042f2b5 : ret 0x8a4a
0x000000000040ce88 : ret 0x8b48
0x0000000000427437 : ret 0x8b4c
0x0000000000429f15 : ret 0x9589
0x000000000040b7da : ret 0x9bbe
0x00000000004277b7 : ret 0x9e6d
0x000000000041d20c : ret 0xa30b
0x000000000040ae74 : ret 0xa6b9
0x000000000042b93f : ret 0xac60
0x00000000004047aa : ret 0xb
0x0000000000405a1e : ret 0xb0
0x000000000042f9f8 : ret 0xb2e8
0x000000000041eb10 : ret 0xb740
0x0000000000405715 : ret 0xb841
0x0000000000408920 : ret 0xb848
0x0000000000405b77 : ret 0xb92e
0x000000000041cd40 : ret 0xb940
0x000000000042f242 : ret 0xb94a
0x000000000042a1a6 : ret 0xb9f1
0x000000000041f18c : ret 0xbf48
0x00000000004018a5 : ret 0xc148
0x000000000040e92a : ret 0xc226
0x00000000004329f2 : ret 0xc493
0x000000000042fc38 : ret 0xc82e
0x0000000000430ce9 : ret 0xca21
0x000000000042aa65 : ret 0xca29
0x00000000004327b5 : ret 0xccb2
0x000000000040abe3 : ret 0xd1fa
0x0000000000404953 : ret 0xd284
0x000000000042da05 : ret 0xd618
0x0000000000431c9b : ret 0xe280
0x000000000041e9e2 : ret 0xe940
0x000000000041fc41 : ret 0xe961
0x0000000000415a6d : ret 0xea51
0x00000000004327a7 : ret 0xea81
0x00000000004104e3 : ret 0xebc8
0x00000000004217fc : ret 0xee8
0x0000000000412f35 : ret 0xf281
0x0000000000403673 : ret 0xf3af
0x000000000041d847 : ret 0xf41
0x00000000004078c6 : ret 0xf7dd
0x000000000041f795 : ret 0xf7f3
0x000000000040aab6 : ret 0xfac2
0x000000000041df1e : ret 0xfc75
0x0000000000404be3 : ret 0xfd7
0x000000000041f78f : ret 0xffa5
0x000000000041df18 : ret 0xffc4
0x000000000041d138 : ret 0xffd5
0x000000000041d212 : ret 0xffd8
0x000000000041dfca : ret 0xffd9
0x000000000041d3b4 : ret 0xffe0
0x000000000040b9ea : ret 0xfff7
0x000000000041c0a5 : ret 0xfffa
0x0000000000425185 : ret 0xfffd
0x0000000000434e41 : ret 0xffff
0x0000000000404be9 : ret 1
0x000000000040b273 : ret 2
0x000000000040cae5 : ret 4
0x0000000000420f04 : ret 8
0x0000000000411f15 : rol bh, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000042f77d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042c29c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041248c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f77c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000411f14 : rol r15b, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000040d607 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000426c34 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004018ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4018bb ; pop rbp ; ret
0x000000000040d608 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040bad0 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000412f4a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042c5f5 : ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x5f
0x000000000042f5ae : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000411ec5 : ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x0000000000423980 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000405e24 : sahf ; add edi, eax ; mov r12d, dr0 ; ret 0xf3af
0x000000000042963b : sahf ; ret 0xd284
0x00000000004253de : sahf ; ret 0xfffd
0x00000000004283da : salc ; jmp qword ptr [rdi]
0x0000000000428316 : salc ; sti ; ret 0x89f1
0x0000000000433f9c : sar byte ptr [rsi + 0x10f8ffff], 0 ; add byte ptr [rax], dh ; ret
0x00000000004018ae : sar eax, 1 ; jne 0x4018b9 ; pop rbp ; ret
0x000000000041ed01 : sar ebp, -0x17 ; ret 0x2a
0x00000000004018ad : sar rax, 1 ; jne 0x4018ba ; pop rbp ; ret
0x0000000000411a70 : sbb al, -0x1a ; ret
0x0000000000423cc0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042abae : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000434a61 : sbb bh, bh ; call qword ptr [rdx]
0x0000000000429dcb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000434a40 : sbb byte ptr [rcx], -1 ; call rdx
0x000000000041ec01 : sbb cl, ch ; ret
0x0000000000434a60 : sbb dil, dil ; call qword ptr [rdx]
0x0000000000426483 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422d10 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000434a41 : sbb edi, edi ; call rdx
0x000000000041dc02 : shr cl, cl ; ret 0x3b
0x000000000041ba3d : stc ; ret 0x77a8
0x0000000000434222 : std ; call qword ptr [rax]
0x0000000000434302 : std ; call qword ptr [rcx]
0x0000000000434542 : std ; call qword ptr [rdx]
0x00000000004344a2 : std ; jmp rdi
0x00000000004225c7 : std ; ret 0x279e
0x000000000042524f : std ; ret 0xfffd
0x0000000000428317 : sti ; ret 0x89f1
0x000000000042a1a5 : sti ; ret 0xb9f1
0x000000000040d86e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ba46 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d758 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d135 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004346d0 : sub cl, -2 ; jmp qword ptr [rbx]
0x000000000041d12b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041d205 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041dfc5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000426c3f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000432afd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000432afc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041d130 : test al, -0x7f ; ret 0x2d50
0x000000000041d20a : test al, -0x7f ; ret 0xa30b
0x000000000040409e : test al, -0x80 ; ret 0x892e
0x0000000000405b75 : test al, -0x80 ; ret 0xb92e
0x0000000000429982 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f053 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042339e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041f966 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000425cd8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000432aca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a1b7 : test byte ptr [rcx - 0x16fffffc], al ; ret 1
0x000000000040ac38 : test byte ptr [rcx - 0x16fffffc], bh ; ret 1
0x0000000000413fac : test byte ptr [rcx], ch ; ret 0
0x000000000040c986 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004342fc : test byte ptr [rdx], al ; add byte ptr [rax], al ; nop ; xchg eax, esp ; std ; call qword ptr [rcx]
0x000000000040f2ea : test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000411346 : test dh, dl ; add al, 0 ; add cl, ch ; ret
0x0000000000413fa6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000425249 : test dword ptr [rax - 0x17000003], ebp ; std ; ret 0xfffd
0x0000000000425883 : test dword ptr [rax - 0x17000004], ebp ; ret
0x000000000040318b : test dword ptr [rbp + rdi*8 - 0x7bf00001], eax ; ret 0x2b
0x0000000000403073 : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebp ; ret 0x18
0x000000000040f8a7 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000042aa23 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042aa7b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042a9e2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000425de6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000422fba : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041e9db : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041fc3a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041b6fa : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041fbef : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041dbff : wait ; jge 0x41dbe1 ; shr cl, cl ; ret 0x3b
0x0000000000418cbd : wait ; jo 0x418ccb ; ret
0x000000000041c20c : wait ; jo 0x41c21a ; ret
0x000000000042f798 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000408b73 : xchg eax, ebp ; push -0x16000006 ; call qword ptr [rax]
0x00000000004297ff : xchg eax, ebp ; ret 0x8445
0x00000000004049c8 : xchg eax, ebp ; ret 0xd284
0x0000000000414845 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041b145 : xchg eax, ebx ; ret
0x000000000040ee61 : xchg eax, ecx ; jge 0x40ee3a ; ret
0x000000000041b375 : xchg eax, ecx ; ret
0x000000000042ed19 : xchg eax, edi ; ret 0xd284
0x000000000040eeac : xchg eax, edx ; jge 0x40ee85 ; ret
0x000000000040fa6c : xchg eax, edx ; jge 0x40fa45 ; ret
0x000000000040ff1f : xchg eax, edx ; jge 0x40fef8 ; ret
0x0000000000414bc5 : xchg eax, edx ; ret
0x00000000004053cf : xchg eax, edx ; ret 0x8445
0x0000000000425cde : xchg eax, edx ; ret 0xd284
0x00000000004051ab : xchg eax, esi ; ret 0xd284
0x0000000000424f7a : xchg eax, esp ; jmp 0x4259e8
0x0000000000424eb7 : xchg eax, esp ; jmp 0x4259ea
0x000000000041fbf4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041b4c5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041fc3f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000422a59 : xchg eax, esp ; ret 0x8041
0x000000000041eb0e : xchg eax, esp ; ret 0xb740
0x0000000000404952 : xchg eax, esp ; ret 0xd284
0x0000000000434301 : xchg eax, esp ; std ; call qword ptr [rcx]
0x0000000000424f79 : xchg eax, r12d ; jmp 0x4259e9
0x0000000000404be4 : xlatb ; rdtsc ; jne 0x404b6f ; ret 1
0x000000000042836a : xlatb ; sti ; ret 0x89f1
0x000000000042a1a4 : xlatb ; sti ; ret 0xb9f1
0x000000000040cd81 : xor al, 0x25 ; ret 0x4336
0x0000000000405710 : xor al, 0x43 ; add byte ptr [rbp - 0x77], al ; ret 0xb841
0x000000000041eb09 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000411b05 : xor bl, byte ptr [rsi] ; ret
0x00000000004133a7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004133a8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004304bd : xor byte ptr [rcx - 0x1b], ah ; or esp, 0x1481f65 ; ret 0x8948
0x00000000004097fd : xor byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404be6 : xor dword ptr [rbp - 0x7f], esi ; ret 1
0x0000000000411a6f : xor dword ptr [rsi], ebx ; ret
