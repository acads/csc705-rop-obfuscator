0x0000000000437509 : adc al, -1 ; call rdi
0x0000000000436aa9 : adc al, byte ptr [rax] ; add al, dl ; jb 0x436ab4 ; call qword ptr [rax]
0x0000000000436a99 : adc al, byte ptr [rax] ; add byte ptr [rax], dh ; jno 0x436aa4 ; call rax
0x0000000000408e2a : adc ch, cl ; ret
0x00000000004169cc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040bc7d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000004231d1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000436874 : adc dl, ch ; std ; call qword ptr [rax]
0x0000000000437d1d : adc dword ptr [rax], eax ; add al, ah ; ret
0x000000000042c0cb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042435b : adc eax, 0x558abda1 ; ret
0x0000000000415023 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000427939 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004374a9 : adc edi, edi ; jmp qword ptr [rbx]
0x0000000000436fd3 : add ah, al ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x7e], ch ; std ; jmp rbx
0x0000000000437bdb : add ah, cl ; sldt word ptr [rax] ; mov edi, edi ; call rdi
0x000000000040e330 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000040dd48 : add al, 0 ; add cl, ch ; ret 1
0x000000000043257a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000437d1f : add al, ah ; ret
0x0000000000436973 : add al, al ; and al, 0xffffffffffffffff ; jmp qword ptr [rax]
0x00000000004367f3 : add al, al ; insd dword ptr [rdi], dx ; std ; call qword ptr [rax]
0x000000000043685b : add al, al ; ret
0x00000000004368e3 : add al, al ; sbb dh, bh ; call rax
0x0000000000436e35 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; std ; call qword ptr [rdx]
0x000000000040c895 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040afe8 : add al, ch ; ret 0x220
0x00000000004152d4 : add al, ch ; ret 0xfffe
0x0000000000436aab : add al, dl ; jb 0x436ab2 ; call qword ptr [rax]
0x00000000004367a3 : add al, dl ; std ; call rax
0x000000000040fc88 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x00000000004169e8 : add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000403ba9 : add bh, al ; mov r12b, 2 ; mov dh, -0x5e ; jg 0x403ba4 ; ret
0x000000000042bda4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004124ef : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000424199 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000415025 : add bh, al ; xchg eax, r12d ; int 6
0x00000000004359bf : add bl, dh ; ret
0x000000000040edf4 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000435692 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004358f4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041351d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000436773 : add byte ptr [rax + 0x32], dl ; std ; call qword ptr [rax]
0x00000000004367b3 : add byte ptr [rax + 0x4e], al ; std ; call qword ptr [rax]
0x0000000000436fd7 : add byte ptr [rax + 0x7e], ch ; std ; jmp rbx
0x0000000000436833 : add byte ptr [rax - 0x6d], dh ; std ; call qword ptr [rax]
0x0000000000416bcb : add byte ptr [rax - 0x75], cl ; call 0x4903f523
0x000000000040b52c : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409a4b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436872 : add byte ptr [rax], al ; adc dl, ch ; std ; call qword ptr [rax]
0x000000000040afe6 : add byte ptr [rax], al ; add al, ch ; ret 0x220
0x00000000004152d2 : add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x00000000004169e6 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000042bda2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004359bd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041351b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000416bc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4903f525
0x0000000000409a49 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004152d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x00000000004359bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004152ce : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x0000000000400600 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004152cf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401528
0x0000000000400602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004152d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401526
0x000000000041105b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004359bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000042d7e2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000041656b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000416709 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x00000000004099de : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004273a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d6a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000040d7ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000409910 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042a563 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040e7ee : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000432c4c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042cec9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000435693 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000040476c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf281
0x00000000004358f5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042bd10 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000434a61 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000431de1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433b78 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004086bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431af5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042bc9a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040756d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d777 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000436e52 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax], ch ; std ; call qword ptr [rdx]
0x000000000042793b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426fc0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c0cd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004332f8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040126b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000436e32 : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; sub byte ptr [rdi - 3], al ; call qword ptr [rdx]
0x00000000004152d3 : add byte ptr [rax], al ; call 0x401524
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x000000000042d773 : add byte ptr [rax], al ; jmp 0x42d782
0x000000000042d8d5 : add byte ptr [rax], al ; jmp 0x42d8e4
0x000000000042db43 : add byte ptr [rax], al ; jmp 0x42db52
0x0000000000436832 : add byte ptr [rax], al ; jo 0x4367ce ; std ; call qword ptr [rax]
0x00000000004367e2 : add byte ptr [rax], al ; mov al, 0x65 ; std ; call rax
0x00000000004356d8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437bde : add byte ptr [rax], al ; mov edi, edi ; call rdi
0x000000000040ecdf : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409a4a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402010 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004273a3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409911 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000436772 : add byte ptr [rax], al ; push rax ; xor bh, ch ; call qword ptr [rax]
0x00000000004368e2 : add byte ptr [rax], al ; rcr byte ptr [rax], -2 ; call rax
0x00000000004359be : add byte ptr [rax], al ; ret
0x0000000000400606 : add byte ptr [rax], al ; ret 0
0x00000000004367a2 : add byte ptr [rax], al ; ror byte ptr [rcx - 3], 1 ; call rax
0x0000000000436aaa : add byte ptr [rax], al ; sal byte ptr [rdx - 1], 1 ; call qword ptr [rax]
0x0000000000436762 : add byte ptr [rax], al ; sbb bh, -4 ; call rax
0x0000000000437606 : add byte ptr [rax], al ; sbb dil, dil ; call rdx
0x00000000004367b2 : add byte ptr [rax], al ; std ; call qword ptr [rax]
0x0000000000436e36 : add byte ptr [rax], al ; sub byte ptr [rdi - 3], al ; call qword ptr [rdx]
0x0000000000436cd6 : add byte ptr [rax], al ; test al, -0x31 ; cld ; jmp qword ptr [rax]
0x0000000000436a6a : add byte ptr [rax], al ; xor byte ptr [rcx - 1], ch ; call qword ptr [rax]
0x0000000000436a9a : add byte ptr [rax], al ; xor byte ptr [rcx - 1], dh ; call rax
0x0000000000436e37 : add byte ptr [rax], ch ; std ; call qword ptr [rdx]
0x0000000000437627 : add byte ptr [rax], cl ; sbb bh, bh ; call qword ptr [rbx]
0x0000000000436a9b : add byte ptr [rax], dh ; jno 0x436aa2 ; call rax
0x0000000000436823 : add byte ptr [rax], dl ; xchg eax, ebx ; std ; call rax
0x000000000042d7e4 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000041656d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000041670b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x00000000004099e0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004273a4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d6a4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000040d7d0 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000409912 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042a565 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042a51a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040e7f0 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000413a35 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000040e332 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000413873 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000432c4e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004356d9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042cecb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040cc6b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016e8 : add byte ptr [rcx], al ; ret
0x0000000000435695 : add byte ptr [rcx], al ; ret 0xea81
0x000000000040476e : add byte ptr [rcx], al ; ret 0xf281
0x00000000004358f7 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000042bd12 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000434a63 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000431de3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433b7a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004086bd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431af7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042bc9c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040756f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000436e33 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; sub byte ptr [rdi - 3], al ; call qword ptr [rdx]
0x0000000000436e53 : add byte ptr [rdx + rax], al ; add byte ptr [rax], ch ; std ; call qword ptr [rdx]
0x000000000040c5ad : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004242cc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042a76d : add cl, ch ; ret
0x000000000040304b : add cl, ch ; ret 1
0x0000000000416c81 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041291e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040b824 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041692f : add dword ptr [rax], ecx ; ret 0x840
0x00000000004100e0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434be2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004172a1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fa88 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016e4 : add eax, 0x237bae ; add ebx, esi ; ret
0x0000000000436771 : add eax, 0x32500000 ; std ; call qword ptr [rax]
0x0000000000436761 : add eax, 0xdf800000 ; cld ; call rax
0x0000000000436fd5 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x7e], ch ; std ; jmp rbx
0x000000000040c02e : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004016ab : add eax, edx ; sar rax, 1 ; jne 0x4016bc ; pop rbp ; ret
0x00000000004016e9 : add ebx, esi ; ret
0x0000000000412799 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004368a5 : add edi, esi ; call rax
0x0000000000401cbb : add esp, 0x10 ; pop rbp ; ret
0x000000000040cc69 : add esp, 0x100 ; pop rbp ; ret
0x000000000040ea98 : add esp, 0x140 ; pop rbp ; ret
0x00000000004134f3 : add esp, 0x160 ; pop rbp ; ret
0x0000000000411cb8 : add esp, 0x180 ; pop rbp ; ret
0x000000000040467a : add esp, 0x190 ; pop rbp ; ret
0x00000000004150b5 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000412939 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000041638f : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040fa64 : add esp, 0x20 ; pop rbp ; ret
0x000000000042a24d : add esp, 0x240 ; pop rbp ; ret
0x000000000042ead6 : add esp, 0x30 ; pop rbp ; ret
0x0000000000403b87 : add esp, 0x350 ; pop rbp ; ret
0x000000000042c0d0 : add esp, 0x40 ; pop rbp ; ret
0x0000000000432779 : add esp, 0x440 ; pop rbp ; ret
0x000000000040a822 : add esp, 0x50 ; pop rbp ; ret
0x000000000042cff0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000428cb2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040ab4f : add esp, 0x80 ; pop rbp ; ret
0x000000000040c46f : add esp, 0x88 ; pop rbp ; ret
0x000000000040913d : add esp, 0x8b0 ; pop rbp ; ret
0x000000000040cf3d : add esp, 0x90 ; pop rbp ; ret
0x000000000040b3ab : add esp, 0xa0 ; pop rbp ; ret
0x000000000040200c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040990d : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000040d49d : add esp, 0xd0 ; pop rbp ; ret
0x000000000040da98 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042e9cf : add esp, 0xf0 ; pop rbp ; ret
0x0000000000418253 : add esp, 8 ; pop rbp ; ret
0x000000000040126e : add esp, 8 ; ret
0x0000000000436e54 : add r8b, byte ptr [rax] ; add byte ptr [rax], ch ; std ; call qword ptr [rdx]
0x00000000004016aa : add rax, rdx ; sar rax, 1 ; jne 0x4016bd ; pop rbp ; ret
0x0000000000401cba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040cc68 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040ea97 : add rsp, 0x140 ; pop rbp ; ret
0x00000000004134f2 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000411cb7 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000404679 : add rsp, 0x190 ; pop rbp ; ret
0x00000000004150b4 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000412938 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000041638e : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040fa63 : add rsp, 0x20 ; pop rbp ; ret
0x000000000042a24c : add rsp, 0x240 ; pop rbp ; ret
0x000000000042ead5 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b86 : add rsp, 0x350 ; pop rbp ; ret
0x000000000042c0cf : add rsp, 0x40 ; pop rbp ; ret
0x0000000000432778 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040a821 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042cfef : add rsp, 0x60 ; pop rbp ; ret
0x0000000000428cb1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040ab4e : add rsp, 0x80 ; pop rbp ; ret
0x000000000040c46e : add rsp, 0x88 ; pop rbp ; ret
0x000000000040913c : add rsp, 0x8b0 ; pop rbp ; ret
0x000000000040cf3c : add rsp, 0x90 ; pop rbp ; ret
0x000000000040b3aa : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040200b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040990c : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000040d49c : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040da97 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042e9ce : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000418252 : add rsp, 8 ; pop rbp ; ret
0x000000000040126d : add rsp, 8 ; ret
0x000000000043569d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000406a11 : and al, 0xffffffffffffff89 ; test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x0000000000436975 : and al, 0xffffffffffffffff ; jmp qword ptr [rax]
0x00000000004172a0 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fa87 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436e34 : and al, 2 ; add byte ptr [rax], al ; sub byte ptr [rdi - 3], al ; call qword ptr [rdx]
0x0000000000416c7f : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000436965 : and bh, bh ; jmp rax
0x000000000041105a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042fb60 : and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000042cbfb : and byte ptr [rsi + 0x58], ah ; jb 0x42cc32 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000416c7e : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000423501 : and eax, 0x75b4b9d3 ; ret
0x00000000004016e7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000042dec8 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000042d9df : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000042df8a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004152d5 : call 0x401522
0x000000000042d0e4 : call 0x4015b6
0x000000000042cff5 : call 0x42d0b9
0x0000000000416bcf : call 0x4903f51f
0x0000000000416bce : call 0x4903f520
0x0000000000416c1d : call 0x4903f56d
0x0000000000416c1c : call 0x4903f56e
0x00000000004331ed : call 0xffffffffaca3f421
0x00000000004331ec : call 0xffffffffaca3f422
0x0000000000426fb9 : call 0xffffffffe904f909
0x0000000000426fb8 : call 0xffffffffe904f90a
0x000000000040439b : call 0xffffffffffb0c96d
0x000000000040439a : call 0xffffffffffb0c96e
0x0000000000435999 : call qword ptr [r12 + rbx*8]
0x00000000004124f5 : call qword ptr [rax]
0x000000000042877e : call qword ptr [rbx]
0x000000000043281c : call qword ptr [rcx]
0x0000000000426444 : call qword ptr [rdi]
0x000000000042242b : call qword ptr [rdx]
0x000000000043599a : call qword ptr [rsp + rbx*8]
0x000000000040170d : call rax
0x00000000004246ab : call rcx
0x0000000000407a7b : call rdi
0x000000000040cba7 : call rdx
0x000000000040825f : call rsi
0x0000000000407554 : call rsp
0x000000000040f98b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000432777 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042c357 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040cf3b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000042d659 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004016af : clc ; jne 0x4016b8 ; pop rbp ; ret
0x000000000042dec9 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000042dc93 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041644e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b56b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b58b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042d6e1 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000040b530 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000042faaf : clc ; pop rbx ; pop rbp ; ret
0x0000000000419a8d : clc ; ret 0x77a8
0x000000000042d9e0 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043382e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042e9cd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000436766 : cld ; call rax
0x0000000000409a0f : cld ; jmp 0x409a7c
0x0000000000409a0e : cld ; jmp 0x409a7d
0x0000000000436cda : cld ; jmp qword ptr [rax]
0x0000000000413a3a : cld ; stc ; in al, dx ; ret 0x8589
0x000000000041418b : cld ; stc ; in al, dx ; ret 0xff3
0x000000000042cc00 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043569c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042bb1b : cmc ; ret 0x4f0b
0x000000000042fb5e : cmp cl, byte ptr [rdx] ; and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000042bcb1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000040eac2 : cmp dword ptr [rax - 0x75], ecx ; jne 0x40eaa4 ; call rax
0x000000000042f489 : cmp eax, 0x45c6a0d8 ; ret
0x000000000040166d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401680 ; pop rbp ; ret
0x0000000000424357 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004163e7 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000042385b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004231ce : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004239d3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000401b67 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004322d6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042adeb : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042bb16 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040c891 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041170b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000403045 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffff6], bh ; ret 1
0x000000000040c02a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000041976a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040b820 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000414b05 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000432103 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000416ea1 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000416ea0 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cca0 : enter -0x74b8, 0x31 ; call rax
0x0000000000431d59 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d805 : enter 0xf41, 0x44 ; ret 0x4589
0x00000000004119e8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042dabb : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041170e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000042df8b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000433c58 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004105ee : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000432937 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000042fba6 : fmul dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004105ef : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040cc9c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000040d9dd : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000040c2c9 : fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000432938 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000043599c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401cb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432e9c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000418251 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401680 : hlt ; pop rbp ; mov edi, 0x639260 ; jmp rax
0x000000000042cd2b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000408ba8 : imul eax, dword ptr [rbp + 0x2c], -0x47 ; push rsp ; ret 0x8be9
0x00000000004017c1 : in al, 0x2d ; ret
0x000000000040177f : in al, 0x2d ; ret 0x2b0e
0x0000000000403b85 : in al, 0x48 ; add esp, 0x350 ; pop rbp ; ret
0x000000000042e311 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000408bc4 : in al, 7 ; jb 0x408b86 ; push rsp ; ret 0x8be9
0x00000000004019ea : in al, dx ; jmp 0x401c80
0x00000000004019e9 : in al, dx ; jmp 0x401c81
0x00000000004168b1 : in al, dx ; jmp 0x416a7d
0x00000000004168b0 : in al, dx ; jmp 0x416a7e
0x00000000004332ac : in al, dx ; jmp 0x433329
0x00000000004332ab : in al, dx ; jmp 0x43332a
0x000000000042d975 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000401b6a : in al, dx ; pop rbp ; ret
0x000000000041387a : in al, dx ; ret 0x8589
0x0000000000416894 : in al, dx ; ret 0xe8ff
0x000000000041418d : in al, dx ; ret 0xff3
0x00000000004086b9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403253 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004367f5 : insd dword ptr [rdi], dx ; std ; call qword ptr [rax]
0x0000000000429467 : int 0x5b
0x00000000004148a4 : int 6
0x0000000000436cd9 : iretd ; cld ; jmp qword ptr [rax]
0x0000000000401673 : ja 0x40167a ; pop rbp ; ret
0x0000000000416451 : ja 0x41649e ; pop rbp ; ret
0x0000000000408bc6 : jb 0x408b84 ; push rsp ; ret 0x8be9
0x000000000042cbfe : jb 0x42cc2f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000436aad : jb 0x436ab0 ; call qword ptr [rax]
0x000000000040167f : je 0x40167d ; pop rbp ; mov edi, 0x639260 ; jmp rax
0x0000000000403bb0 : jg 0x403b9d ; ret
0x0000000000404085 : jge 0x4040dc ; ret 0x89b9
0x0000000000404505 : jge 0x40455c ; ret 0xb2b9
0x0000000000404521 : jge 0x404578 ; ret 0x48b9
0x000000000040b56a : jge 0x40b56b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b58a : jge 0x40b58b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040cc9b : jge 0x40cc7e ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041644d : jge 0x41644e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004228f6 : jge 0x42287b ; ret 0xffd5
0x00000000004233c0 : jge 0x4233a0 ; shr cl, cl ; ret 0x3b
0x0000000000403f51 : jl 0x403fa8 ; ret 0x89b9
0x00000000004135d8 : jle 0x41356c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000436fd9 : jle 0x436fda ; jmp rbx
0x000000000040140b : jmp 0x401287
0x00000000004019eb : jmp 0x401c7f
0x00000000004044fa : jmp 0x4046a3
0x0000000000408b24 : jmp 0x4094f9
0x0000000000409a10 : jmp 0x409a7b
0x000000000040afe4 : jmp 0x40b0e8
0x000000000040c2a4 : jmp 0x40c500
0x000000000040cb39 : jmp 0x40ccc5
0x000000000040e9ca : jmp 0x40eb0e
0x000000000040e9c9 : jmp 0x40eb0f
0x000000000040e9c9 : jmp 0x40eb10
0x00000000004168b2 : jmp 0x416a7c
0x0000000000423b10 : jmp 0x426f90
0x0000000000421a14 : jmp 0x426f91
0x0000000000422de1 : jmp 0x426f92
0x000000000042af3b : jmp 0x42b9a7
0x000000000042ae78 : jmp 0x42b9a9
0x000000000042cfa3 : jmp 0x42d008
0x000000000042d775 : jmp 0x42d780
0x000000000042d8d7 : jmp 0x42d8e2
0x000000000042db45 : jmp 0x42db50
0x0000000000432616 : jmp 0x4328f8
0x00000000004332ad : jmp 0x433328
0x0000000000413f0f : jmp 0x4903c85f
0x000000000041405b : jmp 0x4903c9ab
0x000000000041412d : jmp 0x4903ca7d
0x00000000004141ae : jmp 0x4903cafe
0x0000000000416154 : jmp 0x4903eaa4
0x00000000004161cf : jmp 0x4903eb1f
0x000000000042bb1a : jmp 0x4f4e7e16
0x00000000004268e5 : jmp qword ptr [rax]
0x00000000004374ab : jmp qword ptr [rbx]
0x000000000040475e : jmp qword ptr [rcx]
0x00000000004043a1 : jmp qword ptr [rdi]
0x000000000042bdaa : jmp qword ptr [rdx]
0x0000000000401687 : jmp rax
0x000000000040462b : jmp rbx
0x000000000042391a : jmp rcx
0x0000000000422f42 : jmp rdi
0x00000000004016c7 : jmp rdx
0x0000000000437753 : jmp rsi
0x00000000004231f8 : jmp rsp
0x00000000004016b0 : jne 0x4016b7 ; pop rbp ; ret
0x000000000040ccf9 : jne 0x40ccc4 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000040eac5 : jne 0x40eaa1 ; call rax
0x0000000000416ea2 : jne 0x416e9a ; mov rax, rdx ; pop rbp ; ret
0x0000000000436a9d : jno 0x436aa0 ; call rax
0x00000000004016e6 : jnp 0x401710 ; add byte ptr [rcx], al ; ret
0x0000000000406036 : jo 0x405fbb ; ret 0x890c
0x0000000000408380 : jo 0x408305 ; ret 0xba0c
0x00000000004083fc : jo 0x408381 ; ret 0xb90c
0x000000000041c80e : jo 0x41c81a ; ret
0x000000000041e47e : jo 0x41e48a ; ret
0x00000000004219cd : jo 0x4219d9 ; ret
0x0000000000428cb4 : jo 0x428d15 ; ret
0x0000000000436834 : jo 0x4367cc ; std ; call qword ptr [rax]
0x00000000004233be : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004244be : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040a216 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416e11 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000428fa9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042faad : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000416e10 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042faac : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004093b4 : ljmp ptr [rdi + 0x53] ; ret 0x899e
0x0000000000421d1e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000436830 : lock or byte ptr [rax], al ; add byte ptr [rax - 0x6d], dh ; std ; call qword ptr [rax]
0x000000000040c02d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040b670 : loop 0x40b665 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000042da72 : loop 0x42da25 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040c3ae : loope 0x40c369 ; xchg eax, ebp ; jmp 0x40c503
0x0000000000424d25 : loope 0x424cf3 ; jmp 0x426f93
0x000000000040da9a : loopne 0x40daa1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004110ee : loopne 0x41113f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004110ed : loopne 0x411140 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041638d : loopne 0x4163e0 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000419103 : loopne 0x419156 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004286ad : loopne 0x428713 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429a94 : loopne 0x429ae7 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042c663 : loopne 0x42c66c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042cfee : loopne 0x42d03e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042cfed : loopne 0x42d03f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000432ea0 : loopne 0x432ea7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433832 : loopne 0x433839 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004356dc : loopne 0x43572b ; mov esp, ebp ; pop rbp ; ret
0x00000000004356db : loopne 0x43572c ; mov esp, ebp ; pop rbp ; ret
0x000000000043592c : loopne 0x43597b ; mov esp, ebp ; pop rbp ; ret
0x000000000043592b : loopne 0x43597c ; mov esp, ebp ; pop rbp ; ret
0x000000000042da71 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004228ed : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004229c7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040c60e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000420975 : mov ah, 0x75 ; ret
0x0000000000403bac : mov ah, 2 ; mov dh, -0x5e ; jg 0x403ba1 ; ret
0x0000000000429483 : mov al, -0x47 ; ret
0x000000000040c3af : mov al, -0x6b ; jmp 0x40c502
0x0000000000431ddf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040756b : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040200e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d0e2 : mov al, 0 ; call 0x4015b8
0x0000000000436a98 : mov al, 0x12 ; add byte ptr [rax], al ; xor byte ptr [rcx - 1], dh ; call rax
0x0000000000415790 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x00000000004367e4 : mov al, 0x65 ; std ; call rax
0x00000000004368e0 : mov al, 0xb ; add byte ptr [rax], al ; rcr byte ptr [rax], -2 ; call rax
0x0000000000436760 : mov al, 5 ; add byte ptr [rax], al ; sbb bh, -4 ; call rax
0x00000000004367a0 : mov al, 6 ; add byte ptr [rax], al ; ror byte ptr [rcx - 3], 1 ; call rax
0x00000000004367e0 : mov al, 7 ; add byte ptr [rax], al ; mov al, 0x65 ; std ; call rax
0x000000000040913f : mov al, 8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042decb : mov al, al ; movzx eax, al ; pop rbp ; ret
0x0000000000433f4d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433c1a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433e7d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042df8c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000042deca : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000042dc94 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000042dc99 : mov bh, -0x40 ; pop rbp ; ret
0x000000000041a315 : mov bl, 0x75 ; ret
0x00000000004079dc : mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000040c471 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016e3 : mov byte ptr [rip + 0x237bae], 1 ; ret
0x000000000042216f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000416c84 : mov dh, -0x39 ; pop rbp ; ret
0x00000000004100e2 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434be4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004172a3 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fa8a : mov dh, -0x40 ; pop rbp ; ret
0x000000000042df8f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000403bae : mov dh, -0x5e ; jg 0x403b9f ; ret
0x000000000043569a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000434911 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000418889 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041845f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e945 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000410f89 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x00000000004019e8 : mov dword ptr [rbp - 0x14], eax ; jmp 0x401c82
0x00000000004168af : mov dword ptr [rbp - 0x14], eax ; jmp 0x416a7f
0x00000000004332aa : mov dword ptr [rbp - 0x14], eax ; jmp 0x43332b
0x0000000000414d5d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000414f90 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000040c2a1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x40c503
0x000000000040afe1 : mov dword ptr [rbp - 0x34], ecx ; jmp 0x40b0eb
0x000000000040cb36 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x40ccc8
0x000000000040cbc1 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x40ccc8
0x000000000040c60c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042af38 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42b9aa
0x0000000000401cb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cba1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000418b66 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416450 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041870d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040990f : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000004150fb : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040bcab : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ce6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042faa9 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042d03e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ead2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a81e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433125 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ece2 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042cfec : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004356da : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041870f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040ccff : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000414527 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041824f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040b52e : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b56d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b58d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041870e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000042dc96 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000042d6e3 : mov eax, eax ; pop rbp ; ret
0x000000000042daba : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040fa61 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416ea5 : mov eax, edx ; pop rbp ; ret
0x000000000042d9dd : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000042dc95 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000425128 : mov ebp, 0xe19c53ba ; ret
0x0000000000403048 : mov ebp, 0xe900000a ; ret 1
0x000000000040170b : mov ebp, esp ; call rax
0x0000000000401671 : mov ebp, esp ; ja 0x40167c ; pop rbp ; ret
0x000000000041845c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410e9b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004110ec : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000411a06 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040cc9e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004150fd : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410e9f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000401705 : mov edi, 0x638e20 ; mov rbp, rsp ; call rax
0x0000000000401682 : mov edi, 0x639260 ; jmp rax
0x00000000004016c2 : mov edi, 0x639260 ; jmp rdx
0x00000000004168b3 : mov edi, 0xb8000001 ; ret
0x00000000004219c7 : mov edi, 0xb8000055 ; wait ; jo 0x4219df ; ret
0x000000000041644c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b569 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b589 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410ea2 : mov edi, dword ptr [rcx] ; call rax
0x000000000040eac1 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000435997 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000437be1 : mov edi, edi ; call rdi
0x0000000000435996 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000043258e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042218b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000423002 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000432577 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040eac4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000040cca2 : mov esi, dword ptr [rcx] ; call rax
0x00000000004016c0 : mov esi, eax ; mov edi, 0x639260 ; jmp rdx
0x000000000040ccfc : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042f7a5 : mov esp, 0x5ba9942d ; ret
0x000000000042f7e7 : mov esp, 0x5ba9952d ; ret
0x0000000000401b69 : mov esp, ebp ; pop rbp ; ret
0x0000000000401707 : mov fs, word ptr [rbx] ; mov rbp, rsp ; call rax
0x0000000000418b65 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041644f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c60d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403bab : mov r12b, 2 ; mov dh, -0x5e ; jg 0x403ba2 ; ret
0x000000000042f7a4 : mov r12d, 0x5ba9942d ; ret
0x000000000042f7e6 : mov r12d, 0x5ba9952d ; ret
0x000000000040bcaa : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ce6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d03d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ead1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a81d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ece1 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042cfeb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ccfe : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000040b52d : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b56c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b58c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042dab9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000042d6e2 : mov rax, r8 ; pop rbp ; ret
0x000000000040fa60 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416ea4 : mov rax, rdx ; pop rbp ; ret
0x000000000040170a : mov rbp, rsp ; call rax
0x0000000000401670 : mov rbp, rsp ; ja 0x40167d ; pop rbp ; ret
0x0000000000411a05 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040cc9d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004150fc : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410e9e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041644b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b568 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b588 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410ea1 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040eac0 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000040eac3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000040cca1 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004016bf : mov rsi, rax ; mov edi, 0x639260 ; jmp rdx
0x000000000040ccfb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000401b68 : mov rsp, rbp ; pop rbp ; ret
0x000000000042cc01 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041dc68 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000041418a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000420eb5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004100e1 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434be3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004172a2 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fa89 : movzx eax, al ; pop rbp ; ret
0x000000000042df8e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000042dc98 : movzx eax, ax ; pop rbp ; ret
0x0000000000416c83 : movzx eax, bh ; pop rbp ; ret
0x0000000000416c82 : movzx eax, dil ; pop rbp ; ret
0x0000000000432388 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000436858 : nop ; or dword ptr [rax], eax ; add al, al ; ret
0x000000000041a155 : nop ; ret
0x0000000000428562 : nop ; ret 0x148
0x0000000000428576 : nop ; ret 0x2948
0x00000000004359b8 : nop dword ptr [rax + rax] ; ret
0x00000000004228ea : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004229c4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000437625 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; sbb bh, bh ; call qword ptr [rbx]
0x0000000000403049 : or al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000416891 : or bh, al ; in al, dx ; ret 0xe8ff
0x00000000004135dd : or byte ptr [r15], 0x8f ; ret 6
0x0000000000418460 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436831 : or byte ptr [rax], al ; add byte ptr [rax - 0x6d], dh ; std ; call qword ptr [rax]
0x0000000000436821 : or byte ptr [rax], al ; add byte ptr [rax], dl ; xchg eax, ebx ; std ; call rax
0x000000000042a518 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000408ba7 : or byte ptr [rbx + 0x45], ch ; sub al, -0x47 ; push rsp ; ret 0x8be9
0x00000000004135de : or byte ptr [rdi], 0x8f ; ret 6
0x00000000004239d6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000418b64 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436859 : or dword ptr [rax], eax ; add al, al ; ret
0x00000000004368e1 : or eax, dword ptr [rax] ; add al, al ; sbb dh, bh ; call rax
0x000000000042d6e0 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000042d9e3 : or eax, esi ; pop rbp ; ret
0x000000000042dab7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000041870b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042dab6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000042d6df : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000416c80 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004242cb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000433c1c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412619 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000412798 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000433f4f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429482 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000432579 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000404d12 : outsb dx, byte ptr [rsi] ; push rbx ; ret 0x899e
0x000000000040c599 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004253b5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041a006 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000425400 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042bda1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000404d66 : outsd dx, dword ptr [rsi] ; push rbx ; ret 0x899e
0x000000000040829e : outsd dx, dword ptr [rsi] ; push rbx ; ret 0xb99e
0x000000000043257c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042cbfc : pop ax ; jb 0x42cc31 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000426269 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004359ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004286af : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042626b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004359ae : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042626d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004359b0 : pop r14 ; pop r15 ; ret
0x0000000000416e15 : pop r14 ; pop rbp ; ret
0x000000000042626f : pop r15 ; pop rbp ; ret
0x00000000004359b2 : pop r15 ; ret
0x000000000042cbfd : pop rax ; jb 0x42cc30 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004016e2 : pop rbp ; mov byte ptr [rip + 0x237bae], 1 ; ret
0x0000000000401681 : pop rbp ; mov edi, 0x639260 ; jmp rax
0x00000000004016be : pop rbp ; mov rsi, rax ; mov edi, 0x639260 ; jmp rdx
0x00000000004359ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042626c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004359af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000422172 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000041e445 : pop rbp ; pop rcx ; ret 0x8589
0x000000000042218e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401675 : pop rbp ; ret
0x00000000004286ae : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004273a5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416e14 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409913 : pop rbx ; pop rbp ; ret
0x000000000042a520 : pop rbx ; ret
0x0000000000422173 : pop rcx ; ret 0x1b2
0x000000000041c846 : pop rcx ; ret 0x8589
0x000000000042218f : pop rcx ; ret 0x8b48
0x00000000004244c0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000426270 : pop rdi ; pop rbp ; ret
0x00000000004359b3 : pop rdi ; ret
0x000000000042626e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004359b1 : pop rsi ; pop r15 ; ret
0x0000000000416e16 : pop rsi ; pop rbp ; ret
0x000000000042626a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004359ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004286b0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c845 : pop rsp ; pop rcx ; ret 0x8589
0x000000000040c5b0 : pop rsp ; ret 0xf66
0x0000000000434a65 : popfq ; ret 0xd284
0x0000000000412565 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000422170 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042435a : push -0x75425eeb ; push rbp ; ret
0x0000000000420eb8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000043681f : push qword ptr [rax + 0x10000008] ; xchg eax, ebx ; std ; call rax
0x0000000000436a97 : push qword ptr [rax + 0x30000012] ; jno 0x436aa6 ; call rax
0x000000000043689f : push qword ptr [rax + 0x6000000a] ; add edi, esi ; call rax
0x000000000043679f : push qword ptr [rax - 0x2ffffffa] ; std ; call rax
0x00000000004368df : push qword ptr [rax - 0x3ffffff5] ; sbb dh, bh ; call rax
0x00000000004367df : push qword ptr [rax - 0x4ffffff9] ; std ; call rax
0x0000000000436aa7 : push rax ; adc al, byte ptr [rax] ; add al, dl ; jb 0x436ab6 ; call qword ptr [rax]
0x000000000043676f : push rax ; add eax, 0x32500000 ; std ; call qword ptr [rax]
0x000000000043682f : push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x6d], dh ; std ; call qword ptr [rax]
0x000000000040a824 : push rax ; pop rbp ; ret
0x0000000000436774 : push rax ; xor bh, ch ; call qword ptr [rax]
0x000000000042d804 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000040d9dc : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000040c2c8 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004079db : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000401704 : push rbp ; mov edi, 0x638e20 ; mov rbp, rsp ; call rax
0x000000000042435f : push rbp ; ret
0x00000000004242f6 : push rbp ; ret 0xd284
0x0000000000414306 : push rbp ; shr al, 1 ; ret
0x00000000004228ef : push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004229c9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404522 : push rbx ; ret 0x48b9
0x0000000000404d13 : push rbx ; ret 0x899e
0x0000000000403f52 : push rbx ; ret 0x89b9
0x0000000000404a3a : push rbx ; ret 0x8be9
0x0000000000404506 : push rbx ; ret 0xb2b9
0x000000000040829f : push rbx ; ret 0xb99e
0x000000000043257b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000404a8e : push rsp ; ret 0x8be9
0x0000000000431de5 : pushfq ; ret 0xd284
0x00000000004368e4 : rcr byte ptr [rax], -2 ; call rax
0x0000000000401271 : ret
0x0000000000400608 : ret 0
0x000000000040d9e0 : ret 0x10
0x00000000004089c7 : ret 0x13e8
0x0000000000428563 : ret 0x148
0x00000000004254c4 : ret 0x1a
0x000000000041a73d : ret 0x1add
0x0000000000422175 : ret 0x1b2
0x00000000004037fa : ret 0x1c7b
0x000000000040bfbd : ret 0x1cdd
0x000000000040bee5 : ret 0x1e1
0x0000000000406a1a : ret 0x22
0x000000000040afea : ret 0x220
0x0000000000401612 : ret 0x237b
0x0000000000401412 : ret 0x237c
0x000000000041b08a : ret 0x23da
0x0000000000427d88 : ret 0x279e
0x000000000040c59a : ret 0x280f
0x0000000000407f4d : ret 0x2948
0x00000000004244c4 : ret 0x2a
0x0000000000401781 : ret 0x2b0e
0x00000000004228f2 : ret 0x2d50
0x00000000004327d8 : ret 0x2e8
0x00000000004320de : ret 0x3040
0x000000000040d6aa : ret 0x3504
0x00000000004233c4 : ret 0x3b
0x0000000000420425 : ret 0x3e
0x00000000004063d2 : ret 0x42f
0x000000000042d809 : ret 0x4589
0x00000000004169cf : ret 0x4802
0x000000000040bc80 : ret 0x4810
0x000000000043257e : ret 0x4815
0x00000000004253b6 : ret 0x4861
0x0000000000404523 : ret 0x48b9
0x000000000040e337 : ret 0x48c3
0x000000000040198e : ret 0x48f0
0x000000000041dc71 : ret 0x4b
0x0000000000429287 : ret 0x4cc0
0x00000000004262c8 : ret 0x4cf0
0x000000000042bb1c : ret 0x4f0b
0x00000000004186bb : ret 0x5589
0x0000000000408c57 : ret 0x558a
0x0000000000422b7a : ret 0x5966
0x000000000042a777 : ret 0x5bc6
0x000000000043569f : ret 0x61
0x0000000000419dd6 : ret 0x6a8a
0x0000000000408c6f : ret 0x6fb9
0x0000000000419a8e : ret 0x77a8
0x000000000041abf1 : ret 0x7a8a
0x000000000042186b : ret 0x7b7f
0x000000000042821a : ret 0x8041
0x0000000000428462 : ret 0x8141
0x00000000004144e3 : ret 0x8148
0x0000000000423784 : ret 0x822d
0x0000000000413f12 : ret 0x8348
0x0000000000416931 : ret 0x840
0x0000000000403257 : ret 0x8445
0x000000000040608a : ret 0x84d8
0x0000000000405485 : ret 0x8589
0x00000000004037ac : ret 0x858a
0x000000000040c969 : ret 0x86a5
0x000000000042d7e7 : ret 0x8844
0x0000000000405fe4 : ret 0x890c
0x0000000000416546 : ret 0x8938
0x000000000041a803 : ret 0x8940
0x00000000004042ed : ret 0x8948
0x0000000000430b9f : ret 0x894a
0x000000000041a007 : ret 0x8961
0x0000000000404d14 : ret 0x899e
0x0000000000403f53 : ret 0x89b9
0x0000000000432198 : ret 0x8a44
0x0000000000432095 : ret 0x8a4a
0x000000000040fee6 : ret 0x8b48
0x0000000000404a3b : ret 0x8be9
0x000000000042da92 : ret 0x949
0x00000000004370dc : ret 0xa
0x00000000004229cc : ret 0xa30b
0x00000000004331ef : ret 0xac60
0x0000000000403887 : ret 0xb0
0x0000000000404507 : ret 0xb2b9
0x00000000004242d0 : ret 0xb740
0x000000000042cbf7 : ret 0xb848
0x00000000004083fe : ret 0xb90c
0x0000000000422500 : ret 0xb940
0x000000000041064b : ret 0xb948
0x0000000000432022 : ret 0xb94a
0x00000000004082a0 : ret 0xb99e
0x0000000000408382 : ret 0xba0c
0x00000000004088a3 : ret 0xbe48
0x000000000042494c : ret 0xbf48
0x0000000000402f80 : ret 0xc
0x00000000004016a5 : ret 0xc148
0x00000000004358e2 : ret 0xc493
0x0000000000433bd9 : ret 0xca21
0x0000000000403b59 : ret 0xca29
0x00000000004356a5 : ret 0xccb2
0x00000000004045bf : ret 0xd284
0x00000000004307e5 : ret 0xd618
0x0000000000434b8b : ret 0xe280
0x0000000000416573 : ret 0xe8ff
0x00000000004241a2 : ret 0xe940
0x0000000000425401 : ret 0xe961
0x000000000041b22d : ret 0xea51
0x0000000000435697 : ret 0xea81
0x0000000000426fbc : ret 0xee8
0x0000000000416915 : ret 0xf280
0x0000000000404770 : ret 0xf281
0x0000000000423007 : ret 0xf41
0x000000000041502c : ret 0xf4e9
0x000000000040c5b1 : ret 0xf66
0x000000000042fa89 : ret 0xf748
0x0000000000424f55 : ret 0xf7f3
0x00000000004236de : ret 0xfc75
0x000000000042d0ea : ret 0xfd41
0x000000000041413f : ret 0xff3
0x0000000000424f4f : ret 0xffa5
0x00000000004236d8 : ret 0xffc4
0x00000000004228f8 : ret 0xffd5
0x00000000004229d2 : ret 0xffd8
0x000000000042378a : ret 0xffd9
0x0000000000422b74 : ret 0xffe0
0x0000000000401bea : ret 0xfff7
0x0000000000421865 : ret 0xfffa
0x00000000004152d7 : ret 0xfffe
0x0000000000437d01 : ret 0xffff
0x00000000004017a0 : ret 1
0x000000000040b679 : ret 2
0x000000000040320a : ret 3
0x0000000000402a6c : ret 6
0x00000000004266c4 : ret 8
0x000000000043255d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000413194 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d5cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d49f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042df7a : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416391 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043255c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040e210 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eabe : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000042cbf4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004016ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016bb ; pop rbp ; ret
0x000000000040e211 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eabf : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004172a4 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040ccfa : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004100e3 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040c46d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042dab5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004367a4 : ror byte ptr [rcx - 3], 1 ; call rax
0x000000000041870a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042df8d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000436960 : ror byte ptr [rip + 0x22a00000], -1 ; jmp rax
0x000000000042da8f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x000000000043238e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000429140 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000433b7c : sahf ; ret 0xd284
0x0000000000436aac : sal byte ptr [rdx - 1], 1 ; call qword ptr [rax]
0x000000000042da74 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042f488 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x00000000004016ae : sar eax, 1 ; jne 0x4016b9 ; pop rbp ; ret
0x00000000004244c1 : sar ebp, -0x17 ; ret 0x2a
0x00000000004016ad : sar rax, 1 ; jne 0x4016ba ; pop rbp ; ret
0x0000000000429480 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000436764 : sbb bh, -4 ; call rax
0x0000000000437629 : sbb bh, bh ; call qword ptr [rbx]
0x0000000000437609 : sbb bh, bh ; call rdx
0x00000000004243c1 : sbb cl, ch ; ret
0x00000000004368e5 : sbb dh, bh ; call rax
0x0000000000437608 : sbb dil, dil ; call rdx
0x000000000042c443 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ecdd : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004284d0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x00000000004016e5 : scasb al, byte ptr [rdi] ; jnp 0x401711 ; add byte ptr [rcx], al ; ret
0x000000000040fa84 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fa86 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040c5cf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000414307 : shr al, 1 ; ret
0x00000000004233c2 : shr cl, cl ; ret 0x3b
0x0000000000437bdd : sldt word ptr [rax] ; mov edi, edi ; call rdi
0x000000000040afe5 : stc ; add byte ptr [rax], al ; add al, ch ; ret 0x220
0x0000000000413879 : stc ; in al, dx ; ret 0x8589
0x000000000041418c : stc ; in al, dx ; ret 0xff3
0x00000000004211fd : stc ; ret 0x77a8
0x0000000000436776 : std ; call qword ptr [rax]
0x0000000000436d5a : std ; call qword ptr [rcx]
0x0000000000436e3a : std ; call qword ptr [rdx]
0x00000000004367a6 : std ; call rax
0x0000000000436fda : std ; jmp rbx
0x000000000043681e : std ; push qword ptr [rax + 0x10000008] ; xchg eax, ebx ; std ; call rax
0x000000000043689e : std ; push qword ptr [rax + 0x6000000a] ; add edi, esi ; call rax
0x000000000043679e : std ; push qword ptr [rax - 0x2ffffffa] ; std ; call rax
0x00000000004367de : std ; push qword ptr [rax - 0x4ffffff9] ; std ; call rax
0x000000000043676e : std ; push rax ; add eax, 0x32500000 ; std ; call qword ptr [rax]
0x000000000043682e : std ; push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x6d], dh ; std ; call qword ptr [rax]
0x0000000000427d87 : std ; ret 0x279e
0x0000000000413878 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000042da73 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000408baa : sub al, -0x47 ; push rsp ; ret 0x8be9
0x0000000000409b5e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004332f6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409a48 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004228f5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000436e38 : sub byte ptr [rdi - 3], al ; call qword ptr [rdx]
0x00000000004228eb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004229c5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000423785 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000040451c : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x0000000000437751 : sub edi, edi ; jmp rsi
0x000000000042cbff : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000435a11 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000435a10 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040c893 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000436cd8 : test al, -0x31 ; cld ; jmp qword ptr [rax]
0x0000000000414529 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004228f0 : test al, -0x7f ; ret 0x2d50
0x00000000004229ca : test al, -0x7f ; ret 0xa30b
0x00000000004162c7 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431e33 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428b5e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000425126 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000042bc98 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041170d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004135da : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004359ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403047 : test byte ptr [rbp - 0x16fffff6], bh ; ret 1
0x000000000040c02c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x00000000004135db : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000041976c : test byte ptr [rcx], ch ; ret 0
0x000000000040b822 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000414b07 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000419766 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000406a13 : test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x000000000042bda6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004124f1 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000042877a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000402f79 : test dword ptr [rdi*8 - 0x7bf00001], edi ; ret 0xc
0x000000000042419b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004093b0 : test dword ptr [rsi + rdi*8 + 0x536fffff], eax ; ret 0x899e
0x00000000004253fa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000420eba : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004253af : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004233bf : wait ; jge 0x4233a1 ; shr cl, cl ; ret 0x3b
0x000000000041e47d : wait ; jo 0x41e48b ; ret
0x00000000004219cc : wait ; jo 0x4219da ; ret
0x0000000000432578 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040c3b0 : xchg eax, ebp ; jmp 0x40c501
0x0000000000403256 : xchg eax, ebp ; ret 0x8445
0x00000000004086bf : xchg eax, ebp ; ret 0xd284
0x000000000041a005 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420905 : xchg eax, ebx ; ret
0x0000000000436835 : xchg eax, ebx ; std ; call qword ptr [rax]
0x0000000000436825 : xchg eax, ebx ; std ; call rax
0x0000000000420b35 : xchg eax, ecx ; ret
0x0000000000431af9 : xchg eax, edi ; ret 0xd284
0x000000000041a385 : xchg eax, edx ; ret
0x000000000042822f : xchg eax, edx ; ret 0x8445
0x000000000042bc9e : xchg eax, edx ; ret 0xd284
0x00000000004045be : xchg eax, esi ; ret 0xd284
0x0000000000415028 : xchg eax, esp ; int 6
0x000000000042af3a : xchg eax, esp ; jmp 0x42b9a8
0x000000000042ae77 : xchg eax, esp ; jmp 0x42b9aa
0x00000000004253b4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000420c85 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004253ff : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000428219 : xchg eax, esp ; ret 0x8041
0x00000000004242ce : xchg eax, esp ; ret 0xb740
0x0000000000407571 : xchg eax, esp ; ret 0xd284
0x000000000040fa85 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b672 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000415027 : xchg eax, r12d ; int 6
0x000000000042af39 : xchg eax, r12d ; jmp 0x42b9a9
0x000000000040e32f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000042d6de : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004242c9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000436775 : xor bh, ch ; call qword ptr [rax]
0x0000000000418b67 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000414303 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000418b68 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042da76 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040b673 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000436a6c : xor byte ptr [rcx - 1], ch ; call qword ptr [rax]
0x0000000000436a9c : xor byte ptr [rcx - 1], dh ; call rax
0x000000000042d6dd : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000042d9e1 : xor esi, edi ; or eax, esi ; pop rbp ; ret
