0x000000000040a625 : adc ah, al ; ret 0x1b2
0x0000000000408362 : adc ah, al ; ret 0x8589
0x000000000040a641 : adc ah, al ; ret 0x958a
0x000000000042d396 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043da3c : adc byte ptr [rdi - 1], ah ; call rax
0x000000000042f8b2 : adc byte ptr [rdi], ch ; ret
0x000000000040a4b0 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x000000000042e0ec : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000043bfce : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000418a1e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000043b89b : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000042a4aa : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000043414b : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x000000000042a596 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x0000000000429acf : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x0000000000418391 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000043d915 : adc dh, bh ; jmp qword ptr [rax]
0x000000000043da99 : adc dword ptr [rax], eax ; add al, al ; ret 0xffff
0x000000000042391b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042fb52 : adc dword ptr [rdi], ebp ; ret
0x0000000000401ccc : adc eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x000000000041951b : adc eax, 0x558abda1 ; ret
0x000000000041caf9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040303f : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043de3b : add ah, al ; add al, byte ptr [rax] ; add al, dh ; lahf ; cld ; jmp qword ptr [rcx]
0x00000000004326b1 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000043d761 : add al, 0 ; add byte ptr [rax + 0x42], al ; cld ; call qword ptr [rax]
0x0000000000403328 : add al, 0 ; add cl, ch ; ret 1
0x0000000000428a6a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043da9b : add al, al ; ret 0xffff
0x000000000043de3d : add al, byte ptr [rax] ; add al, dh ; lahf ; cld ; jmp qword ptr [rcx]
0x00000000004032c9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x3d263bb], cl ; ret
0x00000000004032c8 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x3d263bb], cl ; ret
0x00000000004225f8 : add al, ch ; ret 0xfdf1
0x000000000043de3f : add al, dh ; lahf ; cld ; jmp qword ptr [rcx]
0x000000000043e0af : add al, dl ; cli ; std ; call rdi
0x000000000043249a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004326b3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x00000000004235f4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000405c28 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x000000000040c48a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000040c3eb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000420bcc : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000420eb3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000421941 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000419359 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043cc3f : add bl, dh ; ret
0x000000000043c64b : add byte ptr [r13 - 0x77], al ; ret 0x8141
0x00000000004021bb : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret 0x43cd
0x000000000043b202 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043b464 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000043d763 : add byte ptr [rax + 0x42], al ; cld ; call qword ptr [rax]
0x000000000043e0ab : add byte ptr [rax - 0x5300000], dh ; std ; call rdi
0x00000000004021bc : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x43cd
0x000000000041dabb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405365 : add byte ptr [rax - 0x75], cl ; jge 0x405339 ; call 0x401607
0x000000000043cab1 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004038f3 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e1af : add byte ptr [rax - 2], ah ; std ; call rdx
0x000000000043d913 : add byte ptr [rax], ah ; adc dh, bh ; jmp qword ptr [rax]
0x000000000043e1cf : add byte ptr [rax], ah ; add dh, bh ; call qword ptr [rbx]
0x000000000043da3a : add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; call rax
0x0000000000432498 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004235f2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043cc3d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405363 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x40533b ; call 0x401609
0x000000000043caaf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004038f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043cc3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400398 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040039a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004072fa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000040039c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043c654 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x00000000004291f7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x0000000000403b8e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041c562 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004053d7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000429161 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000421db3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000403314 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2d263bb], cl ; ret
0x00000000004387bc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004251f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000425141 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000424719 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000406a3f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040aaaa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043b203 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043b465 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000423560 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043a5d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004282d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004396e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040781b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427fe5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004234ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ec35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043e9c1 : add byte ptr [rax], al ; add byte ptr [rsi + rcx], cl ; add byte ptr [rax], cl ; ret
0x0000000000433ff3 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041cafb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c180 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042391d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000438e68 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401cce : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043c547 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401523 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000435350 : add byte ptr [rax], al ; call 0x401574
0x000000000043d762 : add byte ptr [rax], al ; cld ; call qword ptr [rax]
0x000000000043e04e : add byte ptr [rax], al ; cmp cl, -3 ; jmp qword ptr [rbx]
0x0000000000401559 : add byte ptr [rax], al ; jmp 0x401539
0x0000000000401bba : add byte ptr [rax], al ; jmp 0x401ced
0x0000000000433fef : add byte ptr [rax], al ; jmp 0x433ffe
0x000000000043e766 : add byte ptr [rax], al ; mov byte ptr [rbp - 1], dh ; jmp qword ptr [rax]
0x000000000043e746 : add byte ptr [rax], al ; mov byte ptr [rdx - 1], bl ; call qword ptr [rdx]
0x000000000043b248 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004072fc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000405364 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x38] ; call 0x401608
0x00000000004038f2 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043e702 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], dl ; jmp qword ptr [rcx]
0x0000000000402ee0 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c563 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004053d8 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004378e6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043da7a : add byte ptr [rax], al ; push rax ; mov bh, -1 ; call rax
0x000000000040039e : add byte ptr [rax], al ; ret
0x000000000043e0ae : add byte ptr [rax], al ; sar dl, 1 ; std ; call rdi
0x000000000043e706 : add byte ptr [rax], al ; sub byte ptr [rdi - 1], dl ; jmp qword ptr [rcx]
0x000000000043db0a : add byte ptr [rax], al ; sub cl, -1 ; call qword ptr [rax]
0x000000000043dcfa : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], bl ; call qword ptr [rcx]
0x000000000043e0aa : add byte ptr [rax], al ; xor al, 5 ; add byte ptr [rax], al ; sar dl, 1 ; std ; call rdi
0x000000000043dcfe : add byte ptr [rax], al ; xor byte ptr [rdi - 4], bl ; call qword ptr [rcx]
0x000000000043debe : add byte ptr [rax], al ; xor ch, 0xfc ; call qword ptr [rdx]
0x000000000043e2f7 : add byte ptr [rax], bl ; cmp dh, bh ; jmp rsi
0x000000000043e9c7 : add byte ptr [rax], cl ; ret
0x000000000043e607 : add byte ptr [rax], cl ; xchg dh, bh ; call rdi
0x000000000043dcff : add byte ptr [rax], dh ; pop rdi ; cld ; call qword ptr [rcx]
0x000000000042a09a : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043c656 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000043c64c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004291ae : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x00000000004291f9 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x0000000000403b90 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041c564 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004053d9 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004378e7 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000429163 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000429118 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x0000000000421db5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000421d6a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000403316 : add byte ptr [rbx - 0x2d263bb], cl ; ret
0x00000000004032cb : add byte ptr [rbx - 0x3d263bb], cl ; ret
0x00000000004387be : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004251f3 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000425143 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x000000000043b249 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042471b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000406a41 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040aaac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043dcfb : add byte ptr [rcx + rax + 0x5f300000], al ; cld ; call qword ptr [rcx]
0x000000000042365e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x000000000043b205 : add byte ptr [rcx], al ; ret 0xea81
0x000000000043b467 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000423562 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043e2f3 : add byte ptr [rdi + rax], bh ; add byte ptr [rax], bl ; cmp dh, bh ; jmp rsi
0x000000000043a5d3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004282d3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004396ea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040781d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427fe7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004234ec : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041ec37 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043e1cb : add byte ptr [rsi + rax], dl ; add byte ptr [rax], ah ; add dh, bh ; call qword ptr [rbx]
0x000000000043e9c3 : add byte ptr [rsi + rcx], cl ; add byte ptr [rax], cl ; ret
0x000000000041948c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000421fbd : add cl, ch ; ret
0x000000000040332a : add cl, ch ; ret 1
0x0000000000432cfa : add cl, ch ; ret 9
0x000000000043e1d1 : add dh, bh ; call qword ptr [rbx]
0x000000000043415b : add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x000000000040cd13 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042193f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000433d0c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043dcfd : add dword ptr [rax], eax ; add byte ptr [rax], dh ; pop rdi ; cld ; call qword ptr [rcx]
0x0000000000406b0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000043a752 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000431239 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000043978e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x23d8b6 ; add ebx, esi ; ret
0x0000000000420ffc : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000043e0ad : add eax, 0xfad00000 ; std ; call rdi
0x000000000040ca95 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004378e5 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000433e49 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000401d2b : add esp, 0x10 ; pop rbp ; ret
0x000000000042365c : add esp, 0x100 ; pop rbp ; ret
0x0000000000403713 : add esp, 0x120 ; pop rbp ; ret
0x0000000000435b7a : add esp, 0x1360 ; pop rbp ; ret
0x00000000004237cc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402edc : add esp, 0x1e0 ; pop rbp ; ret
0x000000000041c183 : add esp, 0x20 ; pop rbp ; ret
0x00000000004378e2 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000040cc36 : add esp, 0x3e0 ; pop rbp ; ret
0x00000000004037bf : add esp, 0x40 ; pop rbp ; ret
0x0000000000428c69 : add esp, 0x440 ; pop rbp ; ret
0x00000000004049d2 : add esp, 0x50 ; pop rbp ; ret
0x000000000042186c : add esp, 0x5b0 ; pop rbp ; ret
0x0000000000401cd1 : add esp, 0x60 ; pop rbp ; ret
0x000000000040acb4 : add esp, 0x650 ; pop rbp ; ret
0x000000000041de72 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404cff : add esp, 0x80 ; pop rbp ; ret
0x0000000000423f9d : add esp, 0x90 ; pop rbp ; ret
0x000000000041ec56 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041ca5b : add esp, 0xb0 ; pop rbp ; ret
0x00000000004079fa : add esp, 0xd0 ; pop rbp ; ret
0x0000000000438a0e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042606f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040d413 : add esp, 8 ; pop rbp ; ret
0x0000000000401526 : add esp, 8 ; ret
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000433e48 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401d2a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042365b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000403712 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000435b79 : add rsp, 0x1360 ; pop rbp ; ret
0x00000000004237cb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402edb : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000041c182 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004378e1 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000040cc35 : add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004037be : add rsp, 0x40 ; pop rbp ; ret
0x0000000000428c68 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004049d1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042186b : add rsp, 0x5b0 ; pop rbp ; ret
0x0000000000401cd0 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040acb3 : add rsp, 0x650 ; pop rbp ; ret
0x000000000041de71 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404cfe : add rsp, 0x80 ; pop rbp ; ret
0x0000000000423f9c : add rsp, 0x90 ; pop rbp ; ret
0x000000000041ec55 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041ca5a : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004079f9 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000438a0d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042606e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d412 : add rsp, 8 ; pop rbp ; ret
0x0000000000401525 : add rsp, 8 ; ret
0x000000000043b20d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000431238 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043978d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004081d9 : and bl, ch ; ret 0x89b1
0x0000000000403715 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042444b : and byte ptr [rsi + 0x58], ah ; jb 0x424482 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004186c1 : and eax, 0x75b4b9d3 ; ret
0x0000000000401a47 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040822d : and ebx, ebp ; ret 0x89b1
0x000000000040a4b5 : and ebx, ebp ; ret 0x8bb1
0x000000000040a499 : and ebx, ebp ; ret 0xb2b1
0x00000000004352f4 : call 0x401572
0x000000000040536a : call 0x401602
0x000000000040cd76 : call 0x401657
0x0000000000424845 : call 0x424909
0x0000000000409e1a : call 0x432bb6
0x0000000000438d5d : call 0xffffffffaca44f91
0x0000000000438d5c : call 0xffffffffaca44f92
0x000000000041c179 : call 0xffffffffe9044ac9
0x000000000041c178 : call 0xffffffffe9044aca
0x00000000004359e4 : call 0xfffffffff77c1ca4
0x000000000043cc19 : call qword ptr [r12 + rbx*8]
0x0000000000407302 : call qword ptr [rax]
0x000000000041d93e : call qword ptr [rbx]
0x000000000043133c : call qword ptr [rcx]
0x000000000041b604 : call qword ptr [rdi]
0x0000000000406b4f : call qword ptr [rdx]
0x0000000000435c7a : call qword ptr [rsi]
0x000000000043cc1a : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x000000000043e6cb : call rbx
0x000000000041986b : call rcx
0x000000000040ad90 : call rdi
0x000000000040adf1 : call rdx
0x0000000000420eb9 : call rsi
0x0000000000403b3b : call rsp
0x0000000000403711 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000040cc34 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000428c67 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042186a : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x00000000004252b7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423ba7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004255f9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000043cb9b : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x000000000041dabf : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ec4d : clc ; ret 0x77a8
0x0000000000435b78 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x000000000043939e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042606d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000043d766 : cld ; call qword ptr [rax]
0x000000000043dd02 : cld ; call qword ptr [rcx]
0x000000000043dec2 : cld ; call qword ptr [rdx]
0x000000000043d75e : cld ; inc dword ptr [rax + 4] ; add byte ptr [rax], al ; cld ; call qword ptr [rax]
0x0000000000403bbf : cld ; jmp 0x403c2c
0x0000000000403bbe : cld ; jmp 0x403c2d
0x000000000043de42 : cld ; jmp qword ptr [rcx]
0x00000000004032d0 : cld ; ret
0x000000000040839a : cld ; stc ; ret
0x0000000000424450 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043e0b1 : cli ; std ; call rdi
0x000000000043b20c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043dec1 : cmc ; cld ; call qword ptr [rdx]
0x000000000042336b : cmc ; ret 0x4f0b
0x000000000040c92a : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x000000000041f725 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x000000000043e050 : cmp cl, -3 ; jmp qword ptr [rbx]
0x0000000000423501 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000043e2f9 : cmp dh, bh ; jmp rsi
0x000000000041f6d1 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x000000000043407d : cmp eax, 0xb8000001 ; ret
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x0000000000419517 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000405378 : cmp esp, dword ptr [rsi + 0xf] ; mov r8b, 0xf ; xchg eax, esp ; ret 0xf41
0x0000000000405377 : cmp sp, word ptr [rsi + 0xf] ; mov r8b, 0xf ; xchg eax, esp ; ret 0xf41
0x000000000043bee1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000043b8ea : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000040a9e4 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000040cd7a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000418a1b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041838e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000418b93 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042d392 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000402083 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000421aa7 : dec dword ptr [rax - 0x77] ; ret 0x10e8
0x0000000000430ad8 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000433989 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x000000000042e27d : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x0000000000420c4f : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x00000000004287c6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042d84b : dec dword ptr [rax - 0x77] ; ret 0x8ce8
0x000000000042263b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042ebde : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x00000000004215a9 : dec dword ptr [rax - 0x77] ; ret 0xee8
0x000000000043284d : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000042e879 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000432946 : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000429da9 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004338b6 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000423366 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000429daf : dec dword ptr [rdi] ; ret 0x4589
0x000000000042969e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000040e92a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000403324 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], bl ; ret 1
0x00000000004285f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000421938 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x00000000004251f6 : enter -0x62d3, 0x51 ; ret 0x8929
0x0000000000425146 : enter -0x63d3, 0x51 ; ret 0x8929
0x00000000004037bd : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000428249 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e5f0 : enter 0xf41, -0x6b ; ret 0x8445
0x0000000000407819 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004397c8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407dd1 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004384a7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000407dd2 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043bfd2 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x00000000004384a8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004067e5 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000043cc1c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a46 : fsub dword ptr [rbx] ; add byte ptr [rcx], al ; ret
0x000000000042e514 : fsubr st(1) ; ret
0x0000000000401d29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000438a0c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040d411 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x63f2b0 ; jmp rax
0x000000000042457b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000421231 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000043407b : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x0000000000429e96 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c292 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004259b1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000429946 : in al, dx ; jmp 0x429f86
0x0000000000429945 : in al, dx ; jmp 0x429f87
0x0000000000438e1c : in al, dx ; jmp 0x438e99
0x0000000000438e1b : in al, dx ; jmp 0x438e9a
0x0000000000402086 : in al, dx ; pop rbp ; ret
0x00000000004217df : in eax, dx ; jge 0x421786 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000043d75f : inc dword ptr [rax + 4] ; add byte ptr [rax], al ; cld ; call qword ptr [rax]
0x0000000000406a3d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000430f65 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000420e14 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043d90f : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], ah ; adc dh, bh ; jmp qword ptr [rax]
0x000000000040c9ce : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x0000000000407261 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004352aa : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000429b15 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000435467 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x00000000004211eb : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ce1d : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000041e627 : int 0x5b
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x000000000040b047 : ja 0x40b02e ; ret 0x8974
0x000000000040abbe : jb 0x40abf2 ; jl 0x40ab7f ; ret 0x8237
0x000000000042444e : jb 0x42447f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043cdbd : jb 0x43ce26 ; jns 0x43cdc8 ; push rax ; ret
0x000000000043cdbc : jb 0x43ce27 ; jns 0x43cdc9 ; push rax ; ret
0x000000000042cbcd : jbe 0x42cb8c ; push rcx ; jmp rsp
0x000000000042cbcc : jbe 0x42cb8d ; push rcx ; jmp rsp
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x63f2b0 ; jmp rax
0x00000000004035af : je 0x40356d ; std ; ret
0x0000000000405368 : jge 0x405336 ; call 0x401604
0x0000000000408399 : jge 0x40839a ; stc ; ret
0x0000000000409e18 : jge 0x409da2 ; call 0x432bb8
0x0000000000417ab6 : jge 0x417a3b ; ret 0xffd5
0x0000000000418580 : jge 0x418560 ; shr cl, cl ; ret 0x3b
0x00000000004217e0 : jge 0x421785 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000040abc0 : jl 0x40ab7d ; ret 0x8237
0x000000000040abbf : jl 0x40ab7e ; ret 0x8237
0x0000000000436257 : jl 0x436221 ; ret
0x0000000000437020 : jl 0x436fea ; ret
0x00000000004083ed : jle 0x4083ee ; stc ; ret
0x000000000040a751 : jle 0x40a752 ; stc ; ret
0x000000000040155b : jmp 0x401537
0x0000000000401bbc : jmp 0x401ceb
0x0000000000403bc0 : jmp 0x403c2b
0x000000000040a968 : jmp 0x40af52
0x0000000000416f86 : jmp 0x416f8b
0x0000000000418cd0 : jmp 0x41c150
0x0000000000416bd4 : jmp 0x41c151
0x0000000000417fa1 : jmp 0x41c152
0x000000000042278b : jmp 0x4231f7
0x00000000004226c8 : jmp 0x4231f9
0x00000000004247f3 : jmp 0x424858
0x0000000000425247 : jmp 0x4252cc
0x0000000000428b06 : jmp 0x428de8
0x0000000000429947 : jmp 0x429f85
0x0000000000429ec3 : jmp 0x429f87
0x000000000042a34b : jmp 0x42a2e1
0x0000000000433ff1 : jmp 0x433ffc
0x000000000043407c : jmp 0x4341c4
0x0000000000435558 : jmp 0x435ce3
0x000000000043749e : jmp 0x437b11
0x000000000043701a : jmp 0x437b13
0x0000000000438e1d : jmp 0x438e98
0x000000000043bff3 : jmp 0x43c0cc
0x000000000042336a : jmp 0x4f4df666
0x000000000041baa5 : jmp qword ptr [rax]
0x000000000040c490 : jmp qword ptr [rbx]
0x000000000040d8a2 : jmp qword ptr [rcx]
0x0000000000419757 : jmp qword ptr [rdi]
0x00000000004235fa : jmp qword ptr [rdx]
0x0000000000405bcb : jmp qword ptr [rsi]
0x00000000004019e7 : jmp rax
0x000000000040ce23 : jmp rbx
0x0000000000418ada : jmp rcx
0x000000000040c3f1 : jmp rdi
0x0000000000401a27 : jmp rdx
0x00000000004326b9 : jmp rsi
0x00000000004183b8 : jmp rsp
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x000000000043e769 : jne 0x43e76c ; jmp qword ptr [rax]
0x0000000000436203 : jnp 0x4361cd ; ret
0x000000000043cdc0 : jns 0x43cdc5 ; push rax ; ret
0x000000000043cdbf : jns 0x43cdc6 ; push rax ; ret
0x000000000043d9cd : jns 0x43d9cf ; call qword ptr [rax]
0x00000000004119ce : jo 0x4119da ; ret
0x000000000041363e : jo 0x41364a ; ret
0x0000000000416b8d : jo 0x416b99 ; ret
0x000000000041de74 : jo 0x41ded5 ; ret
0x00000000004252bb : jo 0x42531c ; ret
0x000000000043c54c : jo 0x43c5ad ; ret
0x0000000000405760 : jrcxz 0x405729 ; ret 0x8907
0x0000000000405f44 : jrcxz 0x405f0d ; ret 0xba07
0x000000000040a497 : js 0x40a456 ; and ebx, ebp ; ret 0xb2b1
0x000000000040c157 : js 0x40c13e ; ret 0x8974
0x000000000040c856 : js 0x40c83d ; ret 0x8a74
0x000000000040c87c : js 0x40c863 ; ret 0xe974
0x000000000043de41 : lahf ; cld ; jmp qword ptr [rcx]
0x000000000041857e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000042dd41 : lcall ptr [rsi - 7] ; ret 0xe980
0x000000000041967e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004043c6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416f84 : lea ebp, dword ptr [rax - 0x17000015] ; ret 0xfea6
0x0000000000409e17 : lea edi, dword ptr [rbp - 0x80] ; call 0x432bb9
0x00000000004073d3 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040601f : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004073d2 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004329d1 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x0000000000416ede : ljmp ptr [rdi] ; ret 0x23da
0x000000000040570c : loop 0x4056d5 ; ret 0x8907
0x0000000000419ee5 : loope 0x419eb3 ; jmp 0x41c153
0x0000000000402ede : loopne 0x402ee6 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004053d6 : loopne 0x4053e0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cc38 : loopne 0x40cc42 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e2c3 : loopne 0x40e316 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d86d : loopne 0x41d8d3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041ec54 : loopne 0x41eca7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000423eb3 : loopne 0x423ebc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042483e : loopne 0x42488e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042483d : loopne 0x42488f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000438a10 : loopne 0x438a17 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004393a2 : loopne 0x4393a9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043b24c : loopne 0x43b29b ; mov esp, ebp ; pop rbp ; ret
0x000000000043b24b : loopne 0x43b29c ; mov esp, ebp ; pop rbp ; ret
0x000000000043b49c : loopne 0x43b4eb ; mov esp, ebp ; pop rbp ; ret
0x000000000043b49b : loopne 0x43b4ec ; mov esp, ebp ; pop rbp ; ret
0x000000000043c045 : loopne 0x43c04c ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004021b9 : mov ah, -0x33 ; add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret 0x43cd
0x0000000000417aad : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417b87 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000415b35 : mov ah, 0x75 ; ret
0x000000000041e643 : mov al, -0x47 ; ret
0x00000000004282cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ca5d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043da78 : mov al, 0x10 ; add byte ptr [rax], al ; push rax ; mov bh, -1 ; call rax
0x000000000043da38 : mov al, 0xf ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; call rax
0x000000000040537d : mov al, 0xf ; xchg eax, esp ; ret 0xf41
0x000000000042186e : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439abd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043978a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004399ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043da7d : mov bh, -1 ; call rax
0x000000000042a4f5 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f4d5 : mov bl, 0x75 ; ret
0x000000000040c50f : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043e768 : mov byte ptr [rbp - 1], dh ; jmp qword ptr [rax]
0x000000000043e748 : mov byte ptr [rdx - 1], bl ; call qword ptr [rdx]
0x0000000000401a43 : mov byte ptr [rip + 0x23d8b6], 1 ; ret
0x000000000041732f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000401a45 : mov dh, -0x28 ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000043a754 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000043123b : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439790 : mov dh, -0x40 ; pop rbp ; ret
0x000000000043d9fd : mov dh, -2 ; call rax
0x000000000043b20a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043a481 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040da49 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403a8c : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d61f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004352ee : mov dword ptr [rbp - 0x1320], ecx ; call 0x401578
0x0000000000438e1a : mov dword ptr [rbp - 0x14], eax ; jmp 0x438e9b
0x0000000000434079 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x4341c7
0x00000000004037bb : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422788 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4231fa
0x0000000000401d27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dd26 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433e4c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040d8cd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000407dd4 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004246bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000438444 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042e745 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042488e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000438c95 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040da4c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043c290 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042483c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043b24a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004072ff : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000040d8cf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040d40f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x00000000004252b5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041dabd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d8ce : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000041a2e8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x000000000040c487 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000043546b : mov ecx, 0xba41a9ee ; ret
0x000000000040d61c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043534e : mov ecx, dword ptr [rcx] ; add byte ptr [rax], al ; call 0x401576
0x00000000004072f9 : mov edi, 0 ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000042cbaf : mov edi, 0x51b94936 ; jmp rsp
0x0000000000401a65 : mov edi, 0x63ee20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x63f2b0 ; jmp rax
0x0000000000401a22 : mov edi, 0x63f2b0 ; jmp rdx
0x0000000000416b87 : mov edi, 0xb8000055 ; wait ; jo 0x416b9f ; ret
0x0000000000405367 : mov edi, dword ptr [rbp - 0x38] ; call 0x401605
0x000000000043cc17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043cc16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000428a7e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041734b : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004181c2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000428a67 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401a20 : mov esi, eax ; mov edi, 0x63f2b0 ; jmp rdx
0x000000000042f897 : mov esi, es ; ret
0x0000000000402085 : mov esp, ebp ; pop rbp ; ret
0x000000000040dd25 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433e4b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040537c : mov r8b, 0xf ; xchg eax, esp ; ret 0xf41
0x0000000000407dd3 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004246ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000438443 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042e744 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042488d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042483b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004072fe : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x00000000004252b4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041dabc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000405366 : mov rdi, qword ptr [rbp - 0x38] ; call 0x401606
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x63f2b0 ; jmp rdx
0x0000000000402084 : mov rsp, rbp ; pop rbp ; ret
0x0000000000424451 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043e704 : mov word ptr [rbx], cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], dl ; jmp qword ptr [rcx]
0x000000000043762b : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x00000000004070f5 : movabs byte ptr [0x8348e2894853b517], al ; ret 0x48f0
0x0000000000412e28 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000416075 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000042cbcb : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x42cb8e ; push rcx ; jmp rsp
0x000000000041f662 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004089d6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000040a0f5 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x000000000043a753 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000043123a : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043978f : movzx eax, al ; pop rbp ; ret
0x0000000000428878 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040f315 : nop ; ret
0x000000000041d722 : nop ; ret 0x148
0x000000000041d736 : nop ; ret 0x2948
0x000000000043cc38 : nop dword ptr [rax + rax] ; ret
0x0000000000420eb1 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004292a1 : or al, 0 ; add cl, ch ; ret
0x0000000000417aaa : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417b84 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043c647 : or al, 0xffffffffffffff95 ; xor bh, dl ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x000000000040c3e9 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004210f5 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000043e605 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; xchg dh, bh ; call rdi
0x000000000042e5ed : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x000000000042d9b7 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043b8dc : or byte ptr [rax + 0x69], cl ; ret 0x101
0x000000000042d9b8 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040d620 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000421d68 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000407bcc : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x000000000043c49c : or cl, ch ; ret 0
0x0000000000418b96 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040dd24 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c488 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004210f4 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000040a245 : or eax, 0xc8b80000 ; ret 0xdbca
0x0000000000420d70 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000420ffd : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000043d911 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; adc dh, bh ; jmp qword ptr [rax]
0x000000000040d8cb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041948b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043978c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000439abf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e642 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000428a69 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a575 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040f1c6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041a5c0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004235f1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000428a6c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042444c : pop ax ; jb 0x424481 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041b429 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043cc2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d86f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041b42b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043cc2e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406023 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043cc30 : pop r14 ; pop r15 ; ret
0x00000000004053db : pop r14 ; pop rbp ; ret
0x0000000000406025 : pop r15 ; pop rbp ; ret
0x000000000043cc32 : pop r15 ; ret
0x000000000042444d : pop rax ; jb 0x424480 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x23d8b6], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x63f2b0 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x63f2b0 ; jmp rdx
0x000000000043cc2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b42c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043cc2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000417332 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000413605 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041734e : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004019d5 : pop rbp ; ret
0x000000000042b383 : pop rbp ; stc ; ret 0x8980
0x000000000041d86e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406022 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004053da : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004378e8 : pop rbx ; pop rbp ; ret
0x0000000000421d70 : pop rbx ; ret
0x00000000004038f0 : pop rcx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000417333 : pop rcx ; ret 0x1b2
0x0000000000411a06 : pop rcx ; ret 0x8589
0x000000000041734f : pop rcx ; ret 0x8b48
0x0000000000419680 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000043dd01 : pop rdi ; cld ; call qword ptr [rcx]
0x0000000000406026 : pop rdi ; pop rbp ; ret
0x000000000043cc33 : pop rdi ; ret
0x000000000040c3e8 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000406024 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043cc31 : pop rsi ; pop r15 ; ret
0x00000000004053dc : pop rsi ; pop rbp ; ret
0x0000000000434efd : pop rsi ; ret
0x000000000042b3d7 : pop rsi ; stc ; ret 0x8980
0x000000000042dd42 : pop rsi ; stc ; ret 0xe980
0x000000000041b42a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043cc2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d870 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411a05 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004251f8 : popfq ; push rcx ; ret 0x8929
0x0000000000425226 : popfq ; push rcx ; ret 0xb929
0x000000000043a5d5 : popfq ; ret 0xd284
0x0000000000417330 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043749f : push -0x47fffffa ; ret
0x000000000041951a : push -0x75425eeb ; push rbp ; ret
0x0000000000416078 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000043da77 : push qword ptr [rax + 0x50000010] ; mov bh, -1 ; call rax
0x000000000043d9f7 : push qword ptr [rax - 0x5ffffff2] ; mov dh, -2 ; call rax
0x000000000043da97 : push qword ptr [rax] ; adc dword ptr [rax], eax ; add al, al ; ret 0xffff
0x000000000042e510 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x000000000042b137 : push rax ; jmp rsp
0x000000000043da7c : push rax ; mov bh, -1 ; call rax
0x00000000004049d4 : push rax ; pop rbp ; ret
0x000000000043cdc2 : push rax ; ret
0x000000000043bfd1 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000401a64 : push rbp ; mov edi, 0x63ee20 ; mov rbp, rsp ; call rax
0x000000000041951f : push rbp ; ret
0x00000000004194b6 : push rbp ; ret 0xd284
0x0000000000417aaf : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417b89 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042d395 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000421230 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000042c04f : push rcx ; jmp rsp
0x0000000000420eb0 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000425149 : push rcx ; ret 0x8929
0x0000000000425227 : push rcx ; ret 0xb929
0x000000000042a073 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000428a6b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043415a : push rdx ; add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x0000000000425148 : pushfq ; push rcx ; ret 0x8929
0x0000000000406a44 : pushfq ; ret 0x8445
0x00000000004282d5 : pushfq ; ret 0xd284
0x00000000004217e1 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004003a0 : ret
0x000000000040e92e : ret 0
0x000000000043414e : ret 0x10
0x0000000000431bf9 : ret 0x1002
0x000000000043b8df : ret 0x101
0x0000000000421aaa : ret 0x10e8
0x0000000000434611 : ret 0x12
0x0000000000431ac5 : ret 0x1252
0x0000000000428cc8 : ret 0x12e8
0x000000000041d723 : ret 0x148
0x000000000042a599 : ret 0x18
0x000000000041a684 : ret 0x1a
0x000000000040f8fd : ret 0x1add
0x000000000040a627 : ret 0x1b2
0x0000000000437a40 : ret 0x1d90
0x0000000000403023 : ret 0x23
0x0000000000401962 : ret 0x23d8
0x0000000000401762 : ret 0x23d9
0x0000000000401562 : ret 0x23da
0x0000000000437397 : ret 0x23e8
0x000000000041cf48 : ret 0x279e
0x0000000000418b99 : ret 0x2948
0x0000000000419684 : ret 0x2a
0x0000000000417ab2 : ret 0x2d50
0x0000000000409ea3 : ret 0x3040
0x0000000000418584 : ret 0x3b
0x00000000004096bd : ret 0x3c58
0x00000000004155e5 : ret 0x3e
0x000000000043398c : ret 0x3ee8
0x00000000004021c1 : ret 0x43cd
0x000000000043bd11 : ret 0x43dd
0x0000000000433eb0 : ret 0x4449
0x0000000000429db2 : ret 0x4589
0x0000000000409376 : ret 0x4777
0x0000000000418a21 : ret 0x4802
0x000000000043b89e : ret 0x4810
0x0000000000428a6e : ret 0x4815
0x000000000042a4ad : ret 0x4818
0x0000000000406d02 : ret 0x485b
0x000000000041a576 : ret 0x4861
0x00000000004347e1 : ret 0x48c
0x000000000042cc0b : ret 0x48c0
0x000000000040716e : ret 0x48e0
0x0000000000401eeb : ret 0x48f0
0x000000000042e280 : ret 0x4ae8
0x0000000000412e31 : ret 0x4b
0x000000000041e447 : ret 0x4cc0
0x000000000041b488 : ret 0x4cf0
0x000000000042336c : ret 0x4f0b
0x0000000000436797 : ret 0x5452
0x000000000040d87b : ret 0x5589
0x000000000042a904 : ret 0x581e
0x0000000000435462 : ret 0x58e8
0x0000000000417d3a : ret 0x5966
0x00000000004057ed : ret 0x5a7c
0x000000000041f106 : ret 0x5aa2
0x0000000000421fc7 : ret 0x5bc6
0x00000000004351f1 : ret 0x6044
0x000000000043b20f : ret 0x61
0x0000000000420c52 : ret 0x68e8
0x000000000040ef96 : ret 0x6a8a
0x000000000043594e : ret 0x6ce8
0x0000000000436728 : ret 0x701
0x000000000040ec4e : ret 0x77a8
0x000000000040fdb1 : ret 0x7a8a
0x0000000000416a2b : ret 0x7b7f
0x000000000040cd7d : ret 0x7f0f
0x000000000041d3da : ret 0x8041
0x000000000041d622 : ret 0x8141
0x00000000004287c9 : ret 0x8148
0x0000000000418944 : ret 0x822d
0x0000000000409b01 : ret 0x8237
0x0000000000406a45 : ret 0x8445
0x0000000000408364 : ret 0x8589
0x00000000004325f0 : ret 0x85c7
0x000000000043c659 : ret 0x8845
0x0000000000436745 : ret 0x8904
0x000000000040570e : ret 0x8907
0x000000000042514a : ret 0x8929
0x000000000040f9c3 : ret 0x8940
0x000000000040c9d2 : ret 0x8944
0x00000000004030ba : ret 0x8948
0x000000000042708f : ret 0x894a
0x000000000042a077 : ret 0x894d
0x000000000040f1c7 : ret 0x8961
0x000000000040b049 : ret 0x8974
0x000000000042b385 : ret 0x8980
0x00000000004081db : ret 0x89b1
0x00000000004089d7 : ret 0x89f4
0x0000000000428688 : ret 0x8a44
0x0000000000428585 : ret 0x8a4a
0x000000000040c858 : ret 0x8a74
0x0000000000405cba : ret 0x8b48
0x000000000040a4b7 : ret 0x8bb1
0x000000000042d84e : ret 0x8ce8
0x0000000000406b86 : ret 0x9589
0x000000000040a643 : ret 0x958a
0x0000000000408869 : ret 0xa2bc
0x0000000000417b8c : ret 0xa30b
0x0000000000438d5f : ret 0xac60
0x0000000000420f3f : ret 0xb
0x000000000042263e : ret 0xb0
0x000000000040a49b : ret 0xb2b1
0x000000000043c262 : ret 0xb60f
0x0000000000419490 : ret 0xb740
0x0000000000424447 : ret 0xb848
0x0000000000437651 : ret 0xb904
0x0000000000425228 : ret 0xb929
0x00000000004176c0 : ret 0xb940
0x0000000000428512 : ret 0xb94a
0x000000000040a0f6 : ret 0xb9f4
0x0000000000405f46 : ret 0xba07
0x00000000004291b4 : ret 0xbe70
0x0000000000419b0c : ret 0xbf48
0x0000000000429ad2 : ret 0xc
0x0000000000401a05 : ret 0xc148
0x000000000043b452 : ret 0xc493
0x0000000000439749 : ret 0xca21
0x0000000000401b68 : ret 0xcc23
0x000000000043b215 : ret 0xccb2
0x0000000000405031 : ret 0xd284
0x0000000000426cd5 : ret 0xd618
0x000000000040876e : ret 0xdbca
0x000000000043a6fb : ret 0xe280
0x0000000000421295 : ret 0xe2b9
0x0000000000419362 : ret 0xe940
0x000000000041a5c1 : ret 0xe961
0x000000000040c87e : ret 0xe974
0x000000000042dd44 : ret 0xe980
0x000000000042ebe1 : ret 0xe9e8
0x00000000004103ed : ret 0xea51
0x000000000043b207 : ret 0xea81
0x000000000041c17c : ret 0xee8
0x000000000040d8b5 : ret 0xf281
0x0000000000421a0c : ret 0xf3e9
0x0000000000405380 : ret 0xf41
0x0000000000434579 : ret 0xf62a
0x0000000000434ee1 : ret 0xf738
0x000000000042f4de : ret 0xf7c7
0x000000000041a115 : ret 0xf7f3
0x000000000041889e : ret 0xfc75
0x00000000004225fa : ret 0xfdf1
0x0000000000416f8a : ret 0xfea6
0x000000000041a10f : ret 0xffa5
0x0000000000418898 : ret 0xffc4
0x0000000000417ab8 : ret 0xffd5
0x0000000000417b92 : ret 0xffd8
0x000000000041894a : ret 0xffd9
0x0000000000417d34 : ret 0xffe0
0x000000000040ad9d : ret 0xfff9
0x0000000000416a25 : ret 0xfffa
0x00000000004352f6 : ret 0xfffc
0x000000000040536c : ret 0xffff
0x000000000040332c : ret 1
0x0000000000418730 : ret 2
0x000000000042e87c : ret 4
0x000000000041b884 : ret 8
0x0000000000432cfc : ret 9
0x0000000000428a4d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042556c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004079fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428a4c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040ad93 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x000000000043cab4 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000424444 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x000000000043123c : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043cab5 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040d8ca : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043c25f : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x000000000042887e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041e300 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000040502e : ror dword ptr [rdi], -0x69 ; ret 0xd284
0x000000000040502d : ror dword ptr cs:[rdi], -0x69 ; ret 0xd284
0x00000000004396ec : sahf ; ret 0xd284
0x000000000040a624 : salc ; adc ah, al ; ret 0x1b2
0x00000000004083b5 : salc ; adc ah, al ; ret 0x8589
0x000000000040a640 : salc ; adc ah, al ; ret 0x958a
0x000000000040ad8d : sar dh, -1 ; call rdi
0x000000000040adee : sar dh, -1 ; call rdx
0x000000000040ad01 : sar dh, -1 ; call rsp
0x000000000040a5ca : sar dh, -1 ; jmp qword ptr [rsi]
0x000000000043e0b0 : sar dl, 1 ; std ; call rdi
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000419681 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x000000000040a4b2 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x00000000004329d4 : sbb al, -0x17 ; ret
0x000000000042193a : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x000000000041e640 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000433d0b : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a074 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000419581 : sbb cl, ch ; ret
0x0000000000423c93 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403327 : sbb eax, 0xe9000004 ; ret 1
0x00000000004035ad : sbb eax, 0xfdb974cb ; ret
0x000000000043c545 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041d690 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042193c : sbb ecx, ebp ; ret
0x000000000040ca94 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000405029 : shl byte ptr [r14 + 0xf], 1 ; ror dword ptr cs:[rdi], -0x69 ; ret 0xd284
0x000000000040502a : shl byte ptr [rsi + 0xf], 1 ; ror dword ptr cs:[rdi], -0x69 ; ret 0xd284
0x0000000000418582 : shr cl, cl ; ret 0x3b
0x000000000043da39 : sldt word ptr [rax] ; adc byte ptr [rdi - 1], ah ; call rax
0x000000000040839b : stc ; ret
0x00000000004163bd : stc ; ret 0x77a8
0x000000000042b384 : stc ; ret 0x8980
0x000000000042dd43 : stc ; ret 0xe980
0x000000000043e051 : stc ; std ; jmp qword ptr [rbx]
0x000000000040a495 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x000000000043e0b2 : std ; call rdi
0x000000000043e1b2 : std ; call rdx
0x000000000043e052 : std ; jmp qword ptr [rbx]
0x000000000040331b : std ; ret
0x000000000041cf47 : std ; ret 0x279e
0x000000000042e512 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000403d0e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000438e66 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403bf8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000417ab5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000043e708 : sub byte ptr [rdi - 1], dl ; jmp qword ptr [rcx]
0x000000000043db0c : sub cl, -1 ; call qword ptr [rax]
0x0000000000417aab : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000417b85 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000418945 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004217e2 : sub eax, 0x9a6b3ab9 ; ret
0x000000000042444f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043cc6d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043cc6c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004225f6 : test al, -0x50 ; add al, ch ; ret 0xfdf1
0x0000000000417ab0 : test al, -0x7f ; ret 0x2d50
0x0000000000417b8a : test al, -0x7f ; ret 0xa30b
0x0000000000428323 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041dd1e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041a2e6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004234e8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004378e4 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004296a0 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000043cc3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043dcfc : test byte ptr [rcx], al ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], bl ; call qword ptr [rcx]
0x000000000040e92c : test byte ptr [rcx], ch ; ret 0
0x0000000000432cf6 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x0000000000403326 : test byte ptr [rip - 0x16fffffc], bl ; ret 1
0x000000000040e926 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040207f : test dword ptr [rdi + rdi*8 - 1], ebp ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043249c : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004326b5 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x00000000004235f6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000405bc7 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x000000000040c48c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000040ce1f : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000040c3ed : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000041d93a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000420bce : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000420eb5 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000421943 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041935b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000431338 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x00000000004089cf : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000408a23 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000041a5ba : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000408393 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x00000000004083e7 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x00000000004083af : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x000000000040835b : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x00000000004087bb : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x0000000000408767 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x00000000004093c3 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000040936f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x000000000043327f : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000041607a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000408dae : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x000000000041a56f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000043da4d : test edi, edi ; call qword ptr [rax]
0x000000000041857f : wait ; jge 0x418561 ; shr cl, cl ; ret 0x3b
0x000000000041363d : wait ; jo 0x41364b ; ret
0x0000000000416b8c : wait ; jo 0x416b9a ; ret
0x000000000043e609 : xchg dh, bh ; call rdi
0x0000000000428a68 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000407264 : xchg eax, ebp ; ret 0x8445
0x000000000040781f : xchg eax, ebp ; ret 0xd284
0x000000000043c648 : xchg eax, ebp ; xor bh, dl ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x000000000040f1c5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000415ac5 : xchg eax, ebx ; ret
0x0000000000415cf5 : xchg eax, ecx ; ret
0x000000000040536b : xchg eax, ecx ; ret 0xffff
0x0000000000405030 : xchg eax, edi ; ret 0xd284
0x0000000000420d6f : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040f545 : xchg eax, edx ; ret
0x000000000041d3ef : xchg eax, edx ; ret 0x8445
0x00000000004234ee : xchg eax, edx ; ret 0xd284
0x000000000043546a : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x000000000042278a : xchg eax, esp ; jmp 0x4231f8
0x00000000004226c7 : xchg eax, esp ; jmp 0x4231fa
0x000000000041a574 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415e45 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041a5bf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004352ad : xchg eax, esp ; ret
0x000000000041d3d9 : xchg eax, esp ; ret 0x8041
0x0000000000429b18 : xchg eax, esp ; ret 0x8445
0x000000000043c261 : xchg eax, esp ; ret 0xb60f
0x000000000041948e : xchg eax, esp ; ret 0xb740
0x000000000041ec39 : xchg eax, esp ; ret 0xd284
0x000000000040537f : xchg eax, esp ; ret 0xf41
0x0000000000422789 : xchg eax, r12d ; jmp 0x4231f9
0x000000000043c64a : xlatb ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x000000000041f661 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004021bf : xor al, 0x25 ; ret 0x43cd
0x000000000040abbd : xor al, 0x72 ; jl 0x40ab80 ; ret 0x8237
0x000000000043e0ac : xor al, 5 ; add byte ptr [rax], al ; sar dl, 1 ; std ; call rdi
0x0000000000419489 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040ce1a : xor al, byte ptr [rdi - 1] ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000043c649 : xor bh, dl ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x000000000040dd27 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040dd28 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043dd00 : xor byte ptr [rdi - 4], bl ; call qword ptr [rcx]
0x000000000043dec0 : xor ch, 0xfc ; call qword ptr [rdx]
0x000000000040a496 : xor eax, 0xeb21b978 ; ret 0xb2b1
