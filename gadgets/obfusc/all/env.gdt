0x0000000000410f8e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000410901 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000418ffb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411a8b : adc eax, 0x558abda1 ; ret
0x0000000000415069 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402be4 : add al, 0 ; add cl, ch ; ret 1
0x000000000041d7ea : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000421fd4 : add al, 7 ; add byte ptr [rax], al ; fdiv dword ptr [rdx - 1] ; call rdx
0x0000000000421fd7 : add al, bl ; jb 0x421fde ; call rdx
0x00000000004037b6 : add al, byte ptr [rax] ; add al, ch ; ret 0xffda
0x00000000004037b5 : add al, byte ptr ds:[rax] ; add al, ch ; ret 0xffda
0x00000000004037b8 : add al, ch ; ret 0xffda
0x00000000004217b3 : add al, dl ; mov edi, edi ; jmp qword ptr [rax]
0x0000000000418cd4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004118c9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004035c3 : add bh, bh ; ret 0x1589
0x0000000000420c2f : add bl, dh ; ret
0x0000000000420902 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000420b64 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004039a3 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000417126 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4211
0x000000000041602b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403d0b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000421fd2 : add byte ptr [rax], al ; add al, 7 ; add byte ptr [rax], al ; fdiv dword ptr [rdx - 1] ; call rdx
0x0000000000418cd2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000420c2d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004039a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000417124 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4211
0x0000000000403d09 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400730 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400734 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000421772 : add byte ptr [rax], al ; add byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x0000000000403c9e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000414ad2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417493 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004017c6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2d20fbb], cl ; ret
0x00000000004016ea : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d20fbb], cl ; ret
0x000000000041debc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000419df9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000421eee : add byte ptr [rax], al ; add byte ptr [rbx - 1], dl ; jmp rsi
0x0000000000420903 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000420b65 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000418c40 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041fcd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041d051 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ede8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040519b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004034c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041cd65 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000418bca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004171a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041506b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004146f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418ffd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041e568 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004219f2 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; and rdi, rsi ; call qword ptr [rcx]
0x0000000000421ff2 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; cwde ; jae 0x422003 ; call qword ptr [rdx]
0x00000000004215fa : add byte ptr [rax], al ; and byte ptr [rsi], 0xfe ; jmp qword ptr [rax]
0x00000000004219f6 : add byte ptr [rax], al ; and rdi, rsi ; call qword ptr [rcx]
0x0000000000421ff6 : add byte ptr [rax], al ; cwde ; jae 0x421fff ; call qword ptr [rdx]
0x0000000000421c66 : add byte ptr [rax], al ; fadd dword ptr [rdx - 1] ; jmp qword ptr [rbx]
0x0000000000421fd6 : add byte ptr [rax], al ; fdiv dword ptr [rdx - 1] ; call rdx
0x0000000000421773 : add byte ptr [rax], al ; jge 0x42177a ; jmp qword ptr [rax]
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x00000000004217a3 : add byte ptr [rax], al ; mov bh, bh ; jmp rax
0x0000000000420948 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403d0a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421762 : add byte ptr [rax], al ; nop ; jns 0x42176b ; jmp rax
0x0000000000401939 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414ad3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403882 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421832 : add byte ptr [rax], al ; rcr ch, -1 ; jmp qword ptr [rax]
0x0000000000400736 : add byte ptr [rax], al ; ret
0x00000000004216f2 : add byte ptr [rax], al ; ror byte ptr [rdi - 1], 1 ; call qword ptr [rax]
0x0000000000421eea : add byte ptr [rax], al ; sbb al, 6 ; add byte ptr [rax], al ; add byte ptr [rbx - 1], dl ; jmp rsi
0x0000000000421774 : add byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x0000000000403ca0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000414ad4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403883 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000417495 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041744a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004017c8 : add byte ptr [rbx - 0x2d20fbb], cl ; ret
0x00000000004037d7 : add byte ptr [rbx - 0x3834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004016ec : add byte ptr [rbx - 0x3d20fbb], cl ; ret
0x000000000041debe : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000420949 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000419dfb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000421ef0 : add byte ptr [rbx - 1], dl ; jmp rsi
0x00000000004219f3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; and rdi, rsi ; call qword ptr [rcx]
0x0000000000418d3e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401668 : add byte ptr [rcx], al ; ret
0x0000000000420905 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000420b67 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000418c42 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000421ff3 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; cwde ; jae 0x422002 ; call qword ptr [rdx]
0x0000000000421fd3 : add byte ptr [rdi + rax], al ; add byte ptr [rax], al ; fdiv dword ptr [rdx - 1] ; call rdx
0x000000000041fcd3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041d053 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041edea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040519d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004034c7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041cd67 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000418bcc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004171a7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000421770 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rbp - 1], bh ; jmp qword ptr [rax]
0x0000000000421eeb : add byte ptr [rsi + rax], bl ; add byte ptr [rax], al ; add byte ptr [rbx - 1], dl ; jmp rsi
0x00000000004119fc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041769d : add cl, ch ; ret
0x0000000000402be6 : add cl, ch ; ret 1
0x000000000041fe52 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041eca4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ee8e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401664 : add eax, 0x221c4e ; add ebx, esi ; ret
0x0000000000403881 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040162b : add eax, edx ; sar rax, 1 ; jne 0x40163c ; pop rbp ; ret
0x0000000000401669 : add ebx, esi ; ret
0x0000000000401a5b : add esp, 0x10 ; pop rbp ; ret
0x0000000000418d3c : add esp, 0x100 ; pop rbp ; ret
0x0000000000418eac : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004146f3 : add esp, 0x20 ; pop rbp ; ret
0x000000000040387e : add esp, 0x398 ; pop rbx ; pop rbp ; ret
0x0000000000419000 : add esp, 0x40 ; pop rbp ; ret
0x000000000041d9e9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401c32 : add esp, 0x50 ; pop rbp ; ret
0x0000000000419f20 : add esp, 0x60 ; pop rbp ; ret
0x00000000004163e2 : add esp, 0x70 ; pop rbp ; ret
0x0000000000401935 : add esp, 0x80 ; pop rbp ; ret
0x000000000041967d : add esp, 0x90 ; pop rbp ; ret
0x00000000004171c6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000414fcb : add esp, 0xb0 ; pop rbp ; ret
0x000000000040537a : add esp, 0xd0 ; pop rbp ; ret
0x000000000041e10e : add esp, 0xe0 ; pop rbp ; ret
0x000000000041adef : add esp, 0xf0 ; pop rbp ; ret
0x0000000000405983 : add esp, 8 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040162a : add rax, rdx ; sar rax, 1 ; jne 0x40163d ; pop rbp ; ret
0x0000000000401a5a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000418d3b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000418eab : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004146f2 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040387d : add rsp, 0x398 ; pop rbx ; pop rbp ; ret
0x0000000000418fff : add rsp, 0x40 ; pop rbp ; ret
0x000000000041d9e8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401c31 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000419f1f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004163e1 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401934 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041967c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004171c5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000414fca : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000405379 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041e10d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041adee : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000405982 : add rsp, 8 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x000000000042090d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004219f4 : and al, 1 ; add byte ptr [rax], al ; and rdi, rsi ; call qword ptr [rcx]
0x000000000041eca3 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ee8d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421ff4 : and al, 7 ; add byte ptr [rax], al ; cwde ; jae 0x422001 ; call qword ptr [rdx]
0x0000000000401667 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000419b2b : and byte ptr [rsi + 0x58], ah ; jb 0x419b62 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004215fc : and byte ptr [rsi], 0xfe ; jmp qword ptr [rax]
0x0000000000405165 : and eax, 0x6232b0 ; call 0x4013a7
0x0000000000410c31 : and eax, 0x75b4b9d3 ; ret
0x00000000004219f9 : and edi, esi ; call qword ptr [rcx]
0x00000000004219f8 : and rdi, rsi ; call qword ptr [rcx]
0x0000000000414f88 : call 0x401262
0x0000000000414ee9 : call 0x401268
0x0000000000418ed0 : call 0x401359
0x000000000040516a : call 0x4013a2
0x0000000000419f25 : call 0x419fe9
0x000000000041e45d : call 0xffffffffaca2a691
0x000000000041e45c : call 0xffffffffaca2a692
0x00000000004146e9 : call 0xffffffffe903d039
0x00000000004146e8 : call 0xffffffffe903d03a
0x0000000000420c09 : call qword ptr [r12 + rbx*8]
0x00000000004216b7 : call qword ptr [rax]
0x0000000000415eae : call qword ptr [rbx]
0x000000000041da8c : call qword ptr [rcx]
0x0000000000413b74 : call qword ptr [rdi]
0x000000000040fb5b : call qword ptr [rdx]
0x0000000000420c0a : call qword ptr [rsp + rbx*8]
0x000000000040168d : call rax
0x0000000000411ddb : call rcx
0x00000000004137b4 : call rdi
0x0000000000412fe5 : call rdx
0x0000000000403c4b : call rsp
0x000000000041d9e7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000419287 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041a379 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040162f : clc ; jne 0x401638 ; pop rbp ; ret
0x000000000041602f : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004071bd : clc ; ret 0x77a8
0x0000000000401a87 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ea9e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041aded : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000403ccf : cld ; jmp 0x403d3c
0x0000000000403cce : cld ; jmp 0x403d3d
0x00000000004016f1 : cld ; ret
0x0000000000419b30 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042090c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000418a4b : cmc ; ret 0x4f0b
0x00000000004039a6 : cmp al, 0x25 ; ret
0x0000000000418be1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004015ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401600 ; pop rbp ; ret
0x0000000000411a87 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000403880 : cwde ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000421ff8 : cwde ; jae 0x421ffd ; call qword ptr [rdx]
0x0000000000418ed4 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4214
0x0000000000410f8b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004108fe : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000411103 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000419c5d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041d546 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004037dd : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418a46 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000402be0 : dec dword ptr [rdi] ; test ah, bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000406e9a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041d373 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041cfc9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004034c1 : enter 0x3d48, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000405199 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000421c68 : fadd dword ptr [rdx - 1] ; jmp qword ptr [rbx]
0x0000000000421fd8 : fdiv dword ptr [rdx - 1] ; call rdx
0x000000000041eec8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041dba7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041dba8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000420c0c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e10c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000405981 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401600 : hlt ; pop rbp ; mov edi, 0x623240 ; jmp rax
0x0000000000419c5b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041a731 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041e51c : in al, dx ; jmp 0x41e599
0x000000000041e51b : in al, dx ; jmp 0x41e59a
0x0000000000403d0e : in al, dx ; pop rbp ; ret
0x000000000042176f : inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax], al ; jge 0x42177e ; jmp qword ptr [rax]
0x00000000004217af : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dl ; mov edi, edi ; jmp qword ptr [rax]
0x0000000000402dee : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000042179f : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; mov bh, bh ; jmp rax
0x0000000000416b97 : int 0x5b
0x00000000004015f3 : ja 0x4015fa ; pop rbp ; ret
0x0000000000421ff9 : jae 0x421ffc ; call qword ptr [rdx]
0x0000000000419b2e : jb 0x419b5f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000421fd9 : jb 0x421fdc ; call rdx
0x00000000004015ff : je 0x4015fd ; pop rbp ; mov edi, 0x623240 ; jmp rax
0x0000000000410026 : jge 0x40ffab ; ret 0xffd5
0x0000000000410af0 : jge 0x410ad0 ; shr cl, cl ; ret 0x3b
0x0000000000421775 : jge 0x421778 ; jmp qword ptr [rax]
0x000000000040144b : jmp 0x401247
0x00000000004037b4 : jmp 0x4039fd
0x000000000040399f : jmp 0x403a00
0x0000000000403cd0 : jmp 0x403d3b
0x0000000000411240 : jmp 0x4146c0
0x000000000040f144 : jmp 0x4146c1
0x0000000000410511 : jmp 0x4146c2
0x0000000000417122 : jmp 0x4171e7
0x0000000000417e6b : jmp 0x4188d7
0x0000000000417da8 : jmp 0x4188d9
0x0000000000419ed3 : jmp 0x419f38
0x000000000041d886 : jmp 0x41db68
0x000000000041e51d : jmp 0x41e598
0x0000000000418a4a : jmp 0x4f4d4d46
0x0000000000414015 : jmp qword ptr [rax]
0x0000000000421c6b : jmp qword ptr [rbx]
0x0000000000405e12 : jmp qword ptr [rcx]
0x0000000000411cc7 : jmp qword ptr [rdi]
0x0000000000418cda : jmp qword ptr [rdx]
0x0000000000401607 : jmp rax
0x0000000000410618 : jmp rbx
0x000000000041104a : jmp rcx
0x0000000000410672 : jmp rdi
0x0000000000401647 : jmp rdx
0x0000000000421ef3 : jmp rsi
0x0000000000410928 : jmp rsp
0x0000000000401630 : jne 0x401637 ; pop rbp ; ret
0x0000000000421765 : jns 0x421768 ; jmp rax
0x0000000000409f3e : jo 0x409f4a ; ret
0x000000000040bbae : jo 0x40bbba ; ret
0x000000000040f0fd : jo 0x40f109 ; ret
0x00000000004163e4 : jo 0x416445 ; ret
0x0000000000414fe5 : js 0x414ff3 ; call 0x401264
0x0000000000410aee : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000411bee : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004044d6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406835 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004166d9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406834 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f44e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000412455 : loope 0x412423 ; jmp 0x4146c3
0x0000000000406833 : loopne 0x406886 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415ddd : loopne 0x415e43 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004171c4 : loopne 0x417217 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000419593 : loopne 0x41959c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419f1e : loopne 0x419f6e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000419f1d : loopne 0x419f6f ; add esp, 0x60 ; pop rbp ; ret
0x000000000041e110 : loopne 0x41e117 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041eaa2 : loopne 0x41eaa9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042094c : loopne 0x42099b ; mov esp, ebp ; pop rbp ; ret
0x000000000042094b : loopne 0x42099c ; mov esp, ebp ; pop rbp ; ret
0x0000000000420b9c : loopne 0x420beb ; mov esp, ebp ; pop rbp ; ret
0x0000000000420b9b : loopne 0x420bec ; mov esp, ebp ; pop rbp ; ret
0x000000000041001d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004100f7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401c30 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e0a5 : mov ah, 0x75 ; ret
0x0000000000416bb3 : mov al, -0x47 ; ret
0x000000000041d04f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000414fcd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f1bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ee8a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f0ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004217a5 : mov bh, bh ; jmp rax
0x0000000000407a45 : mov bl, 0x75 ; ret
0x00000000004017e7 : mov byte ptr [rcx + rdi*4 - 3], cl ; ret
0x0000000000401663 : mov byte ptr [rip + 0x221c4e], 1 ; ret
0x000000000040f89f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041fe54 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041eca6 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ee90 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042090a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041fb81 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000405fb9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405b8f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e51a : mov dword ptr [rbp - 0x14], eax ; jmp 0x41e59b
0x00000000004037b1 : mov dword ptr [rbp - 0x48], eax ; jmp 0x403a00
0x0000000000401c2e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000417e68 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4188da
0x0000000000414f82 : mov dword ptr [rbp - 0xac], ecx ; call 0x401268
0x0000000000401a57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a85 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406296 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405e3d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004037b3 : mov eax, 0x23ee9 ; add al, ch ; ret 0xffda
0x00000000004056b9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419d9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414fe0 : mov eax, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rax + 8] ; call 0x401269
0x0000000000415015 : mov eax, dword ptr [rbp - 0x10] ; mov rdi, rax ; call 0x401268
0x0000000000419f6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ade : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e395 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405fbc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000419f1c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042094a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405e3f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040597f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041602d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405e3e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000412858 : mov ebp, 0xe19c53ba ; ret
0x000000000040168b : mov ebp, esp ; call rax
0x00000000004015f1 : mov ebp, esp ; ja 0x4015fc ; pop rbp ; ret
0x00000000004017e5 : mov ebx, esi ; mov byte ptr [rcx + rdi*4 - 3], cl ; ret
0x0000000000405b8c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401685 : mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x0000000000401602 : mov edi, 0x623240 ; jmp rax
0x0000000000401642 : mov edi, 0x623240 ; jmp rdx
0x000000000040f0f7 : mov edi, 0xb8000055 ; wait ; jo 0x40f10f ; ret
0x0000000000414fe4 : mov edi, dword ptr [rax + 8] ; call 0x401265
0x0000000000415019 : mov edi, eax ; call 0x401264
0x0000000000420c07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004217b5 : mov edi, edi ; jmp qword ptr [rax]
0x0000000000420c06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041d7fe : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040f8bb : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000410732 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041d7e7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000405163 : mov esi, dword ptr [0x6232b0] ; call 0x4013a9
0x0000000000401640 : mov esi, eax ; mov edi, 0x623240 ; jmp rdx
0x0000000000403d0d : mov esp, ebp ; pop rbp ; ret
0x0000000000406295 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401c2f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004037b2 : mov r8d, 0x23ee9 ; add al, ch ; ret 0xffda
0x00000000004056b8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419d9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415014 : mov rax, qword ptr [rbp - 0x10] ; mov rdi, rax ; call 0x401269
0x0000000000419f6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404add : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000419f1b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041602c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040168a : mov rbp, rsp ; call rax
0x00000000004015f0 : mov rbp, rsp ; ja 0x4015fd ; pop rbp ; ret
0x0000000000414fe3 : mov rdi, qword ptr [rax + 8] ; call 0x401266
0x0000000000415018 : mov rdi, rax ; call 0x401265
0x000000000040163f : mov rsi, rax ; mov edi, 0x623240 ; jmp rdx
0x0000000000403d0c : mov rsp, rbp ; pop rbp ; ret
0x0000000000419b31 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040b398 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000401ec4 : movabs eax, dword ptr [0x840fffffff3c8589] ; ret 0x19
0x000000000040e5e5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041fe53 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041eca5 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ee8f : movzx eax, al ; pop rbp ; ret
0x000000000041d5f8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000421764 : nop ; jns 0x421769 ; jmp rax
0x0000000000407885 : nop ; ret
0x0000000000415c92 : nop ; ret 0x148
0x0000000000415ca6 : nop ; ret 0x2948
0x0000000000420c28 : nop dword ptr [rax + rax] ; ret
0x000000000041001a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004100f4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000421771 : or al, byte ptr [rax] ; add byte ptr [rax], al ; jge 0x42177c ; jmp qword ptr [rax]
0x00000000004217a1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov bh, bh ; jmp rax
0x0000000000405b90 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000417448 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000411106 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000406294 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004217b1 : or eax, dword ptr [rax] ; add al, dl ; mov edi, edi ; jmp qword ptr [rax]
0x0000000000405e3b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004119fb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041ee8c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f1bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416bb2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041d7e9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000412ae5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000407736 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000412b30 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000418cd1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041d7ec : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000419b2c : pop ax ; jb 0x419b61 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000413999 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420c1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415ddf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041399b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420c1e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041399d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420c20 : pop r14 ; pop r15 ; ret
0x0000000000406839 : pop r14 ; pop rbp ; ret
0x000000000041399f : pop r15 ; pop rbp ; ret
0x0000000000420c22 : pop r15 ; ret
0x0000000000419b2d : pop rax ; jb 0x419b60 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401662 : pop rbp ; mov byte ptr [rip + 0x221c4e], 1 ; ret
0x0000000000401601 : pop rbp ; mov edi, 0x623240 ; jmp rax
0x000000000040163e : pop rbp ; mov rsi, rax ; mov edi, 0x623240 ; jmp rdx
0x0000000000420c1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041399c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420c1f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f8a2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040bb75 : pop rbp ; pop rcx ; ret 0x8589
0x000000000040f8be : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004015f5 : pop rbp ; ret
0x0000000000415dde : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414ad5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406838 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403884 : pop rbx ; pop rbp ; ret
0x0000000000417450 : pop rbx ; ret
0x000000000040f8a3 : pop rcx ; ret 0x1b2
0x0000000000409f76 : pop rcx ; ret 0x8589
0x000000000040f8bf : pop rcx ; ret 0x8b48
0x0000000000411bf0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004139a0 : pop rdi ; pop rbp ; ret
0x0000000000420c23 : pop rdi ; ret
0x000000000041399e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000420c21 : pop rsi ; pop r15 ; ret
0x000000000040683a : pop rsi ; pop rbp ; ret
0x000000000041399a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420c1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415de0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409f75 : pop rsp ; pop rcx ; ret 0x8589
0x000000000041fcd5 : popfq ; ret 0xd284
0x000000000040f8a0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000411a8a : push -0x75425eeb ; push rbp ; ret
0x000000000040e5e8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000401c34 : push rax ; pop rbp ; ret
0x0000000000401684 : push rbp ; mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x0000000000411a8f : push rbp ; ret
0x0000000000411a26 : push rbp ; ret 0xd284
0x000000000041001f : push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004100f9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004039a0 : push rbx ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041d7eb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d055 : pushfq ; ret 0xd284
0x0000000000421834 : rcr ch, -1 ; jmp qword ptr [rax]
0x0000000000400738 : ret
0x0000000000406e9e : ret 0
0x0000000000415c93 : ret 0x148
0x00000000004035c5 : ret 0x1589
0x0000000000401ecd : ret 0x19
0x0000000000412bf4 : ret 0x1a
0x0000000000407e6d : ret 0x1add
0x000000000040f8a5 : ret 0x1b2
0x0000000000401452 : ret 0x221c
0x0000000000401242 : ret 0x221d
0x000000000041da48 : ret 0x22e8
0x00000000004087ba : ret 0x23da
0x00000000004154b8 : ret 0x279e
0x0000000000411109 : ret 0x2948
0x0000000000411bf4 : ret 0x2a
0x0000000000410022 : ret 0x2d50
0x000000000041d34e : ret 0x3040
0x0000000000401c6a : ret 0x31
0x0000000000410af4 : ret 0x3b
0x000000000040db55 : ret 0x3e
0x000000000041712b : ret 0x4211
0x0000000000418ed9 : ret 0x4214
0x0000000000410f91 : ret 0x4802
0x000000000041d7ee : ret 0x4815
0x0000000000412ae6 : ret 0x4861
0x0000000000404258 : ret 0x48f0
0x000000000040b3a1 : ret 0x4b
0x00000000004169b7 : ret 0x4cc0
0x00000000004139f8 : ret 0x4cf0
0x0000000000418a4c : ret 0x4f0b
0x0000000000405deb : ret 0x5589
0x00000000004102aa : ret 0x5966
0x00000000004176a7 : ret 0x5bc6
0x000000000042090f : ret 0x61
0x0000000000407506 : ret 0x6a8a
0x00000000004071be : ret 0x77a8
0x0000000000408321 : ret 0x7a8a
0x000000000040ef9b : ret 0x7b7f
0x000000000041594a : ret 0x8041
0x0000000000415b92 : ret 0x8141
0x000000000041d549 : ret 0x8148
0x0000000000410eb4 : ret 0x822d
0x0000000000402df2 : ret 0x8445
0x0000000000409f5c : ret 0x8589
0x0000000000407f33 : ret 0x8940
0x0000000000404abb : ret 0x8948
0x000000000041be0f : ret 0x894a
0x0000000000407737 : ret 0x8961
0x000000000041d408 : ret 0x8a44
0x000000000041d305 : ret 0x8a4a
0x000000000040f8c1 : ret 0x8b48
0x00000000004100fc : ret 0xa30b
0x000000000041e45f : ret 0xac60
0x00000000004037e0 : ret 0xb0
0x0000000000411a00 : ret 0xb740
0x0000000000419b27 : ret 0xb848
0x000000000040fc30 : ret 0xb940
0x000000000041d292 : ret 0xb94a
0x000000000041207c : ret 0xbf48
0x0000000000401625 : ret 0xc148
0x0000000000420b52 : ret 0xc493
0x000000000041ee49 : ret 0xca21
0x000000000040395e : ret 0xca29
0x0000000000420915 : ret 0xccb2
0x00000000004051a0 : ret 0xd284
0x000000000041ba55 : ret 0xd618
0x00000000004034ca : ret 0xe280
0x00000000004118d2 : ret 0xe940
0x0000000000412b31 : ret 0xe961
0x000000000040895d : ret 0xea51
0x0000000000420907 : ret 0xea81
0x00000000004146ec : ret 0xee8
0x0000000000405e25 : ret 0xf281
0x0000000000410737 : ret 0xf41
0x0000000000412685 : ret 0xf7f3
0x0000000000410e0e : ret 0xfc75
0x000000000041838a : ret 0xfe8f
0x000000000041267f : ret 0xffa5
0x0000000000410e08 : ret 0xffc4
0x0000000000410028 : ret 0xffd5
0x0000000000410102 : ret 0xffd8
0x0000000000410eba : ret 0xffd9
0x00000000004037ba : ret 0xffda
0x00000000004102a4 : ret 0xffe0
0x000000000040ef95 : ret 0xfffa
0x0000000000414f8a : ret 0xfffe
0x000000000040516c : ret 0xffff
0x0000000000402be8 : ret 1
0x0000000000410ca0 : ret 2
0x0000000000402607 : ret 6
0x0000000000413df4 : ret 8
0x000000000041d7cd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041a2ec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040537c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d7cc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000419b24 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040162c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40163b ; pop rbp ; ret
0x000000000041eca7 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000405e3a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004216f4 : ror byte ptr [rdi - 1], 1 ; call qword ptr [rax]
0x00000000004217a0 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; mov bh, bh ; jmp rax
0x0000000000421860 : ror byte ptr [rip - 0x15300000], -1 ; jmp rax
0x000000000041d5fe : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000416870 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041edec : sahf ; ret 0xd284
0x00000000004015fe : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; xor spl, byte ptr [rdx] ; jmp rax
0x000000000040162e : sar eax, 1 ; jne 0x401639 ; pop rbp ; ret
0x0000000000411bf1 : sar ebp, -0x17 ; ret 0x2a
0x000000000040162d : sar rax, 1 ; jne 0x40163a ; pop rbp ; ret
0x0000000000401666 : sbb al, 0x22 ; add byte ptr [rcx], al ; ret
0x0000000000416bb0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000421eec : sbb al, 6 ; add byte ptr [rax], al ; add byte ptr [rbx - 1], dl ; jmp rsi
0x0000000000411af1 : sbb cl, ch ; ret
0x0000000000419373 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000415c00 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000410af2 : shr cl, cl ; ret 0x3b
0x000000000040e92d : stc ; ret 0x77a8
0x00000000004017cd : std ; ret
0x00000000004154b7 : std ; ret 0x279e
0x0000000000403e1e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e566 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403d08 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410025 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041001b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004100f5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000410eb5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000401231 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000419b2f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000420c5d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000420c5c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402be2 : test ah, bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000410020 : test al, -0x7f ; ret 0x2d50
0x00000000004100fa : test al, -0x7f ; ret 0xa30b
0x000000000041d0a3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041628e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000412856 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000418bc8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000418ed2 : test bh, dh ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4214
0x0000000000420c2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406e9c : test byte ptr [rcx], ch ; ret 0
0x0000000000406e96 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000418183 : test dword ptr [rax - 0x17000003], ebx ; ret
0x0000000000418cd6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000415eaa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004118cb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000412b2a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040e5ea : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000412adf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000410aef : wait ; jge 0x410ad1 ; shr cl, cl ; ret 0x3b
0x000000000040bbad : wait ; jo 0x40bbbb ; ret
0x000000000040f0fc : wait ; jo 0x40f10a ; ret
0x000000000041d7e8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000402df1 : xchg eax, ebp ; ret 0x8445
0x000000000040519f : xchg eax, ebp ; ret 0xd284
0x00000000004034c9 : xchg eax, ebp ; ret 0xe280
0x0000000000407735 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040e035 : xchg eax, ebx ; ret
0x000000000040e265 : xchg eax, ecx ; ret
0x000000000041cd69 : xchg eax, edi ; ret 0xd284
0x0000000000407ab5 : xchg eax, edx ; ret
0x000000000041595f : xchg eax, edx ; ret 0x8445
0x0000000000418bce : xchg eax, edx ; ret 0xd284
0x0000000000417e6a : xchg eax, esp ; jmp 0x4188d8
0x0000000000417da7 : xchg eax, esp ; jmp 0x4188da
0x0000000000412ae4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040e3b5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000412b2f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000415949 : xchg eax, esp ; ret 0x8041
0x00000000004119fe : xchg eax, esp ; ret 0xb740
0x00000000004171a9 : xchg eax, esp ; ret 0xd284
0x0000000000417e69 : xchg eax, r12d ; jmp 0x4188d9
0x0000000000405167 : xor ah, byte ptr [rdx] ; call 0x4013a5
0x0000000000401604 : xor ah, byte ptr [rdx] ; jmp rax
0x0000000000401644 : xor ah, byte ptr [rdx] ; jmp rdx
0x0000000000417129 : xor al, 0x25 ; ret 0x4211
0x0000000000418ed7 : xor al, 0x25 ; ret 0x4214
0x00000000004119f9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000406297 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000406298 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401603 : xor spl, byte ptr [rdx] ; jmp rax
0x0000000000401643 : xor spl, byte ptr [rdx] ; jmp rdx
