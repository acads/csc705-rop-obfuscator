0x0000000000437b32 : adc al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000043e839 : adc bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000432f84 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000412e0e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000412781 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041ae7b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448e02 : adc dword ptr [rdx - 0x2b], edi ; jno 0x448dc7 ; ror dword ptr [rcx], 1 ; ret
0x000000000041390b : adc eax, 0x558abda1 ; ret
0x000000000043e297 : adc eax, 0xc7fffc30 ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000043ef99 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000416ee9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043e957 : adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000458bf3 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; in al, dx ; cli ; call qword ptr [rdx]
0x00000000004592d3 : add ah, al ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; cld ; call rdi
0x0000000000459011 : add ah, bh ; jmp rsi
0x0000000000458f03 : add ah, dh ; add eax, 0xf6d80000 ; sti ; call qword ptr [rbx]
0x00000000004587e7 : add ah, dh ; test bh, ah ; call rsp
0x0000000000458ee3 : add ah, dl ; add eax, 0xf5180000 ; sti ; call rdx
0x0000000000458728 : add al, 0x22 ; cld ; call rsp
0x000000000041fe6a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000459114 : add al, 8 ; add byte ptr [rax], al ; clc ; and ah, bh ; call qword ptr [rdx]
0x0000000000458fcf : add al, al ; sti ; sti ; jmp qword ptr [rbx]
0x0000000000459117 : add al, bh ; and ah, bh ; call qword ptr [rdx]
0x000000000043fda9 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000043a419 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000458f07 : add al, bl ; idiv bl ; call qword ptr [rbx]
0x0000000000458bf5 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; in al, dx ; cli ; call qword ptr [rdx]
0x0000000000403281 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403dab : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043765d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004363e5 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000043bbe4 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000043eac3 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000043ffb3 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000043ef9b : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000432a26 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000438870 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004354e2 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x000000000043d0d7 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000043a507 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004373be : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000043f50f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004359a9 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x000000000041ab54 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000413749 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000403201 : add bh, bh ; ret 0x1589
0x0000000000457baf : add bl, dh ; ret
0x0000000000442502 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000442764 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000401c1f : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043cdd0 : add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000459113 : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; clc ; and ah, bh ; call qword ptr [rdx]
0x0000000000419faa : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4582
0x0000000000417eab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044299a : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000401c22 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043f4a7 : add byte ptr [rax - 0x77], cl ; ret 0x40e8
0x000000000043ef13 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000437e0f : add byte ptr [rax - 0x77], cl ; ret 0xd8e8
0x000000000045900f : add byte ptr [rax], ah ; cld ; jmp rsi
0x0000000000458726 : add byte ptr [rax], al ; add al, 0x22 ; cld ; call rsp
0x0000000000459112 : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; clc ; and ah, bh ; call qword ptr [rdx]
0x000000000041ab52 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000457bad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043cdce : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000442998 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000401c20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000457bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000457bac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004377eb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004057de : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000416952 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419313 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004034ca : add byte ptr [rax], al ; add byte ptr [rbx - 0x3dd233bb], cl ; int 0xd2
0x000000000042053c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000442c7c : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x0000000000442bcc : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000040388b : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ad227bb], cl ; ret 0xaf39
0x000000000041bc79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000449191 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x0000000000435bf4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000044942b : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x00000000004431c9 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret 0xd609
0x0000000000453065 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x0000000000442503 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000044936e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x0000000000442765 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000043f144 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x000000000041aac0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004418d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041f6d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004409e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000436a4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040701b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404e25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041f3e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041aa4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403f9b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405566 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040193d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000416eeb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416570 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ae7d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401d80 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401283 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000459116 : add byte ptr [rax], al ; clc ; and ah, bh ; call qword ptr [rdx]
0x00000000004586ae : add byte ptr [rax], al ; cld ; sti ; jmp rsp
0x0000000000458bf6 : add byte ptr [rax], al ; cmp ah, ch ; cli ; call qword ptr [rdx]
0x0000000000458d86 : add byte ptr [rax], al ; cmp al, dh ; sti ; jmp qword ptr [rbx]
0x00000000004590f6 : add byte ptr [rax], al ; cmp byte ptr [rax], ah ; cld ; call rdx
0x00000000004592d6 : add byte ptr [rax], al ; cmp byte ptr [rbp - 4], cl ; call rdi
0x0000000000458f06 : add byte ptr [rax], al ; fdiv st(6) ; sti ; call qword ptr [rbx]
0x0000000000458f02 : add byte ptr [rax], al ; hlt ; add eax, 0xf6d80000 ; sti ; call qword ptr [rbx]
0x00000000004587e6 : add byte ptr [rax], al ; hlt ; test bh, ah ; call rsp
0x0000000000458af2 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; mov ch, cl ; cli ; call qword ptr [rcx]
0x0000000000458bf2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; cmp ah, ch ; cli ; call qword ptr [rdx]
0x00000000004590f2 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; cmp byte ptr [rax], ah ; cld ; call rdx
0x000000000045862e : add byte ptr [rax], al ; je 0x45862e ; cli ; call rsp
0x00000000004587a6 : add byte ptr [rax], al ; je 0x4587e8 ; cld ; call rsp
0x0000000000458d82 : add byte ptr [rax], al ; je 0x458d93 ; add byte ptr [rax], al ; cmp al, dh ; sti ; jmp qword ptr [rbx]
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x00000000004035b3 : add byte ptr [rax], al ; jmp 0x403769
0x0000000000425eec : add byte ptr [rax], al ; jmp 0x432137
0x0000000000458af6 : add byte ptr [rax], al ; mov ch, cl ; cli ; call qword ptr [rcx]
0x0000000000458de6 : add byte ptr [rax], al ; mov cl, dh ; sti ; call rdi
0x0000000000442548 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000458fca : add byte ptr [rax], al ; mov esp, 0xc0000006 ; sti ; sti ; jmp qword ptr [rbx]
0x0000000000442d41 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000442999 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c21 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000459372 : add byte ptr [rax], al ; or al, byte ptr fs:[rax] ; add byte ptr [rax], ch ; jle 0x459380 ; jmp qword ptr [rcx]
0x00000000004211b9 : add byte ptr [rax], al ; or ecx, eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0x0000000000402045 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416953 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403282 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000457bae : add byte ptr [rax], al ; ret
0x0000000000458fce : add byte ptr [rax], al ; sar bl, -5 ; jmp qword ptr [rbx]
0x0000000000458ee6 : add byte ptr [rax], al ; sbb ch, dh ; sti ; call rdx
0x0000000000459376 : add byte ptr [rax], al ; sub byte ptr [rsi - 4], bh ; jmp qword ptr [rcx]
0x0000000000458826 : add byte ptr [rax], al ; test r15d, esi ; call rsp
0x00000000004590f7 : add byte ptr [rax], bh ; and ah, bh ; call rdx
0x00000000004592d7 : add byte ptr [rax], bh ; cld ; call rdi
0x0000000000458bf7 : add byte ptr [rax], bh ; in al, dx ; cli ; call qword ptr [rdx]
0x0000000000458ee7 : add byte ptr [rax], bl ; cmc ; sti ; call rdx
0x0000000000459377 : add byte ptr [rax], ch ; jle 0x45937b ; jmp qword ptr [rcx]
0x0000000000458827 : add byte ptr [rbp + rax*4 - 2], al ; call rsp
0x00000000004377ed : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004057e0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000416954 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403283 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004585ef : add byte ptr [rbx + rbx*8 - 6], dl ; call rsp
0x0000000000419315 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004192ca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004034cc : add byte ptr [rbx - 0x3dd233bb], cl ; int 0xd2
0x000000000042053e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000403c22 : add byte ptr [rbx - 0x5d227bb], cl ; loopne 0x403ca3 ; ret 0x8589
0x0000000000442c7e : add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x0000000000442bce : add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000040388d : add byte ptr [rbx - 0x6ad227bb], cl ; ret 0xaf39
0x000000000040384b : add byte ptr [rbx - 0x6bd227bb], cl ; ret 0xaf39
0x0000000000403bd7 : add byte ptr [rbx - 0x6d227bb], cl ; loopne 0x403c58 ; ret 0x8589
0x0000000000442549 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041bc7b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000449193 : add byte ptr [rcx + 0x29], al ; ret
0x0000000000435bf6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000432ad5 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x00000000004587a7 : add byte ptr [rcx + rdi - 4], dh ; call rsp
0x000000000044942d : add byte ptr [rcx - 0x7f], al ; ret
0x00000000004431cb : add byte ptr [rcx], ah ; ret 0xd609
0x000000000041abbe : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016f8 : add byte ptr [rcx], al ; ret
0x0000000000453067 : add byte ptr [rcx], al ; ret 0x6348
0x0000000000442505 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000449370 : add byte ptr [rcx], ch ; ret
0x0000000000442767 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000043f146 : add byte ptr [rcx], ch ; ret 0x8840
0x000000000041aac2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045862f : add byte ptr [rdi + rsi*8 - 6], dh ; call rsp
0x00000000004418d3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041f6d3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004409ea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000436a4e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040701d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404e27 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041f3e7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041aa4c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000403f9d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405568 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000459373 : add byte ptr [rdx + rcx], ah ; add byte ptr [rax], ch ; jle 0x45937f ; jmp qword ptr [rcx]
0x0000000000458727 : add byte ptr [rdx], al ; cld ; call rsp
0x0000000000458fcb : add byte ptr [rsi + rax - 0x4400000], bh ; sti ; jmp qword ptr [rbx]
0x00000000004586af : add byte ptr [rsp + rdi*8 - 5], ah ; jmp rsp
0x0000000000405565 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041387c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000425d9d : add cl, ch ; nop ; ret
0x0000000000425dd5 : add cl, ch ; pop rax ; ret
0x0000000000402615 : add cl, ch ; ret
0x000000000040193f : add cl, ch ; ret 0
0x0000000000403dad : add cl, ch ; ret 1
0x0000000000406c4a : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425e44 : add dword ptr [rax], eax ; jmp 0x432137
0x000000000043a2bf : add dword ptr [rbp + 0x48b97d43], ebp ; ret
0x0000000000405562 : add dword ptr [rcx + 0x2ef9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000405551 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000441a52 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000403725 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404723 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016f4 : add eax, 0x258b9e ; add ebx, esi ; ret
0x00000000004585ed : add eax, 0xdb540000 ; cli ; call rsp
0x0000000000458ee5 : add eax, 0xf5180000 ; sti ; call rdx
0x0000000000458f05 : add eax, 0xf6d80000 ; sti ; call qword ptr [rbx]
0x000000000043ffb1 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x00000000004016bb : add eax, edx ; sar rax, 1 ; jne 0x4016cc ; pop rbp ; ret
0x00000000004016f9 : add ebx, esi ; ret
0x000000000043a3b5 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000436c28 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x0000000000416eee : add esp, 0x10 ; pop rbp ; ret
0x000000000041abbc : add esp, 0x100 ; pop rbp ; ret
0x00000000004571b1 : add esp, 0x1750 ; pop rbp ; ret
0x000000000040575f : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004043db : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000405556 : add esp, 0x20 ; pop rbp ; ret
0x000000000040327e : add esp, 0x258 ; pop rbx ; pop rbp ; ret
0x000000000041ae80 : add esp, 0x40 ; pop rbp ; ret
0x0000000000420069 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401d83 : add esp, 0x50 ; pop rbp ; ret
0x000000000041bda0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000418262 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402041 : add esp, 0x80 ; pop rbp ; ret
0x000000000041c9c7 : add esp, 0x8f0 ; pop rbp ; ret
0x000000000041b4fd : add esp, 0x90 ; pop rbp ; ret
0x0000000000419046 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000404e7e : add esp, 0xb0 ; pop rbp ; ret
0x00000000004071fa : add esp, 0xd0 ; pop rbp ; ret
0x000000000042078e : add esp, 0xe0 ; pop rbp ; ret
0x000000000041d46f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000407803 : add esp, 8 ; pop rbp ; ret
0x0000000000401286 : add esp, 8 ; ret
0x00000000004016ba : add rax, rdx ; sar rax, 1 ; jne 0x4016cd ; pop rbp ; ret
0x0000000000416eed : add rsp, 0x10 ; pop rbp ; ret
0x000000000041abbb : add rsp, 0x100 ; pop rbp ; ret
0x00000000004571b0 : add rsp, 0x1750 ; pop rbp ; ret
0x000000000040575e : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004043da : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000405555 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040327d : add rsp, 0x258 ; pop rbx ; pop rbp ; ret
0x000000000041ae7f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000420068 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401d82 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041bd9f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000418261 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402040 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041c9c6 : add rsp, 0x8f0 ; pop rbp ; ret
0x000000000041b4fc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000419045 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404e7d : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004071f9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042078d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041d46e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000407802 : add rsp, 8 ; pop rbp ; ret
0x0000000000401285 : add rsp, 8 ; ret
0x0000000000459119 : and ah, bh ; call qword ptr [rdx]
0x00000000004590f9 : and ah, bh ; call rdx
0x0000000000425e42 : and al, 0x32 ; add dword ptr [rax], eax ; jmp 0x432139
0x000000000044250d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000403724 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404722 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000458729 : and bh, ah ; call rsp
0x00000000004211b7 : and byte ptr [rax], al ; add byte ptr [rax], al ; or ecx, eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0x000000000041b9ab : and byte ptr [rsi + 0x58], ah ; jb 0x41b9e2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043ac07 : and dl, byte ptr [rdi] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000412ab1 : and eax, 0x75b4b9d3 ; ret
0x000000000043a504 : and eax, 0xc700005e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000044470c : and ebx, dword ptr [rbx + 0x6a] ; ret 0x8589
0x000000000043b299 : and esp, dword ptr [rax - 4] ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041bda5 : call 0x41be69
0x00000000004564fd : call 0x4427c2
0x0000000000420add : call 0xffffffffaca2cd11
0x0000000000420adc : call 0xffffffffaca2cd12
0x000000000041c268 : call 0xffffffffd141c267
0x0000000000416569 : call 0xffffffffe903eeb9
0x0000000000416568 : call 0xffffffffe903eeba
0x0000000000457b89 : call qword ptr [r12 + rbx*8]
0x0000000000437663 : call qword ptr [rax]
0x0000000000417d2e : call qword ptr [rbx]
0x000000000042010c : call qword ptr [rcx]
0x00000000004159f4 : call qword ptr [rdi]
0x00000000004119db : call qword ptr [rdx]
0x0000000000455fe3 : call qword ptr [rsi]
0x0000000000457b8a : call qword ptr [rsp + rbx*8]
0x000000000040171d : call rax
0x0000000000454c8d : call rbx
0x0000000000413c5b : call rcx
0x0000000000415634 : call rdi
0x0000000000414e65 : call rdx
0x000000000043ffb9 : call rsi
0x000000000043e83f : call rsp
0x0000000000420067 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000405122 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041c1f9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000459118 : clc ; and ah, bh ; call qword ptr [rdx]
0x00000000004016bf : clc ; jne 0x4016c8 ; pop rbp ; ret
0x0000000000417eaf : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044299e : clc ; pop rbp ; ret
0x0000000000442af3 : clc ; pop rbx ; pop rbp ; ret
0x000000000040903d : clc ; ret 0x77a8
0x000000000042111e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041d46d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000045911a : cld ; call qword ptr [rdx]
0x00000000004592da : cld ; call rdi
0x00000000004590fa : cld ; call rdx
0x000000000045872a : cld ; call rsp
0x000000000043e299 : cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000043caec : cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000043def4 : cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000439366 : cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004389e8 : cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000040580f : cld ; jmp 0x40587c
0x000000000040580e : cld ; jmp 0x40587d
0x000000000045937a : cld ; jmp qword ptr [rcx]
0x0000000000459012 : cld ; jmp rsi
0x0000000000458722 : cld ; ljmp ptr [rdx + rcx + 0x22040000] ; cld ; call rsp
0x00000000004587e2 : cld ; push qword ptr [rbp + rcx - 0x7b0c0000] ; cld ; call rsp
0x0000000000458762 : cld ; push qword ptr [rbx + rcx + 0x2fd40000] ; cld ; call rsp
0x00000000004587a2 : cld ; push qword ptr [rsp + rcx + 0x39740000] ; cld ; call rsp
0x00000000004586b1 : cld ; sti ; jmp rsp
0x0000000000458afa : cli ; call qword ptr [rcx]
0x0000000000458bfa : cli ; call qword ptr [rdx]
0x00000000004589da : cli ; call rsi
0x00000000004585b2 : cli ; call rsp
0x0000000000403c27 : cli ; loopne 0x403c9e ; ret 0x8589
0x00000000004043b1 : cli ; loopne 0x404428 ; ret 0x52b9
0x000000000041b9b0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004585ea : cli ; push qword ptr [rbp + rax - 0x24ac0000] ; cli ; call rsp
0x000000000045862a : cli ; push qword ptr [rsi + rax - 0x88c0000] ; cli ; call rsp
0x00000000004585aa : cli ; push qword ptr [rsp + rax - 0x3e0c0000] ; cli ; call rsp
0x000000000044250c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041a8cb : cmc ; ret 0x4f0b
0x0000000000458ee9 : cmc ; sti ; call rdx
0x0000000000458bf8 : cmp ah, ch ; cli ; call qword ptr [rdx]
0x0000000000419fad : cmp al, 0x25 ; ret 0x4582
0x0000000000458d88 : cmp al, dh ; sti ; jmp qword ptr [rbx]
0x00000000004590f8 : cmp byte ptr [rax], ah ; cld ; call rdx
0x00000000004592d8 : cmp byte ptr [rbp - 4], cl ; call rdi
0x0000000000455937 : cmp byte ptr [rcx - 0x1f743], al ; call qword ptr [rax]
0x000000000041aa61 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004470ab : cmp eax, 0xb8000025 ; mov ebp, ecx ; ret
0x000000000040167d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401690 ; pop rbp ; ret
0x0000000000456161 : cmp eax, 0xe9b845c2 ; ret
0x000000000044773f : cmp edi, ebp ; cwde ; jmp 0x4495f5
0x000000000043c181 : cmp edx, dword ptr [rcx - 4] ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000413907 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004587a9 : cmp esp, edi ; call rsp
0x0000000000427a8a : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcc39
0x0000000000427ade : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xcc39
0x0000000000447741 : cwde ; jmp 0x4495f3
0x00000000004470a9 : cwde ; jmp 0x4495f5
0x000000000043b4d5 : cwde ; ret 0x2eb9
0x0000000000426be4 : cwde ; ret 0x8589
0x0000000000432f81 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000412e0b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041277e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000043ef10 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000412f83 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000043e954 : dec dword ptr [rax - 0x77] ; adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000041badd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004574b1 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041fbc6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004041f3 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x0000000000403082 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004496a0 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000044966e : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000452111 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000453c3e : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000447c68 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000452323 : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000045577c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004478db : dec dword ptr [rcx - 0x7628d639] ; ret 0xea81
0x0000000000454cee : dec dword ptr [rcx - 0x7f] ; ret
0x0000000000454d9e : dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000041a8c6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000425d97 : dec dword ptr [rdi] ; test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x000000000042f2c7 : dec dword ptr [rdi] ; test al, bl ; ret
0x00000000004497d2 : dec dword ptr [rdi] ; test bl, ch ; ret
0x000000000040260f : dec dword ptr [rdi] ; test byte ptr [rbx + rcx], dl ; add cl, ch ; ret
0x0000000000425ee7 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000043184b : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret
0x0000000000408d1a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000425e3f : dec dword ptr [rdi] ; test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x43213c
0x0000000000403da7 : dec dword ptr [rdi] ; test cl, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042a19f : dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000456acf : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x000000000041f9f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000043ed49 : dec ebp ; or ch, dh ; ret 0xdae9
0x000000000041f649 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407019 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000458f08 : fdiv st(6) ; sti ; call qword ptr [rbx]
0x000000000043fae2 : ficom dword ptr [rdi] ; cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000044923d : fild dword ptr [rcx - 0x7f] ; ret 8
0x0000000000455926 : fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x0000000000432a24 : fld dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000440ac8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000420227 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000420228 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004404d2 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000044d71d : fmul dword ptr [rdx - 0x6a] ; ret
0x0000000000457b8c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000458f04 : hlt ; add eax, 0xf6d80000 ; sti ; call qword ptr [rbx]
0x000000000041adb3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042078c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407801 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401690 : hlt ; pop rbp ; mov edi, 0x65a260 ; jmp rax
0x00000000004587e8 : hlt ; test bh, ah ; call rsp
0x0000000000458f09 : idiv bl ; call qword ptr [rbx]
0x000000000043d962 : idiv byte ptr [rcx + rsi*8 - 0x17] ; ret
0x000000000041c269 : idiv edi ; call rax
0x000000000041badb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041c787 : idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000458631 : idiv edx ; call rsp
0x0000000000437fa8 : in al, -0x7f ; ret 0xfff7
0x000000000041cdb1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000458af4 : in al, 1 ; add byte ptr [rax], al ; mov ch, cl ; cli ; call qword ptr [rcx]
0x0000000000458bf4 : in al, 2 ; add byte ptr [rax], al ; cmp ah, ch ; cli ; call qword ptr [rdx]
0x00000000004590f4 : in al, 7 ; add byte ptr [rax], al ; cmp byte ptr [rax], ah ; cld ; call rdx
0x000000000041c9c5 : in al, dx ; add rsp, 0x8f0 ; pop rbp ; ret
0x0000000000458bf9 : in al, dx ; cli ; call qword ptr [rdx]
0x0000000000401a5d : in al, dx ; jmp 0x401c7b
0x0000000000420b9c : in al, dx ; jmp 0x420c19
0x0000000000420b9b : in al, dx ; jmp 0x420c1a
0x0000000000401c25 : in al, dx ; pop rbp ; ret
0x000000000042a19d : in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000425eeb : in eax, 0 ; add cl, ch ; ret 0
0x000000000043403c : in eax, dx ; ret 0
0x00000000004530f2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043f393 : inc dword ptr [rax] ; ret
0x0000000000432af4 : inc dword ptr [rbp + 0xf] ; ret
0x000000000043a77b : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000402c1e : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000041c789 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x0000000000437fa2 : inc dword ptr [rcx - 0x1cb46e16] ; in al, -0x7f ; ret 0xfff7
0x0000000000449236 : inc dword ptr [rcx - 0x7f] ; ret 0xc350
0x000000000043e29a : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000043caed : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000043e656 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000043963e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000043f38d : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x000000000043def5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000439367 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043ebf5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000437369 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000043f345 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000436cae : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004586ab : inc esp ; or byte ptr [rax], al ; add byte ptr [rsp + rdi*8 - 5], ah ; jmp rsp
0x0000000000418a17 : int 0x5b
0x0000000000450fe1 : int1 ; ret 0x43ce
0x00000000004567a5 : int1 ; ret 0x81e9
0x000000000044d6af : int1 ; ret 0x8589
0x000000000045673f : int1 ; ret 0x8b48
0x0000000000458de9 : int1 ; sti ; call rdi
0x00000000004505d1 : int1 ; xchg eax, esp ; ret
0x000000000043765a : iretd ; mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000401683 : ja 0x40168a ; pop rbp ; ret
0x0000000000439f72 : jae 0x439f78 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000439f71 : jae 0x439f79 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041b9ae : jb 0x41b9df ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000426bab : jbe 0x426bef ; ret 0x8589
0x0000000000426bff : jbe 0x426c43 ; ret 0x8589
0x000000000043655b : jbe 0x43659f ; ret 0x1db9
0x0000000000439c14 : jbe 0x439c1a ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043f0c5 : jbe 0x43f109 ; ret 0x8948
0x000000000040168f : je 0x40168d ; pop rbp ; mov edi, 0x65a260 ; jmp rax
0x0000000000425ee8 : je 0x434489 ; jmp 0x43213b
0x0000000000425e40 : je 0x439072 ; jmp 0x43213b
0x0000000000425f20 : je 0x43b6c4 ; jmp 0x43213b
0x0000000000425e78 : je 0x43dc3e ; jmp 0x43213b
0x0000000000425eb0 : je 0x43ea93 ; jmp 0x43213b
0x0000000000458630 : je 0x45862c ; cli ; call rsp
0x00000000004587a8 : je 0x4587e6 ; cld ; call rsp
0x0000000000458d84 : je 0x458d91 ; add byte ptr [rax], al ; cmp al, dh ; sti ; jmp qword ptr [rbx]
0x000000000041c96a : jg 0x41c97e ; xchg eax, edi ; ret 0xd284
0x0000000000439365 : jg 0x43936b ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043f6d4 : jg 0x43f6a3 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000411ea6 : jge 0x411e2b ; ret 0xffd5
0x0000000000412970 : jge 0x412950 ; shr cl, cl ; ret 0x3b
0x000000000043a2c2 : jge 0x43a280 ; ret
0x000000000043a2c1 : jge 0x43a281 ; ret
0x000000000044d6ad : jge 0x44d64c ; int1 ; ret 0x8589
0x00000000004395f1 : jl 0x4395f7 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000044d701 : jle 0x44d6a0 ; int1 ; ret 0x8589
0x000000000045673d : jle 0x4566dc ; int1 ; ret 0x8b48
0x00000000004567a3 : jle 0x456742 ; int1 ; ret 0x81e9
0x0000000000459379 : jle 0x459379 ; jmp qword ptr [rcx]
0x00000000004013fb : jmp 0x401297
0x0000000000401a5e : jmp 0x401c7a
0x00000000004035b5 : jmp 0x403767
0x0000000000404392 : jmp 0x4044ff
0x00000000004044ed : jmp 0x404501
0x0000000000405810 : jmp 0x40587b
0x00000000004130c0 : jmp 0x416540
0x0000000000410fc4 : jmp 0x416541
0x0000000000412391 : jmp 0x416542
0x0000000000419ceb : jmp 0x41a757
0x0000000000419c28 : jmp 0x41a759
0x0000000000419fa6 : jmp 0x41a75a
0x000000000041bd53 : jmp 0x41bdb8
0x000000000041ff06 : jmp 0x4201e8
0x0000000000420b9d : jmp 0x420c18
0x0000000000425e46 : jmp 0x432135
0x000000000043403b : jmp 0x44032f
0x000000000043690d : jmp 0x440333
0x00000000004334bb : jmp 0x440334
0x00000000004342a2 : jmp 0x440335
0x0000000000442d07 : jmp 0x442d58
0x0000000000447742 : jmp 0x4495f2
0x0000000000446814 : jmp 0x4495f3
0x00000000004470aa : jmp 0x4495f4
0x0000000000454c2e : jmp 0x457b34
0x0000000000453d20 : jmp 0x457b35
0x000000000041a8ca : jmp 0x4f4d6bc6
0x000000000043eb46 : jmp 0xfffffffff6c56155
0x000000000043eb45 : jmp 0xfffffffff6c56156
0x0000000000415e95 : jmp qword ptr [rax]
0x000000000043f1b4 : jmp qword ptr [rbx]
0x00000000004031a4 : jmp qword ptr [rcx]
0x0000000000413b47 : jmp qword ptr [rdi]
0x000000000041ab5a : jmp qword ptr [rdx]
0x0000000000438876 : jmp qword ptr [rsi]
0x0000000000401697 : jmp rax
0x0000000000412498 : jmp rbx
0x0000000000412eca : jmp rcx
0x00000000004124f2 : jmp rdi
0x00000000004016d7 : jmp rdx
0x000000000043f34b : jmp rsi
0x00000000004127a8 : jmp rsp
0x00000000004016c0 : jne 0x4016c7 ; pop rbp ; ret
0x0000000000448e05 : jno 0x448dc4 ; ror dword ptr [rcx], 1 ; ret
0x00000000004398eb : jns 0x4398f1 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004031ff : jo 0x40322a ; add bh, bh ; ret 0x1589
0x000000000040bdbe : jo 0x40bdca ; ret
0x000000000040da2e : jo 0x40da3a ; ret
0x0000000000410f7d : jo 0x410f89 ; ret
0x0000000000418264 : jo 0x4182c5 ; ret
0x000000000043a1fd : jo 0x43a203 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043886e : jp 0x438878 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000448e03 : jp 0x448de0 ; jno 0x448dc6 ; ror dword ptr [rcx], 1 ; ret
0x0000000000436c2e : lcall ptr [rbx + 0x47] ; ret
0x000000000041296e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004359af : lcall ptr [rdx] ; ret 0x4fab
0x0000000000413a6e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000406016 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004086b5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000418559 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000442af1 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004086b4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000442af0 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043f0c3 : ljmp ptr [rcx] ; jbe 0x43f10b ; ret 0x8948
0x00000000004112ce : ljmp ptr [rdi] ; ret 0x23da
0x0000000000458723 : ljmp ptr [rdx + rcx + 0x22040000] ; cld ; call rsp
0x0000000000458724 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rdx], al ; cld ; call rsp
0x000000000043a2c0 : lodsd eax, dword ptr [rsi] ; jge 0x43a282 ; ret
0x00000000004142d5 : loope 0x4142a3 ; jmp 0x416543
0x0000000000403bdd : loopne 0x403c52 ; ret 0x8589
0x0000000000403c28 : loopne 0x403c9d ; ret 0x8589
0x00000000004043b2 : loopne 0x404427 ; ret 0x52b9
0x00000000004086b3 : loopne 0x408706 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000417c5d : loopne 0x417cc3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419044 : loopne 0x419097 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041b413 : loopne 0x41b41c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041bd9e : loopne 0x41bdee ; add esp, 0x60 ; pop rbp ; ret
0x000000000041bd9d : loopne 0x41bdef ; add esp, 0x60 ; pop rbp ; ret
0x0000000000420790 : loopne 0x420797 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421122 : loopne 0x421129 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044254c : loopne 0x44259b ; mov esp, ebp ; pop rbp ; ret
0x000000000044254b : loopne 0x44259c ; mov esp, ebp ; pop rbp ; ret
0x000000000044279c : loopne 0x4427eb ; mov esp, ebp ; pop rbp ; ret
0x000000000044279b : loopne 0x4427ec ; mov esp, ebp ; pop rbp ; ret
0x000000000044313f : loopne 0x4430d3 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044313e : loopne 0x4430d4 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000435560 : mov ah, -0x50 ; out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x0000000000411e9d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411f77 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040ff25 : mov ah, 0x75 ; ret
0x00000000004587a4 : mov ah, 0xc ; add byte ptr [rax], al ; je 0x4587ea ; cld ; call rsp
0x00000000004587e4 : mov ah, 0xd ; add byte ptr [rax], al ; hlt ; test bh, ah ; call rsp
0x0000000000458824 : mov ah, 0xe ; add byte ptr [rax], al ; test r15d, esi ; call rsp
0x000000000045862c : mov ah, 6 ; add byte ptr [rax], al ; je 0x458630 ; cli ; call rsp
0x0000000000418a33 : mov al, -0x47 ; ret
0x000000000041f6cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404e80 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000452800 : mov al, 0x21 ; ret 0x8941
0x0000000000440dbd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000440a8a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040471f : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a4d : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000446812 : mov bh, -0x6d ; jmp 0x4495f5
0x0000000000435565 : mov bl, -0x2e ; ret 0x1b2
0x0000000000426c1b : mov bl, -0x2e ; ret 0x8589
0x0000000000435581 : mov bl, -0x2e ; ret 0x8b48
0x00000000004098c5 : mov bl, 0x75 ; ret
0x0000000000401938 : mov byte ptr [r15], r9b ; test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000401939 : mov byte ptr [rdi], cl ; test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004016f3 : mov byte ptr [rip + 0x258b9e], 1 ; ret
0x000000000041171f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000458af8 : mov ch, cl ; cli ; call qword ptr [rcx]
0x00000000004435c4 : mov ch, cl ; ret
0x00000000004334b9 : mov cl, 0x13 ; jmp 0x440336
0x00000000004484ca : mov cl, 0x13 ; ret 0x1ab9
0x00000000004492e3 : mov cl, 0x13 ; ret 0x1e9
0x0000000000444729 : mov cl, 0x13 ; ret 0x8589
0x0000000000458de8 : mov cl, dh ; sti ; call rdi
0x0000000000406c4d : mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405553 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000441a54 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000403727 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404725 : mov dh, -0x40 ; pop rbp ; ret
0x000000000044250a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000441781 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000407e39 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407a0f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420b9a : mov dword ptr [rbp - 0x14], eax ; jmp 0x420c1b
0x0000000000434068 : mov dword ptr [rbp - 0x49c], eax ; jmp 0x440335
0x0000000000419ce8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x41a75a
0x000000000041adb1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408116 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004211bd : mov dword ptr [rdi], ecx ; pop rbp ; ret
0x0000000000407cbd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000407539 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041bc1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000442aed : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041bdee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040661e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000420a15 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407e3c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041bd9c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044313d : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044254a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407cbf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000442d44 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004077ff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000417ead : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044299c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407cbe : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004146d8 : mov ebp, 0xe19c53ba ; ret
0x00000000004564f8 : mov ebp, 0xfffffe00 ; call 0x4427c7
0x000000000044637c : mov ebp, ecx ; ret
0x000000000040171b : mov ebp, esp ; call rax
0x0000000000401681 : mov ebp, esp ; ja 0x40168c ; pop rbp ; ret
0x0000000000452922 : mov ebx, 0x214efb6f ; ret 0x8941
0x00000000004555ee : mov ebx, 0x81ffffff ; ret 0x8ae1
0x0000000000407a0c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401715 : mov edi, 0x659e20 ; mov rbp, rsp ; call rax
0x0000000000401692 : mov edi, 0x65a260 ; jmp rax
0x00000000004016d2 : mov edi, 0x65a260 ; jmp rdx
0x0000000000410f77 : mov edi, 0xb8000055 ; wait ; jo 0x410f8f ; ret
0x00000000004564f7 : mov edi, dword ptr [rbp - 0x200] ; call 0x4427c8
0x0000000000457b87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004389e7 : mov edi, esp ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000457b86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000045734c : mov edx, 0x2144b57b ; ret 0x8941
0x000000000041fe7e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041173b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000043def2 : mov edx, 0xc7fffc33 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000457561 : mov edx, 0xe9b9f505 ; ret
0x00000000004125b2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041fe67 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004016d0 : mov esi, eax ; mov edi, 0x65a260 ; jmp rdx
0x0000000000442c3f : mov esp, 0xb898e02d ; ret
0x0000000000458fcc : mov esp, 0xc0000006 ; sti ; sti ; jmp qword ptr [rbx]
0x000000000043886d : mov esp, 0xc700007a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000401c24 : mov esp, ebp ; pop rbp ; ret
0x0000000000408115 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000442c3e : mov r12d, 0xb898e02d ; ret
0x0000000000407538 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041bc1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041bded : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040661d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041bd9b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000442d43 : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000417eac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044299b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040171a : mov rbp, rsp ; call rax
0x0000000000401680 : mov rbp, rsp ; ja 0x40168d ; pop rbp ; ret
0x00000000004564f6 : mov rdi, qword ptr [rbp - 0x200] ; call 0x4427c9
0x00000000004016cf : mov rsi, rax ; mov edi, 0x65a260 ; jmp rdx
0x0000000000401c23 : mov rsp, rbp ; pop rbp ; ret
0x000000000041b9b1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043765b : mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004321e8 : movabs al, byte ptr [0x8348e28948fffffb] ; ret 0x48f0
0x000000000043240b : movabs al, byte ptr [0x8348e28948fffffc] ; ret 0x48f0
0x000000000043262b : movabs al, byte ptr [0x8348e28948fffffd] ; ret 0x48f0
0x000000000040d218 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000043ac1b : movabs eax, dword ptr [0xfffb6485c7fffc66] ; jmp qword ptr [rdx]
0x0000000000426d4e : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rbx, esp ; ret
0x0000000000410465 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000042d393 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000437861 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x0000000000440701 : movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426cfb : movsxd rbx, esp ; ret
0x0000000000405552 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000441a53 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000403726 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404724 : movzx eax, al ; pop rbp ; ret
0x0000000000406c4c : movzx eax, dh ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406c4b : movzx eax, sil ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fc78 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409705 : nop ; ret
0x0000000000417b12 : nop ; ret 0x148
0x0000000000417b26 : nop ; ret 0x2948
0x0000000000457ba8 : nop dword ptr [rax + rax] ; ret
0x0000000000449423 : not byte ptr [rdx - 0x7ebe5362] ; ret
0x00000000004587a5 : or al, 0 ; add byte ptr [rcx + rdi - 4], dh ; call rsp
0x0000000000411e9a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411f74 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042b3f6 : or al, 0x7a ; ret 0x8909
0x0000000000432fbd : or al, 0x7a ; ret 0xb909
0x0000000000425d9b : or al, 1 ; add cl, ch ; nop ; ret
0x0000000000459375 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; jle 0x45937d ; jmp qword ptr [rcx]
0x0000000000458725 : or al, byte ptr [rax] ; add byte ptr [rdx], al ; cld ; call rsp
0x0000000000459374 : or al, byte ptr fs:[rax] ; add byte ptr [rax], ch ; jle 0x45937e ; jmp qword ptr [rcx]
0x0000000000407a10 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000453663 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000459115 : or byte ptr [rax], al ; add al, bh ; and ah, bh ; call qword ptr [rdx]
0x00000000004192c8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004586ad : or byte ptr [rax], al ; add byte ptr [rsp + rdi*8 - 5], ah ; jmp rsp
0x0000000000426c53 : or ch, dh ; ret 0x8589
0x000000000043591b : or ch, dh ; ret 0xa2b9
0x000000000043ed4b : or ch, dh ; ret 0xdae9
0x0000000000412f86 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000408114 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004592d5 : or dword ptr [rax], eax ; add byte ptr [rax], bh ; cld ; call rdi
0x000000000043b5b3 : or dword ptr [rbp - 4], ebx ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000442d3f : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000442997 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004587e5 : or eax, 0x84f40000 ; cld ; call rsp
0x0000000000402613 : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000455928 : or ebp, ecx ; jmp qword ptr [rcx]
0x00000000004211bb : or ecx, eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0x0000000000434038 : or ecx, edx ; stosd dword ptr [rdi], eax ; jmp 0x440332
0x0000000000407cbb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000448e21 : out -0x47, al ; ror dword ptr [rcx], 1 ; ret
0x0000000000435562 : out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000041387b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000440a8c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426c54 : out dx, al ; ret 0x8589
0x000000000042377e : out dx, al ; ret 0x895e
0x000000000043591c : out dx, al ; ret 0xa2b9
0x000000000043ed4c : out dx, al ; ret 0xdae9
0x0000000000440dbf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000418a32 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000430f66 : out dx, eax ; ret 0x895e
0x0000000000435274 : out dx, eax ; ret 0xe95e
0x000000000041fe69 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004373bb : outsb dx, byte ptr [rsi] ; pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000414965 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004095b6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004149b0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041ab51 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000431d3a : outsd dx, dword ptr [rsi] ; ret 0
0x000000000041fe6c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041b9ac : pop ax ; jb 0x41b9e1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004373bc : pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000415819 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000457b9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000417c5f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041581b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000457b9e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041581d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000457ba0 : pop r14 ; pop r15 ; ret
0x00000000004086b9 : pop r14 ; pop rbp ; ret
0x000000000041581f : pop r15 ; pop rbp ; ret
0x0000000000457ba2 : pop r15 ; ret
0x0000000000403280 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b9ad : pop rax ; jb 0x41b9e0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000439364 : pop rax ; jg 0x43936c ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000425dd7 : pop rax ; ret
0x000000000043b5b4 : pop rbp ; cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004016f2 : pop rbp ; mov byte ptr [rip + 0x258b9e], 1 ; ret
0x0000000000401691 : pop rbp ; mov edi, 0x65a260 ; jmp rax
0x00000000004016ce : pop rbp ; mov rsi, rax ; mov edi, 0x65a260 ; jmp rdx
0x0000000000457b9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041581c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000457b9f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000411722 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040d9f5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041173e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401685 : pop rbp ; ret
0x0000000000417c5e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416955 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004086b8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403284 : pop rbx ; pop rbp ; ret
0x00000000004192d0 : pop rbx ; ret
0x0000000000411723 : pop rcx ; ret 0x1b2
0x000000000040bdf6 : pop rcx ; ret 0x8589
0x000000000041173f : pop rcx ; ret 0x8b48
0x0000000000413a70 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000415820 : pop rdi ; pop rbp ; ret
0x0000000000457ba3 : pop rdi ; ret
0x0000000000421312 : pop rdx ; ret
0x000000000041581e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000457ba1 : pop rsi ; pop r15 ; ret
0x00000000004086ba : pop rsi ; pop rbp ; ret
0x000000000041581a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000457b9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000417c60 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bdf5 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004418d5 : popfq ; ret 0xd284
0x0000000000454cea : popfq ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x0000000000411720 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041390a : push -0x75425eeb ; push rbp ; ret
0x0000000000410468 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004585eb : push qword ptr [rbp + rax - 0x24ac0000] ; cli ; call rsp
0x00000000004587e3 : push qword ptr [rbp + rcx - 0x7b0c0000] ; cld ; call rsp
0x0000000000458763 : push qword ptr [rbx + rcx + 0x2fd40000] ; cld ; call rsp
0x000000000043d960 : push qword ptr [rdx - 0x160e830a] ; ret
0x000000000045862b : push qword ptr [rsi + rax - 0x88c0000] ; cli ; call rsp
0x00000000004585ab : push qword ptr [rsp + rax - 0x3e0c0000] ; cli ; call rsp
0x00000000004587a3 : push qword ptr [rsp + rcx + 0x39740000] ; cld ; call rsp
0x000000000043f143 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000401d85 : push rax ; pop rbp ; ret
0x0000000000433fd9 : push rax ; ret
0x0000000000444728 : push rbp ; mov cl, 0x13 ; ret 0x8589
0x0000000000401714 : push rbp ; mov edi, 0x659e20 ; mov rbp, rsp ; call rax
0x000000000041390f : push rbp ; ret
0x00000000004138a6 : push rbp ; ret 0xd284
0x000000000041c263 : push rbp ; ror byte ptr [rax - 0x39], 1 ; test ebp, eax ; idiv edi ; call rax
0x0000000000411e9f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411f79 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043d0d4 : push rbp ; xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000043c182 : push rcx ; cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000425f23 : push rdi ; add dword ptr [rax], eax ; jmp 0x432138
0x000000000042d3e6 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000437860 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000041fe6b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042a356 : push rdi ; ret
0x00000000004484c9 : push rsi ; mov cl, 0x13 ; ret 0x1ab9
0x00000000004492e2 : push rsi ; mov cl, 0x13 ; ret 0x1e9
0x0000000000445330 : push rsi ; mov cl, 0x13 ; ret 0x8589
0x000000000042d392 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x000000000042a302 : push rsi ; ret
0x000000000043bebc : push rsp ; cld ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000402612 : push rsp ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004340d5 : push rsp ; ret 0
0x0000000000455925 : pushfq ; fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x000000000041f6d5 : pushfq ; ret 0xd284
0x000000000043b11b : pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000401289 : ret
0x0000000000401941 : ret 0
0x00000000004496a3 : ret 0x10
0x000000000042879a : ret 0x103
0x0000000000425202 : ret 0x111
0x0000000000429fe2 : ret 0x135
0x0000000000417b13 : ret 0x148
0x00000000004553d1 : ret 0x14e9
0x0000000000403203 : ret 0x1589
0x0000000000414a74 : ret 0x1a
0x00000000004484cc : ret 0x1ab9
0x0000000000409ced : ret 0x1add
0x0000000000411725 : ret 0x1b2
0x0000000000443dc1 : ret 0x1dad
0x000000000043655d : ret 0x1db9
0x0000000000445304 : ret 0x1e
0x00000000004492e5 : ret 0x1e9
0x0000000000455b67 : ret 0x1f
0x0000000000449671 : ret 0x20
0x00000000004200c8 : ret 0x22e8
0x000000000040a63a : ret 0x23da
0x0000000000401602 : ret 0x258b
0x0000000000401402 : ret 0x258c
0x000000000044c159 : ret 0x273b
0x0000000000417338 : ret 0x279e
0x0000000000412f89 : ret 0x2948
0x0000000000413a74 : ret 0x2a
0x0000000000411ea2 : ret 0x2d50
0x000000000043b4d6 : ret 0x2eb9
0x000000000041f9ce : ret 0x3040
0x00000000004377f0 : ret 0x3141
0x0000000000450fed : ret 0x33
0x0000000000412974 : ret 0x3b
0x000000000040f9d5 : ret 0x3e
0x000000000043f4aa : ret 0x40e8
0x000000000044a832 : ret 0x43ce
0x0000000000419faf : ret 0x4582
0x0000000000401886 : ret 0x4589
0x0000000000412e11 : ret 0x4802
0x0000000000447d7e : ret 0x4810
0x00000000004050a1 : ret 0x4813
0x000000000041fe6e : ret 0x4815
0x0000000000414966 : ret 0x4861
0x0000000000401a34 : ret 0x48f0
0x000000000040d221 : ret 0x4b
0x0000000000437fb0 : ret 0x4b91
0x0000000000418837 : ret 0x4cc0
0x0000000000415878 : ret 0x4cf0
0x000000000041a8cc : ret 0x4f0b
0x000000000042fee3 : ret 0x4fab
0x00000000004043b4 : ret 0x52b9
0x0000000000451939 : ret 0x54
0x0000000000407c6b : ret 0x5589
0x0000000000401a6c : ret 0x558a
0x000000000041212a : ret 0x5966
0x0000000000451b69 : ret 0x5b
0x0000000000419527 : ret 0x5bc6
0x000000000044250f : ret 0x61
0x0000000000453069 : ret 0x6348
0x00000000004449ac : ret 0x6620
0x0000000000409386 : ret 0x6a8a
0x000000000040903e : ret 0x77a8
0x000000000040a1a1 : ret 0x7a8a
0x0000000000410e1b : ret 0x7b7f
0x00000000004177ca : ret 0x8041
0x0000000000417a12 : ret 0x8141
0x000000000041fbc9 : ret 0x8148
0x00000000004567a6 : ret 0x81e9
0x0000000000412d34 : ret 0x822d
0x0000000000402c22 : ret 0x8445
0x00000000004353cb : ret 0x8548
0x0000000000403bdf : ret 0x8589
0x0000000000402f44 : ret 0x858a
0x000000000043f148 : ret 0x8840
0x00000000004041f6 : ret 0x8844
0x000000000042b3a4 : ret 0x8909
0x000000000042d394 : ret 0x8923
0x000000000042d5fc : ret 0x8925
0x0000000000409db3 : ret 0x8940
0x0000000000438230 : ret 0x8941
0x0000000000404349 : ret 0x8948
0x000000000041e48f : ret 0x894a
0x0000000000423780 : ret 0x895e
0x00000000004095b7 : ret 0x8961
0x0000000000449fab : ret 0x8962
0x0000000000449d97 : ret 0x896c
0x000000000041fa88 : ret 0x8a44
0x000000000041f985 : ret 0x8a4a
0x00000000004555f3 : ret 0x8ae1
0x0000000000411741 : ret 0x8b48
0x0000000000421de6 : ret 0x8cbc
0x00000000004430a5 : ret 0x941
0x0000000000436c67 : ret 0x96
0x000000000043f867 : ret 0xa
0x000000000043591d : ret 0xa2b9
0x0000000000411f7c : ret 0xa30b
0x0000000000420adf : ret 0xac60
0x0000000000403851 : ret 0xaf39
0x0000000000448f37 : ret 0xafe9
0x0000000000403085 : ret 0xb0
0x0000000000445f70 : ret 0xb38e
0x0000000000413880 : ret 0xb740
0x0000000000434a67 : ret 0xb8
0x0000000000456162 : ret 0xb845
0x000000000041b9a7 : ret 0xb848
0x0000000000432fbf : ret 0xb909
0x0000000000437862 : ret 0xb923
0x000000000043b140 : ret 0xb925
0x0000000000411ab0 : ret 0xb940
0x000000000041f912 : ret 0xb94a
0x0000000000452ec7 : ret 0xb962
0x00000000004528cc : ret 0xb96c
0x0000000000403916 : ret 0xbd10
0x0000000000413efc : ret 0xbf48
0x00000000004016b5 : ret 0xc148
0x0000000000449239 : ret 0xc350
0x0000000000426cc3 : ret 0xc3d7
0x0000000000442752 : ret 0xc493
0x0000000000427663 : ret 0xc8c6
0x00000000004404d8 : ret 0xca20
0x0000000000440a49 : ret 0xca21
0x0000000000454f86 : ret 0xca29
0x0000000000427a8b : ret 0xcc39
0x0000000000444028 : ret 0xcc41
0x0000000000442515 : ret 0xccb2
0x0000000000403fa0 : ret 0xd284
0x00000000004034d1 : ret 0xd2cd
0x000000000042b793 : ret 0xd4d
0x00000000004431cd : ret 0xd609
0x000000000041e0d5 : ret 0xd618
0x0000000000454d8f : ret 0xd709
0x0000000000425912 : ret 0xd803
0x0000000000437e12 : ret 0xd8e8
0x000000000043ed4d : ret 0xdae9
0x000000000043e41e : ret 0xdce8
0x00000000004366f4 : ret 0xdf79
0x0000000000404e2a : ret 0xe280
0x000000000043fc5b : ret 0xe925
0x0000000000413752 : ret 0xe940
0x0000000000435276 : ret 0xe95e
0x00000000004149b1 : ret 0xe961
0x0000000000457420 : ret 0xe962
0x000000000040a7dd : ret 0xea51
0x0000000000442507 : ret 0xea81
0x000000000041656c : ret 0xee8
0x0000000000407ca5 : ret 0xf281
0x00000000004125b7 : ret 0xf41
0x0000000000414505 : ret 0xf7f3
0x000000000043caea : ret 0xfc47
0x0000000000412c8e : ret 0xfc75
0x0000000000432367 : ret 0xfd40
0x00000000004321b8 : ret 0xfd70
0x0000000000447048 : ret 0xfdb9
0x00000000004321cc : ret 0xff10
0x00000000004553d7 : ret 0xff9b
0x00000000004144ff : ret 0xffa5
0x00000000004555ed : ret 0xffbb
0x0000000000412c88 : ret 0xffc4
0x0000000000411ea8 : ret 0xffd5
0x0000000000411f82 : ret 0xffd8
0x0000000000412d3a : ret 0xffd9
0x0000000000412124 : ret 0xffe0
0x0000000000401ffa : ret 0xfff3
0x0000000000437faa : ret 0xfff7
0x0000000000410e15 : ret 0xfffa
0x00000000004564ff : ret 0xfffe
0x0000000000452114 : ret 0xffff
0x0000000000403daf : ret 1
0x0000000000412b20 : ret 2
0x0000000000457767 : ret 3
0x0000000000447c6b : ret 4
0x000000000040394b : ret 5
0x0000000000415c74 : ret 8
0x000000000043a55f : retf 0x5d ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041fe4d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041c16c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004071fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004377f3 : rol byte ptr [rbp + 0x21], cl ; ret 0x8141
0x000000000041fe4c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000042715a : rol ebp, cl ; ret
0x000000000041b9a4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004016bc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016cb ; pop rbp ; ret
0x000000000041c264 : ror byte ptr [rax - 0x39], 1 ; test ebp, eax ; idiv edi ; call rax
0x0000000000403728 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000404e7c : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407cba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000443c54 : ror byte ptr [rcx], 1 ; ret
0x000000000041fc7e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000434067 : ror dword ptr [rcx - 0x49b7b], -1 ; jmp 0x440336
0x00000000004186f0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000445e04 : ror dword ptr [rcx], 1 ; ret
0x00000000004404d5 : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x00000000004409ec : sahf ; ret 0xd284
0x0000000000458fd0 : sar bl, -5 ; jmp qword ptr [rbx]
0x00000000004398ea : sar byte ptr [rcx - 4], cl ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000045210e : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000453c3b : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000452ae9 : sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000454ceb : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x0000000000454d9b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x0000000000404e22 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x00000000004016be : sar eax, 1 ; jne 0x4016c9 ; pop rbp ; ret
0x0000000000413a71 : sar ebp, -0x17 ; ret 0x2a
0x000000000043a779 : sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000432af2 : sar edi, cl ; inc dword ptr [rbp + 0xf] ; ret
0x00000000004016bd : sar rax, 1 ; jne 0x4016ca ; pop rbp ; ret
0x0000000000418a30 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000040319e : sbb al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000043eac1 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000458ee8 : sbb ch, dh ; sti ; call rdx
0x0000000000413971 : sbb cl, ch ; ret
0x000000000043e9ae : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000041b1f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043f50c : sbb eax, 0xc700000e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000417a80 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000426c1a : scasb al, byte ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x0000000000435564 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x0000000000426c6e : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x0000000000435580 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8b48
0x0000000000412972 : shr cl, cl ; ret 0x3b
0x0000000000446815 : shr dword ptr [rip - 0x21480000], cl ; ret
0x0000000000405564 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403bdc : stc ; loopne 0x403c53 ; ret 0x8589
0x00000000004107ad : stc ; ret 0x77a8
0x0000000000447740 : std ; cwde ; jmp 0x4495f4
0x0000000000417337 : std ; ret 0x279e
0x0000000000404a4f : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000458f0a : sti ; call qword ptr [rbx]
0x0000000000458dea : sti ; call rdi
0x0000000000458eea : sti ; call rdx
0x00000000004586aa : sti ; inc esp ; or byte ptr [rax], al ; add byte ptr [rsp + rdi*8 - 5], ah ; jmp rsp
0x0000000000458d8a : sti ; jmp qword ptr [rbx]
0x00000000004586b2 : sti ; jmp rsp
0x0000000000440700 : sti ; movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000458fd1 : sti ; sti ; jmp qword ptr [rbx]
0x000000000043403a : stosd dword ptr [rdi], eax ; jmp 0x440330
0x000000000040595e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420be6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405848 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411ea5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000426baa : sub byte ptr [rsi + 0x40], dh ; ret 0x8589
0x0000000000459378 : sub byte ptr [rsi - 4], bh ; jmp qword ptr [rcx]
0x0000000000411e9b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411f75 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043655a : sub dword ptr [rsi + 0x40], esi ; ret 0x1db9
0x0000000000426bfe : sub dword ptr [rsi + 0x40], esi ; ret 0x8589
0x000000000043f0c4 : sub dword ptr [rsi + 0x40], esi ; ret 0x8948
0x0000000000412d35 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000043b8fc : sub eax, 0xc700004a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000446816 : sub eax, 0xdeb80000 ; ret
0x000000000041b9af : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000457bdd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000457bdc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000425d99 : test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000411ea0 : test al, -0x7f ; ret 0x2d50
0x0000000000411f7a : test al, -0x7f ; ret 0xa30b
0x000000000041f723 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041810e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004146d6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000041aa48 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042f2c9 : test al, bl ; ret
0x00000000004587e9 : test bh, ah ; call rsp
0x00000000004497d4 : test bl, ch ; ret
0x0000000000457baa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402611 : test byte ptr [rbx + rcx], dl ; add cl, ch ; ret
0x0000000000425ee9 : test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000043184d : test byte ptr [rcx], ch ; ret
0x0000000000408d1c : test byte ptr [rcx], ch ; ret 0
0x0000000000425e41 : test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x43213a
0x000000000040193b : test cl, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000403da9 : test cl, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000042a1a1 : test dl, cl ; ret 0
0x0000000000408d16 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000041a5f3 : test dword ptr [rax - 0x17000004], ebp ; ret
0x000000000043765f : test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004363e7 : test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000043bbe6 : test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000043caef : test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000043e658 : test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000043ffb5 : test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000043e83b : test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000043ed45 : test dword ptr [rbx + rdi*8 - 1], esp ; dec ebp ; or ch, dh ; ret 0xdae9
0x000000000043f38f : test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x0000000000435cfd : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000043f1b0 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x000000000043f6d6 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000432a28 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000438872 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004354e4 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x000000000043d0bf : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000043a3b7 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000043736b : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000043f347 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000436c2a : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004359ab : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x000000000043f0bf : test dword ptr [rbx + rdi*8 - 1], esp ; ljmp ptr [rcx] ; jbe 0x43f10f ; ret 0x8948
0x000000000044daf6 : test dword ptr [rbx + rsi*8 - 0x7bf00001], ebx ; ret
0x000000000044b326 : test dword ptr [rcx + rdi*8 - 1], ecx ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000041ab56 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000417d2a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041374b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004149aa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041046a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041495f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000439c13 : test eax, 0xc7fffc76 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000426cc2 : test eax, edx ; xlatb ; ret
0x000000000041c267 : test ebp, eax ; idiv edi ; call rax
0x0000000000458829 : test edi, esi ; call rsp
0x000000000041c785 : test esi, eax ; idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000042a19b : test esp, eax ; in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000458828 : test r15d, esi ; call rsp
0x000000000041296f : wait ; jge 0x412951 ; shr cl, cl ; ret 0x3b
0x000000000040da2d : wait ; jo 0x40da3b ; ret
0x0000000000410f7c : wait ; jo 0x410f8a ; ret
0x00000000004404d4 : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000426d16 : xchg dl, al ; xlatb ; ret
0x0000000000455e9d : xchg dword ptr [rdi - 0xe46c4ed], ebp ; xchg eax, esp ; ret
0x000000000041fe68 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043b11a : xchg eax, ebp ; pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000435bf9 : xchg eax, ebp ; ret
0x0000000000402c21 : xchg eax, ebp ; ret 0x8445
0x0000000000403892 : xchg eax, ebp ; ret 0xaf39
0x000000000040701f : xchg eax, ebp ; ret 0xd284
0x0000000000404e29 : xchg eax, ebp ; ret 0xe280
0x000000000045210d : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000453c3a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000452ae8 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000454d9a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x0000000000425eea : xchg eax, ebx ; in eax, 0 ; add cl, ch ; ret 0
0x0000000000446813 : xchg eax, ebx ; jmp 0x4495f4
0x00000000004095b5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040feb5 : xchg eax, ebx ; ret
0x0000000000456ad1 : xchg eax, ebx ; ret 0xd284
0x000000000043ef98 : xchg eax, ecx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004100e5 : xchg eax, ecx ; ret
0x000000000041c96c : xchg eax, edi ; ret 0xd284
0x0000000000409935 : xchg eax, edx ; ret
0x00000000004177df : xchg eax, edx ; ret 0x8445
0x0000000000432ad8 : xchg eax, edx ; ret 0x8844
0x000000000041aa4e : xchg eax, edx ; ret 0xd284
0x0000000000425f22 : xchg eax, esi ; push rdi ; add dword ptr [rax], eax ; jmp 0x432139
0x000000000044d71f : xchg eax, esi ; ret
0x0000000000419cea : xchg eax, esp ; jmp 0x41a758
0x0000000000419c27 : xchg eax, esp ; jmp 0x41a75a
0x0000000000414964 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000410235 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004149af : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000045057e : xchg eax, esp ; ret
0x00000000004177c9 : xchg eax, esp ; ret 0x8041
0x0000000000403850 : xchg eax, esp ; ret 0xaf39
0x000000000041387e : xchg eax, esp ; ret 0xb740
0x00000000004404d7 : xchg eax, esp ; ret 0xca20
0x0000000000403f9f : xchg eax, esp ; ret 0xd284
0x000000000040556a : xchg eax, esp ; ret 0xe280
0x0000000000419ce9 : xchg eax, r12d ; jmp 0x41a759
0x000000000044d71e : xchg rax, rsi ; ret
0x0000000000426cc4 : xlatb ; ret
0x000000000043e298 : xor ah, bh ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000043d0d5 : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000413879 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000435cfb : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000043f1ae : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000408117 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408118 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043def3 : xor edi, esp ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
