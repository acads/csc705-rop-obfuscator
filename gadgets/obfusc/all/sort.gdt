0x0000000000459d9b : adc al, -0x77 ; ret 0xca21
0x00000000004af321 : adc al, 0 ; add byte ptr [rax + 0x3e], ch ; stc ; jmp rax
0x000000000044fab8 : adc al, 0x29 ; sti ; dec dword ptr [rbx + 0x3d8b4830] ; ret
0x0000000000445832 : adc al, 0x47 ; cwde ; ret 0x4d8a
0x000000000044513c : adc al, 0x47 ; cwde ; ret 0x8589
0x00000000004457e7 : adc al, 0x47 ; cwde ; ret 0x8b48
0x0000000000494c81 : adc al, byte ptr [rax] ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0x2d ; ret 0xe9d8
0x000000000045018e : adc al, byte ptr [rbp + 0x29] ; ror dword ptr [rdi], 1 ; xchg eax, edx ; ret
0x00000000004a0938 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x0000000000449650 : adc byte ptr [rax - 0x41], cl ; mov esi, 0x3902a7e9 ; ret
0x00000000004176ca : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004af1f1 : adc byte ptr [rax], al ; add byte ptr [rax], bh ; jle 0x4af1f4 ; jmp qword ptr [rax]
0x00000000004af209 : adc byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000474fbb : adc byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a64d : adc byte ptr [rbp - 0x77], cl ; ret 0x294d
0x000000000040dc4c : adc byte ptr [rbp - 1], cl ; inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x00000000004ac803 : adc byte ptr [rbp - 8], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000440b95 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402bf6 : adc byte ptr [rsi], ch ; imul eax, dword ptr [rax], 0x48 ; mov ebp, esp ; call rax
0x0000000000470eaf : adc ch, cl ; ret
0x00000000004a1c92 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000046f321 : adc cl, byte ptr [rax - 0x77] ; add al, -0x36 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044bf47 : adc cl, byte ptr [rax - 0x7d] ; ret 0x310d
0x000000000046e4dc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000046378d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000048a9de : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x00000000004494f4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x48e0
0x000000000046edf6 : adc cl, byte ptr [rax - 0x7d] ; ret 0xbe08
0x000000000048eecb : adc cl, byte ptr [rax - 0x7f] ; ret 0x70
0x000000000048efde : adc cl, byte ptr [rax - 0x7f] ; ret 0xc8
0x0000000000422157 : adc cl, byte ptr [rax - 0x7f] ; ret 0xffe0
0x000000000042213c : adc cl, byte ptr [rax - 0x7f] ; ret 1
0x000000000042248e : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000456337 : adc cl, ch ; ret
0x000000000044b548 : adc dword ptr [rax + rcx*2], 0x8348e289 ; ret 0x48f0
0x0000000000423799 : adc dword ptr [rax - 0x7f], ecx ; ret 0x80
0x00000000004b0c75 : adc dword ptr [rax], eax ; add al, bl ; pop rsp ; sti ; jmp rbx
0x00000000004af261 : adc dword ptr [rax], eax ; add al, cl ; stosd dword ptr [rdi], eax ; clc ; jmp rax
0x0000000000498e0b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004af331 : adc eax, 0x41480000 ; stc ; jmp qword ptr [rax]
0x000000000048298b : adc eax, 0x558abda1 ; ret
0x00000000004af361 : adc eax, 0x6ff80000 ; stc ; jmp rax
0x0000000000494976 : adc eax, 0x89b80000 ; xchg dword ptr [rdi], ecx ; ret
0x0000000000417bf4 : adc eax, 0xb800000d ; ret
0x000000000041e22f : adc eax, 0xcabae2f2 ; jmp qword ptr [rdx]
0x000000000046cb33 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x00000000004af2b1 : adc eax, dword ptr [rax] ; add byte ptr [rax - 4], bl ; clc ; jmp qword ptr [rax]
0x0000000000485f69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004450e8 : adc eax, dword ptr [rdi - 0x68] ; ret 0x8589
0x000000000044ee0b : adc eax, ebp ; js 0x44edfc ; ret
0x00000000004400ca : adc ebp, ecx ; ret 0
0x0000000000494be7 : adc ecx, ebp ; imul edx, dword ptr [rbx], 0x75b80000 ; ret 0xf79e
0x00000000004af40d : adc edi, edx ; dec dword ptr [rax - 0x57ffffe8] ; ret 0xfffa
0x00000000004aff43 : add ah, al ; add al, 0 ; add byte ptr [rax], bl ; xor al, 0xfffffffffffffff7 ; jmp qword ptr [rax]
0x00000000004b034b : add ah, cl ; or byte ptr [rax], al ; add al, al ; ret
0x00000000004b0c73 : add ah, dh ; adc dword ptr [rax], eax ; add al, bl ; pop rsp ; sti ; jmp rbx
0x00000000004b0753 : add ah, dl ; or al, 0 ; add byte ptr [rax - 0x30], bl ; stc ; call qword ptr [rax]
0x0000000000414977 : add al, -0x36 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000046f324 : add al, -0x36 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fbe6 : add al, -0x73 ; ret
0x000000000048bd7c : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004aff45 : add al, 0 ; add byte ptr [rax], bl ; xor al, 0xfffffffffffffff7 ; jmp qword ptr [rax]
0x000000000045c2e7 : add al, 0 ; add byte ptr [rbx + 0x3b2d9c45], cl ; ret 0xf7de
0x000000000041ce2c : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000465e40 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000413f10 : add al, 0 ; add cl, ch ; ret 1
0x00000000004aae6a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004b034f : add al, al ; ret
0x00000000004b1bd7 : add al, bh ; add edi, edi ; jmp rcx
0x00000000004af363 : add al, bh ; outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x00000000004af7ab : add al, bh ; sbb edi, esi ; jmp qword ptr [rax]
0x00000000004af9d3 : add al, bl ; mov dr1, edi ; call rax
0x00000000004b0c77 : add al, bl ; pop rsp ; sti ; jmp rbx
0x0000000000470709 : add al, byte ptr [rax] ; add bh, al ; in al, 0x56 ; or al, 0x38 ; ret
0x00000000004ab78d : add al, byte ptr [rax] ; add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x000000000049e46b : add al, byte ptr [rax] ; add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x000000000049e439 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x00000000004268d9 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004b1327 : add al, cl ; pop rsp ; std ; call rdi
0x00000000004af263 : add al, cl ; stosd dword ptr [rdi], eax ; clc ; jmp rax
0x00000000004b178f : add al, dl ; hlt ; std ; jmp qword ptr [rdx]
0x00000000004b162f : add al, dl ; xchg eax, esi ; std ; call qword ptr [rax]
0x0000000000467798 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x000000000047070b : add bh, al ; in al, 0x56 ; or al, 0x38 ; ret
0x000000000046e4f8 : add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000494e87 : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebx, 0xe9539372 ; ret 0x10
0x00000000004954be : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; push rdi ; ret 0x8a13
0x0000000000494c83 : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0x2d ; ret 0xe9d8
0x00000000004a3785 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000049dbc1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000049db80 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000043c0ed : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rdx]
0x0000000000474977 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x0000000000474960 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x0000000000498ae4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000425d4d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x000000000048fb86 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x0000000000469fff : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004a1963 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000045f740 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004827c9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000040decb : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rcx]
0x000000000040eb7b : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rdx]
0x000000000040a5fc : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000040d172 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call rax
0x0000000000409f08 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call rsp
0x000000000040e4f1 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rax]
0x000000000040ea49 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x0000000000409e80 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rdi]
0x000000000040a166 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rbx
0x0000000000409d78 : add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rcx
0x000000000046cb35 : add bh, al ; xchg eax, r12d ; int 6
0x0000000000424c94 : add bh, bh ; jmp qword ptr [rcx]
0x0000000000441e1c : add bh, bh ; ret 0x358b
0x0000000000449656 : add bh, byte ptr [rcx] ; ret
0x00000000004ac89f : add bl, dh ; ret
0x0000000000466904 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004356ed : add byte ptr [r8], al ; add byte ptr [rbx - 0x49d233bb], cl ; ret
0x00000000004a71f2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004a7454 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000044d432 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004af323 : add byte ptr [rax + 0x3e], ch ; stc ; jmp rax
0x00000000004af333 : add byte ptr [rax + 0x41], cl ; stc ; jmp qword ptr [rax]
0x00000000004b1137 : add byte ptr [rax + 0x57], bh ; cld ; call qword ptr [rdx]
0x00000000004b12c7 : add byte ptr [rax + 0x5b], bh ; std ; jmp qword ptr [rbx]
0x00000000004b1427 : add byte ptr [rax + 0x60], bl ; std ; call rdx
0x00000000004b01ef : add byte ptr [rax + 0x63], al ; clc ; jmp qword ptr [rcx]
0x000000000042c593 : add byte ptr [rax + 0xf000000], al ; xchg eax, ebp ; ret 0xd284
0x0000000000417799 : add byte ptr [rax + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x000000000045cf09 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042ce36 : add byte ptr [rax + 3], cl ; push rax ; or byte ptr [rax - 0x7f], cl ; ret 0xffff
0x00000000004af6e8 : add byte ptr [rax + rax], ah ; add byte ptr [rax - 0x77], bl ; std ; jmp qword ptr [rax]
0x000000000048bd7b : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004b1323 : add byte ptr [rax + rbx + 0x5cc80000], ah ; std ; call rdi
0x00000000004b12c3 : add byte ptr [rax + rbx], al ; add byte ptr [rax + 0x5b], bh ; std ; jmp qword ptr [rbx]
0x0000000000456f09 : add byte ptr [rax - 0x1f7ebec3], al ; jnp 0x456f01 ; push rdx ; ret 0xe781
0x00000000004b0757 : add byte ptr [rax - 0x30], bl ; stc ; call qword ptr [rax]
0x00000000004af76b : add byte ptr [rax - 0x37], bh ; std ; jmp qword ptr [rax]
0x0000000000449d6f : add byte ptr [rax - 0x47], cl ; mov byte ptr [rbx], ah ; ret
0x00000000004af72b : add byte ptr [rax - 0x65], ch ; std ; jmp qword ptr [rax]
0x000000000046e6db : add byte ptr [rax - 0x75], cl ; call 0x49097033
0x0000000000410022 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000042db21 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004af6eb : add byte ptr [rax - 0x77], bl ; std ; jmp qword ptr [rax]
0x000000000040edb6 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048bd7e : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000042200f : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000040df3e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040bbd8 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041838d : add byte ptr [rax - 0x77], cl ; ret 0xcae8
0x0000000000421986 : add byte ptr [rax - 0x7d], cl ; ret 0x4cde
0x000000000045cd03 : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x00000000004b08b7 : add byte ptr [rax - 0xa], ch ; stc ; call qword ptr [rsi]
0x00000000004b08d7 : add byte ptr [rax - 0xa], ch ; stc ; jmp rsp
0x00000000004afb87 : add byte ptr [rax - 0xe], ch ; cmc ; call qword ptr [rax]
0x00000000004af2b3 : add byte ptr [rax - 4], bl ; clc ; jmp qword ptr [rax]
0x000000000042c594 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041779a : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b0349 : add byte ptr [rax], al ; add ah, cl ; or byte ptr [rax], al ; add al, al ; ret
0x000000000046e4f6 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004a3783 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000049dbbf : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000474975 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000047495e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x0000000000498ae2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004a1961 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000045f73e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000409d76 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rcx
0x00000000004ac89d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000046b02b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000045cf07 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000449d80 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; mov byte ptr [rbx], ah ; ret
0x000000000046e6d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49097035
0x000000000042db1f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040edb4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040bbd6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000045cd01 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x00000000004ac89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044d71b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000400640 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000400642 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000442798 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b921 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d8c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043acda : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004124d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044d71c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044fcc0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400644 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004a4c52 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000445c19 : add byte ptr [rax], al ; add byte ptr [rbx + 0x132db445], cl ; ret
0x0000000000445d36 : add byte ptr [rax], al ; add byte ptr [rbx + 0x142db445], cl ; ret
0x000000000046e07b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000046e219 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000410c72 : add byte ptr [rax], al ; add byte ptr [rbx + 0x292da845], cl ; ret 0x6c23
0x00000000004118f2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2da845], cl ; ret 0x6c23
0x00000000004ab89d : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x000000000044f39e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000045c332 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2d9c45], cl ; ret 0xf7de
0x0000000000470bf2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004859d2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000048dd6c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004651b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x00000000004652de : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000049e565 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x00000000004434bc : add byte ptr [rax], al ; add byte ptr [rbx + 0x542d8445], cl ; ret 0x8b1c
0x0000000000445c2f : add byte ptr [rax], al ; add byte ptr [rbx + 0x572db445], cl ; ret
0x0000000000445d1d : add byte ptr [rax], al ; add byte ptr [rbx + 0x582db445], cl ; ret
0x0000000000444c26 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044ab6b : add byte ptr [rax], al ; add byte ptr [rbx + 0x672da445], cl ; ret 0x89a2
0x0000000000410c40 : add byte ptr [rax], al ; add byte ptr [rbx + 0x682da845], cl ; ret 0x6ee1
0x0000000000411924 : add byte ptr [rax], al ; add byte ptr [rbx + 0x692da845], cl ; ret 0x6ee1
0x00000000004924f3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x752d9445], cl ; ret 0xf79e
0x000000000043f397 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10d263bb], cl ; ret
0x000000000048ce18 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10d267bb], cl ; ret
0x0000000000493047 : add byte ptr [rax], al ; add byte ptr [rbx - 0x11d26bbb], cl ; push rdi ; ret 0x8913
0x00000000004972a3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000046237a : add byte ptr [rax], al ; add byte ptr [rbx - 0x2fd213bb], cl ; std ; ret
0x000000000046229e : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d213bb], cl ; std ; ret
0x00000000004927fa : add byte ptr [rax], al ; add byte ptr [rbx - 0x33d26bbb], cl ; ret
0x0000000000440742 : add byte ptr [rax], al ; add byte ptr [rbx - 0x35d23fbb], cl ; ret
0x0000000000496481 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d22bbb], cl ; ret
0x0000000000439d42 : add byte ptr [rax], al ; add byte ptr [rbx - 0x39d25bbb], cl ; ret 0x981c
0x00000000004662fe : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000443098 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3fd213bb], cl ; pop rbx ; ret 0x890f
0x0000000000442f90 : add byte ptr [rax], al ; add byte ptr [rbx - 0x40d213bb], cl ; pop rbx ; ret 0x890f
0x00000000004356ee : add byte ptr [rax], al ; add byte ptr [rbx - 0x49d233bb], cl ; ret
0x0000000000435579 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4ad233bb], cl ; ret
0x000000000045fa47 : add byte ptr [rax], al ; add byte ptr [rbx - 0x52d22bbb], cl ; ret 0x89af
0x00000000004a220c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000470513 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd22bbb], cl ; ret
0x000000000049e484 : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000045b8dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x6cd263bb], cl ; ret 0x3966
0x000000000045b4c2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6dd263bb], cl ; ret 0x3966
0x0000000000499f83 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000439bb3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x0000000000499c09 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000444a1b : add byte ptr [rax], al ; add byte ptr [rbx - 0x9d25fbb], cl ; ret 0xcdc0
0x0000000000448d8c : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8445
0x000000000045f5e4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000040fa5a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5638cbf1], al ; ret
0x00000000004410ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040b50f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040bd84 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043ffb7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000048ac3f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000043aa78 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000423c92 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040c7f6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x66b8cd12], al ; ret
0x00000000004ab619 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x00000000004a71f3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043bece : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf41
0x00000000004a7455 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000498a50 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004b150e : add byte ptr [rax], al ; add byte ptr [rdi - 3], ah ; jmp qword ptr [rbx]
0x000000000047444c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004729e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000462a0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004629e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040a0e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d430 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000045c9ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040dbf3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004503c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000000000409f2a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041c97a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004946ca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x000000000040bba0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428fcb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004b05ce : add byte ptr [rax], al ; add byte ptr [rdx], bh ; stc ; jmp qword ptr [rdx]
0x00000000004b05ae : add byte ptr [rax], al ; add byte ptr [rsi], ch ; stc ; call qword ptr [rsi]
0x000000000049de8b : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040ffa4 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004a1bf2 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000442ec8 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042467b : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004031d4 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004124d4 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000443397 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000442a17 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042df43 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402353 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004af232 : add byte ptr [rax], al ; call 0x214aea2c
0x00000000004b1bd6 : add byte ptr [rax], al ; clc ; add edi, edi ; jmp rcx
0x00000000004af362 : add byte ptr [rax], al ; clc ; outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x00000000004af7aa : add byte ptr [rax], al ; clc ; sbb edi, esi ; jmp qword ptr [rax]
0x00000000004b05cf : add byte ptr [rax], al ; cmp bh, cl ; jmp qword ptr [rdx]
0x00000000004af1f2 : add byte ptr [rax], al ; cmp byte ptr [rsi - 9], bh ; jmp qword ptr [rax]
0x00000000004af7da : add byte ptr [rax], al ; cwde ; jg 0x4af7e2 ; jmp rax
0x00000000004af2f2 : add byte ptr [rax], al ; cwde ; xor al, 0xfffffffffffffff9 ; jmp qword ptr [rax]
0x00000000004b0c72 : add byte ptr [rax], al ; hlt ; adc dword ptr [rax], eax ; add al, bl ; pop rsp ; sti ; jmp rbx
0x00000000004b0ef2 : add byte ptr [rax], al ; je 0x4b0f13 ; add byte ptr [rax], al ; mov ah, bl ; sti ; jmp qword ptr [rdi]
0x0000000000402529 : add byte ptr [rax], al ; jmp 0x402369
0x000000000040ffa0 : add byte ptr [rax], al ; jmp 0x40ffaf
0x00000000004140d8 : add byte ptr [rax], al ; jmp 0x414856
0x000000000042d099 : add byte ptr [rax], al ; jmp 0x42d197
0x000000000043616a : add byte ptr [rax], al ; jmp 0x43652c
0x000000000049de87 : add byte ptr [rax], al ; jmp 0x49de96
0x00000000004a1bee : add byte ptr [rax], al ; jmp 0x4a1bfd
0x00000000004a4be3 : add byte ptr [rax], al ; jmp 0x4a4bf2
0x00000000004a4d45 : add byte ptr [rax], al ; jmp 0x4a4d54
0x00000000004a4fb3 : add byte ptr [rax], al ; jmp 0x4a4fc2
0x00000000004af76a : add byte ptr [rax], al ; js 0x4af73c ; std ; jmp qword ptr [rax]
0x00000000004b1136 : add byte ptr [rax], al ; js 0x4b1196 ; cld ; call qword ptr [rdx]
0x00000000004b12c6 : add byte ptr [rax], al ; js 0x4b132a ; std ; jmp qword ptr [rbx]
0x00000000004b1956 : add byte ptr [rax], al ; js 0x4b195e ; call qword ptr [rdx]
0x00000000004b162a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add al, dl ; xchg eax, esi ; std ; call qword ptr [rax]
0x00000000004b1132 : add byte ptr [rax], al ; mov ah, 0x16 ; add byte ptr [rax], al ; js 0x4b119a ; cld ; call qword ptr [rdx]
0x00000000004b1932 : add byte ptr [rax], al ; mov ah, 0x1e ; add byte ptr [rax], al ; mov byte ptr [rdi - 2], dh ; call rdx
0x00000000004b0832 : add byte ptr [rax], al ; mov ah, 0xd ; add byte ptr [rax], al ; or ah, ch ; stc ; call qword ptr [rcx]
0x00000000004b0ed6 : add byte ptr [rax], al ; mov ah, bl ; sti ; call qword ptr [rbx]
0x00000000004b0ef6 : add byte ptr [rax], al ; mov ah, bl ; sti ; jmp qword ptr [rdi]
0x00000000004af2e2 : add byte ptr [rax], al ; mov byte ptr [rbx], bl ; stc ; jmp rax
0x00000000004af65a : add byte ptr [rax], al ; mov byte ptr [rcx - 3], ch ; call rax
0x00000000004b1936 : add byte ptr [rax], al ; mov byte ptr [rdi - 2], dh ; call rdx
0x00000000004af992 : add byte ptr [rax], al ; mov byte ptr [rdx - 1], dh ; call rax
0x000000000049df2f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004a7238 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000436c99 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac298 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000461f84 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000435904 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000440487 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004667ef : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044d44c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040edb5 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b040a : add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], al ; nop ; std ; clc ; jmp qword ptr [rax]
0x00000000004b150a : add byte ptr [rax], al ; mov word ptr [rdx], ds ; add byte ptr [rax], al ; add byte ptr [rdi - 3], ah ; jmp qword ptr [rbx]
0x00000000004b1322 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add al, cl ; pop rsp ; std ; call rdi
0x00000000004b1422 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x60], bl ; std ; call rdx
0x00000000004b01ee : add byte ptr [rax], al ; movsxd rdi, eax ; jmp qword ptr [rcx]
0x00000000004b042e : add byte ptr [rax], al ; nop ; add cl, bh ; jmp qword ptr [rcx]
0x00000000004b00ae : add byte ptr [rax], al ; nop ; jbe 0x4b00af ; jmp qword ptr [rax]
0x00000000004b040e : add byte ptr [rax], al ; nop ; std ; clc ; jmp qword ptr [rax]
0x00000000004b0836 : add byte ptr [rax], al ; or ah, ch ; stc ; call qword ptr [rcx]
0x00000000004b178a : add byte ptr [rax], al ; or al, 0x1d ; add byte ptr [rax], al ; sal ah, 1 ; std ; jmp qword ptr [rdx]
0x00000000004af9a2 : add byte ptr [rax], al ; or byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x00000000004b05ca : add byte ptr [rax], al ; or r8, qword ptr [rax] ; add byte ptr [rax], al ; cmp bh, cl ; jmp qword ptr [rdx]
0x00000000004af79a : add byte ptr [rax], al ; pop rax ; add esi, edi ; jmp rax
0x00000000004af2b2 : add byte ptr [rax], al ; pop rax ; cld ; clc ; jmp qword ptr [rax]
0x00000000004af6ea : add byte ptr [rax], al ; pop rax ; mov ebp, edi ; jmp qword ptr [rax]
0x00000000004af372 : add byte ptr [rax], al ; pop rax ; ret
0x00000000004b0756 : add byte ptr [rax], al ; pop rax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000403092 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004593c2 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041e744 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041856a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004b1bd2 : add byte ptr [rax], al ; push rsp ; and dword ptr [rax], eax ; add al, bh ; add edi, edi ; jmp rcx
0x0000000000400646 : add byte ptr [rax], al ; ret
0x00000000004b1b16 : add byte ptr [rax], al ; ret 0xfffe
0x0000000000400d7e : add byte ptr [rax], al ; ret 1
0x00000000004005e6 : add byte ptr [rax], al ; ret 2
0x00000000004b178e : add byte ptr [rax], al ; sal ah, 1 ; std ; jmp qword ptr [rdx]
0x00000000004afa12 : add byte ptr [rax], al ; sar dil, cl ; call rax
0x00000000004b12c2 : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rax + 0x5b], bh ; std ; jmp qword ptr [rbx]
0x00000000004aff46 : add byte ptr [rax], al ; sbb byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rax]
0x00000000004af66a : add byte ptr [rax], al ; sbb byte ptr [rdi - 3], ch ; call qword ptr [rax]
0x00000000004b1446 : add byte ptr [rax], al ; sbb byte ptr [rdx - 3], ah ; call qword ptr [rbx]
0x00000000004b05af : add byte ptr [rax], al ; stc ; call qword ptr [rsi]
0x00000000004af332 : add byte ptr [rax], al ; stc ; jmp qword ptr [rax]
0x00000000004b150f : add byte ptr [rax], al ; std ; jmp qword ptr [rbx]
0x00000000004b05aa : add byte ptr [rax], al ; sub al, 0xb ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; stc ; call qword ptr [rsi]
0x00000000004b00aa : add byte ptr [rax], al ; sub al, 6 ; add byte ptr [rax], al ; nop ; jbe 0x4b00b3 ; jmp qword ptr [rax]
0x00000000004b052e : add byte ptr [rax], al ; sub byte ptr [rcx], -7 ; jmp qword ptr [rax]
0x00000000004af2a2 : add byte ptr [rax], al ; test al, -0x2a ; clc ; jmp rax
0x00000000004af75a : add byte ptr [rax], al ; test al, -0x3c ; std ; jmp rax
0x00000000004af1f3 : add byte ptr [rax], bh ; jle 0x4af1f2 ; jmp qword ptr [rax]
0x00000000004af66b : add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004af20b : add byte ptr [rax], bl ; ret
0x00000000004aff47 : add byte ptr [rax], bl ; xor al, 0xfffffffffffffff7 ; jmp qword ptr [rax]
0x00000000004b0837 : add byte ptr [rax], cl ; in al, dx ; stc ; call qword ptr [rcx]
0x00000000004af9a3 : add byte ptr [rax], cl ; jns 0x4af9aa ; call qword ptr [rax]
0x00000000004af1f0 : add byte ptr [rax], dl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 9], bh ; jmp qword ptr [rax]
0x000000000041262b : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a4c54 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004b0833 : add byte ptr [rbp + rcx - 0x13f80000], dh ; stc ; call qword ptr [rcx]
0x000000000048e66c : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000445c1b : add byte ptr [rbx + 0x132db445], cl ; ret
0x0000000000445d38 : add byte ptr [rbx + 0x142db445], cl ; ret
0x000000000046e07d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000046e21b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x0000000000410c74 : add byte ptr [rbx + 0x292da845], cl ; ret 0x6c23
0x00000000004ab78f : add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x00000000004118f4 : add byte ptr [rbx + 0x2a2da845], cl ; ret 0x6c23
0x00000000004ab89f : add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x000000000044f3a0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000047585a : add byte ptr [rbx + 0x312dac45], cl ; sbb al, -0x1a ; ret
0x00000000004758f0 : add byte ptr [rbx + 0x322dac45], cl ; sbb al, -0x1a ; ret
0x000000000040a610 : add byte ptr [rbx + 0x3580250c], cl ; imul eax, dword ptr [rax], -0x77 ; ret 0xca29
0x000000000044229e : add byte ptr [rbx + 0x36a8250c], cl ; imul eax, dword ptr [rax], -0x77 ; ret 0xca29
0x000000000045c2e9 : add byte ptr [rbx + 0x3b2d9c45], cl ; ret 0xf7de
0x000000000045c334 : add byte ptr [rbx + 0x3c2d9c45], cl ; ret 0xf7de
0x0000000000470bf4 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004593c3 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041e745 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004651b4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x00000000004652e0 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000049e46d : add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x000000000049e567 : add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x00000000004434be : add byte ptr [rbx + 0x542d8445], cl ; ret 0x8b1c
0x00000000004703f4 : add byte ptr [rbx + 0x552dd445], cl ; or al, 0x38 ; ret
0x0000000000470436 : add byte ptr [rbx + 0x562dd445], cl ; or al, 0x38 ; ret
0x0000000000445c31 : add byte ptr [rbx + 0x572db445], cl ; ret
0x0000000000445d1f : add byte ptr [rbx + 0x582db445], cl ; ret
0x0000000000422cb5 : add byte ptr [rbx + 0x5b2de045], cl ; mov al, -0x1d ; ret
0x0000000000422cf7 : add byte ptr [rbx + 0x5c2de045], cl ; mov al, -0x1d ; ret
0x000000000041856b : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044ab6d : add byte ptr [rbx + 0x672da445], cl ; ret 0x89a2
0x0000000000410c42 : add byte ptr [rbx + 0x682da845], cl ; ret 0x6ee1
0x0000000000411926 : add byte ptr [rbx + 0x692da845], cl ; ret 0x6ee1
0x00000000004924aa : add byte ptr [rbx + 0x742d9445], cl ; ret 0xf79e
0x00000000004924f5 : add byte ptr [rbx + 0x752d9445], cl ; ret 0xf79e
0x000000000043c51d : add byte ptr [rbx + 0x782ddc45], cl ; fmul st(0) ; ret 0x4589
0x000000000048b775 : add byte ptr [rbx + 0xb2de845], cl ; pop rbx ; ret
0x000000000040c66b : add byte ptr [rbx + rbp*2], dh ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000042abac : add byte ptr [rbx + rbp*2], dh ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004b162b : add byte ptr [rbx + rbx - 0x69300000], ch ; std ; call qword ptr [rax]
0x000000000048b200 : add byte ptr [rbx + rcx*4 + 0x45], cl ; fmul dword ptr [rax - 0x7f] ; ret 0
0x00000000004b05ab : add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; stc ; call qword ptr [rsi]
0x00000000004b05cb : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], al ; cmp bh, cl ; jmp qword ptr [rdx]
0x000000000043f399 : add byte ptr [rbx - 0x10d263bb], cl ; ret
0x000000000048ce1a : add byte ptr [rbx - 0x10d267bb], cl ; ret
0x0000000000493625 : add byte ptr [rbx - 0x10d26bbb], cl ; push rdi ; ret 0x8913
0x000000000048cdcf : add byte ptr [rbx - 0x11d267bb], cl ; ret
0x0000000000493049 : add byte ptr [rbx - 0x11d26bbb], cl ; push rdi ; ret 0x8913
0x000000000044c15a : add byte ptr [rbx - 0x1cf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004972a5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000049725a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000046237c : add byte ptr [rbx - 0x2fd213bb], cl ; std ; ret
0x00000000004622a0 : add byte ptr [rbx - 0x30d213bb], cl ; std ; ret
0x0000000000493e72 : add byte ptr [rbx - 0x32d26bbb], cl ; ret
0x0000000000414fc1 : add byte ptr [rbx - 0x33d223bb], cl ; mov dh, -0xb ; ret
0x00000000004927fc : add byte ptr [rbx - 0x33d26bbb], cl ; ret
0x0000000000440744 : add byte ptr [rbx - 0x35d23fbb], cl ; ret
0x0000000000496483 : add byte ptr [rbx - 0x36d22bbb], cl ; ret
0x0000000000496438 : add byte ptr [rbx - 0x37d22bbb], cl ; ret
0x0000000000439d44 : add byte ptr [rbx - 0x39d25bbb], cl ; ret 0x981c
0x0000000000439cfc : add byte ptr [rbx - 0x3ad25bbb], cl ; ret 0x981c
0x0000000000466300 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000046b545 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000465e42 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000044309a : add byte ptr [rbx - 0x3fd213bb], cl ; pop rbx ; ret 0x890f
0x0000000000442f92 : add byte ptr [rbx - 0x40d213bb], cl ; pop rbx ; ret 0x890f
0x00000000004356f0 : add byte ptr [rbx - 0x49d233bb], cl ; ret
0x000000000043557b : add byte ptr [rbx - 0x4ad233bb], cl ; ret
0x000000000041ee3e : add byte ptr [rbx - 0x4d22fbb], cl ; pop rax ; ret
0x000000000046b383 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000045fa49 : add byte ptr [rbx - 0x52d22bbb], cl ; ret 0x89af
0x000000000045fa07 : add byte ptr [rbx - 0x53d22bbb], cl ; ret 0x89af
0x00000000004a220e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041ede6 : add byte ptr [rbx - 0x5d22fbb], cl ; pop rax ; ret
0x0000000000470515 : add byte ptr [rbx - 0x5fd22bbb], cl ; ret
0x00000000004704d0 : add byte ptr [rbx - 0x60d22bbb], cl ; ret
0x000000000049e486 : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000049e43b : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x000000000045b8de : add byte ptr [rbx - 0x6cd263bb], cl ; ret 0x3966
0x000000000049a2ee : add byte ptr [rbx - 0x6dd227bb], cl ; push rcx ; push rdx ; ret
0x000000000045b4c4 : add byte ptr [rbx - 0x6dd263bb], cl ; ret 0x3966
0x000000000049a280 : add byte ptr [rbx - 0x6ed227bb], cl ; push rcx ; push rdx ; ret
0x000000000043a1a9 : add byte ptr [rbx - 0x6fd25bbb], cl ; cld ; sahf ; ret 0x8589
0x0000000000435905 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000461f85 : add byte ptr [rbx - 0x76b70bbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004a7239 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000499f85 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000436c9a : add byte ptr [rbx - 0x76b72fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000439bb5 : add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x0000000000499c0b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000491aff : add byte ptr [rbx - 0x76d26bbb], cl ; xchg dword ptr [rdi], ecx ; ret
0x0000000000491ab4 : add byte ptr [rbx - 0x77d26bbb], cl ; xchg dword ptr [rdi], ecx ; ret
0x0000000000444a1d : add byte ptr [rbx - 0x9d25fbb], cl ; ret 0xcdc0
0x00000000004449ac : add byte ptr [rbx - 0xad25fbb], cl ; ret 0xcdc0
0x00000000004b178b : add byte ptr [rbx - 0xb300000], cl ; std ; jmp qword ptr [rdx]
0x0000000000424b73 : add byte ptr [rbx - 0xe34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004af2b0 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; pop rax ; cld ; clc ; jmp qword ptr [rax]
0x0000000000448d8e : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8445
0x000000000045f5e6 : add byte ptr [rcx + 0x39], al ; rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000040fa5c : add byte ptr [rcx + 0x5638cbf1], al ; ret
0x00000000004410ec : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040b511 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040bd86 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000043ffb9 : add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000048ac41 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000043aa7a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000423c94 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004b1423 : add byte ptr [rcx + rbx + 0x60580000], ah ; std ; call rdx
0x00000000004b042b : add byte ptr [rcx + rcx + 0x900000], ch ; stc ; jmp qword ptr [rcx]
0x00000000004b040b : add byte ptr [rcx + rcx - 0x2700000], cl ; clc ; jmp qword ptr [rax]
0x000000000040c7f8 : add byte ptr [rcx - 0x66b8cd12], al ; ret
0x00000000004ab514 : add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x00000000004ab61b : add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x0000000000423301 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402bd8 : add byte ptr [rcx], al ; ret
0x00000000004a71f5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000043bed0 : add byte ptr [rcx], bh ; ret 0xf41
0x00000000004a7457 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000498a52 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004b1bd3 : add byte ptr [rcx], dl ; add al, bh ; add edi, edi ; jmp rcx
0x00000000004af230 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; call 0x214aea2e
0x00000000004b01eb : add byte ptr [rdi + rax], ch ; add byte ptr [rax + 0x63], al ; clc ; jmp qword ptr [rcx]
0x00000000004b1510 : add byte ptr [rdi - 3], ah ; jmp qword ptr [rbx]
0x00000000004af7a8 : add byte ptr [rdi], ah ; add byte ptr [rax], al ; clc ; sbb edi, esi ; jmp qword ptr [rax]
0x000000000047444e : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004729e7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000462a10 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004629e4 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040a0e2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d432 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000045c9ec : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000040dbf5 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004503c2 : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000000000409f2c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041c97c : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004946cc : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x000000000040bba2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428fcd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004b150b : add byte ptr [rdx + rbx + 0x67000000], cl ; std ; jmp qword ptr [rbx]
0x00000000004b052b : add byte ptr [rdx + rcx + 0x29800000], ch ; stc ; jmp qword ptr [rax]
0x0000000000412f7e : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004b05d0 : add byte ptr [rdx], bh ; stc ; jmp qword ptr [rdx]
0x00000000004af330 : add byte ptr [rip + 0x41480000], dl ; stc ; jmp qword ptr [rax]
0x00000000004af728 : add byte ptr [rip - 0x64980000], ah ; std ; jmp qword ptr [rax]
0x00000000004640bd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004b00ab : add byte ptr [rsi + rax], ch ; add byte ptr [rax], al ; nop ; jbe 0x4b00b2 ; jmp qword ptr [rax]
0x00000000004b08d3 : add byte ptr [rsi + rcx], dl ; add byte ptr [rax - 0xa], ch ; stc ; jmp rsp
0x00000000004b1133 : add byte ptr [rsi + rdx + 0x57780000], dh ; cld ; call qword ptr [rdx]
0x00000000004af768 : add byte ptr [rsi], ah ; add byte ptr [rax], al ; js 0x4af73e ; std ; jmp qword ptr [rax]
0x00000000004b05b0 : add byte ptr [rsi], ch ; stc ; call qword ptr [rsi]
0x00000000004b172b : add byte ptr [rsp + rbx - 0x2f600000], ch ; std ; jmp rdi
0x0000000000409d75 : add byte ptr cs:[rax], al ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rcx
0x00000000004af991 : add byte ptr cs:[rax], al ; mov byte ptr [rdx - 1], dh ; call rax
0x00000000004af9a1 : add byte ptr cs:[rax], al ; or byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x00000000004af769 : add byte ptr es:[rax], al ; js 0x4af73d ; std ; jmp qword ptr [rax]
0x00000000004af799 : add byte ptr es:[rax], al ; pop rax ; add esi, edi ; jmp rax
0x00000000004b0431 : add cl, bh ; jmp qword ptr [rcx]
0x0000000000455e4b : add cl, byte ptr [rcx - 0xa76b] ; inc ecx ; ret 0x8909
0x00000000004828fc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040f5cf : add cl, ch ; ret
0x000000000040ffa6 : add cl, ch ; ret 0
0x0000000000490e2f : add cl, ch ; ret 0x33
0x000000000040f2e8 : add cl, ch ; ret 1
0x000000000044d23a : add dh, al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046e791 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000049db7e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004262dc : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x000000000046a42e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040ea47 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x00000000004afb85 : add dword ptr [rax], eax ; add byte ptr [rax - 0xe], ch ; cmc ; call qword ptr [rax]
0x0000000000490320 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000048cdcd : add dword ptr [rax], eax ; add byte ptr [rbx - 0x11d267bb], cl ; ret
0x00000000004704ce : add dword ptr [rax], eax ; add byte ptr [rbx - 0x60d22bbb], cl ; ret
0x00000000004449aa : add dword ptr [rax], eax ; add byte ptr [rbx - 0xad25fbb], cl ; ret 0xcdc0
0x00000000004ab512 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x000000000048cfbe : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f4c4 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000422ed3 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000423378 : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046e43f : add dword ptr [rax], ecx ; ret 0x840
0x0000000000421e55 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8445
0x0000000000415296 : add dword ptr [rdi], ecx ; mov dh, -0x3e ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424eb4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a6742 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042d16e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467598 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042617d : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xe280
0x00000000004616ea : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xe280
0x0000000000402bd4 : add eax, 0x2b09de ; add ebx, esi ; ret
0x0000000000445532 : add eax, 0x32b80000 ; ret 0xb319
0x000000000049dae3 : add eax, 0x5d5b0000 ; ret
0x0000000000422517 : add eax, 0x72b80000 ; ret 0x8a47
0x0000000000409e7d : add eax, 0xc700004d ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rdi]
0x000000000041e31c : add eax, 0xcab80000 ; jmp qword ptr [rdx]
0x00000000004a36b4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041e743 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000493e70 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x32d26bbb], cl ; ret
0x0000000000496436 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x37d22bbb], cl ; ret
0x0000000000410424 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004619d7 : add eax, ebp ; ret
0x0000000000402b9b : add eax, edx ; sar rax, 1 ; jne 0x402bac ; pop rbp ; ret
0x000000000042c5ee : add ebx, dword ptr [rbp - 0x76b7a9b2] ; ret 0x148
0x0000000000402bd9 : add ebx, esi ; ret
0x0000000000443ac1 : add edi, eax ; pushfq ; push rsp ; ret 0x8b1c
0x000000000046a2a9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040bc18 : add edi, eax ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x00000000004b1bd9 : add edi, edi ; jmp rcx
0x00000000004af79d : add esi, edi ; jmp rax
0x00000000004030eb : add esp, 0x10 ; pop rbp ; ret
0x00000000004232ff : add esp, 0x100 ; pop rbp ; ret
0x0000000000440b93 : add esp, 0x110 ; pop rbp ; ret
0x0000000000496cf5 : add esp, 0x118 ; pop rbp ; ret
0x00000000004276ab : add esp, 0x120 ; pop rbp ; ret
0x000000000047561b : add esp, 0x130 ; pop rbp ; ret
0x0000000000444821 : add esp, 0x140 ; pop rbp ; ret
0x000000000040e274 : add esp, 0x14c0 ; pop rbp ; ret
0x000000000042daf2 : add esp, 0x150 ; pop rbp ; ret
0x000000000040fed5 : add esp, 0x160 ; pop rbp ; ret
0x000000000043964a : add esp, 0x16c0 ; pop rbp ; ret
0x0000000000426dee : add esp, 0x180 ; pop rbp ; ret
0x000000000044e250 : add esp, 0x190 ; pop rbp ; ret
0x000000000046cbc5 : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004364c6 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000434ede : add esp, 0x1be0 ; pop rbp ; ret
0x000000000040fa1b : add esp, 0x1c0 ; pop rbp ; ret
0x000000000045cd80 : add esp, 0x1d0 ; pop rbp ; ret
0x000000000040fcd2 : add esp, 0x20 ; pop rbp ; ret
0x0000000000413331 : add esp, 0x220 ; pop rbp ; ret
0x00000000004204f9 : add esp, 0x280 ; pop rbp ; ret
0x0000000000414752 : add esp, 0x290 ; pop rbp ; ret
0x0000000000445a69 : add esp, 0x2e0 ; pop rbp ; ret
0x00000000004031d7 : add esp, 0x30 ; pop rbp ; ret
0x000000000041a15b : add esp, 0x350 ; pop rbp ; ret
0x000000000045f732 : add esp, 0x380 ; pop rbp ; ret
0x000000000043e5ea : add esp, 0x390 ; pop rbp ; ret
0x00000000004295e6 : add esp, 0x3c0 ; pop rbp ; ret
0x0000000000472ff8 : add esp, 0x3e0 ; pop rbp ; ret
0x00000000004124d7 : add esp, 0x40 ; pop rbp ; ret
0x000000000041ce29 : add esp, 0x408 ; pop rbx ; pop rbp ; ret
0x00000000004ab069 : add esp, 0x440 ; pop rbp ; ret
0x00000000004a18fe : add esp, 0x4f0 ; pop rbp ; ret
0x0000000000424eb9 : add esp, 0x50 ; pop rbp ; ret
0x000000000049dae0 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000043ac70 : add esp, 0x60 ; pop rbp ; ret
0x0000000000418566 : add esp, 0x658 ; pop rbx ; pop rbp ; ret
0x000000000042df46 : add esp, 0x70 ; pop rbp ; ret
0x0000000000470fc4 : add esp, 0x78 ; pop rbp ; ret
0x00000000004155a5 : add esp, 0x80 ; pop rbp ; ret
0x0000000000463f7f : add esp, 0x88 ; pop rbp ; ret
0x000000000044ee9a : add esp, 0x90 ; pop rbp ; ret
0x0000000000495bcc : add esp, 0x930 ; pop rbp ; ret
0x000000000040308e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000403551 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000444c23 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041f50c : add esp, 0xc0 ; pop rbp ; ret
0x000000000041a8dd : add esp, 0xd0 ; pop rbp ; ret
0x00000000004655a8 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000424d75 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000476883 : add esp, 8 ; pop rbp ; ret
0x0000000000402356 : add esp, 8 ; ret
0x0000000000455e4a : add r9b, byte ptr [rcx - 0xa76b] ; inc ecx ; ret 0x8909
0x0000000000402b9a : add rax, rdx ; sar rax, 1 ; jne 0x402bad ; pop rbp ; ret
0x00000000004030ea : add rsp, 0x10 ; pop rbp ; ret
0x00000000004232fe : add rsp, 0x100 ; pop rbp ; ret
0x0000000000440b92 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000496cf4 : add rsp, 0x118 ; pop rbp ; ret
0x00000000004276aa : add rsp, 0x120 ; pop rbp ; ret
0x000000000047561a : add rsp, 0x130 ; pop rbp ; ret
0x0000000000444820 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040e273 : add rsp, 0x14c0 ; pop rbp ; ret
0x000000000042daf1 : add rsp, 0x150 ; pop rbp ; ret
0x000000000040fed4 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000439649 : add rsp, 0x16c0 ; pop rbp ; ret
0x0000000000426ded : add rsp, 0x180 ; pop rbp ; ret
0x000000000044e24f : add rsp, 0x190 ; pop rbp ; ret
0x000000000046cbc4 : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004364c5 : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000434edd : add rsp, 0x1be0 ; pop rbp ; ret
0x000000000040fa1a : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000045cd7f : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040fcd1 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000413330 : add rsp, 0x220 ; pop rbp ; ret
0x00000000004204f8 : add rsp, 0x280 ; pop rbp ; ret
0x0000000000414751 : add rsp, 0x290 ; pop rbp ; ret
0x0000000000445a68 : add rsp, 0x2e0 ; pop rbp ; ret
0x00000000004031d6 : add rsp, 0x30 ; pop rbp ; ret
0x000000000041a15a : add rsp, 0x350 ; pop rbp ; ret
0x000000000045f731 : add rsp, 0x380 ; pop rbp ; ret
0x000000000043e5e9 : add rsp, 0x390 ; pop rbp ; ret
0x00000000004295e5 : add rsp, 0x3c0 ; pop rbp ; ret
0x0000000000472ff7 : add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004124d6 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041ce28 : add rsp, 0x408 ; pop rbx ; pop rbp ; ret
0x00000000004ab068 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004a18fd : add rsp, 0x4f0 ; pop rbp ; ret
0x0000000000424eb8 : add rsp, 0x50 ; pop rbp ; ret
0x000000000049dadf : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000043ac6f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000418565 : add rsp, 0x658 ; pop rbx ; pop rbp ; ret
0x000000000042df45 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000470fc3 : add rsp, 0x78 ; pop rbp ; ret
0x00000000004155a4 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000463f7e : add rsp, 0x88 ; pop rbp ; ret
0x000000000044ee99 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000495bcb : add rsp, 0x930 ; pop rbp ; ret
0x000000000040308d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000403550 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000444c22 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041f50b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041a8dc : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004655a7 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000424d74 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000476882 : add rsp, 8 ; pop rbp ; ret
0x0000000000402355 : add rsp, 8 ; ret
0x0000000000473088 : and ah, bl ; sub cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0xae8
0x000000000040c6d7 : and al, 0 ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x00000000004af6e9 : and al, 0 ; add byte ptr [rax - 0x77], bl ; std ; jmp qword ptr [rax]
0x0000000000459174 : and al, 0x70 ; fsub dword ptr [rcx] ; ret 0x941
0x00000000004a71fd : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000489d26 : and al, 0xffffffffffffffb9 ; jrcxz 0x489d4b ; ret 0x4877
0x000000000042d16d : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467597 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c8f2 : and al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000048e408 : and al, byte ptr [rbp + 0x29486d2d] ; ret 0x8948
0x000000000046e78f : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004154e7 : and byte ptr [rax - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x0000000000468b6a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004276ad : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413333 : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049993b : and byte ptr [rsi + 0x58], ah ; jb 0x499972 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040ba04 : and cl, al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; test al, -0x47 ; ret
0x000000000046e78e : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000045f236 : and dl, byte ptr [rcx] ; ret 0x76b9
0x000000000045e05e : and dl, byte ptr [rcx] ; ret 0x8589
0x000000000049544b : and dl, cl ; mov bl, -0x47 ; out dx, eax ; push rdi ; ret 0xf13
0x00000000004b1bd5 : and dword ptr [rax], eax ; add al, bh ; add edi, edi ; jmp rcx
0x00000000004af669 : and dword ptr [rax], eax ; add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004142c0 : and dword ptr [rsp + rbx*4 + 0x75fd53b9], edx ; ret 0x8b48
0x00000000004568f2 : and eax, 0x2144db64 ; ret 0x8941
0x0000000000481b31 : and eax, 0x75b4b9d3 ; ret
0x000000000040c5e2 : and eax, 0x7eb80000 ; ret 0xe48b
0x000000000042c5f0 : and eax, 0x8948564e ; ret 0x148
0x000000000049df2d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004af729 : and eax, 0x9b680000 ; std ; jmp qword ptr [rax]
0x00000000004af759 : and eax, 0xc4a80000 ; std ; jmp rax
0x0000000000449d73 : and eax, dword ptr [rdi + 0x49] ; ret
0x00000000004a5338 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a4e4f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043a815 : and ebx, dword ptr [rbx] ; jp 0x43a83e ; ret 0x941
0x000000000048cc15 : and ecx, edi ; mov rax, rcx ; pop rbp ; ret
0x00000000004a53fa : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000420f10 : and esp, edx ; ret
0x000000000049544a : and r10b, r9b ; mov bl, -0x47 ; out dx, eax ; push rdi ; ret 0xf13
0x000000000048cc14 : and rcx, rdi ; mov rax, rcx ; pop rbp ; ret
0x0000000000457e4a : bsr ebp, esp ; mov bh, -0x7f ; ret 0xff97
0x00000000004af234 : call 0x214aea2a
0x000000000047618f : call 0x4023f2
0x000000000040369f : call 0x402539
0x000000000042643d : call 0x4026f2
0x0000000000403683 : call 0x402919
0x000000000040bce5 : call 0x412336
0x000000000040d3f5 : call 0x42035d42
0x000000000044a247 : call 0x426482
0x000000000042362d : call 0x43f8a2
0x000000000046e6df : call 0x4909702f
0x000000000046e6de : call 0x49097030
0x000000000046e72d : call 0x4909707d
0x000000000046e72c : call 0x4909707e
0x0000000000441d1c : call 0x4926a66f
0x000000000044afd0 : call 0x49273923
0x0000000000499d35 : call 0x499df9
0x000000000048deba : call 0xc0b0d3c
0x0000000000436336 : call 0xffffffff8505fe4d
0x0000000000436368 : call 0xffffffff8505fe7f
0x00000000004a3add : call 0xffffffffacaafd11
0x00000000004a3adc : call 0xffffffffacaafd12
0x00000000004855e9 : call 0xffffffffe90adf39
0x00000000004855e8 : call 0xffffffffe90adf3a
0x00000000004201c9 : call 0xffffffffff46879b
0x00000000004201c8 : call 0xffffffffff46879c
0x000000000042043e : call 0xffffffffff468a10
0x000000000042043d : call 0xffffffffff468a11
0x00000000004204e4 : call 0xffffffffff468ab6
0x00000000004204e3 : call 0xffffffffff468ab7
0x0000000000474951 : call 0xffffffffffa3cf23
0x0000000000474950 : call 0xffffffffffa3cf24
0x00000000004ac879 : call qword ptr [r12 + rbx*8]
0x000000000046a005 : call qword ptr [rax]
0x0000000000419c97 : call qword ptr [rbx]
0x000000000040bbe8 : call qword ptr [rcx]
0x000000000041ffac : call qword ptr [rdi]
0x000000000040eb81 : call qword ptr [rdx]
0x000000000040a602 : call qword ptr [rsi]
0x00000000004ac87a : call qword ptr [rsp + rbx*8]
0x0000000000402bfd : call rax
0x00000000004201cf : call rbx
0x000000000040fcfc : call rcx
0x00000000004846b4 : call rdi
0x0000000000422978 : call rdx
0x0000000000407e3a : call rsi
0x0000000000409f0e : call rsp
0x000000000040c7f1 : cdq ; ret
0x00000000004b1bd8 : clc ; add edi, edi ; jmp rcx
0x0000000000475619 : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000042daf0 : clc ; add rsp, 0x150 ; pop rbp ; ret
0x00000000004602d2 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x000000000046749b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x00000000004ab067 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000043c6a4 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041ef86 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004625e9 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000495bca : clc ; add rsp, 0x930 ; pop rbp ; ret
0x00000000004a44c9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000044601c : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x00000000004a8464 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004749cc : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004744b6 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000004744b4 : clc ; in al, -8 ; dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000004af2ae : clc ; inc dword ptr [rax] ; adc eax, dword ptr [rax] ; add byte ptr [rax - 4], bl ; clc ; jmp qword ptr [rax]
0x00000000004af25e : clc ; inc eax ; adc dword ptr [rax], eax ; add al, cl ; stosd dword ptr [rdi], eax ; clc ; jmp rax
0x00000000004af276 : clc ; jmp qword ptr [rax]
0x00000000004b01f2 : clc ; jmp qword ptr [rcx]
0x00000000004af266 : clc ; jmp rax
0x0000000000402b9f : clc ; jne 0x402ba8 ; pop rbp ; ret
0x00000000004a5339 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a5103 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040edf6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000044fcbc : clc ; mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000049e18e : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044ff2e : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000046eb6c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000048a733 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000046df5e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000048a713 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000046307b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000046309b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004a4b51 : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000410026 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004af364 : clc ; outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x00000000004ac0bb : clc ; pop rbp ; ret
0x0000000000422861 : clc ; pop rbx ; pop rbp ; ret
0x00000000004780bd : clc ; ret 0x77a8
0x00000000004af7ac : clc ; sbb edi, esi ; jmp qword ptr [rax]
0x00000000004a4e50 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000472ff6 : cld ; add rsp, 0x3e0 ; pop rbp ; ret
0x000000000049a5c4 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004a411e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000424d73 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004b113a : cld ; call qword ptr [rdx]
0x00000000004af2b5 : cld ; clc ; jmp qword ptr [rax]
0x000000000044f3cf : cld ; jmp 0x44f43c
0x000000000044f3ce : cld ; jmp 0x44f43d
0x0000000000435908 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000044048b : cld ; pop rbp ; ret
0x00000000004363d7 : cld ; ret 0x1b2
0x00000000004363b6 : cld ; ret 0x558b
0x0000000000435e49 : cld ; ret 0x8589
0x000000000043a8b1 : cld ; sahf ; ret 0x4b9
0x000000000043a1af : cld ; sahf ; ret 0x8589
0x000000000043aba7 : cld ; sahf ; ret 0x8948
0x000000000048ef64 : cld ; sbb al, -0x47 ; ret 0x8e0f
0x000000000046b54a : cld ; stc ; in al, dx ; ret 0x8589
0x000000000046bc9b : cld ; stc ; in al, dx ; ret 0xff3
0x00000000004268d8 : cli ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000445d1c : cli ; add byte ptr [rax], al ; add byte ptr [rbx + 0x582db445], cl ; ret
0x000000000045b8db : cli ; add byte ptr [rax], al ; add byte ptr [rbx - 0x6cd263bb], cl ; ret 0x3966
0x00000000004af40e : cli ; dec dword ptr [rax - 0x57ffffe8] ; ret 0xfffa
0x0000000000499940 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041edeb : cli ; pop rax ; ret
0x0000000000494be6 : cmc ; adc ecx, ebp ; imul edx, dword ptr [rbx], 0x75b80000 ; ret 0xf79e
0x00000000004a71fc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004afb8a : cmc ; call qword ptr [rax]
0x0000000000414fc8 : cmc ; ret
0x000000000049885b : cmc ; ret 0x4f0b
0x00000000004449b1 : cmc ; ret 0xcdc0
0x0000000000457505 : cmove esp, dword ptr [rcx] ; ret 0x8941
0x000000000043996c : cmovl esp, dword ptr [rdx - 0x17] ; ret
0x000000000043996b : cmovl r12d, dword ptr [rdx - 0x17] ; ret
0x000000000046f279 : cmp al, -0x36 ; mov rcx, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041e3a8 : cmp al, -3 ; dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000040368a : cmp al, 0x25 ; ret 0x4ad9
0x000000000044294f : cmp al, 0x26 ; nop ; sbb cl, byte ptr [rcx - 0x7bf033bb] ; ret
0x000000000045505c : cmp al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004b05d1 : cmp bh, cl ; jmp qword ptr [rdx]
0x000000000048c3b1 : cmp byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041f368 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000440b03 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045447c : cmp byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000456f0a : cmp byte ptr [rip + 0x7be08141], -0x19 ; push rdx ; ret 0xe781
0x00000000004af1f4 : cmp byte ptr [rsi - 9], bh ; jmp qword ptr [rax]
0x000000000048c24e : cmp cl, byte ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000004989f1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000049ae97 : cmp dl, al ; ret
0x0000000000423796 : cmp dword ptr [rax - 0x75], ecx ; adc dword ptr [rax - 0x7f], ecx ; ret 0x80
0x00000000004665d2 : cmp dword ptr [rax - 0x75], ecx ; jne 0x4665b4 ; call rax
0x0000000000426393 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043ffb5 : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x0000000000456f0b : cmp eax, 0x7be08141 ; out 0x52, eax ; ret 0xe781
0x000000000049cf69 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000402b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402b70 ; pop rbp ; ret
0x000000000045cad6 : cmp edi, edi ; dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000482987 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000040ba06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; test al, -0x47 ; ret
0x0000000000449655 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add bh, byte ptr [rcx] ; ret
0x000000000049dae2 : cwde ; add eax, 0x5d5b0000 ; ret
0x00000000004af7dc : cwde ; jg 0x4af7e0 ; jmp rax
0x0000000000445834 : cwde ; ret 0x4d8a
0x00000000004450ea : cwde ; ret 0x8589
0x00000000004457e9 : cwde ; ret 0x8b48
0x00000000004af2f4 : cwde ; xor al, 0xfffffffffffffff9 ; jmp qword ptr [rax]
0x0000000000454f5e : cwde ; xor eax, dword ptr [rbx - 0x76ba35df] ; ret 0x8141
0x000000000045a6de : dec byte ptr [rcx - 0x7e0dd63e] ; ret 0xcdab
0x000000000048cbcf : dec dword ptr [rax + 0x21] ; ret 0x148
0x000000000048c782 : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000041c74a : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000040b6fc : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000420380 : dec dword ptr [rax + 0x39] ; ret 0xf41
0x000000000041cdf4 : dec dword ptr [rax - 0x46] ; ret 0x6d6e
0x00000000004af40f : dec dword ptr [rax - 0x57ffffe8] ; ret 0xfffa
0x000000000045036b : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000403687 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4ad9
0x0000000000481e8b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004494f1 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x48e0
0x0000000000422154 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7f] ; ret 0xffe0
0x00000000004817fe : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000440103 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000423793 : dec dword ptr [rax - 0x75] ; cmp dword ptr [rax - 0x75], ecx ; adc dword ptr [rax - 0x7f], ecx ; ret 0x80
0x0000000000448c3a : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000421d73 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000045cad8 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041e3aa : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000044b2d5 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004170a6 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000048c32b : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004744b7 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000040cb34 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000044b252 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004183ac : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000442c21 : dec dword ptr [rax - 0x77] ; ret 0x96e8
0x000000000040e733 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041e010 : dec dword ptr [rax - 0x77] ; ret 0xb7e8
0x000000000041e7e5 : dec dword ptr [rax - 0x77] ; ret 0xe2e8
0x0000000000419c89 : dec dword ptr [rax - 0x77] ; ret 0xeee8
0x000000000040e380 : dec dword ptr [rax - 0x77] ; test dword ptr [rax - 0x17000015], ecx ; ret
0x000000000045493e : dec dword ptr [rax - 0x7d] ; ret
0x000000000044599a : dec dword ptr [rax - 0x7d] ; ret 0x480d
0x00000000004540de : dec dword ptr [rax - 0x7f] ; ret
0x0000000000423e04 : dec dword ptr [rax - 0x7f] ; ret 0
0x00000000004397f2 : dec dword ptr [rax - 0x7f] ; ret 0x9c
0x0000000000442ef1 : dec dword ptr [rax - 0x7f] ; ret 8
0x000000000040a005 : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000433636 : dec dword ptr [rax - 1] ; ret 0x8b48
0x00000000004541c2 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000459d33 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x7f], cl ; ret
0x000000000041c0dd : dec dword ptr [rbx + 0x34182504] ; imul eax, dword ptr [rax], -0x77 ; ret 0x8b48
0x000000000044fabb : dec dword ptr [rbx + 0x3d8b4830] ; ret
0x00000000004447cc : dec dword ptr [rbx - 0x1276b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004106dc : dec dword ptr [rbx - 0x14b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000419acb : dec dword ptr [rbx - 0x2d76b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000419d81 : dec dword ptr [rbx - 0x3276b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000045ee3c : dec dword ptr [rbx - 0x33b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000045eee2 : dec dword ptr [rbx - 0x3476b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000045f023 : dec dword ptr [rbx - 0x35b6b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000454685 : dec dword ptr [rbx - 0x9b6b] ; inc ecx ; ret 0x8907
0x0000000000455533 : dec dword ptr [rbx - 0xa36b] ; inc ecx ; ret 0x8911
0x0000000000454205 : dec dword ptr [rbx - 0xa76b] ; inc ecx ; ret 0x890c
0x0000000000444c0c : dec dword ptr [rbx - 0xaf63] ; dec dword ptr [rdi] ; ret
0x0000000000409f28 : dec dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004205f0 : dec dword ptr [rcx + 0x71e981c1] ; ret 0x8a47
0x00000000004352cd : dec dword ptr [rcx - 0x56] ; ret 0xe99e
0x0000000000456c55 : dec dword ptr [rcx - 0x7628d639] ; ret 0xf229
0x00000000004552c4 : dec dword ptr [rcx - 0x7629d63a] ; ret 0xca29
0x000000000045719a : dec dword ptr [rcx - 0x7629d63a] ; ret 0xfa29
0x000000000048d835 : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x00000000004541fa : dec dword ptr [rcx - 0x7d] ; ret 0x4c04
0x0000000000454353 : dec dword ptr [rcx - 0x7f] ; ret
0x0000000000459d7b : dec dword ptr [rcx - 0x7f] ; ret 4
0x0000000000498856 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040c7e9 : dec dword ptr [rdi] ; mov esi, 0x32c68132 ; cdq ; ret
0x0000000000444c12 : dec dword ptr [rdi] ; ret
0x00000000004106e2 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000419ad1 : dec dword ptr [rdi] ; ret 0x8589
0x000000000044bc52 : dec dword ptr [rdi] ; test ah, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004643a1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000410420 : dec dword ptr [rdi] ; test bh, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004268d5 : dec dword ptr [rdi] ; test bh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000411808 : dec dword ptr [rdi] ; test bl, cl ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000046921b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000411407 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffff4], bl ; ret
0x0000000000463b3a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000427246 : dec dword ptr [rdi] ; test byte ptr [rbx], cl ; add al, 0 ; add cl, ch ; ret 1
0x000000000045b40a : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffa], bh ; ret
0x000000000043a2e3 : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000477d9a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042be4f : dec dword ptr [rdi] ; test byte ptr [rdi + rcx], bh ; add cl, ch ; ret
0x000000000044e634 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000494029 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffff2], bh ; ret 1
0x0000000000413f0c : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], cl ; ret 1
0x000000000042d59b : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffffb], dh ; ret 1
0x0000000000488530 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffffd], cl ; ret 1
0x0000000000422ecf : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000493c28 : dec dword ptr [rdi] ; test dh, dh ; sbb dword ptr [rax], eax ; add cl, ch ; ret
0x000000000046c615 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041cc45 : dec dword ptr [rdi] ; xchg eax, edx ; ret
0x00000000004a34ae : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000040a290 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000045aec6 : dec dword ptr [rsi - 0x48] ; ret 0xe997
0x0000000000455d98 : dec ecx ; ret 0xe1b4
0x0000000000442d11 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000442d10 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004647b0 : enter -0x74b8, 0x31 ; call rax
0x000000000048d2c9 : enter -0x74b8, 0x55 ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000475cb7 : enter -0x76b8, -0x14 ; pop rbp ; ret
0x000000000046fb10 : enter -0x7eb8, -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462a0c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004a0829 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004aa649 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045945c : enter 0x447e, 0x21 ; ret 0x8941
0x00000000004a4c75 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000441059 : fadd dword ptr [r11 + rdi + 0x4d] ; fadd dword ptr [rcx + 0xf] ; sahf ; ret 0x8445
0x000000000044105d : fadd dword ptr [r9 + 0xf] ; sahf ; ret 0x8445
0x00000000004410e8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041dd93 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414da8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045924c : fadd dword ptr [rbp - 0x77] ; ret
0x000000000044105a : fadd dword ptr [rbx + rdi + 0x4d] ; fadd dword ptr [rcx + 0xf] ; sahf ; ret 0x8445
0x000000000044105e : fadd dword ptr [rcx + 0xf] ; sahf ; ret 0x8445
0x0000000000456dc1 : fbld dword ptr [rcx] ; ret 0x941
0x00000000004a4f2b : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000049f9e5 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000474fb8 : fdiv st(2) ; movups xmm0, xmmword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b0ed9 : fdiv st(3), st(0) ; call qword ptr [rbx]
0x00000000004b0ef9 : fdiv st(3), st(0) ; jmp qword ptr [rdi]
0x00000000004363d6 : fdivr st(4) ; ret 0x1b2
0x00000000004363b5 : fdivr st(4) ; ret 0x558b
0x0000000000435e48 : fdivr st(4) ; ret 0x8589
0x000000000040d542 : fiadd dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000046921e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004a346f : fild word ptr [rcx - 0x77] ; ret
0x0000000000445531 : fild word ptr [rip + 0x32b80000] ; ret 0xb319
0x00000000004a53fb : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000402bd5 : fimul word ptr [rcx] ; sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000048e0e9 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000454303 : fisttp dword ptr [rax - 0x7f] ; ret
0x000000000049dd4b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000048e0ec : fisttp word ptr [rcx - 0x77] ; ret
0x000000000040d558 : fisub dword ptr [rcx] ; ret 0x941
0x00000000004a57b8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004680fe : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041e069 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004ab5f1 : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000048b203 : fmul dword ptr [r8 - 0x7f] ; ret 0
0x00000000004a1ef7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000048d17a : fmul dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000436ae8 : fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004680ff : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004647ac : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000045cae4 : fmul dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x48c0
0x000000000041e06a : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004ab5f2 : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000045cadc : fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000048b204 : fmul dword ptr [rax - 0x7f] ; ret 0
0x00000000004654ed : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000463dd9 : fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000424c8e : fmul dword ptr [rcx + 0xf681d6] ; add bh, bh ; jmp qword ptr [rcx]
0x00000000004a1ef8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004362fc : fmul dword ptr [rdi] ; wait ; ret 0xf40
0x0000000000436284 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x00000000004ac87c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000043c63c : fmul st(0) ; ret 0x1b2
0x000000000043c4de : fmul st(0) ; ret 0x4589
0x000000000043c655 : fmul st(0) ; ret 0x8b48
0x000000000049fb6d : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x00000000004a1187 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x0000000000494975 : fst qword ptr [rip - 0x76480000] ; xchg dword ptr [rdi], ecx ; ret
0x0000000000459176 : fsub dword ptr [rcx] ; ret 0x941
0x0000000000462e97 : fsub st(1), st(0) ; mov ebx, 0xb8000000 ; ret 0xebc8
0x0000000000424409 : fsub st(1), st(0) ; ret 1
0x000000000049e7a2 : fsubr qword ptr [rdi - 0x6946a2c4] ; ret
0x0000000000496bc0 : fsubr st(1) ; ret 1
0x00000000004b0c74 : hlt ; adc dword ptr [rax], eax ; add al, bl ; pop rsp ; sti ; jmp rbx
0x00000000004030e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004364c4 : hlt ; add rsp, 0x1b0 ; pop rbp ; ret
0x000000000045f730 : hlt ; add rsp, 0x380 ; pop rbp ; ret
0x00000000004a245c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000476881 : hlt ; add rsp, 8 ; pop rbp ; ret
0x000000000045f235 : hlt ; and dl, byte ptr [rcx] ; ret 0x76b9
0x000000000045e0b1 : hlt ; and dl, byte ptr [rcx] ; ret 0x8589
0x000000000043aa2c : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044ff31 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000461f88 : hlt ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402b70 : hlt ; pop rbp ; mov edi, 0x6b3560 ; jmp rax
0x000000000042e616 : hlt ; ret
0x000000000042807d : hlt ; ret 0x8589
0x0000000000429283 : hlt ; ret 0xba
0x00000000004b1791 : hlt ; std ; jmp qword ptr [rdx]
0x000000000049a016 : idiv bh ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004b08b9 : idiv cl ; call qword ptr [rsi]
0x00000000004b08d9 : idiv cl ; jmp rsp
0x00000000004af1ee : idiv edi ; add byte ptr [rax], dl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 9], bh ; jmp qword ptr [rax]
0x00000000004af22e : idiv edi ; add byte ptr [rcx], dl ; add byte ptr [rax], al ; call 0x214aea30
0x0000000000499a6b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040bc00 : imul eax, dword ptr [rax], -0x39 ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000041c0e3 : imul eax, dword ptr [rax], -0x77 ; ret 0x8b48
0x000000000040a616 : imul eax, dword ptr [rax], -0x77 ; ret 0xca29
0x000000000042c592 : imul eax, dword ptr [rax], -0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000417798 : imul eax, dword ptr [rax], -0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000442797 : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b920 : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d8c7 : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402bf8 : imul eax, dword ptr [rax], 0x48 ; mov ebp, esp ; call rax
0x000000000042abae : imul eax, dword ptr [rax], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000412f7d : imul eax, dword ptr [rax], 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000402bf7 : imul eax, dword ptr cs:[rax], 0x48 ; mov ebp, esp ; call rax
0x000000000040bbff : imul eax, dword ptr ss:[rax], -0x39 ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x00000000004422a3 : imul eax, dword ptr ss:[rax], -0x77 ; ret 0xca29
0x000000000041829f : imul eax, dword ptr ss:[rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d8c6 : imul eax, dword ptr ss:[rax], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000494be9 : imul edx, dword ptr [rbx], 0x75b80000 ; ret 0xf79e
0x0000000000419ae8 : imul esi, dword ptr [rsi + rax*4 - 0x47], 0x65 ; ret
0x00000000004a4a3a : in al, -0x17 ; ret
0x0000000000433686 : in al, -1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x00000000004744b5 : in al, -8 ; dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000045d938 : in al, 0x2d ; ret 0xc226
0x0000000000439648 : in al, 0x48 ; add esp, 0x16c0 ; pop rbp ; ret
0x00000000004a7821 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000047070e : in al, 0x56 ; or al, 0x38 ; ret
0x000000000040fcd0 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004a1ea5 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004ac038 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004a4a7a : in al, dx ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000046e3c1 : in al, dx ; jmp 0x46e58d
0x000000000046e3c0 : in al, dx ; jmp 0x46e58e
0x00000000004a3b9c : in al, dx ; jmp 0x4a3c19
0x00000000004a3b9b : in al, dx ; jmp 0x4a3c1a
0x00000000004a4de5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000457e4c : in al, dx ; mov bh, -0x7f ; ret 0xff97
0x000000000040edb9 : in al, dx ; pop rbp ; ret
0x0000000000403e3e : in al, dx ; ret 0x8380
0x000000000046b38a : in al, dx ; ret 0x8589
0x000000000042d18a : in al, dx ; ret 0x865e
0x000000000046e3a4 : in al, dx ; ret 0xe8ff
0x000000000046bc9d : in al, dx ; ret 0xff3
0x00000000004b0839 : in al, dx ; stc ; call qword ptr [rcx]
0x000000000044ee0a : in eax, dx ; adc eax, ebp ; js 0x44edfd ; ret
0x000000000043f56f : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004af1ef : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], bh ; jle 0x4af1f6 ; jmp qword ptr [rax]
0x00000000004af32f : inc dword ptr [rax] ; adc eax, 0x41480000 ; stc ; jmp qword ptr [rax]
0x00000000004af2af : inc dword ptr [rax] ; adc eax, dword ptr [rax] ; add byte ptr [rax - 4], bl ; clc ; jmp qword ptr [rax]
0x000000000040b50d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000045f678 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040b3fa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d9e6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004af767 : inc dword ptr [rax] ; add byte ptr es:[rax], al ; js 0x4af73f ; std ; jmp qword ptr [rax]
0x00000000004af6e7 : inc dword ptr [rax] ; and al, 0 ; add byte ptr [rax - 0x77], bl ; std ; jmp qword ptr [rax]
0x00000000004af727 : inc dword ptr [rax] ; and eax, 0x9b680000 ; std ; jmp qword ptr [rax]
0x0000000000426d91 : inc dword ptr [rbp + 0xf] ; ret
0x000000000045427f : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000472d07 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000454a74 : inc dword ptr [rbp - 0x77] ; ret 0x8941
0x000000000040a552 : inc dword ptr [rcx + 0xf] ; ret
0x00000000004ac01d : inc dword ptr [rcx + 0xf] ; ret 0x4589
0x000000000040e185 : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000041c139 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x000000000041c41e : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x00000000004583df : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000045ad34 : inc dword ptr [rcx - 0x7fb41319] ; ret 0x2141
0x000000000045ad1d : inc dword ptr [rcx - 0x7fb4131a] ; ret 0xf181
0x000000000040dbf1 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041c978 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004af31f : inc eax ; adc al, 0 ; add byte ptr [rax + 0x3e], ch ; stc ; jmp rax
0x00000000004af25f : inc eax ; adc dword ptr [rax], eax ; add al, cl ; stosd dword ptr [rdi], eax ; clc ; jmp rax
0x00000000004af35f : inc eax ; adc eax, 0x6ff80000 ; stc ; jmp rax
0x00000000004af797 : inc eax ; add byte ptr es:[rax], al ; pop rax ; add esi, edi ; jmp rax
0x00000000004af757 : inc eax ; and eax, 0xc4a80000 ; std ; jmp rax
0x00000000004540fb : inc ecx ; jmp 0x2207ca20
0x0000000000455116 : inc ecx ; jmp 0x2207da2c
0x0000000000455d61 : inc ecx ; jmp 0x2207e688
0x0000000000455f97 : inc ecx ; jmp 0x2207e8b5
0x000000000045609f : inc ecx ; jmp 0x2207e9b7
0x00000000004561ac : inc ecx ; jmp 0x2207ead3
0x0000000000456ff0 : inc ecx ; jmp 0x2207f918
0x00000000004570dc : inc ecx ; jmp 0x2207f9fd
0x00000000004578d5 : inc ecx ; jmp 0x220801fd
0x0000000000458784 : inc ecx ; jmp 0x2208109b
0x0000000000458e98 : inc ecx ; jmp 0x220817be
0x000000000045993f : inc ecx ; jmp 0x22082255
0x0000000000459d98 : inc ecx ; jmp 0x220826b8
0x0000000000459ed7 : inc ecx ; jmp 0x220827f2
0x000000000045a0dc : inc ecx ; jmp 0x220829f4
0x000000000045a1f7 : inc ecx ; jmp 0x22082b1a
0x000000000045a634 : inc ecx ; jmp 0x22082f5c
0x000000000045ad86 : inc ecx ; jmp 0x220836ac
0x000000000045afee : inc ecx ; jmp 0x22083914
0x000000000045468b : inc ecx ; ret 0x8907
0x0000000000455e51 : inc ecx ; ret 0x8909
0x000000000045420b : inc ecx ; ret 0x890c
0x0000000000456426 : inc ecx ; ret 0x890e
0x0000000000455539 : inc ecx ; ret 0x8911
0x0000000000457b9a : inc ecx ; ret 0x8917
0x000000000049dc19 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000040bbe2 : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rcx]
0x000000000040bafe : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000040d45f : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; call rax
0x000000000040dc4f : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x000000000040e497 : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rcx
0x000000000040e5a4 : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rdi
0x000000000040d43e : inc edi ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rsp
0x000000000048ba9b : insb byte ptr [rdi], dx ; ret
0x000000000049a956 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000041adcb : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000459aba : insd dword ptr [rdi], dx ; loope 0x459ae1 ; ret 0x941
0x000000000049623c : insd dword ptr [rdi], dx ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000049a9aa : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000045a6e6 : int 0
0x0000000000487a97 : int 0x5b
0x000000000046c3b4 : int 6
0x000000000040e191 : int1 ; or dword ptr [rax], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rcx]
0x00000000004ac5c5 : iretd ; test al, -0x47 ; call rsi
0x0000000000402b63 : ja 0x402b6a ; pop rbp ; ret
0x0000000000425b2a : ja 0x425abe ; test dword ptr [rbp + rdi*8 - 0x7bf00001], edx ; ret 7
0x000000000046df61 : ja 0x46dfae ; pop rbp ; ret
0x000000000048a716 : ja 0x48a723 ; pop rbp ; ret
0x000000000048a736 : ja 0x48a74b ; pop rbp ; ret
0x00000000004b1939 : ja 0x4b193b ; call rdx
0x000000000040a64a : jae 0x40a669 ; pop rdi ; adc byte ptr [rbp - 0x77], cl ; ret 0x294d
0x000000000048d75e : jb 0x48d73c ; ret
0x000000000048d76e : jb 0x48d74c ; ret
0x000000000049993e : jb 0x49996f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004af995 : jb 0x4af998 ; call rax
0x0000000000470ead : jbe 0x470e86 ; adc ch, cl ; ret
0x00000000004b00b1 : jbe 0x4b00ac ; jmp qword ptr [rax]
0x0000000000402b6f : je 0x402b6d ; pop rbp ; mov edi, 0x6b3560 ; jmp rax
0x0000000000475512 : je 0x47551d ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004b0ef4 : je 0x4b0f11 ; add byte ptr [rax], al ; mov ah, bl ; sti ; jmp qword ptr [rdi]
0x0000000000472aed : jg 0x472b01 ; xchg eax, esp ; ret 0xd284
0x0000000000472d54 : jg 0x472d68 ; xchg eax, esp ; ret 0xd284
0x0000000000472e8a : jg 0x472e9e ; xchg eax, esp ; ret 0xd284
0x00000000004af7dd : jg 0x4af7df ; jmp rax
0x000000000044ff2d : jge 0x44ff2f ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000045c9e7 : jge 0x45c9c1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000045ca43 : jge 0x45ca1d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000046307a : jge 0x46307b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000046309a : jge 0x46309b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004647ab : jge 0x46478e ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000046df5d : jge 0x46df5e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000046eb6b : jge 0x46eb6c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004761d3 : jge 0x4761a9 ; call 0x4023f4
0x0000000000480f26 : jge 0x480eab ; ret 0xffd5
0x00000000004819f0 : jge 0x4819d0 ; shr cl, cl ; ret 0x3b
0x000000000048a712 : jge 0x48a713 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000048a732 : jge 0x48a733 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000046b0e8 : jle 0x46b07c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004af1f5 : jle 0x4af1f0 ; jmp qword ptr [rax]
0x00000000004540fd : jmp 0x2207ca1e
0x0000000000455118 : jmp 0x2207da2a
0x0000000000455d63 : jmp 0x2207e686
0x0000000000455f99 : jmp 0x2207e8b3
0x00000000004560a1 : jmp 0x2207e9b5
0x00000000004561ae : jmp 0x2207ead1
0x0000000000456ff2 : jmp 0x2207f916
0x00000000004570de : jmp 0x2207f9fb
0x00000000004578d7 : jmp 0x220801fb
0x0000000000458786 : jmp 0x22081099
0x0000000000458e9a : jmp 0x220817bc
0x0000000000459941 : jmp 0x22082253
0x0000000000459d9a : jmp 0x220826b6
0x0000000000459ed9 : jmp 0x220827f0
0x000000000045a0de : jmp 0x220829f2
0x000000000045a1f9 : jmp 0x22082b18
0x000000000045a636 : jmp 0x22082f5a
0x000000000045ad88 : jmp 0x220836aa
0x000000000045aff0 : jmp 0x22083912
0x000000000045a0af : jmp 0x28088f38
0x000000000040252b : jmp 0x402367
0x0000000000403db2 : jmp 0x403d77
0x000000000040e385 : jmp 0x40e38a
0x000000000040e746 : jmp 0x40e74b
0x000000000040be6f : jmp 0x40eb8c
0x000000000040ba62 : jmp 0x40eb8d
0x000000000040ba62 : jmp 0x40eb8e
0x000000000040ffa2 : jmp 0x40ffad
0x0000000000410764 : jmp 0x410adb
0x0000000000411e24 : jmp 0x41232e
0x0000000000411a63 : jmp 0x412330
0x00000000004140da : jmp 0x414854
0x0000000000417628 : jmp 0x418913
0x0000000000419cff : jmp 0x41a369
0x000000000041c068 : jmp 0x41cf19
0x000000000041e293 : jmp 0x41e8d2
0x0000000000423feb : jmp 0x4240a6
0x000000000042c9f7 : jmp 0x42cf85
0x000000000042d09b : jmp 0x42d195
0x000000000042daa4 : jmp 0x42db6c
0x0000000000433585 : jmp 0x43547f
0x0000000000434bc5 : jmp 0x435480
0x00000000004358a8 : jmp 0x435991
0x000000000043616c : jmp 0x43652a
0x0000000000438c9e : jmp 0x439977
0x000000000043a714 : jmp 0x43abfe
0x0000000000445e71 : jmp 0x44605f
0x0000000000445f99 : jmp 0x446060
0x0000000000445fa5 : jmp 0x446061
0x0000000000449177 : jmp 0x44ab0c
0x000000000044bee4 : jmp 0x44c572
0x000000000044f3d0 : jmp 0x44f43b
0x0000000000456c3a : jmp 0x456ca2
0x000000000045ee4c : jmp 0x45f879
0x00000000004618a0 : jmp 0x46219c
0x0000000000461c65 : jmp 0x46219e
0x00000000004624ff : jmp 0x46262f
0x0000000000462e7e : jmp 0x462f5e
0x0000000000463db4 : jmp 0x464010
0x0000000000464649 : jmp 0x4647d5
0x00000000004664da : jmp 0x46661e
0x00000000004664d9 : jmp 0x46661f
0x00000000004664d9 : jmp 0x466620
0x000000000046e3c2 : jmp 0x46e58c
0x0000000000470030 : jmp 0x470310
0x000000000047002f : jmp 0x470311
0x0000000000470661 : jmp 0x4706e2
0x0000000000482140 : jmp 0x4855c0
0x0000000000480044 : jmp 0x4855c1
0x0000000000481411 : jmp 0x4855c2
0x000000000046ba1f : jmp 0x4909436f
0x000000000046bb6b : jmp 0x490944bb
0x000000000046bc3d : jmp 0x4909458d
0x000000000046bcbe : jmp 0x4909460e
0x000000000046dc64 : jmp 0x490965b4
0x000000000046dcdf : jmp 0x4909662f
0x0000000000497c7b : jmp 0x4986e7
0x0000000000497bb8 : jmp 0x4986e9
0x0000000000499ce3 : jmp 0x499d48
0x000000000049cc1b : jmp 0x49dd60
0x000000000049d636 : jmp 0x49dd61
0x000000000049de89 : jmp 0x49de94
0x00000000004a0996 : jmp 0x4a1a59
0x00000000004a07b3 : jmp 0x4a1a5a
0x00000000004a1bf0 : jmp 0x4a1bfb
0x00000000004a3b9d : jmp 0x4a3c18
0x00000000004a4be5 : jmp 0x4a4bf0
0x00000000004a4d47 : jmp 0x4a4d52
0x00000000004a4fb5 : jmp 0x4a4fc0
0x00000000004aaf06 : jmp 0x4ab1e8
0x00000000004ab468 : jmp 0x4ab658
0x00000000004aba7e : jmp 0x4abcf9
0x000000000049885a : jmp 0x4f554b56
0x00000000004584bd : jmp 0x98746e5
0x00000000004205f4 : jmp 0xffffffff8a89c86c
0x000000000044ab2c : jmp 0xffffffffa306fa9a
0x000000000045d8f4 : jmp 0xffffffffb607ffbd
0x000000000042dcbd : jmp 0xffffffffc2e63cb3
0x000000000043c4dc : jmp 0xffffffffc30c9d5c
0x0000000000449654 : jmp 0xffffffffc37d9904
0x0000000000449664 : jmp 0xffffffffc37d9914
0x000000000048b734 : jmp 0xffffffffc3951247
0x00000000004a325f : jmp 0xffffffffc40e6926
0x000000000040e4f7 : jmp qword ptr [rax]
0x000000000040ea4f : jmp qword ptr [rbx]
0x000000000040fa71 : jmp qword ptr [rcx]
0x0000000000409e86 : jmp qword ptr [rdi]
0x000000000040dab8 : jmp qword ptr [rdx]
0x00000000004555b1 : jmp qword ptr [rsi - 0x163ddfdb]
0x000000000040dc55 : jmp qword ptr [rsi]
0x0000000000402b77 : jmp rax
0x000000000040a16c : jmp rbx
0x0000000000409d7e : jmp rcx
0x000000000040e5aa : jmp rdi
0x0000000000402bb7 : jmp rdx
0x00000000004186fa : jmp rsi
0x000000000040d444 : jmp rsp
0x0000000000402ba0 : jne 0x402ba7 ; pop rbp ; ret
0x0000000000426437 : jne 0x426401 ; mov rdx, qword ptr [rbp - 0x10] ; call 0x4026f8
0x0000000000442d12 : jne 0x442d0a ; mov rax, rdx ; pop rbp ; ret
0x000000000044ff30 : jne 0x44ff2b ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000464809 : jne 0x4647d4 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004665d5 : jne 0x4665b1 ; call rax
0x000000000046eb6f : jne 0x46eb64 ; pop rbp ; ret
0x000000000049f9e6 : jne 0x49fa61 ; ret 0x8589
0x000000000049fb6e : jne 0x49fbe9 ; ret 0x8589
0x00000000004a1188 : jne 0x4a1203 ; ret 0xedb9
0x00000000004a13e0 : jne 0x4a145b ; ret 0xedb9
0x0000000000456f02 : jnp 0x456eee ; push rdx ; ret 0xe281
0x0000000000456f0f : jnp 0x456efb ; push rdx ; ret 0xe781
0x000000000047002d : jnp 0x46ffeb ; jmp 0x470313
0x00000000004af9a5 : jns 0x4af9a8 ; call qword ptr [rax]
0x0000000000406d7e : jo 0x406d22 ; ret
0x000000000040a279 : jo 0x40a21d ; ret
0x000000000040c39c : jo 0x40c3a6 ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000042df48 : jo 0x42dfa9 ; ret
0x000000000043ef4e : jo 0x43efaf ; ret
0x000000000044b2d3 : jo 0x44b2d7 ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045db0e : jo 0x45db6f ; ret
0x000000000047ae3e : jo 0x47ae4a ; ret
0x000000000047caae : jo 0x47caba ; ret
0x000000000047fffd : jo 0x480009 ; ret
0x00000000004872e4 : jo 0x487345 ; ret
0x000000000048aceb : jo 0x48ad4c ; ret
0x000000000048b6f3 : jo 0x48b754 ; ret
0x000000000043a817 : jp 0x43a83c ; ret 0x941
0x0000000000457502 : jp 0x45749a ; pop rbx ; cmove esp, dword ptr [rcx] ; ret 0x8941
0x000000000048acd8 : jp 0x48acec ; call rax
0x000000000048debb : jp 0x48deed ; ret 0x410b
0x000000000048dec9 : jp 0x48defb ; ret 0x490b
0x000000000042927f : jrcxz 0x42923f ; xor esp, dword ptr [rsi] ; hlt ; ret 0xba
0x000000000047260b : jrcxz 0x472590 ; ret 0xffbf
0x000000000047260b : jrcxz 0x472596 ; ret 0xffbf
0x00000000004899a3 : jrcxz 0x4899c4 ; ret 0x8977
0x0000000000489d0c : jrcxz 0x489d2d ; ret 0xb277
0x0000000000489d28 : jrcxz 0x489d49 ; ret 0x4877
0x000000000044ee0d : js 0x44edfa ; ret
0x0000000000470fc6 : js 0x471027 ; ret
0x0000000000490821 : js 0x490845 ; ret 0x841
0x00000000004af76c : js 0x4af73a ; std ; jmp qword ptr [rax]
0x00000000004b1138 : js 0x4b1194 ; cld ; call qword ptr [rdx]
0x00000000004b12c8 : js 0x4b1328 ; std ; jmp qword ptr [rbx]
0x00000000004b1959 : js 0x4b195b ; call qword ptr [rdx]
0x00000000004b1958 : js 0x4b195c ; call qword ptr [rdx]
0x0000000000446a3c : lahf ; mov ch, 0x3d ; ret
0x000000000040e465 : lahf ; out 0x21, eax ; ret 0x941
0x00000000004704d5 : lahf ; ret
0x0000000000474450 : lahf ; ret 0xd284
0x00000000004819ee : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000455b34 : lcall ptr [rdi - 0x165833bf] ; ret 0x57
0x0000000000482aee : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000424540 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000455f93 : lea ebx, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2207e8b9
0x0000000000459ed3 : lea ebx, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x220827f6
0x000000000048c3ae : lea ecx, dword ptr [rbx - 0x3c] ; cmp byte ptr [rax + 1], cl ; ret 0x8948
0x000000000049c944 : lea edx, dword ptr [rax - 0x17000006] ; ret 0xf661
0x000000000043f74c : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004875d9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042285f : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004540f7 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2207ca24
0x0000000000455d5d : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2207e68c
0x00000000004561a8 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2207ead7
0x0000000000456fec : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2207f91c
0x00000000004578d1 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x22080201
0x0000000000458e94 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x220817c2
0x000000000045a630 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x22082f60
0x000000000045ad82 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x220836b0
0x000000000045afea : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x22083918
0x000000000043f74b : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042285e : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041d768 : leave ; jmp qword ptr [rdx]
0x000000000040381e : leave ; ret
0x0000000000452cc9 : leave ; ret 0xe1b4
0x00000000004af76d : leave ; std ; jmp qword ptr [rax]
0x0000000000475d07 : les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x00000000004ab61d : les r8d, ptr [r10 + rcx*4 + 0x4d] ; ret
0x00000000004ab516 : les r8d, ptr [r10 + rcx*4 + 0x5d] ; ret
0x000000000048034e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000456333 : ljmp ptr [rdx - 0x6c] ; pop rsp ; adc cl, ch ; ret
0x00000000004af9a0 : lock add byte ptr cs:[rax], al ; or byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x00000000004af668 : lock and dword ptr [rax], eax ; add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000041e31b : lodsb al, byte ptr [rsi] ; add eax, 0xcab80000 ; jmp qword ptr [rdx]
0x000000000040c6d6 : lodsb al, byte ptr [rsi] ; and al, 0 ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000042c9f6 : lodsb al, byte ptr [rsi] ; jmp 0x42cf86
0x000000000042c9f5 : lodsb al, byte ptr [rsi] ; jmp 0x42cf87
0x000000000040718a : lodsb al, byte ptr [rsi] ; ret
0x000000000045fa0c : lodsb al, byte ptr [rsi] ; ret 0x89af
0x00000000004b162c : lodsb al, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add al, dl ; xchg eax, esi ; std ; call qword ptr [rax]
0x0000000000433583 : lodsb al, byte ptr [rsi] ; xchg eax, esi ; jmp 0x435481
0x0000000000463b3d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004071de : lodsd eax, dword ptr [rsi] ; ret
0x000000000045fa4e : lodsd eax, dword ptr [rsi] ; ret 0x89af
0x00000000004600b1 : lodsd eax, dword ptr [rsi] ; ret 0xb9af
0x000000000040e462 : loop 0x40e423 ; lahf ; out 0x21, eax ; ret 0x941
0x0000000000415295 : loop 0x4152a1 ; movzx eax, dl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416547 : loop 0x416503 ; ret
0x000000000041657f : loop 0x41653b ; ret
0x0000000000417328 : loop 0x4172e4 ; ret
0x0000000000417344 : loop 0x417300 ; ret
0x000000000043a813 : loop 0x43a7e1 ; and ebx, dword ptr [rbx] ; jp 0x43a840 ; ret 0x941
0x0000000000463180 : loop 0x463175 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000488cbb : loop 0x488cdc ; ret 0x8977
0x00000000004a4ee2 : loop 0x4a4e95 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000454f5c : loope 0x454f01 ; cwde ; xor eax, dword ptr [rbx - 0x76ba35df] ; ret 0x8141
0x0000000000459172 : loope 0x4590fd ; and al, 0x70 ; fsub dword ptr [rcx] ; ret 0x941
0x0000000000459abb : loope 0x459ae0 ; ret 0x941
0x0000000000463ebe : loope 0x463e79 ; xchg eax, ebp ; jmp 0x464013
0x0000000000483355 : loope 0x483323 ; jmp 0x4855c3
0x000000000041838a : loopne 0x418370 ; add byte ptr [rax - 0x77], cl ; ret 0xcae8
0x0000000000422cb8 : loopne 0x422cec ; pop rbx ; mov al, -0x1d ; ret
0x0000000000422cb7 : loopne 0x422ced ; pop rbx ; mov al, -0x1d ; ret
0x0000000000422cfa : loopne 0x422d2e ; pop rsp ; mov al, -0x1d ; ret
0x0000000000422cf9 : loopne 0x422d2f ; pop rsp ; mov al, -0x1d ; ret
0x000000000042366a : loopne 0x4236d0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000434ee0 : loopne 0x434f02 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c17c : loopne 0x43c1cc ; add esp, 0x20 ; pop rbp ; ret
0x000000000043c17b : loopne 0x43c1cd ; add esp, 0x20 ; pop rbp ; ret
0x000000000044481f : loopne 0x444872 ; add esp, 0x140 ; pop rbp ; ret
0x0000000000445a6b : loopne 0x445a74 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000456f0e : loopne 0x456f8f ; out 0x52, eax ; ret 0xe781
0x000000000045d8bb : loopne 0x45d90b ; add esp, 0x20 ; pop rbp ; ret
0x000000000045d8ba : loopne 0x45d90c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000460127 : loopne 0x460130 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004655aa : loopne 0x4655b1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000468bfe : loopne 0x468c4f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000468bfd : loopne 0x468c50 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000046de9d : loopne 0x46def0 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000472ffa : loopne 0x473004 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000474617 : loopne 0x474620 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004761d0 : loopne 0x476221 ; mov edi, dword ptr [rbp - 0x30] ; call 0x4023f7
0x00000000004761cf : loopne 0x476222 ; mov edi, dword ptr [rbp - 0x30] ; call 0x4023f8
0x0000000000477733 : loopne 0x477786 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000486cdd : loopne 0x486d43 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004880c4 : loopne 0x488117 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000048a4eb : loopne 0x48a4f5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000048ac3d : loopne 0x48ac47 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000048dd6b : loopne 0x48dd75 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000049588e : loopne 0x49587b ; ret 6
0x0000000000496fdc : loopne 0x496f70 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000496fdb : loopne 0x496f71 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004993a3 : loopne 0x4993ac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000499d2e : loopne 0x499d7e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000499d2d : loopne 0x499d7f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004a1d5f : loopne 0x4a1cf3 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a1d5e : loopne 0x4a1cf4 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a2460 : loopne 0x4a2467 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a4122 : loopne 0x4a4129 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a4a7e : loopne 0x4a4a85 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a723c : loopne 0x4a728b ; mov esp, ebp ; pop rbp ; ret
0x00000000004a723b : loopne 0x4a728c ; mov esp, ebp ; pop rbp ; ret
0x00000000004a748c : loopne 0x4a74db ; mov esp, ebp ; pop rbp ; ret
0x00000000004a748b : loopne 0x4a74dc ; mov esp, ebp ; pop rbp ; ret
0x00000000004a8468 : loopne 0x4a846f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044ee09 : mov ah, -0x13 ; adc eax, ebp ; js 0x44edfe ; ret
0x000000000043a72d : mov ah, -0x17 ; ret
0x00000000004a4ee1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000043aba5 : mov ah, -0x70 ; cld ; sahf ; ret 0x8948
0x0000000000480f1d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000480ff7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000045a3d8 : mov ah, -0x77 ; ret 0xca29
0x0000000000472dc8 : mov ah, -1 ; ret 0x5589
0x00000000004144ee : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b1134 : mov ah, 0x16 ; add byte ptr [rax], al ; js 0x4b1198 ; cld ; call qword ptr [rdx]
0x00000000004b1934 : mov ah, 0x1e ; add byte ptr [rax], al ; mov byte ptr [rdi - 2], dh ; call rdx
0x0000000000445d22 : mov ah, 0x2d ; pop rax ; ret
0x0000000000445c34 : mov ah, 0x2d ; push rdi ; ret
0x00000000004ab6cc : mov ah, 0x2d ; ret
0x000000000049e470 : mov ah, 0x2d ; ret 0x37ac
0x0000000000445e03 : mov ah, 0x2d ; ret 0xd121
0x000000000049e43e : mov ah, 0x2d ; xchg eax, ebp ; ret
0x000000000049e489 : mov ah, 0x2d ; xchg eax, esi ; ret
0x000000000046411e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000047efa5 : mov ah, 0x75 ; ret
0x0000000000423a4a : mov ah, 0x7b ; ret
0x00000000004b0834 : mov ah, 0xd ; add byte ptr [rax], al ; or ah, ch ; stc ; call qword ptr [rcx]
0x000000000041423f : mov ah, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b0ed8 : mov ah, bl ; sti ; call qword ptr [rbx]
0x00000000004b0ef8 : mov ah, bl ; sti ; jmp qword ptr [rdi]
0x000000000045b038 : mov al, -0x17 ; ret 2
0x0000000000422cbb : mov al, -0x1d ; ret
0x0000000000487ab3 : mov al, -0x47 ; ret
0x000000000045505a : mov al, -0x48 ; cmp al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000463ebf : mov al, -0x6b ; jmp 0x464012
0x0000000000442356 : mov al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000475cb3 : mov al, -0x77 ; ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x00000000004aa6cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000417d1a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403553 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004af658 : mov al, 0x21 ; add byte ptr [rax], al ; mov byte ptr [rcx - 3], ch ; call rax
0x00000000004af990 : mov al, 0x2e ; add byte ptr [rax], al ; mov byte ptr [rdx - 1], dh ; call rax
0x00000000004afa10 : mov al, 0x30 ; add byte ptr [rax], al ; sar dil, cl ; call rax
0x000000000046d2a0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x00000000004364c8 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a533b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x00000000004a5aad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a577a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a59dd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a53fc : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004a533a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004a5104 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004a5109 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000457e4d : mov bh, -0x7f ; ret 0xff97
0x000000000048f0f7 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000049544d : mov bl, -0x47 ; out dx, eax ; push rdi ; ret 0xf13
0x000000000045df64 : mov bl, -0x77 ; test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret 0x15
0x000000000047002e : mov bl, 0x4a ; jmp 0x470312
0x0000000000478945 : mov bl, 0x75 ; ret
0x0000000000421e51 : mov byte ptr [r8 + 0x3b], r9b ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8445
0x0000000000421e52 : mov byte ptr [rax + 0x3b], cl ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8445
0x000000000041e3ae : mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000044d23b : mov byte ptr [rax], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e2c2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000463f81 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004aba7b : mov byte ptr [rbp - 0x45], cl ; jmp 0x4abcfc
0x000000000040edf7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000449d72 : mov byte ptr [rbx], ah ; ret
0x00000000004af2e4 : mov byte ptr [rbx], bl ; stc ; jmp rax
0x00000000004af65c : mov byte ptr [rcx - 3], ch ; call rax
0x00000000004b1938 : mov byte ptr [rdi - 2], dh ; call rdx
0x00000000004af994 : mov byte ptr [rdx - 1], dh ; call rax
0x0000000000402bd3 : mov byte ptr [rip + 0x2b09de], 1 ; ret
0x0000000000446a3d : mov ch, 0x3d ; ret
0x0000000000423aba : mov ch, 0x7b ; ret
0x000000000048079f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000046e794 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000415298 : mov dh, -0x3e ; mov rsp, rbp ; pop rbp ; ret
0x000000000042285c : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000424eb6 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a6744 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000042d170 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000046759a : mov dh, -0x40 ; pop rbp ; ret
0x00000000004a53ff : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000414fc7 : mov dh, -0xb ; ret
0x0000000000458a03 : mov dh, 0x21 ; ret 0x941
0x00000000004619d5 : mov dh, 0x3c ; add eax, ebp ; ret
0x0000000000495ecb : mov dh, 0x4d ; mov esi, 0xcf0c582d ; ret
0x00000000004a71fa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004af9d5 : mov dr1, edi ; call rax
0x00000000004a6471 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000476eb9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000048d3a3 : mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x000000000048bd7a : mov dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000476a8f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000046eb6e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x0000000000466455 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000468a99 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000040fcce : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046e3bf : mov dword ptr [rbp - 0x14], eax ; jmp 0x46e58f
0x00000000004a3b9a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4a3c1b
0x00000000004233e8 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000046c86d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x000000000046caa0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000043c17a : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004761ce : mov dword ptr [rbp - 0x20], eax ; mov rdi, qword ptr [rbp - 0x30] ; call 0x4023f9
0x0000000000462e7b : mov dword ptr [rbp - 0x24], eax ; jmp 0x462f61
0x0000000000463db1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x464013
0x0000000000411e21 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x412331
0x0000000000464646 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x4647d8
0x00000000004646d1 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x4647d8
0x0000000000410761 : mov dword ptr [rbp - 0x44], eax ; jmp 0x410ade
0x000000000042daa1 : mov dword ptr [rbp - 0x44], eax ; jmp 0x42db6f
0x000000000046411c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042c9f4 : mov dword ptr [rbp - 0x54], eax ; jmp 0x42cf88
0x000000000041457f : mov dword ptr [rbp - 0x5c], eax ; jmp 0x414857
0x000000000044a241 : mov dword ptr [rbp - 0x6c0], ecx ; call 0x426488
0x0000000000497c78 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4986ea
0x000000000046189d : mov dword ptr [rbp - 0x74], eax ; jmp 0x46219f
0x0000000000423627 : mov dword ptr [rbp - 0xa4], eax ; call 0x43f8a8
0x000000000046f9e7 : mov dword ptr [rbp - 0xc8], ecx ; call rdx
0x00000000004030e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046fa6a : mov dword ptr [rbp - 0xd0], ecx ; call rdx
0x00000000004646b1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x000000000046eb6a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040a5f9 : mov dword ptr [rbp], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x0000000000477196 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000048a735 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000044fcbd : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000046df60 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000048a715 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x000000000044ff32 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000414976 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000046f323 : mov dword ptr [rdx + rcx*8], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422516 : mov dword ptr [rip + 0x72b80000], eax ; ret 0x8a47
0x0000000000476d3d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000046ee9f : mov eax, 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d763 : mov eax, 0x2dfffffe ; leave ; jmp qword ptr [rdx]
0x0000000000439967 : mov eax, 0x44ffffed ; cmovl esp, dword ptr [rdx - 0x17] ; ret
0x000000000042cdd5 : mov eax, 0x48008b48 ; mov esp, ebp ; pop rbp ; ret
0x0000000000444c25 : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000046cc0b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004a0997 : mov eax, 0xb8000010 ; ret
0x000000000040e5a1 : mov eax, 0xc7fffffe ; test dword ptr [rsp + rdi*8 - 1], eax ; jmp rdi
0x000000000048d75b : mov eax, 0xda72bf48 ; ret
0x000000000045eee5 : mov eax, 0xffffffc ; ret 0x8589
0x000000000044d239 : mov eax, dword ptr [rax] ; mov byte ptr [rax], 0 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004262f2 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000499bab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044fe5c : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004ac0b5 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004a1ea3 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000049df31 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000488bbe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042dc8e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045d53e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a3a15 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004667f2 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000499d2c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000496fda : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a723a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048b6ed : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000470fc0 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000499f41 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000436c9b : mov eax, dword ptr [rbp - 0x30] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d44f : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000476d3f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000046480f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x00000000004ac29a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000442354 : mov eax, dword ptr [rbp - 0x50] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046c037 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004262ef : mov eax, dword ptr [rbp - 0x80] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047687f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000043aa2a : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000461f86 : mov eax, dword ptr [rbp - 0xc] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000435906 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000440489 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000043c6a2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000049e18c : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410024 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046307d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000046309d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000476d3e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004a5106 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x00000000004a4b53 : mov eax, eax ; pop rbp ; ret
0x00000000004a4f2a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000475cb6 : mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000048cc18 : mov eax, ecx ; pop rbp ; ret
0x0000000000467571 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000442d15 : mov eax, edx ; pop rbp ; ret
0x00000000004a4e4d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004a5105 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000045a8c9 : mov ebp, 0x2144cb22 ; ret 0x8941
0x000000000042daa5 : mov ebp, 0xb8000000 ; ret
0x0000000000483758 : mov ebp, 0xe19c53ba ; ret
0x000000000040a3a1 : mov ebp, 0xfffffeb3 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000459ab8 : mov ebp, dword ptr [rax + 0x6d] ; loope 0x459ae3 ; ret 0x941
0x00000000004af6ed : mov ebp, edi ; jmp qword ptr [rax]
0x0000000000402bfb : mov ebp, esp ; call rax
0x0000000000402b61 : mov ebp, esp ; ja 0x402b6c ; pop rbp ; ret
0x000000000045a558 : mov ebx, 0x8945ca21 ; ret 0x8141
0x0000000000462e99 : mov ebx, 0xb8000000 ; ret 0xebc8
0x0000000000494e8b : mov ebx, 0xe9539372 ; ret 0x10
0x000000000040e463 : mov ecx, 0x21e79f49 ; ret 0x941
0x0000000000449d71 : mov ecx, 0x49472388 ; ret
0x0000000000423eee : mov ecx, 0x80c91096 ; scasd eax, dword ptr [rdi] ; ret 0x480d
0x000000000045b40d : mov ecx, 0xe9000006 ; ret
0x0000000000476a8c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000046f27c : mov ecx, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004689ab : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000468bfc : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000469516 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004647ae : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000046cc0d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004689af : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000475cb4 : mov ecx, eax ; mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402bf5 : mov edi, 0x6b2e10 ; mov rbp, rsp ; call rax
0x0000000000402b72 : mov edi, 0x6b3560 ; jmp rax
0x0000000000402bb2 : mov edi, 0x6b3560 ; jmp rdx
0x000000000047260e : mov edi, 0x81ffffff ; ret 0x91d1
0x000000000046e3c3 : mov edi, 0xb8000001 ; ret
0x000000000049ca96 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000047fff7 : mov edi, 0xb8000055 ; wait ; jo 0x48000f ; ret
0x00000000004a4aa1 : mov edi, 0xc362f176 ; ret 0xc4b7
0x00000000004761d2 : mov edi, dword ptr [rbp - 0x30] ; call 0x4023f5
0x000000000044ff2c : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000048a731 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000046df5c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000048a711 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000463079 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000463099 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004689b2 : mov edi, dword ptr [rcx] ; call rax
0x00000000004665d1 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000048acd7 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x000000000047618d : mov edi, eax ; call 0x4023f4
0x00000000004ac877 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004ac876 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004af36d : mov edx, 0x1608fff9 ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004aae7e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004807bb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000049402c : mov edx, 0xe900000e ; ret 1
0x000000000042643a : mov edx, dword ptr [rbp - 0x10] ; call 0x4026f5
0x000000000048acd3 : mov edx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000044ee62 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x00000000004ac0b9 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c7eb : mov esi, 0x32c68132 ; cdq ; ret
0x0000000000449653 : mov esi, 0x3902a7e9 ; ret
0x0000000000481632 : mov esi, 0x39443e04 ; ret 0xf41
0x00000000004aae67 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000423f80 : mov esi, 0x80c91096 ; scasd eax, dword ptr [rdi] ; ret 0x480d
0x0000000000495ecd : mov esi, 0xcf0c582d ; ret
0x00000000004363b1 : mov esi, 0xd882b9da ; cld ; ret 0x558b
0x00000000004665d4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000426436 : mov esi, dword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x10] ; call 0x4026f9
0x000000000044ff2f : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004647b2 : mov esi, dword ptr [rcx] ; call rax
0x0000000000402bb0 : mov esi, eax ; mov edi, 0x6b3560 ; jmp rdx
0x000000000046480c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000048999e : mov esp, 0x2dfffffe ; jrcxz 0x4899c9 ; ret 0x8977
0x0000000000488cb6 : mov esp, 0x2dfffffe ; loop 0x488ce1 ; ret 0x8977
0x000000000043efc3 : mov esp, 0xe981c189 ; out dx, al ; ret
0x00000000004ab684 : mov esp, 0xe981c189 ; ret 0x6b4f
0x000000000041e200 : mov esp, 0xe9fffffe ; ret 6
0x000000000041e100 : mov esp, 0xe9fffffe ; ret 7
0x000000000040edb8 : mov esp, ebp ; pop rbp ; ret
0x000000000046eb6d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000046eb69 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000477195 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000048a734 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000046df5f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000048a714 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000414975 : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000046f322 : mov qword ptr [rdx + rcx*8], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000044ee08 : mov r12b, -0x13 ; adc eax, ebp ; js 0x44edff ; ret
0x000000000043a72c : mov r12b, -0x17 ; ret
0x000000000043aba4 : mov r12b, -0x70 ; cld ; sahf ; ret 0x8948
0x000000000045a3d7 : mov r12b, -0x77 ; ret 0xca29
0x0000000000445d21 : mov r12b, 0x2d ; pop rax ; ret
0x0000000000445c33 : mov r12b, 0x2d ; push rdi ; ret
0x00000000004ab6cb : mov r12b, 0x2d ; ret
0x000000000049e46f : mov r12b, 0x2d ; ret 0x37ac
0x0000000000445e02 : mov r12b, 0x2d ; ret 0xd121
0x000000000049e43d : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x000000000049e488 : mov r12b, 0x2d ; xchg eax, esi ; ret
0x000000000046411d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043efc2 : mov r12d, 0xe981c189 ; out dx, al ; ret
0x00000000004ab683 : mov r12d, 0xe981c189 ; ret 0x6b4f
0x000000000045b037 : mov r8b, -0x17 ; ret 2
0x0000000000442355 : mov r8b, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042cdd4 : mov r8d, 0x48008b48 ; mov esp, ebp ; pop rbp ; ret
0x000000000042cdd6 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000499baa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004ac0b4 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000488bbd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042dc8d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045d53d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004667f1 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000499d2b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000470fbf : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000044d44e : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000046480e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000043c6a1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410023 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046307c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000046309c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004a4f29 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004a4b52 : mov rax, r8 ; pop rbp ; ret
0x000000000048cc17 : mov rax, rcx ; pop rbp ; ret
0x0000000000467570 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000442d14 : mov rax, rdx ; pop rbp ; ret
0x0000000000402bfa : mov rbp, rsp ; call rax
0x0000000000402b60 : mov rbp, rsp ; ja 0x402b6d ; pop rbp ; ret
0x000000000046f27b : mov rcx, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000469515 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004647ad : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000046cc0c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004689ae : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004761d1 : mov rdi, qword ptr [rbp - 0x30] ; call 0x4023f6
0x000000000048a730 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000046df5b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000048a710 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000463078 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000463098 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004689b1 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004665d0 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000048acd6 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000047618c : mov rdi, rax ; call 0x4023f5
0x0000000000426439 : mov rdx, qword ptr [rbp - 0x10] ; call 0x4026f6
0x000000000048acd2 : mov rdx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000044ee61 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x00000000004ac0b8 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004665d3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004647b1 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000402baf : mov rsi, rax ; mov edi, 0x6b3560 ; jmp rdx
0x000000000046480b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000040edb7 : mov rsp, rbp ; pop rbp ; ret
0x0000000000499941 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000439bb8 : mov word ptr [rax - 0x77], cs ; ret 0xb0
0x00000000004b040c : mov word ptr [rcx], cs ; add byte ptr [rax], al ; nop ; std ; clc ; jmp qword ptr [rax]
0x00000000004b150c : mov word ptr [rdx], ds ; add byte ptr [rax], al ; add byte ptr [rdi - 3], ah ; jmp qword ptr [rbx]
0x000000000048e711 : movabs al, byte ptr [0x8348e28948004023] ; ret 0x48f0
0x000000000047067f : movabs al, byte ptr [0x8348e2894807c1c3] ; ret 0x48f0
0x00000000004a3101 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000043efc0 : movabs al, byte ptr [0xeee981c189bc458b] ; ret
0x000000000045a4d0 : movabs al, byte ptr [0xfffffff681a1b0ec] ; jmp qword ptr [rcx]
0x00000000004373de : movabs byte ptr [0x840fffffec948589], al ; ret
0x000000000047c298 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000048d42a : movabs dword ptr [0x14899fe09a5aea4], eax ; ret 0x8948
0x0000000000457fe8 : movabs dword ptr [0x81ab9423a7c281a5], eax ; ret 0x3d91
0x000000000046bc9a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000414581 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x414855
0x0000000000414580 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x414856
0x0000000000494e8a : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebx, 0xe9539372 ; ret 0x10
0x00000000004954c1 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; push rdi ; ret 0x8a13
0x000000000047f4e5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004b1324 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add al, cl ; pop rsp ; std ; call rdi
0x00000000004400c7 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rcx], al ; adc ebp, ecx ; ret 0
0x00000000004b1424 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x60], bl ; std ; call rdx
0x00000000004ac5c3 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000494c86 : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0x2d ; ret 0xe9d8
0x0000000000474fb9 : movsd xmm0, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac801 : movsd xmm0, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b01f1 : movsxd rdi, eax ; jmp qword ptr [rcx]
0x0000000000474fba : movups xmm0, xmmword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ac802 : movups xmm0, xmmword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424eb5 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004a6743 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000042d16f : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467599 : movzx eax, al ; pop rbp ; ret
0x00000000004a53fe : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004a5108 : movzx eax, ax ; pop rbp ; ret
0x000000000046e793 : movzx eax, bh ; pop rbp ; ret
0x000000000040edfa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042285b : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000046e792 : movzx eax, dil ; pop rbp ; ret
0x0000000000415297 : movzx eax, dl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004aac78 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004b0430 : nop ; add cl, bh ; jmp qword ptr [rcx]
0x000000000043a8b0 : nop ; cld ; sahf ; ret 0x4b9
0x000000000043a1ae : nop ; cld ; sahf ; ret 0x8589
0x000000000043aba6 : nop ; cld ; sahf ; ret 0x8948
0x00000000004b00b0 : nop ; jbe 0x4b00ad ; jmp qword ptr [rax]
0x0000000000457503 : nop ; pop rbx ; cmove esp, dword ptr [rcx] ; ret 0x8941
0x0000000000478785 : nop ; ret
0x000000000042b171 : nop ; ret 0x11b9
0x0000000000486b92 : nop ; ret 0x148
0x0000000000486ba6 : nop ; ret 0x2948
0x0000000000429b68 : nop ; ret 0x8589
0x0000000000442951 : nop ; sbb cl, byte ptr [rcx - 0x7bf033bb] ; ret
0x00000000004b0410 : nop ; std ; clc ; jmp qword ptr [rax]
0x00000000004af71d : nop ; std ; jmp rax
0x00000000004ac898 : nop dword ptr [rax + rax] ; ret
0x00000000004b0838 : or ah, ch ; stc ; call qword ptr [rcx]
0x00000000004b0755 : or al, 0 ; add byte ptr [rax - 0x30], bl ; stc ; call qword ptr [rax]
0x000000000041140b : or al, 0 ; add cl, ch ; ret
0x00000000004b178c : or al, 0x1d ; add byte ptr [rax], al ; sal ah, 1 ; std ; jmp qword ptr [rdx]
0x000000000042abaa : or al, 0x25 ; add byte ptr [rbx + rbp*2], dh ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004422a0 : or al, 0x25 ; test al, 0x36 ; imul eax, dword ptr [rax], -0x77 ; ret 0xca29
0x0000000000480f1a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000480ff4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004703fa : or al, 0x38 ; ret
0x00000000004560a2 : or al, 0xffffffffffffff89 ; ret 0xca21
0x0000000000433582 : or al, 0xffffffffffffffac ; xchg eax, esi ; jmp 0x435482
0x0000000000495ed0 : or al, 0xffffffffffffffcf ; ret
0x00000000004954bc : or al, byte ptr [rax] ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; push rdi ; ret 0x8a13
0x00000000004ab62e : or al, byte ptr [rdx + rcx*4 + 0x4d] ; ret 0x8b48
0x00000000004ab527 : or al, byte ptr [rdx + rcx*4 + 0x5d] ; ret 0x8b48
0x000000000042d187 : or bh, al ; in al, dx ; ret 0x865e
0x000000000046e3a1 : or bh, al ; in al, dx ; ret 0xe8ff
0x00000000004a37c5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000048b735 : or bl, byte ptr [rbx + 0x4c] ; ret
0x00000000004262f0 : or byte ptr [r11 - 0x1376b800], 0x5d ; ret
0x000000000046b0ed : or byte ptr [r15], 0x8f ; ret 6
0x000000000041ce2b : or byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000490040 : or byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x0000000000476a90 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042ce3a : or byte ptr [rax - 0x7f], cl ; ret 0xffff
0x00000000004b034d : or byte ptr [rax], al ; add al, al ; ret
0x000000000048fb84 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x00000000004593c1 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000048b1fe : or byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x45], cl ; fmul dword ptr [rax - 0x7f] ; ret 0
0x0000000000497258 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000441ab8 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004262f1 : or byte ptr [rbx - 0x1376b800], 0x5d ; ret
0x0000000000428fc7 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004af9a4 : or byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x000000000046b0ee : or byte ptr [rdi], 0x8f ; ret 6
0x00000000004af370 : or byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000441ab7 : or byte ptr gs:[rax], al ; add cl, ch ; ret 1
0x00000000004a37c4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000042c8d8 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000421d76 : or dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000412666 : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x0000000000477194 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040e192 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rcx]
0x000000000049623d : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041180c : or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000044b39e : or dword ptr [rbx - 0x1334b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402bd6 : or dword ptr [rbx], ebp ; add byte ptr [rcx], al ; ret
0x000000000045940d : or dword ptr [rcx - 0x77], eax ; ret 0x8141
0x00000000004619d3 : or dword ptr [rdi], ecx ; mov dh, 0x3c ; add eax, ebp ; ret
0x0000000000457274 : or eax, 0x2144b5f2 ; ret 0x8941
0x0000000000443395 : or eax, 0x48000000 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004557ca : or eax, 0x81fbe52f ; ret 0x2562
0x0000000000413f0f : or eax, 0xe9000004 ; ret 1
0x00000000004b0835 : or eax, 0xec080000 ; stc ; call qword ptr [rcx]
0x0000000000427249 : or eax, dword ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004b05cd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; cmp bh, cl ; jmp qword ptr [rdx]
0x00000000004b05ad : or eax, dword ptr [rax] ; add byte ptr [rax], al ; stc ; call qword ptr [rsi]
0x0000000000493623 : or eax, dword ptr [rax] ; add byte ptr [rbx - 0x10d26bbb], cl ; push rdi ; ret 0x8913
0x00000000004a4b50 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x00000000004a4e53 : or eax, esi ; pop rbp ; ret
0x000000000048b77a : or ebx, dword ptr [rbx + 0x4c] ; ret
0x00000000004a4f27 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000048d8f5 : or ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000476d3b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004abb90 : or esp, 0x1481f65 ; ret 0x8948
0x00000000004a4f26 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004b05cc : or r8, qword ptr [rax] ; add byte ptr [rax], al ; cmp bh, cl ; jmp qword ptr [rdx]
0x00000000004a4b4f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000044b546 : out -0x18, al ; adc dword ptr [rax + rcx*2], 0x8348e289 ; ret 0x48f0
0x0000000000456dbe : out 0x1d, al ; xchg eax, ebx ; fbld dword ptr [rcx] ; ret 0x941
0x000000000040e466 : out 0x21, eax ; ret 0x941
0x0000000000456f03 : out 0x52, eax ; ret 0xe281
0x0000000000456f10 : out 0x52, eax ; ret 0xe781
0x0000000000456f01 : out 0x7b, al ; out 0x52, eax ; ret 0xe281
0x000000000046e790 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000442ec6 : out 2, al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000459248 : out 7, al ; rol bl, 1 ; fadd dword ptr [rbp - 0x77] ; ret
0x00000000004828fb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004a577c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000456c39 : out dx, al ; jmp 0x456ca3
0x000000000049304e : out dx, al ; push rdi ; ret 0x8913
0x000000000043efc8 : out dx, al ; ret
0x000000000045a0b1 : out dx, al ; ret 0x2627
0x000000000040c7fa : out dx, al ; xor al, byte ptr [rdi - 0x67] ; ret
0x000000000046a129 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004a1960 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000046a2a8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004a5aaf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000487ab2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000049362a : out dx, eax ; push rdi ; ret 0x8913
0x00000000004954c2 : out dx, eax ; push rdi ; ret 0x8a13
0x000000000049544f : out dx, eax ; push rdi ; ret 0xf13
0x000000000043efb1 : out dx, eax ; ret
0x00000000004aae69 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000048aa38 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004640a9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004839e5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000478636 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000483a30 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042362e : outsb dx, byte ptr [rsi] ; ret 1
0x0000000000498ae1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004aae6c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004af365 : outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x00000000004af66d : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000049993c : pop ax ; jb 0x499971 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044a302 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004ac88c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042366c : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044a304 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004ac88e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042366e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004ac890 : pop r14 ; pop r15 ; ret
0x000000000041e747 : pop r14 ; pop rbp ; ret
0x0000000000423670 : pop r15 ; pop rbp ; ret
0x00000000004ac892 : pop r15 ; ret
0x00000000004af79c : pop rax ; add esi, edi ; jmp rax
0x00000000004af2b4 : pop rax ; cld ; clc ; jmp qword ptr [rax]
0x000000000049993d : pop rax ; jb 0x499970 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004af6ec : pop rax ; mov ebp, edi ; jmp qword ptr [rax]
0x0000000000495ecf : pop rax ; or al, 0xffffffffffffffcf ; ret
0x0000000000416706 : pop rax ; ret
0x00000000004b0758 : pop rax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000402bd2 : pop rbp ; mov byte ptr [rip + 0x2b09de], 1 ; ret
0x0000000000402b71 : pop rbp ; mov edi, 0x6b3560 ; jmp rax
0x0000000000402bae : pop rbp ; mov rsi, rax ; mov edi, 0x6b3560 ; jmp rdx
0x00000000004ac88b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044a305 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004ac88f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004807a2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000047ca75 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004807be : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000402b65 : pop rbp ; ret
0x00000000004ab52a : pop rbp ; ret 0x8b48
0x0000000000457504 : pop rbx ; cmove esp, dword ptr [rcx] ; ret 0x8941
0x0000000000422cba : pop rbx ; mov al, -0x1d ; ret
0x000000000042366b : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004593c4 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041e746 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041856c : pop rbx ; pop rbp ; ret
0x000000000048b736 : pop rbx ; ret
0x0000000000442f98 : pop rbx ; ret 0x890f
0x00000000004430e7 : pop rbx ; ret 0xb90f
0x00000000004b12c9 : pop rbx ; std ; jmp qword ptr [rbx]
0x00000000004807a3 : pop rcx ; ret 0x1b2
0x000000000047ae76 : pop rcx ; ret 0x8589
0x00000000004807bf : pop rcx ; ret 0x8b48
0x0000000000482af0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040a64c : pop rdi ; adc byte ptr [rbp - 0x77], cl ; ret 0x294d
0x00000000004142bf : pop rdi ; and dword ptr [rsp + rbx*4 + 0x75fd53b9], edx ; ret 0x8b48
0x0000000000423671 : pop rdi ; pop rbp ; ret
0x0000000000430e02 : pop rdi ; ret
0x000000000045945b : pop rsi ; enter 0x447e, 0x21 ; ret 0x8941
0x000000000042366f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004ac891 : pop rsi ; pop r15 ; ret
0x000000000041e748 : pop rsi ; pop rbp ; ret
0x0000000000430dae : pop rsi ; ret
0x0000000000456336 : pop rsp ; adc cl, ch ; ret
0x0000000000422cfc : pop rsp ; mov al, -0x1d ; ret
0x000000000044a303 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004ac88d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042366d : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047ae75 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004640c0 : pop rsp ; ret 0xf66
0x0000000000476190 : pop rsp ; ret 0xfff8
0x00000000004b1329 : pop rsp ; std ; call rdi
0x00000000004b0c79 : pop rsp ; sti ; jmp rbx
0x000000000041140a : popfq ; or al, 0 ; add cl, ch ; ret
0x00000000004729e9 : popfq ; ret 0xd284
0x000000000048d340 : push -0x2b ; ret 0xf79f
0x000000000043c639 : push -0x37278747 ; ret 0x1b2
0x000000000046a075 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004807a0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000456334 : push -0x6c ; pop rsp ; adc cl, ch ; ret
0x000000000048298a : push -0x75425eeb ; push rbp ; ret
0x000000000047f4e8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004220dd : push 0x14cf4f0 ; ret 0x8589
0x000000000040a648 : push 0x5f1773e4 ; adc byte ptr [rbp - 0x77], cl ; ret 0x294d
0x00000000004afa0f : push qword ptr [rax + 0x48000030] ; sar bh, cl ; call rax
0x00000000004af9cf : push qword ptr [rax - 0x27ffffd1] ; mov dr1, edi ; call rax
0x00000000004af98f : push qword ptr [rax - 0x77ffffd2] ; jb 0x4af99e ; call rax
0x00000000004609e3 : push r11 ; push rdi ; ret
0x000000000043c456 : push rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004af99f : push rax ; add byte ptr cs:[rax], al ; or byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x00000000004af667 : push rax ; and dword ptr [rax], eax ; add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000040bbfe : push rax ; imul eax, dword ptr ss:[rax], -0x39 ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000042ce39 : push rax ; or byte ptr [rax - 0x7f], cl ; ret 0xffff
0x0000000000424ebb : push rax ; pop rbp ; ret
0x0000000000441d1b : push rbp ; call 0x4926a670
0x000000000044afcf : push rbp ; call 0x49273924
0x00000000004ac0ba : push rbp ; clc ; pop rbp ; ret
0x00000000004a4c74 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000048d179 : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000436ae7 : push rbp ; fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000045cae3 : push rbp ; fmul dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x48c0
0x000000000045cadb : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x00000000004654ec : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000463dd8 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000424c8d : push rbp ; fmul dword ptr [rcx + 0xf681d6] ; add bh, bh ; jmp qword ptr [rcx]
0x0000000000472dc7 : push rbp ; mov ah, -1 ; ret 0x5589
0x000000000041e3ad : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000402bf4 : push rbp ; mov edi, 0x6b2e10 ; mov rbp, rsp ; call rax
0x00000000004703f9 : push rbp ; or al, 0x38 ; ret
0x000000000040f66c : push rbp ; ret
0x0000000000482926 : push rbp ; ret 0xd284
0x000000000048d2cc : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000048c251 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000045cae7 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x48c0
0x000000000048fa9a : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x000000000048c8ed : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000048fe06 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x70
0x0000000000490043 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x000000000042d9e1 : push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000046be16 : push rbp ; shr al, 1 ; ret
0x0000000000480f1f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000480ff9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004609e4 : push rbx ; push rdi ; ret
0x000000000041ecd8 : push rcx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000049a286 : push rcx ; push rdx ; ret
0x000000000044964f : push rdi ; adc byte ptr [rax - 0x41], cl ; mov esi, 0x3902a7e9 ; ret
0x00000000004b1139 : push rdi ; cld ; call qword ptr [rdx]
0x00000000004aae6b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004161c6 : push rdi ; ret
0x000000000049304f : push rdi ; ret 0x8913
0x00000000004954c3 : push rdi ; ret 0x8a13
0x0000000000495450 : push rdi ; ret 0xf13
0x00000000004154e6 : push rdx ; and byte ptr [rax - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x000000000049a287 : push rdx ; ret
0x0000000000456f04 : push rdx ; ret 0xe281
0x0000000000456f11 : push rdx ; ret 0xe781
0x000000000048fb22 : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004909cd : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 8
0x000000000047043b : push rsi ; or al, 0x38 ; ret
0x000000000049003f : push rsi ; or byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x000000000040fa61 : push rsi ; ret
0x00000000004b1bd4 : push rsp ; and dword ptr [rax], eax ; add al, bh ; add edi, edi ; jmp rcx
0x00000000004434c3 : push rsp ; ret 0x8b1c
0x000000000042c5ef : pushfq ; and eax, 0x8948564e ; ret 0x148
0x0000000000443ac4 : pushfq ; push rsp ; ret 0x8b1c
0x00000000004410ef : pushfq ; ret 0x8445
0x0000000000462a12 : pushfq ; ret 0xd284
0x00000000004243a1 : pushfq ; xor al, byte ptr [rax + rcx*2 - 0x7cb71d77] ; ret 0x48f0
0x000000000040e276 : rcl byte ptr [rax + rax], 0 ; pop rbp ; ret
0x00000000004af260 : rcl byte ptr [rcx], 0 ; add al, cl ; stosd dword ptr [rdi], eax ; clc ; jmp rax
0x00000000004af360 : rcl byte ptr [rip + 0x6ff80000], -7 ; jmp rax
0x0000000000400648 : ret
0x000000000040ffa8 : ret 0
0x00000000004398b8 : ret 0x10
0x000000000042b172 : ret 0x11b9
0x00000000004ab795 : ret 0x12e1
0x0000000000435a3b : ret 0x1410
0x000000000045a1c6 : ret 0x1453
0x000000000041c74d : ret 0x148
0x000000000045df6d : ret 0x15
0x00000000004944c8 : ret 0x1537
0x000000000048d1d7 : ret 0x1772
0x000000000048fa9e : ret 0x18
0x0000000000483af4 : ret 0x1a
0x000000000041e6a4 : ret 0x1ab9
0x0000000000478d6d : ret 0x1add
0x0000000000423ff9 : ret 0x1b2
0x0000000000494b71 : ret 0x1b6d
0x000000000045ccff : ret 0x1c
0x0000000000411174 : ret 0x1c0a
0x0000000000454f04 : ret 0x1c29
0x0000000000435288 : ret 0x1cb6
0x0000000000463acd : ret 0x1cdd
0x000000000041e98e : ret 0x1dbd
0x0000000000432602 : ret 0x1e
0x00000000004639f5 : ret 0x1e1
0x000000000044b974 : ret 0x1ea6
0x000000000048c8f1 : ret 0x20
0x000000000045ad3a : ret 0x2141
0x0000000000454282 : ret 0x2145
0x000000000045ce64 : ret 0x2148
0x000000000048d838 : ret 0x2149
0x0000000000408cfe : ret 0x22ef
0x0000000000457feb : ret 0x23a7
0x00000000004796ba : ret 0x23da
0x00000000004557cf : ret 0x2562
0x0000000000431856 : ret 0x26
0x000000000045a0a6 : ret 0x2627
0x0000000000411782 : ret 0x26b0
0x00000000004863b8 : ret 0x279e
0x00000000004640aa : ret 0x280f
0x0000000000452ee9 : ret 0x29
0x00000000004170a9 : ret 0x2948
0x000000000048e121 : ret 0x294c
0x000000000040a650 : ret 0x294d
0x0000000000493562 : ret 0x29ab
0x0000000000482af4 : ret 0x2a
0x0000000000402932 : ret 0x2b09
0x0000000000402732 : ret 0x2b0a
0x0000000000402532 : ret 0x2b0b
0x00000000004472b4 : ret 0x2c
0x0000000000440f51 : ret 0x2cfc
0x0000000000480f22 : ret 0x2d50
0x00000000004ab0c8 : ret 0x2e8
0x000000000044719c : ret 0x2f
0x00000000004557d5 : ret 0x2f0d
0x00000000004aa9ce : ret 0x3040
0x000000000044bf4a : ret 0x310d
0x000000000048e66f : ret 0x3145
0x000000000048e18d : ret 0x314c
0x0000000000490e31 : ret 0x33
0x000000000040fe9a : ret 0x330
0x00000000004725dc : ret 0x3391
0x0000000000496d5b : ret 0x343e
0x00000000004651ba : ret 0x3504
0x0000000000433d13 : ret 0x3530
0x0000000000441e1e : ret 0x358b
0x00000000004557c3 : ret 0x35af
0x0000000000442a84 : ret 0x36e8
0x000000000049e473 : ret 0x37ac
0x000000000045a6ea : ret 0x380c
0x000000000048ff9c : ret 0x3948
0x000000000045b4ca : ret 0x3966
0x0000000000408476 : ret 0x3a1c
0x00000000004819f4 : ret 0x3b
0x000000000047266f : ret 0x3bf7
0x0000000000496744 : ret 0x3ca2
0x0000000000457ff1 : ret 0x3d91
0x000000000047ea55 : ret 0x3e
0x000000000045cd06 : ret 0x40
0x000000000048debd : ret 0x410b
0x000000000042f5fe : ret 0x42
0x0000000000430dca : ret 0x42f9
0x0000000000453af1 : ret 0x45
0x00000000004106e5 : ret 0x4589
0x0000000000439b0b : ret 0x458a
0x00000000004555b5 : ret 0x45e9
0x000000000040a2c0 : ret 0x48
0x000000000046e4df : ret 0x4802
0x000000000043c65e : ret 0x4808
0x0000000000423ef5 : ret 0x480d
0x0000000000463790 : ret 0x4810
0x00000000004aae6e : ret 0x4815
0x0000000000434338 : ret 0x4816
0x000000000048a9e1 : ret 0x4818
0x0000000000488a22 : ret 0x4820
0x000000000045cadf : ret 0x4840
0x00000000004839e6 : ret 0x4861
0x0000000000489d2a : ret 0x4877
0x000000000048d12f : ret 0x4878
0x0000000000474d8e : ret 0x4890
0x000000000044b040 : ret 0x48a2
0x000000000043b827 : ret 0x48c0
0x0000000000465e47 : ret 0x48c3
0x00000000004482ec : ret 0x48e0
0x000000000040ed1f : ret 0x48f0
0x00000000004a82b9 : ret 0x48f2
0x000000000048decb : ret 0x490b
0x0000000000424b21 : ret 0x49e8
0x00000000004168fe : ret 0x4a1a
0x000000000040368c : ret 0x4ad9
0x000000000047c2a1 : ret 0x4b
0x000000000043a8b3 : ret 0x4b9
0x00000000004541fd : ret 0x4c04
0x00000000004878b7 : ret 0x4cc0
0x0000000000421989 : ret 0x4cde
0x00000000004234fd : ret 0x4cf0
0x000000000048e67c : ret 0x4d89
0x0000000000445835 : ret 0x4d8a
0x00000000004557b6 : ret 0x4d8b
0x00000000004547bc : ret 0x4ea2
0x000000000040b146 : ret 0x4ecb
0x000000000049885c : ret 0x4f0b
0x000000000045e779 : ret 0x507a
0x000000000040acd3 : ret 0x5187
0x0000000000406262 : ret 0x52
0x0000000000456d7a : ret 0x5467
0x0000000000438d50 : ret 0x5588
0x0000000000472dca : ret 0x5589
0x000000000046b8bf : ret 0x558a
0x00000000004363b7 : ret 0x558b
0x0000000000455b3a : ret 0x57
0x00000000004811aa : ret 0x5966
0x00000000004261ec : ret 0x5ab9
0x00000000004974b7 : ret 0x5bc6
0x0000000000404832 : ret 0x5d7b
0x0000000000455a9b : ret 0x5f0a
0x0000000000439937 : ret 0x600a
0x00000000004a71ff : ret 0x61
0x000000000042e47e : ret 0x66
0x000000000042778b : ret 0x662b
0x00000000004464fc : ret 0x66d9
0x0000000000478406 : ret 0x6a8a
0x00000000004ab689 : ret 0x6b4f
0x0000000000410c7a : ret 0x6c23
0x000000000041cdf7 : ret 0x6d6e
0x000000000045e28d : ret 0x6d74
0x0000000000410c48 : ret 0x6ee1
0x000000000048eece : ret 0x70
0x000000000040725a : ret 0x71
0x0000000000495766 : ret 0x7592
0x000000000042d3e9 : ret 0x7599
0x000000000045f238 : ret 0x76b9
0x0000000000410174 : ret 0x76fe
0x00000000004780be : ret 0x77a8
0x0000000000479221 : ret 0x7a8a
0x000000000047fe9b : ret 0x7b7f
0x000000000049585f : ret 0x7b98
0x000000000045b6d6 : ret 0x7ca3
0x0000000000457aa4 : ret 0x7dd1
0x000000000042379c : ret 0x80
0x000000000048b320 : ret 0x800
0x000000000043aa7e : ret 0x8041
0x000000000040d3f8 : ret 0x8141
0x0000000000421d79 : ret 0x8148
0x000000000048e170 : ret 0x8149
0x0000000000481db4 : ret 0x822d
0x000000000040df41 : ret 0x8348
0x0000000000403db3 : ret 0x8380
0x0000000000494857 : ret 0x83d0
0x000000000048e757 : ret 0x83e8
0x000000000046e441 : ret 0x840
0x0000000000490823 : ret 0x841
0x000000000040bd8a : ret 0x8445
0x0000000000405a25 : ret 0x8589
0x000000000040c439 : ret 0x858a
0x000000000040b9d8 : ret 0x85c7
0x000000000042d073 : ret 0x865e
0x0000000000464479 : ret 0x86a5
0x0000000000461447 : ret 0x87c5
0x00000000004900ce : ret 0x8841
0x000000000041260c : ret 0x8844
0x000000000049328f : ret 0x8900
0x00000000004a1019 : ret 0x8902
0x000000000045468d : ret 0x8907
0x000000000048dd19 : ret 0x8908
0x0000000000455e53 : ret 0x8909
0x000000000045420d : ret 0x890c
0x0000000000456428 : ret 0x890e
0x0000000000442f99 : ret 0x890f
0x000000000045553b : ret 0x8911
0x0000000000493050 : ret 0x8913
0x0000000000431168 : ret 0x8916
0x0000000000457b9c : ret 0x8917
0x0000000000436849 : ret 0x892c
0x000000000046e056 : ret 0x8938
0x0000000000478e33 : ret 0x8940
0x00000000004542d3 : ret 0x8941
0x000000000040a008 : ret 0x8948
0x00000000004237c4 : ret 0x8949
0x00000000004a948f : ret 0x894a
0x0000000000408980 : ret 0x8952
0x0000000000478637 : ret 0x8961
0x0000000000451387 : ret 0x896c
0x00000000004604a5 : ret 0x8972
0x0000000000488cbd : ret 0x8977
0x0000000000450d67 : ret 0x8997
0x000000000042ee68 : ret 0x899e
0x000000000044ab2f : ret 0x89a2
0x000000000045fa0e : ret 0x89af
0x000000000045d8f7 : ret 0x89b5
0x00000000004608cd : ret 0x89b8
0x0000000000418e85 : ret 0x89c5
0x0000000000491f6b : ret 0x89d8
0x000000000049b4b8 : ret 0x89f1
0x00000000004923b7 : ret 0x89f3
0x0000000000494897 : ret 0x8a00
0x00000000004954c4 : ret 0x8a13
0x00000000004aaa88 : ret 0x8a44
0x00000000004205f6 : ret 0x8a47
0x00000000004aa985 : ret 0x8a4a
0x0000000000425ee1 : ret 0x8ac5
0x0000000000494ade : ret 0x8b1b
0x00000000004434c4 : ret 0x8b1c
0x000000000040b986 : ret 0x8b44
0x000000000040e0c5 : ret 0x8b48
0x000000000040e157 : ret 0x8b4c
0x000000000041e8ca : ret 0x8ce9
0x000000000048ece3 : ret 0x8e0f
0x00000000004140ac : ret 0x9110
0x0000000000472613 : ret 0x91d1
0x000000000040d55a : ret 0x941
0x000000000044d34e : ret 0x9423
0x000000000048bd4f : ret 0x948
0x00000000004a4f02 : ret 0x949
0x000000000041c005 : ret 0x9588
0x00000000004540d1 : ret 0x9589
0x000000000041f401 : ret 0x960f
0x000000000042516c : ret 0x964d
0x0000000000442c24 : ret 0x96e8
0x0000000000439d02 : ret 0x981c
0x000000000041446a : ret 0x984
0x0000000000457b3b : ret 0x9a91
0x00000000004397f5 : ret 0x9c
0x000000000049a957 : ret 0x9e6d
0x000000000042bc5e : ret 0xa
0x0000000000450329 : ret 0xa1e8
0x0000000000480ffc : ret 0xa30b
0x0000000000461dac : ret 0xa5b0
0x000000000045a1c0 : ret 0xa7a3
0x0000000000448711 : ret 0xa9e8
0x000000000049504b : ret 0xaa94
0x00000000004556a2 : ret 0xab97
0x00000000004a3adf : ret 0xac60
0x000000000041382d : ret 0xad06
0x0000000000473090 : ret 0xae8
0x0000000000459332 : ret 0xaf04
0x000000000040bbdb : ret 0xb0
0x000000000045cf1a : ret 0xb0e8
0x0000000000402c77 : ret 0xb13b
0x0000000000415a56 : ret 0xb251
0x0000000000489d0e : ret 0xb277
0x000000000044b027 : ret 0xb2a2
0x0000000000444fd1 : ret 0xb319
0x000000000045aa8c : ret 0xb412
0x0000000000454657 : ret 0xb58b
0x0000000000482900 : ret 0xb740
0x000000000041e013 : ret 0xb7e8
0x000000000043e5aa : ret 0xb848
0x00000000004220d5 : ret 0xb849
0x00000000004430e8 : ret 0xb90f
0x0000000000436c1a : ret 0xb92c
0x0000000000480b30 : ret 0xb940
0x0000000000414479 : ret 0xb948
0x0000000000456480 : ret 0xb949
0x00000000004aa912 : ret 0xb94a
0x000000000040adbe : ret 0xb952
0x00000000004580e5 : ret 0xb997
0x0000000000434262 : ret 0xb99e
0x00000000004600b3 : ret 0xb9af
0x0000000000461af4 : ret 0xb9b8
0x0000000000419e1f : ret 0xb9c5
0x0000000000494cb7 : ret 0xb9d8
0x000000000045ce71 : ret 0xb9e8
0x000000000049d346 : ret 0xb9f1
0x0000000000494fd0 : ret 0xb9f3
0x0000000000429284 : ret 0xba
0x0000000000461e8b : ret 0xba72
0x000000000044e3e0 : ret 0xbae8
0x0000000000457e55 : ret 0xbd0f
0x000000000046edf9 : ret 0xbe08
0x000000000043928c : ret 0xbf1
0x0000000000482f7c : ret 0xbf48
0x000000000045b25f : ret 0xbfd7
0x0000000000402b95 : ret 0xc148
0x000000000045d93a : ret 0xc226
0x000000000045a1b8 : ret 0xc281
0x0000000000494c67 : ret 0xc3db
0x00000000004a7442 : ret 0xc493
0x00000000004a4aa7 : ret 0xc4b7
0x000000000046fc8b : ret 0xc4c7
0x0000000000451e3e : ret 0xc74
0x00000000004388f0 : ret 0xc748
0x000000000048efe1 : ret 0xc8
0x00000000004ab308 : ret 0xc82e
0x0000000000459e41 : ret 0xc889
0x00000000004572de : ret 0xc9ce
0x00000000004a83d2 : ret 0xca00
0x0000000000454100 : ret 0xca21
0x000000000040a619 : ret 0xca29
0x0000000000418390 : ret 0xcae8
0x0000000000437d7b : ret 0xcb44
0x00000000004a7205 : ret 0xccb2
0x000000000045a6e4 : ret 0xcdab
0x00000000004449b2 : ret 0xcdc0
0x0000000000455a87 : ret 0xce89
0x0000000000445e05 : ret 0xd121
0x0000000000409f2f : ret 0xd284
0x000000000049f205 : ret 0xd5f3
0x0000000000456572 : ret 0xd601
0x0000000000455377 : ret 0xd609
0x00000000004a90d5 : ret 0xd618
0x000000000043a7e0 : ret 0xd681
0x0000000000458ca3 : ret 0xd709
0x000000000040fb50 : ret 0xd789
0x0000000000495988 : ret 0xda81
0x0000000000456a6b : ret 0xdaf7
0x000000000043215e : ret 0xdb1e
0x000000000049f7ee : ret 0xdc02
0x00000000004059ea : ret 0xdd2b
0x000000000042bfef : ret 0xdf08
0x0000000000451cd1 : ret 0xdf34
0x000000000040dcc0 : ret 0xe
0x00000000004522ba : ret 0xe1b4
0x000000000040b1e5 : ret 0xe280
0x0000000000456f05 : ret 0xe281
0x000000000041e7e8 : ret 0xe2e8
0x00000000004066d3 : ret 0xe48b
0x0000000000456f12 : ret 0xe781
0x000000000046e083 : ret 0xe8ff
0x00000000004827d2 : ret 0xe940
0x0000000000483a31 : ret 0xe961
0x00000000004569cd : ret 0xe96c
0x0000000000415d9e : ret 0xe96f
0x000000000045aec9 : ret 0xe997
0x00000000004352d0 : ret 0xe99e
0x0000000000462096 : ret 0xe9b8
0x0000000000494c89 : ret 0xe9d8
0x000000000047985d : ret 0xea51
0x000000000045040a : ret 0xea81
0x0000000000462dd3 : ret 0xebc8
0x000000000044492e : ret 0xece8
0x00000000004a118a : ret 0xedb9
0x00000000004855ec : ret 0xee8
0x0000000000419c8c : ret 0xeee8
0x000000000040dbc0 : ret 0xf
0x0000000000495451 : ret 0xf13
0x000000000045ad23 : ret 0xf181
0x00000000004540a9 : ret 0xf229
0x000000000046e425 : ret 0xf280
0x0000000000476d25 : ret 0xf281
0x00000000004362ff : ret 0xf40
0x0000000000420383 : ret 0xf41
0x00000000004154ee : ret 0xf45
0x000000000046cb3c : ret 0xf4e9
0x00000000004640c1 : ret 0xf66
0x000000000049c94a : ret 0xf661
0x0000000000407152 : ret 0xf6e4
0x000000000041c32c : ret 0xf748
0x00000000004924b0 : ret 0xf79e
0x000000000048d342 : ret 0xf79f
0x000000000045c2ef : ret 0xf7de
0x0000000000483585 : ret 0xf7f3
0x000000000048b32f : ret 0xf800
0x0000000000472aba : ret 0xf8f9
0x00000000004284bf : ret 0xfa08
0x00000000004550bc : ret 0xfa29
0x000000000044bda7 : ret 0xfba
0x0000000000481d0e : ret 0xfc75
0x0000000000421eda : ret 0xfe06
0x000000000045a91f : ret 0xfe09
0x000000000043e10a : ret 0xfe6d
0x000000000040fcca : ret 0xff26
0x000000000046bc4f : ret 0xff3
0x000000000040e74a : ret 0xff44
0x000000000040dd7a : ret 0xff4c
0x000000000045ba30 : ret 0xff60
0x0000000000441d11 : ret 0xff70
0x0000000000457e4f : ret 0xff97
0x000000000040accd : ret 0xff9a
0x00000000004725d6 : ret 0xff9f
0x000000000048357f : ret 0xffa5
0x000000000047260d : ret 0xffbf
0x0000000000481d08 : ret 0xffc4
0x0000000000480f28 : ret 0xffd5
0x0000000000481002 : ret 0xffd8
0x0000000000481dba : ret 0xffd9
0x0000000000472669 : ret 0xffdb
0x000000000042215a : ret 0xffe0
0x0000000000476191 : ret 0xfff8
0x000000000047fe95 : ret 0xfffa
0x000000000042643f : ret 0xfffd
0x00000000004b1b19 : ret 0xfffe
0x000000000042c5fb : ret 0xffff
0x0000000000400d80 : ret 1
0x00000000004005e8 : ret 2
0x000000000043efd4 : ret 3
0x000000000044e795 : ret 4
0x000000000049e306 : ret 5
0x000000000041274b : ret 6
0x000000000041e105 : ret 7
0x0000000000442ef4 : ret 8
0x0000000000454479 : retf -0x46b6 ; cmp byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000043aba2 : rol bh, 0x45 ; mov ah, -0x70 ; cld ; sahf ; ret 0x8948
0x0000000000475d05 : rol bh, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000045924a : rol bl, 1 ; fadd dword ptr [rbp - 0x77] ; ret
0x00000000004aae4d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000416fb5 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045cbe8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004a443c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a8df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a53ea : rol byte ptr [rbp + 9], 1 ; ret
0x000000000043a69a : rol byte ptr [rbp + 9], 1 ; ret 0x8b48
0x0000000000456eff : rol byte ptr [rcx + 0x52e77be6], 1 ; ret 0xe281
0x00000000004a1c95 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000004154ea : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x000000000045cd82 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004aae4c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000043a66b : rol dword ptr [rbp - 0x77], 1 ; ret 0x8141
0x0000000000448d91 : rol dword ptr [rcx + 0xf], -0x64 ; ret 0x8445
0x000000000045f5e9 : rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000043aba1 : rol r15b, 0x45 ; mov ah, -0x70 ; cld ; sahf ; ret 0x8948
0x0000000000475d04 : rol r15b, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x0000000000465d20 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004665ce : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044f2b7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436c9c : ror byte ptr [r8 - 0x77], 1 ; in al, dx ; pop rbp ; ret
0x000000000042db24 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000048d19c : ror byte ptr [rax + 0x21], 1 ; ret 0x948
0x000000000048d2cd : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000499934 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000402b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402bab ; pop rbp ; ret
0x0000000000465d21 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004665cf : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044f2b8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042d171 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000046480a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000436c9d : ror byte ptr [rax - 0x77], 1 ; in al, dx ; pop rbp ; ret
0x000000000042db25 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000047308d : ror byte ptr [rax - 0x77], 1 ; ret 0xae8
0x0000000000424eb7 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000048c252 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000045cae8 : ror byte ptr [rax - 0x7d], 1 ; ret 0x48c0
0x0000000000463f7d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000048fa9b : ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x000000000048c8ee : ror byte ptr [rax - 0x7f], 1 ; ret 0x20
0x000000000048fe07 : ror byte ptr [rax - 0x7f], 1 ; ret 0x70
0x0000000000490044 : ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x000000000042d9e2 : ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000049087c : ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x00000000004a4f25 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004566a2 : ror byte ptr [rbx - 0x9b6b], 1 ; inc dword ptr [rbp - 0x77] ; ret 0x8941
0x0000000000454a6e : ror byte ptr [rbx - 0x9f6b], 1 ; inc dword ptr [rbp - 0x77] ; ret 0x8941
0x0000000000455e37 : ror byte ptr [rbx - 0xa76b], 1 ; inc dword ptr [rbp - 0x77] ; ret 0x8941
0x0000000000476d3a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004a53fd : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000048cc13 : ror dword ptr [rax + 0x21], -7 ; mov rax, rcx ; pop rbp ; ret
0x00000000004a4eff : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000449660 : ror dword ptr [rax - 0x46], 1 ; mov esi, 0x3902a7e9 ; ret
0x000000000042285d : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000041c3c2 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040f5c8 : ror dword ptr [rcx + 0x45c6c445], -0x3d ; add cl, ch ; ret
0x0000000000475cb5 : ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x00000000004541c5 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000459d36 : ror dword ptr [rcx - 0x7f], cl ; ret
0x0000000000450191 : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret
0x000000000043a8b2 : sahf ; ret 0x4b9
0x0000000000441061 : sahf ; ret 0x8445
0x000000000043a1b0 : sahf ; ret 0x8589
0x000000000043aba8 : sahf ; ret 0x8948
0x00000000004629e6 : sahf ; ret 0xd284
0x00000000004b1790 : sal ah, 1 ; std ; jmp qword ptr [rdx]
0x0000000000450dd5 : sal bh, 1 ; ret
0x0000000000450e29 : sal edi, 1 ; ret
0x00000000004af2a5 : salc ; clc ; jmp rax
0x000000000049b57a : salc ; jmp qword ptr [rdi]
0x000000000045a8c8 : salc ; mov ebp, 0x2144cb22 ; ret 0x8941
0x000000000049b4b6 : salc ; sti ; ret 0x89f1
0x00000000004afa15 : sar bh, cl ; call rax
0x00000000004b1731 : sar ch, 1 ; jmp rdi
0x0000000000462381 : sar ch, 1 ; ret
0x00000000004b0759 : sar cl, 1 ; call qword ptr [rax]
0x000000000048c77f : sar dh, -1 ; dec dword ptr [rax + 0x21] ; ret 0x948
0x00000000004afa14 : sar dil, cl ; call rax
0x00000000004a4ee4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000402b9e : sar eax, 1 ; jne 0x402ba9 ; pop rbp ; ret
0x0000000000482af1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000402b9d : sar rax, 1 ; jne 0x402baa ; pop rbp ; ret
0x0000000000475860 : sbb al, -0x1a ; ret
0x000000000048ef67 : sbb al, -0x47 ; ret 0x8e0f
0x0000000000456ff3 : sbb al, -0x77 ; ret 0xca21
0x0000000000487ab0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000049dd4e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000045c2e6 : sbb al, byte ptr [rax + rax] ; add byte ptr [rbx + 0x3b2d9c45], cl ; ret 0xf7de
0x000000000040d170 : sbb al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call rax
0x00000000004b150d : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; std ; jmp qword ptr [rbx]
0x000000000049cf6b : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x000000000048fe03 : sbb byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x70
0x0000000000490a4b : sbb byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x000000000048fb23 : sbb byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004909ce : sbb byte ptr [rax - 0x7f], cl ; ret 8
0x00000000004b1325 : sbb byte ptr [rax], al ; add al, cl ; pop rsp ; std ; call rdi
0x00000000004b12c5 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x5b], bh ; std ; jmp qword ptr [rbx]
0x00000000004b12c4 : sbb byte ptr [rax], r8b ; add byte ptr [rax + 0x5b], bh ; std ; jmp qword ptr [rbx]
0x00000000004400c8 : sbb byte ptr [rcx], al ; adc ebp, ecx ; ret 0
0x0000000000496cf7 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004aff48 : sbb byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rax]
0x00000000004af66c : sbb byte ptr [rdi - 3], ch ; call qword ptr [rax]
0x00000000004b1448 : sbb byte ptr [rdx - 3], ah ; call qword ptr [rbx]
0x0000000000442952 : sbb cl, byte ptr [rcx - 0x7bf033bb] ; ret
0x00000000004829f1 : sbb cl, ch ; ret
0x00000000004363af : sbb dh, byte ptr [rdx - 0x7d462542] ; fdivr st(4) ; ret 0x558b
0x00000000004b1425 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x60], bl ; std ; call rdx
0x0000000000499183 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000443187 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000493c2c : sbb dword ptr [rax], eax ; add cl, ch ; ret
0x000000000043de91 : sbb dword ptr [rbx - 0x955fa47], edx ; ret 0x1b2
0x00000000004b178d : sbb eax, 0xf4d00000 ; std ; jmp qword ptr [rdx]
0x00000000004b162d : sbb eax, dword ptr [rax] ; add al, dl ; xchg eax, esi ; std ; call qword ptr [rax]
0x00000000004667ed : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000421984 : sbb ebp, dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret 0x4cde
0x0000000000486b00 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000043a816 : sbb edi, dword ptr [rdx + 0x21] ; ret 0x941
0x00000000004af2e5 : sbb edi, ecx ; jmp rax
0x00000000004af7ad : sbb edi, esi ; jmp qword ptr [rax]
0x000000000048d39f : sbb esi, dword ptr [rdi + 0x33] ; mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x000000000048d39e : sbb esi, dword ptr [rdi + r12*4 + 0x33] ; mov dword ptr [rax + rcx*2 + 1], edx ; ret 0x8948
0x000000000042643e : scasb al, byte ptr [rdi] ; ret 0xfffd
0x0000000000411923 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x692da845], cl ; ret 0x6ee1
0x0000000000419ae7 : scasd eax, dword ptr [rdi] ; imul esi, dword ptr [rsi + rax*4 - 0x47], 0x65 ; ret
0x00000000004ac5c4 : scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x000000000042f05f : scasd eax, dword ptr [rdi] ; ret
0x0000000000423ef4 : scasd eax, dword ptr [rdi] ; ret 0x480d
0x000000000049f7ed : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x0000000000467594 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000467596 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004af758 : shl byte ptr [rip - 0x3b580000], -3 ; jmp rax
0x00000000004640df : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x00000000004a461c : shl ebp, cl ; ret
0x000000000046be17 : shr al, 1 ; ret
0x000000000040d12d : shr byte ptr [rdx + rbx*2], -0x47 ; ret
0x00000000004397ef : shr ch, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x9c
0x00000000004819f2 : shr cl, cl ; ret 0x3b
0x0000000000489d24 : shr dword ptr [rax], 1 ; and al, 0xffffffffffffffb9 ; jrcxz 0x489d4d ; ret 0x4877
0x00000000004b075a : stc ; call qword ptr [rax]
0x00000000004b083a : stc ; call qword ptr [rcx]
0x00000000004b05b2 : stc ; call qword ptr [rsi]
0x000000000046b389 : stc ; in al, dx ; ret 0x8589
0x000000000046bc9c : stc ; in al, dx ; ret 0xff3
0x00000000004af32e : stc ; inc dword ptr [rax] ; adc eax, 0x41480000 ; stc ; jmp qword ptr [rax]
0x00000000004af31e : stc ; inc eax ; adc al, 0 ; add byte ptr [rax + 0x3e], ch ; stc ; jmp rax
0x00000000004af35e : stc ; inc eax ; adc eax, 0x6ff80000 ; stc ; jmp rax
0x00000000004af2f6 : stc ; jmp qword ptr [rax]
0x00000000004b0432 : stc ; jmp qword ptr [rcx]
0x00000000004b05d2 : stc ; jmp qword ptr [rdx]
0x00000000004af2e6 : stc ; jmp rax
0x00000000004b08da : stc ; jmp rsp
0x000000000048cc16 : stc ; mov rax, rcx ; pop rbp ; ret
0x000000000047f82d : stc ; ret 0x77a8
0x000000000042c5ec : stc ; sub byte ptr [rbx], al ; pushfq ; and eax, 0x8948564e ; ret 0x148
0x0000000000428fc9 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004af66e : std ; call qword ptr [rax]
0x00000000004b144a : std ; call qword ptr [rbx]
0x00000000004af65e : std ; call rax
0x00000000004b132a : std ; call rdi
0x00000000004b142a : std ; call rdx
0x00000000004b0411 : std ; clc ; jmp qword ptr [rax]
0x000000000041e3a9 : std ; dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004af766 : std ; inc dword ptr [rax] ; add byte ptr es:[rax], al ; js 0x4af740 ; std ; jmp qword ptr [rax]
0x00000000004af6e6 : std ; inc dword ptr [rax] ; and al, 0 ; add byte ptr [rax - 0x77], bl ; std ; jmp qword ptr [rax]
0x00000000004af726 : std ; inc dword ptr [rax] ; and eax, 0x9b680000 ; std ; jmp qword ptr [rax]
0x00000000004af796 : std ; inc eax ; add byte ptr es:[rax], al ; pop rax ; add esi, edi ; jmp rax
0x00000000004af756 : std ; inc eax ; and eax, 0xc4a80000 ; std ; jmp rax
0x00000000004af6ee : std ; jmp qword ptr [rax]
0x00000000004b12ca : std ; jmp qword ptr [rbx]
0x00000000004b1792 : std ; jmp qword ptr [rdx]
0x00000000004af71e : std ; jmp rax
0x00000000004b1732 : std ; jmp rdi
0x00000000004af666 : std ; push rax ; and dword ptr [rax], eax ; add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004622a6 : std ; ret
0x00000000004863b7 : std ; ret 0x279e
0x0000000000410423 : sti ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004b0eda : sti ; call qword ptr [rbx]
0x00000000004b0ada : sti ; call qword ptr [rdx]
0x000000000044b2d4 : sti ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000044faba : sti ; dec dword ptr [rbx + 0x3d8b4830] ; ret
0x00000000004b0efa : sti ; jmp qword ptr [rdi]
0x00000000004b0c7a : sti ; jmp rbx
0x000000000041ee43 : sti ; pop rax ; ret
0x000000000049b4b7 : sti ; ret 0x89f1
0x000000000049d345 : sti ; ret 0xb9f1
0x000000000046b388 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000042ee67 : stosb byte ptr [rdi], al ; ret 0x899e
0x0000000000434261 : stosb byte ptr [rdi], al ; ret 0xb99e
0x00000000004352cf : stosb byte ptr [rdi], al ; ret 0xe99e
0x00000000004a4ee3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004af265 : stosd dword ptr [rdi], eax ; clc ; jmp rax
0x000000000045a6e5 : stosd dword ptr [rdi], eax ; int 0
0x0000000000455059 : stosd dword ptr [rdi], eax ; mov al, -0x48 ; cmp al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000044d431 : str word ptr [rax + 0x29] ; ret 0x8948
0x0000000000491fb4 : sub al, 0x2d ; ret 0x89d8
0x0000000000494cb5 : sub al, 0x2d ; ret 0xb9d8
0x0000000000494c87 : sub al, 0x2d ; ret 0xe9d8
0x00000000004b05ac : sub al, 0xb ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; stc ; call qword ptr [rsi]
0x00000000004b00ac : sub al, 6 ; add byte ptr [rax], al ; nop ; jbe 0x4b00b1 ; jmp qword ptr [rax]
0x000000000044f51e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000457e52 : sub al, byte ptr [rbx - 0x7f] ; ret 0xbd0f
0x000000000048fb0c : sub byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x000000000040c36f : sub byte ptr [rax], al ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x00000000004a3be6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044f408 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000480f25 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000042c5ed : sub byte ptr [rbx], al ; pushfq ; and eax, 0x8948564e ; ret 0x148
0x0000000000489d25 : sub byte ptr [rcx + rdi*4], ah ; jrcxz 0x489d4c ; ret 0x4877
0x00000000004b0530 : sub byte ptr [rcx], -7 ; jmp qword ptr [rax]
0x000000000047308a : sub cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0xae8
0x0000000000480f1b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000480ff5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000423ff7 : sub dl, bl ; ret 0x1b2
0x0000000000423a9f : sub dl, bl ; ret 0x8589
0x000000000041ef4a : sub dword ptr [rax - 0x47], eax ; sti ; pop rax ; ret
0x00000000004031d2 : sub eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000481db5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000428fca : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000402bd7 : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000044fab9 : sub ebx, edi ; dec dword ptr [rbx + 0x3d8b4830] ; ret
0x00000000004b0531 : sub ecx, edi ; jmp qword ptr [rax]
0x000000000049993f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000048d129 : sub esi, dword ptr [rax - 0x1ca0b1a9] ; ret 0x4878
0x00000000004ac8f1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000044c050 : sub esp, dword ptr [rbx - 0x47] ; ret 0xfba
0x00000000004ac8f0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044bc54 : test ah, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004643a3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004af2a4 : test al, -0x2a ; clc ; jmp rax
0x000000000042953d : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rcx]
0x00000000004af75c : test al, -0x3c ; std ; jmp rax
0x00000000004ac5c6 : test al, -0x47 ; call rsi
0x0000000000489d0a : test al, -0x47 ; jrcxz 0x489d2f ; ret 0xb277
0x000000000040ba07 : test al, -0x47 ; ret
0x0000000000419177 : test al, -0x53 ; ret
0x000000000046c039 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000480f20 : test al, -0x7f ; ret 0x2d50
0x0000000000480ffa : test al, -0x7f ; ret 0xa30b
0x000000000047444a : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041df62 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004aa723 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410e9d : test al, 0x2d ; call rax
0x0000000000411172 : test al, 0x2d ; ret 0x1c0a
0x0000000000411780 : test al, 0x2d ; ret 0x26b0
0x00000000004422a2 : test al, 0x36 ; imul eax, dword ptr [rax], -0x77 ; ret 0xca29
0x000000000048718e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000483756 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004989d8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000444b1f : test al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000410422 : test bh, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004268d7 : test bh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041180a : test bl, cl ; or dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000046921d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000046b0ea : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004ac89a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411409 : test byte ptr [rbp - 0x16fffff4], bl ; ret
0x0000000000463b3c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x0000000000427248 : test byte ptr [rbx], cl ; add al, 0 ; add cl, ch ; ret 1
0x000000000045b40c : test byte ptr [rcx - 0x16fffffa], bh ; ret
0x000000000046b0eb : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000043a2e5 : test byte ptr [rcx], ch ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000477d9c : test byte ptr [rcx], ch ; ret 0
0x000000000042be51 : test byte ptr [rdi + rcx], bh ; add cl, ch ; ret
0x000000000044e636 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000049402b : test byte ptr [rdx - 0x16fffff2], bh ; ret 1
0x0000000000413f0e : test byte ptr [rip - 0x16fffffc], cl ; ret 1
0x000000000042d59d : test byte ptr [rsi - 0x16fffffb], dh ; ret 1
0x0000000000488532 : test byte ptr [rsi - 0x16fffffd], cl ; ret 1
0x0000000000422ed1 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000045a1bd : test dh, -0x7f ; ret 0xa7a3
0x000000000045a1b5 : test dh, 1 ; ret 0xc281
0x0000000000493c2a : test dh, dh ; sbb dword ptr [rax], eax ; add cl, ch ; ret
0x000000000046c617 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041d762 : test dword ptr [rax + 0x2dfffffe], edi ; leave ; jmp qword ptr [rdx]
0x0000000000477d96 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040e383 : test dword ptr [rax - 0x17000015], ecx ; ret
0x0000000000425b2c : test dword ptr [rbp + rdi*8 - 0x7bf00001], edx ; ret 7
0x0000000000437ae0 : test dword ptr [rbx + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042f5f7 : test dword ptr [rbx + rbp*8 - 0x7bf00001], esi ; ret 0x42
0x000000000045a557 : test dword ptr [rbx - 0x76ba35df], edi ; ret 0x8141
0x00000000004a37c7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004a3787 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004a3702 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000049dbc3 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000049dc1b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000040fcf8 : test dword ptr [rdi + rdi*8 - 1], ebp ; call rcx
0x000000000049db82 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000043c0ef : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rdx]
0x000000000042953f : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rcx]
0x0000000000474953 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x0000000000474962 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x0000000000498ae6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000425d4f : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rdi]
0x000000000048fb88 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x000000000046a001 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004a1965 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000486daa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000045f742 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000453aea : test dword ptr [rdi + rsi*8 - 0x7bf00001], eax ; ret 0x45
0x00000000004827cb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000044582d : test dword ptr [rsi + rdi*8 + 0x4714ffff], eax ; cwde ; ret 0x4d8a
0x00000000004161c0 : test dword ptr [rsi + rdi*8 + 0x572dffff], ecx ; ret
0x0000000000416700 : test dword ptr [rsi + rdi*8 + 0x582dffff], ecx ; ret
0x0000000000483a2a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000416578 : test dword ptr [rsi + rdi*8 - 0x48d20001], ecx ; loop 0x416542 ; ret
0x0000000000416540 : test dword ptr [rsi + rdi*8 - 0x49d20001], ecx ; loop 0x41650a ; ret
0x0000000000446a8a : test dword ptr [rsi + rdi*8 - 0x5fd20001], ebx ; mov ch, 0x3d ; ret
0x0000000000446a36 : test dword ptr [rsi + rdi*8 - 0x60d20001], ebx ; mov ch, 0x3d ; ret
0x000000000042b86f : test dword ptr [rsi + rdi*8 - 0x70f00001], edi ; ret 6
0x0000000000473706 : test dword ptr [rsi + rdi*8 - 0x70f00001], esp ; ret 6
0x000000000045df66 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret 0x15
0x000000000041be30 : test dword ptr [rsi + rdi*8 - 0x7ed20001], ecx ; ret
0x000000000041aff8 : test dword ptr [rsi + rdi*8 - 0x7fd20001], ecx ; ret
0x00000000004373e0 : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000040bbe4 : test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rcx]
0x000000000040eb7d : test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rdx]
0x000000000040a5fe : test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000040d174 : test dword ptr [rsp + rdi*8 - 1], eax ; call rax
0x0000000000409f0a : test dword ptr [rsp + rdi*8 - 1], eax ; call rsp
0x000000000040e4f3 : test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rax]
0x000000000040ea4b : test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x0000000000409e82 : test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rdi]
0x000000000040dc51 : test dword ptr [rsp + rdi*8 - 1], eax ; jmp qword ptr [rsi]
0x000000000040a168 : test dword ptr [rsp + rdi*8 - 1], eax ; jmp rbx
0x0000000000409d7a : test dword ptr [rsp + rdi*8 - 1], eax ; jmp rcx
0x000000000040e5a6 : test dword ptr [rsp + rdi*8 - 1], eax ; jmp rdi
0x000000000040d440 : test dword ptr [rsp + rdi*8 - 1], eax ; jmp rsp
0x00000000004545ad : test eax, 0xb9acd038 ; sal edi, 1 ; ret
0x00000000004839df : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000437698 : test edx, ebx ; ret
0x00000000004819ef : wait ; jge 0x4819d1 ; shr cl, cl ; ret 0x3b
0x000000000047caad : wait ; jo 0x47cabb ; ret
0x000000000047fffc : wait ; jo 0x48000a ; ret
0x0000000000436338 : wait ; ret 0xd284
0x00000000004362fe : wait ; ret 0xf40
0x00000000004af72d : wait ; std ; jmp qword ptr [rax]
0x00000000004564db : xchg byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000451385 : xchg byte ptr [rdi], ah ; ret 0x896c
0x000000000048c3ac : xchg dword ptr [rdi], eax ; lea ecx, dword ptr [rbx - 0x3c] ; cmp byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000491aba : xchg dword ptr [rdi], ecx ; ret
0x0000000000453bfd : xchg dword ptr [rdi], esp ; ret 0x896c
0x00000000004569cb : xchg dword ptr [rdi], esp ; ret 0xe96c
0x000000000045bce6 : xchg dword ptr [rdx - 0x6c455820], ebx ; ret 0x3966
0x00000000004aae68 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000463ec0 : xchg eax, ebp ; jmp 0x464011
0x000000000045eee4 : xchg eax, ebp ; mov eax, 0xffffffc ; ret 0x8589
0x000000000040b514 : xchg eax, ebp ; ret
0x000000000040bd89 : xchg eax, ebp ; ret 0x8445
0x000000000040a0e4 : xchg eax, ebp ; ret 0xd284
0x000000000040d434 : xchg eax, ebp ; ret 0xe280
0x00000000004154ed : xchg eax, ebp ; ret 0xf45
0x000000000048c77e : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax + 0x21] ; ret 0x948
0x0000000000433684 : xchg eax, ebp ; xchg eax, esp ; in al, -1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000456dc0 : xchg eax, ebx ; fbld dword ptr [rcx] ; ret 0x941
0x0000000000478635 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000047ef35 : xchg eax, ebx ; ret
0x000000000045b8e3 : xchg eax, ebx ; ret 0x3966
0x000000000045c9ee : xchg eax, ebx ; ret 0xd284
0x000000000040c8f1 : xchg eax, ecx ; and al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000049a285 : xchg eax, ecx ; push rcx ; push rdx ; ret
0x000000000040a185 : xchg eax, ecx ; ret
0x00000000004954bb : xchg eax, edi ; or al, byte ptr [rax] ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; push rdi ; ret 0x8a13
0x000000000043ffbc : xchg eax, edi ; ret 0x8445
0x000000000040dbf7 : xchg eax, edi ; ret 0xd284
0x000000000049a2f3 : xchg eax, edx ; push rcx ; push rdx ; ret
0x000000000041c13c : xchg eax, edx ; ret
0x000000000045b4c9 : xchg eax, edx ; ret 0x3966
0x0000000000438d4f : xchg eax, edx ; ret 0x5588
0x000000000041c421 : xchg eax, edx ; ret 0x8445
0x000000000041c004 : xchg eax, edx ; ret 0x9588
0x0000000000409f2e : xchg eax, edx ; ret 0xd284
0x000000000044049d : xchg eax, edx ; ret 0xe280
0x0000000000433584 : xchg eax, esi ; jmp 0x435480
0x000000000049e48b : xchg eax, esi ; ret
0x000000000041bf7d : xchg eax, esi ; ret 0x8445
0x000000000041c97e : xchg eax, esi ; ret 0xd284
0x00000000004946ce : xchg eax, esi ; ret 0xe280
0x00000000004b1631 : xchg eax, esi ; std ; call qword ptr [rax]
0x0000000000489d09 : xchg eax, esi ; test al, -0x47 ; jrcxz 0x489d30 ; ret 0xb277
0x0000000000433685 : xchg eax, esp ; in al, -1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000046cb38 : xchg eax, esp ; int 6
0x0000000000497c7a : xchg eax, esp ; jmp 0x4986e8
0x0000000000497bb7 : xchg eax, esp ; jmp 0x4986ea
0x00000000004839e4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000047f2b5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000483a2f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000456335 : xchg eax, esp ; pop rsp ; adc cl, ch ; ret
0x000000000048ac44 : xchg eax, esp ; ret
0x000000000043aa7d : xchg eax, esp ; ret 0x8041
0x0000000000423c97 : xchg eax, esp ; ret 0x8445
0x00000000004828fe : xchg eax, esp ; ret 0xb740
0x000000000040a292 : xchg eax, esp ; ret 0xd284
0x0000000000428fcf : xchg eax, esp ; ret 0xe280
0x0000000000467595 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000463182 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000046cb37 : xchg eax, r12d ; int 6
0x0000000000497c79 : xchg eax, r12d ; jmp 0x4986e9
0x0000000000465e3f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004a4b4e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000049b50a : xlatb ; sti ; ret 0x89f1
0x000000000049d344 : xlatb ; sti ; ret 0xb9f1
0x000000000042807b : xor ah, byte ptr [rsi] ; hlt ; ret 0x8589
0x0000000000418388 : xor al, 0x25 ; loopne 0x418372 ; add byte ptr [rax - 0x77], cl ; ret 0xcae8
0x000000000040c66c : xor al, 0x6b ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x000000000042c591 : xor al, 0x6b ; add byte ptr [rax + 0xf000000], al ; xchg eax, ebp ; ret 0xd284
0x0000000000417797 : xor al, 0x6b ; add byte ptr [rax + 0xf000000], al ; xchg eax, esp ; ret 0xd284
0x000000000042abad : xor al, 0x6b ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000412f7c : xor al, 0x6b ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004aff49 : xor al, 0xfffffffffffffff7 ; jmp qword ptr [rax]
0x00000000004aff89 : xor al, 0xfffffffffffffff7 ; jmp rsi
0x00000000004af2f5 : xor al, 0xfffffffffffffff9 ; jmp qword ptr [rax]
0x00000000004243a2 : xor al, byte ptr [rax + rcx*2 - 0x7cb71d77] ; ret 0x48f0
0x0000000000440485 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004828f9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040c7ec : xor al, byte ptr [rcx - 0x66b8cd3a] ; ret
0x000000000040c7ef : xor al, byte ptr [rdi - 0x67] ; ret
0x000000000048dd13 : xor bl, byte ptr [rdi - 0x7c5faa75] ; ret 0x8908
0x00000000004758f5 : xor bl, byte ptr [rsi] ; ret
0x0000000000477197 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000490878 : xor byte ptr [r9 - 0x77], cl ; ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x000000000048c24c : xor byte ptr [rax + 0x558b483a], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000046be13 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000477198 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a4ee6 : xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004abb8d : xor byte ptr [rcx - 0x1b], ah ; or esp, 0x1481f65 ; ret 0x8948
0x0000000000463183 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000490879 : xor byte ptr [rcx - 0x77], cl ; ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x000000000047561d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000495bce : xor byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000048add0 : xor cl, byte ptr [rcx - 0x70f05fbb] ; ret 2
0x000000000044b5ec : xor dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000047585f : xor dword ptr [rsi], ebx ; ret
0x000000000048fa96 : xor eax, 0x558b48f4 ; ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x000000000043a4d3 : xor eax, 0x65102eb9 ; ret 0x8948
0x000000000040b865 : xor eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsp + rdi*8 - 1], eax ; call qword ptr [rsi]
0x0000000000454f5f : xor eax, dword ptr [rbx - 0x76ba35df] ; ret 0x8141
0x0000000000490e2c : xor eax, dword ptr [rdi] ; add cl, ch ; ret 0x33
0x0000000000405a93 : xor ebp, dword ptr [rdx] ; ret
0x000000000048cc12 : xor ecx, eax ; and rcx, rdi ; mov rax, rcx ; pop rbp ; ret
0x00000000004a4b4d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004a4e51 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000042846b : xor esp, dword ptr [rsi] ; hlt ; ret 0x8589
0x0000000000429281 : xor esp, dword ptr [rsi] ; hlt ; ret 0xba
