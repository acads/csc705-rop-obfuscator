0x00000000004023f2 : adc ah, byte ptr [rbx] ; add dh, al ; add al, 0x25 ; ret
0x00000000004023ea : adc ah, byte ptr [rbx] ; add dh, al ; add al, 0x25 ; ret 0x6312
0x0000000000401704 : adc ah, byte ptr [rbx] ; jmp rax
0x0000000000401744 : adc ah, byte ptr [rbx] ; jmp rdx
0x00000000004050b9 : adc ah, byte ptr [rbx] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f731 : adc al, -2 ; call rsp
0x000000000040e0f1 : adc al, 0x25 ; clc ; ret 0x63
0x000000000041ef92 : adc al, 0x25 ; push rax ; ret
0x0000000000406fd2 : adc al, 0x25 ; ret
0x000000000040c129 : adc al, 0x25 ; ret 0x6312
0x0000000000430239 : adc bh, bh ; jmp rsi
0x000000000040d331 : adc byte ptr [rbp - 0x78], al ; ret
0x000000000040d216 : adc byte ptr [rcx - 0x80], al ; int1 ; inc dword ptr [rbp - 0x78] ; ret
0x000000000040486d : adc byte ptr [rdx], 0x63 ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x000000000040b94e : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b08e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041aa01 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004230fb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041bb8b : adc eax, 0x558abda1 ; ret
0x00000000004019ac : adc eax, 0xe9000003 ; ret 0
0x000000000041f169 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f827 : add ah, bl ; cmp edi, edi ; call rsp
0x00000000004055d1 : add al, 0 ; add cl, ch ; ret 1
0x000000000040486b : add al, 0x25 ; adc byte ptr [rdx], 0x63 ; add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x000000000041f0ee : add al, 0x25 ; push rax ; ret
0x00000000004023f7 : add al, 0x25 ; ret
0x00000000004023ef : add al, 0x25 ; ret 0x6312
0x000000000042c48a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043000f : add al, ah ; add edi, edi ; call rdi
0x00000000004305ff : add al, al ; ret
0x000000000040b94f : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040d9c0 : add bh, al ; call 0xffffffffc36e7649
0x0000000000404558 : add bh, al ; movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x0000000000427711 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004276d0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000422dd4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041b9c9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042ffb1 : add bh, bh ; jmp qword ptr [rbx]
0x0000000000405999 : add bh, bh ; ret 0x1589
0x000000000042e91f : add bl, dh ; ret
0x000000000042e5f2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000042e854 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000401cda : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040cfe3 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004301f3 : add byte ptr [rax + rcx], al ; add byte ptr [rax], bl ; or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000042f8e7 : add byte ptr [rax + rsi*4 - 1], cl ; call rsp
0x000000000042fcff : add byte ptr [rax - 0x22], dh ; std ; call qword ptr [rcx]
0x000000000041eff8 : add byte ptr [rax - 0x39], cl ; add eax, 0x21221c ; push rax ; ret
0x000000000040cffa : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000042012b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409971 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000401cdd : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042770f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000422dd2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042e91d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040cfe1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040996f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000401cdb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042e91b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c318 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e91c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408e6d : add byte ptr [rax], al ; add byte ptr [rbx + 0x222dc845], cl ; call rbx
0x0000000000408eaf : add byte ptr [rax], al ; add byte ptr [rbx + 0x232dc845], cl ; call rbx
0x000000000040dace : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004019c8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2e2de445], cl ; ret 0x4e1f
0x000000000041ebd2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000421593 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040d832 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3fd21bbb], cl ; ret 0x3108
0x000000000040d67a : add byte ptr [rax], al ; add byte ptr [rbx - 0x40d21bbb], cl ; ret 0x3108
0x000000000042808c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000423ef9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004264ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040d2d9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x0000000000404339 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042e5f3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000042e855 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000422d40 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042d9c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042bcf1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000426327 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004042f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d593 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042ba05 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000422cca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406d1a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404fff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004305f9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx], cl ; add al, al ; ret
0x00000000004279db : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000042fcfa : add byte ptr [rax], al ; add r8, qword ptr [rax] ; add byte ptr [rax - 0x22], dh ; std ; call qword ptr [rcx]
0x000000000041f16b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051fd : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f74 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004230fd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401e40 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004082e6 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040eed9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042fad2 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 3], dl ; jmp rdx
0x000000000042fad6 : add byte ptr [rax], al ; cmp byte ptr [rdi - 3], dl ; jmp rdx
0x000000000042f5ea : add byte ptr [rax], al ; jb 0x42f5f7 ; add byte ptr [rax], al ; sbb al, 0x1d ; std ; jmp rsp
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000408f34 : add byte ptr [rax], al ; jmp 0x4090d1
0x00000000004279d7 : add byte ptr [rax], al ; jmp 0x4279e6
0x000000000042fcfe : add byte ptr [rax], al ; jo 0x42fce5 ; std ; call qword ptr [rcx]
0x000000000040cff9 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042f8e6 : add byte ptr [rax], al ; mov al, -1 ; call rsp
0x0000000000427a7f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042e638 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409050 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401cdc : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f866 : add byte ptr [rax], al ; mov word ptr [rax - 1], cs ; call rsp
0x000000000043033a : add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], al ; push rax ; xor edi, edi ; call qword ptr [rdx]
0x000000000042ffae : add byte ptr [rax], al ; nop ; add bh, bh ; jmp qword ptr [rbx]
0x000000000042fe1e : add byte ptr [rax], al ; nop ; cld ; std ; call qword ptr [rdx]
0x000000000043031e : add byte ptr [rax], al ; nop ; xor bh, bh ; call rdx
0x00000000004305fa : add byte ptr [rax], al ; or al, 0 ; add al, al ; ret
0x000000000042f6ae : add byte ptr [rax], al ; or al, 0xffffffffffffffe0 ; std ; call rsp
0x00000000004301f2 : add byte ptr [rax], al ; or byte ptr [rax], r8b ; add byte ptr [rax], bl ; or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x00000000004022f2 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ebd3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b950 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040761a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042f8a6 : add byte ptr [rax], al ; pop rsp ; xchg edi, edi ; call rsp
0x000000000043033e : add byte ptr [rax], al ; push rax ; xor edi, edi ; call qword ptr [rdx]
0x000000000042f72e : add byte ptr [rax], al ; pushfq ; adc al, -2 ; call rsp
0x000000000042e91e : add byte ptr [rax], al ; ret
0x000000000042f5ee : add byte ptr [rax], al ; sbb al, 0x1d ; std ; jmp rsp
0x00000000004301f6 : add byte ptr [rax], al ; sbb byte ptr [rdi + rdi*8], cl ; jmp qword ptr [rbx]
0x000000000042f6ee : add byte ptr [rax], al ; stc ; std ; call rsp
0x000000000042fad7 : add byte ptr [rax], bh ; push rdi ; std ; jmp rdx
0x00000000004301f7 : add byte ptr [rax], bl ; or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000042f6af : add byte ptr [rax], cl ; std ; call rsp
0x00000000004305df : add byte ptr [rax], dh ; ret 0xffff
0x0000000000408e6f : add byte ptr [rbx + 0x222dc845], cl ; call rbx
0x0000000000408eb1 : add byte ptr [rbx + 0x232dc845], cl ; call rbx
0x000000000040dad0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004019ca : add byte ptr [rbx + 0x2e2de445], cl ; ret 0x4e1f
0x000000000041ebd4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b951 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040761b : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042fcfb : add byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x22], dh ; std ; call qword ptr [rcx]
0x0000000000421595 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042154a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040d834 : add byte ptr [rbx - 0x3fd21bbb], cl ; ret 0x3108
0x000000000040d67c : add byte ptr [rbx - 0x40d21bbb], cl ; ret 0x3108
0x000000000042808e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004081df : add byte ptr [rbx - 0x6d21fbb], cl ; sub edi, dword ptr [rbx] ; ret 0x4589
0x000000000042e639 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000423efb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000408fc1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040d2db : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x000000000040433b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042fad3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; cmp byte ptr [rdi - 3], dl ; jmp rdx
0x000000000042f6ef : add byte ptr [rcx + rdi*8 - 3], cl ; call rsp
0x0000000000407ea3 : add byte ptr [rcx - 0x4aacd712], al ; ret 0xfe29
0x0000000000422e3e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401768 : add byte ptr [rcx], al ; ret
0x000000000042e5f5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000042e857 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000422d42 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042f8a7 : add byte ptr [rdi + rax*4 - 1], bl ; call rsp
0x000000000042d9c3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042bcf3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000426329 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004042f7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d595 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042ba07 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000422ccc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004041f2 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000406d1c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405001 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042f5eb : add byte ptr [rdx], dh ; add byte ptr [rax], al ; sbb al, 0x1d ; std ; jmp rsp
0x000000000043000b : add byte ptr [rsi + rax], bl ; add al, ah ; add edi, edi ; call rdi
0x00000000004305fb : add byte ptr [rsp + rcx], cl ; add al, al ; ret
0x000000000040d831 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x3fd21bbb], cl ; ret 0x3108
0x000000000041bafc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000403572 : add cl, ch ; ret
0x00000000004019af : add cl, ch ; ret 0
0x0000000000403973 : add cl, ch ; ret 1
0x0000000000409ee4 : add cl, ch ; ret 5
0x00000000004023f5 : add dh, al ; add al, 0x25 ; ret
0x00000000004023ed : add dh, al ; add al, 0x25 ; ret 0x6312
0x000000000040d5bd : add dword ptr [rax - 0x77bb020f], eax ; ret 0xca30
0x00000000004276ce : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000040cff8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000042fad5 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; push rdi ; std ; jmp rdx
0x000000000042db42 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040c5b6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cb7e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041effb : add eax, 0x21221c ; push rax ; ret
0x0000000000401764 : add eax, 0x22fb4e ; add ebx, esi ; ret
0x0000000000404556 : add eax, 0x45c70000 ; movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x0000000000427633 : add eax, 0x5d5b0000 ; ret
0x000000000042fcfd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x22], dh ; std ; call qword ptr [rcx]
0x0000000000407619 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004019ad : add eax, dword ptr [rax] ; add cl, ch ; ret 0
0x0000000000406b3d : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040172b : add eax, edx ; sar rax, 1 ; jne 0x40173c ; pop rbp ; ret
0x0000000000401769 : add ebx, esi ; ret
0x0000000000430011 : add edi, edi ; call rdi
0x000000000041f16e : add esp, 0x10 ; pop rbp ; ret
0x0000000000422e3c : add esp, 0x100 ; pop rbp ; ret
0x0000000000409d9f : add esp, 0x118 ; pop rbp ; ret
0x00000000004080d5 : add esp, 0x130 ; pop rbp ; ret
0x0000000000405a62 : add esp, 0x140 ; pop rbp ; ret
0x0000000000422fac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000405200 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401f77 : add esp, 0x30 ; pop rbp ; ret
0x0000000000407616 : add esp, 0x338 ; pop rbx ; pop rbp ; ret
0x00000000004084a1 : add esp, 0x40 ; pop rbp ; ret
0x000000000042c689 : add esp, 0x440 ; pop rbp ; ret
0x0000000000404923 : add esp, 0x4c0 ; pop rbp ; ret
0x0000000000401e43 : add esp, 0x50 ; pop rbp ; ret
0x0000000000427630 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x00000000004082e9 : add esp, 0x60 ; pop rbp ; ret
0x000000000040eedc : add esp, 0x70 ; pop rbp ; ret
0x000000000040ec3f : add esp, 0x80 ; pop rbp ; ret
0x000000000040c300 : add esp, 0x84 ; pop rbp ; ret
0x000000000042377d : add esp, 0x90 ; pop rbp ; ret
0x000000000040d9d1 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004022ee : add esp, 0xb0 ; pop rbp ; ret
0x000000000040f47a : add esp, 0xd0 ; pop rbp ; ret
0x00000000004282de : add esp, 0xe0 ; pop rbp ; ret
0x0000000000429a8f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040fa83 : add esp, 8 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000042fcfc : add r8, qword ptr [rax] ; add byte ptr [rax - 0x22], dh ; std ; call qword ptr [rcx]
0x000000000040172a : add rax, rdx ; sar rax, 1 ; jne 0x40173d ; pop rbp ; ret
0x000000000041f16d : add rsp, 0x10 ; pop rbp ; ret
0x0000000000422e3b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000409d9e : add rsp, 0x118 ; pop rbp ; ret
0x00000000004080d4 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405a61 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000422fab : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004051ff : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f76 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000407615 : add rsp, 0x338 ; pop rbx ; pop rbp ; ret
0x00000000004084a0 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042c688 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000404922 : add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000401e42 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042762f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x00000000004082e8 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040eedb : add rsp, 0x70 ; pop rbp ; ret
0x000000000040ec3e : add rsp, 0x80 ; pop rbp ; ret
0x000000000040c2ff : add rsp, 0x84 ; pop rbp ; ret
0x000000000042377c : add rsp, 0x90 ; pop rbp ; ret
0x000000000040d9d0 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004022ed : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f479 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004282dd : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000429a8e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040fa82 : add rsp, 8 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x000000000042e5fd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042fad4 : and al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 3], dl ; jmp rdx
0x000000000040c5b5 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cb7d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401767 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041f0e9 : and bh, dh ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; push rax ; ret
0x0000000000423c2b : and byte ptr [rsi + 0x58], ah ; jb 0x423c62 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041effe : and dword ptr [rax], eax ; push rax ; ret
0x00000000004023e8 : and eax, 0x6312c1 ; add dh, al ; add al, 0x25 ; ret 0x6312
0x00000000004023f0 : and eax, 0x6312c2 ; add dh, al ; add al, 0x25 ; ret
0x00000000004050b7 : and eax, 0x6312d8 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ad31 : and eax, 0x75b4b9d3 ; ret
0x0000000000427a7d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000403fa0 : call 0x4017a8
0x0000000000424025 : call 0x4240e9
0x000000000042862d : call 0xffffffffaca34861
0x000000000042862c : call 0xffffffffaca34862
0x000000000040d9c3 : call 0xffffffffc36e7646
0x000000000040d9c2 : call 0xffffffffc36e7647
0x000000000041e7e9 : call 0xffffffffe9047139
0x000000000041e7e8 : call 0xffffffffe904713a
0x0000000000402d32 : call 0xfffffffffe50b2c9
0x000000000042e8f9 : call qword ptr [r12 + rbx*8]
0x0000000000427717 : call qword ptr [rax]
0x000000000041ffae : call qword ptr [rbx]
0x000000000042c72c : call qword ptr [rcx]
0x000000000041dc74 : call qword ptr [rdi]
0x0000000000419c5b : call qword ptr [rdx]
0x000000000042e8fa : call qword ptr [rsp + rbx*8]
0x000000000040178d : call rax
0x0000000000408e75 : call rbx
0x000000000041bedb : call rcx
0x000000000041d8b4 : call rdi
0x000000000041d0e5 : call rdx
0x000000000040da7b : call rsp
0x0000000000409d9d : clc ; add rsp, 0x118 ; pop rbp ; ret
0x000000000042c687 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000423387 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000429019 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040172f : clc ; jne 0x401738 ; pop rbp ; ret
0x0000000000427cde : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042012f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cffe : clc ; pop rbx ; pop rbp ; ret
0x000000000040dc71 : clc ; ret 0x63
0x00000000004112bd : clc ; ret 0x77a8
0x0000000000404921 : cld ; add rsp, 0x4c0 ; pop rbp ; ret
0x0000000000428c6e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000429a8d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040daff : cld ; jmp 0x40db6c
0x000000000040dafe : cld ; jmp 0x40db6d
0x000000000042fe21 : cld ; std ; call qword ptr [rdx]
0x0000000000423c30 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042e5fc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000422b4b : cmc ; ret 0x4f0b
0x0000000000407618 : cmp byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042fad8 : cmp byte ptr [rdi - 3], dl ; jmp rdx
0x0000000000422ce1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004249e7 : cmp dl, al ; ret
0x0000000000426ab9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x00000000004016ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401700 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042f829 : cmp edi, edi ; call rsp
0x000000000041bb87 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000406b3c : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000427632 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000407eef : dec dword ptr [rax + 0x29] ; ret 0x2948
0x000000000041f0eb : dec dword ptr [rax - 0x73] ; add al, 0x25 ; push rax ; ret
0x000000000041b08b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041a9fe : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041b203 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000409b4f : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000423d5d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042c1e6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000403f7e : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000421e1b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004041b5 : dec dword ptr [rbx - 0x4336b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000422b46 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004041bb : dec dword ptr [rdi] ; ret 0x4589
0x000000000040356c : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff5], cl ; ret
0x000000000040396d : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff1], ch ; ret 1
0x0000000000410f9a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000406b39 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffffd], ah ; ret 1
0x00000000004055cd : dec dword ptr [rdi] ; test byte ptr [rsp + rax], al ; add cl, ch ; ret 1
0x000000000040a2de : dec dword ptr [rdi] ; test ch, ah ; add al, 0 ; add cl, ch ; ret 1
0x000000000040a506 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000406d41 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004042f3 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bc69 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040cdf5 : enter 0x1605, -0xd ; ret
0x000000000040d359 : enter 0x4184, -0x80 ; inc dword ptr [rbp + 0x20] ; ret 0x8845
0x000000000040779c : enter 0x448b, 0x20 ; ret 0x841
0x000000000040d27d : enter 0x454c, 0x20 ; ret 0x845
0x000000000040f299 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407dab : fadd qword ptr [rcx + 0xe68a2c2] ; xor al, 1 ; ret 0xea81
0x0000000000404555 : fadd qword ptr [rip + 0x45c70000] ; movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x000000000042fd01 : fdivp st(5) ; call qword ptr [rcx]
0x000000000042789b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000040d234 : fld dword ptr [rbp - 0x78] ; ret
0x000000000042cbb8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000409974 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000427d77 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000409b53 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000409975 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000409c76 : fmul dword ptr [rax - 0x7f] ; ret 0xf9c0
0x0000000000427d78 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000042e8fc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000406d18 : fmul qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401f47 : fsub st(0), st(0) ; ret
0x0000000000423033 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004282dc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040fa81 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401700 : hlt ; pop rbp ; mov edi, 0x631260 ; jmp rax
0x0000000000423d5b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000408151 : in al, -7 ; sub edi, dword ptr [rbx] ; ret 0x458b
0x00000000004082de : in al, -7 ; sub edi, dword ptr [rbx] ; ret 0xde9
0x00000000004019cd : in al, 0x2d ; ret 0x4e1f
0x000000000040ed08 : in al, 0x2d ; ret 0xc226
0x000000000040a84b : in al, 0x48 ; add esp, 0x140 ; pop rbp ; ret
0x00000000004293d1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000040a4e1 : in al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a2e1 : in al, dx ; add al, 0 ; add cl, ch ; ret 1
0x0000000000405a60 : in al, dx ; add rsp, 0x140 ; pop rbp ; ret
0x000000000040d9cf : in al, dx ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004286ec : in al, dx ; jmp 0x428769
0x00000000004286eb : in al, dx ; jmp 0x42876a
0x0000000000401ce0 : in al, dx ; pop rbp ; ret
0x000000000040d2d7 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x0000000000407eab : inc byte ptr [rcx - 0x4aacd73a] ; ret 0xf669
0x000000000040d35e : inc dword ptr [rbp + 0x20] ; ret 0x8845
0x000000000040d21a : inc dword ptr [rbp - 0x78] ; ret
0x000000000040d231 : inc dword ptr [rcx + 0x20] ; fld dword ptr [rbp - 0x78] ; ret
0x0000000000404ffb : inc dword ptr [rcx + 0x20f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403c87 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000407799 : inc dword ptr [rcx - 0x80] ; enter 0x448b, 0x20 ; ret 0x841
0x000000000040d27a : inc dword ptr [rcx - 0x80] ; enter 0x454c, 0x20 ; ret 0x845
0x0000000000427769 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000403fa4 : inc esi ; add al, 0x25 ; ret
0x00000000004244a6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x00000000004244fa : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000420c97 : int 0x5b
0x000000000040d219 : int1 ; inc dword ptr [rbp - 0x78] ; ret
0x000000000040d230 : int1 ; inc dword ptr [rcx + 0x20] ; fld dword ptr [rbp - 0x78] ; ret
0x00000000004016f3 : ja 0x4016fa ; pop rbp ; ret
0x0000000000423c2e : jb 0x423c5f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042f5ec : jb 0x42f5f5 ; add byte ptr [rax], al ; sbb al, 0x1d ; std ; jmp rsp
0x000000000040904e : jbe 0x409059 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004016ff : je 0x4016fd ; pop rbp ; mov edi, 0x631260 ; jmp rax
0x000000000041a126 : jge 0x41a0ab ; ret 0xffd5
0x000000000041abf0 : jge 0x41abd0 ; shr cl, cl ; ret 0x3b
0x000000000040138b : jmp 0x401307
0x0000000000403d3c : jmp 0x404b3b
0x0000000000403fc8 : jmp 0x404b3d
0x0000000000408fcf : jmp 0x4090ce
0x0000000000408f36 : jmp 0x4090cf
0x0000000000409d72 : jmp 0x409e7f
0x000000000040a76c : jmp 0x40a888
0x000000000040d528 : jmp 0x40d5f0
0x000000000040d899 : jmp 0x40da56
0x000000000040db00 : jmp 0x40db6b
0x000000000041b340 : jmp 0x41e7c0
0x0000000000419244 : jmp 0x41e7c1
0x000000000041a611 : jmp 0x41e7c2
0x0000000000421f6b : jmp 0x4229d7
0x0000000000421ea8 : jmp 0x4229d9
0x0000000000423fd3 : jmp 0x424038
0x000000000042676b : jmp 0x4278b0
0x0000000000427186 : jmp 0x4278b1
0x00000000004279d9 : jmp 0x4279e4
0x00000000004286ed : jmp 0x428768
0x000000000042c526 : jmp 0x42c808
0x0000000000422b4a : jmp 0x4f4dee46
0x000000000040ecc4 : jmp 0xffffffffb603138d
0x00000000004077c6 : jmp qword ptr [rax]
0x000000000042ffb3 : jmp qword ptr [rbx]
0x000000000040d2d3 : jmp qword ptr [rcx]
0x000000000041bdc7 : jmp qword ptr [rdi]
0x0000000000422dda : jmp qword ptr [rdx]
0x0000000000401707 : jmp rax
0x000000000041a718 : jmp rbx
0x000000000041b14a : jmp rcx
0x000000000041a772 : jmp rdi
0x0000000000401747 : jmp rdx
0x000000000043023b : jmp rsi
0x000000000041aa28 : jmp rsp
0x0000000000401730 : jne 0x401737 ; pop rbp ; ret
0x0000000000408d42 : jno 0x408d4c ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d5d9 : jo 0x40d63f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040eede : jo 0x40ef3f ; ret
0x000000000041403e : jo 0x41404a ; ret
0x0000000000415cae : jo 0x415cba ; ret
0x00000000004191fd : jo 0x419209 ; ret
0x00000000004204e4 : jo 0x420545 ; ret
0x000000000042fd00 : jo 0x42fce3 ; std ; call qword ptr [rcx]
0x000000000041abee : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041bcee : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040e306 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410935 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004207d9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cffc : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410934 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cffb : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041954e : ljmp ptr [rdi] ; ret 0x23da
0x000000000042f6ab : ljmp ptr [rsi + rax - 0x1ff40000] ; std ; call rsp
0x000000000041c555 : loope 0x41c523 ; jmp 0x41e7c3
0x0000000000401f44 : loopne 0x401ed4 ; fsub st(0), st(0) ; ret
0x0000000000401f43 : loopne 0x401ed5 ; fsub st(0), st(0) ; ret
0x00000000004081e2 : loopne 0x408216 ; stc ; sub edi, dword ptr [rbx] ; ret 0x4589
0x00000000004081e1 : loopne 0x408217 ; stc ; sub edi, dword ptr [rbx] ; ret 0x4589
0x000000000040ec8b : loopne 0x40ecdb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ec8a : loopne 0x40ecdc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410933 : loopne 0x410986 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041fedd : loopne 0x41ff43 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004212c4 : loopne 0x421317 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000423693 : loopne 0x42369c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042401e : loopne 0x42406e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042401d : loopne 0x42406f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004282e0 : loopne 0x4282e7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428c72 : loopne 0x428c79 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e63c : loopne 0x42e68b ; mov esp, ebp ; pop rbp ; ret
0x000000000042e63b : loopne 0x42e68c ; mov esp, ebp ; pop rbp ; ret
0x000000000042e88c : loopne 0x42e8db ; mov esp, ebp ; pop rbp ; ret
0x000000000042e88b : loopne 0x42e8dc ; mov esp, ebp ; pop rbp ; ret
0x000000000042f6b1 : loopne 0x42f6b2 ; call rsp
0x000000000041a11d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a1f7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004057a2 : mov ah, 0x29 ; sbb eax, 0x376d3eb9 ; ret 0x558b
0x00000000004181a5 : mov ah, 0x75 ; ret
0x000000000042f864 : mov ah, 0xd ; add byte ptr [rax], al ; mov word ptr [rax - 1], cs ; call rsp
0x000000000042f8a4 : mov ah, 0xe ; add byte ptr [rax], al ; pop rsp ; xchg edi, edi ; call rsp
0x000000000042f8e4 : mov ah, 0xf ; add byte ptr [rax], al ; mov al, -1 ; call rsp
0x000000000042f6ec : mov ah, 7 ; add byte ptr [rax], al ; stc ; std ; call rsp
0x000000000042f72c : mov ah, 8 ; add byte ptr [rax], al ; pushfq ; adc al, -2 ; call rsp
0x0000000000420cb3 : mov al, -0x47 ; ret
0x000000000042f8e9 : mov al, -1 ; call rsp
0x000000000042bcef : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004022f0 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004028e3 : mov al, 0x71 ; ret
0x000000000042cead : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042cb7a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042cddd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411b45 : mov bl, 0x75 ; ret
0x00000000004019a8 : mov byte ptr [r15], r9b ; test byte ptr [rip - 0x16fffffd], dl ; ret 0
0x0000000000408e6c : mov byte ptr [rax], 0 ; add byte ptr [rbx + 0x222dc845], cl ; call rbx
0x00000000004019a9 : mov byte ptr [rdi], cl ; test byte ptr [rip - 0x16fffffd], dl ; ret 0
0x0000000000401763 : mov byte ptr [rip + 0x22fb4e], 1 ; ret
0x000000000041999f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000403851 : mov cl, 0x71 ; ret
0x000000000042db44 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040c5b8 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cb80 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042e5fa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042d871 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004100b9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040fc8f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004286ea : mov dword ptr [rbp - 0x14], eax ; jmp 0x42876b
0x000000000040ec89 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409d6f : mov dword ptr [rbp - 0x2c], eax ; jmp 0x409e82
0x0000000000408fcc : mov dword ptr [rbp - 0x34], eax ; jmp 0x4090d1
0x000000000040849d : mov dword ptr [rbp - 0x3c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d525 : mov dword ptr [rbp - 0x48], eax ; jmp 0x40d5f3
0x0000000000403d39 : mov dword ptr [rbp - 0x5c], eax ; jmp 0x404b3e
0x0000000000421f68 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4229da
0x0000000000423031 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410396 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ff3d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000403fc7 : mov eax, 0xb68e9 ; add dh, al ; add al, 0x25 ; ret 0x6312
0x0000000000404245 : mov eax, 0xe8fffffb ; ret 0x1cb
0x000000000040f7b9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423e9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427a81 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042406e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e90e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428565 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409053 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042401c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042e63a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ff3f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000407783 : mov eax, dword ptr [rbp - 0x78] ; ret
0x000000000040fa7f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000427cdc : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042012d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ff3e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000040d529 : mov ebp, 0xb8000000 ; ret
0x000000000041c958 : mov ebp, 0xe19c53ba ; ret
0x000000000040178b : mov ebp, esp ; call rax
0x00000000004016f1 : mov ebp, esp ; ja 0x4016fc ; pop rbp ; ret
0x0000000000404336 : mov ecx, 0x3d ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040fc8c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401785 : mov edi, 0x630e20 ; mov rbp, rsp ; call rax
0x0000000000401702 : mov edi, 0x631260 ; jmp rax
0x0000000000401742 : mov edi, 0x631260 ; jmp rdx
0x00000000004265e6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x00000000004191f7 : mov edi, 0xb8000055 ; wait ; jo 0x41920f ; ret
0x000000000042e8f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042e8f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042c49e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004199bb : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000405996 : mov edx, 0xff002355 ; ret 0x1589
0x000000000041a832 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042c487 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401740 : mov esi, eax ; mov edi, 0x631260 ; jmp rdx
0x0000000000401cdf : mov esp, ebp ; pop rbp ; ret
0x0000000000410395 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f7b8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423e9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042406d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e90d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409052 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042401b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042012c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040178a : mov rbp, rsp ; call rax
0x00000000004016f0 : mov rbp, rsp ; ja 0x4016fd ; pop rbp ; ret
0x000000000040173f : mov rsi, rax ; mov edi, 0x631260 ; jmp rdx
0x0000000000401cde : mov rsp, rbp ; pop rbp ; ret
0x0000000000423c31 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042f868 : mov word ptr [rax - 1], cs ; call rsp
0x000000000043033c : mov word ptr [rcx], cs ; add byte ptr [rax], al ; push rax ; xor edi, edi ; call qword ptr [rdx]
0x000000000041fd77 : movabs byte ptr [0x5025148d48fa0853], al ; ret
0x0000000000415498 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000403d3b : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x404b3c
0x0000000000403d3a : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x404b3d
0x00000000004186e5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000040455b : movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x000000000042db43 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040c5b7 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cb7f : movzx eax, al ; pop rbp ; ret
0x000000000042c298 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000042ffb0 : nop ; add bh, bh ; jmp qword ptr [rbx]
0x000000000042fe20 : nop ; cld ; std ; call qword ptr [rdx]
0x0000000000411985 : nop ; ret
0x000000000041fd92 : nop ; ret 0x148
0x000000000041fda6 : nop ; ret 0x2948
0x0000000000430320 : nop ; xor bh, bh ; call rdx
0x000000000042e918 : nop dword ptr [rax + rax] ; ret
0x000000000042f825 : or al, 0 ; add ah, bl ; cmp edi, edi ; call rsp
0x00000000004305fd : or al, 0 ; add al, al ; ret
0x00000000004305dd : or al, 0 ; add byte ptr [rax], dh ; ret 0xffff
0x000000000040dc6f : or al, 0x25 ; clc ; ret 0x63
0x000000000041a11a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a1f4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042f6b0 : or al, 0xffffffffffffffe0 ; std ; call rsp
0x00000000004301f9 : or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000040fc90 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403bfc : or byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004301f5 : or byte ptr [rax], al ; add byte ptr [rax], bl ; or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x0000000000421548 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004301f4 : or byte ptr [rax], r8b ; add byte ptr [rax], bl ; or al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000040800d : or byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040cd03 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000410394 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004041f0 : or dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004082e4 : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000403570 : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000403fca : or eax, dword ptr [rax] ; add dh, al ; add al, 0x25 ; ret 0x6312
0x000000000040ff3b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042f771 : or edi, edi ; jmp rsp
0x000000000041bafb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042cb7c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407ea5 : out dx, al ; sub byte ptr [rbx - 0x4b], dl ; ret 0xfe29
0x000000000042ceaf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420cb2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000040d2cc : out dx, eax ; rol byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000042c489 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041cbe5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000411836 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041cc30 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000422dd1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042c48c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000423c2c : pop ax ; jb 0x423c61 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041da99 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e90c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d5db : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041da9b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e90e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d5dd : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e910 : pop r14 ; pop r15 ; ret
0x000000000040b953 : pop r14 ; pop rbp ; ret
0x000000000040d5df : pop r15 ; pop rbp ; ret
0x000000000042e912 : pop r15 ; ret
0x0000000000423c2d : pop rax ; jb 0x423c60 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401762 : pop rbp ; mov byte ptr [rip + 0x22fb4e], 1 ; ret
0x0000000000401701 : pop rbp ; mov edi, 0x631260 ; jmp rax
0x000000000040173e : pop rbp ; mov rsi, rax ; mov edi, 0x631260 ; jmp rdx
0x000000000042e90b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041da9c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e90f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004199a2 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000415c75 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004199be : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004016f5 : pop rbp ; ret
0x000000000040d5da : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041ebd5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b952 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040761c : pop rbx ; pop rbp ; ret
0x0000000000421550 : pop rbx ; ret
0x00000000004199a3 : pop rcx ; ret 0x1b2
0x0000000000414076 : pop rcx ; ret 0x8589
0x00000000004199bf : pop rcx ; ret 0x8b48
0x000000000041bcf0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040d5e0 : pop rdi ; pop rbp ; ret
0x000000000042e913 : pop rdi ; ret
0x000000000040d5de : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042e911 : pop rsi ; pop r15 ; ret
0x000000000040b954 : pop rsi ; pop rbp ; ret
0x000000000041da9a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e90d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d5dc : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414075 : pop rsp ; pop rcx ; ret 0x8589
0x000000000042f8a8 : pop rsp ; xchg edi, edi ; call rsp
0x000000000042d9c5 : popfq ; ret 0xd284
0x0000000000403fc9 : push -0x39fffff5 ; add al, 0x25 ; ret 0x6312
0x00000000004199a0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000401cc1 : push -0x48000000 ; ret 0x4e1f
0x000000000041bb8a : push -0x75425eeb ; push rbp ; ret
0x00000000004186e8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042f6eb : push qword ptr [rdi + rax - 0x6b40000] ; std ; call rsp
0x000000000040d330 : push rax ; adc byte ptr [rbp - 0x78], al ; ret
0x000000000040d215 : push rax ; adc byte ptr [rcx - 0x80], al ; int1 ; inc dword ptr [rbp - 0x78] ; ret
0x0000000000401e45 : push rax ; pop rbp ; ret
0x000000000041ef94 : push rax ; ret
0x0000000000430340 : push rax ; xor edi, edi ; call qword ptr [rdx]
0x0000000000407daa : push rbp ; fadd qword ptr [rcx + 0xe68a2c2] ; xor al, 1 ; ret 0xea81
0x0000000000409b52 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000409c75 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xf9c0
0x0000000000401784 : push rbp ; mov edi, 0x630e20 ; mov rbp, rsp ; call rax
0x000000000041bb8f : push rbp ; ret
0x000000000041bb26 : push rbp ; ret 0xd284
0x000000000041a11f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a1f9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042c48b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042fad9 : push rdi ; std ; jmp rdx
0x0000000000403bfb : push rdx ; or byte ptr [rax - 1], cl ; ret 0x8948
0x000000000042f730 : pushfq ; adc al, -2 ; call rsp
0x000000000042bcf5 : pushfq ; ret 0xd284
0x00000000004012f9 : ret
0x00000000004019b1 : ret 0
0x0000000000409d31 : ret 0x148
0x000000000040599b : ret 0x1589
0x0000000000403443 : ret 0x16
0x00000000004093e4 : ret 0x17e7
0x000000000041ccf4 : ret 0x1a
0x0000000000411f6d : ret 0x1add
0x00000000004199a5 : ret 0x1b2
0x000000000040b4ca : ret 0x1c
0x000000000040424a : ret 0x1cb
0x0000000000401592 : ret 0x22fb
0x0000000000401392 : ret 0x22fc
0x00000000004128ba : ret 0x23da
0x000000000041f5b8 : ret 0x279e
0x0000000000407e09 : ret 0x2948
0x000000000041bcf4 : ret 0x2a
0x000000000041a122 : ret 0x2d50
0x000000000042bfee : ret 0x3040
0x000000000040d682 : ret 0x3108
0x000000000041abf4 : ret 0x3b
0x0000000000417c55 : ret 0x3e
0x00000000004041be : ret 0x4589
0x0000000000408155 : ret 0x458b
0x000000000040cd33 : ret 0x47e9
0x000000000041b091 : ret 0x4802
0x0000000000403c15 : ret 0x4808
0x000000000042c48e : ret 0x4815
0x000000000040c568 : ret 0x4846
0x000000000041cbe6 : ret 0x4861
0x0000000000401aa4 : ret 0x48f0
0x00000000004154a1 : ret 0x4b
0x0000000000420ab7 : ret 0x4cc0
0x000000000041daf8 : ret 0x4cf0
0x00000000004019d0 : ret 0x4e1f
0x0000000000422b4c : ret 0x4f0b
0x000000000042c6e8 : ret 0x52e8
0x0000000000408f9f : ret 0x5569
0x000000000040feeb : ret 0x5589
0x00000000004057a9 : ret 0x558b
0x000000000041a3aa : ret 0x5966
0x00000000004217a7 : ret 0x5bc6
0x000000000042e5ff : ret 0x61
0x0000000000407668 : ret 0x63
0x00000000004023f1 : ret 0x6312
0x0000000000409df2 : ret 0x6348
0x0000000000407dad : ret 0x68a2
0x0000000000411606 : ret 0x6a8a
0x0000000000400292 : ret 0x7490
0x00000000004112be : ret 0x77a8
0x0000000000412421 : ret 0x7a8a
0x0000000000402992 : ret 0x7b0f
0x000000000041909b : ret 0x7b7f
0x000000000041fa4a : ret 0x8041
0x000000000041fc92 : ret 0x8141
0x000000000042c1e9 : ret 0x8148
0x000000000041afb4 : ret 0x822d
0x00000000004077a0 : ret 0x841
0x0000000000403c8b : ret 0x8445
0x000000000040d281 : ret 0x845
0x000000000040722c : ret 0x847a
0x0000000000405518 : ret 0x8589
0x000000000040d2df : ret 0x8845
0x0000000000412033 : ret 0x8940
0x000000000042785d : ret 0x8941
0x000000000040c470 : ret 0x8946
0x0000000000403bff : ret 0x8948
0x000000000042aaaf : ret 0x894a
0x0000000000411837 : ret 0x8961
0x0000000000405bd2 : ret 0x897a
0x000000000040ecc7 : ret 0x89b5
0x000000000040ad82 : ret 0x89d1
0x0000000000425008 : ret 0x89f1
0x000000000042c0a8 : ret 0x8a44
0x000000000040c505 : ret 0x8a46
0x000000000042bfa5 : ret 0x8a4a
0x0000000000407290 : ret 0x8a7a
0x000000000040c523 : ret 0x8b46
0x00000000004199c1 : ret 0x8b48
0x000000000040cb4e : ret 0x8b4c
0x0000000000403f81 : ret 0x8d8b
0x000000000040907f : ret 0x912
0x0000000000426c05 : ret 0x9589
0x0000000000408e1c : ret 0x9cde
0x00000000004244a7 : ret 0x9e6d
0x000000000041a1fc : ret 0xa30b
0x000000000042862f : ret 0xac60
0x0000000000421e1e : ret 0xb0
0x000000000041bb00 : ret 0xb740
0x0000000000409d34 : ret 0xb848
0x0000000000419d30 : ret 0xb940
0x000000000042bf32 : ret 0xb94a
0x000000000040b8f5 : ret 0xb9d1
0x0000000000426e96 : ret 0xb9f1
0x000000000041c17c : ret 0xbf48
0x0000000000401725 : ret 0xc148
0x000000000040ed0a : ret 0xc226
0x000000000042e842 : ret 0xc493
0x0000000000409ebf : ret 0xc6f5
0x000000000042cb39 : ret 0xca21
0x000000000040485b : ret 0xca29
0x000000000040d5c3 : ret 0xca30
0x000000000042e605 : ret 0xccb2
0x00000000004077c8 : ret 0xd088
0x000000000040d5c8 : ret 0xd188
0x00000000004041f5 : ret 0xd284
0x000000000042a6f5 : ret 0xd618
0x00000000004082e2 : ret 0xde9
0x0000000000405004 : ret 0xe280
0x000000000040d1ce : ret 0xe428
0x000000000041b9d2 : ret 0xe940
0x000000000041cc31 : ret 0xe961
0x0000000000412a5d : ret 0xea51
0x0000000000407db3 : ret 0xea81
0x000000000041e7ec : ret 0xee8
0x0000000000408013 : ret 0xf229
0x000000000040ff25 : ret 0xf281
0x000000000041a837 : ret 0xf41
0x000000000040909e : ret 0xf49
0x0000000000407eb1 : ret 0xf669
0x000000000041c785 : ret 0xf7f3
0x0000000000409c79 : ret 0xf9c0
0x0000000000408019 : ret 0xfa29
0x000000000041af0e : ret 0xfc75
0x000000000041f96a : ret 0xfe19
0x0000000000407ea9 : ret 0xfe29
0x000000000041c77f : ret 0xffa5
0x000000000041af08 : ret 0xffc4
0x000000000041a128 : ret 0xffd5
0x000000000041a202 : ret 0xffd8
0x000000000041afba : ret 0xffd9
0x000000000041a3a4 : ret 0xffe0
0x0000000000419095 : ret 0xfffa
0x00000000004305e1 : ret 0xffff
0x0000000000403975 : ret 1
0x0000000000405827 : ret 2
0x0000000000407c0f : ret 3
0x0000000000409ee6 : ret 5
0x0000000000402d3b : ret 6
0x00000000004096ac : ret 7
0x00000000004069c5 : ret 8
0x000000000042c46d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000404925 : rol byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000428f8c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f47c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d2cd : rol byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000042c46c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040d32d : rol dword ptr [rdx + rcx*4 + 0x50], 1 ; adc byte ptr [rbp - 0x78], al ; ret
0x0000000000423c24 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040172c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40173b ; pop rbp ; ret
0x000000000040c5b9 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000404241 : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x17000005], edi ; ret 0x1cb
0x000000000040ff3a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042c29e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000420970 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042632b : sahf ; ret 0xd284
0x00000000004250ca : salc ; jmp qword ptr [rdi]
0x0000000000425006 : salc ; sti ; ret 0x89f1
0x000000000040172e : sar eax, 1 ; jne 0x401739 ; pop rbp ; ret
0x000000000041bcf1 : sar ebp, -0x17 ; ret 0x2a
0x000000000040172d : sar rax, 1 ; jne 0x40173a ; pop rbp ; ret
0x00000000004305f8 : sbb al, 0 ; add byte ptr [rax], al ; or al, 0 ; add al, al ; ret
0x000000000042f5f0 : sbb al, 0x1d ; std ; jmp rsp
0x000000000041effc : sbb al, 0x22 ; and dword ptr [rax], eax ; push rax ; ret
0x0000000000420cb0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042789e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000426abb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000409da1 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004301f8 : sbb byte ptr [rdi + rdi*8], cl ; jmp qword ptr [rbx]
0x000000000041bbf1 : sbb cl, ch ; ret
0x0000000000423473 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004057a4 : sbb eax, 0x376d3eb9 ; ret 0x558b
0x000000000041fd00 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000041abf2 : shr cl, cl ; ret 0x3b
0x000000000040cdf3 : shr dword ptr [rcx], 1 ; enter 0x1605, -0xd ; ret
0x000000000042f8e5 : sldt word ptr [rax] ; mov al, -1 ; call rsp
0x0000000000418a2d : stc ; ret 0x77a8
0x000000000042f6f1 : stc ; std ; call rsp
0x00000000004081e4 : stc ; sub edi, dword ptr [rbx] ; ret 0x4589
0x0000000000408152 : stc ; sub edi, dword ptr [rbx] ; ret 0x458b
0x00000000004082df : stc ; sub edi, dword ptr [rbx] ; ret 0xde9
0x000000000042fd02 : std ; call qword ptr [rcx]
0x000000000042fe22 : std ; call qword ptr [rdx]
0x000000000042f6b2 : std ; call rsp
0x000000000042fada : std ; jmp rdx
0x000000000042f5f2 : std ; jmp rsp
0x000000000042f6aa : std ; ljmp ptr [rsi + rax - 0x1ff40000] ; std ; call rsp
0x000000000042f6ea : std ; push qword ptr [rdi + rax - 0x6b40000] ; std ; call rsp
0x000000000041f5b7 : std ; ret 0x279e
0x0000000000401766 : sti ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000425007 : sti ; ret 0x89f1
0x0000000000426e95 : sti ; ret 0xb9f1
0x000000000040dc4e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428736 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040db38 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a125 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000407eae : sub byte ptr [rbx - 0x4b], dl ; ret 0xf669
0x0000000000407ea6 : sub byte ptr [rbx - 0x4b], dl ; ret 0xfe29
0x000000000041a11b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a1f5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004057a3 : sub dword ptr [rip + 0x376d3eb9], ebx ; ret 0x558b
0x000000000040e0ee : sub eax, 0x25148a45 ; clc ; ret 0x63
0x0000000000401f72 : sub eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041afb5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000040a4f7 : sub eax, 0xb91b6e18 ; ret
0x00000000004081e5 : sub edi, dword ptr [rbx] ; ret 0x4589
0x0000000000408153 : sub edi, dword ptr [rbx] ; ret 0x458b
0x00000000004082e0 : sub edi, dword ptr [rbx] ; ret 0xde9
0x0000000000423c2f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042e94d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042e94c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402672 : sysenter
0x000000000041a120 : test al, -0x7f ; ret 0x2d50
0x000000000041a1fa : test al, -0x7f ; ret 0xa30b
0x0000000000426672 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bd43 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042038e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041c956 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000422cc8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040356e : test byte ptr [rax - 0x16fffff5], cl ; ret
0x000000000042e91a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c302 : test byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040396f : test byte ptr [rbx - 0x16fffff1], ch ; ret 1
0x000000000040d35a : test byte ptr [rcx - 0x80], al ; inc dword ptr [rbp + 0x20] ; ret 0x8845
0x0000000000410f9c : test byte ptr [rcx], ch ; ret 0
0x0000000000406b3b : test byte ptr [rdi - 0x16fffffd], ah ; ret 1
0x00000000004019ab : test byte ptr [rip - 0x16fffffd], dl ; ret 0
0x00000000004055cf : test byte ptr [rsp + rax], al ; add cl, ch ; ret 1
0x000000000040a2e0 : test ch, ah ; add al, 0 ; add cl, ch ; ret 1
0x0000000000410f96 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000404244 : test dword ptr [rax - 0x17000005], edi ; ret 0x1cb
0x0000000000427713 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042776b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004276d2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000422dd6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041ffaa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041b9cb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041cc2a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x00000000004186ea : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041cbdf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041abef : wait ; jge 0x41abd1 ; shr cl, cl ; ret 0x3b
0x0000000000415cad : wait ; jo 0x415cbb ; ret
0x00000000004191fc : wait ; jo 0x41920a ; ret
0x000000000042c488 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403c8a : xchg eax, ebp ; ret 0x8445
0x000000000040d2de : xchg eax, ebp ; ret 0x8845
0x00000000004042f9 : xchg eax, ebp ; ret 0xd284
0x000000000040d597 : xchg eax, ebp ; ret 0xe280
0x0000000000411835 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000418135 : xchg eax, ebx ; ret
0x0000000000418365 : xchg eax, ecx ; ret
0x000000000042ba09 : xchg eax, edi ; ret 0xd284
0x0000000000411bb5 : xchg eax, edx ; ret
0x000000000041fa5f : xchg eax, edx ; ret 0x8445
0x0000000000422cce : xchg eax, edx ; ret 0xd284
0x00000000004041f4 : xchg eax, esi ; ret 0xd284
0x0000000000421f6a : xchg eax, esp ; jmp 0x4229d8
0x0000000000421ea7 : xchg eax, esp ; jmp 0x4229da
0x000000000041cbe4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004184b5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041cc2f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041fa49 : xchg eax, esp ; ret 0x8041
0x000000000040433e : xchg eax, esp ; ret 0x8445
0x000000000041bafe : xchg eax, esp ; ret 0xb740
0x0000000000406d1e : xchg eax, esp ; ret 0xd284
0x0000000000405003 : xchg eax, esp ; ret 0xe280
0x0000000000421f69 : xchg eax, r12d ; jmp 0x4229d9
0x000000000042f8a9 : xchg edi, edi ; call rsp
0x000000000042505a : xlatb ; sti ; ret 0x89f1
0x0000000000426e94 : xlatb ; sti ; ret 0xb9f1
0x0000000000407db1 : xor al, 1 ; ret 0xea81
0x000000000041baf9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000430321 : xor bh, bh ; call rdx
0x0000000000410397 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410398 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004080d7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404553 : xor cl, ch ; fadd qword ptr [rip + 0x45c70000] ; movsb byte ptr [rdi], byte ptr [rsi] ; sysenter
0x0000000000430341 : xor edi, edi ; call qword ptr [rdx]
