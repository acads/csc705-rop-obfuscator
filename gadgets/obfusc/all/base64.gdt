0x000000000042f619 : adc al, -1 ; jmp qword ptr [rbx]
0x0000000000425d08 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x00000000004091e5 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000427062 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000041acee : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041a661 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000422d5b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405451 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041b7eb : adc eax, 0x558abda1 ; ret
0x000000000041edc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ec29 : adc edi, edi ; call rsp
0x000000000042f23b : add ah, al ; add eax, dword ptr [rax] ; add al, dl ; add al, -2 ; call qword ptr [rdx]
0x000000000042f73b : add ah, al ; or byte ptr [rax], al ; add al, dl ; cmp bh, bh ; call rdx
0x000000000042eb2f : add ah, bh ; mov ebp, edi ; jmp rsp
0x00000000004017f4 : add ah, byte ptr [rbx] ; jmp rax
0x0000000000401834 : add ah, byte ptr [rbx] ; jmp rdx
0x000000000042ed67 : add ah, cl ; xchg bh, bh ; jmp rsp
0x000000000042f241 : add al, -2 ; call qword ptr [rdx]
0x000000000042eb2d : add al, 0 ; add ah, bh ; mov ebp, edi ; jmp rsp
0x000000000040c7ba : add al, 0 ; add byte ptr [rbx - 0x30d253bb], cl ; ret
0x000000000042b9da : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042f8bf : add al, ah ; js 0x42f8c6 ; jmp rcx
0x000000000042f657 : add al, bh ; sbb bh, bh ; jmp rsi
0x000000000040519c : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040b827 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x3ed257bb], cl ; int 0x80
0x0000000000402a8e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x4cd26fbb], cl ; ret 0x412c
0x00000000004053f1 : add al, ch ; stc ; ret 0xffff
0x000000000042f23f : add al, dl ; add al, -2 ; call qword ptr [rdx]
0x000000000042f73f : add al, dl ; cmp bh, bh ; call rdx
0x000000000042f3cf : add al, dl ; or bh, bh ; jmp qword ptr [rbx]
0x000000000040ce95 : add bh, al ; mov r8b, 0x6e ; ret 0x58c8
0x0000000000422a34 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000426d33 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000041b629 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042de6f : add bl, dh ; ret
0x000000000042db42 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000042dda4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041fd8b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040519e : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405430 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042f42f : add byte ptr [rax], ah ; or bh, bh ; call rdi
0x0000000000422a32 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000426d31 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042de6d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d799 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040542e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042de6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400500 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400502 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040959e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400504 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b057 : add byte ptr [rax], al ; add byte ptr [rbx + 0x192da845], cl ; cdq ; call rdx
0x000000000040d72e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041e832 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c6f4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6d2dac45], cl ; ret 0x58c8
0x000000000040cbb8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6e2dac45], cl ; ret 0x58c8
0x000000000040b3f4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7f2da845], cl ; ret 0x3634
0x00000000004211f3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040c802 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2fd253bb], cl ; ret
0x000000000040b345 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3fd257bb], cl ; int 0x80
0x0000000000402ad9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4bd26fbb], cl ; ret 0x412c
0x00000000004275dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000423b59 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000402c50 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7dd26fbb], cl ; ret
0x0000000000402b56 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ed26fbb], cl ; ret
0x0000000000402fc2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042db43 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000042dda5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004229a0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042cf11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042b241 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000425b96 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404cc8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000406061 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405e91 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040a6a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a67f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a1ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000426fc2 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041edcb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e450 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422d5d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408dc8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eb39 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004013ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042f656 : add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp rsi
0x000000000042eb2e : add byte ptr [rax], al ; cld ; mov ebp, edi ; jmp rsp
0x000000000042f652 : add byte ptr [rax], al ; fadd qword ptr [rdi] ; add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp rsi
0x000000000042eb6e : add byte ptr [rax], al ; fcomp st(0), st(3) ; std ; jmp rsp
0x000000000042f75a : add byte ptr [rax], al ; in al, 8 ; add byte ptr [rax], al ; nop ; cmp edi, edi ; call qword ptr [rdx]
0x00000000004014c9 : add byte ptr [rax], al ; jmp 0x4013c9
0x0000000000426fbe : add byte ptr [rax], al ; jmp 0x426fcd
0x000000000042f11e : add byte ptr [rax], al ; mov al, -0x1a ; std ; call qword ptr [rcx]
0x000000000042db88 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040542f : add byte ptr [rax], al ; mov rdx, rax ; mov al, 0 ; call 0x4016f9
0x000000000040519d : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f75e : add byte ptr [rax], al ; nop ; cmp edi, edi ; call qword ptr [rdx]
0x000000000042f8ba : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add al, ah ; js 0x42f8cb ; jmp rcx
0x000000000042f616 : add byte ptr [rax], al ; pop rax ; adc al, -1 ; jmp qword ptr [rbx]
0x0000000000401b29 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e833 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c459 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000400506 : add byte ptr [rax], al ; ret
0x000000000042f23e : add byte ptr [rax], al ; rol byte ptr [rsi + rdi*8], 1 ; call qword ptr [rdx]
0x000000000042ebae : add byte ptr [rax], al ; sub al, -2 ; std ; jmp rsp
0x000000000042f3cb : add byte ptr [rbp + rax], dl ; add al, dl ; or bh, bh ; jmp qword ptr [rbx]
0x000000000042ebef : add byte ptr [rbp + rdx - 2], ch ; jmp rsp
0x000000000042eda7 : add byte ptr [rbp - 1], ch ; jmp rsp
0x000000000040b00e : add byte ptr [rbx + 0x182da845], cl ; cdq ; call rdx
0x000000000040b059 : add byte ptr [rbx + 0x192da845], cl ; cdq ; call rdx
0x000000000040d730 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041e834 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c45a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c6f6 : add byte ptr [rbx + 0x6d2dac45], cl ; ret 0x58c8
0x000000000040cbba : add byte ptr [rbx + 0x6e2dac45], cl ; ret 0x58c8
0x00000000004078f8 : add byte ptr [rbx + 0x742d9445], cl ; mov ch, 0x5b ; ret
0x0000000000407943 : add byte ptr [rbx + 0x752d9445], cl ; mov ch, 0x5b ; ret
0x000000000040b3f6 : add byte ptr [rbx + 0x7f2da845], cl ; ret 0x3634
0x0000000000406394 : add byte ptr [rbx - 0x119c34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004063d2 : add byte ptr [rbx - 0x119c74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040725d : add byte ptr [rbx - 0x2274b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004072f9 : add byte ptr [rbx - 0x22b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004073bb : add byte ptr [rbx - 0x22f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004211f5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004211aa : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000403480 : add byte ptr [rbx - 0x2ab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c804 : add byte ptr [rbx - 0x2fd253bb], cl ; ret
0x000000000040c7bc : add byte ptr [rbx - 0x30d253bb], cl ; ret
0x0000000000404c20 : add byte ptr [rbx - 0x33b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c3bf : add byte ptr [rbx - 0x36f43], cl ; jmp qword ptr [rcx]
0x00000000004053e6 : add byte ptr [rbx - 0x3d34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b829 : add byte ptr [rbx - 0x3ed257bb], cl ; int 0x80
0x000000000040b347 : add byte ptr [rbx - 0x3fd257bb], cl ; int 0x80
0x0000000000402adb : add byte ptr [rbx - 0x4bd26fbb], cl ; ret 0x412c
0x0000000000402a90 : add byte ptr [rbx - 0x4cd26fbb], cl ; ret 0x412c
0x00000000004275de : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042db89 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000423b5b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000402c52 : add byte ptr [rbx - 0x7dd26fbb], cl ; ret
0x0000000000402b58 : add byte ptr [rbx - 0x7ed26fbb], cl ; ret
0x000000000040b77a : add byte ptr [rbx - 0x7fd257bb], cl ; ret 0x3634
0x0000000000426c1f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000402fc4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000422a9e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401858 : add byte ptr [rcx], al ; ret
0x000000000042db45 : add byte ptr [rcx], al ; ret 0xea81
0x000000000042dda7 : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004229a2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042cf13 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042b243 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000425b98 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404cca : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000406063 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405e93 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040a6a3 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040a681 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a1f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000042f11b : add byte ptr [rdx + rax - 0x19500000], ah ; std ; call qword ptr [rcx]
0x000000000042f8bb : add byte ptr [rdx + rcx], al ; add al, ah ; js 0x42f8ca ; jmp rcx
0x000000000042ebaf : add byte ptr [rsi + rdi*8], ch ; std ; jmp rsp
0x000000000040a382 : add cl, byte ptr [rax - 0x75] ; push rbp ; call 0x50326da
0x000000000041b75c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000404cb2 : add cl, ch ; ret
0x000000000040752d : add cl, ch ; ret 0xc
0x000000000040802d : add cl, ch ; ret 1
0x0000000000404cb0 : add dword ptr [r8], -0x17 ; ret
0x0000000000404cb1 : add dword ptr [rax], -0x17 ; ret
0x000000000040ce93 : add dword ptr [rax], eax ; add bh, al ; mov r8b, 0x6e ; ret 0x58c8
0x00000000004062a9 : add dword ptr [rax], eax ; pop rbp ; ret
0x0000000000404f3b : add dword ptr [rcx + 0xf], eax ; xchg eax, edx ; ret
0x000000000042d092 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000409560 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0ce : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401854 : add eax, 0x22ea7e ; add ebx, esi ; ret
0x000000000040c0e4 : add eax, 0xc1b80000 ; int 0x80
0x000000000042eb6d : add eax, 0xdbdc0000 ; std ; jmp rsp
0x000000000042f23d : add eax, dword ptr [rax] ; add al, dl ; add al, -2 ; call qword ptr [rdx]
0x000000000040c458 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b778 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7fd257bb], cl ; ret 0x3634
0x000000000040181b : add eax, edx ; sar rax, 1 ; jne 0x40182c ; pop rbp ; ret
0x0000000000401859 : add ebx, esi ; ret
0x0000000000401c4b : add esp, 0x10 ; pop rbp ; ret
0x0000000000422a9c : add esp, 0x100 ; pop rbp ; ret
0x00000000004062a5 : add esp, 0x119d0 ; pop rbp ; ret
0x000000000040cf2f : add esp, 0x140 ; pop rbp ; ret
0x0000000000422c0c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e8ed : add esp, 0x20 ; pop rbp ; ret
0x0000000000407395 : add esp, 0x240 ; pop rbp ; ret
0x000000000040a80d : add esp, 0x250 ; pop rbp ; ret
0x00000000004089c5 : add esp, 0x2a0 ; pop rbp ; ret
0x0000000000403529 : add esp, 0x2c0 ; pop rbp ; ret
0x0000000000427277 : add esp, 0x30 ; pop rbp ; ret
0x0000000000422d60 : add esp, 0x40 ; pop rbp ; ret
0x000000000042bbd9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000426cce : add esp, 0x4f0 ; pop rbp ; ret
0x0000000000408dcb : add esp, 0x50 ; pop rbp ; ret
0x0000000000423c80 : add esp, 0x60 ; pop rbp ; ret
0x000000000040eb3c : add esp, 0x70 ; pop rbp ; ret
0x0000000000401b25 : add esp, 0x80 ; pop rbp ; ret
0x00000000004233dd : add esp, 0x90 ; pop rbp ; ret
0x0000000000420f26 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401fcc : add esp, 0xb0 ; pop rbp ; ret
0x000000000040f0da : add esp, 0xd0 ; pop rbp ; ret
0x000000000042782e : add esp, 0xe0 ; pop rbp ; ret
0x0000000000428fdf : add esp, 0xf0 ; pop rbp ; ret
0x000000000040f6e3 : add esp, 8 ; pop rbp ; ret
0x00000000004013ae : add esp, 8 ; ret
0x000000000040181a : add rax, rdx ; sar rax, 1 ; jne 0x40182d ; pop rbp ; ret
0x0000000000401c4a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000422a9b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004062a4 : add rsp, 0x119d0 ; pop rbp ; ret
0x000000000040cf2e : add rsp, 0x140 ; pop rbp ; ret
0x0000000000422c0b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e8ec : add rsp, 0x20 ; pop rbp ; ret
0x0000000000407394 : add rsp, 0x240 ; pop rbp ; ret
0x000000000040a80c : add rsp, 0x250 ; pop rbp ; ret
0x00000000004089c4 : add rsp, 0x2a0 ; pop rbp ; ret
0x0000000000403528 : add rsp, 0x2c0 ; pop rbp ; ret
0x0000000000427276 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000422d5f : add rsp, 0x40 ; pop rbp ; ret
0x000000000042bbd8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000426ccd : add rsp, 0x4f0 ; pop rbp ; ret
0x0000000000408dca : add rsp, 0x50 ; pop rbp ; ret
0x0000000000423c7f : add rsp, 0x60 ; pop rbp ; ret
0x000000000040eb3b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401b24 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004233dc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000420f25 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401fcb : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f0d9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042782d : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000428fde : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040f6e2 : add rsp, 8 ; pop rbp ; ret
0x00000000004013ad : add rsp, 8 ; ret
0x000000000042db4d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040955f : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0cd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401857 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042388b : and byte ptr [rsi + 0x58], ah ; jb 0x4238c2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041a991 : and eax, 0x75b4b9d3 ; ret
0x0000000000408639 : call 0x302648c1
0x000000000040535a : call 0x4015d2
0x00000000004053f2 : call 0x4016f2
0x0000000000423c85 : call 0x423d49
0x0000000000408c1d : call 0x490b1570
0x0000000000408c1c : call 0x490b1571
0x0000000000408c89 : call 0x490b15dc
0x0000000000408c88 : call 0x490b15dd
0x0000000000408d0e : call 0x490b1661
0x0000000000408d0d : call 0x490b1662
0x000000000040a386 : call 0x50326d6
0x0000000000427b7d : call 0xffffffffaca33db1
0x0000000000427b7c : call 0xffffffffaca33db2
0x000000000041e449 : call 0xffffffffe9046d99
0x000000000041e448 : call 0xffffffffe9046d9a
0x0000000000407a77 : call 0xfffffffffef1000e
0x000000000042de49 : call qword ptr [r12 + rbx*8]
0x000000000041fc0e : call qword ptr [rbx]
0x000000000042bc7c : call qword ptr [rcx]
0x000000000041d8d4 : call qword ptr [rdi]
0x00000000004198bb : call qword ptr [rdx]
0x000000000042de4a : call qword ptr [rsp + rbx*8]
0x000000000040187d : call rax
0x000000000041bb3b : call rcx
0x000000000041d514 : call rdi
0x000000000040b015 : call rdx
0x000000000040d6db : call rsp
0x000000000040b014 : cdq ; call rdx
0x000000000040cf2d : clc ; add rsp, 0x140 ; pop rbp ; ret
0x000000000042bbd7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000422fe7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000428569 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040181f : clc ; jne 0x401828 ; pop rbp ; ret
0x000000000040959b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000041fd8f : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410f1d : clc ; ret 0x77a8
0x000000000042f658 : clc ; sbb bh, bh ; jmp rsi
0x0000000000401c77 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004281be : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000428fdd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d75f : cld ; jmp 0x40d7cc
0x000000000040d75e : cld ; jmp 0x40d7cd
0x000000000042eb30 : cld ; mov ebp, edi ; jmp rsp
0x0000000000402c4f : cli ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7dd26fbb], cl ; ret
0x0000000000423890 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042db4c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004227ab : cmc ; ret 0x4f0b
0x000000000042f741 : cmp bh, bh ; call rdx
0x0000000000422941 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004017dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017f0 ; pop rbp ; ret
0x000000000042f761 : cmp edi, edi ; call qword ptr [rdx]
0x000000000041b7e7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000408ebc : dec dword ptr [r15] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409406 : dec dword ptr [rax + 0x29] ; ret 0x148
0x0000000000406162 : dec dword ptr [rax - 0x119a46b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040622a : dec dword ptr [rax - 0x119b46b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000406ec5 : dec dword ptr [rax - 0x2046b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000404fa6 : dec dword ptr [rax - 0x3646b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000041aceb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041a65e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041ae63 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004239bd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042b736 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000404fac : dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004048a4 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403486 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408633 : dec dword ptr [rbx + 0x558ba04d] ; call 0x302648c7
0x000000000042eaeb : dec dword ptr [rbx + rax + 0x2dbc0000] ; std ; jmp rsp
0x00000000004227a6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000408ebd : dec dword ptr [rdi] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408027 : dec dword ptr [rdi] ; test byte ptr [rax + rcx], bh ; add cl, ch ; ret 1
0x0000000000409bf2 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff8], bh ; ret
0x0000000000410bfa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040b8ff : dec dword ptr [rdi] ; test byte ptr [rsi], ah ; or al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004060f5 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000425bf9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b1b9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c1eb : enter 4, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040eef9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f654 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp rsi
0x000000000040519b : fadd qword ptr [rdx] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042eb70 : fcomp st(0), st(3) ; std ; jmp rsp
0x0000000000424db5 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x000000000042ede9 : fdiv st(7), st(0) ; jmp rsp
0x000000000042c108 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404a4e : fmul dword ptr [r8 - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004272c7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000404a4f : fmul dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040a5be : fmul dword ptr [rax - 0x7f] ; ret 0
0x00000000004272c8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000042de4c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000424f3d : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000426557 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x0000000000401c49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042782c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040f6e1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004017f0 : hlt ; pop rbp ; mov edi, 0x630278 ; jmp rax
0x00000000004239bb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040e968 : in al, 0x2d ; ret 0xc226
0x000000000040c3bd : in al, 0x42 ; add byte ptr [rbx - 0x36f43], cl ; jmp qword ptr [rcx]
0x0000000000428921 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000042f75c : in al, 8 ; add byte ptr [rax], al ; nop ; cmp edi, edi ; call qword ptr [rdx]
0x0000000000427275 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427c3c : in al, dx ; jmp 0x427cb9
0x0000000000427c3b : in al, dx ; jmp 0x427cba
0x00000000004051a1 : in al, dx ; pop rbp ; ret
0x000000000040c00f : inc byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000405e8f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000402dbf : inc dword ptr [rcx + 0xf] ; ret
0x000000000042eb2b : inc esp ; add al, 0 ; add ah, bh ; mov ebp, edi ; jmp rsp
0x000000000042eb6b : inc esp ; add eax, 0xdbdc0000 ; std ; jmp rsp
0x000000000040c6fb : insd dword ptr [rdi], dx ; ret 0x58c8
0x00000000004208f7 : int 0x5b
0x000000000040b34d : int 0x80
0x000000000040c62f : int1 ; pop rsp ; ret 0xdf0
0x00000000004017e3 : ja 0x4017ea ; pop rbp ; ret
0x00000000004013a9 : jae 0x4013b5 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042388e : jb 0x4238bf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004017ef : je 0x4017ed ; pop rbp ; mov edi, 0x630278 ; jmp rax
0x00000000004078fd : je 0x4078b7 ; pop rbx ; ret
0x000000000040959a : jge 0x40959d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000419d86 : jge 0x419d0b ; ret 0xffd5
0x000000000041a850 : jge 0x41a830 ; shr cl, cl ; ret 0x3b
0x0000000000401855 : jle 0x401847 ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004014cb : jmp 0x4013c7
0x0000000000404be3 : jmp 0x405482
0x000000000040c0e2 : jmp 0x40c6a9
0x000000000040c560 : jmp 0x40c6ab
0x000000000040ccf7 : jmp 0x40cf9e
0x000000000040d760 : jmp 0x40d7cb
0x000000000041afa0 : jmp 0x41e420
0x0000000000418ea4 : jmp 0x41e421
0x000000000041a271 : jmp 0x41e422
0x0000000000421bcb : jmp 0x422637
0x0000000000421b08 : jmp 0x422639
0x0000000000423c33 : jmp 0x423c98
0x0000000000425d66 : jmp 0x426e29
0x0000000000425b83 : jmp 0x426e2a
0x0000000000426fc0 : jmp 0x426fcb
0x0000000000427c3d : jmp 0x427cb8
0x000000000042ba76 : jmp 0x42bd58
0x00000000004227aa : jmp 0x4f4deaa6
0x000000000040e924 : jmp 0xffffffffb6030fed
0x000000000041dd75 : jmp qword ptr [rax]
0x000000000042f3d3 : jmp qword ptr [rbx]
0x000000000040bc2a : jmp qword ptr [rcx]
0x000000000041ba27 : jmp qword ptr [rdi]
0x0000000000422a3a : jmp qword ptr [rdx]
0x00000000004017f7 : jmp rax
0x000000000041a378 : jmp rbx
0x000000000041adaa : jmp rcx
0x000000000041a3d2 : jmp rdi
0x0000000000401837 : jmp rdx
0x000000000042f65b : jmp rsi
0x000000000041a688 : jmp rsp
0x0000000000401820 : jne 0x401827 ; pop rbp ; ret
0x0000000000407948 : jne 0x407902 ; pop rbx ; ret
0x0000000000408900 : jne 0x4088ba ; pop rbx ; ret
0x0000000000424db6 : jne 0x424e31 ; ret 0x8589
0x0000000000424f3e : jne 0x424fb9 ; ret 0x8589
0x0000000000426558 : jne 0x4265d3 ; ret 0xedb9
0x00000000004267b0 : jne 0x42682b ; ret 0xedb9
0x000000000040c457 : jo 0x40c464 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040eb3e : jo 0x40eb9f ; ret
0x0000000000413c9e : jo 0x413caa ; ret
0x000000000041590e : jo 0x41591a ; ret
0x0000000000418e5d : jo 0x418e69 ; ret
0x0000000000420144 : jo 0x4201a5 ; ret
0x000000000040c64c : jrcxz 0x40c6ac ; ret 0xdf0
0x00000000004074a0 : js 0x4074c9 ; ret
0x00000000004074b0 : js 0x4074d9 ; ret
0x000000000042f8c1 : js 0x42f8c4 ; jmp rcx
0x000000000041a84e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041b94e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040df66 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d5ce : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000420439 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d5cd : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c665 : leave ; pop rsp ; ret 0xdf0
0x00000000004191ae : ljmp ptr [rdi] ; ret 0x23da
0x000000000040c639 : loop 0x40c699 ; ret 0xdf0
0x000000000041c1b5 : loope 0x41c183 ; jmp 0x41e423
0x000000000040605f : loopne 0x406068 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a1ec : loopne 0x40a1f5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040a67d : loopne 0x40a686 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a69f : loopne 0x40a6ac ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040c3bc : loopne 0x40c3ab ; add byte ptr [rbx - 0x36f43], cl ; jmp qword ptr [rcx]
0x000000000040e8eb : loopne 0x40e93b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e8ea : loopne 0x40e93c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410593 : loopne 0x4105e6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041fb3d : loopne 0x41fba3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420f24 : loopne 0x420f77 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004232f3 : loopne 0x4232fc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423c7e : loopne 0x423cce ; add esp, 0x60 ; pop rbp ; ret
0x0000000000423c7d : loopne 0x423ccf ; add esp, 0x60 ; pop rbp ; ret
0x000000000042712f : loopne 0x4270c3 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042712e : loopne 0x4270c4 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427830 : loopne 0x427837 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004281c2 : loopne 0x4281c9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042db8c : loopne 0x42dbdb ; mov esp, ebp ; pop rbp ; ret
0x000000000042db8b : loopne 0x42dbdc ; mov esp, ebp ; pop rbp ; ret
0x000000000042dddc : loopne 0x42de2b ; mov esp, ebp ; pop rbp ; ret
0x000000000042dddb : loopne 0x42de2c ; mov esp, ebp ; pop rbp ; ret
0x0000000000419d7d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000419e57 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000417e05 : mov ah, 0x75 ; ret
0x000000000042f120 : mov al, -0x1a ; std ; call qword ptr [rcx]
0x0000000000420913 : mov al, -0x47 ; ret
0x000000000042b23f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000426159 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401fce : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004053f0 : mov al, 0 ; call 0x4016f4
0x000000000040ce98 : mov al, 0x6e ; ret 0x58c8
0x000000000042c3fd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c0ca : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c32d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040af03 : mov bl, -0x77 ; test dword ptr [rsi + rdi*8 - 0x7bf00001], esi ; ret 0x10
0x00000000004117a5 : mov bl, 0x75 ; ret
0x00000000004072c5 : mov byte ptr [r9 + 0xf], r8b ; xchg eax, edx ; ret 0x8445
0x00000000004072c6 : mov byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8445
0x0000000000401853 : mov byte ptr [rip + 0x22ea7e], 1 ; ret
0x00000000004063d4 : mov ch, 0x38 ; out -2, al ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406396 : mov ch, 0x3c ; out -2, al ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004078fe : mov ch, 0x5b ; ret
0x00000000004195ff : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000040749e : mov cl, -0x58 ; js 0x4074cb ; ret
0x000000000040749d : mov cl, -0x58 ; js 0x4074cc ; ret
0x00000000004074ae : mov cl, -0x58 ; js 0x4074db ; ret
0x00000000004074ad : mov cl, -0x58 ; js 0x4074dc ; ret
0x000000000042d094 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000408ebf : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0d0 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042db4a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042cdc1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040fd19 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f8ef : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427c3a : mov dword ptr [rbp - 0x14], eax ; jmp 0x427cbb
0x000000000040e8e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421bc8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42263a
0x0000000000401c47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c75 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fff6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040959c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000040fb9d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000425d67 : mov eax, 0xb8000010 ; ret
0x000000000040935d : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423afb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427273 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000423cce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e56e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427ab5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fd1c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423c7c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042712d : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042db8a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fb9f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000405354 : mov eax, dword ptr [rbp - 0x78] ; mov rdi, qword ptr [rax] ; call 0x4015d8
0x000000000040f6df : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041fd8d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fb9e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000041c5b8 : mov ebp, 0xe19c53ba ; ret
0x000000000042eb31 : mov ebp, edi ; jmp rsp
0x000000000040187b : mov ebp, esp ; call rax
0x00000000004017e1 : mov ebp, esp ; ja 0x4017ec ; pop rbp ; ret
0x0000000000409bf5 : mov ebx, 0xe9000008 ; ret
0x000000000040f8ec : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401875 : mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x00000000004017f2 : mov edi, 0x630278 ; jmp rax
0x0000000000401832 : mov edi, 0x630278 ; jmp rdx
0x0000000000418e57 : mov edi, 0xb8000055 ; wait ; jo 0x418e6f ; ret
0x0000000000405358 : mov edi, dword ptr [rax] ; call 0x4015d4
0x000000000042de47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042de46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042b9ee : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041961b : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004053ee : mov edx, eax ; mov al, 0 ; call 0x4016f6
0x000000000041a492 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042b9d7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401830 : mov esi, eax ; mov edi, 0x630278 ; jmp rdx
0x00000000004051a0 : mov esp, ebp ; pop rbp ; ret
0x000000000040fff5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ce97 : mov r8b, 0x6e ; ret 0x58c8
0x000000000040935c : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423afa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423ccd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e56d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000423c7b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405353 : mov rax, qword ptr [rbp - 0x78] ; mov rdi, qword ptr [rax] ; call 0x4015d9
0x000000000041fd8c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040187a : mov rbp, rsp ; call rax
0x00000000004017e0 : mov rbp, rsp ; ja 0x4017ed ; pop rbp ; ret
0x0000000000405357 : mov rdi, qword ptr [rax] ; call 0x4015d5
0x00000000004053ed : mov rdx, rax ; mov al, 0 ; call 0x4016f7
0x000000000040182f : mov rsi, rax ; mov edi, 0x630278 ; jmp rdx
0x000000000040519f : mov rsp, rbp ; pop rbp ; ret
0x0000000000423891 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004150f8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000407307 : movabs dword ptr [0x7e80b88445c7ffff], eax ; ret 0xade9
0x000000000040b826 : movabs dword ptr [0xc12da8458b000002], eax ; int 0x80
0x0000000000418345 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000042d093 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000408ebe : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c0cf : movzx eax, al ; pop rbp ; ret
0x000000000042b7e8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000042f760 : nop ; cmp edi, edi ; call qword ptr [rdx]
0x00000000004115e5 : nop ; ret
0x000000000041f9f2 : nop ; ret 0x148
0x000000000041fa06 : nop ; ret 0x2948
0x000000000042de68 : nop dword ptr [rax + rax] ; ret
0x0000000000419d7a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000419e54 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042f8bd : or al, byte ptr [rax] ; add al, ah ; js 0x42f8c8 ; jmp rcx
0x000000000040b00c : or al, byte ptr [rax] ; add byte ptr [rbx + 0x182da845], cl ; cdq ; call rdx
0x000000000040b903 : or al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040b902 : or al, byte ptr es:[rax] ; add cl, ch ; ret 1
0x000000000042f431 : or bh, bh ; call rdi
0x000000000042f3d1 : or bh, bh ; jmp qword ptr [rbx]
0x000000000040f8f0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042f73d : or byte ptr [rax], al ; add al, dl ; cmp bh, bh ; call rdx
0x00000000004211a8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000409bf6 : or byte ptr [rax], al ; add cl, ch ; ret
0x000000000040802b : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000404a52 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040fff4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408dc6 : or eax, 0x48000000 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040fb9b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042f8bc : or r8b, byte ptr [rax] ; add al, ah ; js 0x42f8c9 ; jmp rcx
0x0000000000406166 : out -2, al ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004062fe : out -2, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000406398 : out -2, al ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040634c : out -2, eax ; call rax
0x0000000000405e8d : out -2, eax ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042f121 : out -3, al ; call qword ptr [rcx]
0x000000000041b75b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042c0cc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426d30 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000042c3ff : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420912 : out dx, eax ; mov al, -0x47 ; ret
0x000000000042b9d9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041c845 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040cbbf : outsb dx, byte ptr [rsi] ; ret 0x58c8
0x0000000000411496 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041c890 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000422a31 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042b9dc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042388c : pop ax ; jb 0x4238c1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041d6f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042de5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041fb3f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d6fb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042de5e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d6fd : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042de60 : pop r14 ; pop r15 ; ret
0x000000000040c45c : pop r14 ; pop rbp ; ret
0x000000000041d6ff : pop r15 ; pop rbp ; ret
0x000000000042de62 : pop r15 ; ret
0x000000000042f618 : pop rax ; adc al, -1 ; jmp qword ptr [rbx]
0x000000000042388d : pop rax ; jb 0x4238c0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401852 : pop rbp ; mov byte ptr [rip + 0x22ea7e], 1 ; ret
0x00000000004017f1 : pop rbp ; mov edi, 0x630278 ; jmp rax
0x000000000040182e : pop rbp ; mov rsi, rax ; mov edi, 0x630278 ; jmp rdx
0x000000000042de5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d6fc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042de5f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000419602 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004158d5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041961e : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004017e5 : pop rbp ; ret
0x0000000000406165 : pop rbx ; out -2, al ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000041fb3e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041e835 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c45b : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004078ff : pop rbx ; ret
0x0000000000404519 : pop rbx ; sysenter
0x0000000000419603 : pop rcx ; ret 0x1b2
0x0000000000413cd6 : pop rcx ; ret 0x8589
0x000000000041961f : pop rcx ; ret 0x8b48
0x000000000041b950 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000041d700 : pop rdi ; pop rbp ; ret
0x000000000042de63 : pop rdi ; ret
0x000000000041d6fe : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042de61 : pop rsi ; pop r15 ; ret
0x000000000040c45d : pop rsi ; pop rbp ; ret
0x000000000041d6fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042de5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041fb40 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413cd5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000040c630 : pop rsp ; ret 0xdf0
0x000000000040456d : pop rsp ; sysenter
0x000000000042cf15 : popfq ; ret 0xd284
0x0000000000419600 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041b7ea : push -0x75425eeb ; push rbp ; ret
0x0000000000418348 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000408dcd : push rax ; pop rbp ; ret
0x0000000000408638 : push rbp ; call 0x302648c2
0x000000000040a385 : push rbp ; call 0x50326d7
0x0000000000401874 : push rbp ; mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x000000000041b7ef : push rbp ; ret
0x000000000041b786 : push rbp ; ret 0xd284
0x0000000000419d7f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000419e59 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042b9db : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040b777 : push rdx ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7fd257bb], cl ; ret 0x3634
0x000000000042b245 : pushfq ; ret 0xd284
0x00000000004062a7 : rcr byte ptr [rcx] ; add dword ptr [rax], eax ; pop rbp ; ret
0x0000000000400295 : ret
0x000000000040a5c1 : ret 0
0x000000000040af0c : ret 0x10
0x0000000000409409 : ret 0x148
0x000000000041c954 : ret 0x1a
0x0000000000411bcd : ret 0x1add
0x00000000004034dd : ret 0x1b2
0x00000000004016d2 : ret 0x22ea
0x00000000004014d2 : ret 0x22eb
0x000000000041251a : ret 0x23da
0x000000000041f218 : ret 0x279e
0x0000000000404a55 : ret 0x2948
0x000000000041b954 : ret 0x2a
0x0000000000419d82 : ret 0x2d50
0x000000000040863b : ret 0x2fe5
0x000000000042b53e : ret 0x3040
0x000000000040b3fc : ret 0x3634
0x000000000041a854 : ret 0x3b
0x00000000004072c2 : ret 0x3b48
0x00000000004178b5 : ret 0x3e
0x0000000000402a96 : ret 0x412c
0x000000000041acf1 : ret 0x4802
0x000000000040a389 : ret 0x4804
0x000000000042b9de : ret 0x4815
0x000000000041c846 : ret 0x4861
0x00000000004046ff : ret 0x48f0
0x000000000040a395 : ret 0x48fc
0x0000000000415101 : ret 0x4b
0x0000000000420717 : ret 0x4cc0
0x000000000041d758 : ret 0x4cf0
0x00000000004227ac : ret 0x4f0b
0x000000000040fb4b : ret 0x5589
0x000000000040c6fc : ret 0x58c8
0x000000000041a00a : ret 0x5966
0x0000000000421407 : ret 0x5bc6
0x000000000042db4f : ret 0x61
0x0000000000411266 : ret 0x6a8a
0x0000000000410f1e : ret 0x77a8
0x0000000000412081 : ret 0x7a8a
0x0000000000418cfb : ret 0x7b7f
0x000000000041f6aa : ret 0x8041
0x000000000041f8f2 : ret 0x8141
0x000000000042b739 : ret 0x8148
0x00000000004084f3 : ret 0x8149
0x000000000041ac14 : ret 0x822d
0x0000000000402fc8 : ret 0x8445
0x000000000040235e : ret 0x8589
0x0000000000404faf : ret 0x858a
0x000000000040314f : ret 0x8772
0x0000000000404ccd : ret 0x8840
0x0000000000409c04 : ret 0x8901
0x00000000004263e9 : ret 0x8902
0x0000000000411c93 : ret 0x8940
0x0000000000405f50 : ret 0x8948
0x0000000000429fff : ret 0x894a
0x0000000000411497 : ret 0x8961
0x000000000040e927 : ret 0x89b5
0x0000000000409803 : ret 0x89c8
0x000000000042b5f8 : ret 0x8a44
0x000000000042b4f5 : ret 0x8a4a
0x000000000040a6f7 : ret 0x8ac8
0x00000000004048a7 : ret 0x8b48
0x0000000000405d1f : ret 0x8b4c
0x0000000000419e5c : ret 0xa30b
0x0000000000427b7f : ret 0xac60
0x0000000000407310 : ret 0xade9
0x0000000000403489 : ret 0xb0
0x000000000041b760 : ret 0xb740
0x0000000000407482 : ret 0xb848
0x0000000000419990 : ret 0xb940
0x000000000042b482 : ret 0xb94a
0x000000000040531c : ret 0xbee8
0x000000000041bddc : ret 0xbf48
0x000000000040752f : ret 0xc
0x0000000000401815 : ret 0xc148
0x000000000040e96a : ret 0xc226
0x000000000042dd92 : ret 0xc493
0x000000000042c089 : ret 0xca21
0x000000000042db55 : ret 0xccb2
0x0000000000405e96 : ret 0xd284
0x00000000004245d5 : ret 0xd5f3
0x0000000000429c45 : ret 0xd618
0x0000000000426c86 : ret 0xd709
0x0000000000424bbe : ret 0xdc02
0x000000000040c631 : ret 0xdf0
0x000000000040b6c3 : ret 0xe
0x000000000040a1f3 : ret 0xe280
0x000000000040a2c2 : ret 0xe901
0x000000000041b632 : ret 0xe940
0x000000000041c891 : ret 0xe961
0x00000000004126bd : ret 0xea51
0x0000000000405457 : ret 0xea81
0x000000000042655a : ret 0xedb9
0x000000000041e44c : ret 0xee8
0x0000000000404729 : ret 0xf000
0x0000000000402ac7 : ret 0xf085
0x0000000000404ce2 : ret 0xf180
0x000000000040fb85 : ret 0xf281
0x000000000042bc38 : ret 0xf2e8
0x000000000040473a : ret 0xf400
0x00000000004091e8 : ret 0xf41
0x000000000040b4c3 : ret 0xf589
0x000000000041c3e5 : ret 0xf7f3
0x000000000041ab6e : ret 0xfc75
0x0000000000425f2a : ret 0xfdb5
0x00000000004034f6 : ret 0xff31
0x000000000041c3df : ret 0xffa5
0x000000000041ab68 : ret 0xffc4
0x0000000000419d88 : ret 0xffd5
0x0000000000419e62 : ret 0xffd8
0x000000000041ac1a : ret 0xffd9
0x000000000041a004 : ret 0xffe0
0x0000000000418cf5 : ret 0xfffa
0x000000000040535c : ret 0xffff
0x00000000004052c7 : ret 1
0x0000000000406cc3 : ret 2
0x0000000000406efd : ret 5
0x000000000040b83a : ret 8
0x0000000000407a80 : ret 9
0x000000000042b9bd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004284dc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f0dc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427065 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000042f240 : rol byte ptr [rsi + rdi*8], 1 ; call qword ptr [rdx]
0x000000000042b9bc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040935a : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000423884 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040181c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40182b ; pop rbp ; ret
0x000000000040935b : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408ec0 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040fb9a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004074aa : ror dword ptr [rax - 0x48], -0xd ; mov cl, -0x58 ; js 0x4074df ; ret
0x000000000042b7ee : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040c0a2 : ror dword ptr [rax - 0x7f], cl ; ret
0x0000000000404cab : ror dword ptr [rcx + 0x45c68445], -0x7d ; add cl, ch ; ret
0x00000000004205d0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000425b9a : sahf ; ret 0xd284
0x00000000004034d6 : sar byte ptr [rdx - 0x152e4629], -0x17 ; ret 0x1b2
0x000000000040181e : sar eax, 1 ; jne 0x401829 ; pop rbp ; ret
0x000000000041b951 : sar ebp, -0x17 ; ret 0x2a
0x000000000040181d : sar rax, 1 ; jne 0x40182a ; pop rbp ; ret
0x0000000000420910 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042f659 : sbb bh, bh ; jmp rsi
0x000000000041b851 : sbb cl, ch ; ret
0x00000000004230d3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f960 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000424bbd : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x000000000040c0e0 : shr byte ptr [rcx], cl ; jmp 0x40c6ab
0x000000000041a852 : shr cl, cl ; ret 0x3b
0x000000000041868d : stc ; ret 0x77a8
0x00000000004053f3 : stc ; ret 0xffff
0x000000000042f122 : std ; call qword ptr [rcx]
0x000000000042eaea : std ; dec dword ptr [rbx + rax + 0x2dbc0000] ; std ; jmp rsp
0x000000000042eb2a : std ; inc esp ; add al, 0 ; add ah, bh ; mov ebp, edi ; jmp rsp
0x000000000042eb6a : std ; inc esp ; add eax, 0xdbdc0000 ; std ; jmp rsp
0x000000000042ee9a : std ; jmp rax
0x000000000042eaf2 : std ; jmp rsp
0x000000000041f217 : std ; ret 0x279e
0x000000000042ebb0 : sub al, -2 ; std ; jmp rsp
0x000000000040d8ae : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427c86 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d798 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419d85 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000419d7b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000419e55 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041ac15 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000042388f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042de9d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042de9c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040451a : sysenter
0x0000000000419d80 : test al, -0x7f ; ret 0x2d50
0x0000000000419e5a : test al, -0x7f ; ret 0xa30b
0x000000000042b293 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b6b5 : test al, 0x2d ; ret
0x000000000040b4c1 : test al, 0x2d ; ret 0xf589
0x000000000041ffee : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041c5b6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000422928 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404cae : test al, dh ; add dword ptr [r8], -0x17 ; ret
0x0000000000408029 : test byte ptr [rax + rcx], bh ; add cl, ch ; ret 1
0x000000000042de6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409bf4 : test byte ptr [rbx - 0x16fffff8], bh ; ret
0x0000000000410bfc : test byte ptr [rcx], ch ; ret 0
0x000000000040b901 : test byte ptr [rsi], ah ; or al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000410bf6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040a5ba : test dword ptr [rax - 0x75], 0x8148d875 ; ret 0
0x0000000000422a36 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000426d35 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000041fc0a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000040b833 : test dword ptr [rdi*8 - 0x7bf00001], edi ; ret 8
0x000000000041b62b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041c88a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040af05 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esi ; ret 0x10
0x000000000041834a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041c83f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000404cad : test r8b, r14b ; add dword ptr [r8], -0x17 ; ret
0x000000000041a84f : wait ; jge 0x41a831 ; shr cl, cl ; ret 0x3b
0x000000000041590d : wait ; jo 0x41591b ; ret
0x0000000000418e5c : wait ; jo 0x418e6a ; ret
0x000000000042ed69 : xchg bh, bh ; jmp rsp
0x000000000040cdb8 : xchg byte ptr [rcx + rcx*2 - 0x47], ch ; outsb dx, byte ptr [rsi] ; ret 0x58c8
0x0000000000403149 : xchg dword ptr [rbx - 0x7e0dd6cd], esi ; ret 0x8772
0x000000000042b9d8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040622c : xchg eax, ebp ; out -2, al ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004062fc : xchg eax, ebp ; out -2, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000406164 : xchg eax, ebp ; pop rbx ; out -2, al ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000426c22 : xchg eax, ebp ; ret
0x0000000000402fc7 : xchg eax, ebp ; ret 0x8445
0x0000000000404ccc : xchg eax, ebp ; ret 0x8840
0x0000000000406065 : xchg eax, ebp ; ret 0xd284
0x0000000000411495 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000417d95 : xchg eax, ebx ; ret
0x0000000000417fc5 : xchg eax, ecx ; ret
0x0000000000405e95 : xchg eax, edi ; ret 0xd284
0x0000000000404f3e : xchg eax, edx ; ret
0x0000000000406e5d : xchg eax, edx ; ret 0x8445
0x000000000040a6a5 : xchg eax, edx ; ret 0xd284
0x0000000000421bca : xchg eax, esp ; jmp 0x422638
0x0000000000421b07 : xchg eax, esp ; jmp 0x42263a
0x000000000041c844 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000418115 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041c88f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041f6a9 : xchg eax, esp ; ret 0x8041
0x000000000041b75e : xchg eax, esp ; ret 0xb740
0x00000000004060f7 : xchg eax, esp ; ret 0xd284
0x000000000040a1f2 : xchg eax, esp ; ret 0xe280
0x0000000000421bc9 : xchg eax, r12d ; jmp 0x422639
0x000000000041b759 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000425f28 : xor al, ch ; ret 0xfdb5
0x000000000040fff7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c7b9 : xor byte ptr [rax + rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret
0x000000000040fff8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
