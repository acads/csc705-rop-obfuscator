0x0000000000424620 : adc byte ptr [rax - 1], ah ; call rdx
0x00000000004122de : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000411c51 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000423ba4 : adc dl, ah ; std ; jmp rax
0x000000000041a37b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412ddb : adc eax, 0x558abda1 ; ret
0x00000000004163b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042428b : add ah, bl ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rbx]
0x0000000000420e4a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004243ef : add al, ah ; xor al, 0xffffffffffffffff ; call rdx
0x00000000004240fd : add al, byte ptr [rax] ; add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rdx]
0x0000000000404fc9 : add al, ch ; int1 ; ret 0xffff
0x0000000000404f11 : add al, ch ; leave ; ret
0x000000000041cc95 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041a054 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000403f6c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000403a2c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x00000000004040cd : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000412c19 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004232df : add bl, dh ; ret
0x0000000000422fb2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000423214 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041737b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047cb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042461e : add byte ptr [rax], al ; adc byte ptr [rax - 1], ah ; call rdx
0x0000000000423ba2 : add byte ptr [rax], al ; adc dl, ah ; std ; jmp rax
0x0000000000404fc7 : add byte ptr [rax], al ; add al, ch ; int1 ; ret 0xffff
0x000000000041cc93 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041a052 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000403f6a : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rcx]
0x00000000004232dd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004047c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004232db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400728 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040072a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004232dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040072c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040475e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000415e22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000418813 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041b71c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041b179 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040401a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000422fb3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000423215 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000403e47 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000422381 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405f9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405f72 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000406084 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004203c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000419f4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004184f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004240fe : add byte ptr [rax], al ; add byte ptr [rsi + rdi*8], ch ; call qword ptr [rdx]
0x00000000004240fa : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rdx]
0x00000000004163bb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415a40 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a37d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d0f8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405b69 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040126b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404fc8 : add byte ptr [rax], al ; call 0x4012c4
0x0000000000403eb7 : add byte ptr [rax], al ; call 0x4012c8
0x00000000004242ea : add byte ptr [rax], al ; cmp al, 4 ; add byte ptr [rax], al ; push rax ; xor edi, edi ; call rdi
0x0000000000424536 : add byte ptr [rax], al ; cmp byte ptr [rax - 1], al ; jmp rsi
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x0000000000422ff8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047ca : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042463a : add byte ptr [rax], al ; mov word ptr [rdi], es ; add byte ptr [rax], al ; shl byte ptr [rax - 1], 1 ; call qword ptr [rdx]
0x0000000000423fba : add byte ptr [rax], al ; or al, 1 ; add byte ptr [rax], al ; or sil, dil ; call qword ptr [rcx]
0x0000000000423fbe : add byte ptr [rax], al ; or sil, dil ; call qword ptr [rcx]
0x0000000000401a4a : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415e23 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004242ee : add byte ptr [rax], al ; push rax ; xor edi, edi ; call rdi
0x00000000004232de : add byte ptr [rax], al ; ret
0x000000000040072e : add byte ptr [rax], al ; ret 1
0x000000000042463e : add byte ptr [rax], al ; shl byte ptr [rax - 1], 1 ; call qword ptr [rdx]
0x00000000004240ff : add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rdx]
0x0000000000424532 : add byte ptr [rax], al ; test byte ptr [rsi], al ; add byte ptr [rax], al ; cmp byte ptr [rax - 1], al ; jmp rsi
0x000000000042428f : add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rbx]
0x0000000000423ba3 : add byte ptr [rax], dl ; loop 0x423ba8 ; jmp rax
0x0000000000404760 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000415e24 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402723 : add byte ptr [rbx - 0x1634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418815 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004187ca : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000404211 : add byte ptr [rbx - 0x3334b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041b71e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004020f4 : add byte ptr [rbx - 0x5ad24fbb], cl ; pushfq ; push rax ; ret 0x8589
0x00000000004020a9 : add byte ptr [rbx - 0x5bd24fbb], cl ; pushfq ; push rax ; ret 0x8589
0x0000000000422ff9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041b17b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040401c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000423fbb : add byte ptr [rcx + rax], cl ; add byte ptr [rax], al ; or sil, dil ; call qword ptr [rcx]
0x000000000041a0be : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x0000000000422fb5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000423217 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000403e49 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000422383 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405fa0 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405f74 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000406086 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004203c7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000419f4c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004184f7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004240fb : add byte ptr [rdx + rax], cl ; add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rdx]
0x0000000000424100 : add byte ptr [rsi + rdi*8], ch ; call qword ptr [rdx]
0x00000000004242eb : add byte ptr [rsp + rax], bh ; add byte ptr [rax], al ; push rax ; xor edi, edi ; call rdi
0x0000000000412d4c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000401ee8 : add cl, ch ; ret
0x0000000000422502 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000421354 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042153e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x223bbe ; add ebx, esi ; ret
0x000000000040419b : add eax, 0x2b80000 ; ret 0xb93c
0x000000000042428d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rbx]
0x0000000000423ba1 : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; loop 0x423baa ; jmp rax
0x000000000041cbc4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x0000000000401abb : add esp, 0x10 ; pop rbp ; ret
0x000000000041a0bc : add esp, 0x100 ; pop rbp ; ret
0x0000000000402797 : add esp, 0x180 ; pop rbp ; ret
0x000000000041a22c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040591d : add esp, 0x20 ; pop rbp ; ret
0x000000000041a380 : add esp, 0x40 ; pop rbp ; ret
0x0000000000421049 : add esp, 0x440 ; pop rbp ; ret
0x00000000004055a2 : add esp, 0x50 ; pop rbp ; ret
0x000000000041b2a0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405b6c : add esp, 0x70 ; pop rbp ; ret
0x0000000000401a46 : add esp, 0x80 ; pop rbp ; ret
0x000000000041a9fd : add esp, 0x90 ; pop rbp ; ret
0x0000000000418516 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041631b : add esp, 0xb0 ; pop rbp ; ret
0x00000000004066ca : add esp, 0xd0 ; pop rbp ; ret
0x000000000041b96e : add esp, 0xe0 ; pop rbp ; ret
0x000000000040613e : add esp, 0xf0 ; pop rbp ; ret
0x0000000000406cd3 : add esp, 8 ; pop rbp ; ret
0x000000000040126e : add esp, 8 ; ret
0x00000000004240fc : add r8b, byte ptr [rax] ; add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rdx]
0x000000000040419a : add rax, 0x2b80000 ; ret 0xb93c
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x0000000000401aba : add rsp, 0x10 ; pop rbp ; ret
0x000000000041a0bb : add rsp, 0x100 ; pop rbp ; ret
0x0000000000402796 : add rsp, 0x180 ; pop rbp ; ret
0x000000000041a22b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040591c : add rsp, 0x20 ; pop rbp ; ret
0x000000000041a37f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000421048 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004055a1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041b29f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405b6b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401a45 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041a9fc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000418515 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041631a : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004066c9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041b96d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040613d : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000406cd2 : add rsp, 8 ; pop rbp ; ret
0x000000000040126d : add rsp, 8 ; ret
0x0000000000422fbd : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000421353 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042153d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016d7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041aeab : and byte ptr [rsi + 0x58], ah ; jb 0x41aee2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000405016 : and eax, 0x6251f8 ; call 0x4012e7
0x0000000000411f81 : and eax, 0x75b4b9d3 ; ret
0x0000000000404fca : call 0x4012c2
0x0000000000403eb9 : call 0x4012c6
0x000000000040501b : call 0x4012e2
0x000000000041b2a5 : call 0x41b369
0x000000000041cfed : call 0xffffffffaca29221
0x000000000041cfec : call 0xffffffffaca29222
0x0000000000415a39 : call 0xffffffffe903e389
0x0000000000415a38 : call 0xffffffffe903e38a
0x00000000004232b9 : call qword ptr [r12 + rbx*8]
0x00000000004171fe : call qword ptr [rbx]
0x0000000000403f72 : call qword ptr [rcx]
0x0000000000414ec4 : call qword ptr [rdi]
0x0000000000410eab : call qword ptr [rdx]
0x00000000004232ba : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x000000000041312b : call rcx
0x0000000000414b04 : call rdi
0x0000000000414335 : call rdx
0x0000000000403a32 : call rsp
0x0000000000421047 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000041a607 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041d9d9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x000000000041737f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040850d : clc ; ret 0x77a8
0x0000000000402795 : cld ; add rsp, 0x180 ; pop rbp ; ret
0x000000000041d62e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041e44d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040478f : cld ; jmp 0x4047fc
0x000000000040478e : cld ; jmp 0x4047fd
0x000000000041aeb0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000422fbc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000419dcb : cmc ; ret 0x4f0b
0x00000000004242ec : cmp al, 4 ; add byte ptr [rax], al ; push rax ; xor edi, edi ; call rdi
0x0000000000424538 : cmp byte ptr [rax - 1], al ; jmp rsi
0x0000000000419f61 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x00000000004244d9 : cmp edi, edi ; jmp qword ptr [rbx]
0x0000000000412dd7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004016d6 : cmp esp, dword ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004122db : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000411c4e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000412453 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041afdd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000420ba6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402729 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419dc6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004081ea : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041c9be : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004209d3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000405f9c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000420629 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004064e9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041c9a0 : fbld dword ptr [rcx] ; ret 0x941
0x000000000041c97f : fild word ptr [rcx - 0x77] ; ret
0x0000000000421578 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041b407 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000041b408 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004232bc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ab9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b96c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000406cd1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x625258 ; jmp rax
0x000000000041afdb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000405998 : in al, 0x2d ; ret 0xc226
0x000000000041dd91 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041d0ac : in al, dx ; jmp 0x41d129
0x000000000041d0ab : in al, dx ; jmp 0x41d12a
0x00000000004047ce : in al, dx ; pop rbp ; ret
0x0000000000402423 : inc dword ptr [rcx + 0xf] ; ret
0x0000000000423b9f : inc eax ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; loop 0x423bac ; jmp rax
0x0000000000417ee7 : int 0x5b
0x0000000000404fcb : int1 ; ret 0xffff
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000041aeae : jb 0x41aedf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x625258 ; jmp rax
0x0000000000411376 : jge 0x4112fb ; ret 0xffd5
0x0000000000411e40 : jge 0x411e20 ; shr cl, cl ; ret 0x3b
0x000000000040140b : jmp 0x401287
0x00000000004024a7 : jmp 0x4027f2
0x0000000000404790 : jmp 0x4047fb
0x0000000000404ed8 : jmp 0x40502e
0x0000000000412590 : jmp 0x415a10
0x0000000000410494 : jmp 0x415a11
0x0000000000411861 : jmp 0x415a12
0x00000000004191eb : jmp 0x419c57
0x0000000000419128 : jmp 0x419c59
0x000000000041b253 : jmp 0x41b2b8
0x000000000041d0ad : jmp 0x41d128
0x0000000000420ee6 : jmp 0x4211c8
0x0000000000419dca : jmp 0x4f4d60c6
0x0000000000405954 : jmp 0xffffffffb602801d
0x000000000041c76f : jmp 0xffffffffc405fe36
0x0000000000415365 : jmp qword ptr [rax]
0x0000000000424293 : jmp qword ptr [rbx]
0x0000000000407162 : jmp qword ptr [rcx]
0x0000000000413017 : jmp qword ptr [rdi]
0x000000000041a05a : jmp qword ptr [rdx]
0x0000000000401677 : jmp rax
0x000000000040454e : jmp rbx
0x000000000041239a : jmp rcx
0x00000000004119c2 : jmp rdi
0x00000000004016b7 : jmp rdx
0x000000000042453b : jmp rsi
0x00000000004040d3 : jmp rsp
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x0000000000405b6e : jo 0x405bcf ; ret
0x000000000040b28e : jo 0x40b29a ; ret
0x000000000040cefe : jo 0x40cf0a ; ret
0x000000000041044d : jo 0x410459 ; ret
0x0000000000417734 : jo 0x417795 ; ret
0x0000000000411e3e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000412f3e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000404f96 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407b85 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000417a29 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407b84 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404f13 : leave ; ret
0x0000000000404581 : ljmp ptr [rcx] ; ret 0x8b48
0x000000000041079e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000423ba5 : loop 0x423ba6 ; jmp rax
0x00000000004137a5 : loope 0x413773 ; jmp 0x415a13
0x0000000000404459 : loopne 0x4044bf ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040591b : loopne 0x40596b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040591a : loopne 0x40596c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407b83 : loopne 0x407bd6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041712d : loopne 0x417193 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418514 : loopne 0x418567 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041a913 : loopne 0x41a91c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041b29e : loopne 0x41b2ee ; add esp, 0x60 ; pop rbp ; ret
0x000000000041b29d : loopne 0x41b2ef ; add esp, 0x60 ; pop rbp ; ret
0x000000000041b970 : loopne 0x41b977 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d632 : loopne 0x41d639 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422ffc : loopne 0x42304b ; mov esp, ebp ; pop rbp ; ret
0x0000000000422ffb : loopne 0x42304c ; mov esp, ebp ; pop rbp ; ret
0x000000000042324c : loopne 0x42329b ; mov esp, ebp ; pop rbp ; ret
0x000000000042324b : loopne 0x42329c ; mov esp, ebp ; pop rbp ; ret
0x000000000041136d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411447 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040f3f5 : mov ah, 0x75 ; ret
0x0000000000417f03 : mov al, -0x47 ; ret
0x00000000004206af : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041631d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004020ac : mov al, 0x2d ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; push rax ; ret 0x8589
0x00000000004020f7 : mov al, 0x2d ; movsd dword ptr [rdi], dword ptr [rsi] ; pushfq ; push rax ; ret 0x8589
0x0000000000401f4e : mov al, 0x2d ; sbb al, -0x19 ; ret
0x000000000042186d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042153a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042179d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408d95 : mov bl, 0x75 ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x223bbe], 1 ; ret
0x0000000000410bef : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000422504 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000421356 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421540 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000422fba : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000422231 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000407309 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406edf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d0aa : mov dword ptr [rbp - 0x14], eax ; jmp 0x41d12b
0x0000000000405919 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004191e8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x419c5a
0x0000000000401ab7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004075e6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040718d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000406a09 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b11b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b2ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040559e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041cf25 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040730c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041b29c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422ffa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040718f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000406ccf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041737d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040718e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000403a29 : mov ebp, 0xc700000c ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x0000000000413ba8 : mov ebp, 0xe19c53ba ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x0000000000406edc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x625258 ; jmp rax
0x00000000004016b2 : mov edi, 0x625258 ; jmp rdx
0x0000000000410447 : mov edi, 0xb8000055 ; wait ; jo 0x41045f ; ret
0x0000000000405014 : mov edi, dword ptr [0x6251f8] ; call 0x4012e9
0x00000000004232b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004232b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000420e5e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000410c0b : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004016d5 : mov esi, 0x100223b ; ret
0x0000000000411a82 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000420e47 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004016b0 : mov esi, eax ; mov edi, 0x625258 ; jmp rdx
0x0000000000403b2a : mov esp, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x00000000004047cd : mov esp, ebp ; pop rbp ; ret
0x00000000004075e5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004020ab : mov r8b, 0x2d ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; push rax ; ret 0x8589
0x00000000004020f6 : mov r8b, 0x2d ; movsd dword ptr [rdi], dword ptr [rsi] ; pushfq ; push rax ; ret 0x8589
0x0000000000401f4d : mov r8b, 0x2d ; sbb al, -0x19 ; ret
0x0000000000406a08 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b11a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b2ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040559d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b29b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041737c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x00000000004016af : mov rsi, rax ; mov edi, 0x625258 ; jmp rdx
0x00000000004047cc : mov rsp, rbp ; pop rbp ; ret
0x000000000041aeb1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042463c : mov word ptr [rdi], es ; add byte ptr [rax], al ; shl byte ptr [rax - 1], 1 ; call qword ptr [rdx]
0x0000000000403e42 : movabs al, byte ptr [0x29000000012d118b] ; ret 0x8b48
0x000000000040457a : movabs al, byte ptr [0x29ffffffff2d118b] ; ret 0x8b48
0x000000000041c611 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000040c6e8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000404fc3 : movabs dword ptr [0xf1e80000005de92e], eax ; ret 0xffff
0x00000000004020ae : movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; push rax ; ret 0x8589
0x000000000040f935 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000402618 : movsd dword ptr [rdi], dword ptr [rsi] ; pushfq ; push rax ; ret 0x5ab9
0x00000000004027da : movsd dword ptr [rdi], dword ptr [rsi] ; pushfq ; push rax ; ret 0x7e9
0x00000000004020f9 : movsd dword ptr [rdi], dword ptr [rsi] ; pushfq ; push rax ; ret 0x8589
0x0000000000422503 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000421355 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042153f : movzx eax, al ; pop rbp ; ret
0x0000000000420c58 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000408bd5 : nop ; ret
0x0000000000416fe2 : nop ; ret 0x148
0x0000000000416ff6 : nop ; ret 0x2948
0x00000000004232d8 : nop dword ptr [rax + rax] ; ret
0x0000000000403a2a : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000041136a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411444 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000423fbc : or al, 1 ; add byte ptr [rax], al ; or sil, dil ; call qword ptr [rcx]
0x000000000041ccd5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000406ee0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004187c8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000423fc1 : or dh, bh ; call qword ptr [rcx]
0x000000000041ccd4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000412456 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004075e4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403b2b : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000040718b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000423fc0 : or sil, dil ; call qword ptr [rcx]
0x0000000000412d4b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042153c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042186f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417f02 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000420e49 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000413e35 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000408a86 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000413e80 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041a051 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000420e4c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041aeac : pop ax ; jb 0x41aee1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000414ce9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004232cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040445b : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414ceb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004232ce : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040445d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004232d0 : pop r14 ; pop r15 ; ret
0x0000000000407b89 : pop r14 ; pop rbp ; ret
0x000000000040445f : pop r15 ; pop rbp ; ret
0x00000000004232d2 : pop r15 ; ret
0x000000000041aead : pop rax ; jb 0x41aee0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000404fc6 : pop rbp ; add byte ptr [rax], al ; add al, ch ; int1 ; ret 0xffff
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x223bbe], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x625258 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x625258 ; jmp rdx
0x00000000004232cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414cec : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004232cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000410bf2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040cec5 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000410c0e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401665 : pop rbp ; ret
0x000000000040445a : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415e25 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407b88 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004187d0 : pop rbx ; ret
0x0000000000410bf3 : pop rcx ; ret 0x1b2
0x000000000040b2c6 : pop rcx ; ret 0x8589
0x0000000000410c0f : pop rcx ; ret 0x8b48
0x0000000000412f40 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000404460 : pop rdi ; pop rbp ; ret
0x00000000004232d3 : pop rdi ; ret
0x000000000040445e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004232d1 : pop rsi ; pop r15 ; ret
0x0000000000407b8a : pop rsi ; pop rbp ; ret
0x0000000000414cea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004232cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040445c : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b2c5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000422385 : popfq ; ret 0xd284
0x000000000040241f : popfq ; sar dh, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000410bf0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000412dda : push -0x75425eeb ; push rbp ; ret
0x000000000040f938 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000423c57 : push qword ptr [rax + 0x60000006] ; sub bh, bh ; call rax
0x00000000004055a4 : push rax ; pop rbp ; ret
0x000000000040261a : push rax ; ret 0x5ab9
0x00000000004027dc : push rax ; ret 0x7e9
0x00000000004020b0 : push rax ; ret 0x8589
0x00000000004242f0 : push rax ; xor edi, edi ; call rdi
0x00000000004016f4 : push rbp ; mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x0000000000412ddf : push rbp ; ret
0x0000000000412d76 : push rbp ; ret 0xd284
0x000000000041136f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411449 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000420e4b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000402619 : pushfq ; push rax ; ret 0x5ab9
0x00000000004027db : pushfq ; push rax ; ret 0x7e9
0x00000000004020af : pushfq ; push rax ; ret 0x8589
0x0000000000405fa2 : pushfq ; ret 0xd284
0x0000000000401271 : ret
0x00000000004081ee : ret 0
0x0000000000416fe3 : ret 0x148
0x0000000000413f44 : ret 0x1a
0x00000000004091bd : ret 0x1add
0x0000000000402f45 : ret 0x1ae6
0x0000000000410bf5 : ret 0x1b2
0x0000000000401612 : ret 0x223b
0x0000000000401412 : ret 0x223c
0x00000000004210a8 : ret 0x22e8
0x0000000000409b0a : ret 0x23da
0x0000000000416808 : ret 0x279e
0x0000000000412459 : ret 0x2948
0x0000000000412f44 : ret 0x2a
0x0000000000411372 : ret 0x2d50
0x00000000004209ae : ret 0x3040
0x0000000000411e44 : ret 0x3b
0x000000000040eea5 : ret 0x3e
0x00000000004122e1 : ret 0x4802
0x0000000000420e4e : ret 0x4815
0x0000000000413e36 : ret 0x4861
0x000000000040390e : ret 0x48f0
0x000000000040c6f1 : ret 0x4b
0x0000000000417d07 : ret 0x4cc0
0x00000000004044c1 : ret 0x4cf0
0x0000000000419dcc : ret 0x4f0b
0x000000000040713b : ret 0x5589
0x00000000004115fa : ret 0x5966
0x000000000040261b : ret 0x5ab9
0x0000000000418a27 : ret 0x5bc6
0x0000000000422fbf : ret 0x61
0x0000000000408856 : ret 0x6a8a
0x000000000040850e : ret 0x77a8
0x0000000000409671 : ret 0x7a8a
0x00000000004102eb : ret 0x7b7f
0x00000000004027dd : ret 0x7e9
0x0000000000416c9a : ret 0x8041
0x0000000000416ee2 : ret 0x8141
0x0000000000420ba9 : ret 0x8148
0x0000000000412204 : ret 0x822d
0x0000000000404020 : ret 0x8445
0x00000000004020b1 : ret 0x8589
0x0000000000402e13 : ret 0x893c
0x0000000000409283 : ret 0x8940
0x000000000040557b : ret 0x8948
0x000000000041f46f : ret 0x894a
0x0000000000408a87 : ret 0x8961
0x0000000000405957 : ret 0x89b5
0x0000000000420a68 : ret 0x8a44
0x0000000000420965 : ret 0x8a4a
0x0000000000403ac4 : ret 0x8b48
0x000000000041c9a2 : ret 0x941
0x000000000041144c : ret 0xa30b
0x000000000041cfef : ret 0xac60
0x000000000040272c : ret 0xb0
0x0000000000412d50 : ret 0xb740
0x000000000041aea7 : ret 0xb848
0x00000000004041a1 : ret 0xb93c
0x0000000000410f80 : ret 0xb940
0x00000000004208f2 : ret 0xb94a
0x00000000004133cc : ret 0xbf48
0x0000000000401695 : ret 0xc148
0x000000000040599a : ret 0xc226
0x0000000000423202 : ret 0xc493
0x00000000004214f9 : ret 0xca21
0x0000000000422fc5 : ret 0xccb2
0x0000000000405f77 : ret 0xd284
0x000000000041f0b5 : ret 0xd618
0x000000000040393b : ret 0xe000
0x00000000004224ab : ret 0xe280
0x0000000000412c22 : ret 0xe940
0x0000000000413e81 : ret 0xe961
0x0000000000409cad : ret 0xea51
0x0000000000422fb7 : ret 0xea81
0x0000000000415a3c : ret 0xee8
0x0000000000407175 : ret 0xf281
0x0000000000411a87 : ret 0xf41
0x000000000040407e : ret 0xf5bf
0x00000000004139d5 : ret 0xf7f3
0x000000000041215e : ret 0xfc75
0x000000000041d50a : ret 0xfe3e
0x00000000004197da : ret 0xfe7b
0x00000000004139cf : ret 0xffa5
0x0000000000412158 : ret 0xffc4
0x0000000000411378 : ret 0xffd5
0x0000000000411452 : ret 0xffd8
0x000000000041220a : ret 0xffd9
0x00000000004115f4 : ret 0xffe0
0x00000000004102e5 : ret 0xfffa
0x0000000000404fcc : ret 0xffff
0x0000000000400730 : ret 1
0x0000000000405da1 : ret 2
0x000000000040200b : ret 4
0x000000000041c61a : ret 6
0x0000000000415144 : ret 8
0x0000000000420e2d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041d94c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004066cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423ba0 : rol byte ptr [rbx], 0 ; add byte ptr [rax], dl ; loop 0x423bab ; jmp rax
0x0000000000420e2c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000041aea4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x0000000000421357 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040718a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000420c5e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000417bc0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000405f76 : sahf ; ret 0xd284
0x0000000000402420 : sar dh, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x0000000000412f41 : sar ebp, -0x17 ; ret 0x2a
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x0000000000401f50 : sbb al, -0x19 ; ret
0x0000000000417f00 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000404548 : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rbx
0x0000000000412e41 : sbb cl, ch ; ret
0x000000000041a6f3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416f50 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000424640 : shl byte ptr [rax - 1], 1 ; call qword ptr [rdx]
0x0000000000411e42 : shr cl, cl ; ret 0x3b
0x000000000040fc7d : stc ; ret 0x77a8
0x0000000000423b9e : std ; inc eax ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; loop 0x423bad ; jmp rax
0x0000000000423ba6 : std ; jmp rax
0x0000000000416807 : std ; ret 0x279e
0x0000000000424101 : sub al, -2 ; call qword ptr [rdx]
0x00000000004048de : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423c5d : sub bh, bh ; call rax
0x000000000041d0f6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004047c8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411375 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041136b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000411445 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000412205 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041aeaf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042330d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042330c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000411370 : test al, -0x7f ; ret 0x2d50
0x000000000041144a : test al, -0x7f ; ret 0xa30b
0x0000000000420703 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004175de : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000413ba6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000419f48 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004232da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004081ec : test byte ptr [rcx], ch ; ret 0
0x0000000000424534 : test byte ptr [rsi], al ; add byte ptr [rax], al ; cmp byte ptr [rax - 1], al ; jmp rsi
0x00000000004081e6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000041ccd7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000041cc97 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000041cc12 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000041a056 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000403f6e : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000403a2e : test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000040454a : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rbx
0x00000000004040cf : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004171fa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000412c1b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000413e7a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040f93a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000413e2f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000411e3f : wait ; jge 0x411e21 ; shr cl, cl ; ret 0x3b
0x000000000040cefd : wait ; jo 0x40cf0b ; ret
0x000000000041044c : wait ; jo 0x41045a ; ret
0x0000000000420e48 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040401f : xchg eax, ebp ; ret 0x8445
0x0000000000406088 : xchg eax, ebp ; ret 0xd284
0x0000000000408a85 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040f385 : xchg eax, ebx ; ret
0x000000000040f5b5 : xchg eax, ecx ; ret
0x00000000004203c9 : xchg eax, edi ; ret 0xd284
0x0000000000408e05 : xchg eax, edx ; ret
0x0000000000416caf : xchg eax, edx ; ret 0x8445
0x0000000000419f4e : xchg eax, edx ; ret 0xd284
0x0000000000401d2f : xchg eax, esp ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004191ea : xchg eax, esp ; jmp 0x419c58
0x0000000000419127 : xchg eax, esp ; jmp 0x419c5a
0x0000000000413e34 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040f705 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000413e7f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041c9c0 : xchg eax, esp ; ret
0x0000000000416c99 : xchg eax, esp ; ret 0x8041
0x0000000000412d4e : xchg eax, esp ; ret 0xb740
0x00000000004184f9 : xchg eax, esp ; ret 0xd284
0x00000000004191e9 : xchg eax, r12d ; jmp 0x419c59
0x00000000004243f1 : xor al, 0xffffffffffffffff ; call rdx
0x0000000000412d49 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000424291 : xor bh, bh ; jmp qword ptr [rbx]
0x00000000004075e7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004075e8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004242f1 : xor edi, edi ; call rdi
