0x0000000000431f64 : adc bh, dh ; std ; jmp qword ptr [rax]
0x0000000000432820 : adc byte ptr [rdi + rdi*8], bl ; call rdi
0x0000000000431ed4 : adc byte ptr [rsi - 3], ch ; jmp rax
0x0000000000412f68 : adc ch, byte ptr [rip - 0x76b72d43] ; ret
0x000000000041f2ce : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000412af4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000412b09 : adc cl, byte ptr [rax - 0x7d] ; ret 0x48f8
0x0000000000407030 : adc cl, byte ptr [rax - 0x7f] ; ret 1
0x0000000000408108 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042733b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041fdcb : adc eax, 0x558abda1 ; ret
0x0000000000407107 : adc eax, 0x6cb80000 ; call rsi
0x00000000004233a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b3e : adc eax, dword ptr [rax] ; add byte ptr [rbx + 0x662d9845], cl ; ret
0x0000000000412f67 : adc edx, dword ptr [rdx] ; sub eax, 0x8948d2bd ; ret
0x0000000000412929 : adc edx, ebx ; test byte ptr [rbp + 9], cl ; ret 0x8148
0x0000000000412916 : adc edx, ebx ; test byte ptr [rcx - 0x77], cl ; ror byte ptr [rbp + 0x31], cl ; ret 0x94c
0x0000000000431f54 : add ah, -3 ; jmp rax
0x0000000000431ed1 : add al, 0 ; add byte ptr [rax], dl ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x000000000042e6ba : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000432a44 : add al, 8 ; add byte ptr [rax], al ; call 0xffffffffe743297e
0x0000000000431ee3 : add al, ah ; jnp 0x431ee8 ; jmp qword ptr [rax]
0x0000000000431f13 : add al, ah ; test al, -3 ; jmp rax
0x00000000004327bf : add al, al ; sbb bh, bh ; jmp qword ptr [rbx]
0x00000000004324c5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000409353 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6fd23bbb], cl ; hlt ; ret 0x89fc
0x00000000004325a7 : add al, ch ; out dx, eax ; std ; call rcx
0x0000000000432a47 : add al, ch ; sub bh, bh ; jmp rsi
0x000000000040434c : add bh, al ; les r9d, ptr [r11] ; out dx, al ; ret
0x000000000040b938 : add bh, al ; mov r8b, -0x25 ; or esp, esp ; ret 0xc1e9
0x000000000042b5d2 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000427014 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000406ea8 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x0000000000407baf : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000041fc09 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000430e8f : add bl, dh ; ret
0x0000000000430b62 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000430dc4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000043225b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x0000000000432a43 : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; call 0xffffffffe743297f
0x0000000000431f23 : add byte ptr [rax - 0x4e], al ; std ; jmp qword ptr [rax]
0x00000000004323e7 : add byte ptr [rax - 0x61], cl ; std ; call qword ptr [rax]
0x000000000042436b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409997 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043225f : add byte ptr [rax - 0xe], al ; cld ; jmp qword ptr [rax]
0x0000000000408173 : add byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000431f62 : add byte ptr [rax], al ; adc bh, dh ; std ; jmp qword ptr [rax]
0x000000000043281e : add byte ptr [rax], al ; adc byte ptr [rdi + rdi*8], bl ; call rdi
0x0000000000431ed2 : add byte ptr [rax], al ; adc byte ptr [rsi - 3], ch ; jmp rax
0x0000000000431f52 : add byte ptr [rax], al ; add ah, -3 ; jmp rax
0x0000000000432a42 : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; call 0xffffffffe7432980
0x0000000000427012 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000430e8d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000409995 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043225d : add byte ptr [rax], al ; add byte ptr [rax - 0xe], al ; cld ; jmp qword ptr [rax]
0x0000000000430e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040417b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000404a6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d12e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000422e12 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402b89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672d9845], cl ; ret
0x000000000040346c : add byte ptr [rax], al ; add byte ptr [rbx + 0xb2d9845], cl ; out dx, al ; ret
0x00000000004257d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004288dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000409191 : add byte ptr [rax], al ; add byte ptr [rbx - 0x70d23bbb], cl ; hlt ; ret 0x89fc
0x0000000000428139 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040b76b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407300 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040b88c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000430b63 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000430dc5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426f80 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042ff31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042df21 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f048 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040417d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b446 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000410292 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004048c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432e69 : add byte ptr [rax], al ; add byte ptr [rsp + rcx], ch ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040c684 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004325a2 : add byte ptr [rax], al ; add eax, dword ptr fs:[rax] ; add al, ch ; out dx, eax ; std ; call rcx
0x00000000004233ab : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422a30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042733d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402030 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e539 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040148b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040c118 : add byte ptr [rax], al ; call 0x428324
0x00000000004325a6 : add byte ptr [rax], al ; call 0xffffffffd24323a1
0x0000000000432a46 : add byte ptr [rax], al ; call 0xffffffffe743297c
0x000000000043225e : add byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x00000000004327ba : add byte ptr [rax], al ; jl 0x4327cc ; add byte ptr [rax], al ; rcr byte ptr [rdx], -1 ; jmp qword ptr [rbx]
0x00000000004015e9 : add byte ptr [rax], al ; jmp 0x4014a9
0x000000000040c680 : add byte ptr [rax], al ; jmp 0x40c68f
0x00000000004323e6 : add byte ptr [rax], al ; lahf ; std ; call qword ptr [rax]
0x0000000000431f12 : add byte ptr [rax], al ; loopne 0x431ec3 ; std ; jmp rax
0x0000000000431ee2 : add byte ptr [rax], al ; loopne 0x431f66 ; std ; jmp qword ptr [rax]
0x0000000000431ea2 : add byte ptr [rax], al ; mov al, 0 ; std ; jmp qword ptr [rax]
0x0000000000431f22 : add byte ptr [rax], al ; mov dl, -3 ; jmp qword ptr [rax]
0x0000000000430ba8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c869 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000409996 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004323e2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x61], cl ; std ; call qword ptr [rax]
0x0000000000432e6e : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000401d98 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422e13 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043262e : add byte ptr [rax], al ; rcl byte ptr [rsi], -2 ; call qword ptr [rdx]
0x00000000004327be : add byte ptr [rax], al ; rcr byte ptr [rdx], -1 ; jmp qword ptr [rbx]
0x0000000000430e8e : add byte ptr [rax], al ; ret
0x000000000043225a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x000000000043205a : add byte ptr [rax], al ; shr byte ptr [rdi], -1 ; jmp qword ptr [rax]
0x0000000000432e6a : add byte ptr [rax], al ; sub al, 0xc ; add byte ptr [rax], al ; nop ; ret 0xffff
0x00000000004324c7 : add byte ptr [rax], cl ; lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000431f63 : add byte ptr [rax], dl ; idiv ebp ; jmp qword ptr [rax]
0x0000000000431ed3 : add byte ptr [rax], dl ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x000000000043281f : add byte ptr [rax], dl ; sbb al, -1 ; call rdi
0x00000000004327bb : add byte ptr [rbp + rax], bh ; add al, al ; sbb bh, bh ; jmp qword ptr [rbx]
0x000000000040d130 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000422e14 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040335b : add byte ptr [rbx + 0x5d2d9845], cl ; stc ; ret
0x00000000004033a6 : add byte ptr [rbx + 0x5e2d9845], cl ; stc ; ret
0x0000000000402b40 : add byte ptr [rbx + 0x662d9845], cl ; ret
0x0000000000402b8b : add byte ptr [rbx + 0x672d9845], cl ; ret
0x0000000000403423 : add byte ptr [rbx + 0xa2d9845], cl ; out dx, al ; ret
0x000000000040346e : add byte ptr [rbx + 0xb2d9845], cl ; out dx, al ; ret
0x00000000004325a3 : add byte ptr [rbx + rax], ah ; add al, ch ; out dx, eax ; std ; call rcx
0x000000000042841a : add byte ptr [rbx - 0x10d22bbb], cl ; jl 0x428439 ; ret
0x000000000040a210 : add byte ptr [rbx - 0x24d257bb], cl ; or esp, esp ; ret 0x8589
0x00000000004257d5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040a1c5 : add byte ptr [rbx - 0x25d257bb], cl ; or esp, esp ; ret 0x8589
0x000000000042578a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004288de : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000409355 : add byte ptr [rbx - 0x6fd23bbb], cl ; hlt ; ret 0x89fc
0x0000000000409193 : add byte ptr [rbx - 0x70d23bbb], cl ; hlt ; ret 0x89fc
0x0000000000430ba9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042813b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000432058 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; shr byte ptr [rdi], -1 ; jmp qword ptr [rax]
0x000000000040b76d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407302 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040b88e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004323e3 : add byte ptr [rcx + rax - 0x60b80000], ah ; std ; call qword ptr [rax]
0x000000000042707e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401978 : add byte ptr [rcx], al ; ret
0x0000000000430b65 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000430dc7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426f82 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000431f60 : add byte ptr [rdi], al ; add byte ptr [rax], al ; adc bh, dh ; std ; jmp qword ptr [rax]
0x000000000042ff33 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042df23 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f04a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040417f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042b448 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000410294 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004048c9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004324c3 : add byte ptr [rdx + rax - 0x52f80000], al ; std ; call qword ptr [rcx]
0x0000000000404743 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004048c5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000431ee0 : add byte ptr [rip + 0x7be00000], al ; std ; jmp qword ptr [rax]
0x0000000000431f20 : add byte ptr [rsi], al ; add byte ptr [rax], al ; mov dl, -3 ; jmp qword ptr [rax]
0x0000000000432e6b : add byte ptr [rsp + rcx], ch ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000431ea5 : add ch, bh ; jmp qword ptr [rax]
0x000000000041fd3c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040c686 : add cl, ch ; ret
0x0000000000403cb6 : add cl, ch ; ret 1
0x00000000004323e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x61], cl ; std ; call qword ptr [rax]
0x000000000040b0af : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004300b2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004081fc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f0ee : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401974 : add eax, 0x23297e ; add ebx, esi ; ret
0x0000000000431ee1 : add eax, 0x7be00000 ; std ; jmp qword ptr [rax]
0x0000000000431f11 : add eax, 0xa8e00000 ; std ; jmp rax
0x00000000004325a5 : add eax, dword ptr [rax] ; add al, ch ; out dx, eax ; std ; call rcx
0x00000000004325a4 : add eax, dword ptr fs:[rax] ; add al, ch ; out dx, eax ; std ; call rcx
0x000000000040193b : add eax, edx ; sar rax, 1 ; jne 0x40194c ; pop rbp ; ret
0x0000000000401979 : add ebx, esi ; ret
0x00000000004083a1 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000412e0c : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esp ; call rbx
0x00000000004020a9 : add esp, 0x10 ; pop rbp ; ret
0x000000000042707c : add esp, 0x100 ; pop rbp ; ret
0x000000000042ba7a : add esp, 0x12b0 ; pop rbp ; ret
0x00000000004271ec : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e2ed : add esp, 0x20 ; pop rbp ; ret
0x000000000040c74a : add esp, 0x40 ; pop rbp ; ret
0x000000000042e8b9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000404cbe : add esp, 0x4e0 ; pop rbp ; ret
0x0000000000402033 : add esp, 0x50 ; pop rbp ; ret
0x0000000000411349 : add esp, 0x560 ; pop rbp ; ret
0x0000000000428260 : add esp, 0x60 ; pop rbp ; ret
0x000000000040e53c : add esp, 0x70 ; pop rbp ; ret
0x0000000000402321 : add esp, 0x80 ; pop rbp ; ret
0x00000000004279bd : add esp, 0x90 ; pop rbp ; ret
0x0000000000425506 : add esp, 0xa0 ; pop rbp ; ret
0x000000000042330b : add esp, 0xb0 ; pop rbp ; ret
0x0000000000401d94 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000408c3e : add esp, 0xd0 ; pop rbp ; ret
0x0000000000428b2e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042a61f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000413cc3 : add esp, 8 ; pop rbp ; ret
0x000000000040148e : add esp, 8 ; ret
0x000000000040193a : add rax, rdx ; sar rax, 1 ; jne 0x40194d ; pop rbp ; ret
0x00000000004020a8 : add rsp, 0x10 ; pop rbp ; ret
0x000000000042707b : add rsp, 0x100 ; pop rbp ; ret
0x000000000042ba79 : add rsp, 0x12b0 ; pop rbp ; ret
0x00000000004271eb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e2ec : add rsp, 0x20 ; pop rbp ; ret
0x000000000040c749 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042e8b8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000404cbd : add rsp, 0x4e0 ; pop rbp ; ret
0x0000000000402032 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000411348 : add rsp, 0x560 ; pop rbp ; ret
0x000000000042825f : add rsp, 0x60 ; pop rbp ; ret
0x000000000040e53b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402320 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004279bc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000425505 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000042330a : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401d93 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408c3d : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000428b2d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042a61e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000413cc2 : add rsp, 8 ; pop rbp ; ret
0x000000000040148d : add rsp, 8 ; ret
0x0000000000430b6d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004081fb : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f0ed : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427e6b : and byte ptr [rsi + 0x58], ah ; jb 0x427ea2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041ef71 : and eax, 0x75b4b9d3 ; ret
0x0000000000401977 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000432941 : and edi, edi ; call qword ptr [rbx]
0x00000000004098f9 : call 0x401768
0x0000000000404708 : call 0x4019b8
0x000000000040c11a : call 0x428322
0x0000000000428265 : call 0x428329
0x0000000000428e7d : call 0xffffffffaca350b1
0x0000000000428e7c : call 0xffffffffaca350b2
0x00000000004325a8 : call 0xffffffffd243239f
0x0000000000432a48 : call 0xffffffffe743297a
0x0000000000422a29 : call 0xffffffffe904b379
0x0000000000422a28 : call 0xffffffffe904b37a
0x0000000000430e69 : call qword ptr [r12 + rbx*8]
0x000000000041153d : call qword ptr [rax]
0x00000000004083a7 : call qword ptr [rbx]
0x00000000004106d3 : call qword ptr [rcx]
0x0000000000421eb4 : call qword ptr [rdi]
0x000000000041de9b : call qword ptr [rdx]
0x0000000000430e6a : call qword ptr [rsp + rbx*8]
0x000000000040199d : call rax
0x0000000000412e12 : call rbx
0x0000000000406eae : call rcx
0x0000000000421af4 : call rdi
0x0000000000421325 : call rdx
0x0000000000405ad9 : call rsi
0x000000000040d0db : call rsp
0x000000000042ed62 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e8b7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004275c7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000429ba9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040193f : clc ; jne 0x401948 ; pop rbp ; ret
0x000000000040c336 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042436f : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004154fd : clc ; ret 0x77a8
0x00000000004020a7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404cbc : cld ; add rsp, 0x4e0 ; pop rbp ; ret
0x00000000004297fe : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042a61d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d15f : cld ; jmp 0x40d1cc
0x000000000040d15e : cld ; jmp 0x40d1cd
0x0000000000432262 : cld ; jmp qword ptr [rax]
0x0000000000427e70 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000430b6c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000426d8b : cmc ; ret 0x4f0b
0x0000000000426f21 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004018fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401910 ; pop rbp ; ret
0x000000000041fdc7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000410dea : dec dword ptr [rax - 0x46] ; sahf ; outsb dx, byte ptr [rsi] ; ret
0x000000000041f2cb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000412b06 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x48f8
0x000000000040702d : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7f] ; ret 1
0x000000000041ec3e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041311a : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000427f9d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042e416 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042605b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004109a9 : dec dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000412893 : dec dword ptr [rbp - 0x77] ; ret 0x214d
0x0000000000426d86 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000403cb0 : dec dword ptr [rdi] ; test byte ptr [rbx + rcx], dl ; add cl, ch ; ret 1
0x00000000004151da : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040b0ab : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004105df : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000040bf33 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040764b : dec eax ; ret
0x0000000000410dfa : enter -0x46b8, -0x62 ; outsb dx, byte ptr [rsi] ; ret
0x000000000042de99 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004134d9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040be11 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040cfec : fadd qword ptr [r9 - 0x27] ; in eax, dx ; jl 0x40cfe3 ; ret
0x000000000040cfed : fadd qword ptr [rcx - 0x27] ; in eax, dx ; jl 0x40cfe2 ; ret
0x0000000000411680 : fcomp st(0), st(7) ; ret
0x0000000000412917 : fiadd dword ptr [rcx + rcx*2 + 0x314dd289] ; ret 0x94c
0x000000000041300b : fisttp dword ptr [rax + 0x21] ; ret 0xbb49
0x000000000041284e : fisttp word ptr [rbp - 0x77] ; ret 0x8149
0x000000000042f128 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000403f0c : fldenv dword ptr [rdx + 0x135997b9] ; ret 0x558b
0x000000000040cfef : fldln2 ; jl 0x40cfe0 ; ret
0x000000000040cfee : fldln2 ; jl 0x40cfe1 ; ret
0x00000000004292b3 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004285c7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004292b4 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004285c8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000430e6c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004120c8 : fstp st(7) ; ret
0x0000000000427273 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000428b2c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000413cc1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401910 : hlt ; pop rbp ; mov edi, 0x634298 ; jmp rax
0x0000000000409199 : hlt ; ret 0x89fc
0x000000000040963f : hlt ; ret 0xb9fc
0x0000000000431f65 : idiv ebp ; jmp qword ptr [rax]
0x0000000000427f9b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040c4da : in al, -0x17 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412915 : in al, 0x11 ; fiadd dword ptr [rcx + rcx*2 + 0x314dd289] ; ret 0x94c
0x000000000040e368 : in al, 0x2d ; ret 0xc226
0x000000000040468d : in al, 0x3d ; jg 0x40464e ; ret 0x2e13
0x0000000000429f61 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000040bbdd : in al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040bd59 : in al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428f3c : in al, dx ; jmp 0x428fb9
0x0000000000428f3b : in al, dx ; jmp 0x428fba
0x000000000042839a : in al, dx ; out dx, eax ; jl 0x4283b1 ; ret
0x0000000000428399 : in al, dx ; out dx, eax ; jl 0x4283b2 ; ret
0x0000000000408202 : in al, dx ; pop rbp ; ret
0x000000000040cff0 : in eax, dx ; jl 0x40cfdf ; ret
0x0000000000410d96 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000407a76 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431edf : inc dword ptr [rax] ; add eax, 0x7be00000 ; std ; jmp qword ptr [rax]
0x0000000000403ebe : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040b872 : inc dword ptr [rcx - 0x48] ; sbb dword ptr [rax - 0x46bee7ec], ebp ; ret
0x0000000000431ecf : inc eax ; add al, 0 ; add byte ptr [rax], dl ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000431f0f : inc eax ; add eax, 0xa8e00000 ; std ; jmp rax
0x000000000040cfea : inc edi ; fadd qword ptr [r9 - 0x27] ; in eax, dx ; jl 0x40cfe5 ; ret
0x0000000000407645 : inc edi ; test dword ptr [rdi + rdi*8 - 1], esp ; dec eax ; ret
0x0000000000407bf8 : inc edi ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004082eb : inc edi ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rdi
0x000000000040829e : inc edi ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rdx
0x00000000004068a0 : insb byte ptr [rdi], dx ; call rsi
0x0000000000424ed7 : int 0x5b
0x0000000000401903 : ja 0x40190a ; pop rbp ; ret
0x0000000000427e6e : jb 0x427e9f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040190f : je 0x40190d ; pop rbp ; mov edi, 0x634298 ; jmp rax
0x000000000040468f : jg 0x40464c ; ret 0x2e13
0x000000000041028f : jge 0x410229 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041e366 : jge 0x41e2eb ; ret 0xffd5
0x000000000041ee30 : jge 0x41ee10 ; shr cl, cl ; ret 0x3b
0x0000000000403f0a : jl 0x403f02 ; fldenv dword ptr [rdx + 0x135997b9] ; ret 0x558b
0x000000000040cff1 : jl 0x40cfde ; ret
0x000000000042839c : jl 0x4283af ; ret
0x0000000000428420 : jl 0x428433 ; ret
0x00000000004327bc : jl 0x4327ca ; add byte ptr [rax], al ; rcr byte ptr [rdx], -1 ; jmp qword ptr [rbx]
0x0000000000401975 : jle 0x4019a6 ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004015eb : jmp 0x4014a7
0x00000000004042e0 : jmp 0x404dde
0x0000000000407105 : jmp 0x408619
0x000000000040c682 : jmp 0x40c68d
0x000000000040d160 : jmp 0x40d1cb
0x0000000000410ef4 : jmp 0x411591
0x000000000041f580 : jmp 0x422a00
0x000000000041d484 : jmp 0x422a01
0x000000000041e851 : jmp 0x422a02
0x00000000004261ab : jmp 0x426c17
0x00000000004260e8 : jmp 0x426c19
0x0000000000428213 : jmp 0x428278
0x0000000000428f3d : jmp 0x428fb8
0x000000000042b644 : jmp 0x42bbc3
0x000000000042e756 : jmp 0x42ea38
0x0000000000426d8a : jmp 0x4f4e3086
0x000000000040e324 : jmp 0xffffffffb60309ed
0x0000000000406f25 : jmp 0xffffffffb8406f47
0x0000000000407bb5 : jmp qword ptr [rax]
0x0000000000410e1e : jmp qword ptr [rbx]
0x0000000000402a66 : jmp qword ptr [rcx]
0x0000000000403d24 : jmp qword ptr [rdi]
0x000000000042701a : jmp qword ptr [rdx]
0x0000000000401917 : jmp rax
0x000000000041e958 : jmp rbx
0x000000000041f38a : jmp rcx
0x00000000004082f1 : jmp rdi
0x0000000000401957 : jmp rdx
0x0000000000432a4b : jmp rsi
0x00000000004102b5 : jmp rsp
0x0000000000401940 : jne 0x401947 ; pop rbp ; ret
0x0000000000431ee5 : jnp 0x431ee6 ; jmp qword ptr [rax]
0x000000000040e53e : jo 0x40e59f ; ret
0x000000000041827e : jo 0x41828a ; ret
0x0000000000419eee : jo 0x419efa ; ret
0x000000000041d43d : jo 0x41d449 ; ret
0x0000000000424724 : jo 0x424785 ; ret
0x00000000004323e9 : lahf ; std ; call qword ptr [rax]
0x000000000041ee2e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004130e3 : lcall ptr [rdi + rcx*8 + 0x71] ; ret 0x6fe9
0x000000000041ff2e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040d966 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414b75 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000424a19 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414b74 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040434e : les r9d, ptr [r11] ; out dx, al ; ret
0x000000000041d78e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004324c9 : lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000420795 : loope 0x420763 ; jmp 0x422a03
0x0000000000404cc0 : loopne 0x404ccb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bff7 : loopne 0x40c002 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e2eb : loopne 0x40e33b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e2ea : loopne 0x40e33c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000414b73 : loopne 0x414bc6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042411d : loopne 0x424183 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425504 : loopne 0x425557 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004278d3 : loopne 0x4278dc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042825e : loopne 0x4282ae ; add esp, 0x60 ; pop rbp ; ret
0x000000000042825d : loopne 0x4282af ; add esp, 0x60 ; pop rbp ; ret
0x0000000000428b30 : loopne 0x428b37 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429802 : loopne 0x429809 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430bac : loopne 0x430bfb ; mov esp, ebp ; pop rbp ; ret
0x0000000000430bab : loopne 0x430bfc ; mov esp, ebp ; pop rbp ; ret
0x0000000000430dfc : loopne 0x430e4b ; mov esp, ebp ; pop rbp ; ret
0x0000000000430dfb : loopne 0x430e4c ; mov esp, ebp ; pop rbp ; ret
0x0000000000431f14 : loopne 0x431ec1 ; std ; jmp rax
0x0000000000431ee4 : loopne 0x431f64 ; std ; jmp qword ptr [rax]
0x000000000041e35d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e437 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042ebaa : mov ah, 0x2d ; ret 0xe41a
0x000000000042ba78 : mov ah, 0x48 ; add esp, 0x12b0 ; pop rbp ; ret
0x000000000041c3e5 : mov ah, 0x75 ; ret
0x000000000040b53d : mov al, -0x17 ; ret
0x000000000040bf3e : mov al, -0x17 ; ret 2
0x000000000040b93b : mov al, -0x25 ; or esp, esp ; ret 0xc1e9
0x0000000000424ef3 : mov al, -0x47 ; ret
0x000000000042df1f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042330d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431ea4 : mov al, 0 ; std ; jmp qword ptr [rax]
0x000000000042ba7c : mov al, 0x12 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f41d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f0ea : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f34d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415d85 : mov bl, 0x75 ; ret
0x0000000000401489 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000412e09 : mov byte ptr [rax - 0x77], cl ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esp ; call rbx
0x000000000042b444 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040c337 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401973 : mov byte ptr [rip + 0x23297e], 1 ; ret
0x000000000041dbdf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004300b4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004081fe : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f0f0 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000430b6a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000431f25 : mov dl, -3 ; jmp qword ptr [rax]
0x000000000042fde1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004142f9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000413ecf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428f3a : mov dword ptr [rbp - 0x14], eax ; jmp 0x428fbb
0x000000000040e2e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004261a8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x426c1a
0x0000000000427271 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020a5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004145d6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041417d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004139f9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004280db : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004282ae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428db5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004142fc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042825c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000430baa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c86b : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000041417f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000413cbf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000042ed60 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042436d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041417e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000420b98 : mov ebp, 0xe19c53ba ; ret
0x000000000040199b : mov ebp, esp ; call rax
0x0000000000401901 : mov ebp, esp ; ja 0x40190c ; pop rbp ; ret
0x0000000000413ecc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401995 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x0000000000401912 : mov edi, 0x634298 ; jmp rax
0x0000000000401952 : mov edi, 0x634298 ; jmp rdx
0x0000000000404123 : mov edi, 0x67b99138 ; ret
0x0000000000410a66 : mov edi, 0x7142b6ab ; ret
0x000000000041d437 : mov edi, 0xb8000055 ; wait ; jo 0x41d44f ; ret
0x0000000000430e67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000430e66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042e6ce : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041dbfb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041ea72 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042e6b7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401950 : mov esi, eax ; mov edi, 0x634298 ; jmp rdx
0x0000000000408201 : mov esp, ebp ; pop rbp ; ret
0x00000000004145d5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000042eba9 : mov r12b, 0x2d ; ret 0xe41a
0x000000000040b53c : mov r8b, -0x17 ; ret
0x000000000040bf3d : mov r8b, -0x17 ; ret 2
0x000000000040b93a : mov r8b, -0x25 ; or esp, esp ; ret 0xc1e9
0x00000000004139f8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004280da : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004282ad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042825b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042ed5f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042436c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040199a : mov rbp, rsp ; call rax
0x0000000000401900 : mov rbp, rsp ; ja 0x40190d ; pop rbp ; ret
0x000000000040194f : mov rsi, rax ; mov edi, 0x634298 ; jmp rdx
0x0000000000408200 : mov rsp, rbp ; pop rbp ; ret
0x0000000000427e71 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004196d8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004323e4 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x61], cl ; std ; call qword ptr [rax]
0x00000000004082c7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48f9
0x000000000041c925 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000405f55 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x89f9
0x0000000000406f2b : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb9f9
0x00000000004300b3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004081fd : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f0ef : movzx eax, al ; pop rbp ; ret
0x000000000040c33a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042e4c8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000410290 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040935a : nop ; hlt ; ret 0x89fc
0x000000000040963e : nop ; hlt ; ret 0xb9fc
0x0000000000415bc5 : nop ; ret
0x0000000000423fd2 : nop ; ret 0x148
0x0000000000423fe6 : nop ; ret 0x2948
0x0000000000432e70 : nop ; ret 0xffff
0x0000000000430e88 : nop dword ptr [rax + rax] ; ret
0x000000000041e35a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e434 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040434a : or al, byte ptr [rax] ; add bh, al ; les r9d, ptr [r11] ; out dx, al ; ret
0x0000000000407bad : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000403421 : or al, byte ptr [rax] ; add byte ptr [rbx + 0xa2d9845], cl ; out dx, al ; ret
0x0000000000413ed0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000432a45 : or byte ptr [rax], al ; add al, ch ; sub bh, bh ; jmp rsi
0x000000000040b936 : or byte ptr [rax], al ; add bh, al ; mov r8b, -0x25 ; or esp, esp ; ret 0xc1e9
0x0000000000425788 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000407106 : or byte ptr [rip + 0x6cb80000], dl ; call rsi
0x0000000000403428 : or ch, dh ; ret
0x000000000041311d : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040cfba : or dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004145d4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407ce2 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x000000000040c4dc : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408e27 : or eax, 0x48000000 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403cb4 : or eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000403473 : or ebp, esi ; ret
0x000000000041417b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040b8ba : or esp, esp ; ret 0x4589
0x000000000040a1cb : or esp, esp ; ret 0x8589
0x000000000040b93d : or esp, esp ; ret 0xc1e9
0x000000000041fd3b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042f0ec : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403f0b : out dx, al ; fldenv dword ptr [rdx + 0x135997b9] ; ret 0x558b
0x0000000000403429 : out dx, al ; ret
0x000000000042f41f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042839b : out dx, eax ; jl 0x4283b0 ; ret
0x000000000042841f : out dx, eax ; jl 0x428434 ; ret
0x0000000000424ef2 : out dx, eax ; mov al, -0x47 ; ret
0x00000000004325a9 : out dx, eax ; std ; call rcx
0x000000000042e6b9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000410dee : outsb dx, byte ptr [rsi] ; ret
0x0000000000420e25 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415a76 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420e70 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000431ed5 : outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000427011 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042e6bc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000427e6c : pop ax ; jb 0x427ea1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000412cf0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430e7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042411f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412cf2 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430e7e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412cf4 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430e80 : pop r14 ; pop r15 ; ret
0x0000000000414b79 : pop r14 ; pop rbp ; ret
0x0000000000412cf6 : pop r15 ; pop rbp ; ret
0x0000000000430e82 : pop r15 ; ret
0x0000000000427e6d : pop rax ; jb 0x427ea0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401972 : pop rbp ; mov byte ptr [rip + 0x23297e], 1 ; ret
0x0000000000401911 : pop rbp ; mov edi, 0x634298 ; jmp rax
0x000000000040194e : pop rbp ; mov rsi, rax ; mov edi, 0x634298 ; jmp rdx
0x0000000000430e7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412cf3 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430e7f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041dbe2 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000419eb5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041dbfe : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401905 : pop rbp ; ret
0x0000000000403360 : pop rbp ; stc ; ret
0x00000000004040d4 : pop rbp ; stosb byte ptr [rdi], al ; push -0x7f ; ret 0xff9e
0x000000000042411e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422e15 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414b78 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425790 : pop rbx ; ret
0x000000000041dbe3 : pop rcx ; ret 0x1b2
0x00000000004182b6 : pop rcx ; ret 0x8589
0x000000000041dbff : pop rcx ; ret 0x8b48
0x000000000041ff30 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040d057 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412cf7 : pop rdi ; pop rbp ; ret
0x0000000000430e83 : pop rdi ; ret
0x0000000000412cf5 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000430e81 : pop rsi ; pop r15 ; ret
0x0000000000414b7a : pop rsi ; pop rbp ; ret
0x00000000004033ab : pop rsi ; stc ; ret
0x0000000000412cf1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430e7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000424120 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004182b5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000042ff35 : popfq ; ret 0xd284
0x000000000040829b : push -0x38000001 ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp rdx
0x000000000041dbe0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041fdca : push -0x75425eeb ; push rbp ; ret
0x000000000041c928 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004040d7 : push -0x7f ; ret 0xff9e
0x0000000000402035 : push rax ; pop rbp ; ret
0x0000000000401994 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x000000000041fdcf : push rbp ; ret
0x000000000041fd66 : push rbp ; ret 0xd284
0x000000000041e35f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e439 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000412f66 : push rcx ; adc edx, dword ptr [rdx] ; sub eax, 0x8948d2bd ; ret
0x000000000042e6bb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403cb3 : push rsp ; or eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042df25 : pushfq ; ret 0xd284
0x0000000000432630 : rcl byte ptr [rsi], -2 ; call qword ptr [rdx]
0x00000000004327c0 : rcr byte ptr [rdx], -1 ; jmp qword ptr [rbx]
0x0000000000401491 : ret
0x00000000004151de : ret 0
0x0000000000407fb2 : ret 0x10
0x0000000000423fd3 : ret 0x148
0x0000000000407a13 : ret 0x1519
0x0000000000420f34 : ret 0x1a
0x00000000004161ad : ret 0x1add
0x000000000041dbe5 : ret 0x1b2
0x0000000000412896 : ret 0x214d
0x00000000004017f2 : ret 0x2329
0x00000000004015f2 : ret 0x232a
0x0000000000416afa : ret 0x23da
0x0000000000404ef8 : ret 0x24
0x00000000004237f8 : ret 0x279e
0x0000000000410b23 : ret 0x2948
0x000000000041ff34 : ret 0x2a
0x000000000041e362 : ret 0x2d50
0x0000000000403c43 : ret 0x2e13
0x000000000042e21e : ret 0x3040
0x00000000004125fa : ret 0x3145
0x000000000041306a : ret 0x3148
0x000000000041286e : ret 0x314d
0x000000000042e918 : ret 0x32e8
0x000000000041ee34 : ret 0x3b
0x000000000041be95 : ret 0x3e
0x000000000040b8bc : ret 0x4589
0x000000000041f2d1 : ret 0x4802
0x0000000000412af7 : ret 0x4808
0x000000000042e6be : ret 0x4815
0x00000000004109ac : ret 0x4840
0x0000000000420e26 : ret 0x4861
0x0000000000406d99 : ret 0x48f0
0x0000000000412b0c : ret 0x48f8
0x00000000004082c8 : ret 0x48f9
0x00000000004196e1 : ret 0x4b
0x0000000000424cf7 : ret 0x4cc0
0x0000000000408250 : ret 0x4cf0
0x0000000000426d8c : ret 0x4f0b
0x000000000041412b : ret 0x5589
0x0000000000403f12 : ret 0x558b
0x000000000041e5ea : ret 0x5966
0x00000000004259e7 : ret 0x5bc6
0x0000000000412acc : ret 0x60b9
0x0000000000430b6f : ret 0x61
0x0000000000415846 : ret 0x6a8a
0x00000000004130e7 : ret 0x6fe9
0x00000000004154fe : ret 0x77a8
0x0000000000416661 : ret 0x7a8a
0x000000000041d2db : ret 0x7b7f
0x0000000000410127 : ret 0x8020
0x0000000000423c8a : ret 0x8041
0x0000000000423ed2 : ret 0x8141
0x000000000040cfbd : ret 0x8148
0x0000000000412851 : ret 0x8149
0x000000000041f1f4 : ret 0x822d
0x0000000000403ec2 : ret 0x8445
0x00000000004032cd : ret 0x8589
0x00000000004049a7 : ret 0x858a
0x0000000000416273 : ret 0x8940
0x0000000000402840 : ret 0x8944
0x0000000000408176 : ret 0x8948
0x000000000042ccdf : ret 0x894a
0x0000000000415a77 : ret 0x8961
0x000000000040e327 : ret 0x89b5
0x0000000000405f56 : ret 0x89f9
0x000000000040919a : ret 0x89fc
0x000000000042e2d8 : ret 0x8a44
0x000000000042e1d5 : ret 0x8a4a
0x000000000040810b : ret 0x8b48
0x000000000041291e : ret 0x94c
0x000000000041e43c : ret 0xa30b
0x00000000004040df : ret 0xaa5d
0x0000000000428e7f : ret 0xac60
0x000000000040431f : ret 0xacb9
0x00000000004041e6 : ret 0xb0
0x000000000041fd40 : ret 0xb740
0x0000000000427e67 : ret 0xb848
0x000000000041df70 : ret 0xb940
0x0000000000404a0c : ret 0xb944
0x000000000042e162 : ret 0xb94a
0x0000000000406f2c : ret 0xb9f9
0x0000000000409640 : ret 0xb9fc
0x000000000041300e : ret 0xbb49
0x0000000000404d13 : ret 0xbde9
0x00000000004203bc : ret 0xbf48
0x0000000000401935 : ret 0xc148
0x000000000040b93f : ret 0xc1e9
0x000000000040e36a : ret 0xc226
0x000000000040a8d2 : ret 0xc3bb
0x0000000000430db2 : ret 0xc493
0x000000000042f0a9 : ret 0xca21
0x0000000000404b90 : ret 0xca29
0x0000000000430b75 : ret 0xccb2
0x0000000000404182 : ret 0xd284
0x000000000042c925 : ret 0xd618
0x000000000043005b : ret 0xe280
0x000000000042ebac : ret 0xe41a
0x000000000042b269 : ret 0xe5a1
0x000000000041fc12 : ret 0xe940
0x0000000000420e71 : ret 0xe961
0x0000000000416c9d : ret 0xea51
0x0000000000430b67 : ret 0xea81
0x0000000000422a2c : ret 0xee8
0x0000000000414165 : ret 0xf281
0x00000000004108a0 : ret 0xf41
0x00000000004125d9 : ret 0xf741
0x00000000004209c5 : ret 0xf7f3
0x000000000041f14e : ret 0xfc75
0x00000000004040d9 : ret 0xff9e
0x00000000004209bf : ret 0xffa5
0x000000000041f148 : ret 0xffc4
0x000000000041e368 : ret 0xffd5
0x000000000041e442 : ret 0xffd8
0x000000000041f1fa : ret 0xffd9
0x000000000041e5e4 : ret 0xffe0
0x000000000041d2d5 : ret 0xfffa
0x000000000040b442 : ret 0xffff
0x0000000000403cb8 : ret 1
0x0000000000409792 : ret 2
0x0000000000408f9d : ret 5
0x000000000040a9bf : ret 6
0x0000000000422134 : ret 8
0x000000000042b4ac : rol bh, 1 ; test dword ptr [rdi + rbp*8 - 1], esi ; jmp qword ptr [rbx]
0x000000000042e69d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000431ed0 : rol byte ptr [rax + rax], 0 ; adc byte ptr [rsi - 3], ch ; jmp rax
0x0000000000409994 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000429b1c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408c40 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000431f10 : rol byte ptr [rip - 0x57200000], -3 ; jmp rax
0x000000000042e69c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004125d6 : rol dword ptr [rbp - 0x77], 1 ; ret 0xf741
0x000000000042b4ab : rol r15b, 1 ; test dword ptr [rdi + rbp*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000410df7 : ror byte ptr [rax + 0x29], 1 ; enter -0x46b8, -0x62 ; outsb dx, byte ptr [rsi] ; ret
0x0000000000427e64 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040193c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40194b ; pop rbp ; ret
0x00000000004081ff : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000412f6b : ror byte ptr [rax - 0x77], cl ; ret
0x0000000000408c3c : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041291b : ror byte ptr [rbp + 0x31], cl ; ret 0x94c
0x00000000004040a1 : ror byte ptr [rbp + 0x67b9c8fc], cl ; ret
0x000000000041417a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042e4ce : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000424bb0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000410ded : sahf ; outsb dx, byte ptr [rsi] ; ret
0x000000000042f04c : sahf ; ret 0xd284
0x000000000040193e : sar eax, 1 ; jne 0x401949 ; pop rbp ; ret
0x000000000041ff31 : sar ebp, -0x17 ; ret 0x2a
0x000000000040193d : sar rax, 1 ; jne 0x40194a ; pop rbp ; ret
0x0000000000405561 : sbb ah, byte ptr [rsi] ; ret
0x0000000000405560 : sbb ah, byte ptr gs:[rsi] ; ret
0x0000000000432821 : sbb al, -1 ; call rdi
0x000000000043225c : sbb al, 0 ; add byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x0000000000432e68 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xc ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000424ef0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004327c1 : sbb bh, bh ; jmp qword ptr [rbx]
0x000000000040b878 : sbb byte ptr [rcx - 0x47], al ; ret
0x000000000041fe31 : sbb cl, ch ; ret
0x000000000040b875 : sbb dword ptr [rax - 0x46bee7ec], ebp ; ret
0x00000000004276b3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423f40 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000043205c : shr byte ptr [rdi], -1 ; jmp qword ptr [rax]
0x000000000041ee32 : shr cl, cl ; ret 0x3b
0x0000000000403362 : stc ; ret
0x000000000041cc6d : stc ; ret 0x77a8
0x00000000004323ea : std ; call qword ptr [rax]
0x00000000004324ca : std ; call qword ptr [rcx]
0x00000000004325aa : std ; call rcx
0x0000000000431ede : std ; inc dword ptr [rax] ; add eax, 0x7be00000 ; std ; jmp qword ptr [rax]
0x0000000000431ece : std ; inc eax ; add al, 0 ; add byte ptr [rax], dl ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000431f0e : std ; inc eax ; add eax, 0xa8e00000 ; std ; jmp rax
0x0000000000431ea6 : std ; jmp qword ptr [rax]
0x0000000000431ed6 : std ; jmp rax
0x00000000004237f7 : std ; ret 0x279e
0x00000000004040d5 : stosb byte ptr [rdi], al ; push -0x7f ; ret 0xff9e
0x0000000000432e6c : sub al, 0xc ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040d2ae : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432a49 : sub bh, bh ; jmp rsi
0x0000000000428f86 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d198 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e365 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041e35b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e435 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401976 : sub dword ptr [rbx], esp ; add byte ptr [rcx], al ; ret
0x0000000000412925 : sub dword ptr [rsi - 0x25ee1b43], eax ; test byte ptr [rbp + 9], cl ; ret 0x8148
0x000000000041f1f5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000412f69 : sub eax, 0x8948d2bd ; ret
0x0000000000407ce1 : sub eax, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x0000000000427e6f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000430ebd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000430ebc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041e360 : test al, -0x7f ; ret 0x2d50
0x000000000041e43a : test al, -0x7f ; ret 0xa30b
0x0000000000431f15 : test al, -3 ; jmp rax
0x000000000042df73 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b876 : test al, 0x14 ; sbb byte ptr [rcx - 0x47], al ; ret
0x000000000040a91b : test al, 0x2d ; ret
0x000000000040a8d0 : test al, 0x2d ; ret 0xc3bb
0x00000000004245ce : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000420b96 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000426f08 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000430e8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041292b : test byte ptr [rbp + 9], cl ; ret 0x8148
0x0000000000403cb2 : test byte ptr [rbx + rcx], dl ; add cl, ch ; ret 1
0x0000000000412918 : test byte ptr [rcx - 0x77], cl ; ror byte ptr [rbp + 0x31], cl ; ret 0x94c
0x00000000004151dc : test byte ptr [rcx], ch ; ret 0
0x000000000040b0ad : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000407129 : test dh, -0x47 ; sbb ah, byte ptr [rsi] ; ret
0x00000000004151d6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000042b5d4 : test dword ptr [rdi + rbp*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042b48c : test dword ptr [rdi + rbp*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000427016 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004083a3 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000412e0e : test dword ptr [rdi + rdi*8 - 1], esp ; call rbx
0x0000000000406eaa : test dword ptr [rdi + rdi*8 - 1], esp ; call rcx
0x0000000000407647 : test dword ptr [rdi + rdi*8 - 1], esp ; dec eax ; ret
0x0000000000407bb1 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004082ed : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rdi
0x00000000004082a0 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp rdx
0x00000000004130df : test dword ptr [rdi + rdi*8 - 1], esp ; lcall ptr [rdi + rcx*8 + 0x71] ; ret 0x6fe9
0x000000000041fc0b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000420e6a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040e900 : test dword ptr [rsi + rdi*8 - 0x7bf00001], eax ; ret
0x000000000041c92a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000420e1f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041ee2f : wait ; jge 0x41ee11 ; shr cl, cl ; ret 0x3b
0x0000000000419eed : wait ; jo 0x419efb ; ret
0x000000000041d43c : wait ; jo 0x41d44a ; ret
0x000000000042e6b8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040b770 : xchg eax, ebp ; ret
0x0000000000403ec1 : xchg eax, ebp ; ret 0x8445
0x0000000000404181 : xchg eax, ebp ; ret 0xd284
0x0000000000415a75 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041c375 : xchg eax, ebx ; ret
0x000000000041c5a5 : xchg eax, ecx ; ret
0x000000000042b44a : xchg eax, edi ; ret 0xd284
0x0000000000415df5 : xchg eax, edx ; ret
0x0000000000423c9f : xchg eax, edx ; ret 0x8445
0x0000000000410296 : xchg eax, edx ; ret 0xd284
0x0000000000412f65 : xchg eax, esi ; push rcx ; adc edx, dword ptr [rdx] ; sub eax, 0x8948d2bd ; ret
0x00000000004261aa : xchg eax, esp ; jmp 0x426c18
0x00000000004260e7 : xchg eax, esp ; jmp 0x426c1a
0x0000000000420e24 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041c6f5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420e6f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000040b891 : xchg eax, esp ; ret
0x0000000000423c89 : xchg eax, esp ; ret 0x8041
0x000000000041fd3e : xchg eax, esp ; ret 0xb740
0x00000000004048cb : xchg eax, esp ; ret 0xd284
0x00000000004261a9 : xchg eax, r12d ; jmp 0x426c19
0x0000000000403a9a : xor al, 0xffffffffffffffe1 ; jmp qword ptr [rcx]
0x000000000041fd39 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x00000000004145d7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004145d8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000402a64 : xor esp, ecx ; jmp qword ptr [rcx]
