0x0000000000404670 : adc al, 0x25 ; push rax ; ret
0x0000000000432e48 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x000000000043ea5d : adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x0000000000414a3f : adc ch, cl ; ret
0x00000000004341a2 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000040577c : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000420d6e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000410a8a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4820
0x0000000000405814 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004108de : adc cl, byte ptr [rax - 1] ; ret 0x8b4c
0x00000000004293cb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c5e6 : adc eax, 0x148280a ; ret 0x8b48
0x000000000042186b : adc eax, 0x558abda1 ; ret
0x0000000000424e49 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004275ab : adc esp, edx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043ea5b : add ah, ah ; adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x000000000043e24b : add ah, dl ; or byte ptr [rax], al ; add al, dl ; jp 0x43e259 ; jmp qword ptr [rbx]
0x0000000000401db8 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x000000000040ad99 : add al, 0 ; add byte ptr [rbx + 0x4f2dd045], cl ; ret
0x00000000004089e5 : add al, 0 ; add byte ptr [rbx + 0x5f2dc045], cl ; ret 0x1d47
0x0000000000409ac5 : add al, 0 ; add cl, ch ; ret 1
0x0000000000439e4a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004271c2 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000412967 : add al, ch ; ret
0x0000000000410128 : add al, ch ; ret 0xff16
0x0000000000406868 : add al, ch ; ret 0xffb1
0x000000000043ea5f : add al, dh ; ret 0xffff
0x000000000043d4bb : add al, dl ; cld ; jmp rax
0x000000000043e0bf : add al, dl ; jbe 0x43e0c4 ; call qword ptr [rdx]
0x000000000043e24f : add al, dl ; jp 0x43e255 ; jmp qword ptr [rbx]
0x00000000004093d2 : add bh, al ; les r13d, ptr [r11 - 0x16c430de] ; ret
0x0000000000406a67 : add bh, al ; les r9d, ptr [r15 - 0x28] ; ret
0x000000000042cce6 : add bh, al ; mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x0000000000435c95 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004308c1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000430880 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004290a4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040439d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000404764 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x0000000000403fe7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000401dba : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x0000000000403f5f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x0000000000433e73 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004216a9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043c2df : add bl, dh ; ret
0x000000000043bfb2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043c214 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040deea : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004036a5 : add byte ptr [rax - 0x39], cl ; add eax, 0x23bcaf ; ret
0x000000000040466d : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; push rax ; ret
0x0000000000403d85 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; lahf ; ret
0x0000000000403bb2 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rbx ; ret
0x0000000000403db4 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404606 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x00000000004396e1 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; insb byte ptr [rdi], dx ; ret
0x0000000000403c8f : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; outsb dx, byte ptr [rsi] ; ret
0x00000000004116c7 : add byte ptr [rax - 0x75], cl ; call 0xffffffffb103a01f
0x0000000000405ac7 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a9d : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410b67 : add byte ptr [rax - 0x77], cl ; ret 0x80e8
0x0000000000405719 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043d6cb : add byte ptr [rax], ah ; je 0x43d6d1 ; call qword ptr [rax]
0x000000000043e2af : add byte ptr [rax], ah ; jl 0x43e2b5 ; call rdi
0x000000000043ea59 : add byte ptr [rax], al ; add ah, ah ; adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x000000000043d4b9 : add byte ptr [rax], al ; add al, dl ; cld ; jmp rax
0x0000000000435c93 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004308bf : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004290a2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040439b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000404762 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x0000000000433e71 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000043c2dd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040dee8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004116c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0xffffffffb103a021
0x0000000000406cbc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410b65 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x80e8
0x0000000000412960 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043c2db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a2ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000400680 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040aa17 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b81e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e067 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400684 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000412c7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000414782 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x00000000004248b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040addb : add byte ptr [rax], al ; add byte ptr [rbx + 0x502dd045], cl ; ret
0x0000000000408a30 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602dc045], cl ; ret 0x1d47
0x0000000000405c1f : add byte ptr [rax], al ; add byte ptr [rbx + 0x722de845], cl ; ret 0x9b99
0x0000000000427863 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000401cea : add byte ptr [rax], al ; add byte ptr [rbx - 0x2bd207bb], cl ; ret
0x000000000043471c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040fb37 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bd257bb], cl ; insd dword ptr [rdi], dx ; ret 0x892e
0x000000000040e850 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x000000000042a1c9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000403b6a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004058ad : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8445
0x000000000043bfb3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000043c215 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004047c0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004127dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4d ; ror dword ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043b381 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000413f23 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000414352 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004043fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004393c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000428f9a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040aa19 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e427 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000430b8b : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000434102 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000401c65 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004244d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d7f : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a430 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405dd3 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d9b1 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbp ; ret
0x000000000040166b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040361c : add byte ptr [rax], al ; call 0x401a29
0x0000000000401809 : add byte ptr [rax], al ; jmp 0x401689
0x0000000000430b87 : add byte ptr [rax], al ; jmp 0x430b96
0x00000000004340fe : add byte ptr [rax], al ; jmp 0x43410d
0x000000000043e61e : add byte ptr [rax], al ; mov cl, -2 ; call qword ptr [rdx]
0x000000000040455f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430c2f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000043bff8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a9c : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ddde : add byte ptr [rax], al ; or byte ptr [rcx], 0xfd ; jmp qword ptr [rbx]
0x000000000043e496 : add byte ptr [rax], al ; pop rax ; xchg dh, bh ; jmp qword ptr [rbx]
0x0000000000404b13 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412930 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004307e4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400686 : add byte ptr [rax], al ; ret
0x00000000004005ae : add byte ptr [rax], al ; ret 0
0x000000000043d4ba : add byte ptr [rax], al ; rol byte ptr [rcx - 4], 1 ; jmp rax
0x000000000043e0be : add byte ptr [rax], al ; sal byte ptr [rsi - 3], 1 ; call qword ptr [rdx]
0x000000000043e24e : add byte ptr [rax], al ; sar byte ptr [rdx - 2], 1 ; jmp qword ptr [rbx]
0x000000000043e492 : add byte ptr [rax], al ; sbb al, 0xb ; add byte ptr [rax], al ; pop rax ; xchg dh, bh ; jmp qword ptr [rbx]
0x000000000043d4b6 : add byte ptr [rax], al ; xchg eax, ecx ; add byte ptr [rax], al ; add al, dl ; cld ; jmp rax
0x0000000000412c80 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000414784 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000412931 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ad9b : add byte ptr [rbx + 0x4f2dd045], cl ; ret
0x000000000040addd : add byte ptr [rbx + 0x502dd045], cl ; ret
0x00000000004307e5 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004089e7 : add byte ptr [rbx + 0x5f2dc045], cl ; ret 0x1d47
0x0000000000408a32 : add byte ptr [rbx + 0x602dc045], cl ; ret 0x1d47
0x0000000000405c21 : add byte ptr [rbx + 0x722de845], cl ; ret 0x9b99
0x000000000040dadd : add byte ptr [rbx + 0x7f2db445], cl ; sbb eax, dword ptr [rcx] ; ret
0x000000000043e493 : add byte ptr [rbx + rcx], bl ; add byte ptr [rax], al ; pop rax ; xchg dh, bh ; jmp qword ptr [rbx]
0x0000000000427865 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042781a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000401cec : add byte ptr [rbx - 0x2bd207bb], cl ; ret
0x00000000004044fe : add byte ptr [rbx - 0x47b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043471e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040fb39 : add byte ptr [rbx - 0x6bd257bb], cl ; insd dword ptr [rdi], dx ; ret 0x892e
0x0000000000404560 : add byte ptr [rbx - 0x76b713bb], cl ; in al, dx ; pop rbp ; ret
0x000000000043bff9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000040e852 : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x000000000042a1cb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000408618 : add byte ptr [rbx - 0x77d23fbb], cl ; loop 0x4086a1 ; ret 0x8589
0x00000000004085cd : add byte ptr [rbx - 0x78d23fbb], cl ; loop 0x408656 ; ret 0x8589
0x000000000040db61 : add byte ptr [rbx - 0x7fd24bbb], cl ; sbb eax, dword ptr [rcx] ; ret
0x000000000040cd38 : add byte ptr [rbx - 0xa74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042cc30 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000403b6c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004058af : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8445
0x000000000043d4b7 : add byte ptr [rcx - 0x30000000], dl ; cld ; jmp rax
0x0000000000406a9a : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042910e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bd8 : add byte ptr [rcx], al ; ret
0x000000000043bfb5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000043c217 : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004047c2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043e0bb : add byte ptr [rdi + rax], al ; add al, dl ; jbe 0x43e0c8 ; call qword ptr [rdx]
0x00000000004127de : add byte ptr [rdi], cl ; mov dh, 0x4d ; ror dword ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043b383 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000413f25 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000414354 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004043ff : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004393c7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000428f9c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040aa1b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e429 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041096f : add cl, byte ptr [rax - 0x77] ; ret 0xb0
0x00000000004217dc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000408852 : add cl, ch ; ret
0x0000000000405370 : add cl, ch ; ret 1
0x0000000000406a65 : add dword ptr [rax], eax ; add bh, al ; les r9d, ptr [r15 - 0x28] ; ret
0x000000000043087e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000040466b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; push rax ; ret
0x0000000000406a9b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041292f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e42f : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x000000000040c4db : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b502 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000043a354 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a53e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000406a64 : add dword ptr ss:[rax], eax ; add bh, al ; les r9d, ptr [r15 - 0x28] ; ret
0x00000000004036a8 : add eax, 0x23bcaf ; ret
0x0000000000401bd4 : add eax, 0x23d75e ; add ebx, esi ; ret
0x00000000004307e3 : add eax, 0x5d5b0000 ; ret
0x000000000040449d : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000435bc4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bda1 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b9b : add eax, edx ; sar rax, 1 ; jne 0x401bac ; pop rbp ; ret
0x0000000000401bd9 : add ebx, esi ; ret
0x00000000004046a2 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rbx]
0x0000000000401c68 : add esp, 0x10 ; pop rbp ; ret
0x000000000042910c : add esp, 0x100 ; pop rbp ; ret
0x0000000000409f2b : add esp, 0x120 ; pop rbp ; ret
0x000000000042927c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004244d3 : add esp, 0x20 ; pop rbp ; ret
0x000000000040966a : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000401d82 : add esp, 0x30 ; pop rbp ; ret
0x0000000000411bd3 : add esp, 0x38 ; pop rbp ; ret
0x000000000040a433 : add esp, 0x40 ; pop rbp ; ret
0x000000000043a049 : add esp, 0x440 ; pop rbp ; ret
0x000000000042ccd3 : add esp, 0x470 ; pop rbp ; ret
0x0000000000433e0e : add esp, 0x4f0 ; pop rbp ; ret
0x0000000000405dd6 : add esp, 0x50 ; pop rbp ; ret
0x000000000040d9b4 : add esp, 0x58 ; pop rbp ; ret
0x00000000004307e0 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000040e3e4 : add esp, 0x60 ; pop rbp ; ret
0x0000000000410ffe : add esp, 0x70 ; pop rbp ; ret
0x0000000000414b54 : add esp, 0x78 ; pop rbp ; ret
0x00000000004105a5 : add esp, 0x80 ; pop rbp ; ret
0x0000000000429a4d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404b0f : add esp, 0xa0 ; pop rbp ; ret
0x000000000040cd67 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000411589 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040d38b : add esp, 0xd0 ; pop rbp ; ret
0x000000000040fd05 : add esp, 0xe0 ; pop rbp ; ret
0x000000000041451e : add esp, 0xf0 ; pop rbp ; ret
0x0000000000415763 : add esp, 8 ; pop rbp ; ret
0x000000000040166e : add esp, 8 ; ret
0x0000000000410127 : add r8b, bpl ; ret 0xff16
0x0000000000401b9a : add rax, rdx ; sar rax, 1 ; jne 0x401bad ; pop rbp ; ret
0x0000000000401c67 : add rsp, 0x10 ; pop rbp ; ret
0x000000000042910b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000409f2a : add rsp, 0x120 ; pop rbp ; ret
0x000000000042927b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004244d2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000409669 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000401d81 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000411bd2 : add rsp, 0x38 ; pop rbp ; ret
0x000000000040a432 : add rsp, 0x40 ; pop rbp ; ret
0x000000000043a048 : add rsp, 0x440 ; pop rbp ; ret
0x000000000042ccd2 : add rsp, 0x470 ; pop rbp ; ret
0x0000000000433e0d : add rsp, 0x4f0 ; pop rbp ; ret
0x0000000000405dd5 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040d9b3 : add rsp, 0x58 ; pop rbp ; ret
0x00000000004307df : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000040e3e3 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000410ffd : add rsp, 0x70 ; pop rbp ; ret
0x0000000000414b53 : add rsp, 0x78 ; pop rbp ; ret
0x00000000004105a4 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000429a4c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404b0e : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040cd66 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000411588 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040d38a : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040fd04 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041451d : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000415762 : add rsp, 8 ; pop rbp ; ret
0x000000000040166d : add rsp, 8 ; ret
0x000000000043bfbd : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000407a61 : and al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a353 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a53d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409f2d : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429efb : and byte ptr [rsi + 0x58], ah ; jb 0x429f32 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004093d7 : and cl, bh ; cmp ebp, ecx ; ret
0x000000000040e42d : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000420a11 : and eax, 0x75b4b9d3 ; ret
0x0000000000430c2d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004049ba : and eax, 0xd3bad96a ; ret
0x0000000000401bd7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004036ab : and eax, dword ptr [rax] ; ret
0x000000000042cc92 : and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000415487 : call 0x4016f2
0x0000000000407e5d : call 0x4017f7
0x00000000004049e1 : call 0x401827
0x000000000040361e : call 0x401a27
0x000000000042a2f5 : call 0x401c19
0x0000000000435fed : call 0xffffffffaca42221
0x0000000000435fec : call 0xffffffffaca42222
0x00000000004116cb : call 0xffffffffb103a01b
0x00000000004116ca : call 0xffffffffb103a01c
0x00000000004244c9 : call 0xffffffffe904ce19
0x00000000004244c8 : call 0xffffffffe904ce1a
0x000000000043c2b9 : call qword ptr [r12 + rbx*8]
0x00000000004308c7 : call qword ptr [rax]
0x00000000004046a8 : call qword ptr [rbx]
0x000000000043a0ec : call qword ptr [rcx]
0x0000000000423954 : call qword ptr [rdi]
0x000000000041f93b : call qword ptr [rdx]
0x00000000004043a3 : call qword ptr [rsi]
0x000000000043c2ba : call qword ptr [rsp + rbx*8]
0x0000000000401bfd : call rax
0x0000000000421bbb : call rcx
0x0000000000423594 : call rdi
0x0000000000422dc5 : call rdx
0x0000000000412c2b : call rsp
0x000000000040bda0 : cdq ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040e036 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043a047 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000410ffc : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429657 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004369d9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401b9f : clc ; jne 0x401ba8 ; pop rbp ; ret
0x0000000000430e8e : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405acb : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416f9d : clc ; ret 0x77a8
0x0000000000407d07 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043662e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000043744d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042cc91 : cld ; and esp, dword ptr [rcx] ; ret 0xd709
0x000000000043d52e : cld ; dec dword ptr [rax + 6] ; ret
0x0000000000412caf : cld ; jmp 0x412d1c
0x0000000000412cae : cld ; jmp 0x412d1d
0x000000000043d9e2 : cld ; jmp qword ptr [rdx]
0x000000000043d4be : cld ; jmp rax
0x000000000042b10f : cld ; ret 0x281b
0x0000000000429f00 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004049e7 : cli ; ret
0x000000000043bfbc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000428e1b : cmc ; ret 0x4f0b
0x0000000000404b38 : cmp al, 0x25 ; cli ; ret
0x0000000000403d88 : cmp al, 0x25 ; lahf ; ret
0x0000000000403bb5 : cmp al, 0x25 ; pop rbx ; ret
0x0000000000403db7 : cmp al, 0x25 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000410123 : cmp al, 0x25 ; test cl, 0x43 ; add al, ch ; ret 0xff16
0x000000000040c283 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000428fb1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000042db97 : cmp dl, al ; ret
0x000000000042fc69 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000401b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b70 ; pop rbp ; ret
0x00000000004093d9 : cmp ebp, ecx ; ret
0x0000000000421867 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004307e2 : cwde ; add eax, 0x5d5b0000 ; ret
0x000000000042d052 : dec dword ptr [rax + 0x29] ; ret 0x9c0f
0x000000000043d52f : dec dword ptr [rax + 6] ; ret
0x0000000000404b35 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; cli ; ret
0x0000000000420d6b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004206de : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000420ee3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042a02d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000439ba6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040e68b : dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004128e5 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000410035 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404504 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041339b : dec dword ptr [rbx + 0x3d8b4830] ; ret
0x000000000040f4cc : dec dword ptr [rbx - 0x1e36b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000040917f : dec dword ptr [rbx - 0x2a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000411500 : dec dword ptr [rbx - 0xb76b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000407f82 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x0000000000428e16 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000409185 : dec dword ptr [rdi] ; ret 0x4589
0x00000000004271be : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000409ac1 : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffc], al ; ret 1
0x00000000004062ae : dec dword ptr [rdi] ; test byte ptr [rbp + rax], dl ; add cl, ch ; ret 1
0x000000000040884c : dec dword ptr [rdi] ; test byte ptr [rcx + rcx], al ; add cl, ch ; ret
0x000000000040bd9d : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffd], bl ; ret 1
0x0000000000416c7a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040f030 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffffa], cl ; ret 1
0x000000000041223f : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffb], al ; ret 1
0x0000000000409535 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004359be : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000040cd09 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004129a0 : enter -0x3f51, 0x49 ; ret
0x000000000041296f : enter -0x5d54, -0x2c ; ret 0xce9
0x0000000000409531 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004094e9 : enter -2, -1 ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000041437c : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000432d39 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439629 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414f79 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041096b : fadd dword ptr [rdi + rcx - 0x42] ; add cl, byte ptr [rax - 0x77] ; ret 0xb0
0x0000000000413f21 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004359a0 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000431ef5 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000403bd9 : fdivp st(7) ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x000000000043597f : fild word ptr [rcx - 0x77] ; ret
0x0000000000430a4b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000043a578 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000434407 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000405779 : fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000405811 : fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000040e855 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000434408 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000043c2bc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000043207d : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000433697 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x0000000000429303 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413f8f : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043496c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000415761 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401b70 : hlt ; pop rbp ; mov edi, 0x63f2e0 ; jmp rax
0x000000000042a02b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040921c : imul edx, dword ptr [rsp + rax*4 - 0x47], 0x60 ; ret 0x1d47
0x00000000004079c1 : in al, -0x17 ; ret 1
0x0000000000436d91 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000042d2e5 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004360ac : in al, dx ; jmp 0x436129
0x00000000004360ab : in al, dx ; jmp 0x43612a
0x0000000000404563 : in al, dx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404566 : in al, dx ; pop rbp ; ret
0x000000000040c5e4 : in eax, -0x5c ; adc eax, 0x148280a ; ret 0x8b48
0x0000000000412a5a : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x0000000000403765 : inc dword ptr [rcx + 0xf] ; ret
0x00000000004094ed : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000041299d : inc edi ; enter -0x3f51, 0x49 ; ret
0x000000000041296c : inc edi ; enter -0x5d54, -0x2c ; ret 0xce9
0x0000000000430919 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000403bdb : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x00000000004396e6 : insb byte ptr [rdi], dx ; ret
0x000000000042d656 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000040fb3f : insd dword ptr [rdi], dx ; ret 0x892e
0x000000000042d6aa : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000040fc26 : insd dword ptr [rdi], dx ; ret 0xb92e
0x0000000000426977 : int 0x5b
0x0000000000401b63 : ja 0x401b6a ; pop rbp ; ret
0x0000000000429efe : jb 0x429f2f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000414a3d : jbe 0x414a16 ; adc ch, cl ; ret
0x000000000043e0c1 : jbe 0x43e0c2 ; call qword ptr [rdx]
0x0000000000401b6f : je 0x401b6d ; pop rbp ; mov edi, 0x63f2e0 ; jmp rax
0x000000000043d6cd : je 0x43d6cf ; call qword ptr [rax]
0x000000000043e3b1 : jg 0x43e3b3 ; call rdx
0x0000000000411587 : jge 0x4115da ; add esp, 0xc0 ; pop rbp ; ret
0x000000000041fe06 : jge 0x41fd8b ; ret 0xffd5
0x00000000004208d0 : jge 0x4208b0 ; shr cl, cl ; ret 0x3b
0x0000000000404604 : jl 0x404611 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x0000000000412349 : jl 0x41237c ; ret
0x0000000000412884 : jl 0x4128b7 ; ret
0x000000000043e2b1 : jl 0x43e2b3 ; call rdi
0x000000000040180b : jmp 0x401687
0x0000000000408ed9 : jmp 0x4097a8
0x000000000040b5a4 : jmp 0x40b6c7
0x000000000040c355 : jmp 0x40c667
0x000000000041255a : jmp 0x412a8d
0x0000000000412cb0 : jmp 0x412d1b
0x0000000000421020 : jmp 0x4244a0
0x000000000041ef24 : jmp 0x4244a1
0x00000000004202f1 : jmp 0x4244a2
0x000000000042823b : jmp 0x428ca7
0x0000000000428178 : jmp 0x428ca9
0x000000000042a2a3 : jmp 0x42a308
0x000000000042cb13 : jmp 0x42cdbb
0x000000000042c48d : jmp 0x42cdbc
0x000000000042f91b : jmp 0x430a60
0x0000000000430336 : jmp 0x430a61
0x0000000000430b89 : jmp 0x430b94
0x0000000000432ea6 : jmp 0x433f69
0x0000000000432cc3 : jmp 0x433f6a
0x0000000000434100 : jmp 0x43410b
0x00000000004360ad : jmp 0x436128
0x0000000000439ee6 : jmp 0x43a1c8
0x0000000000404603 : jmp 0x4840498d
0x0000000000428e1a : jmp 0x4f4e5116
0x000000000043576f : jmp 0xffffffffc4078e36
0x0000000000423df5 : jmp qword ptr [rax]
0x000000000043dde3 : jmp qword ptr [rbx]
0x0000000000415bf2 : jmp qword ptr [rcx]
0x0000000000421aa7 : jmp qword ptr [rdi]
0x00000000004290aa : jmp qword ptr [rdx]
0x0000000000401b77 : jmp rax
0x00000000004203f8 : jmp rbx
0x0000000000420e2a : jmp rcx
0x0000000000420452 : jmp rdi
0x0000000000401bb7 : jmp rdx
0x000000000043e51b : jmp rsi
0x0000000000403f65 : jmp rsp
0x0000000000401ba0 : jne 0x401ba7 ; pop rbp ; ret
0x0000000000431ef6 : jne 0x431f71 ; ret 0x8589
0x000000000043207e : jne 0x4320f9 ; ret 0x8589
0x0000000000433698 : jne 0x433713 ; ret 0xedb9
0x00000000004338f0 : jne 0x43396b ; ret 0xedb9
0x0000000000411d59 : jnp 0x411d8c ; ret
0x000000000040ddfb : jo 0x40ddbb ; sbb byte ptr [rbx], 1 ; ret
0x0000000000411000 : jo 0x411061 ; ret
0x0000000000419d1e : jo 0x419d2a ; ret
0x000000000041b98e : jo 0x41b99a ; ret
0x000000000041eedd : jo 0x41eee9 ; ret
0x00000000004261c4 : jo 0x426225 ; ret
0x000000000042ccd5 : jo 0x42cce0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e251 : jp 0x43e253 ; jmp qword ptr [rbx]
0x0000000000413399 : jrcxz 0x4133a1 ; dec dword ptr [rbx + 0x3d8b4830] ; ret
0x0000000000414b56 : js 0x414bb7 ; ret
0x000000000040ad98 : lahf ; add al, 0 ; add byte ptr [rbx + 0x4f2dd045], cl ; ret
0x0000000000403d8a : lahf ; ret
0x00000000004208ce : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004219ce : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004134b6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f644 : lea edx, dword ptr [rax - 0x17000006] ; ret 0xfd24
0x0000000000416615 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004264b9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416614 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000410126 : leave ; add r8b, bpl ; ret 0xff16
0x00000000004093d4 : les r13d, ptr [r11 - 0x16c430de] ; ret
0x0000000000406a69 : les r9d, ptr [r15 - 0x28] ; ret
0x000000000041f22e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004085d3 : loop 0x408650 ; ret 0x8589
0x000000000040861e : loop 0x40869b ; ret 0x8589
0x0000000000408e6b : loop 0x408ee8 ; ret 0xd3b9
0x0000000000409676 : loop 0x4096f3 ; ret 0x24e9
0x000000000040e42e : loop 0x40e435 ; movzx eax, dl ; pop rbp ; ret
0x000000000040e42e : loop 0x40e437 ; movzx eax, dl ; pop rbp ; ret
0x000000000040c4da : loope 0x40c4e6 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422235 : loope 0x422203 ; jmp 0x4244a3
0x000000000040400f : loopne 0x403fde ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x000000000040400e : loopne 0x403fdf ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x000000000040966c : loopne 0x409675 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409d47 : loopne 0x409d98 ; mov esi, 0xbac144e5 ; ret 0x8deb
0x000000000040c949 : loopne 0x40c99b ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c948 : loopne 0x40c99c ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fd07 : loopne 0x40fd0e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416613 : loopne 0x416666 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425bbd : loopne 0x425c23 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426fa4 : loopne 0x426ff7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000427558 : loopne 0x42755f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429963 : loopne 0x42996c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a2ee : loopne 0x42a33e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042a2ed : loopne 0x42a33f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042ccd1 : loopne 0x42cd24 ; add esp, 0x470 ; pop rbp ; ret
0x000000000042d19c : loopne 0x42d130 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042d19b : loopne 0x42d131 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043426f : loopne 0x434203 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043426e : loopne 0x434204 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000434970 : loopne 0x434977 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436632 : loopne 0x436639 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043bffc : loopne 0x43c04b ; mov esp, ebp ; pop rbp ; ret
0x000000000043bffb : loopne 0x43c04c ; mov esp, ebp ; pop rbp ; ret
0x000000000043c24c : loopne 0x43c29b ; mov esp, ebp ; pop rbp ; ret
0x000000000043c24b : loopne 0x43c29c ; mov esp, ebp ; pop rbp ; ret
0x0000000000407e5c : mov ah, -0x18 ; mov ds, word ptr [rcx + 0x75b9ffff] ; ret
0x000000000041fdfd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041fed7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040ea49 : mov ah, 0x2d ; ret 0x1e43
0x000000000040db64 : mov ah, 0x2d ; sbb byte ptr [rbx], 1 ; ret
0x000000000041de85 : mov ah, 0x75 ; ret
0x0000000000426993 : mov al, -0x47 ; ret
0x000000000043e601 : mov al, -2 ; call rdx
0x00000000004396af : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433299 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040cd69 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004049df : mov al, al ; call 0x401829
0x000000000043a86d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043a53a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043a79d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417825 : mov bl, 0x75 ; ret
0x0000000000401bd3 : mov byte ptr [rip + 0x23d75e], 1 ; ret
0x000000000041f67f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043e621 : mov cl, -2 ; call qword ptr [rdx]
0x000000000040e431 : mov dh, -0x3e ; pop rbp ; ret
0x000000000040c4dd : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b504 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000043a356 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a540 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000412a71 : mov dh, 0x45 ; ror dword ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004127e0 : mov dh, 0x4d ; ror dword ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043bfba : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043b231 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000407e5e : mov ds, word ptr [rcx + 0x75b9ffff] ; ret
0x0000000000415d99 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040df1e : mov dword ptr [rax + 8], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041596f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b72a : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004360aa : mov dword ptr [rbp - 0x14], eax ; jmp 0x43612b
0x0000000000408ed6 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x4097ab
0x000000000040c352 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x40c66a
0x0000000000428238 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x428caa
0x0000000000407f83 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415481 : mov dword ptr [rbp - 0x94], ecx ; call 0x4016f8
0x00000000004154bc : mov dword ptr [rbp - 0xa0], ecx ; call 0x4016f8
0x0000000000429301 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d05 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416076 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e064 : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x0000000000415c1d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004047bb : mov eax, 0x12d118b ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000432ea7 : mov eax, 0xb8000010 ; ret
0x000000000040e875 : mov eax, dword ptr [rax + 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c94b : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a16b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d2e3 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404561 : mov eax, dword ptr [rbp - 0x14] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430c31 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042a33e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413abe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000435f25 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415d9c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042a2ec : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042d19a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043bffa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411bcf : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x38 ; pop rbp ; ret
0x0000000000414b50 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x0000000000415c1f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000413f8d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041575f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040e034 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ffa : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000430e8c : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405ac9 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415c1e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000422638 : mov ebp, 0xe19c53ba ; ret
0x0000000000401bfb : mov ebp, esp ; call rax
0x0000000000401b61 : mov ebp, esp ; ja 0x401b6c ; pop rbp ; ret
0x000000000041596c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c1ec : mov ecx, gs ; ret
0x000000000040ac34 : mov edi, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000401bf5 : mov edi, 0x63ee20 ; mov rbp, rsp ; call rax
0x0000000000401b72 : mov edi, 0x63f2e0 ; jmp rax
0x0000000000401bb2 : mov edi, 0x63f2e0 ; jmp rdx
0x000000000042f796 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000041eed7 : mov edi, 0xb8000055 ; wait ; jo 0x41eeef ; ret
0x000000000043c2b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043c2b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000439e5e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041f69b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000420512 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000439e47 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000409d49 : mov esi, 0xbac144e5 ; ret 0x8deb
0x000000000042ccea : mov esi, 0xe9411643 ; ret 0
0x0000000000401bb0 : mov esi, eax ; mov edi, 0x63f2e0 ; jmp rdx
0x0000000000404565 : mov esp, ebp ; pop rbp ; ret
0x000000000040df1d : mov qword ptr [rax + 8], rcx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b729 : mov qword ptr [rbp - 0x10], rax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004154bb : mov qword ptr [rbp - 0xa0], rcx ; call 0x4016f9
0x0000000000416075 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e063 : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x0000000000407e5b : mov r12b, -0x18 ; mov ds, word ptr [rcx + 0x75b9ffff] ; ret
0x000000000040ea48 : mov r12b, 0x2d ; ret 0x1e43
0x000000000040db63 : mov r12b, 0x2d ; sbb byte ptr [rbx], 1 ; ret
0x000000000042c1eb : mov r9d, gs ; ret
0x000000000040e874 : mov rax, qword ptr [rax + 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c94a : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a16a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042a33d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413abd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a2eb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411bce : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x38 ; pop rbp ; ret
0x0000000000414b4f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000040e033 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ff9 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405ac8 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401bfa : mov rbp, rsp ; call rax
0x0000000000401b60 : mov rbp, rsp ; ja 0x401b6d ; pop rbp ; ret
0x0000000000401baf : mov rsi, rax ; mov edi, 0x63f2e0 ; jmp rdx
0x0000000000404564 : mov rsp, rbp ; pop rbp ; ret
0x000000000042cce8 : mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x0000000000407f84 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000429f01 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000407f85 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x000000000042cce9 : mov word ptr [rsi - 0x16bee9bd], dr1 ; ret 0
0x0000000000435611 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000041b178 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040c5e5 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0x148280a ; ret 0x8b48
0x000000000041e3c5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000043b503 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000043a355 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a53f : movzx eax, al ; pop rbp ; ret
0x000000000040c4dc : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e430 : movzx eax, dl ; pop rbp ; ret
0x0000000000439c58 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403d82 : nop ; or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; lahf ; ret
0x0000000000403c8c : nop ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; outsb dx, byte ptr [rsi] ; ret
0x0000000000417665 : nop ; ret
0x0000000000425a72 : nop ; ret 0x148
0x0000000000425a86 : nop ; ret 0x2948
0x000000000043c2d8 : nop dword ptr [rax + rax] ; ret
0x0000000000403bb0 : or al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rbx ; ret
0x000000000043d6c9 : or al, 0 ; add byte ptr [rax], ah ; je 0x43d6d3 ; call qword ptr [rax]
0x0000000000404609 : or al, 0x25 ; ret
0x000000000041fdfa : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041fed4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000403d83 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; lahf ; ret
0x0000000000403db2 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004396df : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; insb byte ptr [rdi], dx ; ret
0x00000000004059fc : or al, byte ptr [rcx + 0xf] ; sahf ; ret 0x8445
0x0000000000435cd5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040e9bd : or byte ptr [r15], 0x84 ; ret
0x000000000040df20 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e24d : or byte ptr [rax], al ; add al, dl ; jp 0x43e257 ; jmp qword ptr [rbx]
0x0000000000403fe5 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000403f5d : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x0000000000427818 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000043dde0 : or byte ptr [rcx], 0xfd ; jmp qword ptr [rbx]
0x000000000040e9be : or byte ptr [rdi], 0x84 ; ret
0x0000000000403fe4 : or byte ptr cs:[rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x000000000040f81c : or cl, ch ; ret 0
0x0000000000435cd4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000410c25 : or dword ptr [rax - 0x46], ecx ; ret
0x0000000000407ae7 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000416074 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e2ad : or dword ptr [rax], eax ; add byte ptr [rax], ah ; jl 0x43e2b7 ; call rdi
0x0000000000408850 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040884f : or dword ptr [rax], r8d ; add cl, ch ; ret
0x000000000040a42e : or eax, 0x48000000 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000405dd1 : or eax, 0x48000000 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403c8d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; outsb dx, byte ptr [rsi] ; ret
0x000000000043dde1 : or ebp, edi ; jmp qword ptr [rbx]
0x000000000040c5e2 : or ecx, dword ptr [rdi - 0x1b] ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0x148280a ; ret 0x8b48
0x0000000000415c1b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004044c6 : or esp, dword ptr [rsi + 0x3d] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004217db : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043a53c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433e70 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000043a86f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426992 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000439e49 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403c94 : outsb dx, byte ptr [rsi] ; ret
0x00000000004228c5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000417516 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000422910 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004290a1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000439e4c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000429efc : pop ax ; jb 0x429f31 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000423779 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c2cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000425bbf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042377b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c2ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412933 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c2d0 : pop r14 ; pop r15 ; ret
0x0000000000416619 : pop r14 ; pop rbp ; ret
0x0000000000412935 : pop r15 ; pop rbp ; ret
0x000000000043c2d2 : pop r15 ; ret
0x0000000000429efd : pop rax ; jb 0x429f30 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040d9b6 : pop rax ; pop rbp ; ret
0x000000000043e498 : pop rax ; xchg dh, bh ; jmp qword ptr [rbx]
0x0000000000412b9f : pop rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401bd2 : pop rbp ; mov byte ptr [rip + 0x23d75e], 1 ; ret
0x0000000000401b71 : pop rbp ; mov edi, 0x63f2e0 ; jmp rax
0x0000000000401bae : pop rbp ; mov rsi, rax ; mov edi, 0x63f2e0 ; jmp rdx
0x000000000043c2cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042377c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c2cf : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041f682 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000041b955 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041f69e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b65 : pop rbp ; ret
0x0000000000425bbe : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412932 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416618 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004307e6 : pop rbx ; pop rbp ; ret
0x0000000000403bb7 : pop rbx ; ret
0x000000000041f683 : pop rcx ; ret 0x1b2
0x0000000000419d56 : pop rcx ; ret 0x8589
0x000000000041f69f : pop rcx ; ret 0x8b48
0x00000000004219d0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000412936 : pop rdi ; pop rbp ; ret
0x000000000043c2d3 : pop rdi ; ret
0x00000000004089ec : pop rdi ; ret 0x1d47
0x0000000000412934 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043c2d1 : pop rsi ; pop r15 ; ret
0x000000000041661a : pop rsi ; pop rbp ; ret
0x0000000000401bd5 : pop rsi ; xlatb ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000042377a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c2cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000425bc0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419d55 : pop rsp ; pop rcx ; ret 0x8589
0x000000000043b385 : popfq ; ret 0xd284
0x000000000041f680 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042186a : push -0x75425eeb ; push rbp ; ret
0x000000000041e3c8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000406cbb : push rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043d6c7 : push rax ; or al, 0 ; add byte ptr [rax], ah ; je 0x43d6d5 ; call qword ptr [rax]
0x0000000000405dd8 : push rax ; pop rbp ; ret
0x000000000040371d : push rax ; ret
0x000000000041096a : push rbp ; fadd dword ptr [rdi + rcx - 0x42] ; add cl, byte ptr [rax - 0x77] ; ret 0xb0
0x0000000000405778 : push rbp ; fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000405810 : push rbp ; fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000409d46 : push rbp ; loopne 0x409d99 ; mov esi, 0xbac144e5 ; ret 0x8deb
0x0000000000401bf4 : push rbp ; mov edi, 0x63ee20 ; mov rbp, rsp ; call rax
0x000000000042186f : push rbp ; ret
0x0000000000421806 : push rbp ; ret 0xd284
0x000000000041fdff : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041fed9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000439e4b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403bd8 : push rsp ; fdivp st(7) ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x0000000000413398 : push rsp ; jrcxz 0x4133a2 ; dec dword ptr [rbx + 0x3d8b4830] ; ret
0x0000000000413f27 : pushfq ; ret 0xd284
0x0000000000400688 : ret
0x00000000004005b0 : ret 0
0x0000000000425a73 : ret 0x148
0x00000000004229d4 : ret 0x1a
0x0000000000417c4d : ret 0x1add
0x000000000041f685 : ret 0x1b2
0x00000000004089ed : ret 0x1d47
0x000000000040ea4b : ret 0x1e43
0x000000000042af33 : ret 0x1e6f
0x00000000004114b8 : ret 0x21be
0x000000000040367e : ret 0x23bc
0x0000000000401a12 : ret 0x23d7
0x0000000000401812 : ret 0x23d8
0x000000000041859a : ret 0x23da
0x0000000000409678 : ret 0x24e9
0x0000000000425298 : ret 0x279e
0x000000000042b110 : ret 0x281b
0x0000000000407aea : ret 0x2948
0x00000000004219d4 : ret 0x2a
0x0000000000412b7a : ret 0x2bf
0x000000000041fe02 : ret 0x2d50
0x00000000004399ae : ret 0x3040
0x00000000004208d4 : ret 0x3b
0x000000000041d935 : ret 0x3e
0x0000000000401b33 : ret 0x43
0x0000000000409188 : ret 0x4589
0x0000000000420d71 : ret 0x4802
0x0000000000439e4e : ret 0x4815
0x000000000040912b : ret 0x4820
0x00000000004228c6 : ret 0x4861
0x000000000040a12b : ret 0x4880
0x000000000040a8e8 : ret 0x48e0
0x0000000000403557 : ret 0x48f0
0x000000000041b181 : ret 0x4b
0x0000000000426797 : ret 0x4cc0
0x00000000004237d8 : ret 0x4cf0
0x0000000000428e1c : ret 0x4f0b
0x0000000000415bcb : ret 0x5589
0x000000000042008a : ret 0x5966
0x0000000000427a77 : ret 0x5bc6
0x000000000043bfbf : ret 0x61
0x00000000004172e6 : ret 0x6a8a
0x0000000000416f9e : ret 0x77a8
0x0000000000418101 : ret 0x7a8a
0x000000000041ed7b : ret 0x7b7f
0x000000000042572a : ret 0x8041
0x0000000000410b6a : ret 0x80e8
0x0000000000412a5d : ret 0x8141
0x000000000040c865 : ret 0x8148
0x0000000000420c94 : ret 0x822d
0x0000000000403b70 : ret 0x8445
0x00000000004085d5 : ret 0x8589
0x00000000004126a9 : ret 0x858a
0x000000000040b8fc : ret 0x87f0
0x0000000000406705 : ret 0x8844
0x0000000000433529 : ret 0x8902
0x000000000040fb40 : ret 0x892e
0x0000000000417d13 : ret 0x8940
0x000000000042c2bd : ret 0x8941
0x000000000040acc1 : ret 0x8944
0x000000000040219c : ret 0x8945
0x000000000040deed : ret 0x8948
0x000000000043846f : ret 0x894a
0x0000000000417517 : ret 0x8961
0x000000000041265d : ret 0x89b9
0x000000000042e1b8 : ret 0x89f1
0x0000000000439a68 : ret 0x8a44
0x0000000000439965 : ret 0x8a4a
0x00000000004128e8 : ret 0x8b44
0x00000000004047c4 : ret 0x8b48
0x00000000004108e1 : ret 0x8b4c
0x00000000004085eb : ret 0x8be2
0x0000000000409d4e : ret 0x8deb
0x00000000004359a2 : ret 0x941
0x000000000042fdb5 : ret 0x9589
0x0000000000406a24 : ret 0x96e8
0x0000000000405c27 : ret 0x9b99
0x000000000042d055 : ret 0x9c0f
0x000000000042d657 : ret 0x9e6d
0x000000000041fedc : ret 0xa30b
0x0000000000435fef : ret 0xac60
0x000000000040571c : ret 0xb0
0x00000000004217e0 : ret 0xb740
0x0000000000403723 : ret 0xb841
0x000000000040c5de : ret 0xb848
0x000000000040fc27 : ret 0xb92e
0x000000000041fa10 : ret 0xb940
0x00000000004037b3 : ret 0xb945
0x00000000004398f2 : ret 0xb94a
0x0000000000430046 : ret 0xb9f1
0x0000000000421e5c : ret 0xbf48
0x0000000000401b95 : ret 0xc148
0x0000000000405d34 : ret 0xc189
0x000000000043a0a8 : ret 0xc2e8
0x000000000040e432 : ret 0xc35d
0x000000000043c202 : ret 0xc493
0x000000000043a4f9 : ret 0xca21
0x0000000000430905 : ret 0xca29
0x000000000043bfc5 : ret 0xccb2
0x0000000000412973 : ret 0xce9
0x0000000000404402 : ret 0xd284
0x0000000000408e6d : ret 0xd3b9
0x0000000000431715 : ret 0xd5f3
0x00000000004380b5 : ret 0xd618
0x0000000000411c69 : ret 0xd709
0x0000000000431cfe : ret 0xdc02
0x000000000040e42c : ret 0xe280
0x000000000042c2d1 : ret 0xe783
0x00000000004216b2 : ret 0xe940
0x0000000000422911 : ret 0xe961
0x000000000041873d : ret 0xea51
0x000000000043bfb7 : ret 0xea81
0x000000000043369a : ret 0xedb9
0x00000000004244cc : ret 0xee8
0x000000000042b474 : ret 0xefa6
0x0000000000415c05 : ret 0xf281
0x0000000000420517 : ret 0xf41
0x0000000000422465 : ret 0xf7f3
0x0000000000420bee : ret 0xfc75
0x000000000042f64a : ret 0xfd24
0x000000000042882a : ret 0xfd8f
0x000000000042a76f : ret 0xfe11
0x000000000041012a : ret 0xff16
0x00000000004035c7 : ret 0xff60
0x000000000042245f : ret 0xffa5
0x000000000040686a : ret 0xffb1
0x0000000000420be8 : ret 0xffc4
0x000000000041fe08 : ret 0xffd5
0x000000000041fee2 : ret 0xffd8
0x0000000000420c9a : ret 0xffd9
0x0000000000420084 : ret 0xffe0
0x000000000041ed75 : ret 0xfffa
0x0000000000415489 : ret 0xfffe
0x00000000004110f0 : ret 0xffff
0x0000000000405372 : ret 1
0x0000000000414181 : ret 2
0x00000000004270b0 : ret 4
0x0000000000412080 : ret 5
0x0000000000407039 : ret 6
0x0000000000423bd4 : ret 8
0x0000000000439e2d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000401db7 : rol byte ptr [rax + rax], 1 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x000000000040d253 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043694c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d38d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004341a5 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000043d4bc : rol byte ptr [rcx - 4], 1 ; jmp rax
0x0000000000439e2c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040a236 : rol dword ptr [rcx - 0x7f], -0x17 ; ret
0x0000000000407df7 : ror byte ptr [r15], -0x7c ; ret 0
0x0000000000429ef4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bab ; pop rbp ; ret
0x000000000043a357 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000415c1a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000407df8 : ror byte ptr [rdi], -0x7c ; ret 0
0x0000000000412a72 : ror dword ptr [r8 - 0x77], cl ; ret 0xb0
0x000000000040c4de : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040df1c : ror dword ptr [rax - 0x77], 1 ; or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040d1af : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040c862 : ror dword ptr [rax - 0x77], 1 ; ret 0x8148
0x00000000004127e2 : ror dword ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000426650 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004127e1 : ror qword ptr [r8 - 0x77], cl ; ret 0xb0
0x00000000004059ff : sahf ; ret 0x8445
0x0000000000414356 : sahf ; ret 0xd284
0x000000000043e0c0 : sal byte ptr [rsi - 3], 1 ; call qword ptr [rdx]
0x000000000042e27a : salc ; jmp qword ptr [rdi]
0x000000000042e1b6 : salc ; sti ; ret 0x89f1
0x000000000040f819 : sar byte ptr [rdi], 0x3b ; or cl, ch ; ret 0
0x000000000043e250 : sar byte ptr [rdx - 2], 1 ; jmp qword ptr [rbx]
0x0000000000401b9e : sar eax, 1 ; jne 0x401ba9 ; pop rbp ; ret
0x00000000004219d1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401b9d : sar rax, 1 ; jne 0x401baa ; pop rbp ; ret
0x0000000000401d7d : sbb al, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000426990 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000043e494 : sbb al, 0xb ; add byte ptr [rax], al ; pop rax ; xchg dh, bh ; jmp qword ptr [rbx]
0x0000000000430a4e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042fc6b : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x000000000040db66 : sbb byte ptr [rbx], 1 ; ret
0x00000000004218d1 : sbb cl, ch ; ret
0x0000000000429743 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dae3 : sbb eax, dword ptr [rcx] ; ret
0x00000000004259e0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000403db9 : scasd eax, dword ptr [rdi] ; ret
0x0000000000431cfd : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x000000000040e42a : sete dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x00000000004208d2 : shr cl, cl ; ret 0x3b
0x000000000041e70d : stc ; ret 0x77a8
0x000000000043df82 : std ; call qword ptr [rcx]
0x000000000043e0c2 : std ; call qword ptr [rdx]
0x000000000043dde2 : std ; jmp qword ptr [rbx]
0x0000000000425297 : std ; ret 0x279e
0x000000000042bae7 : std ; ret 0x281b
0x000000000042e1b7 : sti ; ret 0x89f1
0x0000000000430045 : sti ; ret 0xb9f1
0x00000000004093d6 : stosd dword ptr [rdi], eax ; and cl, bh ; cmp ebp, ecx ; ret
0x000000000043d52d : stosd dword ptr [rdi], eax ; cld ; dec dword ptr [rax + 6] ; ret
0x0000000000412dfe : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c5e8 : sub byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004360f6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412ce8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fe05 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041fdfb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041fed5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000420c95 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000429eff : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043c30d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043c30c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041fe00 : test al, -0x7f ; ret 0x2d50
0x000000000041feda : test al, -0x7f ; ret 0xa30b
0x000000000042f822 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439703 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fb3c : test al, 0x2d ; xchg eax, esp ; insd dword ptr [rdi], dx ; ret 0x892e
0x000000000042606e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000422636 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000428f98 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004271c0 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000409ac3 : test byte ptr [rax - 0x16fffffc], al ; ret 1
0x000000000043c2da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004062b0 : test byte ptr [rbp + rax], dl ; add cl, ch ; ret 1
0x000000000040884e : test byte ptr [rcx + rcx], al ; add cl, ch ; ret
0x000000000040bd9f : test byte ptr [rcx - 0x16fffffd], bl ; ret 1
0x0000000000416c7c : test byte ptr [rcx], ch ; ret 0
0x000000000040f032 : test byte ptr [rdi - 0x16fffffa], cl ; ret 1
0x0000000000412241 : test byte ptr [rdx - 0x16fffffb], al ; ret 1
0x0000000000410125 : test cl, 0x43 ; add al, ch ; ret 0xff16
0x0000000000416c76 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000435cd7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000435c97 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000435c12 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x00000000004308c3 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000043091b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000430882 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004290a6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004046a4 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rbx]
0x000000000040439f : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000403bdd : test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x0000000000403fe9 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rax
0x0000000000401dbc : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x0000000000403f61 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x0000000000433e75 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000425c8a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000042cb11 : test dword ptr [rdx], esp ; jmp 0x42cdbd
0x00000000004216ab : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042290a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041e3ca : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004228bf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004208cf : wait ; jge 0x4208b1 ; shr cl, cl ; ret 0x3b
0x000000000041b98d : wait ; jo 0x41b99b ; ret
0x000000000041eedc : wait ; jo 0x41eeea ; ret
0x000000000043e499 : xchg dh, bh ; jmp qword ptr [rbx]
0x0000000000439e48 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042cc33 : xchg eax, ebp ; ret
0x0000000000403b6f : xchg eax, ebp ; ret 0x8445
0x0000000000404401 : xchg eax, ebp ; ret 0xd284
0x0000000000417515 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041de15 : xchg eax, ebx ; ret
0x000000000043d4b8 : xchg eax, ecx ; add byte ptr [rax], al ; add al, dl ; cld ; jmp rax
0x000000000041e045 : xchg eax, ecx ; ret
0x00000000004393c9 : xchg eax, edi ; ret 0xd284
0x0000000000417895 : xchg eax, edx ; ret
0x000000000042573f : xchg eax, edx ; ret 0x8445
0x0000000000428f9e : xchg eax, edx ; ret 0xd284
0x00000000004058b2 : xchg eax, esi ; ret 0x8445
0x000000000040fb3e : xchg eax, esp ; insd dword ptr [rdi], dx ; ret 0x892e
0x000000000040fc25 : xchg eax, esp ; insd dword ptr [rdi], dx ; ret 0xb92e
0x000000000042823a : xchg eax, esp ; jmp 0x428ca8
0x0000000000428177 : xchg eax, esp ; jmp 0x428caa
0x00000000004228c4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041e195 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042290f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004359c0 : xchg eax, esp ; ret
0x0000000000425729 : xchg eax, esp ; ret 0x8041
0x00000000004094f0 : xchg eax, esp ; ret 0x8445
0x00000000004217de : xchg eax, esp ; ret 0xb740
0x000000000040aa1d : xchg eax, esp ; ret 0xd284
0x000000000040e42b : xchg eax, esp ; ret 0xe280
0x0000000000428239 : xchg eax, r12d ; jmp 0x428ca9
0x0000000000401bd6 : xlatb ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000042e20a : xlatb ; sti ; ret 0x89f1
0x0000000000430044 : xlatb ; sti ; ret 0xb9f1
0x00000000004396e4 : xor al, 0x25 ; insb byte ptr [rdi], dx ; ret
0x0000000000403c92 : xor al, 0x25 ; outsb dx, byte ptr [rsi] ; ret
0x00000000004217d9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040371a : xor al, byte ptr [rcx - 0x48] ; push rax ; ret
0x0000000000416077 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000416078 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004089e4 : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx + 0x5f2dc045], cl ; ret 0x1d47
