0x0000000000480857 : adc al, -8 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000049f23d : adc al, 0 ; add ah, dh ; ja 0x49f244 ; call rsp
0x000000000043610c : adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000040c749 : adc al, 0x6a ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000049f1c5 : adc al, byte ptr [rax] ; add byte ptr [rdx + rdi*2 - 7], dh ; jmp rsp
0x000000000047f9a2 : adc al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000415f7f : adc bh, al ; int1 ; ret
0x00000000004866a9 : adc bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000049f145 : adc byte ptr [rax], al ; add ah, ah ; jno 0x49f14a ; jmp rsp
0x000000000043c1cf : adc byte ptr [rcx + 0x50], bh ; ret 0x8589
0x000000000044d57b : adc byte ptr [rcx + 0x50], bh ; ret 0xd4b9
0x00000000004a07e0 : adc ch, bh ; sti ; call rdi
0x000000000047adf4 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000449783 : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000042f9de : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000045b319 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x000000000042f351 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000421c5d : adc dl, byte ptr [rdx - 0x1464ade] ; ret
0x000000000049f185 : adc dword ptr [rax], eax ; add ah, al ; ja 0x49f18a ; jmp rsp
0x000000000045849b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004186d3 : adc dword ptr [rax], eax ; add byte ptr [rbx - 0x9d227bb], cl ; ret
0x000000000048e632 : adc dword ptr [rdx - 0x2b], edi ; jno 0x48e5f7 ; ror dword ptr [rcx], 1 ; ret
0x00000000004304db : adc eax, 0x558abda1 ; ret
0x000000000044d0c6 : adc eax, 0x58b90f17 ; ret 0xb2ee
0x0000000000486e09 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000433ab9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004a07dd : adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; std ; sti ; call rdi
0x000000000049f205 : adc eax, dword ptr [rax] ; add byte ptr [rbp + rdi*2 - 7], dh ; jmp rsp
0x0000000000415f34 : adc eax, edi ; int1 ; ret
0x00000000004867c7 : adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000401ef4 : adc ebp, dword ptr [rdx] ; jmp rax
0x0000000000401f34 : adc ebp, dword ptr [rdx] ; jmp rdx
0x00000000004116b6 : adc ebp, ecx ; ret
0x00000000004116b5 : adc ebp, r9d ; ret
0x000000000049f147 : add ah, ah ; jno 0x49f148 ; jmp rsp
0x000000000049f187 : add ah, al ; ja 0x49f188 ; jmp rsp
0x000000000049f23f : add ah, dh ; ja 0x49f242 ; call rsp
0x0000000000452cf5 : add al, -0x17 ; mov ecx, 0xb8000031 ; jmp rsi
0x00000000004040ca : add al, 0 ; add byte ptr [rbx + 0x6e2de045], cl ; ret 0x8ad2
0x00000000004040f6 : add al, 0 ; add byte ptr [rbx + 0x742de045], cl ; ret
0x000000000045a7d6 : add al, 0 ; add cl, ch ; ret 1
0x00000000004a07dc : add al, 0x13 ; add byte ptr [rax], al ; adc ch, bh ; sti ; call rdi
0x000000000041bee6 : add al, 0x25 ; ret 0x49e1
0x000000000046234a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000487c19 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000482289 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000044e8b8 : add al, bh ; test dword ptr [rdx + rdi*8 - 0x70b00001], eax ; ret 0xe9f9
0x00000000004a0087 : add al, bl ; stc ; jmp qword ptr [rdi]
0x0000000000403d1a : add al, byte ptr [rax] ; add bh, al ; pushfq ; cmp al, -0x76 ; ret
0x00000000004641a9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000481967 : add al, ch ; ret
0x000000000041c878 : add al, ch ; ret 0xfe55
0x00000000004656a1 : add al, ch ; stc ; ret 0xfff9
0x0000000000405a45 : add al, ch ; xchg eax, ebp ; ret
0x000000000049fb2f : add al, dl ; clc ; call qword ptr [rdx]
0x000000000049fcbf : add al, dl ; stc ; jmp qword ptr [rbx]
0x000000000048175b : add bh, al ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000403d1c : add bh, al ; pushfq ; cmp al, -0x76 ; ret
0x0000000000403f30 : add bh, al ; pushfq ; in eax, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe96c
0x000000000047f4cd : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000047e255 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x0000000000483a54 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x0000000000486933 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000487e23 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x0000000000486e0b : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000047a896 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004806e0 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000047d352 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000484f47 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000482377 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000047f22e : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000048737f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000047d819 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000465c25 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000458174 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044979f : add bh, al ; test dword ptr [rdx + rdi*8 + 0x7528ffff], eax ; ret
0x0000000000430319 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000049d3df : add bl, dh ; ret
0x00000000004687b2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000468a14 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000484c40 : add byte ptr [rax + 0x29], cl ; ret 0xb848
0x000000000049fe3f : add byte ptr [rax + 0x53], dh ; stc ; call qword ptr [rbx]
0x000000000049ff07 : add byte ptr [rax + 0x58], bl ; stc ; jmp qword ptr [rbx]
0x000000000049ffe7 : add byte ptr [rax + 0x63], bh ; stc ; jmp qword ptr [rax]
0x000000000049fd1b : add byte ptr [rax + rcx], al ; add byte ptr [rax], ah ; stc ; call rdi
0x000000000040b34c : add byte ptr [rax - 0x6bf10000], ah ; ret
0x000000000041bee3 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x49e1
0x00000000004047c6 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x49e4
0x0000000000434a7b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468c7a : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041ded7 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000487317 : add byte ptr [rax - 0x77], cl ; ret 0x70e8
0x000000000041169c : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000047fc7f : add byte ptr [rax - 0x77], cl ; ret 0x8e8
0x00000000004219e3 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000049fd1f : add byte ptr [rax], ah ; stc ; call rdi
0x00000000004a07de : add byte ptr [rax], al ; adc ch, bh ; sti ; call rdi
0x00000000004a07da : add byte ptr [rax], al ; add al, 0x13 ; add byte ptr [rax], al ; adc ch, bh ; sti ; call rdi
0x0000000000403f2e : add byte ptr [rax], al ; add bh, al ; pushfq ; in eax, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe96c
0x0000000000465c23 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000458172 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000049d3dd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000484c3e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000468c78 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041eb49 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000049d3db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000436b9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004009e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000436b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004009e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047f65b : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004219e4 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000041eade : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000433522 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042204b : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040410c : add byte ptr [rax], al ; add byte ptr [rbx + 0x6f2de045], cl ; ret 0x8ad2
0x0000000000404138 : add byte ptr [rax], al ; add byte ptr [rbx + 0x752de045], cl ; ret
0x0000000000415e7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x772dd845], cl ; jmp rdx
0x00000000004369b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000404a1d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe2db445], cl ; ret 0xafc3
0x0000000000404a5f : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2db445], cl ; ret 0xafc3
0x0000000000421b5a : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x0000000000456933 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000045e418 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000045e3d6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000415cbc : add byte ptr [rax], al ; add byte ptr [rbx - 0x3fd227bb], cl ; ret
0x000000000041282e : add byte ptr [rax], al ; add byte ptr [rbx - 0x41d20fbb], cl ; ret 0x4194
0x0000000000419835 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4fd227bb], cl ; ret
0x0000000000414bd7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50d227bb], cl ; ret
0x0000000000435ede : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x00000000004646ac : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000468f5c : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x0000000000468eac : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000041672f : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d227bb], cl ; ret 0xda17
0x0000000000459299 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041871e : add byte ptr [rax], al ; add byte ptr [rbx - 0x8d227bb], cl ; ret
0x000000000048e9c1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x000000000041d865 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000044bed9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408020 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000045ad9e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000048ec5b : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x00000000004889f9 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret 0xd609
0x0000000000498895 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004147b7 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b48
0x00000000004687b3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000048eb9e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x0000000000468a15 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000486fb4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000453655 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000044d89c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000467b81 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040f8d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000455b6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000466c98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000047e8bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040583e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045bd8a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004618c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000045806a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405cd4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000435bf5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045da48 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040c74b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000433140 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045849d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000466088 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045be1c : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040192b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049fd1e : add byte ptr [rax], al ; and byte ptr [rsi - 7], cl ; call rdi
0x00000000004656a0 : add byte ptr [rax], al ; call 0x4019a4
0x00000000004a0336 : add byte ptr [rax], al ; call 0xffffffffd849fea2
0x00000000004a0086 : add byte ptr [rax], al ; fsub dword ptr [rbp - 7] ; jmp qword ptr [rdi]
0x000000000049f23e : add byte ptr [rax], al ; hlt ; ja 0x49f243 ; call rsp
0x00000000004a06ba : add byte ptr [rax], al ; in al, 0x11 ; add byte ptr [rax], al ; loopne 0x4a0685 ; sti ; call qword ptr [rsi]
0x000000000049f146 : add byte ptr [rax], al ; in al, 0x71 ; stc ; jmp rsp
0x000000000049f106 : add byte ptr [rax], al ; je 0x49f175 ; stc ; jmp rsp
0x000000000049f1c6 : add byte ptr [rax], al ; je 0x49f249 ; stc ; jmp rsp
0x000000000049f206 : add byte ptr [rax], al ; je 0x49f28c ; stc ; jmp rsp
0x0000000000401b49 : add byte ptr [rax], al ; jmp 0x401949
0x000000000043c605 : add byte ptr [rax], al ; jmp 0x4488dc
0x000000000045b86c : add byte ptr [rax], al ; jmp 0x45b921
0x000000000046dd5c : add byte ptr [rax], al ; jmp 0x479fa7
0x000000000049fe3e : add byte ptr [rax], al ; jo 0x49fe9a ; stc ; call qword ptr [rbx]
0x000000000049ffe6 : add byte ptr [rax], al ; js 0x4a0052 ; stc ; jmp qword ptr [rax]
0x00000000004a0082 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, bl ; stc ; jmp qword ptr [rdi]
0x00000000004a06be : add byte ptr [rax], al ; loopne 0x4a0681 ; sti ; call qword ptr [rsi]
0x00000000004a047e : add byte ptr [rax], al ; mov al, -0x7d ; sti ; call qword ptr [rdx]
0x000000000049fe1e : add byte ptr [rax], al ; mov al, 0x51 ; stc ; call rdx
0x00000000004687f8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045bb79 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045eba5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043624a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043667d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004368f9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004364d1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000469021 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000468c79 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041eb4a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a047a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; mov al, -0x7d ; sti ; call qword ptr [rdx]
0x000000000049ffe2 : add byte ptr [rax], al ; or al, 0xb ; add byte ptr [rax], al ; js 0x4a0056 ; stc ; jmp qword ptr [rax]
0x000000000049fd1a : add byte ptr [rax], al ; or byte ptr [rax], r8b ; add byte ptr [rax], ah ; stc ; call rdi
0x000000000049fe3a : add byte ptr [rax], al ; or dword ptr fs:[rax], eax ; add byte ptr [rax + 0x53], dh ; stc ; call qword ptr [rbx]
0x000000000049f90e : add byte ptr [rax], al ; out -9, eax ; jmp qword ptr [rax]
0x000000000049ff06 : add byte ptr [rax], al ; pop rax ; pop rax ; stc ; jmp qword ptr [rbx]
0x0000000000402535 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c1f3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042204c : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004009e6 : add byte ptr [rax], al ; ret
0x000000000049fb2e : add byte ptr [rax], al ; ror byte ptr [rax - 8], 1 ; call qword ptr [rdx]
0x00000000004a0376 : add byte ptr [rax], al ; sbb byte ptr [rbx - 5], ah ; jmp rsi
0x000000000049ff02 : add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; pop rax ; pop rax ; stc ; jmp qword ptr [rbx]
0x000000000049f086 : add byte ptr [rax], al ; xor al, 0x4c ; stc ; call rsp
0x000000000049f90a : add byte ptr [rax], al ; xor al, 4 ; add byte ptr [rax], al ; out -9, eax ; jmp qword ptr [rax]
0x00000000004a0377 : add byte ptr [rax], bl ; movsxd rdi, ebx ; jmp rsi
0x00000000004a07df : add byte ptr [rax], dl ; std ; sti ; call rdi
0x0000000000404ebb : add byte ptr [rbp + 0x7d], -0x17 ; ret 0
0x000000000049f207 : add byte ptr [rbp + rdi*2 - 7], dh ; jmp rsp
0x000000000047f65d : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004219e6 : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000414274 : add byte ptr [rbp - 0x77], cl ; ret 0x2149
0x0000000000415f2f : add byte ptr [rbx + 0x112dd845], cl ; clc ; int1 ; ret
0x0000000000415f7a : add byte ptr [rbx + 0x122dd845], cl ; clc ; int1 ; ret
0x000000000041eae0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000040c1f4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042204d : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408813 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004111cb : add byte ptr [rbx + 0x452d9445], cl ; ret
0x0000000000411216 : add byte ptr [rbx + 0x462d9445], cl ; ret
0x00000000004040cc : add byte ptr [rbx + 0x6e2de045], cl ; ret 0x8ad2
0x000000000040410e : add byte ptr [rbx + 0x6f2de045], cl ; ret 0x8ad2
0x00000000004040f8 : add byte ptr [rbx + 0x742de045], cl ; ret
0x000000000040413a : add byte ptr [rbx + 0x752de045], cl ; ret
0x0000000000415e35 : add byte ptr [rbx + 0x762dd845], cl ; jmp rdx
0x0000000000415e80 : add byte ptr [rbx + 0x772dd845], cl ; jmp rdx
0x00000000004369b4 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000404a1f : add byte ptr [rbx + 0xe2db445], cl ; ret 0xafc3
0x0000000000404a61 : add byte ptr [rbx + 0xf2db445], cl ; ret 0xafc3
0x00000000004a0083 : add byte ptr [rbx + rcx + 0x65d80000], ch ; stc ; jmp qword ptr [rdi]
0x000000000049ffe3 : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], al ; js 0x4a0055 ; stc ; jmp qword ptr [rax]
0x00000000004a07db : add byte ptr [rbx + rdx], al ; add byte ptr [rax], al ; adc ch, bh ; sti ; call rdi
0x0000000000421b5c : add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x0000000000405d1e : add byte ptr [rbx - 0x1eb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041d7ab : add byte ptr [rbx - 0x2134b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000456935 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004568ea : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041de78 : add byte ptr [rbx - 0x2934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000045e41a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x000000000045e3d8 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000415cbe : add byte ptr [rbx - 0x3fd227bb], cl ; ret
0x0000000000415c73 : add byte ptr [rbx - 0x40d227bb], cl ; ret
0x0000000000412830 : add byte ptr [rbx - 0x41d20fbb], cl ; ret 0x4194
0x0000000000419837 : add byte ptr [rbx - 0x4fd227bb], cl ; ret
0x0000000000414bd9 : add byte ptr [rbx - 0x50d227bb], cl ; ret
0x0000000000435ee0 : add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x00000000004646ae : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000468f5e : add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x0000000000468eae : add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x0000000000416731 : add byte ptr [rbx - 0x65d227bb], cl ; ret 0xda17
0x00000000004166e6 : add byte ptr [rbx - 0x66d227bb], cl ; ret 0xda17
0x000000000045bb7a : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x000000000045eba6 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004687f9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000045929b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000418720 : add byte ptr [rbx - 0x8d227bb], cl ; ret
0x00000000004186d5 : add byte ptr [rbx - 0x9d227bb], cl ; ret
0x000000000048e9c3 : add byte ptr [rcx + 0x29], al ; ret
0x00000000004a0203 : add byte ptr [rcx + 0x68980000], ch ; stc ; call qword ptr [rdx]
0x00000000004a01e3 : add byte ptr [rcx + 0x68980000], cl ; stc ; call qword ptr [rdx]
0x000000000041d867 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000044bedb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408022 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000044d82e : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x000000000047a945 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x000000000045ada0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000049fe3b : add byte ptr [rcx + rcx], ah ; add byte ptr [rax + 0x53], dh ; stc ; call qword ptr [rbx]
0x000000000048ec5d : add byte ptr [rcx - 0x7f], al ; ret
0x00000000004889fb : add byte ptr [rcx], ah ; ret 0xd609
0x000000000041fac9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c63c : add byte ptr [rcx], al ; add cl, ch ; xchg eax, esp ; ret 0
0x0000000000401f58 : add byte ptr [rcx], al ; ret
0x0000000000498897 : add byte ptr [rcx], al ; ret 0x6348
0x00000000004147b9 : add byte ptr [rcx], al ; ret 0x8b48
0x00000000004687b5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000048eba0 : add byte ptr [rcx], ch ; ret
0x0000000000468a17 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000486fb6 : add byte ptr [rcx], ch ; ret 0x8840
0x0000000000453657 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004a047b : add byte ptr [rdi + rcx - 0x7c500000], ah ; sti ; call qword ptr [rdx]
0x00000000004a045b : add byte ptr [rdi + rcx - 0x7d100000], al ; sti ; call rdx
0x000000000044d89e : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000043692a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000467b83 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040f8da : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000455b6f : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000466c9a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000047e8be : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405840 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045bd8c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004618c7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000045806c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405cd6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000435bf7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045da4a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000049ff03 : add byte ptr [rdx + rcx], ch ; add byte ptr [rax], al ; pop rax ; pop rax ; stc ; jmp qword ptr [rbx]
0x000000000049f1c7 : add byte ptr [rdx + rdi*2 - 7], dh ; jmp rsp
0x000000000040d3b9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049fb2b : add byte ptr [rsi + rax], dl ; add al, dl ; clc ; call qword ptr [rdx]
0x00000000004a0373 : add byte ptr [rsi + rcx + 0x63180000], bl ; sti ; jmp rsi
0x000000000049f107 : add byte ptr [rsi - 7], dh ; jmp rsp
0x000000000049f90b : add byte ptr [rsp + rax], dh ; add byte ptr [rax], al ; out -9, eax ; jmp qword ptr [rax]
0x000000000049f087 : add byte ptr [rsp + rcx*2], dh ; stc ; call rsp
0x000000000043044c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043c526 : add cl, ch ; lodsb al, byte ptr [rsi] ; ret
0x000000000046dc0d : add cl, ch ; nop ; ret
0x000000000046dc45 : add cl, ch ; pop rax ; ret
0x000000000043c676 : add cl, ch ; pop rsp ; ret 0
0x0000000000405136 : add cl, ch ; ret
0x0000000000410384 : add cl, ch ; ret 0
0x0000000000417e06 : add cl, ch ; ret 0x1a
0x0000000000404366 : add cl, ch ; ret 1
0x000000000043c63e : add cl, ch ; xchg eax, esp ; ret 0
0x0000000000405bc7 : add dword ptr [rax - 0x75], ecx ; loopne 0x405b60 ; add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x00000000004047c4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x49e4
0x0000000000410382 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x00000000004118ab : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043c63d : add dword ptr [rax], eax ; jmp 0x4488dc
0x000000000046dcb4 : add dword ptr [rax], eax ; jmp 0x479fa7
0x000000000048212f : add dword ptr [rbp + 0x48b97d43], ebp ; ret
0x0000000000404ea2 : add dword ptr [rcx + 8], eax ; ret 0x845
0x0000000000404e81 : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x0000000000404ecb : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467d02 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000410db1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466d3e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044c84f : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x0000000000401f54 : add eax, 0x29f43e ; add ebx, esi ; ret
0x000000000045a7d5 : add eax, 0xe9000004 ; ret 1
0x000000000040fca2 : add eax, 0xf6b80000 ; jmp qword ptr [rsi]
0x000000000046569f : add eax, 0xf9e80000 ; ret 0xfff9
0x0000000000487e21 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000045dd6d : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000421042 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401f1b : add eax, edx ; sar rax, 1 ; jne 0x401f2c ; pop rbp ; ret
0x0000000000401f59 : add ebx, esi ; ret
0x0000000000436017 : add edi, eax ; in al, -0x55 ; ret
0x0000000000482225 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000047ea98 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x000000000040228b : add esp, 0x10 ; pop rbp ; ret
0x000000000041fac7 : add esp, 0x100 ; pop rbp ; ret
0x00000000004048ba : add esp, 0x130 ; pop rbp ; ret
0x0000000000412db4 : add esp, 0x150 ; pop rbp ; ret
0x000000000049c9e1 : add esp, 0x1750 ; pop rbp ; ret
0x000000000041ea4a : add esp, 0x190 ; pop rbp ; ret
0x000000000045834c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040c674 : add esp, 0x20 ; pop rbp ; ret
0x000000000040d3b7 : add esp, 0x200 ; pop rbp ; ret
0x00000000004121db : add esp, 0x230 ; pop rbp ; ret
0x000000000041f456 : add esp, 0x30 ; pop rbp ; ret
0x0000000000403ef1 : add esp, 0x320 ; pop rbp ; ret
0x000000000040d524 : add esp, 0x40 ; pop rbp ; ret
0x0000000000462549 : add esp, 0x440 ; pop rbp ; ret
0x0000000000420582 : add esp, 0x50 ; pop rbp ; ret
0x000000000040ff63 : add esp, 0x510 ; pop rbp ; ret
0x0000000000402246 : add esp, 0x60 ; pop rbp ; ret
0x0000000000434e32 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402531 : add esp, 0x80 ; pop rbp ; ret
0x0000000000458b1d : add esp, 0x90 ; pop rbp ; ret
0x0000000000435c16 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041ffc8 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000422abb : add esp, 0xc0 ; pop rbp ; ret
0x000000000041c8a1 : add esp, 0xcf0 ; pop rbp ; ret
0x00000000004230e8 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004648fe : add esp, 0xe0 ; pop rbp ; ret
0x000000000045f37f : add esp, 0xf0 ; pop rbp ; ret
0x00000000004243d3 : add esp, 8 ; pop rbp ; ret
0x000000000040192e : add esp, 8 ; ret
0x0000000000401f1a : add rax, rdx ; sar rax, 1 ; jne 0x401f2d ; pop rbp ; ret
0x000000000040228a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041fac6 : add rsp, 0x100 ; pop rbp ; ret
0x00000000004048b9 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000412db3 : add rsp, 0x150 ; pop rbp ; ret
0x000000000049c9e0 : add rsp, 0x1750 ; pop rbp ; ret
0x000000000041ea49 : add rsp, 0x190 ; pop rbp ; ret
0x000000000045834b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040c673 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040d3b6 : add rsp, 0x200 ; pop rbp ; ret
0x00000000004121da : add rsp, 0x230 ; pop rbp ; ret
0x000000000041f455 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403ef0 : add rsp, 0x320 ; pop rbp ; ret
0x000000000040d523 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000462548 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000420581 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040ff62 : add rsp, 0x510 ; pop rbp ; ret
0x0000000000402245 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000434e31 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402530 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000458b1c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000435c15 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041ffc7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000422aba : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041c8a0 : add rsp, 0xcf0 ; pop rbp ; ret
0x00000000004230e7 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004648fd : add rsp, 0xe0 ; pop rbp ; ret
0x000000000045f37e : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004243d2 : add rsp, 8 ; pop rbp ; ret
0x000000000040192d : add rsp, 8 ; ret
0x0000000000410381 : add word ptr [rax], ax ; add cl, ch ; ret 0
0x000000000046dcb2 : and al, 0x32 ; add dword ptr [rax], eax ; jmp 0x479fa9
0x00000000004687bd : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000410db0 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466d3d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000049f831 : and bh, dh ; jmp qword ptr [rbx]
0x0000000000403ef3 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043610e : and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000458fcb : and byte ptr [rsi + 0x58], ah ; jb 0x459002 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000049fd20 : and byte ptr [rsi - 7], cl ; call rdi
0x0000000000401f76 : and byte ptr [rsi], cl ; push 0 ; mov rbp, rsp ; call rax
0x000000000043610d : and byte ptr ds:[rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000482a77 : and dl, byte ptr [rdi] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000404c0c : and dword ptr [rbp - 0x3df046bc], edi ; ret
0x000000000042f681 : and eax, 0x75b4b9d3 ; ret
0x0000000000482374 : and eax, 0xc700005e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000489f3c : and ebx, dword ptr [rbx + 0x6a] ; ret 0x8589
0x00000000004656a2 : call 0x4019a2
0x0000000000405894 : call 0x401af2
0x0000000000458370 : call 0x401af9
0x0000000000465975 : call 0x401bc2
0x000000000040f341 : call 0x401c87
0x000000000045d209 : call 0x459422
0x00000000004593c5 : call 0x459489
0x000000000045f882 : call 0xffffffff8a264e1b
0x0000000000465f7d : call 0xffffffffaca721b1
0x0000000000465f7c : call 0xffffffffaca721b2
0x00000000004532e0 : call 0xffffffffc3e0ec04
0x00000000004545db : call 0xffffffffc84545e3
0x00000000004a0338 : call 0xffffffffd849fea0
0x0000000000433139 : call 0xffffffffe905ba89
0x0000000000433138 : call 0xffffffffe905ba8a
0x000000000040b59e : call 0xfffffffff2c1e9a1
0x000000000040e993 : call 0xfffffffffc756f2a
0x000000000041e76b : call 0xffffffffffb26d3d
0x000000000041e76a : call 0xffffffffffb26d3e
0x000000000049d3b9 : call qword ptr [r12 + rbx*8]
0x0000000000408822 : call qword ptr [rax]
0x000000000040ffc4 : call qword ptr [rbx]
0x000000000044d7b3 : call qword ptr [rcx]
0x00000000004325c4 : call qword ptr [rdi]
0x000000000042e5ab : call qword ptr [rdx]
0x000000000045517f : call qword ptr [rsi]
0x000000000049d3ba : call qword ptr [rsp + rbx*8]
0x0000000000407c03 : call r10
0x0000000000401f7d : call rax
0x000000000040d817 : call rbx
0x0000000000407b76 : call rcx
0x0000000000407a20 : call rdi
0x0000000000407c04 : call rdx
0x000000000045deac : call rsi
0x00000000004866af : call rsp
0x00000000004166eb : cdq ; ret 0xda17
0x00000000004186d2 : clc ; adc dword ptr [rax], eax ; add byte ptr [rbx - 0x9d227bb], cl ; ret
0x0000000000436680 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d522 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000462547 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004565c6 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000458727 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000045c159 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000049fb32 : clc ; call qword ptr [rdx]
0x0000000000444d27 : clc ; hlt ; ret
0x00000000004811d6 : clc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000480858 : clc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000415f35 : clc ; int1 ; ret
0x0000000000401f1f : clc ; jne 0x401f28 ; pop rbp ; ret
0x0000000000412216 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000045b72b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000436aab : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436a8b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000434a7f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c373 : clc ; out -0x55, al ; ret
0x0000000000436be7 : clc ; pop rbp ; ret
0x0000000000405c59 : clc ; pop rbx ; pop rbp ; ret
0x000000000044fbcb : clc ; ret 0x1bb9
0x0000000000444b4b : clc ; ret 0x3ee4
0x000000000045515d : clc ; ret 0x50e9
0x0000000000425c0d : clc ; ret 0x77a8
0x000000000043c295 : clc ; ret 0x8589
0x000000000044bd02 : clc ; sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004022b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000435e55 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004665be : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000045f37d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000436205 : cld ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041ba2a : cld ; jmp 0x41cbc3
0x000000000041ba29 : cld ; jmp 0x41cbc4
0x000000000041eb0f : cld ; jmp 0x41eb7c
0x000000000041eb0e : cld ; jmp 0x41eb7d
0x000000000045bb7d : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c2cd : cld ; ret 0x8589
0x000000000044d19f : cld ; ret 0x8b48
0x0000000000458373 : cli ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000458fd0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000421a1c : cli ; ret
0x00000000004687bc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040e62c : cmc ; jmp qword ptr [rsi]
0x0000000000411a15 : cmc ; ret
0x0000000000457eeb : cmc ; ret 0x4f0b
0x000000000043c603 : cmp ah, ah ; add byte ptr [rax], al ; jmp 0x4488de
0x000000000040339d : cmp al, -0x76 ; ret
0x0000000000415c71 : cmp al, 0 ; add byte ptr [rbx - 0x40d227bb], cl ; ret
0x00000000004047c9 : cmp al, 0x25 ; ret 0x49e4
0x0000000000415e33 : cmp al, byte ptr [rax] ; add byte ptr [rbx + 0x762dd845], cl ; jmp rdx
0x00000000004311a8 : cmp al, ch ; ret 0xfd0c
0x000000000044bed7 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000045ad9c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000049b167 : cmp byte ptr [rcx - 0x1f743], al ; call qword ptr [rax]
0x000000000044c341 : cmp cl, byte ptr [rbx - 0x34] ; jmp 0x455ebd
0x000000000044d576 : cmp cl, byte ptr [rcx + 0x10b80000] ; jns 0x44d5d6 ; ret 0xd4b9
0x0000000000458081 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000455b6b : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000417e04 : cmp dword ptr [rax], eax ; add cl, ch ; ret 0x1a
0x00000000004209fb : cmp dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x000000000041fe09 : cmp eax, 0x45c6a0d8 ; ret
0x000000000048c8db : cmp eax, 0xb8000025 ; mov ebp, ecx ; ret
0x0000000000401edd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ef0 ; pop rbp ; ret
0x000000000049b991 : cmp eax, 0xe9b845c2 ; ret
0x000000000048cf6f : cmp edi, ebp ; cwde ; jmp 0x48ee25
0x00000000004304d7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000046f8fa : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcc39
0x0000000000403462 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x896c
0x0000000000403b30 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xb96c
0x000000000046f94e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xcc39
0x0000000000403f35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe96c
0x0000000000415e32 : cwde ; cmp al, byte ptr [rax] ; add byte ptr [rbx + 0x762dd845], cl ; jmp rdx
0x000000000048cf71 : cwde ; jmp 0x48ee23
0x000000000048c8d9 : cwde ; jmp 0x48ee25
0x000000000045b506 : cwde ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000483345 : cwde ; ret 0x2eb9
0x000000000046ea54 : cwde ; ret 0x8589
0x00000000004640cf : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000004058a4 : dec dword ptr [rax - 0x1b86b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000458374 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000047adf1 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000449780 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000042f9db : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000042f34e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000486d80 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000045550b : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x46], ecx ; ret 0xb7cc
0x000000000042fb53 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004867c4 : dec dword ptr [rax - 0x77] ; adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000436206 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045decd : dec dword ptr [rax - 0x77] ; jge 0x45ded0 ; pop rbp ; ret
0x000000000046430f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040bedc : dec dword ptr [rax - 0x77] ; ret 0x3be8
0x000000000040b314 : dec dword ptr [rax - 0x77] ; ret 0x3e8
0x000000000040bfc5 : dec dword ptr [rax - 0x77] ; ret 0x52e8
0x000000000040b6c2 : dec dword ptr [rax - 0x77] ; ret 0x55e8
0x000000000040c2b3 : dec dword ptr [rax - 0x77] ; ret 0x64e8
0x000000000040b4af : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x000000000040c0ae : dec dword ptr [rax - 0x77] ; ret 0x69e8
0x000000000040f735 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004058aa : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000044bd05 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000412d87 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x000000000041438a : dec dword ptr [rax - 0x77] ; ret 0x8de8
0x000000000040bd79 : dec dword ptr [rax - 0x77] ; ret 0x9ee8
0x00000000004047ac : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b628 : dec dword ptr [rax - 0x77] ; ret 0xefe8
0x000000000044ce6e : dec dword ptr [rax - 0x7d] ; ret 0x4817
0x000000000048eed0 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000048ee9e : dec dword ptr [rax - 0x7f] ; ret 0x20
0x000000000040863e : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000408339 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000048d498 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000463f12 : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000044c522 : dec dword ptr [rax - 1] ; ret 0x8b48
0x0000000000407880 : dec dword ptr [rax - 1] ; ret 0xc8be
0x000000000040fa8b : dec dword ptr [rax - 9] ; fmul dword ptr [rax + 0x29] ; ret 0x8548
0x000000000049afac : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000044dadb : dec dword ptr [rbx + 0x1f02931] ; ret 0x9589
0x000000000045ac60 : dec dword ptr [rbx - 0x34b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000045b098 : dec dword ptr [rbx - 0x36b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000045b234 : dec dword ptr [rbx - 0x3736b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000449c90 : dec dword ptr [rbx - 0x69] ; jmp 0x455ebb
0x00000000004535fe : dec dword ptr [rbx - 0x7e05d6c2] ; ret 1
0x000000000048d10b : dec dword ptr [rcx - 0x7628d639] ; ret 0xea81
0x000000000049a51e : dec dword ptr [rcx - 0x7f] ; ret
0x000000000049a5ce : dec dword ptr [rcx - 0x7f] ; ret 1
0x0000000000457ee6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040f8d6 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044e8be : dec dword ptr [rdi - 0x71] ; ret 0xe9f9
0x000000000044fb83 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000045ac66 : dec dword ptr [rdi] ; ret 0x4589
0x000000000046dc07 : dec dword ptr [rdi] ; test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000477137 : dec dword ptr [rdi] ; test al, bl ; ret
0x000000000048f002 : dec dword ptr [rdi] ; test bl, ch ; ret
0x00000000004192ff : dec dword ptr [rdi] ; test byte ptr [rax - 0x16ffffd7], ch ; ret
0x0000000000442bb8 : dec dword ptr [rdi] ; test byte ptr [rax], bl ; ret
0x000000000042103e : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000046dd57 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x0000000000448878 : dec dword ptr [rdi] ; test byte ptr [rbx], bl ; ret 0
0x000000000043c670 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x33], cl ; add byte ptr [rax], al ; jmp 0x4488e1
0x0000000000447228 : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; ret
0x0000000000417e00 : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; cmp dword ptr [rax], eax ; add cl, ch ; ret 0x1a
0x00000000004796bb : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret
0x00000000004258ea : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000043c638 : dec dword ptr [rdi] ; test byte ptr [rdi], ch ; add dword ptr [rax], eax ; jmp 0x4488e1
0x000000000043c590 : dec dword ptr [rdi] ; test byte ptr [rdx + rdx*8 + 0x3ce90000], bl ; ret
0x000000000046dcaf : dec dword ptr [rdi] ; test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x479fac
0x0000000000439b90 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; ret 1
0x000000000043cef8 : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; ret 0
0x000000000045a7d2 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], al ; ret 1
0x000000000043e4a0 : dec dword ptr [rdi] ; test byte ptr [rsi], bh ; ret
0x000000000043ce88 : dec dword ptr [rdi] ; test ch, cl ; ret 0
0x0000000000442cd0 : dec dword ptr [rdi] ; test dh, ah ; ret 0
0x0000000000446380 : dec dword ptr [rdi] ; test dh, bl ; ret
0x000000000047200f : dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000049c2ff : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x000000000046594e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000461ed3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000486bb9 : dec ebp ; or ch, dh ; ret 0xdae9
0x0000000000444cd3 : div esp ; ret
0x0000000000463372 : enter -0x74b8, 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041059e : enter -0x76b8, -0x14 ; pop rbp ; ret
0x0000000000461b29 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004147bf : enter 0x18b, -0x7f ; ret 0xe674
0x0000000000423be9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041c9ee : fadd qword ptr [r15 - 0x16bfe0e2] ; ret
0x000000000041c9ef : fadd qword ptr [rdi - 0x16bfe0e2] ; ret
0x0000000000465930 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000442bb6 : fdivp st(7) ; dec dword ptr [rdi] ; test byte ptr [rax], bl ; ret
0x0000000000442cce : fdivp st(7) ; dec dword ptr [rdi] ; test dh, ah ; ret 0
0x0000000000483d2c : fdivr st(7), st(0) ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000048ea6d : fild dword ptr [rcx - 0x7f] ; ret 8
0x000000000046590f : fild word ptr [rcx - 0x77] ; ret
0x0000000000483ff2 : fincstp ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000049b156 : fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x0000000000413e63 : fisubr dword ptr [rsi + 0x1d] ; ret 0x558b
0x00000000004133d0 : fisubr dword ptr [rsi + 0x1d] ; ret 0x8589
0x000000000047a894 : fld dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000466d78 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041337c : fldcw word ptr [rsi + 0x1d] ; ret 0x8589
0x0000000000464397 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000040fa8e : fmul dword ptr [rax + 0x29] ; ret 0x8548
0x000000000041bee0 : fmul dword ptr [rax + rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x49e1
0x0000000000464398 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000488342 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000492f4d : fmul dword ptr [rdx - 0x6a] ; ret
0x000000000049d3bc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004a0088 : fsub dword ptr [rbp - 7] ; jmp qword ptr [rdi]
0x0000000000410464 : fsub st(1), st(0) ; ret
0x00000000004198f4 : fsub st(1), st(0) ; ret 0x32
0x00000000004358a5 : fsubr st(0) ; ret 0xfffc
0x0000000000402289 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046698c : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004648fc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004243d1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x000000000049f240 : hlt ; ja 0x49f241 ; call rsp
0x0000000000410fad : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000401ef0 : hlt ; pop rbp ; mov edi, 0x6a1340 ; jmp rax
0x0000000000444cd4 : hlt ; ret
0x0000000000442cd3 : hlt ; ret 0
0x0000000000401f56 : hlt ; sub dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004857d2 : idiv byte ptr [rcx + rsi*8 - 0x17] ; ret
0x00000000004590fb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000421d4d : imul cl ; ret
0x000000000043601a : in al, -0x55 ; ret
0x000000000047fe18 : in al, -0x7f ; ret 0xfff7
0x00000000004a06bc : in al, 0x11 ; add byte ptr [rax], al ; loopne 0x4a0683 ; sti ; call qword ptr [rsi]
0x000000000040c6c5 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000045e341 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000049f148 : in al, 0x71 ; stc ; jmp rsp
0x00000000004048c4 : in al, 0x75 ; ret
0x000000000044fbca : in al, dx ; clc ; ret 0x1bb9
0x000000000045515c : in al, dx ; clc ; ret 0x50e9
0x000000000043c294 : in al, dx ; clc ; ret 0x8589
0x0000000000403461 : in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x896c
0x000000000046603c : in al, dx ; jmp 0x4660b9
0x000000000046603b : in al, dx ; jmp 0x4660ba
0x0000000000404ed1 : in al, dx ; pop rbp ; ret
0x000000000047200d : in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000483424 : in eax, -9 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000046dd5b : in eax, 0 ; add cl, ch ; ret 0
0x0000000000403541 : in eax, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x896c
0x0000000000403b2f : in eax, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xb96c
0x0000000000403f34 : in eax, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe96c
0x000000000047beac : in eax, dx ; ret 0
0x0000000000421f76 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000044d82b : inc dword ptr [rax + 0xf41003f] ; xchg eax, ebp ; ret 0x8845
0x0000000000421dc5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040b8ee : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000463cab : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000498922 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000487203 : inc dword ptr [rax] ; ret
0x000000000047a964 : inc dword ptr [rbp + 0xf] ; ret
0x0000000000455b69 : inc dword ptr [rcx + 0x39] ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000044d898 : inc dword ptr [rcx + 0x3e] ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004825eb : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000040378d : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040fa7a : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xf41
0x000000000047fe12 : inc dword ptr [rcx - 0x1cb46e16] ; in al, -0x7f ; ret 0xfff7
0x00000000004556ef : inc dword ptr [rcx - 0x7f] ; out dx, al ; ret
0x000000000048ea66 : inc dword ptr [rcx - 0x7f] ; ret 0xc350
0x000000000048610a : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000048495d : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004864c6 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x00000000004814ae : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x00000000004871fd : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x0000000000485d65 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004811d7 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000486a65 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x000000000047f1d9 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004871b5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000047eb1e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x0000000000455a2a : inc edi ; test dword ptr [rdx + rdi*8 + 0x3ffdffff], eax ; ret 0x48be
0x000000000049f1c3 : inc esp ; adc al, byte ptr [rax] ; add byte ptr [rdx + rdi*2 - 7], dh ; jmp rsp
0x000000000049f143 : inc esp ; adc byte ptr [rax], al ; add ah, ah ; jno 0x49f14c ; jmp rsp
0x000000000049f183 : inc esp ; adc dword ptr [rax], eax ; add ah, al ; ja 0x49f18c ; jmp rsp
0x000000000049f203 : inc esp ; adc eax, dword ptr [rax] ; add byte ptr [rbp + rdi*2 - 7], dh ; jmp rsp
0x000000000049f103 : inc esp ; sldt word ptr [rax] ; je 0x49f178 ; stc ; jmp rsp
0x00000000004355e7 : int 0x5b
0x000000000044dde3 : int 0x80
0x00000000004219e2 : int1 ; add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000415f36 : int1 ; ret
0x0000000000496811 : int1 ; ret 0x43ce
0x000000000049bfd5 : int1 ; ret 0x81e9
0x0000000000492edf : int1 ; ret 0x8589
0x000000000049bf6f : int1 ; ret 0x8b48
0x0000000000495e01 : int1 ; xchg eax, esp ; ret
0x000000000040588d : iretd ; mov dword ptr [rbp - 0x1b8], esi ; call 0x401af9
0x000000000047f4ca : iretd ; mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000401ee3 : ja 0x401eea ; pop rbp ; ret
0x0000000000418c6b : ja 0x418cda ; ret 0x8946
0x000000000041ae5b : ja 0x41aeca ; ret 0xb946
0x000000000049f189 : ja 0x49f186 ; jmp rsp
0x000000000049f241 : ja 0x49f240 ; call rsp
0x000000000043c304 : jb 0x43c33a ; ret
0x000000000043c303 : jb 0x43c33b ; ret
0x000000000043c358 : jb 0x43c38e ; ret
0x000000000043c357 : jb 0x43c38f ; ret
0x0000000000449fac : jb 0x449fe2 ; ret
0x0000000000449fab : jb 0x449fe3 ; ret
0x0000000000458fce : jb 0x458fff ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000418c20 : jbe 0x418c8f ; ret 0x8946
0x000000000046ea1b : jbe 0x46ea5f ; ret 0x8589
0x000000000046ea6f : jbe 0x46eab3 ; ret 0x8589
0x000000000047e3cb : jbe 0x47e40f ; ret 0x1db9
0x0000000000486f35 : jbe 0x486f79 ; ret 0x8948
0x0000000000401eef : je 0x401eed ; pop rbp ; mov edi, 0x6a1340 ; jmp rax
0x000000000043c671 : je 0x4493c8 ; jmp 0x4488e0
0x000000000043c601 : je 0x44aa47 ; jmp 0x4488e0
0x000000000043c6a9 : je 0x44adce ; jmp 0x4488e0
0x000000000043c639 : je 0x44c6b6 ; jmp 0x4488e0
0x000000000046dd58 : je 0x47c2f9 ; jmp 0x479fab
0x000000000046dcb0 : je 0x480ee2 ; jmp 0x479fab
0x000000000046dd90 : je 0x483534 ; jmp 0x479fab
0x000000000046dce8 : je 0x485aae ; jmp 0x479fab
0x000000000046dd20 : je 0x486903 ; jmp 0x479fab
0x000000000049f108 : je 0x49f173 ; stc ; jmp rsp
0x000000000049f1c8 : je 0x49f247 ; stc ; jmp rsp
0x000000000049f208 : je 0x49f28a ; stc ; jmp rsp
0x0000000000406b2d : jg 0x406b23 ; ret 0x8991
0x0000000000408411 : jg 0x408407 ; ret 0xb991
0x0000000000463eb0 : jg 0x463ec4 ; xchg eax, edi ; ret 0xd284
0x0000000000466901 : jg 0x466915 ; xchg eax, edi ; ret 0xd284
0x0000000000487544 : jg 0x487513 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000404ebd : jge 0x404eaa ; ret 0
0x0000000000404ebc : jge 0x404eab ; ret 0
0x000000000041e455 : jge 0x41e4ac ; ret 0x89b9
0x000000000041e8d5 : jge 0x41e92c ; ret 0xb2b9
0x000000000041e8f1 : jge 0x41e948 ; ret 0x48b9
0x000000000042ea76 : jge 0x42e9fb ; ret 0xffd5
0x000000000042f540 : jge 0x42f520 ; shr cl, cl ; ret 0x3b
0x00000000004358a4 : jge 0x435882 ; call 0x401af4
0x0000000000436a8a : jge 0x436a8b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000436aaa : jge 0x436aab ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000045b72a : jge 0x45b72d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000045ded0 : jge 0x45decd ; pop rbp ; ret
0x0000000000482132 : jge 0x4820f0 ; ret
0x0000000000482131 : jge 0x4820f1 ; ret
0x0000000000492edd : jge 0x492e7c ; int1 ; ret 0x8589
0x000000000049f209 : jge 0x49f206 ; jmp rsp
0x000000000041e321 : jl 0x41e378 ; ret 0x89b9
0x000000000040603d : jle 0x406033 ; ret 0x8991
0x0000000000492f31 : jle 0x492ed0 ; int1 ; ret 0x8589
0x000000000049bf6d : jle 0x49bf0c ; int1 ; ret 0x8b48
0x000000000049bfd3 : jle 0x49bf72 ; int1 ; ret 0x81e9
0x0000000000401b4b : jmp 0x401947
0x0000000000403285 : jmp 0x40324b
0x0000000000403ddb : jmp 0x403da1
0x000000000040389b : jmp 0x404007
0x0000000000403dd5 : jmp 0x404008
0x0000000000404548 : jmp 0x404943
0x00000000004047c2 : jmp 0x404945
0x00000000004079da : jmp 0x408b1f
0x0000000000407742 : jmp 0x408b21
0x000000000040fd90 : jmp 0x410221
0x000000000041ba2b : jmp 0x41cbc2
0x0000000000419f40 : jmp 0x41cbc3
0x000000000041a900 : jmp 0x41cbc4
0x000000000041bedf : jmp 0x41cbc5
0x000000000041e8ca : jmp 0x41ea73
0x000000000041eb10 : jmp 0x41eb7b
0x000000000042fc90 : jmp 0x433110
0x000000000042db94 : jmp 0x433111
0x000000000042ef61 : jmp 0x433112
0x000000000043c607 : jmp 0x4488da
0x00000000004532df : jmp 0x4532ce
0x0000000000449bcf : jmp 0x455eb6
0x0000000000449c94 : jmp 0x455eb7
0x0000000000449c93 : jmp 0x455eb8
0x000000000044a5dc : jmp 0x455eba
0x0000000000452cf6 : jmp 0x455ebb
0x000000000045730b : jmp 0x457d77
0x0000000000457248 : jmp 0x457d79
0x0000000000459373 : jmp 0x4593d8
0x000000000045b86e : jmp 0x45b91f
0x000000000045d6b9 : jmp 0x45deb9
0x00000000004623e6 : jmp 0x4626c8
0x000000000046603d : jmp 0x4660b8
0x0000000000468fe7 : jmp 0x469038
0x000000000046dcb6 : jmp 0x479fa5
0x000000000047beab : jmp 0x48819f
0x000000000047e77d : jmp 0x4881a3
0x000000000047b32b : jmp 0x4881a4
0x000000000047c112 : jmp 0x4881a5
0x000000000048cf72 : jmp 0x48ee22
0x000000000048c044 : jmp 0x48ee23
0x000000000048c8da : jmp 0x48ee24
0x000000000049a45e : jmp 0x49d364
0x0000000000499550 : jmp 0x49d365
0x0000000000457eea : jmp 0x4f5141e6
0x000000000041c64d : jmp 0xffffffffc37b8a0f
0x00000000004656ff : jmp 0xffffffffc40a8dc6
0x00000000004869b6 : jmp 0xfffffffff6c9dfc5
0x00000000004869b5 : jmp 0xfffffffff6c9dfc6
0x0000000000432a65 : jmp qword ptr [rax]
0x0000000000452f48 : jmp qword ptr [rbx]
0x000000000040b5a6 : jmp qword ptr [rcx]
0x000000000040ff1a : jmp qword ptr [rdi]
0x000000000044c928 : jmp qword ptr [rdx]
0x000000000040e62d : jmp qword ptr [rsi]
0x000000000045515a : jmp qword ptr [rsp + rbp*8 + 0x50e9c2f8]
0x000000000044491b : jmp r14
0x0000000000401ef7 : jmp rax
0x000000000041e9fb : jmp rbx
0x00000000004089c3 : jmp rcx
0x000000000040bd30 : jmp rdi
0x0000000000401f37 : jmp rdx
0x000000000044491c : jmp rsi
0x000000000040f16d : jmp rsp
0x0000000000401f20 : jne 0x401f27 ; pop rbp ; ret
0x00000000004358a0 : jne 0x43587e ; mov rdi, qword ptr [rbp - 0x28] ; call 0x401af8
0x000000000041aa18 : jno 0x41aa4a ; or al, 0xffffffffffffffb9 ; ret 0xf8e1
0x000000000048e635 : jno 0x48e5f4 ; ror dword ptr [rcx], 1 ; ret
0x000000000049f149 : jno 0x49f146 ; jmp rsp
0x0000000000458371 : jnp 0x458312 ; cli ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000043c17c : jns 0x43c1d0 ; ret 0x8589
0x000000000043c1d0 : jns 0x43c224 ; ret 0x8589
0x000000000044d57c : jns 0x44d5d0 ; ret 0xd4b9
0x000000000042898e : jo 0x42899a ; ret
0x000000000042a5fe : jo 0x42a60a ; ret
0x000000000042db4d : jo 0x42db59 ; ret
0x0000000000434e34 : jo 0x434e95 ; ret
0x0000000000436a8f : jo 0x436af0 ; ret
0x0000000000436a8e : jo 0x436af1 ; ret
0x000000000049fe40 : jo 0x49fe98 ; stc ; call qword ptr [rbx]
0x00000000004806de : jp 0x4806e8 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000048e633 : jp 0x48e610 ; jno 0x48e5f6 ; ror dword ptr [rcx], 1 ; ret
0x000000000049f1c9 : jp 0x49f1c6 ; jmp rsp
0x000000000049ffe8 : js 0x4a0050 ; stc ; jmp qword ptr [rax]
0x000000000044d8a0 : lahf ; ret 0xd284
0x000000000047ea9e : lcall ptr [rbx + 0x47] ; ret
0x000000000042f53e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000047d81f : lcall ptr [rdx] ; ret 0x4fab
0x000000000043063e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000041f316 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004117ad : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414700 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c57 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004117ac : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405c56 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411a13 : leave ; cmc ; ret
0x000000000045e41f : leave ; ret 0x86f8
0x000000000044d2c2 : ljmp ptr [rax] ; ret 0xeb2b
0x0000000000486f33 : ljmp ptr [rcx] ; jbe 0x486f7b ; ret 0x8948
0x0000000000449afa : ljmp ptr [rcx] ; or eax, 0xb0e9b409 ; ret
0x000000000042de9e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004a0084 : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, bl ; stc ; jmp qword ptr [rdi]
0x000000000043c223 : lodsb al, byte ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8589
0x000000000043c528 : lodsb al, byte ptr [rsi] ; ret
0x0000000000421041 : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000482130 : lodsd eax, dword ptr [rsi] ; jge 0x4820f2 ; ret
0x000000000043c277 : lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8589
0x000000000045449b : lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8948
0x000000000044b5fb : lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8cb9
0x000000000041c64b : loop 0x41c5e7 ; jmp 0xffffffffc37b8a11
0x000000000043e5b2 : loop 0x43e546 ; test dword ptr [rax + rbp*8 - 0x7bf00001], eax ; ret 0x108
0x0000000000404eca : loope 0x404ed6 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430ea5 : loope 0x430e73 ; jmp 0x433113
0x0000000000403eef : loopne 0x403f42 ; add esp, 0x320 ; pop rbp ; ret
0x00000000004040cf : loopne 0x404101 ; outsb dx, byte ptr [rsi] ; ret 0x8ad2
0x00000000004040ce : loopne 0x404102 ; outsb dx, byte ptr [rsi] ; ret 0x8ad2
0x0000000000404111 : loopne 0x404143 ; outsd dx, dword ptr [rsi] ; ret 0x8ad2
0x0000000000404110 : loopne 0x404144 ; outsd dx, dword ptr [rsi] ; ret 0x8ad2
0x0000000000405bcb : loopne 0x405b5c ; add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x0000000000405bca : loopne 0x405b5d ; add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x000000000041c876 : loopne 0x41c82c ; add al, ch ; ret 0xfe55
0x0000000000425283 : loopne 0x4252d6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043482d : loopne 0x434893 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000435c14 : loopne 0x435c67 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000458a33 : loopne 0x458a3c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004593be : loopne 0x45940e ; add esp, 0x60 ; pop rbp ; ret
0x00000000004593bd : loopne 0x45940f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004628ec : loopne 0x462880 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004628eb : loopne 0x462881 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000464900 : loopne 0x464907 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004665c2 : loopne 0x4665c9 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004687fc : loopne 0x46884b ; mov esp, ebp ; pop rbp ; ret
0x00000000004687fb : loopne 0x46884c ; mov esp, ebp ; pop rbp ; ret
0x0000000000468a4c : loopne 0x468a9b ; mov esp, ebp ; pop rbp ; ret
0x0000000000468a4b : loopne 0x468a9c ; mov esp, ebp ; pop rbp ; ret
0x000000000048896f : loopne 0x488903 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048896e : loopne 0x488904 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a06c0 : loopne 0x4a067f ; sti ; call qword ptr [rsi]
0x000000000047d3d0 : mov ah, -0x50 ; out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000042ea6d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042eb47 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000049f23c : mov ah, 0x14 ; add byte ptr [rax], al ; hlt ; ja 0x49f245 ; call rsp
0x0000000000404ac2 : mov ah, 0x2d ; ret
0x0000000000404a7a : mov ah, 0x2d ; ret 0xc0db
0x000000000042caf5 : mov ah, 0x75 ; ret
0x000000000049f084 : mov ah, 0xd ; add byte ptr [rax], al ; xor al, 0x4c ; stc ; call rsp
0x000000000043c33b : mov ah, bl ; ret
0x0000000000403c6f : mov al, -0x39 ; pushfq ; cmp al, -0x76 ; ret
0x0000000000435603 : mov al, -0x47 ; ret
0x00000000004a0480 : mov al, -0x7d ; sti ; call qword ptr [rdx]
0x0000000000461baf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ffca : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000498030 : mov al, 0x21 ; ret 0x8941
0x000000000049fe20 : mov al, 0x51 ; stc ; call rdx
0x000000000046706d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000466d3a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000466f9d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000449ba1 : mov ax, 0xce9 ; ret
0x0000000000449d84 : mov ax, 0xd9b9 ; ret
0x000000000043692c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000048c042 : mov bh, -0x6d ; jmp 0x48ee25
0x0000000000436204 : mov bh, -4 ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004532de : mov bl, -0x15 ; call 0xffffffffc3e0ec06
0x000000000047d3d5 : mov bl, -0x2e ; ret 0x1b2
0x000000000046ea8b : mov bl, -0x2e ; ret 0x8589
0x000000000047d3f1 : mov bl, -0x2e ; ret 0x8b48
0x0000000000426495 : mov bl, 0x75 ; ret
0x000000000041ded3 : mov byte ptr [r8 - 0x75], r9b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041ded4 : mov byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412217 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004556f9 : mov byte ptr [rcx - 0x7f], -0x3a ; ret
0x0000000000401f53 : mov byte ptr [rip + 0x29f43e], 1 ; ret
0x000000000042e2ef : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000488df4 : mov ch, cl ; ret
0x000000000047b329 : mov cl, 0x13 ; jmp 0x4881a6
0x000000000048dcfa : mov cl, 0x13 ; ret 0x1ab9
0x000000000048eb13 : mov cl, 0x13 ; ret 0x1e9
0x0000000000489f59 : mov cl, 0x13 ; ret 0x8589
0x000000000041c64a : mov dh, -0x1e ; xchg eax, esp ; jmp 0xffffffffc37b8a12
0x0000000000404ecd : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467d04 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000405c54 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410db3 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466d40 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004687ba : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000467a31 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000424a09 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004245df : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000046603a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4660bb
0x000000000040588e : mov dword ptr [rbp - 0x1b8], esi ; call 0x401af8
0x000000000040c6c3 : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043589f : mov dword ptr [rbp - 0x2c], esi ; mov rdi, qword ptr [rbp - 0x28] ; call 0x401af9
0x0000000000407bfd : mov dword ptr [rbp - 0x488], eax ; call r10
0x000000000047bed8 : mov dword ptr [rbp - 0x49c], eax ; jmp 0x4881a5
0x000000000040891b : mov dword ptr [rbp - 0x4ec], eax ; call r10
0x0000000000449bc9 : mov dword ptr [rbp - 0x57c], eax ; jmp 0x455ebc
0x0000000000403898 : mov dword ptr [rbp - 0x64], eax ; jmp 0x40400a
0x0000000000457308 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x457d7a
0x0000000000402287 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004022b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045decf : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000424ce6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b72c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042488d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004811d4 : mov eax, 0xc7fff807 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043644e : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ded6 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045923b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000468dcd : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000436be1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045940e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f452 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042057e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000436047 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424a0c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004593bc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004628ea : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004687fa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042488f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000469024 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000045b504 : mov eax, dword ptr [rbp - 0x68] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045d203 : mov eax, dword ptr [rbp - 0x70] ; mov rdi, qword ptr [rax] ; call 0x459428
0x00000000004243cf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000410fab : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000435e53 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000045bb7b : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004565c4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434a7d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468c7c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436aad : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436a8d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042488e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000043624c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041059d : mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000045668a : mov eax, ecx ; pop rbp ; ret
0x000000000043667f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004368fb : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004364d3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c0d : mov ebp, 0xc20fb944 ; ret
0x00000000004312a8 : mov ebp, 0xe19c53ba ; ret
0x0000000000465970 : mov ebp, 0xffffff5c ; call 0x401bc7
0x000000000048bbac : mov ebp, ecx ; ret
0x0000000000401f7b : mov ebp, esp ; call rax
0x0000000000401ee1 : mov ebp, esp ; ja 0x401eec ; pop rbp ; ret
0x0000000000498152 : mov ebx, 0x214efb6f ; ret 0x8941
0x000000000049ae1e : mov ebx, 0x81ffffff ; ret 0x8ae1
0x0000000000452cf7 : mov ecx, 0xb8000031 ; jmp rsi
0x00000000004245dc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000449fa7 : mov edi, 0x4db80000 ; jb 0x449fe7 ; ret
0x0000000000401f75 : mov edi, 0x6a0e20 ; mov rbp, rsp ; call rax
0x0000000000401ef2 : mov edi, 0x6a1340 ; jmp rax
0x0000000000401f32 : mov edi, 0x6a1340 ; jmp rdx
0x000000000042db47 : mov edi, 0xb8000055 ; wait ; jo 0x42db5f ; ret
0x000000000045d207 : mov edi, dword ptr [rax] ; call 0x459424
0x00000000004358a3 : mov edi, dword ptr [rbp - 0x28] ; call 0x401af5
0x000000000046596f : mov edi, dword ptr [rbp - 0xa4] ; call 0x401bc8
0x0000000000436aa9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436a89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000049d3b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000049d3b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000049cb7c : mov edx, 0x2144b57b ; ret 0x8941
0x000000000046235e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042e30b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000044b5f6 : mov edx, 0xb80000a8 ; lodsd eax, dword ptr [rsi] ; pop rsp ; xchg eax, edx ; ret 0x8cb9
0x000000000049cd91 : mov edx, 0xe9b9f505 ; ret
0x000000000040d520 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436be5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042f182 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000462347 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401f30 : mov esi, eax ; mov edi, 0x6a1340 ; jmp rdx
0x000000000044d0e3 : mov esp, 0x4f58b945 ; ret 0xb2ee
0x0000000000468f1f : mov esp, 0xb898e02d ; ret
0x00000000004806dd : mov esp, 0xc700007a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000404ed0 : mov esp, ebp ; pop rbp ; ret
0x000000000043c38f : mov esp, ebx ; ret
0x000000000045dece : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000424ce5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404ac1 : mov r12b, 0x2d ; ret
0x0000000000404a79 : mov r12b, 0x2d ; ret 0xc0db
0x0000000000468f1e : mov r12d, 0xb898e02d ; ret
0x0000000000403c6e : mov r8b, -0x39 ; pushfq ; cmp al, -0x76 ; ret
0x000000000041ded5 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045923a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000436be0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045940d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f451 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042057d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004593bb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000469023 : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000045d202 : mov rax, qword ptr [rbp - 0x70] ; mov rdi, qword ptr [rax] ; call 0x459429
0x00000000004565c3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000434a7c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000468c7b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436aac : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436a8c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041059c : mov rax, rcx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401f7a : mov rbp, rsp ; call rax
0x0000000000401ee0 : mov rbp, rsp ; ja 0x401eed ; pop rbp ; ret
0x000000000045d206 : mov rdi, qword ptr [rax] ; call 0x459425
0x00000000004358a2 : mov rdi, qword ptr [rbp - 0x28] ; call 0x401af6
0x0000000000436aa8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000436a88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040d51f : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436be4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401f2f : mov rsi, rax ; mov edi, 0x6a1340 ; jmp rdx
0x0000000000404ecf : mov rsp, rbp ; pop rbp ; ret
0x0000000000458fd1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000047f4cb : mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004535fb : movabs al, byte ptr [0x81fa293e8bfffffd] ; ret 1
0x000000000047a058 : movabs al, byte ptr [0x8348e28948fffffb] ; ret 0x48f0
0x000000000047a27b : movabs al, byte ptr [0x8348e28948fffffc] ; ret 0x48f0
0x000000000047a49b : movabs al, byte ptr [0x8348e28948fffffd] ; ret 0x48f0
0x00000000004655a1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x0000000000429de8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000045dfb9 : movabs dword ptr [0x5d30c48348fffa39], eax ; ret
0x000000000044fa0d : movabs dword ptr [0xfffa8485c7000064], eax ; call rbx
0x000000000044fbc9 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; clc ; ret 0x1bb9
0x000000000045515b : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; clc ; ret 0x50e9
0x000000000043c2e7 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; clc ; ret 0x8589
0x000000000046ebbe : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rbx, esp ; ret
0x000000000042d035 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000475203 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x000000000047f6d1 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x00000000004a047c : movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; mov al, -0x7d ; sti ; call qword ptr [rdx]
0x000000000041b6be : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x80b9
0x0000000000415f04 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x8589
0x0000000000488571 : movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000046eb6b : movsxd rbx, esp ; ret
0x00000000004a0379 : movsxd rdi, ebx ; jmp rsi
0x000000000049ffe9 : movsxd rdi, ecx ; jmp qword ptr [rax]
0x0000000000467d03 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000405c53 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410db2 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466d3f : movzx eax, al ; pop rbp ; ret
0x000000000041221a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404ecc : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000043692b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000462158 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000045d205 : nop ; mov rdi, qword ptr [rax] ; call 0x459426
0x00000000004262d5 : nop ; ret
0x00000000004346e2 : nop ; ret 0x148
0x00000000004346f6 : nop ; ret 0x2948
0x000000000049d3d8 : nop dword ptr [rax + rax] ; ret
0x000000000048ec53 : not byte ptr [rdx - 0x7ebe5362] ; ret
0x000000000041bee1 : or al, 0 ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x49e1
0x000000000042ea6a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042eb44 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000473266 : or al, 0x7a ; ret 0x8909
0x000000000047ae2d : or al, 0x7a ; ret 0xb909
0x000000000049ffe4 : or al, 0xb ; add byte ptr [rax], al ; js 0x4a0054 ; stc ; jmp qword ptr [rax]
0x000000000041aa1a : or al, 0xffffffffffffffb9 ; ret 0xf8e1
0x000000000046dc0b : or al, 1 ; add cl, ch ; nop ; ret
0x000000000049ff05 : or al, byte ptr [rax] ; add byte ptr [rax + 0x58], bl ; stc ; jmp qword ptr [rbx]
0x0000000000465c65 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000449fa6 : or bh, byte ptr [rdi + 0x4db80000] ; jb 0x449fe8 ; ret
0x00000000004209fd : or byte ptr [r15], 0x8f ; ret 6
0x000000000041059b : or byte ptr [rax - 0x77], cl ; enter -0x76b8, -0x14 ; pop rbp ; ret
0x00000000004245e0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000498e93 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000049fd1d : or byte ptr [rax], al ; add byte ptr [rax], ah ; stc ; call rdi
0x00000000004568e8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000049fd1c : or byte ptr [rax], r8b ; add byte ptr [rax], ah ; stc ; call rdi
0x00000000004209fe : or byte ptr [rdi], 0x8f ; ret 6
0x000000000046eac3 : or ch, dh ; ret 0x8589
0x000000000047d78b : or ch, dh ; ret 0xa2b9
0x0000000000486bbb : or ch, dh ; ret 0xdae9
0x000000000049f7b1 : or dh, bh ; call qword ptr [rdx]
0x0000000000465c64 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045550e : or dword ptr [rax - 0x46], ecx ; ret 0xb7cc
0x000000000042fb56 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000424ce4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000049fe3d : or dword ptr [rax], eax ; add byte ptr [rax + 0x53], dh ; stc ; call qword ptr [rbx]
0x000000000049fe3c : or dword ptr fs:[rax], eax ; add byte ptr [rax + 0x53], dh ; stc ; call qword ptr [rbx]
0x000000000045be1a : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x000000000046901f : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000468c77 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000049f085 : or eax, 0x4c340000 ; stc ; call rsp
0x00000000004a01e5 : or eax, 0x68980000 ; stc ; call qword ptr [rdx]
0x0000000000449afc : or eax, 0xb0e9b409 ; ret
0x00000000004a0085 : or eax, dword ptr [rax] ; add al, bl ; stc ; jmp qword ptr [rdi]
0x000000000049ffe5 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x63], bh ; stc ; jmp qword ptr [rax]
0x000000000049b158 : or ebp, ecx ; jmp qword ptr [rcx]
0x000000000047bea8 : or ecx, edx ; stosd dword ptr [rdi], eax ; jmp 0x4881a2
0x000000000042488b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000048e651 : out -0x47, al ; ror dword ptr [rcx], 1 ; ret
0x000000000047d3d2 : out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000043c374 : out -0x55, al ; ret
0x000000000049f911 : out -9, eax ; jmp qword ptr [rax]
0x000000000043044b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000466d3c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004556f2 : out dx, al ; ret
0x000000000046eac4 : out dx, al ; ret 0x8589
0x000000000046b5ee : out dx, al ; ret 0x895e
0x000000000047d78c : out dx, al ; ret 0xa2b9
0x0000000000486bbc : out dx, al ; ret 0xdae9
0x000000000046706f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435602 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000478dd6 : out dx, eax ; ret 0x895e
0x000000000047d0e4 : out dx, eax ; ret 0xe95e
0x0000000000462349 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000047f22b : outsb dx, byte ptr [rsi] ; pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000044807f : outsb dx, byte ptr [rsi] ; ret
0x0000000000431535 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000426186 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004040d1 : outsb dx, byte ptr [rsi] ; ret 0x8ad2
0x0000000000431580 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000458171 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043c63b : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], al ; add cl, ch ; xchg eax, esp ; ret 0
0x0000000000479baa : outsd dx, dword ptr [rsi] ; ret 0
0x000000000046234c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000404113 : outsd dx, dword ptr [rsi] ; ret 0x8ad2
0x0000000000458fcc : pop ax ; jb 0x459001 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000047f22c : pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000040c591 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049d3cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408815 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c593 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049d3ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408817 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049d3d0 : pop r14 ; pop r15 ; ret
0x00000000004117b1 : pop r14 ; pop rbp ; ret
0x0000000000408819 : pop r15 ; pop rbp ; ret
0x000000000049d3d2 : pop r15 ; ret
0x0000000000458fcd : pop rax ; jb 0x459000 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000049ff08 : pop rax ; pop rax ; stc ; jmp qword ptr [rbx]
0x000000000046dc47 : pop rax ; ret
0x000000000043f377 : pop rax ; ret 0x89ee
0x000000000044d0ca : pop rax ; ret 0xb2ee
0x000000000049ff09 : pop rax ; stc ; jmp qword ptr [rbx]
0x0000000000401f52 : pop rbp ; mov byte ptr [rip + 0x29f43e], 1 ; ret
0x0000000000401ef1 : pop rbp ; mov edi, 0x6a1340 ; jmp rax
0x0000000000401f2e : pop rbp ; mov rsi, rax ; mov edi, 0x6a1340 ; jmp rdx
0x000000000049d3cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c594 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049d3cf : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000042e2f2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000042a5c5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000042e30e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401ee5 : pop rbp ; ret
0x0000000000408814 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c1f5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004117b0 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405c5a : pop rbx ; pop rbp ; ret
0x00000000004568f0 : pop rbx ; ret
0x0000000000436203 : pop rcx ; mov bh, -4 ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042e2f3 : pop rcx ; ret 0x1b2
0x00000000004289c6 : pop rcx ; ret 0x8589
0x000000000042e30f : pop rcx ; ret 0x8b48
0x0000000000430640 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000455897 : pop rcx ; sub edi, dword ptr [rcx] ; ret 0xf40
0x000000000043c2cc : pop rdi ; cld ; ret 0x8589
0x000000000044d19e : pop rdi ; cld ; ret 0x8b48
0x000000000040881a : pop rdi ; pop rbp ; ret
0x000000000049d3d3 : pop rdi ; ret
0x0000000000415c70 : pop rdx ; cmp al, 0 ; add byte ptr [rbx - 0x40d227bb], cl ; ret
0x0000000000469182 : pop rdx ; ret
0x000000000043610b : pop rsi ; adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000408818 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000049d3d1 : pop rsi ; pop r15 ; ret
0x00000000004117b2 : pop rsi ; pop rbp ; ret
0x000000000045eccc : pop rsp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000442ccd : pop rsp ; fdivp st(7) ; dec dword ptr [rdi] ; test dh, ah ; ret 0
0x000000000040c592 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049d3cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408816 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004289c5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000043c678 : pop rsp ; ret 0
0x000000000043c224 : pop rsp ; xchg eax, edx ; ret 0x8589
0x000000000045449c : pop rsp ; xchg eax, edx ; ret 0x8948
0x000000000044b5fc : pop rsp ; xchg eax, edx ; ret 0x8cb9
0x0000000000467b85 : popfq ; ret 0xd284
0x000000000049a51a : popfq ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x000000000042e2f0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004304da : push -0x75425eeb ; push rbp ; ret
0x000000000042d038 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000401ef5 : push 0 ; jmp rax
0x0000000000401f35 : push 0 ; jmp rdx
0x0000000000401f78 : push 0 ; mov rbp, rsp ; call rax
0x000000000049f083 : push qword ptr [rbp + rcx + 0x4c340000] ; stc ; call rsp
0x00000000004857d0 : push qword ptr [rdx - 0x160e830a] ; ret
0x000000000049f23b : push qword ptr [rsp + rdx + 0x77f40000] ; sti ; call rsp
0x0000000000486fb3 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x000000000041059a : push rax ; or byte ptr [rax - 0x77], cl ; enter -0x76b8, -0x14 ; pop rbp ; ret
0x0000000000420584 : push rax ; pop rbp ; ret
0x000000000047be49 : push rax ; ret
0x000000000043c17d : push rax ; ret 0x8589
0x000000000044d57d : push rax ; ret 0xd4b9
0x000000000040d521 : push rbp ; clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436be6 : push rbp ; clc ; pop rbp ; ret
0x000000000041c875 : push rbp ; loopne 0x41c82d ; add al, ch ; ret 0xfe55
0x0000000000489f58 : push rbp ; mov cl, 0x13 ; ret 0x8589
0x0000000000401f74 : push rbp ; mov edi, 0x6a0e20 ; mov rbp, rsp ; call rax
0x00000000004304df : push rbp ; ret
0x0000000000430476 : push rbp ; ret 0xd284
0x000000000042ea6f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042eb49 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000484f44 : push rbp ; xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000041e8f2 : push rbx ; ret 0x48b9
0x000000000041e322 : push rbx ; ret 0x89b9
0x000000000041e8d6 : push rbx ; ret 0xb2b9
0x000000000049fe41 : push rbx ; stc ; call qword ptr [rbx]
0x0000000000407741 : push rcx ; jmp 0x408b22
0x000000000049fe21 : push rcx ; stc ; call rdx
0x000000000046dd93 : push rdi ; add dword ptr [rax], eax ; jmp 0x479fa8
0x0000000000481a84 : push rdi ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000475256 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x000000000047f6d0 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000046234b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004721c6 : push rdi ; ret
0x000000000044c593 : push rdi ; ret 0x2b9
0x000000000043c1b5 : push rdi ; ret 0x8589
0x000000000043f323 : push rdi ; ret 0x89ee
0x000000000045469f : push rdi ; ret 0xee9
0x0000000000405895 : push rdi ; ret 0xffff
0x000000000048dcf9 : push rsi ; mov cl, 0x13 ; ret 0x1ab9
0x000000000048eb12 : push rsi ; mov cl, 0x13 ; ret 0x1e9
0x000000000048ab60 : push rsi ; mov cl, 0x13 ; ret 0x8589
0x0000000000475202 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000472172 : push rsi ; ret
0x000000000041aa17 : push rsp ; jno 0x41aa4b ; or al, 0xffffffffffffffb9 ; ret 0xf8e1
0x0000000000449c5c : push rsp ; ret 0
0x0000000000403c72 : pushfq ; cmp al, -0x76 ; ret
0x000000000049b155 : pushfq ; fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x0000000000403f33 : pushfq ; in eax, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe96c
0x000000000040389a : pushfq ; jmp 0x404008
0x0000000000403899 : pushfq ; jmp 0x404009
0x0000000000403dd3 : pushfq ; jmp 0x40400a
0x000000000041d86a : pushfq ; ret 0x8445
0x000000000040f8dc : pushfq ; ret 0xd284
0x000000000044c851 : pushfq ; ret 0xe280
0x0000000000482f8b : pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x00000000004009e8 : ret
0x0000000000404ebf : ret 0
0x00000000004029d1 : ret 0x10
0x0000000000444403 : ret 0x100
0x000000000047060a : ret 0x103
0x000000000043e5bb : ret 0x108
0x0000000000413008 : ret 0x11
0x000000000046d072 : ret 0x111
0x0000000000454bee : ret 0x12
0x0000000000471e52 : ret 0x135
0x00000000004557dc : ret 0x141
0x000000000043ae03 : ret 0x145
0x000000000041fe43 : ret 0x148
0x00000000004406fb : ret 0x14c
0x000000000049ac01 : ret 0x14e9
0x000000000040e99c : ret 0x15
0x0000000000417e08 : ret 0x1a
0x000000000048dcfc : ret 0x1ab9
0x00000000004268bd : ret 0x1add
0x000000000042e2f5 : ret 0x1b2
0x000000000043f72f : ret 0x1baa
0x000000000044fbcc : ret 0x1bb9
0x000000000040c6fe : ret 0x1ce8
0x00000000004895f1 : ret 0x1dad
0x000000000047e3cd : ret 0x1db9
0x000000000048ab34 : ret 0x1e
0x000000000048eb15 : ret 0x1e9
0x000000000040b5ac : ret 0x1ee8
0x000000000049b397 : ret 0x1f
0x0000000000455606 : ret 0x1f08
0x000000000048eea1 : ret 0x20
0x0000000000414277 : ret 0x2149
0x000000000042720a : ret 0x23da
0x000000000040a429 : ret 0x2437
0x000000000040b59b : ret 0x250d
0x0000000000442e34 : ret 0x26b3
0x0000000000491989 : ret 0x273b
0x0000000000433f08 : ret 0x279e
0x0000000000402891 : ret 0x28cb
0x000000000042fb59 : ret 0x2948
0x0000000000407961 : ret 0x29e8
0x0000000000401d52 : ret 0x29f4
0x0000000000401b52 : ret 0x29f5
0x0000000000401942 : ret 0x29f6
0x0000000000430644 : ret 0x2a
0x000000000044c594 : ret 0x2b9
0x000000000043b3b3 : ret 0x2bc7
0x000000000042ea72 : ret 0x2d50
0x0000000000483346 : ret 0x2eb9
0x000000000044cfe5 : ret 0x30
0x0000000000461eae : ret 0x3040
0x000000000045d25d : ret 0x3045
0x000000000047f660 : ret 0x3141
0x00000000004219e9 : ret 0x3145
0x00000000004198f6 : ret 0x32
0x000000000049681d : ret 0x33
0x000000000042f544 : ret 0x3b
0x000000000040bedf : ret 0x3be8
0x000000000042c5a5 : ret 0x3e
0x000000000040b317 : ret 0x3e8
0x0000000000444b4c : ret 0x3ee4
0x000000000040b320 : ret 0x415a
0x0000000000412836 : ret 0x4194
0x000000000044c200 : ret 0x43b9
0x0000000000490062 : ret 0x43ce
0x0000000000403e4b : ret 0x44c1
0x0000000000455ff3 : ret 0x4589
0x000000000042f9e1 : ret 0x4802
0x000000000048d5ae : ret 0x4810
0x000000000046234e : ret 0x4815
0x000000000044ce71 : ret 0x4817
0x0000000000431536 : ret 0x4861
0x0000000000404c43 : ret 0x4880
0x000000000041e8f3 : ret 0x48b9
0x0000000000455a33 : ret 0x48be
0x0000000000404c19 : ret 0x48f0
0x000000000041bee8 : ret 0x49e1
0x00000000004047cb : ret 0x49e4
0x0000000000429df1 : ret 0x4b
0x000000000047fe20 : ret 0x4b91
0x0000000000435407 : ret 0x4cc0
0x000000000040d4ce : ret 0x4ce8
0x0000000000414755 : ret 0x4cf0
0x0000000000457eec : ret 0x4f0b
0x0000000000477d53 : ret 0x4fab
0x0000000000442f13 : ret 0x4fda
0x000000000045515e : ret 0x50e9
0x000000000040bfc8 : ret 0x52e8
0x000000000041768b : ret 0x534c
0x0000000000497169 : ret 0x54
0x0000000000403eb3 : ret 0x5589
0x0000000000413e66 : ret 0x558b
0x000000000040b6c5 : ret 0x55e8
0x000000000042ecfa : ret 0x5966
0x000000000044cfeb : ret 0x59e7
0x0000000000497399 : ret 0x5b
0x0000000000456b47 : ret 0x5bc6
0x0000000000446ef4 : ret 0x5c90
0x00000000004687bf : ret 0x61
0x0000000000416454 : ret 0x62
0x0000000000498899 : ret 0x6348
0x000000000040c2b6 : ret 0x64e8
0x000000000048a1dc : ret 0x6620
0x000000000040b4b2 : ret 0x68e8
0x000000000043856f : ret 0x6958
0x000000000040c0b1 : ret 0x69e8
0x0000000000425f56 : ret 0x6a8a
0x00000000004478e7 : ret 0x6c62
0x000000000040c6ae : ret 0x6ce8
0x000000000048731a : ret 0x70e8
0x0000000000444f8f : ret 0x7174
0x0000000000425c0e : ret 0x77a8
0x0000000000455c1c : ret 0x7a66
0x0000000000426d71 : ret 0x7a8a
0x000000000042d9eb : ret 0x7b7f
0x0000000000404e84 : ret 0x8041
0x000000000041b6bf : ret 0x80b9
0x00000000004219ef : ret 0x8141
0x000000000040f738 : ret 0x8148
0x000000000049bfd6 : ret 0x81e9
0x000000000042f904 : ret 0x822d
0x0000000000403791 : ret 0x8445
0x0000000000404ea5 : ret 0x845
0x000000000040fa91 : ret 0x8548
0x000000000041337f : ret 0x8589
0x0000000000403bde : ret 0x858a
0x0000000000438084 : ret 0x86ac
0x000000000045e3de : ret 0x86f8
0x0000000000486fb8 : ret 0x8840
0x00000000004219ce : ret 0x8844
0x000000000044d832 : ret 0x8845
0x0000000000473214 : ret 0x8909
0x0000000000413816 : ret 0x8914
0x0000000000475204 : ret 0x8923
0x000000000047546c : ret 0x8925
0x000000000044405d : ret 0x8936
0x0000000000426983 : ret 0x8940
0x000000000040c3ad : ret 0x8941
0x0000000000418c22 : ret 0x8946
0x0000000000404e0d : ret 0x8948
0x000000000046096f : ret 0x894a
0x000000000040e206 : ret 0x894b
0x000000000040923b : ret 0x895a
0x000000000045c4c1 : ret 0x895e
0x0000000000426187 : ret 0x8961
0x000000000048f7db : ret 0x8962
0x0000000000403463 : ret 0x896c
0x000000000040603f : ret 0x8991
0x000000000045f57c : ret 0x899a
0x000000000041e323 : ret 0x89b9
0x000000000043be6d : ret 0x89be
0x0000000000402a53 : ret 0x89c1
0x000000000043f325 : ret 0x89ee
0x0000000000440125 : ret 0x89f9
0x0000000000461f68 : ret 0x8a44
0x0000000000461e65 : ret 0x8a4a
0x00000000004040d2 : ret 0x8ad2
0x000000000049ae23 : ret 0x8ae1
0x000000000044e860 : ret 0x8af9
0x000000000040b9d0 : ret 0x8b48
0x000000000040d6ef : ret 0x8b4c
0x000000000041b38c : ret 0x8b9
0x0000000000403e16 : ret 0x8bc1
0x000000000044b5fe : ret 0x8cb9
0x0000000000469c56 : ret 0x8cbc
0x0000000000407be6 : ret 0x8d89
0x0000000000412d8a : ret 0x8d8b
0x000000000041438d : ret 0x8de8
0x000000000047fc82 : ret 0x8e8
0x00000000004458a3 : ret 0x8f2d
0x0000000000454270 : ret 0x91a3
0x0000000000465932 : ret 0x941
0x00000000004555f8 : ret 0x94e2
0x000000000040f93a : ret 0x9589
0x000000000047ead7 : ret 0x96
0x0000000000406fe1 : ret 0x9652
0x000000000043e3d3 : ret 0x9b9f
0x000000000048628e : ret 0x9ce8
0x000000000040bd7c : ret 0x9ee8
0x0000000000409f81 : ret 0xa
0x000000000047d78d : ret 0xa2b9
0x000000000042eb4c : ret 0xa30b
0x00000000004034b5 : ret 0xa3ad
0x000000000044b1ee : ret 0xac
0x0000000000465f7f : ret 0xac60
0x0000000000404a25 : ret 0xafc3
0x000000000048e767 : ret 0xafe9
0x0000000000403179 : ret 0xb
0x0000000000403f55 : ret 0xb0
0x000000000041e8d7 : ret 0xb2b9
0x000000000044d0cc : ret 0xb2ee
0x000000000048b7a0 : ret 0xb38e
0x0000000000430450 : ret 0xb740
0x0000000000455511 : ret 0xb7cc
0x000000000047c8d7 : ret 0xb8
0x000000000049b992 : ret 0xb845
0x0000000000458fc7 : ret 0xb848
0x000000000040f47b : ret 0xb849
0x0000000000442b13 : ret 0xb9
0x000000000047ae2f : ret 0xb909
0x000000000047f6d2 : ret 0xb923
0x0000000000482fb0 : ret 0xb925
0x000000000044e074 : ret 0xb936
0x000000000042e680 : ret 0xb940
0x000000000041ae5d : ret 0xb946
0x0000000000461df2 : ret 0xb94a
0x000000000040f24b : ret 0xb94b
0x000000000045d4a6 : ret 0xb95e
0x00000000004986f7 : ret 0xb962
0x0000000000403b31 : ret 0xb96c
0x0000000000408413 : ret 0xb991
0x000000000045f7d0 : ret 0xb99a
0x0000000000452857 : ret 0xb9be
0x000000000040c65e : ret 0xbce8
0x0000000000430acc : ret 0xbf48
0x000000000041cea9 : ret 0xc
0x0000000000404a7c : ret 0xc0db
0x0000000000401f15 : ret 0xc148
0x0000000000451b5f : ret 0xc281
0x000000000041760e : ret 0xc339
0x000000000048ea69 : ret 0xc350
0x000000000046eb33 : ret 0xc3d7
0x0000000000468a02 : ret 0xc493
0x000000000044452b : ret 0xc4ef
0x0000000000407883 : ret 0xc8be
0x000000000046f4d3 : ret 0xc8c6
0x000000000045df16 : ret 0xca20
0x0000000000466cf9 : ret 0xca21
0x0000000000410074 : ret 0xca29
0x000000000046f8fb : ret 0xcc39
0x0000000000489858 : ret 0xcc41
0x00000000004687c5 : ret 0xccb2
0x000000000040b64f : ret 0xd
0x000000000040b5a8 : ret 0xd089
0x000000000040be1a : ret 0xd0e8
0x0000000000402ac1 : ret 0xd157
0x0000000000405843 : ret 0xd284
0x000000000044d57e : ret 0xd4b9
0x0000000000473603 : ret 0xd4d
0x00000000004889fd : ret 0xd609
0x00000000004605b5 : ret 0xd618
0x000000000044fe0e : ret 0xd678
0x0000000000421501 : ret 0xd701
0x000000000049a5bf : ret 0xd709
0x000000000046d782 : ret 0xd803
0x00000000004166ec : ret 0xda17
0x0000000000486bbd : ret 0xdae9
0x00000000004511bc : ret 0xdc1c
0x000000000047e564 : ret 0xdf79
0x000000000044c852 : ret 0xe280
0x00000000004625a8 : ret 0xe2e8
0x00000000004147c3 : ret 0xe674
0x000000000041467f : ret 0xe914
0x0000000000487acb : ret 0xe925
0x0000000000430322 : ret 0xe940
0x000000000047d0e6 : ret 0xe95e
0x0000000000431581 : ret 0xe961
0x000000000049cc50 : ret 0xe962
0x0000000000403f36 : ret 0xe96c
0x000000000045f97f : ret 0xe99a
0x000000000045b804 : ret 0xe9d2
0x000000000044e8c1 : ret 0xe9f9
0x00000000004273ad : ret 0xea51
0x00000000004147c9 : ret 0xea81
0x000000000043f0bc : ret 0xeb2b
0x0000000000409bbe : ret 0xedba
0x000000000043313c : ret 0xee8
0x00000000004546a0 : ret 0xee9
0x000000000040b62b : ret 0xefe8
0x0000000000424875 : ret 0xf281
0x000000000040f4a1 : ret 0xf40
0x000000000040fa7e : ret 0xf41
0x00000000004310d5 : ret 0xf7f3
0x0000000000417f55 : ret 0xf8e1
0x000000000045169d : ret 0xfa6c
0x000000000045782a : ret 0xfaa2
0x00000000004149fb : ret 0xfb29
0x000000000045cd10 : ret 0xfc3d
0x000000000042f85e : ret 0xfc75
0x00000000004311aa : ret 0xfd0c
0x000000000047a1d7 : ret 0xfd40
0x000000000047a028 : ret 0xfd70
0x000000000048c878 : ret 0xfdb9
0x000000000041c87a : ret 0xfe55
0x000000000044c7b8 : ret 0xfe89
0x000000000047a03c : ret 0xff10
0x0000000000405772 : ret 0xff70
0x000000000049ac07 : ret 0xff9b
0x00000000004310cf : ret 0xffa5
0x000000000049ae1d : ret 0xffbb
0x000000000042f858 : ret 0xffc4
0x000000000042ea78 : ret 0xffd5
0x000000000042eb52 : ret 0xffd8
0x000000000042f90a : ret 0xffd9
0x000000000042ecf4 : ret 0xffe0
0x000000000047fe1a : ret 0xfff7
0x00000000004656a4 : ret 0xfff9
0x000000000042d9e5 : ret 0xfffa
0x00000000004358a8 : ret 0xfffc
0x0000000000405896 : ret 0xffff
0x0000000000404368 : ret 1
0x0000000000403d3b : ret 2
0x000000000049cf97 : ret 3
0x000000000048d49b : ret 4
0x000000000040fc54 : ret 5
0x0000000000420a01 : ret 6
0x000000000045560c : ret 7
0x0000000000432844 : ret 8
0x000000000040a649 : ret 9
0x00000000004823cf : retf 0x5d ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000046232d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000045c0cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004230ea : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047f663 : rol byte ptr [rbp + 0x21], cl ; ret 0x8141
0x000000000046232c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000046efca : rol ebp, cl ; ret
0x0000000000421881 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000411698 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000458fc4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401f1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401f2b ; pop rbp ; ret
0x0000000000405c55 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000421882 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000411699 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000410db4 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040d3b5 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049fb30 : ror byte ptr [rax - 8], 1 ; call qword ptr [rdx]
0x000000000041427d : ror byte ptr [rbp + 9], 1 ; ret 0x8b48
0x00000000004147b2 : ror byte ptr [rbx + 0x12d11], 0 ; add byte ptr [rcx], al ; ret 0x8b48
0x000000000041427a : ror byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 9], 1 ; ret 0x8b48
0x000000000042488a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000489484 : ror byte ptr [rcx], 1 ; ret
0x0000000000404ece : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000046215e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000047bed7 : ror dword ptr [rcx - 0x49b7b], -1 ; jmp 0x4881a6
0x0000000000449bc8 : ror dword ptr [rcx - 0x57b7b], -1 ; jmp 0x455ebd
0x00000000004352c0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000048b634 : ror dword ptr [rcx], 1 ; ret
0x0000000000488345 : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000466c9c : sahf ; ret 0xd284
0x000000000048495b : sal bh, 1 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000401eee : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; adc ebp, dword ptr [rdx] ; jmp rax
0x000000000044bd03 : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000049793e : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000049946b : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000498319 : sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x000000000049a51b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x000000000049a5cb : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000041fe08 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x0000000000401f1e : sar eax, 1 ; jne 0x401f29 ; pop rbp ; ret
0x0000000000430641 : sar ebp, -0x17 ; ret 0x2a
0x0000000000448876 : sar edi, 1 ; dec dword ptr [rdi] ; test byte ptr [rbx], bl ; ret 0
0x00000000004825e9 : sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000047a962 : sar edi, cl ; inc dword ptr [rbp + 0xf] ; ret
0x0000000000401f1d : sar rax, 1 ; jne 0x401f2a ; pop rbp ; ret
0x0000000000419704 : sbb al, 0 ; add cl, ch ; ret 1
0x0000000000435600 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000452cf4 : sbb al, byte ptr [rcx + rbp*8] ; mov ecx, 0xb8000031 ; jmp rsi
0x0000000000486931 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004a0378 : sbb byte ptr [rbx - 5], ah ; jmp rsi
0x0000000000430541 : sbb cl, ch ; ret
0x000000000044405b : sbb dl, bh ; ret 0x8936
0x000000000043c523 : sbb dl, byte ptr [rdi - 0x5316ffff] ; ret
0x000000000045eccb : sbb dword ptr [rax + rax], 0x10c48348 ; pop rbp ; ret
0x000000000048681e : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x0000000000458813 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000436331 : sbb eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000048737c : sbb eax, 0xc700000e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000434650 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x00000000004440af : sbb edx, edi ; ret 0x8936
0x000000000044e072 : sbb edx, edi ; ret 0xb936
0x00000000004116b4 : scasb al, byte ptr [rdi] ; adc ebp, r9d ; ret
0x000000000046ea8a : scasb al, byte ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x000000000047d3d4 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000046eade : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x000000000047d3f0 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8b48
0x0000000000414bde : scasd eax, dword ptr [rdi] ; ret
0x000000000042f542 : shr cl, cl ; ret 0x3b
0x000000000048c045 : shr dword ptr [rip - 0x21480000], cl ; ret
0x000000000049f105 : sldt word ptr [rax] ; je 0x49f176 ; stc ; jmp rsp
0x00000000004a047d : sldt word ptr [rax] ; mov al, -0x7d ; sti ; call qword ptr [rdx]
0x000000000049fe42 : stc ; call qword ptr [rbx]
0x00000000004a01ea : stc ; call qword ptr [rdx]
0x000000000049fd22 : stc ; call rdi
0x000000000049fe22 : stc ; call rdx
0x000000000049f08a : stc ; call rsp
0x000000000049f1c2 : stc ; inc esp ; adc al, byte ptr [rax] ; add byte ptr [rdx + rdi*2 - 7], dh ; jmp rsp
0x000000000049f142 : stc ; inc esp ; adc byte ptr [rax], al ; add ah, ah ; jno 0x49f14d ; jmp rsp
0x000000000049f182 : stc ; inc esp ; adc dword ptr [rax], eax ; add ah, al ; ja 0x49f18d ; jmp rsp
0x000000000049f202 : stc ; inc esp ; adc eax, dword ptr [rax] ; add byte ptr [rbp + rdi*2 - 7], dh ; jmp rsp
0x000000000049f102 : stc ; inc esp ; sldt word ptr [rax] ; je 0x49f179 ; stc ; jmp rsp
0x000000000049ffea : stc ; jmp qword ptr [rax]
0x000000000049fcc2 : stc ; jmp qword ptr [rbx]
0x00000000004a008a : stc ; jmp qword ptr [rdi]
0x000000000049f10a : stc ; jmp rsp
0x000000000043c3c7 : stc ; out -0x55, al ; ret
0x000000000049f082 : stc ; push qword ptr [rbp + rcx + 0x4c340000] ; stc ; call rsp
0x0000000000444b9f : stc ; ret 0x3ee4
0x000000000042d37d : stc ; ret 0x77a8
0x00000000004656a3 : stc ; ret 0xfff9
0x000000000048cf70 : std ; cwde ; jmp 0x48ee24
0x0000000000433f07 : std ; ret 0x279e
0x00000000004a07e1 : std ; sti ; call rdi
0x000000000040b34b : sti ; add byte ptr [rax - 0x6bf10000], ah ; ret
0x00000000004a0482 : sti ; call qword ptr [rdx]
0x00000000004a06c2 : sti ; call qword ptr [rsi]
0x00000000004a033a : sti ; call rdi
0x00000000004a0462 : sti ; call rdx
0x000000000049f242 : sti ; call rsp
0x00000000004a037a : sti ; jmp rsi
0x0000000000488570 : sti ; movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000049f23a : sti ; push qword ptr [rsp + rdx + 0x77f40000] ; sti ; call rsp
0x000000000047beaa : stosd dword ptr [rdi], eax ; jmp 0x4881a0
0x0000000000435ee5 : stosd dword ptr [rdi], eax ; ret
0x000000000049ff04 : sub al, 0xa ; add byte ptr [rax], al ; pop rax ; pop rax ; stc ; jmp qword ptr [rbx]
0x0000000000481460 : sub al, 5 ; clc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041ec5e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466086 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eb48 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ea75 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000044d0e1 : sub byte ptr [rdi + 0x58b945bc], dl ; ret 0xb2ee
0x000000000046ea1a : sub byte ptr [rsi + 0x40], dh ; ret 0x8589
0x000000000042ea6b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042eb45 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000419303 : sub dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000401f57 : sub dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000449afb : sub dword ptr [rip - 0x4f164bf7], ecx ; ret
0x000000000047e3ca : sub dword ptr [rsi + 0x40], esi ; ret 0x1db9
0x000000000046ea6e : sub dword ptr [rsi + 0x40], esi ; ret 0x8589
0x0000000000486f34 : sub dword ptr [rsi + 0x40], esi ; ret 0x8948
0x0000000000483109 : sub eax, -9 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040d4df : sub eax, 0x48ffff46 ; add esp, 0x20 ; pop rbp ; ret
0x000000000042f905 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000048376c : sub eax, 0xc700004a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000048c046 : sub eax, 0xdeb80000 ; ret
0x000000000041e8ec : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x0000000000456684 : sub ecx, 0xd0f97271 ; mov eax, ecx ; pop rbp ; ret
0x0000000000455898 : sub edi, dword ptr [rcx] ; ret 0xf40
0x000000000049f871 : sub edi, esi ; call qword ptr [rax]
0x0000000000458fcf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000049d441 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000049d440 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046dc09 : test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x000000000042ea70 : test al, -0x7f ; ret 0x2d50
0x000000000042eb4a : test al, -0x7f ; ret 0xa30b
0x00000000004059ed : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000461c03 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000434cde : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004312a6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000409239 : test al, 0x77 ; ret 0x895a
0x0000000000458068 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000477139 : test al, bl ; ret
0x000000000048f004 : test bl, ch ; ret
0x0000000000419301 : test byte ptr [rax - 0x16ffffd7], ch ; ret
0x000000000049d3da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000442bba : test byte ptr [rax], bl ; ret
0x0000000000421040 : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000046dd59 : test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000044887a : test byte ptr [rbx], bl ; ret 0
0x000000000043c672 : test byte ptr [rcx - 0x33], cl ; add byte ptr [rax], al ; jmp 0x4488df
0x000000000044722a : test byte ptr [rcx], bh ; ret
0x0000000000417e02 : test byte ptr [rcx], ch ; cmp dword ptr [rax], eax ; add cl, ch ; ret 0x1a
0x00000000004796bd : test byte ptr [rcx], ch ; ret
0x00000000004258ec : test byte ptr [rcx], ch ; ret 0
0x000000000043c63a : test byte ptr [rdi], ch ; add dword ptr [rax], eax ; jmp 0x4488df
0x000000000043c592 : test byte ptr [rdx + rdx*8 + 0x3ce90000], bl ; ret
0x000000000046dcb1 : test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x479faa
0x0000000000439b92 : test byte ptr [rdx], al ; ret 1
0x000000000043cefa : test byte ptr [rdx], bl ; ret 0
0x000000000045a7d4 : test byte ptr [rip - 0x16fffffc], al ; ret 1
0x000000000043e4a2 : test byte ptr [rsi], bh ; ret
0x000000000043ce8a : test ch, cl ; ret 0
0x0000000000442cd2 : test dh, ah ; ret 0
0x0000000000446382 : test dh, bl ; ret
0x0000000000472011 : test dl, cl ; ret 0
0x0000000000411a0d : test dword ptr [rax + 0x2dfffffe], esi ; leave ; cmc ; ret
0x00000000004258e6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000043e5b4 : test dword ptr [rax + rbp*8 - 0x7bf00001], eax ; ret 0x108
0x000000000043e49c : test dword ptr [rax + rbp*8 - 0x7bf00001], ebp ; ret
0x0000000000457623 : test dword ptr [rax - 0x17000003], ebx ; ret
0x000000000043c3ab : test dword ptr [rbp - 0x24], ebx ; ret
0x000000000047f4cf : test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000047e257 : test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x0000000000483a56 : test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000048495f : test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004864c8 : test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000487e25 : test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x00000000004866ab : test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000486bb5 : test dword ptr [rbx + rdi*8 - 1], esp ; dec ebp ; or ch, dh ; ret 0xdae9
0x00000000004871ff : test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x000000000047db6d : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000487020 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000487546 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000047a898 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004806e2 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000047d354 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000484f2f : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000482227 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000047f1db : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004871b7 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000047ea9a : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x000000000047d81b : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000486f2f : test dword ptr [rbx + rdi*8 - 1], esp ; ljmp ptr [rcx] ; jbe 0x486f7f ; ret 0x8948
0x0000000000493326 : test dword ptr [rbx + rsi*8 - 0x7bf00001], ebx ; ret
0x00000000004434ac : test dword ptr [rbx*8 - 0x7bf00001], edi ; ret
0x0000000000490b56 : test dword ptr [rcx + rdi*8 - 1], ecx ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000448874 : test dword ptr [rcx + rdx*8 - 1], eax ; dec dword ptr [rdi] ; test byte ptr [rbx], bl ; ret 0
0x0000000000465c67 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000465c27 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000465ba2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000458176 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004348fa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000043d77c : test dword ptr [rdx + rbp*8 - 0x7bf00001], ecx ; ret
0x0000000000449b8f : test dword ptr [rdx + rdi*8 + 0x1be9ffff], eax ; ret
0x0000000000449c81 : test dword ptr [rdx + rdi*8 + 0x29e9ffff], eax ; ret 0
0x0000000000454698 : test dword ptr [rdx + rdi*8 + 0x353effff], eax ; push rdi ; ret 0xee9
0x0000000000455a2c : test dword ptr [rdx + rdi*8 + 0x3ffdffff], eax ; ret 0x48be
0x0000000000449b64 : test dword ptr [rdx + rdi*8 + 0x46e9ffff], eax ; ret
0x0000000000449c56 : test dword ptr [rdx + rdi*8 + 0x54e9ffff], eax ; ret 0
0x0000000000454496 : test dword ptr [rdx + rdi*8 + 0x5cadffff], eax ; xchg eax, edx ; ret 0x8948
0x0000000000449b48 : test dword ptr [rdx + rdi*8 + 0x62e9ffff], eax ; ret
0x0000000000449c3a : test dword ptr [rdx + rdi*8 + 0x70e9ffff], eax ; ret 0
0x00000000004497a1 : test dword ptr [rdx + rdi*8 + 0x7528ffff], eax ; ret
0x0000000000455156 : test dword ptr [rdx + rdi*8 - 0x135b0001], eax ; clc ; ret 0x50e9
0x0000000000453194 : test dword ptr [rdx + rdi*8 - 0x19060001], eax ; stosd dword ptr [rdi], eax ; ret
0x0000000000449bca : test dword ptr [rdx + rdi*8 - 0x1f160001], eax ; ret 0
0x0000000000449bf6 : test dword ptr [rdx + rdi*8 - 0x4b160001], eax ; ret 0
0x000000000044e8ba : test dword ptr [rdx + rdi*8 - 0x70b00001], eax ; ret 0xe9f9
0x0000000000449ab4 : test dword ptr [rdx + rdi*8 - 0x9160001], eax ; ret
0x0000000000442b0c : test dword ptr [rsi + rbx*8 - 0x7bf00001], ebx ; ret 0xb9
0x0000000000442ccc : test dword ptr [rsi + rbx*8 - 1], ebx ; dec dword ptr [rdi] ; test dh, ah ; ret 0
0x000000000043031b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043157a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040a017 : test dword ptr [rsi + rdi*8 - 0x49d20001], eax ; ret 0xedba
0x0000000000409bb7 : test dword ptr [rsi + rdi*8 - 0x4ad20001], eax ; ret 0xedba
0x000000000040dcf6 : test dword ptr [rsi + rdi*8 - 0x4ad20001], esi ; ret
0x000000000040dca2 : test dword ptr [rsi + rdi*8 - 0x4bd20001], esi ; ret
0x000000000040e91a : test dword ptr [rsi + rdi*8 - 0x6ad20001], esi ; ret
0x000000000040e6b2 : test dword ptr [rsi + rdi*8 - 0x6bd20001], esi ; ret
0x000000000040e9a6 : test dword ptr [rsi + rdi*8 - 0x9d20001], esi ; jmp qword ptr [rsi]
0x000000000040e626 : test dword ptr [rsi + rdi*8 - 0xad20001], esi ; jmp qword ptr [rsi]
0x000000000044637c : test dword ptr [rsi + rdx*8 - 0x7bf00001], ecx ; ret
0x0000000000438e34 : test dword ptr [rsi*8 - 0x7bf00001], eax ; ret
0x000000000042d03a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000415cc8 : test dword ptr [rsp + rdi*8 - 0x7bf00001], ebp ; ret
0x0000000000447224 : test dword ptr [rsp + rdx*8 - 1], esi ; dec dword ptr [rdi] ; test byte ptr [rcx], bh ; ret
0x0000000000418e64 : test dword ptr [rsp + rsi*8 - 0x7bf00001], edi ; ret
0x000000000043152f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000046eb32 : test eax, edx ; xlatb ; ret
0x000000000047200b : test esp, eax ; in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000044d0c8 : ud2b ; pop rax ; ret 0xb2ee
0x0000000000459f63 : unpckhps xmm6, xmmword ptr [rsi] ; ret
0x0000000000483ff1 : wait ; fincstp ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000042f53f : wait ; jge 0x42f521 ; shr cl, cl ; ret 0x3b
0x000000000042a5fd : wait ; jo 0x42a60b ; ret
0x000000000042db4c : wait ; jo 0x42db5a ; ret
0x000000000043c31f : wait ; pop rdi ; cld ; ret 0x8589
0x000000000044d19d : wait ; pop rdi ; cld ; ret 0x8b48
0x000000000043a0ff : wait ; ret
0x0000000000488344 : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x00000000004116b3 : wait ; scasb al, byte ptr [rdi] ; adc ebp, r9d ; ret
0x000000000043c3ff : xchg byte ptr [rbp - 0x24], bl ; ret
0x0000000000415f02 : xchg dh, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x8589
0x000000000046eb86 : xchg dl, al ; xlatb ; ret
0x000000000049b6cd : xchg dword ptr [rdi - 0xe46c4ed], ebp ; xchg eax, esp ; ret
0x0000000000462348 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044bd01 : xchg eax, ebp ; clc ; sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000482f8a : xchg eax, ebp ; pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000405a47 : xchg eax, ebp ; ret
0x0000000000403790 : xchg eax, ebp ; ret 0x8445
0x000000000044d831 : xchg eax, ebp ; ret 0x8845
0x0000000000405842 : xchg eax, ebp ; ret 0xd284
0x000000000045bd8e : xchg eax, ebp ; ret 0xe280
0x000000000040fa7d : xchg eax, ebp ; ret 0xf41
0x000000000049793d : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000049946a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000498318 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x000000000049a5ca : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000046dd5a : xchg eax, ebx ; in eax, 0 ; add cl, ch ; ret 0
0x000000000048c043 : xchg eax, ebx ; jmp 0x48ee24
0x0000000000426185 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042ca85 : xchg eax, ebx ; ret
0x000000000049c301 : xchg eax, ebx ; ret 0xd284
0x0000000000486e08 : xchg eax, ecx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000042ccb5 : xchg eax, ecx ; ret
0x0000000000446ef3 : xchg eax, ecx ; ret 0x5c90
0x0000000000458372 : xchg eax, edi ; cli ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000449c92 : xchg eax, edi ; jmp 0x455eb9
0x000000000044d0e2 : xchg eax, edi ; mov esp, 0x4f58b945 ; ret 0xb2ee
0x00000000004618c9 : xchg eax, edi ; ret 0xd284
0x0000000000426505 : xchg eax, edx ; ret
0x000000000044754b : xchg eax, edx ; ret 0x5c90
0x00000000004343af : xchg eax, edx ; ret 0x8445
0x000000000043c225 : xchg eax, edx ; ret 0x8589
0x000000000047a948 : xchg eax, edx ; ret 0x8844
0x000000000045449d : xchg eax, edx ; ret 0x8948
0x000000000044b5fd : xchg eax, edx ; ret 0x8cb9
0x000000000045806e : xchg eax, edx ; ret 0xd284
0x0000000000419834 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x4fd227bb], cl ; ret
0x000000000046dd92 : xchg eax, esi ; push rdi ; add dword ptr [rax], eax ; jmp 0x479fa9
0x000000000040deda : xchg eax, esi ; ret
0x000000000041e98e : xchg eax, esi ; ret 0xd284
0x000000000040252f : xchg eax, esp ; add rsp, 0x80 ; pop rbp ; ret
0x000000000045730a : xchg eax, esp ; jmp 0x457d78
0x0000000000457247 : xchg eax, esp ; jmp 0x457d7a
0x000000000041c64c : xchg eax, esp ; jmp 0xffffffffc37b8a10
0x0000000000431534 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000042ce05 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043157f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000405cd8 : xchg eax, esp ; ret
0x000000000043c640 : xchg eax, esp ; ret 0
0x0000000000434399 : xchg eax, esp ; ret 0x8041
0x000000000045ada3 : xchg eax, esp ; ret 0x8445
0x000000000043044e : xchg eax, esp ; ret 0xb740
0x0000000000488347 : xchg eax, esp ; ret 0xca20
0x0000000000435bf9 : xchg eax, esp ; ret 0xd284
0x000000000045da4c : xchg eax, esp ; ret 0xe280
0x0000000000457309 : xchg eax, r12d ; jmp 0x457d79
0x000000000045d204 : xchg eax, r8d ; mov rdi, qword ptr [rax] ; call 0x459427
0x000000000041b6bc : xchg esi, ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x80b9
0x0000000000415f4d : xchg esi, ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x8589
0x0000000000449c91 : xchg rax, r15 ; jmp 0x455eba
0x0000000000492f4e : xchg rax, rsi ; ret
0x000000000046eb34 : xlatb ; ret
0x000000000044405c : xlatb ; ret 0x8936
0x000000000044e073 : xlatb ; ret 0xb936
0x00000000004209f8 : xor al, 0x23 ; cmp dword ptr [rcx - 0x70f07fbb], ecx ; ret 6
0x0000000000458377 : xor al, 0x25 ; ret
0x000000000049f088 : xor al, 0x4c ; stc ; call rsp
0x000000000041784d : xor al, 1 ; ret
0x000000000049f90c : xor al, 4 ; add byte ptr [rax], al ; out -9, eax ; jmp qword ptr [rax]
0x0000000000484f45 : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000430449 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000048175a : xor al, byte ptr [rdx] ; clc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000047db6b : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000048701e : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000424ce7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000424ce8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044cc0d : xor byte ptr [rcx - 0x47], al ; ret 0x1baa
0x00000000004048bc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004121dd : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004166e4 : xor dword ptr [rax], eax ; add byte ptr [rbx - 0x66d227bb], cl ; ret 0xda17
0x00000000004369fe : xor eax, 0x7ab99ca8 ; ret
0x000000000040b5a0 : xor eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000417802 : xor eax, dword ptr [rcx] ; ret
0x0000000000406b49 : xor edx, edx ; ret
