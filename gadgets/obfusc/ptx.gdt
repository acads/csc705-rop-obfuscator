0x000000000042a5d5 : adc ah, al ; ret 0x1b2
0x0000000000428312 : adc ah, al ; ret 0x8589
0x000000000042a5f1 : adc ah, al ; ret 0x958a
0x000000000041262d : adc ah, byte ptr [rdx] ; xchg eax, ebp ; mov bh, -0x47 ; ret
0x0000000000463b55 : adc al, -2 ; call rax
0x0000000000404342 : adc al, byte ptr [rax] ; add cl, ch ; ret
0x000000000046395c : adc bh, dl ; sti ; call rax
0x0000000000453ac6 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041c8d8 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000463b91 : adc byte ptr [rax], al ; add al, al ; and bh, dh ; call rax
0x0000000000455fe2 : adc byte ptr [rdi], ch ; ret
0x000000000042a460 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000418fe8 : adc byte ptr [rsi + 0x4f464eb9], ah ; ret
0x000000000045481c : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000046174e : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x00000000004389ce : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000046101b : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000450bda : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000045a87b : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x0000000000450cc6 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x00000000004501ff : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x000000000040f2a0 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000046391c : adc dl, dl ; cli ; call rax
0x00000000004454ab : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040614f : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041286a : adc dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x0000000000456282 : adc dword ptr [rdi], ebp ; ret
0x00000000004394cb : adc eax, 0x558abda1 ; ret
0x000000000040ee62 : adc eax, 0xc700001c ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000043caa9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042458b : adc eax, ebp ; js 0x42457c ; ret
0x0000000000420ae0 : adc ebp, ecx ; ret
0x00000000004249df : adc ebp, ecx ; ret 0
0x0000000000464393 : add ah, ah ; add eax, 0x90580000 ; cld ; call qword ptr [rdx]
0x0000000000464073 : add ah, al ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; iretd ; sti ; call qword ptr [rax]
0x0000000000463e73 : add ah, al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; out -7, eax ; call rdx
0x0000000000464683 : add ah, dl ; or byte ptr [rax], al ; add byte ptr [rax], bh ; cdq ; std ; call rdx
0x000000000041dee6 : add al, 0 ; add al, ch ; ret 0x2f
0x0000000000458de1 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000421ad4 : add al, 0 ; add byte ptr [rbx + 0x122d9c45], cl ; ret
0x000000000040756d : add al, 0 ; add byte ptr [rbx + 0x272d9c45], cl ; ret 0x5f7
0x000000000041c8d9 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041d979 : add al, 0 ; add byte ptr [rbx + 0x5a2d9c45], cl ; scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000041cefa : add al, 0 ; add cl, ch ; ret 1
0x000000000044f19a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000046476f : add al, ah ; lahf ; std ; jmp qword ptr [rbx]
0x0000000000463b93 : add al, al ; and bh, dh ; call rax
0x0000000000464137 : add al, bh ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000464075 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; iretd ; sti ; call qword ptr [rax]
0x000000000040a23d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041d657 : add al, ch ; ret
0x000000000041dee8 : add al, ch ; ret 0x2f
0x0000000000464317 : add al, cl ; cmp bh, ah ; jmp qword ptr [rcx]
0x0000000000463b53 : add al, dh ; adc al, -2 ; call rax
0x00000000004638db : add al, dh ; in al, dx ; stc ; call rax
0x00000000004098aa : add bh, al ; in al, -0x23 ; ret 0x9426
0x00000000004095cb : add bh, al ; in al, -0x36 ; ret 0xde08
0x000000000044a421 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000044a3e0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000458bca : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000458de3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x00000000004100c3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040f538 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040fd00 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000040ee65 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000040f07e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000445184 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042c43a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000042c39b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000044275c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000442a43 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004434d1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000439309 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000040f4fa : add bh, bh ; ret 0x1589
0x00000000004623bf : add bl, dh ; ret
0x0000000000460982 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000460be4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040a749 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004639ab : add byte ptr [rax + 0xb], dh ; cld ; call qword ptr [rax]
0x000000000046484f : add byte ptr [rax - 0x12], dl ; std ; jmp rsi
0x0000000000463dcf : add byte ptr [rax - 0x26], al ; stc ; call qword ptr [rax]
0x0000000000463a2b : add byte ptr [rax - 0x63], dh ; cld ; call qword ptr [rax]
0x0000000000464527 : add byte ptr [rax - 0x6c], bl ; std ; jmp qword ptr [rbx]
0x0000000000464397 : add byte ptr [rax - 0x70], bl ; cld ; call qword ptr [rdx]
0x000000000040983f : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000043da6b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407d69 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x0000000000462231 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000421713 : add byte ptr [rax - 0x77], cl ; call 0xffffffffc3fe5ceb
0x0000000000406190 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000418a7e : add byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004638eb : add byte ptr [rax], ah ; cli ; call qword ptr [rax]
0x0000000000463adb : add byte ptr [rax], ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x000000000046395a : add byte ptr [rax], al ; adc bh, dl ; sti ; call rax
0x000000000046391a : add byte ptr [rax], al ; adc dl, dl ; cli ; call rax
0x000000000041d655 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004098a8 : add byte ptr [rax], al ; add bh, al ; in al, -0x23 ; ret 0x9426
0x00000000004097ff : add byte ptr [rax], al ; add bh, al ; in al, -0x36 ; ret 0xde08
0x000000000044a41f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000458bc8 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000445182 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004623bd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a747 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000463dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x26], al ; stc ; call qword ptr [rax]
0x000000000040983d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000407d67 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000046222f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040b0c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004623bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004002f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004002f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000041bf3f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000417e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405e36 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405fb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004002f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000463e75 : add byte ptr [rax], al ; add byte ptr [rax], bl ; out -7, eax ; call rdx
0x0000000000461dd4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000041e698 : add byte ptr [rax], al ; add byte ptr [rbx + 0x12dbc45], cl ; ret
0x0000000000421b1f : add byte ptr [rax], al ; add byte ptr [rbx + 0x132d9c45], cl ; ret
0x000000000044f927 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000040691f : add byte ptr [rax], al ; add byte ptr [rbx + 0x262d9c45], cl ; ret 0x5f7
0x0000000000424b1e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043c512 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406efb : add byte ptr [rax], al ; add byte ptr [rbx + 0x442d9c45], cl ; ret
0x0000000000404121 : add byte ptr [rax], al ; add byte ptr [rbx + 0x452d9c45], cl ; push rsp ; ret
0x0000000000403d9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x582d9c45], cl ; pop rsi ; ret 0x8904
0x000000000041d9c4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5b2d9c45], cl ; scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000044f891 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000408844 : add byte ptr [rax], al ; add byte ptr [rbx - 0x22d21fbb], cl ; ret 0x9426
0x0000000000443943 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000408c3e : add byte ptr [rax], al ; add byte ptr [rbx - 0x35d21fbb], cl ; ret 0xde08
0x000000000044ad9c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000446d81 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000446cd1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000420ed1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x00000000004462a9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000418b2b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000040516e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004639da : add byte ptr [rax], al ; add byte ptr [rcx], ah ; cld ; call rax
0x0000000000460983 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000407f73 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040631d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041a6b8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9589
0x0000000000422b0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000045fd51 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407da0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000449037 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000417e1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405e38 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a4ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000044e715 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044507a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405fb5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ae62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000044a6eb : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000464312 : add byte ptr [rax], al ; add eax, 0x3ac80000 ; cld ; jmp qword ptr [rcx]
0x000000000043caab : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420f9b : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004454ad : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402230 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000461cc7 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000464d3e : add byte ptr [rax], al ; and byte ptr [rax - 1], bl ; jmp qword ptr [rcx]
0x00000000004638ea : add byte ptr [rax], al ; and byte ptr [rdi - 6], cl ; call qword ptr [rax]
0x00000000004639db : add byte ptr [rax], al ; and esp, edi ; call rax
0x0000000000464956 : add byte ptr [rax], al ; call 0x13464770
0x0000000000464136 : add byte ptr [rax], al ; clc ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000464076 : add byte ptr [rax], al ; cmp bh, cl ; sti ; call qword ptr [rax]
0x00000000004639ea : add byte ptr [rax], al ; cmp byte ptr [rax], -4 ; call qword ptr [rax]
0x0000000000464392 : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; pop rax ; nop ; cld ; call qword ptr [rdx]
0x0000000000464522 : add byte ptr [rax], al ; je 0x464536 ; add byte ptr [rax], al ; pop rax ; xchg eax, esp ; std ; jmp qword ptr [rbx]
0x0000000000401879 : add byte ptr [rax], al ; jmp 0x401819
0x000000000044a6e7 : add byte ptr [rax], al ; jmp 0x44a6f6
0x000000000045a71f : add byte ptr [rax], al ; jmp 0x45a72e
0x00000000004639aa : add byte ptr [rax], al ; jo 0x4639be ; cld ; call qword ptr [rax]
0x0000000000463a2a : add byte ptr [rax], al ; jo 0x4639d0 ; cld ; call qword ptr [rax]
0x000000000040983e : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000046476e : add byte ptr [rax], al ; loopne 0x464716 ; std ; jmp qword ptr [rbx]
0x0000000000463aaa : add byte ptr [rax], al ; mov al, -0x5c ; std ; jmp qword ptr [rax]
0x0000000000463a1a : add byte ptr [rax], al ; mov al, -0x68 ; cld ; call rax
0x000000000044a78f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004609c8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421771 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422501 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000046476a : add byte ptr [rax], al ; mov esp, 0xe0000009 ; lahf ; std ; jmp qword ptr [rbx]
0x000000000040b0c5 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000464d3a : add byte ptr [rax], al ; mov word ptr [rdi], cs ; add byte ptr [rax], al ; and byte ptr [rax - 1], bl ; jmp qword ptr [rcx]
0x000000000046399a : add byte ptr [rax], al ; nop ; add esp, edi ; call rax
0x0000000000464396 : add byte ptr [rax], al ; pop rax ; nop ; cld ; call qword ptr [rdx]
0x0000000000464526 : add byte ptr [rax], al ; pop rax ; xchg eax, esp ; std ; jmp qword ptr [rbx]
0x0000000000408614 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c513 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c8da : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041264a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000046484e : add byte ptr [rax], al ; push rax ; out dx, al ; std ; jmp rsi
0x0000000000463ba2 : add byte ptr [rax], al ; push rax ; sub esi, edi ; call qword ptr [rax]
0x000000000046484a : add byte ptr [rax], al ; pushfq ; or al, byte ptr [rax] ; add byte ptr [rax - 0x12], dl ; std ; jmp rsi
0x00000000004002f6 : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 2
0x0000000000463e76 : add byte ptr [rax], al ; sbb bh, ah ; stc ; call rdx
0x0000000000463b92 : add byte ptr [rax], al ; shl byte ptr [rdx], -2 ; call rax
0x0000000000464586 : add byte ptr [rax], al ; test al, -0x6b ; std ; call rdi
0x0000000000464216 : add byte ptr [rax], al ; test al, 9 ; cld ; call qword ptr [rcx]
0x0000000000464132 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; clc ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000464c3f : add byte ptr [rax], al ; xchg esi, edi ; call rdi
0x000000000046392a : add byte ptr [rax], al ; xor dh, 0xfa ; call qword ptr [rax]
0x0000000000464687 : add byte ptr [rax], bh ; cdq ; std ; call rdx
0x0000000000464077 : add byte ptr [rax], bh ; iretd ; sti ; call qword ptr [rax]
0x0000000000463e77 : add byte ptr [rax], bl ; out -7, eax ; call rdx
0x000000000046391b : add byte ptr [rax], dl ; sar dl, cl ; call rax
0x000000000046395b : add byte ptr [rax], dl ; xlatb ; sti ; call rax
0x0000000000421335 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000461dd6 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x0000000000464313 : add byte ptr [rbp + rax], ah ; add al, cl ; cmp bh, ah ; jmp qword ptr [rcx]
0x0000000000461dcc : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000461dcb : add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x0000000000421ad6 : add byte ptr [rbx + 0x122d9c45], cl ; ret
0x000000000041e69a : add byte ptr [rbx + 0x12dbc45], cl ; ret
0x0000000000421b21 : add byte ptr [rbx + 0x132d9c45], cl ; ret
0x000000000044f8de : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x0000000000406b79 : add byte ptr [rbx + 0x1c2d9c45], cl ; popfq ; lodsd eax, dword ptr [rsi] ; ret 0x8589
0x000000000044f929 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x0000000000407317 : add byte ptr [rbx + 0x1d2d9c45], cl ; popfq ; lodsd eax, dword ptr [rsi] ; ret 0x8589
0x000000000041fb4e : add byte ptr [rbx + 0x22dbc45], cl ; ret
0x0000000000406921 : add byte ptr [rbx + 0x262d9c45], cl ; ret 0x5f7
0x000000000040756f : add byte ptr [rbx + 0x272d9c45], cl ; ret 0x5f7
0x0000000000424b20 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043c514 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c8db : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004040d8 : add byte ptr [rbx + 0x442d9c45], cl ; push rsp ; ret
0x0000000000406efd : add byte ptr [rbx + 0x442d9c45], cl ; ret
0x0000000000404123 : add byte ptr [rbx + 0x452d9c45], cl ; push rsp ; ret
0x0000000000406f93 : add byte ptr [rbx + 0x452d9c45], cl ; ret
0x0000000000403d54 : add byte ptr [rbx + 0x572d9c45], cl ; pop rsi ; ret 0x8904
0x0000000000403d9f : add byte ptr [rbx + 0x582d9c45], cl ; pop rsi ; ret 0x8904
0x000000000041d97b : add byte ptr [rbx + 0x5a2d9c45], cl ; scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000041d9c6 : add byte ptr [rbx + 0x5b2d9c45], cl ; scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000041264b : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000464133 : add byte ptr [rbx + rax - 0x12080000], al ; sti ; call qword ptr [rax]
0x000000000044f893 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000044f848 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x0000000000408846 : add byte ptr [rbx - 0x22d21fbb], cl ; ret 0x9426
0x0000000000408804 : add byte ptr [rbx - 0x23d21fbb], cl ; ret 0x9426
0x0000000000443945 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004438fa : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000408c40 : add byte ptr [rbx - 0x35d21fbb], cl ; ret 0xde08
0x0000000000408bf5 : add byte ptr [rbx - 0x36d21fbb], cl ; ret 0xde08
0x0000000000410f07 : add byte ptr [rbx - 0x3cd23fbb], cl ; or dword ptr [rsi], edi ; ret 0x8589
0x0000000000410ebc : add byte ptr [rbx - 0x3dd23fbb], cl ; or dword ptr [rsi], edi ; ret 0x8589
0x000000000044ad9e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000446d83 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000446cd3 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000426007 : add byte ptr [rbx - 0x6dd237bb], cl ; jge 0x425fea ; ret
0x0000000000425fbc : add byte ptr [rbx - 0x6ed237bb], cl ; jge 0x425f9f ; ret
0x0000000000422502 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000420ed3 : add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x0000000000421772 : add byte ptr [rbx - 0x76b70bbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004609c9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004462ab : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040359d : add byte ptr [rbx - 0x8d263bb], cl ; xor al, 0xffffffffffffff93 ; ret 0x8589
0x0000000000403552 : add byte ptr [rbx - 0x9d263bb], cl ; xor al, 0xffffffffffffff93 ; ret 0x8589
0x000000000041fe16 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406135 : add byte ptr [rcx + 0x45c78114], cl ; lodsb al, byte ptr [rsi] ; push r12 ; ret
0x0000000000418b2d : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000040f357 : add byte ptr [rcx + 0xf], al ; lahf ; ret 0x8445
0x0000000000405170 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000046476b : add byte ptr [rcx + rcx - 0x60200000], bh ; std ; jmp qword ptr [rbx]
0x00000000004639dc : add byte ptr [rcx], ah ; cld ; call rax
0x00000000004451ee : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401dd8 : add byte ptr [rcx], al ; ret
0x0000000000460985 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000407f75 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000040631f : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041a6ba : add byte ptr [rcx], ch ; ret 0x9589
0x000000000043f1ff : add byte ptr [rdi + 0x2a], cl ; ret
0x0000000000412616 : add byte ptr [rdi + 0x3e09c3b9], ah ; ret 0x1b2
0x0000000000464523 : add byte ptr [rdi + rax], dh ; add byte ptr [rax - 0x6c], bl ; std ; jmp qword ptr [rbx]
0x0000000000422b0f : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000045fd53 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407da2 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000449039 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000417e20 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405e3a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a4f0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004185b7 : add byte ptr [rdi], cl ; xchg eax, ebp ; shl byte ptr [rcx + rax], -0x78 ; ret
0x000000000044e717 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044507c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405fb7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ae64 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000046484b : add byte ptr [rdx + rcx - 0x11b00000], bl ; std ; jmp rsi
0x000000000040e7d3 : add byte ptr [rip + 0x5de9b9b5], dh ; ret
0x0000000000463aa8 : add byte ptr [rip - 0x5b500000], cl ; std ; jmp qword ptr [rax]
0x0000000000401dd7 : add byte ptr es:[rcx], al ; ret
0x0000000000417e1a : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004183a4 : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043943c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000404344 : add cl, ch ; ret
0x0000000000402e45 : add cl, ch ; ret 0x1a
0x0000000000404745 : add cl, ch ; ret 1
0x000000000045942a : add cl, ch ; ret 9
0x000000000044a3de : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042ccc3 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004434cf : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000045a43c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041fb4c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x22dbc45], cl ; ret
0x00000000004122bb : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045fed2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000457969 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045ef0e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040e7f8 : add dword ptr [rsi + 0x5de9b980], eax ; ret
0x0000000000401dd4 : add eax, 0x2645be ; add ebx, esi ; ret
0x0000000000464315 : add eax, 0x3ac80000 ; cld ; jmp qword ptr [rcx]
0x00000000004638e9 : add eax, 0x4f200000 ; cli ; call qword ptr [rax]
0x000000000044a343 : add eax, 0x5d5b0000 ; ret
0x0000000000464395 : add eax, 0x90580000 ; cld ; call qword ptr [rdx]
0x0000000000426bc8 : add eax, 0x92b80000 ; jge 0x426ba9 ; ret
0x0000000000426bc7 : add eax, 0x92b80000 ; jge 0x426baa ; ret
0x0000000000442b8c : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004638d9 : add eax, 0xecf00000 ; stc ; call rax
0x0000000000464135 : add eax, dword ptr [rax] ; add al, bh ; in eax, dx ; sti ; call qword ptr [rax]
0x000000000042ca45 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000412649 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040aba6 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004017f9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401d9b : add eax, edx ; sar rax, 1 ; jne 0x401dac ; pop rbp ; ret
0x000000000045a579 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401dd9 : add ebx, esi ; ret
0x0000000000406138 : add edi, 0x5445ac45 ; ret
0x000000000041020c : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040f665 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e874 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rcx]
0x000000000040fd23 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000040f183 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x00000000004022a9 : add esp, 0x10 ; pop rbp ; ret
0x00000000004451ec : add esp, 0x100 ; pop rbp ; ret
0x000000000045e93a : add esp, 0x120 ; pop rbp ; ret
0x000000000045c2aa : add esp, 0x1360 ; pop rbp ; ret
0x000000000040a803 : add esp, 0x160 ; pop rbp ; ret
0x000000000041d50f : add esp, 0x180 ; pop rbp ; ret
0x00000000004239d0 : add esp, 0x190 ; pop rbp ; ret
0x000000000044535c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041e2dd : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000420f9e : add esp, 0x20 ; pop rbp ; ret
0x0000000000427058 : add esp, 0x280 ; pop rbp ; ret
0x00000000004400f1 : add esp, 0x320 ; pop rbp ; ret
0x0000000000412646 : add esp, 0x348 ; pop rbx ; pop rbp ; ret
0x000000000045e012 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x0000000000408610 : add esp, 0x3e0 ; pop rbp ; ret
0x00000000004454b0 : add esp, 0x40 ; pop rbp ; ret
0x000000000044f399 : add esp, 0x440 ; pop rbp ; ret
0x0000000000402233 : add esp, 0x50 ; pop rbp ; ret
0x0000000000420cc1 : add esp, 0x550 ; pop rbp ; ret
0x000000000044a340 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x00000000004433fc : add esp, 0x5b0 ; pop rbp ; ret
0x00000000004463d0 : add esp, 0x60 ; pop rbp ; ret
0x000000000042ac64 : add esp, 0x650 ; pop rbp ; ret
0x000000000040210e : add esp, 0x70 ; pop rbp ; ret
0x0000000000423b96 : add esp, 0x80 ; pop rbp ; ret
0x0000000000422ec6 : add esp, 0x90 ; pop rbp ; ret
0x000000000043ec06 : add esp, 0xa0 ; pop rbp ; ret
0x000000000043ca0b : add esp, 0xb0 ; pop rbp ; ret
0x0000000000412edb : add esp, 0xc0 ; pop rbp ; ret
0x000000000041a1e9 : add esp, 0xc08 ; pop rbx ; pop rbp ; ret
0x0000000000422bdc : add esp, 0xd0 ; pop rbp ; ret
0x0000000000440783 : add esp, 0xe0 ; pop rbp ; ret
0x000000000044c79f : add esp, 0xf0 ; pop rbp ; ret
0x000000000042d3c3 : add esp, 8 ; pop rbp ; ret
0x00000000004017fe : add esp, 8 ; ret
0x000000000046399d : add esp, edi ; call rax
0x0000000000412648 : add rax, qword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401d9a : add rax, rdx ; sar rax, 1 ; jne 0x401dad ; pop rbp ; ret
0x000000000045a578 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004022a8 : add rsp, 0x10 ; pop rbp ; ret
0x00000000004451eb : add rsp, 0x100 ; pop rbp ; ret
0x000000000045e939 : add rsp, 0x120 ; pop rbp ; ret
0x000000000045c2a9 : add rsp, 0x1360 ; pop rbp ; ret
0x000000000040a802 : add rsp, 0x160 ; pop rbp ; ret
0x000000000041d50e : add rsp, 0x180 ; pop rbp ; ret
0x00000000004239cf : add rsp, 0x190 ; pop rbp ; ret
0x000000000044535b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041e2dc : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000420f9d : add rsp, 0x20 ; pop rbp ; ret
0x0000000000427057 : add rsp, 0x280 ; pop rbp ; ret
0x00000000004400f0 : add rsp, 0x320 ; pop rbp ; ret
0x0000000000412645 : add rsp, 0x348 ; pop rbx ; pop rbp ; ret
0x000000000045e011 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000040860f : add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004454af : add rsp, 0x40 ; pop rbp ; ret
0x000000000044f398 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000402232 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000420cc0 : add rsp, 0x550 ; pop rbp ; ret
0x000000000044a33f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x00000000004433fb : add rsp, 0x5b0 ; pop rbp ; ret
0x00000000004463cf : add rsp, 0x60 ; pop rbp ; ret
0x000000000042ac63 : add rsp, 0x650 ; pop rbp ; ret
0x000000000040210d : add rsp, 0x70 ; pop rbp ; ret
0x0000000000423b95 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000422ec5 : add rsp, 0x90 ; pop rbp ; ret
0x000000000043ec05 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000043ca0a : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000412eda : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041a1e8 : add rsp, 0xc08 ; pop rbx ; pop rbp ; ret
0x0000000000422bdb : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000440782 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000044c79e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000042d3c2 : add rsp, 8 ; pop rbp ; ret
0x00000000004017fd : add rsp, 8 ; ret
0x000000000046098d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000457968 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045ef0d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000463b95 : and bh, dh ; call rax
0x0000000000428189 : and bl, ch ; ret 0x89b1
0x0000000000464d40 : and byte ptr [rax - 1], bl ; jmp qword ptr [rcx]
0x00000000004400f3 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cf6d : and byte ptr [rbx], bl ; ret 0x8589
0x000000000045e93c : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004638ec : and byte ptr [rdi - 6], cl ; call qword ptr [rax]
0x0000000000445fdb : and byte ptr [rsi + 0x58], ah ; jb 0x446012 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041262e : and dl, byte ptr [rbp + 0x9c3b9b7] ; ret 0x1b2
0x000000000040d19d : and dword ptr [rbx], ebx ; ret 0x8589
0x000000000040faf0 : and dword ptr [rbx], ebx ; ret 0x8b48
0x0000000000438671 : and eax, 0x75b4b9d3 ; ret
0x000000000044a78d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000418206 : and eax, 0xa8b80000 ; ret 0xda53
0x00000000004281dd : and ebx, ebp ; ret 0x89b1
0x000000000042a465 : and ebx, ebp ; ret 0x8bb1
0x000000000042a449 : and ebx, ebp ; ret 0xb2b1
0x00000000004639dd : and esp, edi ; call rax
0x0000000000464958 : call 0x1346476e
0x000000000040fc73 : call 0x377dfe
0x000000000042cd26 : call 0x401987
0x000000000041d162 : call 0x401ab7
0x000000000041265c : call 0x412669
0x000000000041265b : call 0x41266a
0x00000000004463d5 : call 0x446499
0x0000000000429dca : call 0x4592e6
0x000000000044b33d : call 0xffffffffaca57571
0x000000000044b33c : call 0xffffffffaca57572
0x0000000000421717 : call 0xffffffffc3fe5ce7
0x0000000000421716 : call 0xffffffffc3fe5ce8
0x000000000043c129 : call 0xffffffffe9064a79
0x000000000043c128 : call 0xffffffffe9064a7a
0x0000000000412674 : call 0xffffffffeac2e904
0x0000000000412673 : call 0xffffffffeac2e905
0x000000000045c114 : call 0xfffffffff77e83d4
0x0000000000462399 : call qword ptr [r12 + rbx*8]
0x000000000044a427 : call qword ptr [rax]
0x000000000043d8ee : call qword ptr [rbx]
0x0000000000457a6c : call qword ptr [rcx]
0x000000000043b5b4 : call qword ptr [rdi]
0x000000000043759b : call qword ptr [rdx]
0x000000000041a2bf : call qword ptr [rsi]
0x000000000046239a : call qword ptr [rsp + rbx*8]
0x0000000000401dfd : call rax
0x000000000041f6ee : call rbx
0x000000000043981b : call rcx
0x00000000004178da : call rdi
0x000000000041a57c : call rdx
0x00000000004100c9 : call rsi
0x000000000040f53e : call rsp
0x00000000004073be : cdq ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000464689 : cdq ; std ; call rdx
0x000000000045e938 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000427056 : clc ; add rsp, 0x280 ; pop rbp ; ret
0x000000000040860e : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x000000000044f397 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004433fa : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x0000000000446e47 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000445737 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044bd29 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000422bda : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000046231b : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000464138 : clc ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000401d9f : clc ; jne 0x401da8 ; pop rbp ; ret
0x0000000000420fb6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000044a9ee : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043da6f : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409843 : clc ; pop rbx ; pop rbp ; ret
0x000000000042ebfd : clc ; ret 0x77a8
0x00000000004097fe : cld ; add byte ptr [rax], al ; add bh, al ; in al, -0x36 ; ret 0xde08
0x00000000004022a7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045c2a8 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x000000000044b97e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044c79d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004639ae : cld ; call qword ptr [rax]
0x000000000046421a : cld ; call qword ptr [rcx]
0x000000000046439a : cld ; call qword ptr [rdx]
0x000000000046399e : cld ; call rax
0x0000000000424b4f : cld ; jmp 0x424bbc
0x0000000000424b4e : cld ; jmp 0x424bbd
0x000000000046431a : cld ; jmp qword ptr [rcx]
0x0000000000422505 : cld ; mov rsp, rbp ; pop rbp ; ret
0x00000000004639d6 : cld ; push qword ptr [rax + 9] ; and esp, edi ; call rax
0x0000000000463a16 : cld ; push qword ptr [rax - 0x4ffffff6] ; cwde ; cld ; call rax
0x0000000000463a26 : cld ; push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x63], dh ; cld ; call qword ptr [rax]
0x00000000004639a6 : cld ; push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0xb], dh ; cld ; call qword ptr [rax]
0x000000000040f07b : cld ; sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x000000000042834a : cld ; stc ; ret
0x00000000004638ee : cli ; call qword ptr [rax]
0x000000000046391e : cli ; call rax
0x000000000041591d : cli ; loop 0x415968 ; ret
0x0000000000445fe0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000463916 : cli ; push qword ptr [rax + 0x10000006] ; sar dl, cl ; call rax
0x00000000004638e6 : cli ; push rax ; add eax, 0x4f200000 ; cli ; call qword ptr [rax]
0x0000000000410307 : cli ; shl al, -0x47 ; ret 0xcd2
0x000000000046098c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043ec81 : cmc ; push rsi ; ret
0x0000000000444efb : cmc ; ret 0x4f0b
0x00000000004639ed : cmp ah, bh ; call qword ptr [rax]
0x0000000000415271 : cmp al, 0x63 ; ret 0x89f1
0x0000000000464319 : cmp bh, ah ; jmp qword ptr [rcx]
0x0000000000464078 : cmp bh, cl ; sti ; call qword ptr [rax]
0x000000000040f5d2 : cmp bl, ah ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x00000000004639ec : cmp byte ptr [rax], -4 ; call qword ptr [rax]
0x0000000000461dc9 : cmp byte ptr [rax], 0x46 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000042c8da : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x00000000004412b5 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x0000000000445091 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004476f7 : cmp dl, al ; ret
0x0000000000441261 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x00000000004120cb : cmp eax, 0x81f22948 ; ret 0xaf88
0x000000000045a7ad : cmp eax, 0xb8000001 ; ret
0x0000000000420c44 : cmp eax, 0xb91bfa78 ; ret 0x4e0e
0x00000000004497c9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000401d5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d70 ; pop rbp ; ret
0x0000000000418819 : cmp eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004394c7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000041560d : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xda53
0x0000000000463add : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x000000000044a342 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000463a1d : cwde ; cld ; call rax
0x0000000000461661 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000046106a : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000419f96 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000042cd2a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x00000000004389cb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040f29d : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000438b43 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000453ac2 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040e871 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rcx]
0x000000000040f180 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000409ce7 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043fb13 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000045a0b9 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x00000000004427df : dec dword ptr [rax - 0x77] ; ret 0x48e8
0x00000000004549ad : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x000000000044eef6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000453f7b : dec dword ptr [rax - 0x77] ; ret 0x8ce8
0x00000000004241bd : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000045530e : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x0000000000443139 : dec dword ptr [rax - 0x77] ; ret 0xeee8
0x0000000000443637 : dec dword ptr [rax - 0x77] ; ret 0xf0e8
0x0000000000458f7d : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000454fa9 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000459076 : dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004504d9 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000459fe6 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000402522 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x000000000043ec7c : dec dword ptr [rcx - 0xa167e3f] ; push rsi ; ret
0x0000000000444ef6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004504df : dec dword ptr [rdi] ; ret 0x4589
0x000000000040433e : dec dword ptr [rdi] ; test ah, dh ; adc al, byte ptr [rax] ; add cl, ch ; ret
0x000000000041161d : dec dword ptr [rdi] ; test al, bl ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000041cef6 : dec dword ptr [rdi] ; test bh, bl ; add al, 0 ; add cl, ch ; ret 1
0x000000000044fdce : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000040aba2 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], dl ; ret 1
0x00000000004073bb : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff6], bl ; ret
0x000000000042e8da : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000423db4 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000426448 : dec dword ptr [rdi] ; test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000417873 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000043f1ab : dec dword ptr [rsi + 0x2a] ; ret
0x00000000004434c8 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x0000000000403557 : div byte ptr [rbx + rdx*4] ; ret 0x8589
0x00000000004035a2 : div dword ptr [rbx + rdx*4] ; ret 0x8589
0x0000000000404a9a : div dword ptr [rbx + rdx*4] ; ret 0xb941
0x0000000000446d86 : enter -0x62d3, 0x51 ; ret 0x8929
0x0000000000446cd6 : enter -0x63d3, 0x51 ; ret 0x8929
0x000000000043fef4 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000044e979 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000454d20 : enter 0xf41, -0x6b ; ret 0x8445
0x0000000000422b0b : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000426fe0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423825 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422b45 : fdiv st(7), st(0) ; ret 0x5589
0x0000000000417e03 : fimul dword ptr [rax - 0x7f] ; ret 0
0x000000000044a5ab : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000045ef48 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000427d81 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044aa87 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000427d82 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000461752 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000044aa88 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000046239c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000454c44 : fsubr st(1) ; ret
0x00000000004453e3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044afec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042d3c1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000421775 : hlt ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401d70 : hlt ; pop rbp ; mov edi, 0x666338 ; jmp rax
0x000000000046392d : idiv dl ; call qword ptr [rax]
0x000000000044610b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000420437 : imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000442dc1 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000045a7ab : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x00000000004098ad : in al, -0x23 ; ret 0x9426
0x00000000004095ce : in al, -0x36 ; ret 0xde08
0x00000000004505c6 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000461a12 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000044c0e1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000464394 : in al, 5 ; add byte ptr [rax], al ; pop rax ; nop ; cld ; call qword ptr [rdx]
0x000000000044b3fc : in al, dx ; jmp 0x44b479
0x000000000044b3fb : in al, dx ; jmp 0x44b47a
0x0000000000450076 : in al, dx ; jmp 0x4506b6
0x0000000000450075 : in al, dx ; jmp 0x4506b7
0x0000000000402528 : in al, dx ; pop rbp ; ret
0x00000000004638dd : in al, dx ; stc ; call rax
0x000000000042458a : in eax, dx ; adc eax, ebp ; js 0x42457d ; ret
0x000000000044336f : in eax, dx ; jge 0x443316 ; sub eax, 0x9a6b3ab9 ; ret
0x0000000000464139 : in eax, dx ; sti ; call qword ptr [rax]
0x0000000000457695 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004429a4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000463aa7 : inc dword ptr [rax] ; or eax, 0xa4b00000 ; std ; jmp qword ptr [rax]
0x000000000043fcf7 : inc dword ptr [rbp + 0xf] ; ret
0x000000000042c97e : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x0000000000404ab3 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004177f5 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000450245 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000045bb97 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x0000000000442d7b : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000463ad7 : inc eax ; or eax, 0xa7200000 ; std ; jmp rax
0x000000000044a479 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042cdcd : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000410440 : insb byte ptr [rdi], dx ; or eax, dword ptr [rcx] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x00000000004471b6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000044720a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000043e5d7 : int 0x5b
0x000000000041c931 : int1 ; ret 0x99c0
0x0000000000464079 : iretd ; sti ; call qword ptr [rax]
0x0000000000401d63 : ja 0x401d6a ; pop rbp ; ret
0x000000000042aff7 : ja 0x42afde ; ret 0x8974
0x000000000041c656 : jb 0x41c613 ; ret 0x8cc
0x000000000042ab6e : jb 0x42aba2 ; jl 0x42ab2f ; ret 0x8237
0x0000000000445fde : jb 0x44600f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000462a96 : jb 0x462afc ; outsb dx, byte ptr [rsi] ; ret
0x0000000000462a95 : jb 0x462afd ; outsb dx, byte ptr [rsi] ; ret
0x00000000004532fd : jbe 0x4532bc ; push rcx ; jmp rsp
0x00000000004532fc : jbe 0x4532bd ; push rcx ; jmp rsp
0x0000000000464da1 : jbe 0x464da4 ; jmp qword ptr [rax]
0x0000000000401d6f : je 0x401d6d ; pop rbp ; mov edi, 0x666338 ; jmp rax
0x0000000000464524 : je 0x464534 ; add byte ptr [rax], al ; pop rax ; xchg eax, esp ; std ; jmp qword ptr [rbx]
0x000000000040d689 : jg 0x40d635 ; ret
0x000000000040f4d5 : jg 0x40f481 ; ret
0x000000000040f4f1 : jg 0x40f49d ; ret
0x0000000000420435 : jge 0x42040b ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x000000000042047c : jge 0x420452 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x00000000004204c3 : jge 0x420499 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x000000000042050a : jge 0x4204e0 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000420d6d : jge 0x420d43 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000425fc2 : jge 0x425f99 ; ret
0x000000000042600d : jge 0x425fe4 ; ret
0x0000000000426bcd : jge 0x426ba4 ; ret
0x0000000000427080 : jge 0x427057 ; ret
0x0000000000428349 : jge 0x42834a ; stc ; ret
0x0000000000429dc8 : jge 0x429d52 ; call 0x4592e8
0x0000000000437a66 : jge 0x4379eb ; ret 0xffd5
0x0000000000438530 : jge 0x438510 ; shr cl, cl ; ret 0x3b
0x0000000000443370 : jge 0x443315 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000042ab70 : jl 0x42ab2d ; ret 0x8237
0x000000000042ab6f : jl 0x42ab2e ; ret 0x8237
0x000000000045c987 : jl 0x45c951 ; ret
0x000000000045d750 : jl 0x45d71a ; ret
0x000000000040ca81 : jle 0x40ca2d ; ret
0x000000000042839d : jle 0x42839e ; stc ; ret
0x000000000042a701 : jle 0x42a702 ; stc ; ret
0x000000000040187b : jmp 0x401817
0x0000000000407c0c : jmp 0x4087be
0x0000000000408122 : jmp 0x4087bf
0x000000000040f4d1 : jmp 0x40f4e7
0x0000000000412041 : jmp 0x41291a
0x0000000000419799 : jmp 0x41a76f
0x000000000041c88f : jmp 0x41cb24
0x000000000041dee4 : jmp 0x41e373
0x000000000041fd46 : jmp 0x420eb0
0x00000000004216f4 : jmp 0x421810
0x0000000000421feb : jmp 0x42268b
0x0000000000424b50 : jmp 0x424bbb
0x000000000042a918 : jmp 0x42af02
0x0000000000438c80 : jmp 0x43c100
0x0000000000436b84 : jmp 0x43c101
0x0000000000437f51 : jmp 0x43c102
0x000000000044000c : jmp 0x44025e
0x000000000044431b : jmp 0x444d87
0x0000000000444258 : jmp 0x444d89
0x0000000000446383 : jmp 0x4463e8
0x000000000044947b : jmp 0x44a5c0
0x0000000000449e96 : jmp 0x44a5c1
0x000000000044a6e9 : jmp 0x44a6f4
0x000000000044b3fd : jmp 0x44b478
0x000000000044f236 : jmp 0x44f518
0x0000000000450077 : jmp 0x4506b5
0x00000000004505f3 : jmp 0x4506b7
0x0000000000450a7b : jmp 0x450a11
0x000000000045a721 : jmp 0x45a72c
0x000000000045a7ac : jmp 0x45a8f4
0x000000000045bc88 : jmp 0x45c413
0x000000000045dbce : jmp 0x45e241
0x000000000045d74a : jmp 0x45e243
0x0000000000461773 : jmp 0x46184c
0x0000000000444efa : jmp 0x4f5011f6
0x00000000004184b6 : jmp qword ptr [rax]
0x000000000041a635 : jmp qword ptr [rbx]
0x000000000040e87a : jmp qword ptr [rcx]
0x0000000000403a5e : jmp qword ptr [rdi]
0x000000000044023c : jmp qword ptr [rdx]
0x000000000041a30a : jmp qword ptr [rsi]
0x0000000000401d77 : jmp rax
0x000000000042cdd3 : jmp rbx
0x0000000000438a8a : jmp rcx
0x000000000042c3a1 : jmp rdi
0x0000000000401db7 : jmp rdx
0x000000000041a0fd : jmp rsi
0x000000000040f084 : jmp rsp
0x0000000000401da0 : jne 0x401da7 ; pop rbp ; ret
0x000000000040f4f8 : jno 0x40f523 ; add bh, bh ; ret 0x1589
0x000000000045a88b : jno 0x45a894 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000409ce5 : jnp 0x409ced ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000409ce4 : jnp 0x409cee ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045c933 : jnp 0x45c8fd ; ret
0x0000000000402110 : jo 0x402171 ; ret
0x000000000043197e : jo 0x43198a ; ret
0x00000000004335ee : jo 0x4335fa ; ret
0x0000000000436b3d : jo 0x436b49 ; ret
0x000000000043de24 : jo 0x43de85 ; ret
0x0000000000446e4b : jo 0x446eac ; ret
0x0000000000461ccc : jo 0x461d2d ; ret
0x00000000004639ac : jo 0x4639bc ; cld ; call qword ptr [rax]
0x0000000000463a2c : jo 0x4639ce ; cld ; call qword ptr [rax]
0x00000000004120c9 : js 0x412122 ; cmp eax, 0x81f22948 ; ret 0xaf88
0x000000000042458d : js 0x42457a ; ret
0x0000000000426a05 : js 0x426999 ; test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000042a447 : js 0x42a406 ; and ebx, ebp ; ret 0xb2b1
0x000000000042c107 : js 0x42c0ee ; ret 0x8974
0x000000000042c806 : js 0x42c7ed ; ret 0x8a74
0x000000000042c82c : js 0x42c813 ; ret 0xe974
0x0000000000418b30 : lahf ; ret
0x000000000040f35a : lahf ; ret 0x8445
0x0000000000422b11 : lahf ; ret 0xd284
0x0000000000464771 : lahf ; std ; jmp qword ptr [rbx]
0x000000000043852e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000454471 : lcall ptr [rsi - 7] ; ret 0xe980
0x000000000043962e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000425356 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429dc7 : lea edi, dword ptr [rbp - 0x80] ; call 0x4592e9
0x000000000042e275 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043e119 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409841 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042e274 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409840 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000408bfa : leave ; ret 0xde08
0x0000000000463b4f : ljmp ptr [rax - 0xffffff1] ; adc al, -2 ; call rax
0x00000000004212f2 : ljmp ptr [rcx] ; ret 0x8b48
0x0000000000459101 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x0000000000436e8e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004639a8 : lock or byte ptr [rax], al ; add byte ptr [rax + 0xb], dh ; cld ; call qword ptr [rax]
0x000000000040613b : lodsb al, byte ptr [rsi] ; push r12 ; ret
0x0000000000406b80 : lodsd eax, dword ptr [rsi] ; ret 0x8589
0x00000000004079ba : lodsd eax, dword ptr [rsi] ; ret 0x8b48
0x000000000040a67f : loop 0x40a666 ; xor al, ch ; ret 0x148
0x000000000040a67e : loop 0x40a667 ; xor al, ch ; ret 0x148
0x000000000040a692 : loop 0x40a679 ; xor al, ch ; ret 0x2948
0x000000000040a691 : loop 0x40a67a ; xor al, ch ; ret 0x2948
0x000000000041591e : loop 0x415967 ; ret
0x0000000000415cd6 : loop 0x415d1f ; ret
0x0000000000418cc7 : loop 0x418d10 ; ret
0x0000000000439e95 : loope 0x439e63 ; jmp 0x43c103
0x0000000000408612 : loopne 0x40861c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408bf8 : loopne 0x408c2a ; leave ; ret 0xde08
0x0000000000408bf7 : loopne 0x408c2b ; leave ; ret 0xde08
0x0000000000410309 : loopne 0x4102c6 ; ret 0xcd2
0x000000000042cbe8 : loopne 0x42cbf2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e273 : loopne 0x42e2c6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043d81d : loopne 0x43d883 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043ec04 : loopne 0x43ec57 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000440785 : loopne 0x44078c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000445a43 : loopne 0x445a4c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004463ce : loopne 0x44641e ; add esp, 0x60 ; pop rbp ; ret
0x00000000004463cd : loopne 0x44641f ; add esp, 0x60 ; pop rbp ; ret
0x000000000044aff0 : loopne 0x44aff7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044b982 : loopne 0x44b989 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004609cc : loopne 0x460a1b ; mov esp, ebp ; pop rbp ; ret
0x00000000004609cb : loopne 0x460a1c ; mov esp, ebp ; pop rbp ; ret
0x0000000000460c1c : loopne 0x460c6b ; mov esp, ebp ; pop rbp ; ret
0x0000000000460c1b : loopne 0x460c6c ; mov esp, ebp ; pop rbp ; ret
0x00000000004617c5 : loopne 0x4617cc ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464770 : loopne 0x464714 ; std ; jmp qword ptr [rbx]
0x0000000000424589 : mov ah, -0x13 ; adc eax, ebp ; js 0x42457e ; ret
0x00000000004083f0 : mov ah, -0x17 ; ret 3
0x0000000000437a5d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437b37 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000435ae5 : mov ah, 0x75 ; ret
0x000000000043e5f3 : mov al, -0x47 ; ret
0x0000000000463aac : mov al, -0x5c ; std ; jmp qword ptr [rax]
0x0000000000463a1c : mov al, -0x68 ; cld ; call rax
0x000000000040618e : mov al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044e9ff : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043ca0d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000463b90 : mov al, 0x10 ; add byte ptr [rax], al ; shl byte ptr [rdx], -2 ; call rax
0x0000000000463a18 : mov al, 0xa ; add byte ptr [rax], al ; mov al, -0x68 ; cld ; call rax
0x00000000004433fe : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000463918 : mov al, 6 ; add byte ptr [rax], al ; adc dl, dl ; cli ; call rax
0x0000000000463958 : mov al, 7 ; add byte ptr [rax], al ; adc bh, dl ; sti ; call rax
0x0000000000463998 : mov al, 8 ; add byte ptr [rax], al ; nop ; add esp, edi ; call rax
0x00000000004639d8 : mov al, 9 ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; cld ; call rax
0x000000000045f23d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045ef0a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045f16d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cf36 : mov al, cl ; ret
0x0000000000412630 : mov bh, -0x47 ; ret
0x0000000000450c25 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b0c3 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f485 : mov bl, 0x75 ; ret
0x0000000000417ab3 : mov byte ptr [rax - 1], cl ; ret 0x8948
0x000000000042c4bf : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420fb7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401dd3 : mov byte ptr [rip + 0x2645be], 1 ; ret
0x00000000004372df : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000045fed4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000045796b : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045ef10 : mov dh, -0x40 ; pop rbp ; ret
0x000000000046098a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000045fc01 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000042d9f9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042d5cf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b3fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x44b47b
0x000000000045a7a9 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x45a8f7
0x000000000041203e : mov dword ptr [rbp - 0x3c], eax ; jmp 0x41291d
0x000000000041dee1 : mov dword ptr [rbp - 0x48], ecx ; jmp 0x41e376
0x0000000000407c09 : mov dword ptr [rbp - 0x4c], eax ; jmp 0x4087c1
0x0000000000444318 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x444d8a
0x0000000000402523 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c88c : mov dword ptr [rbp - 0x80], eax ; jmp 0x41cb27
0x00000000004453e1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004022a5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042dcd6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a57c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000042d87d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041dee3 : mov eax, 0x484e9 ; add al, ch ; ret 0x2f
0x000000000040618f : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044624b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045eb74 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000454e75 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a791 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000044641e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042595e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044b275 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d9fc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000461a10 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004463cc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004609ca : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d87f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040618c : mov eax, dword ptr [rbp - 0x50] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d3bf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000421773 : mov eax, dword ptr [rbp - 0xc] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422503 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446e45 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044a9ec : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043da6d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d87e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000043a298 : mov ebp, 0xe19c53ba ; ret
0x000000000040f4f7 : mov ebp, 0xff002571 ; ret 0x1589
0x0000000000401dfb : mov ebp, esp ; call rax
0x0000000000401d61 : mov ebp, esp ; ja 0x401d6c ; pop rbp ; ret
0x000000000042c437 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000045bb9b : mov ecx, 0xba41a9ee ; ret
0x000000000041c93d : mov ecx, 0xf1409628 ; ret 0x99c0
0x000000000042d5cc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004079b3 : mov ecx, dword ptr [rbx + 0x1db90226] ; popfq ; lodsd eax, dword ptr [rsi] ; ret 0x8b48
0x00000000004532df : mov edi, 0x51b94936 ; jmp rsp
0x0000000000401df5 : mov edi, 0x665e20 ; mov rbp, rsp ; call rax
0x0000000000401d72 : mov edi, 0x666338 ; jmp rax
0x0000000000401db2 : mov edi, 0x666338 ; jmp rdx
0x00000000004492f6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000436b37 : mov edi, 0xb8000055 ; wait ; jo 0x436b4f ; ret
0x0000000000418d17 : mov edi, 0xffff3885 ; jmp qword ptr [rdi]
0x0000000000462397 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000462396 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044f1ae : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004372fb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041c92d : mov edx, 0xf1409628 ; ret 0x99c0
0x00000000004245e2 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000401dd5 : mov esi, 0x1002645 ; ret
0x0000000000438172 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000044f197 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401db0 : mov esi, eax ; mov edi, 0x666338 ; jmp rdx
0x0000000000455fc7 : mov esi, es ; ret
0x000000000046476c : mov esp, 0xe0000009 ; lahf ; std ; jmp qword ptr [rbx]
0x0000000000402527 : mov esp, ebp ; pop rbp ; ret
0x000000000042dcd5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a57b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000424588 : mov r12b, -0x13 ; adc eax, ebp ; js 0x42457f ; ret
0x00000000004083ef : mov r12b, -0x17 ; ret 3
0x000000000040618d : mov r8b, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000424a39 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044624a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045eb73 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000454e74 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044641d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042595d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004463cb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000446e44 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043da6c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401dfa : mov rbp, rsp ; call rax
0x0000000000401d60 : mov rbp, rsp ; ja 0x401d6d ; pop rbp ; ret
0x00000000004245e1 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000401daf : mov rsi, rax ; mov edi, 0x666338 ; jmp rdx
0x0000000000402526 : mov rsp, rbp ; pop rbp ; ret
0x0000000000402524 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000445fe1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000402525 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000464d3c : mov word ptr [rdi], cs ; add byte ptr [rax], al ; and byte ptr [rax - 1], bl ; jmp qword ptr [rcx]
0x0000000000410209 : movabs al, byte ptr [0xffff5c85c7018948] ; call rsi
0x000000000045dd5b : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x0000000000432dd8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000402109 : movabs dword ptr [0x5d70c48348fffffb], eax ; ret
0x0000000000436025 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000463aad : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x00000000004532fb : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x4532be ; push rcx ; jmp rsp
0x00000000004411f2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000428986 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000042a0a5 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x000000000045fed3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000045796a : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045ef0f : movzx eax, al ; pop rbp ; ret
0x0000000000420fba : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000044efa8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000046399c : nop ; add esp, edi ; call rax
0x0000000000464399 : nop ; cld ; call qword ptr [rdx]
0x000000000042f2c5 : nop ; ret
0x000000000043d6d2 : nop ; ret 0x148
0x000000000043d6e6 : nop ; ret 0x2948
0x00000000004623b8 : nop dword ptr [rax + rax] ; ret
0x0000000000442a41 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000041a1ec : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041f72d : or al, 0 ; add cl, ch ; ret
0x0000000000437a5a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437b34 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000461dc7 : or al, 0xffffffffffffff95 ; cmp byte ptr [rax], 0x46 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000042c399 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000442c85 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000046484d : or al, byte ptr [rax] ; add byte ptr [rax - 0x12], dl ; std ; jmp rsi
0x0000000000463a29 : or al, byte ptr [rax] ; add byte ptr [rax - 0x63], dh ; cld ; call qword ptr [rax]
0x0000000000408802 : or al, byte ptr [rax] ; add byte ptr [rbx - 0x23d21fbb], cl ; ret 0x9426
0x00000000004073bf : or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000454d1d : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x00000000004540e7 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000046105c : or byte ptr [rax + 0x69], cl ; ret 0x101
0x000000000041a1eb : or byte ptr [rax + rax], cl ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004540e8 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000042d5d0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004639a9 : or byte ptr [rax], al ; add byte ptr [rax + 0xb], dh ; cld ; call qword ptr [rax]
0x0000000000464685 : or byte ptr [rax], al ; add byte ptr [rax], bh ; cdq ; std ; call rdx
0x00000000004040d6 : or byte ptr [rax], al ; add byte ptr [rbx + 0x442d9c45], cl ; push rsp ; ret
0x00000000004438f8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000411621 : or byte ptr [rax], al ; add cl, ch ; ret
0x000000000040a4ea : or byte ptr [rcx + 0xaf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000427b7c : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x00000000004083d9 : or cl, byte ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x0000000000461c1c : or cl, ch ; ret 0
0x0000000000438b46 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042dcd4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046476d : or dword ptr [rax], eax ; add al, ah ; lahf ; std ; jmp qword ptr [rbx]
0x00000000004100c1 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000042c438 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004639d9 : or dword ptr [rax], eax ; add byte ptr [rax], al ; and esp, edi ; call rax
0x0000000000406f91 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x452d9c45], cl ; ret
0x000000000041261a : or dword ptr [rsi], edi ; ret 0x1b2
0x0000000000410ec2 : or dword ptr [rsi], edi ; ret 0x8589
0x000000000041d650 : or eax, 0x22bf0000 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000420f99 : or eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004199ab : or eax, 0x84b80000 ; ret
0x0000000000463aa9 : or eax, 0xa4b00000 ; std ; jmp qword ptr [rax]
0x0000000000463ad9 : or eax, 0xa7200000 ; std ; jmp rax
0x0000000000442c84 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000042a1f5 : or eax, 0xc8b80000 ; ret 0xdbca
0x0000000000442900 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000442b8d : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000440281 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403d52 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x572d9c45], cl ; pop rsi ; ret 0x8904
0x000000000042644c : or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000410441 : or eax, dword ptr [rcx] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x00000000004084c0 : or ecx, dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000042d87b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004639ad : or edi, esp ; call qword ptr [rax]
0x0000000000464219 : or esp, edi ; call qword ptr [rcx]
0x0000000000463e79 : out -7, eax ; call rdx
0x000000000043943b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045ef0c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000464851 : out dx, al ; std ; jmp rsi
0x000000000045f23f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043e5f2 : out dx, eax ; mov al, -0x47 ; ret
0x000000000044f199 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000462a98 : outsb dx, byte ptr [rsi] ; ret
0x000000000043a525 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000042f176 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043a570 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000445181 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044f19c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000445fdc : pop ax ; jb 0x446011 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043b3d9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004623ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043d81f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043b3db : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004623ae : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043b3dd : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004623b0 : pop r14 ; pop r15 ; ret
0x000000000041c8dd : pop r14 ; pop rbp ; ret
0x000000000043b3df : pop r15 ; pop rbp ; ret
0x00000000004623b2 : pop r15 ; ret
0x0000000000418fe7 : pop rax ; adc byte ptr [rsi + 0x4f464eb9], ah ; ret
0x0000000000445fdd : pop rax ; jb 0x446010 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000464398 : pop rax ; nop ; cld ; call qword ptr [rdx]
0x000000000040603d : pop rax ; pop rsi ; ret 0x4804
0x0000000000403da4 : pop rax ; pop rsi ; ret 0x8904
0x0000000000406024 : pop rax ; pop rsi ; ret 0xb204
0x0000000000464528 : pop rax ; xchg eax, esp ; std ; jmp qword ptr [rbx]
0x0000000000401dd2 : pop rbp ; mov byte ptr [rip + 0x2645be], 1 ; ret
0x0000000000401d71 : pop rbp ; mov edi, 0x666338 ; jmp rax
0x0000000000401dae : pop rbp ; mov rsi, rax ; mov edi, 0x666338 ; jmp rdx
0x00000000004623ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043b3dc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004623af : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004372e2 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004335b5 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004372fe : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401d65 : pop rbp ; ret
0x0000000000451ab3 : pop rbp ; stc ; ret 0x8980
0x000000000043d81e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c515 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c8dc : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409844 : pop rbx ; pop rbp ; ret
0x0000000000443900 : pop rbx ; ret
0x000000000041d9cb : pop rbx ; scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000041deef : pop rbx ; scasb al, byte ptr [rdi] ; ret 0xb9de
0x000000000041e2e8 : pop rbx ; scasb al, byte ptr [rdi] ; ret 0xe9de
0x00000000004372e3 : pop rcx ; ret 0x1b2
0x00000000004319b6 : pop rcx ; ret 0x8589
0x00000000004372ff : pop rcx ; ret 0x8b48
0x0000000000439630 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000418205 : pop rdi ; and eax, 0xa8b80000 ; ret 0xda53
0x000000000043b3e0 : pop rdi ; pop rbp ; ret
0x00000000004623b3 : pop rdi ; ret
0x000000000042c398 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000041d980 : pop rdx ; scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000043b3de : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004623b1 : pop rsi ; pop r15 ; ret
0x000000000041c8de : pop rsi ; pop rbp ; ret
0x000000000045b62d : pop rsi ; ret
0x000000000040603e : pop rsi ; ret 0x4804
0x0000000000403d5a : pop rsi ; ret 0x8904
0x0000000000406025 : pop rsi ; ret 0xb204
0x0000000000451b07 : pop rsi ; stc ; ret 0x8980
0x0000000000454472 : pop rsi ; stc ; ret 0xe980
0x000000000043b3da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004623ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043d820 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004319b5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000463a2d : popfq ; cld ; call qword ptr [rax]
0x0000000000406b7f : popfq ; lodsd eax, dword ptr [rsi] ; ret 0x8589
0x00000000004079b9 : popfq ; lodsd eax, dword ptr [rsi] ; ret 0x8b48
0x0000000000446d88 : popfq ; push rcx ; ret 0x8929
0x0000000000446db6 : popfq ; push rcx ; ret 0xb929
0x000000000045fd55 : popfq ; ret 0xd284
0x000000000040f1da : popfq ; sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x00000000004372e0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000045dbcf : push -0x47fffffa ; ret
0x00000000004394ca : push -0x75425eeb ; push rbp ; ret
0x0000000000436028 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000463917 : push qword ptr [rax + 0x10000006] ; sar dl, cl ; call rax
0x0000000000463957 : push qword ptr [rax + 0x10000007] ; xlatb ; sti ; call rax
0x0000000000463bcf : push qword ptr [rax + 0x60000011] ; sub al, -2 ; call rax
0x00000000004639d7 : push qword ptr [rax + 9] ; and esp, edi ; call rax
0x0000000000463b8f : push qword ptr [rax - 0x3ffffff0] ; and bh, dh ; call rax
0x0000000000463a17 : push qword ptr [rax - 0x4ffffff6] ; cwde ; cld ; call rax
0x0000000000463997 : push qword ptr [rax - 0x6ffffff8] ; add esp, edi ; call rax
0x00000000004638d7 : push qword ptr [rax - 0xffffffb] ; in al, dx ; stc ; call rax
0x0000000000454c40 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000404128 : push r12 ; ret
0x00000000004638e7 : push rax ; add eax, 0x4f200000 ; cli ; call qword ptr [rax]
0x00000000004120ca : push rax ; cmp eax, 0x81f22948 ; ret 0xaf88
0x0000000000451867 : push rax ; jmp rsp
0x0000000000463a27 : push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x63], dh ; cld ; call qword ptr [rax]
0x00000000004639a7 : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0xb], dh ; cld ; call qword ptr [rax]
0x0000000000464850 : push rax ; out dx, al ; std ; jmp rsi
0x0000000000402235 : push rax ; pop rbp ; ret
0x0000000000463ba4 : push rax ; sub esi, edi ; call qword ptr [rax]
0x0000000000422b44 : push rbp ; fdiv st(7), st(0) ; ret 0x5589
0x0000000000461751 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000417ab2 : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000401df4 : push rbp ; mov edi, 0x665e20 ; mov rbp, rsp ; call rax
0x000000000040a508 : push rbp ; ret
0x0000000000439466 : push rbp ; ret 0xd284
0x0000000000407d6c : push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8948
0x000000000042cd27 : push rbp ; std ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000437a5f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437b39 : push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004098a7 : push rbx ; add byte ptr [rax], al ; add bh, al ; in al, -0x23 ; ret 0x9426
0x0000000000453ac5 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040e7f7 : push rcx ; add dword ptr [rsi + 0x5de9b980], eax ; ret
0x0000000000442dc0 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000045277f : push rcx ; jmp rsp
0x0000000000442a40 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000446cd9 : push rcx ; ret 0x8929
0x0000000000446db7 : push rcx ; ret 0xb929
0x00000000004507a3 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x000000000044f19b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000403d59 : push rdi ; pop rsi ; ret 0x8904
0x0000000000421a06 : push rsi ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043ec82 : push rsi ; ret
0x00000000004040de : push rsp ; ret
0x000000000046484c : pushfq ; or al, byte ptr [rax] ; add byte ptr [rax - 0x12], dl ; std ; jmp rsi
0x0000000000446cd8 : pushfq ; push rcx ; ret 0x8929
0x0000000000407da4 : pushfq ; ret 0xd284
0x0000000000443371 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004002f8 : ret
0x0000000000417e06 : ret 0
0x000000000045a87e : ret 0x10
0x0000000000458329 : ret 0x1002
0x000000000046105f : ret 0x101
0x00000000004042f6 : ret 0x11
0x000000000045ad41 : ret 0x12
0x00000000004581f5 : ret 0x1252
0x000000000044f3f8 : ret 0x12e8
0x000000000041f64b : ret 0x14
0x000000000040a683 : ret 0x148
0x000000000040f4fc : ret 0x1589
0x000000000040d865 : ret 0x15d6
0x0000000000404d97 : ret 0x16
0x0000000000450cc9 : ret 0x18
0x0000000000407dea : ret 0x191
0x00000000004086b6 : ret 0x1977
0x0000000000402e47 : ret 0x1a
0x000000000042f8ad : ret 0x1add
0x000000000041261c : ret 0x1b2
0x0000000000409bab : ret 0x1be
0x00000000004189a2 : ret 0x1d
0x000000000045e170 : ret 0x1d90
0x00000000004027b7 : ret 0x1f
0x00000000004301fa : ret 0x23da
0x0000000000401c82 : ret 0x2645
0x0000000000401a82 : ret 0x2646
0x0000000000401882 : ret 0x2647
0x000000000043cef8 : ret 0x279e
0x000000000040d411 : ret 0x29
0x0000000000417dfa : ret 0x2944
0x000000000040a696 : ret 0x2948
0x0000000000439634 : ret 0x2a
0x0000000000417aa2 : ret 0x2c
0x0000000000437a62 : ret 0x2d50
0x000000000041deea : ret 0x2f
0x0000000000429e53 : ret 0x3040
0x000000000045bb92 : ret 0x38e8
0x0000000000438534 : ret 0x3b
0x000000000042966d : ret 0x3c58
0x0000000000435595 : ret 0x3e
0x0000000000410ec1 : ret 0x3e09
0x000000000045dac7 : ret 0x3e8
0x000000000045a0bc : ret 0x3ee8
0x00000000004193b8 : ret 0x4112
0x0000000000461491 : ret 0x43dd
0x000000000045a5e0 : ret 0x4449
0x0000000000418c0a : ret 0x44ab
0x00000000004504e2 : ret 0x4589
0x0000000000429326 : ret 0x4777
0x00000000004389d1 : ret 0x4802
0x000000000040603f : ret 0x4804
0x000000000046101e : ret 0x4810
0x000000000044f19e : ret 0x4815
0x0000000000450bdd : ret 0x4818
0x000000000043a526 : ret 0x4861
0x0000000000418b6a : ret 0x48ab
0x000000000045af11 : ret 0x48c
0x000000000045333b : ret 0x48c0
0x00000000004193c6 : ret 0x48c2
0x00000000004427e2 : ret 0x48e8
0x00000000004023e7 : ret 0x48f0
0x00000000004549b0 : ret 0x4ae8
0x0000000000432de1 : ret 0x4b
0x000000000041aeb8 : ret 0x4b8e
0x000000000043e3f7 : ret 0x4cc0
0x000000000045c07e : ret 0x4ce8
0x000000000043b438 : ret 0x4cf0
0x000000000041f991 : ret 0x4e0e
0x0000000000444efc : ret 0x4f0b
0x00000000004120c8 : ret 0x5078
0x000000000045cec7 : ret 0x5452
0x0000000000407f77 : ret 0x5589
0x0000000000451034 : ret 0x581e
0x0000000000437cea : ret 0x5966
0x0000000000440c96 : ret 0x5aa2
0x0000000000443b57 : ret 0x5bc6
0x0000000000406927 : ret 0x5f7
0x000000000045b921 : ret 0x6044
0x000000000046098f : ret 0x61
0x0000000000411998 : ret 0x65b1
0x0000000000420a23 : ret 0x660e
0x000000000042ef46 : ret 0x6a8a
0x000000000045ce58 : ret 0x701
0x00000000004193ce : ret 0x762c
0x000000000042ebfe : ret 0x77a8
0x000000000042fd61 : ret 0x7a8a
0x0000000000423b60 : ret 0x7ae8
0x00000000004369db : ret 0x7b7f
0x000000000042cd2d : ret 0x7f0f
0x000000000043d38a : ret 0x8041
0x000000000043d5d2 : ret 0x8141
0x000000000040952d : ret 0x8148
0x00000000004388f4 : ret 0x822d
0x0000000000429ab1 : ret 0x8237
0x0000000000411934 : ret 0x834b
0x0000000000404ab7 : ret 0x8445
0x000000000041a409 : ret 0x8588
0x000000000040355a : ret 0x8589
0x0000000000458d20 : ret 0x85c7
0x0000000000461dd9 : ret 0x8845
0x0000000000403d5b : ret 0x8904
0x0000000000446cda : ret 0x8929
0x000000000042f973 : ret 0x8940
0x0000000000417df1 : ret 0x8941
0x000000000042c982 : ret 0x8944
0x0000000000407d70 : ret 0x8948
0x000000000044d7bf : ret 0x894a
0x00000000004507a7 : ret 0x894d
0x000000000042f177 : ret 0x8961
0x000000000042aff9 : ret 0x8974
0x0000000000451ab5 : ret 0x8980
0x000000000041487f : ret 0x89ab
0x000000000042818b : ret 0x89b1
0x00000000004120d3 : ret 0x89b7
0x000000000041d982 : ret 0x89de
0x0000000000415273 : ret 0x89f1
0x0000000000428987 : ret 0x89f4
0x000000000044edb8 : ret 0x8a44
0x000000000044ecb5 : ret 0x8a4a
0x000000000042c808 : ret 0x8a74
0x0000000000419146 : ret 0x8af1
0x0000000000406321 : ret 0x8b48
0x000000000042a467 : ret 0x8bb1
0x000000000041ac34 : ret 0x8cc
0x0000000000453f7e : ret 0x8ce8
0x000000000040880a : ret 0x9426
0x000000000041a6bc : ret 0x9589
0x000000000042a5f3 : ret 0x958a
0x0000000000417d81 : ret 0x9813
0x000000000041c933 : ret 0x99c0
0x000000000040955d : ret 0x9be9
0x00000000004471b7 : ret 0x9e6d
0x0000000000403fa4 : ret 0xa
0x0000000000428819 : ret 0xa2bc
0x0000000000437b3c : ret 0xa30b
0x000000000044b33f : ret 0xac60
0x0000000000410fbb : ret 0xadcc
0x00000000004120d0 : ret 0xaf88
0x0000000000442acf : ret 0xb
0x0000000000420ed9 : ret 0xb0
0x0000000000406026 : ret 0xb204
0x000000000042a44b : ret 0xb2b1
0x00000000004619e2 : ret 0xb60f
0x0000000000439440 : ret 0xb740
0x0000000000445fd7 : ret 0xb848
0x000000000045dd81 : ret 0xb904
0x0000000000446db8 : ret 0xb929
0x0000000000437670 : ret 0xb940
0x0000000000404a9d : ret 0xb941
0x000000000044ec42 : ret 0xb94a
0x000000000041def1 : ret 0xb9de
0x0000000000449ba6 : ret 0xb9f1
0x000000000042a0a6 : ret 0xb9f4
0x00000000004125aa : ret 0xbe0f
0x000000000044f8e4 : ret 0xbe70
0x0000000000439abc : ret 0xbf48
0x0000000000450202 : ret 0xc
0x000000000040669c : ret 0xc1
0x0000000000401d95 : ret 0xc148
0x0000000000460bd2 : ret 0xc493
0x00000000004190f3 : ret 0xc7f1
0x000000000045eec9 : ret 0xca21
0x0000000000405970 : ret 0xca29
0x0000000000460995 : ret 0xccb2
0x000000000040d51d : ret 0xcd2
0x0000000000405e3d : ret 0xd284
0x0000000000418ede : ret 0xd3b9
0x000000000044d405 : ret 0xd618
0x000000000041bfd7 : ret 0xd689
0x000000000041560e : ret 0xda53
0x000000000042871e : ret 0xdbca
0x0000000000408bfb : ret 0xde08
0x000000000040a4f3 : ret 0xe280
0x0000000000442e25 : ret 0xe2b9
0x0000000000439312 : ret 0xe940
0x000000000043a571 : ret 0xe961
0x000000000042c82e : ret 0xe974
0x0000000000454474 : ret 0xe980
0x000000000041e2ea : ret 0xe9de
0x0000000000455311 : ret 0xe9e8
0x000000000043039d : ret 0xea51
0x0000000000406155 : ret 0xea81
0x000000000043c12c : ret 0xee8
0x000000000044313c : ret 0xeee8
0x000000000044363a : ret 0xf0e8
0x000000000042d865 : ret 0xf281
0x000000000044359c : ret 0xf3e9
0x0000000000438177 : ret 0xf41
0x000000000045aca9 : ret 0xf62a
0x000000000045b611 : ret 0xf738
0x0000000000455c0e : ret 0xf7c7
0x000000000043a0c5 : ret 0xf7f3
0x000000000043884e : ret 0xfc75
0x000000000043a0bf : ret 0xffa5
0x0000000000438848 : ret 0xffc4
0x0000000000437a68 : ret 0xffd5
0x0000000000437b42 : ret 0xffd8
0x00000000004388fa : ret 0xffd9
0x0000000000420a1d : ret 0xffdd
0x0000000000437ce4 : ret 0xffe0
0x000000000042ad4d : ret 0xfff9
0x00000000004369d5 : ret 0xfffa
0x0000000000465001 : ret 0xffff
0x0000000000404747 : ret 1
0x0000000000400718 : ret 2
0x00000000004083f2 : ret 3
0x0000000000423f15 : ret 4
0x0000000000406bee : ret 6
0x000000000043b834 : ret 8
0x000000000045942c : ret 9
0x000000000044f17d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000044bc9c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422bde : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004122b9 : rol byte ptr [rax], 1 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041e2df : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044f17c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040f5d4 : rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000042ad43 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x000000000040887c : ror byte ptr [r15], -0x7c ; ret
0x0000000000424a37 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000462234 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000445fd4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401d9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401dab ; pop rbp ; ret
0x0000000000424a38 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045796c : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000462235 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000407d6d : ror byte ptr [rax - 1], 1 ; ret 0x8948
0x00000000004185c6 : ror byte ptr [rcx + 0x458abd33], 1 ; ret
0x000000000042d87a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004619df : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x000000000040887d : ror byte ptr [rdi], -0x7c ; ret
0x0000000000463ad8 : ror byte ptr [rip - 0x58e00000], -3 ; jmp rax
0x000000000044efae : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043e2b0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000044903b : sahf ; ret 0xd284
0x000000000042a5d4 : salc ; adc ah, al ; ret 0x1b2
0x0000000000428365 : salc ; adc ah, al ; ret 0x8589
0x000000000042a5f0 : salc ; adc ah, al ; ret 0x958a
0x0000000000447dda : salc ; jmp qword ptr [rdi]
0x0000000000447d16 : salc ; sti ; ret 0x89f1
0x000000000042ad3d : sar dh, -1 ; call rdi
0x000000000042ad9e : sar dh, -1 ; call rdx
0x000000000042acb1 : sar dh, -1 ; call rsp
0x000000000042a57a : sar dh, -1 ; jmp qword ptr [rsi]
0x000000000046391d : sar dl, cl ; call rax
0x0000000000401d9e : sar eax, 1 ; jne 0x401da9 ; pop rbp ; ret
0x0000000000439631 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401d9d : sar rax, 1 ; jne 0x401daa ; pop rbp ; ret
0x000000000042a462 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000459104 : sbb al, -0x17 ; ret
0x0000000000406b7e : sbb al, -0x63 ; lodsd eax, dword ptr [rsi] ; ret 0x8589
0x00000000004434ca : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x000000000040ee63 : sbb al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000043e5f0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000045a43b : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a5ae : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000040756c : sbb al, byte ptr [rax + rax] ; add byte ptr [rbx + 0x272d9c45], cl ; ret 0x5f7
0x0000000000463e78 : sbb bh, ah ; stc ; call rdx
0x00000000004497cb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x000000000040f1db : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x00000000004507a4 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000439531 : sbb cl, ch ; ret
0x000000000040f07c : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000445823 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418b63 : sbb dword ptr [rdx*8 + 0x74cfb94c], eax ; ret 0x48ab
0x0000000000461cc5 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043d640 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x00000000004434cc : sbb ecx, ebp ; ret
0x0000000000463b65 : sbb esi, edi ; call qword ptr [rax]
0x0000000000418a7b : sbb esp, 0xff480024 ; ret 0x8948
0x000000000042ca44 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000041d981 : scasb al, byte ptr [rdi] ; ret 0x89de
0x000000000041def0 : scasb al, byte ptr [rdi] ; ret 0xb9de
0x000000000041e2e9 : scasb al, byte ptr [rdi] ; ret 0xe9de
0x00000000004120d2 : scasd eax, dword ptr [rdi] ; ret 0x89b7
0x0000000000410308 : shl al, -0x47 ; ret 0xcd2
0x00000000004185ba : shl byte ptr [rcx + rax], -0x78 ; ret
0x0000000000463b94 : shl byte ptr [rdx], -2 ; call rax
0x0000000000438532 : shr cl, cl ; ret 0x3b
0x0000000000464d3d : sldt word ptr [rax] ; and byte ptr [rax - 1], bl ; jmp qword ptr [rcx]
0x0000000000463dd2 : stc ; call qword ptr [rax]
0x00000000004638de : stc ; call rax
0x0000000000463e7a : stc ; call rdx
0x00000000004638d6 : stc ; push qword ptr [rax - 0xffffffb] ; in al, dx ; stc ; call rax
0x000000000042834b : stc ; ret
0x000000000043636d : stc ; ret 0x77a8
0x0000000000451ab4 : stc ; ret 0x8980
0x0000000000454473 : stc ; ret 0xe980
0x000000000042a445 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x00000000004646aa : std ; call qword ptr [rbx]
0x000000000046458a : std ; call rdi
0x000000000046468a : std ; call rdx
0x000000000042cd29 : std ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000463aa6 : std ; inc dword ptr [rax] ; or eax, 0xa4b00000 ; std ; jmp qword ptr [rax]
0x0000000000463ad6 : std ; inc eax ; or eax, 0xa7200000 ; std ; jmp rax
0x000000000042cdcc : std ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000463aae : std ; jmp qword ptr [rax]
0x000000000046452a : std ; jmp qword ptr [rbx]
0x0000000000463a9e : std ; jmp rax
0x0000000000464852 : std ; jmp rsi
0x0000000000463b4e : std ; ljmp ptr [rax - 0xffffff1] ; adc al, -2 ; call rax
0x000000000043cef7 : std ; ret 0x279e
0x0000000000421ad3 : sti ; add al, 0 ; add byte ptr [rbx + 0x122d9c45], cl ; ret
0x000000000041cef9 : sti ; add al, 0 ; add cl, ch ; ret 1
0x000000000046396e : sti ; call qword ptr [rax]
0x000000000046395e : sti ; call rax
0x0000000000415cd5 : sti ; loop 0x415d20 ; ret
0x0000000000418cc6 : sti ; loop 0x418d11 ; ret
0x0000000000463956 : sti ; push qword ptr [rax + 0x10000007] ; xlatb ; sti ; call rax
0x0000000000463996 : sti ; push qword ptr [rax - 0x6ffffff8] ; add esp, edi ; call rax
0x0000000000447d17 : sti ; ret 0x89f1
0x0000000000449ba5 : sti ; ret 0xb9f1
0x0000000000454c42 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000412868 : sub al, -0x33 ; adc dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x0000000000463bd5 : sub al, -2 ; call rax
0x0000000000424c9e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044b446 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000424b88 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437a65 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000437a5b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000437b35 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004388f5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000443372 : sub eax, 0x9a6b3ab9 ; ret
0x0000000000445fdf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000463ba5 : sub esi, edi ; call qword ptr [rax]
0x0000000000462401 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000462400 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000404340 : test ah, dh ; adc al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000464588 : test al, -0x6b ; std ; call rdi
0x0000000000437a60 : test al, -0x7f ; ret 0x2d50
0x0000000000437b3a : test al, -0x7f ; ret 0xa30b
0x0000000000449382 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044ea53 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043dcce : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000043a296 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000445078 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000045e014 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000464218 : test al, 9 ; cld ; call qword ptr [rcx]
0x000000000041161f : test al, bl ; or byte ptr [rax], al ; add cl, ch ; ret
0x000000000041cef8 : test bh, bl ; add al, 0 ; add cl, ch ; ret 1
0x000000000041dee5 : test byte ptr [rax + rax], al ; add al, ch ; ret 0x2f
0x000000000044fdd0 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x00000000004623ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040aba4 : test byte ptr [rbp - 0x16fffffd], dl ; ret 1
0x0000000000464134 : test byte ptr [rbx], al ; add byte ptr [rax], al ; clc ; in eax, dx ; sti ; call qword ptr [rax]
0x000000000040601f : test byte ptr [rcx + rbp + 0x5e58b995], bl ; ret 0xb204
0x00000000004073bd : test byte ptr [rcx - 0x16fffff6], bl ; ret
0x0000000000406f90 : test byte ptr [rcx], 0 ; add byte ptr [rbx + 0x452d9c45], cl ; ret
0x000000000042e8dc : test byte ptr [rcx], ch ; ret 0
0x0000000000459426 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x0000000000423db6 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000042644a : test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000042e8d6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040e7d2 : test dword ptr [rax], 0xe9b9b535 ; pop rbp ; ret
0x000000000041f01d : test dword ptr [rbp + rdi*8 - 0x70f00001], esi ; ret 6
0x0000000000426a07 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000044a423 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000044a47b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000044a3e2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000458bcc : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000458de5 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x00000000004100c5 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsi
0x000000000040f53a : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000040e876 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rcx]
0x000000000040fd02 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000040ee67 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000040f080 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000445186 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042c43c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000042cdcf : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000042c39d : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000043d8ea : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000044275e : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000442a45 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004434d3 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000043930b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000457a68 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x000000000042897f : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x00000000004289d3 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000043a56a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000428343 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x0000000000428397 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x000000000042835f : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x000000000042830b : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000042876b : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x0000000000428717 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x0000000000429373 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000042931f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x00000000004599af : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000043602a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000428d5e : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x000000000043a51f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000404a95 : test esi, 0xf7bfffff ; xor al, 0xffffffffffffff93 ; ret 0xb941
0x000000000043852f : wait ; jge 0x438511 ; shr cl, cl ; ret 0x3b
0x00000000004335ed : wait ; jo 0x4335fb ; ret
0x0000000000436b3c : wait ; jo 0x436b4a ; ret
0x000000000040e7f9 : xchg byte ptr [rax + 0x4d5de9b9], al ; ret
0x000000000044f198 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040aba5 : xchg eax, ebp ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000461dc8 : xchg eax, ebp ; cmp byte ptr [rax], 0x46 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000041262f : xchg eax, ebp ; mov bh, -0x47 ; ret
0x0000000000417e22 : xchg eax, ebp ; ret
0x0000000000404ab6 : xchg eax, ebp ; ret 0x8445
0x0000000000405e3c : xchg eax, ebp ; ret 0xd284
0x000000000040a4f2 : xchg eax, ebp ; ret 0xe280
0x00000000004185b9 : xchg eax, ebp ; shl byte ptr [rcx + rax], -0x78 ; ret
0x0000000000464589 : xchg eax, ebp ; std ; call rdi
0x000000000040f5d1 : xchg eax, ebx ; cmp bl, ah ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000042f175 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000435a75 : xchg eax, ebx ; ret
0x0000000000403559 : xchg eax, ebx ; ret 0x8589
0x0000000000404a9c : xchg eax, ebx ; ret 0xb941
0x0000000000425fc1 : xchg eax, ecx ; jge 0x425f9a ; ret
0x0000000000435ca5 : xchg eax, ecx ; ret
0x000000000044e719 : xchg eax, edi ; ret 0xd284
0x000000000042600c : xchg eax, edx ; jge 0x425fe5 ; ret
0x0000000000426bcc : xchg eax, edx ; jge 0x426ba5 ; ret
0x000000000042707f : xchg eax, edx ; jge 0x427058 ; ret
0x00000000004428ff : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000042f4f5 : xchg eax, edx ; ret
0x000000000043d39f : xchg eax, edx ; ret 0x8445
0x000000000044507e : xchg eax, edx ; ret 0xd284
0x000000000041c92f : xchg eax, esi ; int1 ; ret 0x99c0
0x000000000045bb9a : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x000000000044431a : xchg eax, esp ; jmp 0x444d88
0x0000000000444257 : xchg eax, esp ; jmp 0x444d8a
0x000000000043a524 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000435df5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043a56f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004177f8 : xchg eax, esp ; ret
0x000000000043d389 : xchg eax, esp ; ret 0x8041
0x0000000000450248 : xchg eax, esp ; ret 0x8445
0x00000000004619e1 : xchg eax, esp ; ret 0xb60f
0x000000000043943e : xchg eax, esp ; ret 0xb740
0x0000000000405fb9 : xchg eax, esp ; ret 0xd284
0x000000000040ae66 : xchg eax, esp ; ret 0xe280
0x0000000000464529 : xchg eax, esp ; std ; jmp qword ptr [rbx]
0x0000000000444319 : xchg eax, r12d ; jmp 0x444d89
0x0000000000464c41 : xchg esi, edi ; call rdi
0x00000000004411f1 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000046395d : xlatb ; sti ; call rax
0x0000000000447d6a : xlatb ; sti ; ret 0x89f1
0x0000000000449ba4 : xlatb ; sti ; ret 0xb9f1
0x000000000042ab6d : xor al, 0x72 ; jl 0x42ab30 ; ret 0x8237
0x0000000000403558 : xor al, 0xffffffffffffff93 ; ret 0x8589
0x0000000000404a9b : xor al, 0xffffffffffffff93 ; ret 0xb941
0x0000000000439439 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040a681 : xor al, ch ; ret 0x148
0x000000000040a694 : xor al, ch ; ret 0x2948
0x000000000042dcd7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042dcd8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046392c : xor dh, 0xfa ; call qword ptr [rax]
0x000000000040e7d4 : xor eax, 0x5de9b9b5 ; ret
0x000000000042a446 : xor eax, 0xeb21b978 ; ret 0xb2b1
