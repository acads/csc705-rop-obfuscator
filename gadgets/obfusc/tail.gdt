0x0000000000465129 : adc al, 0 ; add byte ptr [rax], ah ; test edi, esi ; call rax
0x0000000000466e38 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x0000000000466e08 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x10000019 ; ret
0x0000000000466df0 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; ret
0x000000000041dc6f : adc al, 0 ; add byte ptr [rbx - 0x23d21fbb], cl ; ret
0x000000000041038e : adc al, 0x2b ; mov byte ptr [rcx - 9], al ; jmp qword ptr [rcx]
0x0000000000465081 : adc al, byte ptr [rax] ; add byte ptr [rax + 0x78], al ; std ; jmp qword ptr [rax]
0x00000000004587b8 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x0000000000465031 : adc byte ptr [rax], al ; add al, al ; std ; jmp rax
0x000000000040a982 : adc byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000042d24b : adc byte ptr [rbp - 0x10], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044f0e3 : adc byte ptr [rbp - 8], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000459b12 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000043ad0c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000042ffbd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000040b0df : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000465041 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x4d], ah ; std ; jmp qword ptr [rax]
0x0000000000465071 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x6f], ah ; std ; jmp rax
0x000000000045115b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044895b : adc eax, 0x558abda1 ; ret
0x0000000000439363 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x000000000044bf39 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042cb8b : adc eax, ebp ; js 0x42cb7c ; ret
0x000000000042cfdf : adc ebp, ecx ; ret 0
0x0000000000422123 : adc ebx, esp ; ret
0x0000000000464ec5 : adc esp, edi ; jmp qword ptr [rax]
0x0000000000465533 : add ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0xd], bl ; stc ; jmp rsi
0x0000000000466e3b : add ah, ch ; sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x0000000000465943 : add ah, dh ; add al, 0 ; add al, ch ; pop rbx ; cld ; call qword ptr [rax]
0x0000000000466e23 : add ah, dl ; sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; ret
0x0000000000465945 : add al, 0 ; add al, ch ; pop rbx ; cld ; call qword ptr [rax]
0x0000000000416b96 : add al, 0 ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000040875b : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000432670 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004266e9 : add al, 0 ; add cl, ch ; ret 1
0x000000000045fc9a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004652ab : add al, al ; sbb bh, bh ; jmp rax
0x0000000000465033 : add al, al ; std ; jmp rax
0x00000000004655d7 : add al, bh ; pop rbx ; cli ; call rsi
0x00000000004058f0 : add al, byte ptr [rax] ; add bh, al ; test al, 0x18 ; ret
0x000000000042b264 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x0000000000419c6d : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000040ac45 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x272dbc45], cl ; ret
0x0000000000405b23 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000430bd5 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000465947 : add al, ch ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004083e7 : add al, ch ; ret
0x0000000000466daf : add al, dh ; ret 0xffff
0x000000000046522b : add al, dl ; ret
0x0000000000433fc8 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x000000000043ad28 : add bh, al ; in al, dx ; ret 0xe8ff
0x00000000004059a2 : add bh, al ; test al, -7 ; mov bh, 0x52 ; cmp ch, cl ; ret 1
0x00000000004058f2 : add bh, al ; test al, 0x18 ; ret
0x000000000045b015 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000040a1d0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rsp
0x000000000040a06d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x000000000040a1b2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x000000000040a09a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsp
0x0000000000456231 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004561f0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000450e34 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042ab5e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x000000000042ac9d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x000000000042b47d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rcx]
0x000000000042b46e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x0000000000419f2b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000419c6f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x000000000043682f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004088f9 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rbx
0x0000000000408908 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsi
0x00000000004597e3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000448799 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000439365 : add bh, al ; xchg eax, r12d ; int 6
0x000000000046310f : add bl, dh ; ret
0x0000000000433134 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000462de2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000463044 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000464ec3 : add byte ptr [rax + 0x11], ah ; cld ; jmp qword ptr [rax]
0x000000000042a908 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000465597 : add byte ptr [rax + 0x4c], cl ; cli ; jmp rcx
0x0000000000465043 : add byte ptr [rax + 0x4d], ah ; std ; jmp qword ptr [rax]
0x0000000000465073 : add byte ptr [rax + 0x6f], ah ; std ; jmp rax
0x0000000000465083 : add byte ptr [rax + 0x78], al ; std ; jmp qword ptr [rax]
0x0000000000464f03 : add byte ptr [rax + 0x7c], dh ; cld ; jmp qword ptr [rax]
0x0000000000412cdf : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000413266 : add byte ptr [rax + 1], cl ; ret 0x7a81
0x0000000000464f00 : add byte ptr [rax + rax], cl ; add byte ptr [rax + 0x7c], dh ; cld ; jmp qword ptr [rax]
0x0000000000465d03 : add byte ptr [rax + rcx - 0x2b880000], dh ; cld ; jmp rbx
0x0000000000465d07 : add byte ptr [rax - 0x2c], bh ; cld ; jmp rbx
0x0000000000464fb3 : add byte ptr [rax - 0x30], dh ; cld ; jmp rax
0x00000000004133a2 : add byte ptr [rax - 0x6bf10000], al ; ret
0x0000000000416b98 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000043af0b : add byte ptr [rax - 0x75], cl ; call 0x49063863
0x00000000004221e6 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428d68 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040ab25 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427bb4 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000004080b2 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000465537 : add byte ptr [rax - 0xd], bl ; stc ; jmp rsi
0x00000000004663bf : add byte ptr [rax], ah ; js 0x4663c5 ; jmp qword ptr [rbx]
0x0000000000464dc3 : add byte ptr [rax], ah ; sar ecx, cl ; call qword ptr [rax]
0x0000000000464f73 : add byte ptr [rax], ah ; stosd dword ptr [rdi], eax ; cld ; jmp rax
0x000000000046512b : add byte ptr [rax], ah ; test edi, esi ; call rax
0x0000000000466e39 : add byte ptr [rax], al ; add ah, ch ; sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x0000000000466e21 : add byte ptr [rax], al ; add ah, dl ; sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; ret
0x000000000043ad26 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000045b013 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000040a1ce : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rsp
0x000000000040a06b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x000000000045622f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000450e32 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042b47b : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rcx]
0x000000000042b46c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x0000000000419f29 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x00000000004088f7 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rbx
0x0000000000408906 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsi
0x00000000004597e1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000046310d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042a906 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000413264 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x7a81
0x000000000043af09 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49063865
0x0000000000428d66 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000042d4e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427bb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000465535 : add byte ptr [rax], al ; add byte ptr [rax - 0xd], bl ; stc ; jmp rsi
0x000000000046310b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044e8aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427bb0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000427bae : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000400968 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040096a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000408590 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407f47 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043539b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046310c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040096c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000045bb22 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000404e3c : add byte ptr [rax], al ; add byte ptr [rbx + 0x182da445], cl ; ret
0x000000000043a8ab : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000043aa49 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040ac87 : add byte ptr [rax], al ; add byte ptr [rbx + 0x282dbc45], cl ; ret
0x000000000042d47e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041af1f : add byte ptr [rax], al ; add byte ptr [rbx + 0x312de045], cl ; ret 0x489b
0x000000000044b9a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004319e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000431b0e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000041a41f : add byte ptr [rax], al ; add byte ptr [rbx + 0x672de045], cl ; ret 0x75a1
0x000000000044e6c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x000000000041a894 : add byte ptr [rax], al ; add byte ptr [rbx + 0xb2de045], cl ; ret
0x0000000000402187 : add byte ptr [rax], al ; add byte ptr [rbx - 0x16d217bb], cl ; ret
0x000000000041b979 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d21fbb], cl ; ret
0x000000000044f5f3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040b60f : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ad24bbb], cl ; ret 0x82de
0x0000000000432b2e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000041bc1c : add byte ptr [rax], al ; add byte ptr [rbx - 0x3fd21fbb], cl ; out dx, al ; ret 0x89f8
0x000000000046039c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040840b : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b76bb3], cl ; ret 0xb0
0x0000000000451f59 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000407dba : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000416c3c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000422b57 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000466da9 : add byte ptr [rax], al ; add byte ptr [rcx + rbx], bl ; add al, dh ; ret 0xffff
0x0000000000409a30 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b48
0x0000000000462de3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000463045 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000450da0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004621b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404650 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004054f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405a49 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403b46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004040ab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000450d2a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404089 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407c5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004564fb : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000459a72 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000042286c : add byte ptr [rax], al ; add cl, ch ; ret 5
0x0000000000464eb2 : add byte ptr [rax], al ; add cl, dh ; sti ; jmp rax
0x0000000000465592 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax + 0x4c], cl ; cli ; jmp rcx
0x000000000044bf3b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044b5c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045115d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000460a48 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a163 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419431 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004016d3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000464dc2 : add byte ptr [rax], al ; and bl, dl ; stc ; call qword ptr [rax]
0x00000000004663be : add byte ptr [rax], al ; and byte ptr [rax - 2], bh ; jmp qword ptr [rbx]
0x0000000000465946 : add byte ptr [rax], al ; call 0x114655ad
0x00000000004661d6 : add byte ptr [rax], al ; call 0xffffffffd846604f
0x00000000004655d6 : add byte ptr [rax], al ; clc ; pop rbx ; cli ; call rsi
0x0000000000465596 : add byte ptr [rax], al ; cli ; jmp rcx
0x00000000004662f6 : add byte ptr [rax], al ; cmp byte ptr [rbx - 2], dh ; call qword ptr [rbx]
0x0000000000464df2 : add byte ptr [rax], al ; cmp byte ptr [rbx], -6 ; call rax
0x0000000000465942 : add byte ptr [rax], al ; hlt ; add al, 0 ; add al, ch ; pop rbx ; cld ; call qword ptr [rax]
0x0000000000465532 : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; pop rax ; stc ; jmp rsi
0x0000000000466e3a : add byte ptr [rax], al ; in al, dx ; sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x00000000004663ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sldt word ptr [rax] ; and byte ptr [rax - 2], bh ; jmp qword ptr [rbx]
0x0000000000464eb3 : add byte ptr [rax], al ; int1 ; sti ; jmp rax
0x00000000004017a9 : add byte ptr [rax], al ; jmp 0x4016e9
0x0000000000422868 : add byte ptr [rax], al ; jmp 0x422877
0x00000000004238d4 : add byte ptr [rax], al ; jmp 0x423e94
0x00000000004564f7 : add byte ptr [rax], al ; jmp 0x456506
0x0000000000459a6e : add byte ptr [rax], al ; jmp 0x459a7d
0x000000000045bab3 : add byte ptr [rax], al ; jmp 0x45bac2
0x000000000045bc15 : add byte ptr [rax], al ; jmp 0x45bc24
0x000000000045be83 : add byte ptr [rax], al ; jmp 0x45be92
0x0000000000464f02 : add byte ptr [rax], al ; jo 0x464f87 ; cld ; jmp qword ptr [rax]
0x0000000000464fb2 : add byte ptr [rax], al ; jo 0x464f8b ; cld ; jmp rax
0x0000000000465082 : add byte ptr [rax], al ; js 0x465089 ; jmp qword ptr [rax]
0x0000000000465d06 : add byte ptr [rax], al ; js 0x465ce3 ; cld ; jmp rbx
0x0000000000416b97 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000465d02 : add byte ptr [rax], al ; mov ah, 8 ; add byte ptr [rax], al ; js 0x465ce7 ; cld ; jmp rbx
0x0000000000464fc2 : add byte ptr [rax], al ; mov al, -0x20 ; cld ; jmp qword ptr [rax]
0x0000000000464f42 : add byte ptr [rax], al ; mov al, -0x6a ; cld ; jmp qword ptr [rax]
0x00000000004650b2 : add byte ptr [rax], al ; mov al, -0x76 ; std ; jmp rax
0x0000000000464ff2 : add byte ptr [rax], al ; mov al, -0xa ; cld ; jmp rax
0x0000000000464f83 : add byte ptr [rax], al ; mov bl, -4 ; jmp qword ptr [rax]
0x00000000004658e6 : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; cld ; jmp rdi
0x000000000045659f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000462e28 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044eb78 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000044ef91 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466e0a : add byte ptr [rax], al ; mov esp, 0x10000019 ; ret
0x0000000000466b0a : add byte ptr [rax], al ; mov esp, 0x30000016 ; jae 0x466b1b ; call rdi
0x000000000043301f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042d4ea : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466df2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; ret
0x0000000000464e32 : add byte ptr [rax], al ; nop ; and bh, bl ; jmp rax
0x0000000000464ef2 : add byte ptr [rax], al ; nop ; jb 0x464ef8 ; jmp rax
0x0000000000464e82 : add byte ptr [rax], al ; nop ; push rsp ; sti ; jmp qword ptr [rax]
0x0000000000465536 : add byte ptr [rax], al ; pop rax ; stc ; jmp rsi
0x0000000000402098 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000044b9a3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040875c : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405b24 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000466daa : add byte ptr [rax], al ; pop rsp ; sbb dword ptr [rax], eax ; add al, dh ; ret 0xffff
0x00000000004652aa : add byte ptr [rax], al ; rcr byte ptr [rdx], -1 ; jmp rax
0x000000000046310e : add byte ptr [rax], al ; ret
0x000000000040096e : add byte ptr [rax], al ; ret 0
0x00000000004008f6 : add byte ptr [rax], al ; ret 2
0x0000000000465002 : add byte ptr [rax], al ; rol byte ptr [rsi], 1 ; std ; jmp qword ptr [rax]
0x000000000046526b : add byte ptr [rax], al ; sar esi, cl ; jmp rax
0x0000000000464e42 : add byte ptr [rax], al ; sub byte ptr [rsi], -5 ; jmp qword ptr [rax]
0x0000000000465686 : add byte ptr [rax], al ; test al, 0x19 ; sti ; jmp rcx
0x00000000004655d2 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; clc ; pop rbx ; cli ; call rsi
0x0000000000465682 : add byte ptr [rax], al ; xor al, 2 ; add byte ptr [rax], al ; test al, 0x19 ; sti ; jmp rcx
0x0000000000466b0e : add byte ptr [rax], al ; xor byte ptr [rbx - 1], dh ; call rdi
0x0000000000464e02 : add byte ptr [rax], al ; xor byte ptr [rsi - 6], bl ; call qword ptr [rax]
0x00000000004662f7 : add byte ptr [rax], bh ; jae 0x4662fd ; call qword ptr [rbx]
0x0000000000465b67 : add byte ptr [rax], bh ; popfq ; cld ; call qword ptr [rdx]
0x0000000000466df7 : add byte ptr [rax], bl ; ret
0x0000000000466b0f : add byte ptr [rax], dh ; jae 0x466b16 ; call rdi
0x0000000000464e03 : add byte ptr [rax], dh ; pop rsi ; cli ; call qword ptr [rax]
0x0000000000465000 : add byte ptr [rax], dl ; add byte ptr [rax], al ; rol byte ptr [rsi], 1 ; std ; jmp qword ptr [rax]
0x0000000000466e0f : add byte ptr [rax], dl ; ret
0x0000000000466da8 : add byte ptr [rax], r8b ; add byte ptr [rcx + rbx], bl ; add al, dh ; ret 0xffff
0x000000000045bb24 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000407fbe : add byte ptr [rbp - 0x77], al ; ret 0xb841
0x0000000000407fbd : add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x000000000042612d : add byte ptr [rbx + 0x172d9845], cl ; loop 0x426109 ; ret
0x0000000000404df3 : add byte ptr [rbx + 0x172da445], cl ; ret
0x0000000000426191 : add byte ptr [rbx + 0x182d9845], cl ; loop 0x42616d ; ret
0x0000000000404e3e : add byte ptr [rbx + 0x182da445], cl ; ret
0x000000000043a8ad : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000043aa4b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040ac47 : add byte ptr [rbx + 0x272dbc45], cl ; ret
0x000000000040ac89 : add byte ptr [rbx + 0x282dbc45], cl ; ret
0x000000000041c30d : add byte ptr [rbx + 0x2a2de045], cl ; jge 0x41c363 ; ret
0x000000000041d2df : add byte ptr [rbx + 0x2b2de045], cl ; jge 0x41d335 ; ret
0x000000000042d480 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043b82a : add byte ptr [rbx + 0x312dac45], cl ; sbb al, -0x1a ; ret
0x000000000041af21 : add byte ptr [rbx + 0x312de045], cl ; ret 0x489b
0x000000000043b8c0 : add byte ptr [rbx + 0x322dac45], cl ; sbb al, -0x1a ; ret
0x000000000041e6cb : add byte ptr [rbx + 0x322de045], cl ; ret 0x489b
0x000000000044b9a4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040875d : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004319e4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000431b10 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x0000000000405b25 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041a421 : add byte ptr [rbx + 0x672de045], cl ; ret 0x75a1
0x000000000041ef18 : add byte ptr [rbx + 0x682de045], cl ; ret 0x75a1
0x000000000044e6c4 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x000000000041a896 : add byte ptr [rbx + 0xb2de045], cl ; ret
0x000000000041ed56 : add byte ptr [rbx + 0xc2de045], cl ; ret
0x0000000000465fe3 : add byte ptr [rbx + rcx + 0x68980000], dl ; std ; call qword ptr [rdx]
0x0000000000402189 : add byte ptr [rbx - 0x16d217bb], cl ; ret
0x0000000000422cda : add byte ptr [rbx - 0x1db4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041dc71 : add byte ptr [rbx - 0x23d21fbb], cl ; ret
0x000000000041b97b : add byte ptr [rbx - 0x24d21fbb], cl ; ret
0x000000000044f5f5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000044f5aa : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040b611 : add byte ptr [rbx - 0x2ad24bbb], cl ; ret 0x82de
0x0000000000432b30 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000437d75 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000432672 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000041d9ce : add byte ptr [rbx - 0x3ed21fbb], cl ; out dx, al ; ret 0x89f8
0x000000000040450c : add byte ptr [rbx - 0x3ef4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004045d9 : add byte ptr [rbx - 0x3fb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041bc1e : add byte ptr [rbx - 0x3fd21fbb], cl ; out dx, al ; ret 0x89f8
0x0000000000437bb3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000041396a : add byte ptr [rbx - 0x5334b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000046039e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000414084 : add byte ptr [rbx - 0x5c34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041d2ad : add byte ptr [rbx - 0x69d21fbb], cl ; jge 0x41d2a5 ; ret 0x8589
0x000000000041c33f : add byte ptr [rbx - 0x6ad21fbb], cl ; jge 0x41c337 ; ret 0x8589
0x000000000045233e : add byte ptr [rbx - 0x6dd227bb], cl ; push rcx ; push rdx ; ret
0x00000000004522d0 : add byte ptr [rbx - 0x6ed227bb], cl ; push rcx ; push rdx ; ret
0x000000000044ef92 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000462e29 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000040840d : add byte ptr [rbx - 0x76b76bb3], cl ; ret 0xb0
0x0000000000451f5b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040fa4f : add byte ptr [rbx - 0x8d34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004107ec : add byte ptr [rbx - 0x9534b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004596cf : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407dbc : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000416c3e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040a984 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004655d3 : add byte ptr [rcx + rax + 0x5bf80000], al ; cli ; call rsi
0x0000000000465593 : add byte ptr [rcx + rax], al ; add byte ptr [rax + 0x4c], cl ; cli ; jmp rcx
0x0000000000466dab : add byte ptr [rcx + rbx], bl ; add al, dh ; ret 0xffff
0x0000000000407fb8 : add byte ptr [rcx - 0x48], al ; add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x000000000040f244 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e3b9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c58 : add byte ptr [rcx], al ; ret
0x0000000000409a32 : add byte ptr [rcx], al ; ret 0x8b48
0x0000000000462de5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000463047 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000450da2 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000464e40 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; sub byte ptr [rsi], -5 ; jmp qword ptr [rax]
0x00000000004663bb : add byte ptr [rdi + rcx], ch ; add byte ptr [rax], ah ; js 0x4663c9 ; jmp qword ptr [rbx]
0x0000000000464fc0 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; mov al, -0x20 ; cld ; jmp qword ptr [rax]
0x00000000004621b3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404652 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004054f5 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405a4b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403b48 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004040ad : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041829b : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004133a5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040408b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407c5e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000465683 : add byte ptr [rdx + rax], dh ; add byte ptr [rax], al ; test al, 0x19 ; sti ; jmp rcx
0x0000000000404413 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422d35 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464e80 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; nop ; push rsp ; sti ; jmp qword ptr [rax]
0x0000000000465080 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; js 0x46508b ; jmp qword ptr [rax]
0x0000000000464f40 : add byte ptr [rip - 0x69500000], cl ; cld ; jmp qword ptr [rax]
0x00000000004308ed : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004658e3 : add byte ptr [rsp + rax + 0x17880000], dl ; cld ; jmp rdi
0x0000000000401c56 : add byte ptr es:[ecx], al ; ret
0x0000000000401c57 : add byte ptr es:[rcx], al ; ret
0x000000000043b583 : add cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000417a1d : add cl, byte ptr [rbx - 0x1534b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417baf : add cl, byte ptr [rbx - 0x17b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417bf8 : add cl, byte ptr [rbx - 0x17f4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004488cc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000404e52 : add cl, ch ; ret
0x000000000041d5e1 : add cl, ch ; ret 0x1a
0x0000000000405253 : add cl, ch ; ret 1
0x000000000042286e : add cl, ch ; ret 5
0x0000000000464eb4 : add cl, dh ; sti ; jmp rax
0x000000000043afc1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004655d5 : add dword ptr [rax], eax ; add al, bh ; pop rbx ; cli ; call rsi
0x000000000040a098 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsp
0x00000000004561ee : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000436c5e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000465595 : add dword ptr [rax], eax ; add byte ptr [rax + 0x4c], cl ; cli ; jmp rcx
0x000000000041ef16 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x682de045], cl ; ret 0x75a1
0x000000000042fb64 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000043ac6f : add dword ptr [rax], ecx ; ret 0x840
0x0000000000465594 : add dword ptr [rax], r8d ; add byte ptr [rax + 0x4c], cl ; cli ; jmp rcx
0x000000000040b122 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000042225f : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000040b584 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434420 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000462332 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004195a2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433dc8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c54 : add eax, 0x26671e ; add ebx, esi ; ret
0x0000000000456153 : add eax, 0x5d5b0000 ; ret
0x000000000042588c : add eax, 0xe9000003 ; ret 1
0x000000000045af44 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041ed54 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0xc2de045], cl ; ret
0x000000000042588d : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004102c6 : add eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000401c1b : add eax, edx ; sar rax, 1 ; jne 0x401c2c ; pop rbp ; ret
0x0000000000401c59 : add ebx, esi ; ret
0x000000000040a0f7 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rdx]
0x0000000000436ad9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004020fb : add esp, 0x10 ; pop rbp ; ret
0x000000000042e3b7 : add esp, 0x100 ; pop rbp ; ret
0x0000000000432dd8 : add esp, 0x140 ; pop rbp ; ret
0x0000000000437833 : add esp, 0x160 ; pop rbp ; ret
0x0000000000435ff8 : add esp, 0x180 ; pop rbp ; ret
0x000000000042bfd0 : add esp, 0x190 ; pop rbp ; ret
0x00000000004393f5 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000419ec0 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000436c79 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000043a6cf : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000433da4 : add esp, 0x20 ; pop rbp ; ret
0x0000000000422d33 : add esp, 0x200 ; pop rbp ; ret
0x0000000000418610 : add esp, 0x2160 ; pop rbp ; ret
0x0000000000427b77 : add esp, 0x2180 ; pop rbp ; ret
0x0000000000426fa6 : add esp, 0x220 ; pop rbp ; ret
0x00000000004293f7 : add esp, 0x22f0 ; pop rbp ; ret
0x0000000000423de6 : add esp, 0x230 ; pop rbp ; ret
0x0000000000405b20 : add esp, 0x238 ; pop rbx ; pop rbp ; ret
0x0000000000459d27 : add esp, 0x30 ; pop rbp ; ret
0x000000000040a01e : add esp, 0x350 ; pop rbp ; ret
0x0000000000425368 : add esp, 0x360 ; pop rbp ; ret
0x000000000042b2e5 : add esp, 0x380 ; pop rbp ; ret
0x000000000041a22a : add esp, 0x40 ; pop rbp ; ret
0x0000000000404702 : add esp, 0x420 ; pop rbp ; ret
0x000000000045fe99 : add esp, 0x440 ; pop rbp ; ret
0x000000000045977e : add esp, 0x4f0 ; pop rbp ; ret
0x000000000042d3e7 : add esp, 0x50 ; pop rbp ; ret
0x0000000000456150 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000041a166 : add esp, 0x60 ; pop rbp ; ret
0x0000000000417200 : add esp, 0x70 ; pop rbp ; ret
0x000000000043b5d4 : add esp, 0x78 ; pop rbp ; ret
0x000000000042c196 : add esp, 0x80 ; pop rbp ; ret
0x00000000004307af : add esp, 0x88 ; pop rbp ; ret
0x0000000000402094 : add esp, 0x90 ; pop rbp ; ret
0x000000000044e096 : add esp, 0xa0 ; pop rbp ; ret
0x000000000042e8b8 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000421e67 : add esp, 0xc38 ; pop rbp ; ret
0x00000000004317dd : add esp, 0xd0 ; pop rbp ; ret
0x0000000000431dd8 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000419190 : add esp, 0xf0 ; pop rbp ; ret
0x000000000043c853 : add esp, 8 ; pop rbp ; ret
0x00000000004016d6 : add esp, 8 ; ret
0x0000000000401c1a : add rax, rdx ; sar rax, 1 ; jne 0x401c2d ; pop rbp ; ret
0x00000000004020fa : add rsp, 0x10 ; pop rbp ; ret
0x000000000042e3b6 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000432dd7 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000437832 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000435ff7 : add rsp, 0x180 ; pop rbp ; ret
0x000000000042bfcf : add rsp, 0x190 ; pop rbp ; ret
0x00000000004393f4 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000419ebf : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000436c78 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000043a6ce : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000433da3 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000422d32 : add rsp, 0x200 ; pop rbp ; ret
0x000000000041860f : add rsp, 0x2160 ; pop rbp ; ret
0x0000000000427b76 : add rsp, 0x2180 ; pop rbp ; ret
0x0000000000426fa5 : add rsp, 0x220 ; pop rbp ; ret
0x00000000004293f6 : add rsp, 0x22f0 ; pop rbp ; ret
0x0000000000423de5 : add rsp, 0x230 ; pop rbp ; ret
0x0000000000405b1f : add rsp, 0x238 ; pop rbx ; pop rbp ; ret
0x0000000000459d26 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040a01d : add rsp, 0x350 ; pop rbp ; ret
0x0000000000425367 : add rsp, 0x360 ; pop rbp ; ret
0x000000000042b2e4 : add rsp, 0x380 ; pop rbp ; ret
0x000000000041a229 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404701 : add rsp, 0x420 ; pop rbp ; ret
0x000000000045fe98 : add rsp, 0x440 ; pop rbp ; ret
0x000000000045977d : add rsp, 0x4f0 ; pop rbp ; ret
0x000000000042d3e6 : add rsp, 0x50 ; pop rbp ; ret
0x000000000045614f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000041a165 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004171ff : add rsp, 0x70 ; pop rbp ; ret
0x000000000043b5d3 : add rsp, 0x78 ; pop rbp ; ret
0x000000000042c195 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004307ae : add rsp, 0x88 ; pop rbp ; ret
0x0000000000402093 : add rsp, 0x90 ; pop rbp ; ret
0x000000000044e095 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000042e8b7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000421e66 : add rsp, 0xc38 ; pop rbp ; ret
0x00000000004317dc : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000431dd7 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041918f : add rsp, 0xf0 ; pop rbp ; ret
0x000000000043c852 : add rsp, 8 ; pop rbp ; ret
0x00000000004016d5 : add rsp, 8 ; ret
0x0000000000462ded : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004195a1 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433dc7 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043afbf : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000464e35 : and bh, bl ; jmp rax
0x0000000000464dc4 : and bl, dl ; stc ; call qword ptr [rax]
0x00000000004663c0 : and byte ptr [rax - 2], bh ; jmp qword ptr [rbx]
0x000000000043539a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000418299 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000426fa8 : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000451c8b : and byte ptr [rsi + 0x58], ah ; jb 0x451cc2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042225d : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000043afbe : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040858e : and dword ptr [rsi], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407f45 : and dword ptr [rsi], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041cb8a : and eax, 0x458b0000 ; loopne 0x41cbc5 ; ret
0x0000000000447b01 : and eax, 0x75b4b9d3 ; ret
0x000000000045659d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000045c208 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045bd1f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045c2ca : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000465948 : call 0x114655ab
0x0000000000417b83 : call 0x401729
0x0000000000401fd0 : call 0x401949
0x0000000000452085 : call 0x452149
0x0000000000415e83 : call 0x463157
0x000000000043af0f : call 0x4906385f
0x000000000043af0e : call 0x49063860
0x000000000043af5d : call 0x490638ad
0x000000000043af5c : call 0x490638ae
0x000000000040b8ab : call 0x492341fe
0x000000000042f662 : call 0xffffffff8a234bfb
0x000000000046093d : call 0xffffffffaca6cb71
0x000000000046093c : call 0xffffffffaca6cb72
0x000000000040f837 : call 0xffffffffb0fff846
0x0000000000419381 : call 0xffffffffc2d3a2cb
0x0000000000419380 : call 0xffffffffc2d3a2cc
0x00000000004661d8 : call 0xffffffffd846604d
0x000000000044b5b9 : call 0xffffffffe9073f09
0x000000000044b5b8 : call 0xffffffffe9073f0a
0x00000000004630e9 : call qword ptr [r12 + rbx*8]
0x00000000004255f6 : call qword ptr [rax]
0x000000000044cd7e : call qword ptr [rbx]
0x000000000040f22a : call qword ptr [rcx]
0x0000000000419f31 : call qword ptr [rdi]
0x0000000000413e81 : call qword ptr [rdx]
0x0000000000429655 : call qword ptr [rsi]
0x00000000004630ea : call qword ptr [rsp + rbx*8]
0x0000000000401c7d : call rax
0x00000000004088ff : call rbx
0x0000000000448cab : call rcx
0x0000000000407f15 : call rdi
0x000000000040ede0 : call rdx
0x000000000040890e : call rsi
0x000000000040a1d6 : call rsp
0x0000000000418639 : cdq ; ret
0x0000000000433ccb : clc ; add rsp, 0x190 ; pop rbp ; ret
0x000000000045fe97 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042d3e5 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004171fe : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004513e7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000043127b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000045b399 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000045d294 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401c1f : clc ; jne 0x401c28 ; pop rbp ; ret
0x000000000045c209 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045bfd3 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004567fe : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a78e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042f8ab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042f8cb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e7bb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044e79b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045ba21 : clc ; mov rax, r8 ; pop rbp ; ret
0x00000000004221ea : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e8f7 : clc ; pop rbp ; ret
0x00000000004655d8 : clc ; pop rbx ; cli ; call rsi
0x0000000000416b9c : clc ; pop rbx ; pop rbp ; ret
0x000000000043e08d : clc ; ret 0x77a8
0x000000000045bd20 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000402127 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427b75 : cld ; add rsp, 0x2180 ; pop rbp ; ret
0x0000000000452614 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000460f7e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000045cd0d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000046594a : cld ; call qword ptr [rax]
0x0000000000465a6a : cld ; call qword ptr [rcx]
0x0000000000465b6a : cld ; call qword ptr [rdx]
0x0000000000464efe : cld ; inc dword ptr [rax] ; or al, 0 ; add byte ptr [rax + 0x7c], dh ; cld ; jmp qword ptr [rax]
0x0000000000464f3e : cld ; inc dword ptr [rax] ; or eax, 0x96b00000 ; cld ; jmp qword ptr [rax]
0x0000000000464ebe : cld ; inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x11], ah ; cld ; jmp qword ptr [rax]
0x0000000000464fbe : cld ; inc dword ptr [rax] ; sldt word ptr [rax] ; mov al, -0x20 ; cld ; jmp qword ptr [rax]
0x0000000000464f6e : cld ; inc eax ; or eax, 0xab200000 ; cld ; jmp rax
0x0000000000464fee : cld ; inc eax ; sldt word ptr [rax] ; mov al, -0xa ; cld ; jmp rax
0x000000000042d4af : cld ; jmp 0x42d51c
0x000000000042d4ae : cld ; jmp 0x42d51d
0x0000000000464ec6 : cld ; jmp qword ptr [rax]
0x0000000000464ef6 : cld ; jmp rax
0x0000000000465d0a : cld ; jmp rbx
0x00000000004658ea : cld ; jmp rdi
0x000000000044ef95 : cld ; mov rsp, rbp ; pop rbp ; ret
0x0000000000437d7a : cld ; stc ; in al, dx ; ret 0x8589
0x00000000004384cb : cld ; stc ; in al, dx ; ret 0xff3
0x000000000043b582 : cli ; add cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000464e06 : cli ; call qword ptr [rax]
0x0000000000464df6 : cli ; call rax
0x00000000004655da : cli ; call rsi
0x000000000046559a : cli ; jmp rcx
0x0000000000451c90 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000464dee : cli ; push qword ptr [rax - 0x7ffffff9] ; cmp edi, edx ; call rax
0x0000000000462dec : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000450bab : cmc ; ret 0x4f0b
0x0000000000417b8a : cmp al, 0x25 ; ret
0x0000000000401fd7 : cmp al, 0x25 ; ret 0x4639
0x0000000000422c3e : cmp byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004662f8 : cmp byte ptr [rbx - 2], dh ; call qword ptr [rbx]
0x0000000000464df4 : cmp byte ptr [rbx], -6 ; call rax
0x0000000000405b22 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004059a9 : cmp ch, cl ; ret 1
0x0000000000450d41 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000417bfb : cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000453507 : cmp dl, al ; ret
0x0000000000432e02 : cmp dword ptr [rax - 0x75], ecx ; jne 0x432de4 ; call rax
0x000000000042e6f9 : cmp eax, 0x45c6a0d8 ; ret
0x00000000004555d9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000401bdd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401bf0 ; pop rbp ; ret
0x0000000000418634 : cmp ebp, dword ptr [rdx + rsi] ; xchg eax, esp ; push -0x67 ; ret
0x0000000000464df5 : cmp edi, edx ; call rax
0x0000000000448957 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000040c63e : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x89b2
0x000000000040eeb4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xb9b2
0x00000000004106d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xe9b2
0x0000000000456152 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000415e82 : cwde ; call 0x463158
0x000000000042b396 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000043a727 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004179b5 : dec dword ptr [rax - 0x14c6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000417a9c : dec dword ptr [rax - 0x1606b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000413c08 : dec dword ptr [rax - 0x54c6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000417b87 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000401fd4 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4639
0x0000000000447e5b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041375b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000413f90 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042c8f4 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045f9f6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040f72d : dec dword ptr [rax - 0x77] ; ret 0x858a
0x00000000004107f2 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f1dc : dec dword ptr [rax - 0x7d] ; ret 0x4811
0x000000000040fbfb : dec dword ptr [rax - 0x7f] ; ret 0x10
0x00000000004279ea : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040f727 : dec dword ptr [rax - 0x8bc6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040eede : dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004023a2 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x0000000000450ba6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000430bd1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004266e5 : dec dword ptr [rdi] ; test ah, dl ; add al, 0 ; add cl, ch ; ret 1
0x00000000004262e4 : dec dword ptr [rdi] ; test ah, dl ; or al, 0 ; add cl, ch ; ret
0x000000000044e2ae : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000435a4b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000417539 : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffb], bl ; ret 1
0x000000000043036a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000040524d : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffa], bh ; ret 1
0x000000000041d1da : dec dword ptr [rdi] ; test byte ptr [rcx], ah ; xor dword ptr [rax], eax ; add cl, ch ; ret
0x000000000043dd6a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042c3b4 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000425889 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffd], al ; ret 1
0x000000000042fb60 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000438e45 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000423d51 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000045ad3e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004097e4 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000418631 : enter -0x45b8, 0x3b ; sub al, 0x32 ; xchg eax, esp ; push -0x67 ; ret
0x0000000000430fe0 : enter -0x74b8, 0x31 ; call rax
0x000000000043bc87 : enter -0x76b8, -0x14 ; pop rbp ; ret
0x00000000004586a9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045f479 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418297 : enter 0x2000, 0 ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000045bb45 : enter 0xf41, 0x44 ; ret 0x4589
0x00000000004040a9 : enter 1, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000435d28 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042be25 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404087 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045ad20 : fbld dword ptr [rcx] ; ret 0x941
0x000000000045bdfb : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000457865 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x00000000004118d6 : fdiv st(4) ; ret 0x8909
0x0000000000412c1b : fdiv st(4) ; ret 0xb909
0x0000000000412c7b : fdiv st(4) ; ret 0xbe09
0x0000000000435a4e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004102c4 : fild dword ptr [rbx] ; add eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000045acff : fild word ptr [rcx - 0x77] ; ret
0x000000000045c2cb : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000043b188 : fimul word ptr [rcx - 0x7bf077bb] ; ret
0x00000000004563bb : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004613a8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000043492e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000460087 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000043492f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000430fdc : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x0000000000431d1d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000430609 : fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000460088 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000041913a : fmul qword ptr [r15 + 0x53] ; mov byte ptr [rbx - 0x17], ch ; ret 0
0x00000000004630ec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041913b : fmul qword ptr [rdi + 0x53] ; mov byte ptr [rbx - 0x17], ch ; ret 0
0x00000000004579ed : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000459007 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x0000000000465944 : hlt ; add al, 0 ; add al, ch ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004020f9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421e65 : hlt ; add rsp, 0xc38 ; pop rbp ; ret
0x00000000004605ec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000043c851 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000422163 : hlt ; jmp 0x422232
0x0000000000401bf0 : hlt ; pop rbp ; mov edi, 0x668310 ; jmp rax
0x0000000000411883 : hlt ; ret 0x8909
0x0000000000412c1c : hlt ; ret 0xb909
0x0000000000412c7c : hlt ; ret 0xbe09
0x0000000000464ff5 : idiv ah ; jmp rax
0x00000000004107f0 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000451dbb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040f72b : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040fa53 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f72a : idiv r15d ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000041a112 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000401fd1 : imul edi, ecx, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4639
0x000000000041f8ee : in al, -0x17 ; ret
0x0000000000420fef : in al, -0x17 ; ret 0x10
0x0000000000465534 : in al, 0 ; add byte ptr [rax], al ; pop rax ; stc ; jmp rsi
0x000000000045c651 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000459d25 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045b94a : in al, dx ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000043abf1 : in al, dx ; jmp 0x43adbd
0x000000000043abf0 : in al, dx ; jmp 0x43adbe
0x00000000004609fc : in al, dx ; jmp 0x460a79
0x00000000004609fb : in al, dx ; jmp 0x460a7a
0x000000000045bcb5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004023a8 : in al, dx ; pop rbp ; ret
0x0000000000437bba : in al, dx ; ret 0x8589
0x000000000043abd4 : in al, dx ; ret 0xe8ff
0x00000000004384cd : in al, dx ; ret 0xff3
0x0000000000466e3c : in al, dx ; sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x000000000042cb8a : in eax, dx ; adc eax, ebp ; js 0x42cb7d ; ret
0x0000000000465217 : inc dword ptr [rax - 0x7fffffe8] ; ret 0xfffe
0x000000000046507f : inc dword ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x78], al ; std ; jmp qword ptr [rax]
0x000000000046503f : inc dword ptr [rax] ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x4d], ah ; std ; jmp qword ptr [rax]
0x0000000000410268 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f9f1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000464eff : inc dword ptr [rax] ; or al, 0 ; add byte ptr [rax + 0x7c], dh ; cld ; jmp qword ptr [rax]
0x0000000000464f3f : inc dword ptr [rax] ; or eax, 0x96b00000 ; cld ; jmp qword ptr [rax]
0x0000000000464ebf : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x11], ah ; cld ; jmp qword ptr [rax]
0x0000000000464fbf : inc dword ptr [rax] ; sldt word ptr [rax] ; mov al, -0x20 ; cld ; jmp qword ptr [rax]
0x0000000000412b3d : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x00000000004076bd : inc dword ptr [rcx + 0xf] ; ret
0x00000000004130ff : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000046502f : inc eax ; adc byte ptr [rax], al ; add al, al ; std ; jmp rax
0x000000000046506f : inc eax ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x6f], ah ; std ; jmp rax
0x0000000000464eaf : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; int1 ; sti ; jmp rax
0x0000000000464f6f : inc eax ; or eax, 0xab200000 ; cld ; jmp rax
0x00000000004652a7 : inc eax ; sbb al, byte ptr [rax] ; add al, al ; sbb bh, bh ; jmp rax
0x0000000000465227 : inc eax ; sbb byte ptr [rax], al ; add al, dl ; ret
0x0000000000465267 : inc eax ; sbb dword ptr [rax], eax ; add byte ptr [rax], al ; sar esi, cl ; jmp rax
0x0000000000464fef : inc eax ; sldt word ptr [rax] ; mov al, -0xa ; cld ; jmp rax
0x0000000000456289 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000407f0f : inc edi ; test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x00000000004249d9 : insb byte ptr [rdi], dx ; ret 0x45c9
0x0000000000452fc6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x00000000004663bc : insb byte ptr [rdi], dx ; sldt word ptr [rax] ; and byte ptr [rax - 2], bh ; jmp qword ptr [rbx]
0x000000000045301a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000044da67 : int 0x5b
0x0000000000438be4 : int 6
0x0000000000464eb5 : int1 ; sti ; jmp rax
0x000000000044eea5 : iretd ; test al, -0x47 ; call rsi
0x0000000000401be3 : ja 0x401bea ; pop rbp ; ret
0x000000000043a791 : ja 0x43a7de ; pop rbp ; ret
0x00000000004662f9 : jae 0x4662fb ; call qword ptr [rbx]
0x0000000000466b11 : jae 0x466b14 ; call rdi
0x0000000000451c8e : jb 0x451cbf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000464ef5 : jb 0x464ef5 ; jmp rax
0x0000000000401bef : je 0x401bed ; pop rbp ; mov edi, 0x668310 ; jmp rax
0x0000000000408156 : jg 0x40816a ; xchg eax, edi ; ret 0xd284
0x000000000040c8de : jg 0x40c95d ; ret 0x8589
0x000000000040c932 : jg 0x40c9b1 ; ret 0x8589
0x000000000040fbed : jg 0x40fc6c ; ret 0xa6b9
0x0000000000407c59 : jge 0x407bf7 ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041c345 : jge 0x41c331 ; ret 0x8589
0x000000000041c313 : jge 0x41c35d ; ret
0x000000000041d2b3 : jge 0x41d29f ; ret 0x8589
0x000000000041d2e5 : jge 0x41d32f ; ret
0x00000000004205e9 : jge 0x420633 ; ret
0x000000000042096a : jge 0x420956 ; ret 0x35b9
0x000000000042f8aa : jge 0x42f8ab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042f8ca : jge 0x42f8cb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000430fdb : jge 0x430fbe ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043a78d : jge 0x43a78e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000446ef6 : jge 0x446e7b ; ret 0xffd5
0x00000000004479c0 : jge 0x4479a0 ; shr cl, cl ; ret 0x3b
0x000000000044e79a : jge 0x44e79b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000044e7ba : jge 0x44e7bb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000452684 : jge 0x452668 ; call rax
0x0000000000464f05 : jl 0x464f05 ; jmp qword ptr [rax]
0x0000000000437918 : jle 0x4378ac ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004017ab : jmp 0x4016e7
0x0000000000405867 : jmp 0x405b78
0x00000000004058ee : jmp 0x405b7a
0x00000000004079f8 : jmp 0x408919
0x000000000040f6e5 : jmp 0x410aa2
0x0000000000412936 : jmp 0x4140a5
0x0000000000412c32 : jmp 0x4140a7
0x0000000000415e56 : jmp 0x41702f
0x000000000041fdcf : jmp 0x4220bd
0x000000000042295f : jmp 0x4220eb
0x000000000042295e : jmp 0x4220ec
0x0000000000422164 : jmp 0x422231
0x000000000042286a : jmp 0x422875
0x00000000004238d6 : jmp 0x423e92
0x000000000042d4b0 : jmp 0x42d51b
0x00000000004305e4 : jmp 0x430840
0x0000000000430e79 : jmp 0x431005
0x0000000000432d0a : jmp 0x432e4e
0x0000000000432d09 : jmp 0x432e4f
0x0000000000432d09 : jmp 0x432e50
0x000000000043abf2 : jmp 0x43adbc
0x0000000000448110 : jmp 0x44b590
0x0000000000446014 : jmp 0x44b591
0x00000000004473e1 : jmp 0x44b592
0x000000000044ffcb : jmp 0x450a37
0x000000000044ff08 : jmp 0x450a39
0x0000000000452033 : jmp 0x452098
0x000000000045528b : jmp 0x4563d0
0x0000000000455ca6 : jmp 0x4563d1
0x00000000004564f9 : jmp 0x456504
0x0000000000458816 : jmp 0x4598d9
0x0000000000458633 : jmp 0x4598da
0x0000000000459a70 : jmp 0x459a7b
0x000000000045bab5 : jmp 0x45bac0
0x000000000045bc17 : jmp 0x45bc22
0x000000000045be85 : jmp 0x45be90
0x000000000045fd36 : jmp 0x460018
0x00000000004609fd : jmp 0x460a78
0x000000000043824f : jmp 0x49060b9f
0x000000000043839b : jmp 0x49060ceb
0x000000000043846d : jmp 0x49060dbd
0x00000000004384ee : jmp 0x49060e3e
0x000000000043a494 : jmp 0x49062de4
0x000000000043a50f : jmp 0x49062e5f
0x0000000000450baa : jmp 0x4f50cea6
0x000000000040b5d0 : jmp 0x7f02e977
0x000000000045aaef : jmp 0xffffffffc409e1b6
0x000000000044aee5 : jmp qword ptr [rax]
0x000000000040a073 : jmp qword ptr [rbx]
0x0000000000409b80 : jmp qword ptr [rcx]
0x000000000041841b : jmp qword ptr [rdi]
0x000000000040a0fd : jmp qword ptr [rdx]
0x000000000040d0e5 : jmp qword ptr [rsi]
0x0000000000401bf7 : jmp rax
0x00000000004474e8 : jmp rbx
0x0000000000447f1a : jmp rcx
0x00000000004185f2 : jmp rdi
0x0000000000401c37 : jmp rdx
0x000000000040a1b8 : jmp rsi
0x000000000040a0a0 : jmp rsp
0x0000000000401c20 : jne 0x401c27 ; pop rbp ; ret
0x0000000000415e81 : jne 0x415e24 ; call 0x463159
0x0000000000431039 : jne 0x431004 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000432e05 : jne 0x432de1 ; call rax
0x0000000000457866 : jne 0x4578e1 ; ret 0x8589
0x00000000004579ee : jne 0x457a69 ; ret 0x8589
0x0000000000459008 : jne 0x459083 ; ret 0xedb9
0x0000000000459260 : jne 0x4592db ; ret 0xedb9
0x00000000004662d9 : jno 0x4662db ; call rdx
0x0000000000417202 : jo 0x417263 ; ret
0x0000000000419436 : jo 0x419497 ; ret
0x0000000000440e0e : jo 0x440e1a ; ret
0x0000000000442a7e : jo 0x442a8a ; ret
0x0000000000445fcd : jo 0x445fd9 ; ret
0x000000000044d2b4 : jo 0x44d315 ; ret
0x000000000044e79f : jo 0x44e800 ; ret
0x000000000044e79e : jo 0x44e801 ; ret
0x0000000000464f04 : jo 0x464f85 ; cld ; jmp qword ptr [rax]
0x0000000000464fb4 : jo 0x464f89 ; cld ; jmp rax
0x0000000000465a69 : jp 0x465a69 ; call qword ptr [rcx]
0x000000000042cb8d : js 0x42cb7a ; ret
0x000000000043b5d6 : js 0x43b637 ; ret
0x0000000000465085 : js 0x465086 ; jmp qword ptr [rax]
0x0000000000465084 : js 0x465087 ; jmp qword ptr [rax]
0x0000000000465d08 : js 0x465ce1 ; cld ; jmp rbx
0x00000000004663c1 : js 0x4663c3 ; jmp qword ptr [rbx]
0x00000000004066ff : lahf ; ret 0x1fb3
0x00000000004479be : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000448abe : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000042dcb6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000455482 : lea eax, dword ptr [rdx + rdi*8 - 0x3b170001] ; ret
0x000000000043d705 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044d5a9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416b9a : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043d704 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416b99 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043bcd7 : les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x0000000000407c78 : ljmp ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044631e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004107ef : lodsb al, byte ptr [rsi] ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404e4f : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043036d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000426133 : loop 0x426103 ; ret
0x0000000000426197 : loop 0x426167 ; ret
0x0000000000426f29 : loop 0x426ef9 ; ret
0x000000000042f9b0 : loop 0x42f9a5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000045bdb2 : loop 0x45bd65 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040b121 : loope 0x40b12d ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ba6f : loope 0x40ba7b ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000042225e : loope 0x422267 ; movzx eax, cl ; pop rbp ; ret
0x00000000004306ee : loope 0x4306a9 ; xchg eax, ebp ; jmp 0x430843
0x0000000000449325 : loope 0x4492f3 ; jmp 0x44b593
0x0000000000405451 : loopne 0x40545d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004054f1 : loopne 0x4054fe ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040ab22 : loopne 0x40ab74 ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ab21 : loopne 0x40ab75 ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413c6b : loopne 0x413cd1 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419138 : loopne 0x41910a ; fmul qword ptr [r15 + 0x53] ; mov byte ptr [rbx - 0x17], ch ; ret 0
0x000000000041a424 : loopne 0x41a456 ; ret 0x75a1
0x000000000041a423 : loopne 0x41a457 ; ret 0x75a1
0x000000000041aef2 : loopne 0x41af25 ; shl ecx, cl ; ret 0x894a
0x000000000041aef1 : loopne 0x41af26 ; shl ecx, cl ; ret 0x894a
0x000000000041b46a : loopne 0x41b49b ; ret 0x76b7
0x000000000041b469 : loopne 0x41b49c ; ret 0x76b7
0x000000000041b8b6 : loopne 0x41b8e7 ; ret 0x7924
0x000000000041b8b5 : loopne 0x41b8e8 ; ret 0x7924
0x000000000041bc9e : loopne 0x41bccf ; ret 0xe18a
0x000000000041bc9d : loopne 0x41bcd0 ; ret 0xe18a
0x000000000041c310 : loopne 0x41c344 ; sub bh, byte ptr [rbp + 0x46] ; ret
0x000000000041c30f : loopne 0x41c345 ; sub bh, byte ptr [rbp + 0x46] ; ret
0x000000000041c342 : loopne 0x41c376 ; xchg eax, ebp ; jge 0x41c334 ; ret 0x8589
0x000000000041c341 : loopne 0x41c377 ; xchg eax, ebp ; jge 0x41c335 ; ret 0x8589
0x000000000041ca63 : loopne 0x41ca94 ; ret 0xc1e6
0x000000000041ca62 : loopne 0x41ca95 ; ret 0xc1e6
0x000000000041cb8f : loopne 0x41cbc0 ; ret
0x000000000041cb8e : loopne 0x41cbc1 ; ret
0x000000000041d2b0 : loopne 0x41d2e4 ; xchg eax, esi ; jge 0x41d2a2 ; ret 0x8589
0x000000000041d2af : loopne 0x41d2e5 ; xchg eax, esi ; jge 0x41d2a3 ; ret 0x8589
0x000000000041d2e2 : loopne 0x41d316 ; sub edi, dword ptr [rbp + 0x46] ; ret
0x000000000041d2e1 : loopne 0x41d317 ; sub edi, dword ptr [rbp + 0x46] ; ret
0x000000000041d954 : loopne 0x41d985 ; ret
0x000000000041d953 : loopne 0x41d986 ; ret
0x000000000041dd3c : loopne 0x41dd6d ; ret
0x000000000041dd3b : loopne 0x41dd6e ; ret
0x000000000041e188 : loopne 0x41e1b9 ; ret
0x000000000041e187 : loopne 0x41e1ba ; ret
0x000000000042ad2f : loopne 0x42ad38 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d1dd : loopne 0x42d1e6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000431dda : loopne 0x431de1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043542e : loopne 0x43547f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043542d : loopne 0x435480 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043a6cd : loopne 0x43a720 ; add esp, 0x1d0 ; pop rbp ; ret
0x000000000043d703 : loopne 0x43d756 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044ccad : loopne 0x44cd13 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044e094 : loopne 0x44e0e7 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000044e648 : loopne 0x44e64f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044f32c : loopne 0x44f2c0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044f32b : loopne 0x44f2c1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004516f3 : loopne 0x4516fc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045207e : loopne 0x4520ce ; add esp, 0x60 ; pop rbp ; ret
0x000000000045207d : loopne 0x4520cf ; add esp, 0x60 ; pop rbp ; ret
0x0000000000459bdf : loopne 0x459b73 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000459bde : loopne 0x459b74 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045b94e : loopne 0x45b955 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045d298 : loopne 0x45d29f ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004605f0 : loopne 0x4605f7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000460f82 : loopne 0x460f89 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000462e2c : loopne 0x462e7b ; mov esp, ebp ; pop rbp ; ret
0x0000000000462e2b : loopne 0x462e7c ; mov esp, ebp ; pop rbp ; ret
0x000000000046307c : loopne 0x4630cb ; mov esp, ebp ; pop rbp ; ret
0x000000000046307b : loopne 0x4630cc ; mov esp, ebp ; pop rbp ; ret
0x0000000000464fc5 : loopne 0x464fc5 ; jmp qword ptr [rax]
0x000000000042cb89 : mov ah, -0x13 ; adc eax, ebp ; js 0x42cb7e ; ret
0x000000000045bdb1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000446eed : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000446fc7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043094e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000444f75 : mov ah, 0x75 ; ret
0x0000000000465d04 : mov ah, 8 ; add byte ptr [rax], al ; js 0x465ce5 ; cld ; jmp rbx
0x0000000000464f35 : mov ah, bh ; jmp rax
0x0000000000464fc4 : mov al, -0x20 ; cld ; jmp qword ptr [rax]
0x000000000044da83 : mov al, -0x47 ; ret
0x0000000000464f44 : mov al, -0x6a ; cld ; jmp qword ptr [rax]
0x00000000004306ef : mov al, -0x6b ; jmp 0x430842
0x00000000004650b4 : mov al, -0x76 ; std ; jmp rax
0x000000000043bc83 : mov al, -0x77 ; ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x0000000000464ff4 : mov al, -0xa ; cld ; jmp rax
0x000000000045f4ff : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000458c09 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e8ba : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439ad0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x0000000000419ec2 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464df0 : mov al, 7 ; add byte ptr [rax], al ; cmp byte ptr [rbx], -6 ; call rax
0x000000000045c20b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000046169d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046136a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004615cd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045c2cc : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045c20a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000045bfd4 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000045bfd9 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004059a7 : mov bh, 0x52 ; cmp ch, cl ; ret 1
0x00000000004650b5 : mov bh, ch ; jmp rax
0x0000000000464f85 : mov bl, -4 ; jmp qword ptr [rax]
0x0000000000407d31 : mov bl, 0x1b ; ret 0x81b9
0x000000000040655c : mov bl, 0x1b ; ret 0x8589
0x000000000043e915 : mov bl, 0x75 ; ret
0x000000000041a225 : mov byte ptr [rax + 0x34], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004307b1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041913e : mov byte ptr [rbx - 0x17], ch ; ret 0
0x0000000000410390 : mov byte ptr [rcx - 9], al ; jmp qword ptr [rcx]
0x00000000004658e8 : mov byte ptr [rdi], dl ; cld ; jmp rdi
0x0000000000419c6c : mov byte ptr [rdx], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000401c53 : mov byte ptr [rip + 0x26671e], 1 ; ret
0x00000000004107ee : mov ch, -0x54 ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040fa51 : mov ch, 0x2c ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000044676f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043afc4 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040b124 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422261 : mov dh, -0x3f ; pop rbp ; ret
0x000000000040b586 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434422 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000462334 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004195a4 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433dca : mov dh, -0x40 ; pop rbp ; ret
0x000000000045c2cf : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000462dea : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000462061 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000043ce89 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043ca5f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432c85 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x00000000004352c9 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000043abef : mov dword ptr [rbp - 0x14], eax ; jmp 0x43adbf
0x00000000004609fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x460a7b
0x000000000043909d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x00000000004392d0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000041fdcc : mov dword ptr [rbp - 0x1c], eax ; jmp 0x4220c0
0x00000000004305e1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x430843
0x0000000000430e76 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x431008
0x0000000000430f01 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x431008
0x000000000043094c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044ffc8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x450a3a
0x00000000004023a3 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004020f7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430ee1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000402125 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043d166 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a790 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000043cd0d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043943b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000425e37 : mov eax, 0x8948008b ; in al, dx ; pop rbp ; ret
0x0000000000418643 : mov eax, 0x94322c3b ; push -0x67 ; ret
0x0000000000458817 : mov eax, 0xb8000010 ; ret
0x000000000040ab24 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451efb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044e8f1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000459d23 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004565a1 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004520ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ee6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000417864 : mov eax, dword ptr [rbp - 0x18] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000460875 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433022 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045207c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044f32a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462e2a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b5d0 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000045267f : mov eax, dword ptr [rbp - 0x38] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000043cd0f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000043103f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x000000000044eb7a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000425e35 : mov eax, dword ptr [rbp - 0x48] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000438867 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c84f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000044ef93 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d3e3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004171fc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004567fc : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004221e8 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f8ad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042f8cd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e7bd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044e79d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000043cd0e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000045bfd6 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000045ba23 : mov eax, eax ; pop rbp ; ret
0x000000000045bdfa : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000043bc86 : mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433da1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045bd1d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000045bfd5 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000449728 : mov ebp, 0xe19c53ba ; ret
0x0000000000401c7b : mov ebp, esp ; call rax
0x0000000000401be1 : mov ebp, esp ; ja 0x401bec ; pop rbp ; ret
0x00000000004016d1 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x0000000000405250 : mov ebx, 0xe9000006 ; ret 1
0x00000000004290e5 : mov ecx, 0x2142603e ; test dword ptr [rax + 0x29], ecx ; ret 0x8948
0x00000000004163f7 : mov ecx, 0xb9b9570c ; ret
0x000000000043ca5c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004351db : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043542c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000435d46 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000430fde : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043943d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004351df : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000043bc84 : mov ecx, eax ; mov eax, ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401c75 : mov edi, 0x667e20 ; mov rbp, rsp ; call rax
0x0000000000401bf2 : mov edi, 0x668310 ; jmp rax
0x0000000000401c32 : mov edi, 0x668310 ; jmp rdx
0x000000000043abf3 : mov edi, 0xb8000001 ; ret
0x0000000000455106 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000445fc7 : mov edi, 0xb8000055 ; wait ; jo 0x445fdf ; ret
0x000000000045b971 : mov edi, 0xc362f176 ; ret 0xc4b7
0x000000000042ab5b : mov edi, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x0000000000452683 : mov edi, dword ptr [rbp - 0x20] ; call rax
0x000000000043a78c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042f8a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042f8c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e7b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044e799 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004351e2 : mov edi, dword ptr [rcx] ; call rax
0x0000000000432e01 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004630e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004630e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000045fcae : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044678b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000418633 : mov edx, 0x94322c3b ; push -0x67 ; ret
0x000000000042cbe2 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x000000000044e8f5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000447602 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000045fc97 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000432e04 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000430fe2 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c30 : mov esi, eax ; mov edi, 0x668310 ; jmp rdx
0x000000000043103c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000466e0c : mov esp, 0x10000019 ; ret
0x000000000040ac4a : mov esp, 0x29c3272d ; ret
0x000000000040ac8c : mov esp, 0x29c3282d ; ret
0x0000000000466b0c : mov esp, 0x30000016 ; jae 0x466b19 ; call rdi
0x00000000004023a7 : mov esp, ebp ; pop rbp ; ret
0x000000000043d165 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a78f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042cb88 : mov r12b, -0x13 ; adc eax, ebp ; js 0x42cb7f ; ret
0x000000000043094d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040ac49 : mov r12d, 0x29c3272d ; ret
0x000000000040ac8b : mov r12d, 0x29c3282d ; ret
0x0000000000425e36 : mov r8d, 0x8948008b ; in al, dx ; pop rbp ; ret
0x000000000040ab23 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451efa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044e8f0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004520cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ee6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000433021 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045207b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043b5cf : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000045267e : mov rax, qword ptr [rbp - 0x38] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000043103e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042d3e2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004171fb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004221e7 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f8ac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042f8cc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e7bc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044e79c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000045bdf9 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045ba22 : mov rax, r8 ; pop rbp ; ret
0x0000000000433da0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c7a : mov rbp, rsp ; call rax
0x0000000000401be0 : mov rbp, rsp ; ja 0x401bed ; pop rbp ; ret
0x0000000000435d45 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000430fdd : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043943c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004351de : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000452682 : mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000043a78b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042f8a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042f8c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044e7b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000044e798 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004351e1 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000432e00 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000042cbe1 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x000000000044e8f4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000432e03 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000430fe1 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c2f : mov rsi, rax ; mov edi, 0x668310 ; jmp rdx
0x000000000043103b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004023a6 : mov rsp, rbp ; pop rbp ; ret
0x00000000004023a4 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000451c91 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004023a5 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x000000000040812a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040b870 : movabs al, byte ptr [0x8348e289487ec233] ; ret 0x48f0
0x000000000045a991 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000040ebf8 : movabs al, byte ptr [0xfffe0485c700001e] ; jmp qword ptr [rdx]
0x000000000042b47a : movabs al, byte ptr [0xffff7c85c7000000] ; jmp qword ptr [rcx]
0x0000000000442268 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000042295c : movabs eax, dword ptr [0xfffffff781e964ee] ; jmp qword ptr [rcx]
0x00000000004384ca : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x000000000040c931 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x40c9b2 ; ret 0x8589
0x000000000040fbec : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x40fc6d ; ret 0xa6b9
0x00000000004454b5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000466df4 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; ret
0x000000000044eea3 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x000000000044f0e1 : movsd xmm0, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d24a : movups xmm0, xmmword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044f0e2 : movups xmm0, xmmword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b585 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000434421 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000462333 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x00000000004195a3 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433dc9 : movzx eax, al ; pop rbp ; ret
0x000000000045c2ce : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000045bfd8 : movzx eax, ax ; pop rbp ; ret
0x000000000043afc3 : movzx eax, bh ; pop rbp ; ret
0x000000000040b123 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422260 : movzx eax, cl ; pop rbp ; ret
0x000000000043afc2 : movzx eax, dil ; pop rbp ; ret
0x000000000045faa8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041ef15 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x682de045], cl ; ret 0x75a1
0x0000000000464e34 : nop ; and bh, bl ; jmp rax
0x0000000000464ef4 : nop ; jb 0x464ef6 ; jmp rax
0x0000000000464e84 : nop ; push rsp ; sti ; jmp qword ptr [rax]
0x000000000043e755 : nop ; ret
0x000000000044cb62 : nop ; ret 0x148
0x000000000044cb76 : nop ; ret 0x2948
0x0000000000463108 : nop dword ptr [rax + rax] ; ret
0x0000000000464f01 : or al, 0 ; add byte ptr [rax + 0x7c], dh ; cld ; jmp qword ptr [rax]
0x000000000040fb03 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004262e8 : or al, 0 ; add cl, ch ; ret
0x0000000000446eea : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000446fc4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000464eb1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; int1 ; sti ; jmp rax
0x0000000000404e50 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000043abd1 : or bh, al ; in al, dx ; ret 0xe8ff
0x000000000045b055 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000043791d : or byte ptr [r15], 0x8f ; ret 6
0x000000000043ca60 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042ac9a : or byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x000000000042ac9b : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x0000000000465d05 : or byte ptr [rax], al ; add byte ptr [rax - 0x2c], bh ; cld ; jmp rbx
0x000000000044f5a8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000043791e : or byte ptr [rdi], 0x8f ; ret 6
0x000000000045b054 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040aaf5 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000043d164 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042ab5c : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x000000000041e6c9 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x322de045], cl ; ret 0x489b
0x0000000000412d56 : or dword ptr [rbx - 0x4d34b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000415eaa : or dword ptr [rsi], 0x6b9828f ; ret
0x000000000041a161 : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000464f41 : or eax, 0x96b00000 ; cld ; jmp qword ptr [rax]
0x0000000000464f71 : or eax, 0xab200000 ; cld ; jmp rax
0x0000000000464ec1 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x11], ah ; cld ; jmp qword ptr [rax]
0x000000000045ba20 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000045bd23 : or eax, esi ; pop rbp ; ret
0x000000000045bdf7 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000043cd0b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045bdf6 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000045ba1f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000043afc0 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004488cb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000046136c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421761 : out dx, al ; jmp 0x4220be
0x000000000042295d : out dx, al ; jmp 0x4220ed
0x000000000041bc24 : out dx, al ; ret 0x89f8
0x000000000042080b : out dx, al ; ret 0xb9f8
0x000000000042175f : out dx, al ; scasd eax, dword ptr [rdi] ; out dx, al ; jmp 0x4220c0
0x0000000000436959 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004597e0 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000436ad8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000046169f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044da82 : out dx, eax ; mov al, -0x47 ; ret
0x00000000004279dd : out dx, eax ; ret 0x24b9
0x00000000004273a2 : out dx, eax ; ret 0x8589
0x000000000045fc99 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000407c5b : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004308d9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004499b5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000043e606 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000449a00 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000450e31 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000045fc9c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000465075 : outsd dx, dword ptr [rsi] ; std ; jmp rax
0x0000000000451c8c : pop ax ; jb 0x451cc1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041052f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004630fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413c6d : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410531 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004630fe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410533 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000463100 : pop r14 ; pop r15 ; ret
0x000000000040875f : pop r14 ; pop rbp ; ret
0x0000000000410535 : pop r15 ; pop rbp ; ret
0x0000000000463102 : pop r15 ; ret
0x0000000000451c8d : pop rax ; jb 0x451cc0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000465538 : pop rax ; stc ; jmp rsi
0x0000000000401c52 : pop rbp ; mov byte ptr [rip + 0x26671e], 1 ; ret
0x0000000000401bf1 : pop rbp ; mov edi, 0x668310 ; jmp rax
0x0000000000401c2e : pop rbp ; mov rsi, rax ; mov edi, 0x668310 ; jmp rdx
0x00000000004630fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410532 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004630ff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000446772 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000442a45 : pop rbp ; pop rcx ; ret 0x8589
0x000000000044678e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401be5 : pop rbp ; ret
0x0000000000465949 : pop rbx ; cld ; call qword ptr [rax]
0x00000000004655d9 : pop rbx ; cli ; call rsi
0x0000000000413c6c : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044b9a5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040875e : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405b26 : pop rbx ; pop rbp ; ret
0x000000000044f5b0 : pop rbx ; ret
0x0000000000446773 : pop rcx ; ret 0x1b2
0x0000000000440e46 : pop rcx ; ret 0x8589
0x000000000044678f : pop rcx ; ret 0x8b48
0x0000000000448ac0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000410536 : pop rdi ; pop rbp ; ret
0x0000000000463103 : pop rdi ; ret
0x0000000000464e05 : pop rsi ; cli ; call qword ptr [rax]
0x0000000000410534 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000463101 : pop rsi ; pop r15 ; ret
0x0000000000408760 : pop rsi ; pop rbp ; ret
0x0000000000410530 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004630fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413c6e : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000440e45 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004308f0 : pop rsp ; ret 0xf66
0x0000000000466dac : pop rsp ; sbb dword ptr [rax], eax ; add al, dh ; ret 0xffff
0x0000000000465b69 : popfq ; cld ; call qword ptr [rdx]
0x00000000004621b5 : popfq ; ret 0xd284
0x00000000004368a5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000446770 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000418638 : push -0x67 ; ret
0x000000000044895a : push -0x75425eeb ; push rbp ; ret
0x00000000004454b8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042a821 : push 0x29481a52 ; ret 0x8948
0x0000000000465127 : push qword ptr [rax + 0x20000014] ; test edi, esi ; call rax
0x0000000000464def : push qword ptr [rax - 0x7ffffff9] ; cmp edi, edx ; call rax
0x000000000041913c : push r11 ; mov byte ptr [rbx - 0x17], ch ; ret 0
0x000000000042d3e9 : push rax ; pop rbp ; ret
0x000000000040b8aa : push rbp ; call 0x492341ff
0x000000000044e8f6 : push rbp ; clc ; pop rbp ; ret
0x000000000045bb44 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x0000000000431d1c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000430608 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401c74 : push rbp ; mov edi, 0x667e20 ; mov rbp, rsp ; call rax
0x000000000044895f : push rbp ; ret
0x00000000004488f6 : push rbp ; ret 0xd284
0x0000000000438646 : push rbp ; shr al, 1 ; ret
0x0000000000446eef : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000446fc9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041913d : push rbx ; mov byte ptr [rbx - 0x17], ch ; ret 0
0x00000000004522d6 : push rcx ; push rdx ; ret
0x0000000000464e75 : push rcx ; sti ; jmp rax
0x000000000041038d : push rdi ; adc al, 0x2b ; mov byte ptr [rcx - 9], al ; jmp qword ptr [rcx]
0x000000000045fc9b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004128d7 : push rdi ; ret 0x5fae
0x000000000041ed53 : push rdx ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0xc2de045], cl ; ret
0x00000000004059a8 : push rdx ; cmp ch, cl ; ret 1
0x00000000004522d7 : push rdx ; ret
0x000000000042a822 : push rdx ; sbb cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000464e85 : push rsp ; sti ; jmp qword ptr [rax]
0x0000000000404654 : pushfq ; ret 0xd284
0x0000000000465030 : rcl byte ptr [rax], 0 ; add al, al ; std ; jmp rax
0x0000000000465070 : rcl byte ptr [rcx], 0 ; add byte ptr [rax + 0x6f], ah ; std ; jmp rax
0x0000000000465228 : rcr byte ptr [rax], 0 ; add al, dl ; ret
0x0000000000465268 : rcr byte ptr [rcx], 0 ; add byte ptr [rax], al ; sar esi, cl ; jmp rax
0x00000000004652ac : rcr byte ptr [rdx], -1 ; jmp rax
0x00000000004652a8 : rcr byte ptr [rdx], 0 ; add al, al ; sbb bh, bh ; jmp rax
0x0000000000407b4d : rcr byte ptr [rsi + 0x4e], -0x7f ; ret 0xffd0
0x00000000004016d9 : ret
0x0000000000400970 : ret 0
0x000000000040fbfe : ret 0x10
0x0000000000407073 : ret 0x13
0x0000000000427980 : ret 0x148
0x000000000042909e : ret 0x149
0x000000000040f83e : ret 0x18b9
0x0000000000411c3b : ret 0x1957
0x000000000041d5e3 : ret 0x1a
0x000000000043ed3d : ret 0x1add
0x0000000000446775 : ret 0x1b2
0x00000000004302fd : ret 0x1cdd
0x0000000000430225 : ret 0x1e1
0x000000000041bb1c : ret 0x1f
0x0000000000405ba8 : ret 0x1fb3
0x000000000043f68a : ret 0x23da
0x00000000004279de : ret 0x24b9
0x0000000000407cb8 : ret 0x2606
0x00000000004019b2 : ret 0x2667
0x00000000004017b2 : ret 0x2668
0x000000000044c388 : ret 0x279e
0x00000000004308da : ret 0x280f
0x0000000000403ff9 : ret 0x2948
0x000000000042909b : ret 0x294c
0x0000000000448ac4 : ret 0x2a
0x0000000000446ef2 : ret 0x2d50
0x000000000041e501 : ret 0x30
0x00000000004097ce : ret 0x3040
0x00000000004308ea : ret 0x33e
0x00000000004164ef : ret 0x33e9
0x0000000000427bb7 : ret 0x348
0x00000000004319ea : ret 0x3504
0x000000000042096c : ret 0x35b9
0x000000000041ae9c : ret 0x38
0x00000000004479c4 : ret 0x3b
0x0000000000444a25 : ret 0x3e
0x000000000045bb49 : ret 0x4589
0x0000000000424072 : ret 0x45c9
0x0000000000401fd9 : ret 0x4639
0x000000000043ad0f : ret 0x4802
0x000000000042ffc0 : ret 0x4810
0x000000000040f1df : ret 0x4811
0x000000000045fc9e : ret 0x4815
0x00000000004499b6 : ret 0x4861
0x000000000040b872 : ret 0x487e
0x000000000041af27 : ret 0x489b
0x0000000000432677 : ret 0x48c3
0x0000000000413632 : ret 0x48e8
0x0000000000402267 : ret 0x48f0
0x000000000045d0e9 : ret 0x48f2
0x0000000000442271 : ret 0x4b
0x000000000044d887 : ret 0x4cc0
0x000000000044a8c8 : ret 0x4cf0
0x0000000000450bac : ret 0x4f0b
0x000000000043ccbb : ret 0x5589
0x0000000000409e31 : ret 0x558a
0x00000000004271a9 : ret 0x560a
0x000000000044717a : ret 0x5966
0x000000000044f807 : ret 0x5bc6
0x0000000000410de7 : ret 0x5fae
0x0000000000462def : ret 0x61
0x000000000040546a : ret 0x61b9
0x000000000043e3d6 : ret 0x6a8a
0x0000000000429782 : ret 0x6dcc
0x000000000041a427 : ret 0x75a1
0x000000000041b46c : ret 0x76b7
0x000000000043e08e : ret 0x77a8
0x000000000041b8b8 : ret 0x7924
0x0000000000413269 : ret 0x7a81
0x000000000043f1f1 : ret 0x7a8a
0x00000000004163a8 : ret 0x7ae9
0x0000000000445e6b : ret 0x7b7f
0x0000000000416c42 : ret 0x8041
0x000000000044ca62 : ret 0x8141
0x000000000042a98d : ret 0x8148
0x0000000000407d33 : ret 0x81b9
0x0000000000447d84 : ret 0x822d
0x000000000040b617 : ret 0x82de
0x0000000000438252 : ret 0x8348
0x000000000043ac71 : ret 0x840
0x0000000000407dc0 : ret 0x8445
0x0000000000404dc9 : ret 0x8589
0x00000000004081c4 : ret 0x858a
0x0000000000430ca9 : ret 0x86a5
0x000000000045bb27 : ret 0x8844
0x0000000000458e99 : ret 0x8902
0x0000000000411884 : ret 0x8909
0x000000000043a886 : ret 0x8938
0x000000000043ee03 : ret 0x8940
0x0000000000409dd5 : ret 0x8941
0x0000000000412b41 : ret 0x8944
0x0000000000409f3e : ret 0x8948
0x000000000041aef6 : ret 0x894a
0x0000000000409dd2 : ret 0x894c
0x000000000043e607 : ret 0x8961
0x000000000040b5d3 : ret 0x897e
0x000000000042f35c : ret 0x899a
0x000000000040c63f : ret 0x89b2
0x0000000000453b28 : ret 0x89f1
0x000000000041bc25 : ret 0x89f8
0x000000000045f8b8 : ret 0x8a44
0x000000000045f7b5 : ret 0x8a4a
0x0000000000409a34 : ret 0x8b48
0x0000000000424d2a : ret 0x8b4c
0x000000000041447d : ret 0x90f5
0x0000000000416cfb : ret 0x941
0x000000000045bdd2 : ret 0x949
0x0000000000419581 : ret 0x950f
0x0000000000455725 : ret 0x9589
0x0000000000452fc7 : ret 0x9e6d
0x0000000000465e0c : ret 0xa
0x00000000004124a6 : ret 0xa03d
0x0000000000446fcc : ret 0xa30b
0x000000000040fbef : ret 0xa6b9
0x000000000041137a : ret 0xaa10
0x000000000046093f : ret 0xac60
0x000000000042c160 : ret 0xae8
0x0000000000406673 : ret 0xae9b
0x000000000040e69d : ret 0xaf7a
0x00000000004107f5 : ret 0xb0
0x000000000040b859 : ret 0xb27e
0x000000000045fef8 : ret 0xb2e8
0x00000000004488d0 : ret 0xb740
0x0000000000407fc1 : ret 0xb841
0x0000000000426a44 : ret 0xb848
0x0000000000412c1d : ret 0xb909
0x0000000000446b00 : ret 0xb940
0x000000000043498b : ret 0xb948
0x000000000041fb8e : ret 0xb94a
0x000000000042f5b0 : ret 0xb99a
0x000000000040eeb5 : ret 0xb9b2
0x00000000004559b6 : ret 0xb9f1
0x000000000042080c : ret 0xb9f8
0x000000000040f8ec : ret 0xbba
0x0000000000412c7d : ret 0xbe09
0x0000000000448f4c : ret 0xbf48
0x00000000004213f1 : ret 0xc
0x0000000000407b4b : ret 0xc097
0x0000000000401c15 : ret 0xc148
0x000000000041ca65 : ret 0xc1e6
0x0000000000463032 : ret 0xc493
0x000000000045b977 : ret 0xc4b7
0x00000000004224bf : ret 0xc6d9
0x000000000045d202 : ret 0xca00
0x0000000000461329 : ret 0xca21
0x0000000000456275 : ret 0xca29
0x0000000000462df5 : ret 0xccb2
0x000000000043b117 : ret 0xceb7
0x0000000000403b4b : ret 0xd284
0x0000000000457085 : ret 0xd5f3
0x000000000045df05 : ret 0xd618
0x0000000000459736 : ret 0xd709
0x000000000045766e : ret 0xdc02
0x0000000000425aca : ret 0xe000
0x000000000041bca0 : ret 0xe18a
0x0000000000407c61 : ret 0xe280
0x000000000043a8b3 : ret 0xe8ff
0x00000000004487a2 : ret 0xe940
0x0000000000449a01 : ret 0xe961
0x000000000042f75f : ret 0xe99a
0x00000000004106d8 : ret 0xe9b2
0x000000000043f82d : ret 0xea51
0x000000000042f66b : ret 0xea81
0x000000000045900a : ret 0xedb9
0x000000000044b5bc : ret 0xee8
0x000000000043ac55 : ret 0xf280
0x0000000000416caf : ret 0xf281
0x0000000000423509 : ret 0xf356
0x0000000000452afc : ret 0xf40
0x0000000000447607 : ret 0xf41
0x000000000043936c : ret 0xf4e9
0x00000000004308f1 : ret 0xf66
0x00000000004068dc : ret 0xf781
0x0000000000449555 : ret 0xf7f3
0x000000000040cfde : ret 0xf84c
0x0000000000447cde : ret 0xfc75
0x000000000043847f : ret 0xff3
0x000000000040b8b1 : ret 0xff70
0x000000000044954f : ret 0xffa5
0x0000000000447cd8 : ret 0xffc4
0x0000000000407b51 : ret 0xffd0
0x0000000000446ef8 : ret 0xffd5
0x0000000000446fd2 : ret 0xffd8
0x0000000000447d8a : ret 0xffd9
0x0000000000447174 : ret 0xffe0
0x0000000000465471 : ret 0xfff9
0x0000000000445e65 : ret 0xfffa
0x0000000000464f9d : ret 0xfffc
0x000000000046521d : ret 0xfffe
0x0000000000422c41 : ret 0xffff
0x0000000000405255 : ret 1
0x00000000004008f8 : ret 2
0x0000000000409e15 : ret 3
0x00000000004124b2 : ret 4
0x0000000000422870 : ret 5
0x0000000000404afd : ret 6
0x0000000000405363 : ret 7
0x000000000040363f : ret 8
0x000000000042553a : ret 9
0x000000000043bcd5 : rol bh, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x000000000045fc7d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000040875a : rol byte ptr [rax + rax], 1 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000403b44 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045b30c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004317df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045c2ba : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000459b15 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x000000000040f5a3 : rol byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x000000000043a6d1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465004 : rol byte ptr [rsi], 1 ; std ; jmp qword ptr [rax]
0x000000000045fc7c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000042225c : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004163a7 : rol edx, cl ; jmp 0x417031
0x000000000043bcd4 : rol r15b, 1 ; les r14d, ptr [r10] ; sbb al, -0x1a ; ret
0x0000000000432550 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432dfe : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000042d037 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000428d6b : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000451c84 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401c1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c2b ; pop rbp ; ret
0x0000000000432551 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432dff : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000042d038 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004195a5 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043103a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000428d6c : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000434423 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000426fa4 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419ebe : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004307ad : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423de4 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045bdf5 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000424e65 : ror byte ptr [rbx - 0x38b7338b], 1 ; ret 0xffff
0x000000000043cd0a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045c2cd : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000464eb0 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; int1 ; sti ; jmp rax
0x0000000000464f70 : ror byte ptr [rip - 0x54e00000], -4 ; jmp rax
0x0000000000464fb0 : ror byte ptr [rsi], 0 ; add byte ptr [rax - 0x30], dh ; cld ; jmp rax
0x000000000045bdcf : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000418641 : ror dword ptr [rax - 0x48], 0x3b ; sub al, 0x32 ; xchg eax, esp ; push -0x67 ; ret
0x000000000040b125 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000045faae : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000429098 : ror dword ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000452c28 : ror dword ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043bc85 : ror dword ptr [rcx - 0x1376b738], 0x5d ; ret
0x000000000044d740 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004054f7 : sahf ; ret 0xd284
0x0000000000453bea : salc ; jmp qword ptr [rdi]
0x0000000000411c8e : salc ; ret 0x1957
0x00000000004271a8 : salc ; ret 0x560a
0x0000000000453b26 : salc ; sti ; ret 0x89f1
0x0000000000464fb5 : sar ah, 1 ; jmp rax
0x000000000045bdb4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042e6f8 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x0000000000401c1e : sar eax, 1 ; jne 0x401c29 ; pop rbp ; ret
0x0000000000448ac1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000464dc5 : sar ecx, cl ; call qword ptr [rax]
0x000000000046527d : sar esi, cl ; jmp qword ptr [rax]
0x000000000046526d : sar esi, cl ; jmp rax
0x0000000000401c1d : sar rax, 1 ; jne 0x401c2a ; pop rbp ; ret
0x000000000043b830 : sbb al, -0x1a ; ret
0x000000000044da80 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004563be : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004652a9 : sbb al, byte ptr [rax] ; add al, al ; sbb bh, bh ; jmp rax
0x00000000004652ad : sbb bh, bh ; jmp rax
0x00000000004555db : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000465229 : sbb byte ptr [rax], al ; add al, dl ; ret
0x0000000000465221 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042a823 : sbb cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000004489c1 : sbb cl, ch ; ret
0x0000000000466dad : sbb dword ptr [rax], eax ; add al, dh ; ret 0xffff
0x00000000004514d3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000465269 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; sar esi, cl ; jmp rax
0x0000000000466df5 : sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; ret
0x0000000000466e0d : sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x000000000041937c : sbb eax, 0x453b489e ; call 0xffffffffc2d3a2d0
0x000000000043301d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000465689 : sbb ebx, edi ; jmp rcx
0x000000000044cad0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042b46b : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x000000000044eea4 : scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000421760 : scasd eax, dword ptr [rdi] ; out dx, al ; jmp 0x4220bf
0x000000000045766d : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x0000000000433dc4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413262 : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x7a81
0x0000000000433dc6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043090f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000045b4ec : shl ebp, cl ; ret
0x000000000041aef4 : shl ecx, cl ; ret 0x894a
0x0000000000438647 : shr al, 1 ; ret
0x00000000004479c2 : shr cl, cl ; ret 0x3b
0x00000000004663bd : sldt word ptr [rax] ; and byte ptr [rax - 2], bh ; jmp qword ptr [rbx]
0x0000000000464fc1 : sldt word ptr [rax] ; mov al, -0x20 ; cld ; jmp qword ptr [rax]
0x0000000000464ff1 : sldt word ptr [rax] ; mov al, -0xa ; cld ; jmp rax
0x0000000000412cde : stc ; add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x0000000000464dc6 : stc ; call qword ptr [rax]
0x0000000000437bb9 : stc ; in al, dx ; ret 0x8589
0x00000000004384cc : stc ; in al, dx ; ret 0xff3
0x000000000046553a : stc ; jmp rsi
0x00000000004059a6 : stc ; mov bh, 0x52 ; cmp ch, cl ; ret 1
0x00000000004457fd : stc ; ret 0x77a8
0x0000000000465fea : std ; call qword ptr [rdx]
0x000000000046507e : std ; inc dword ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x78], al ; std ; jmp qword ptr [rax]
0x000000000046503e : std ; inc dword ptr [rax] ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x4d], ah ; std ; jmp qword ptr [rax]
0x000000000046502e : std ; inc eax ; adc byte ptr [rax], al ; add al, al ; std ; jmp rax
0x000000000046506e : std ; inc eax ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x6f], ah ; std ; jmp rax
0x0000000000465006 : std ; jmp qword ptr [rax]
0x0000000000465036 : std ; jmp rax
0x000000000044c387 : std ; ret 0x279e
0x00000000004133a1 : sti ; add byte ptr [rax - 0x6bf10000], al ; ret
0x0000000000464eae : sti ; inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; int1 ; sti ; jmp rax
0x0000000000464e46 : sti ; jmp qword ptr [rax]
0x0000000000464e36 : sti ; jmp rax
0x000000000046568a : sti ; jmp rcx
0x0000000000453b27 : sti ; ret 0x89f1
0x00000000004559b5 : sti ; ret 0xb9f1
0x0000000000437bb8 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000045bdb3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000464f75 : stosd dword ptr [rdi], eax ; cld ; jmp rax
0x0000000000418635 : sub al, 0x32 ; xchg eax, esp ; push -0x67 ; ret
0x000000000042d5fe : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c312 : sub bh, byte ptr [rbp + 0x46] ; ret
0x0000000000460a46 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042d4e8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446ef5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000464e44 : sub byte ptr [rsi], -5 ; jmp qword ptr [rax]
0x0000000000446eeb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000446fc5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000447d85 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041d2e4 : sub edi, dword ptr [rbp + 0x46] ; ret
0x0000000000451c8f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000463161 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000463160 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000430bd3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004266e7 : test ah, dl ; add al, 0 ; add cl, ch ; ret 1
0x00000000004262e6 : test ah, dl ; or al, 0 ; add cl, ch ; ret
0x00000000004056a8 : test al, -0x17 ; ret
0x0000000000455508 : test al, -0x18 ; ret
0x000000000042b306 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x000000000044eea6 : test al, -0x47 ; call rsi
0x0000000000438869 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000446ef0 : test al, -0x7f ; ret 0x2d50
0x0000000000446fca : test al, -0x7f ; ret 0xa30b
0x00000000004059a5 : test al, -7 ; mov bh, 0x52 ; cmp ch, cl ; ret 1
0x000000000043a607 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045f553 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004058f5 : test al, 0x18 ; ret
0x0000000000465688 : test al, 0x19 ; sti ; jmp rcx
0x000000000044d15e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000449726 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000450d28 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000044e2b0 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000466541 : test bh, dh ; jmp rsp
0x0000000000435a4d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000043791a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000041753b : test byte ptr [rax - 0x16fffffb], bl ; ret 1
0x000000000046310a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043036c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000040524f : test byte ptr [rbx - 0x16fffffa], bh ; ret 1
0x000000000043791b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000041d1dc : test byte ptr [rcx], ah ; xor dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004655d4 : test byte ptr [rcx], al ; add byte ptr [rax], al ; clc ; pop rbx ; cli ; call rsi
0x000000000043dd6c : test byte ptr [rcx], ch ; ret 0
0x000000000042c3b6 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000042588b : test byte ptr [rip - 0x16fffffd], al ; ret 1
0x000000000042fb62 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000438e47 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004290ea : test dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000042846d : test dword ptr [rax + 0x2dffffdf], ecx ; ret
0x00000000004271a2 : test dword ptr [rax + 0x2dffffdf], esp ; salc ; ret 0x560a
0x00000000004276aa : test dword ptr [rax + 0x2dffffdf], esp ; xlatb ; ret 0x560a
0x000000000043dd66 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000045b057 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045b017 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000040a1d2 : test dword ptr [rdi + rdi*8 - 1], eax ; call rsp
0x000000000040a06f : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rbx]
0x000000000040a0f9 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp qword ptr [rdx]
0x000000000045af92 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x000000000040a1b4 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsi
0x000000000040a09c : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rsp
0x0000000000456233 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000045628b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004561f2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000450e36 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000429651 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rsi]
0x000000000042b308 : test dword ptr [rdi + rdi*8 - 1], edi ; call rax
0x000000000042ac9f : test dword ptr [rdi + rdi*8 - 1], edi ; call rdi
0x000000000042b47f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rcx]
0x000000000042b470 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rdx
0x0000000000419f2d : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000419c71 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rsi]
0x0000000000436831 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004088fb : test dword ptr [rdi + rdi*8 - 1], esi ; call rbx
0x0000000000407f11 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x000000000040890a : test dword ptr [rdi + rdi*8 - 1], esi ; call rsi
0x00000000004597e5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000044cd7a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000403638 : test dword ptr [rdi*8 - 0x7bf00001], eax ; ret 8
0x000000000044879b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004499fa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x00000000004454ba : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004499af : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000046512d : test edi, esi ; call rax
0x00000000004479bf : wait ; jge 0x4479a1 ; shr cl, cl ; ret 0x3b
0x0000000000442a7d : wait ; jo 0x442a8b ; ret
0x0000000000445fcc : wait ; jo 0x445fda ; ret
0x000000000046513d : xchg dh, bh ; call qword ptr [rax]
0x000000000045fc98 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040f729 : xchg eax, ebp ; idiv r15d ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000041c344 : xchg eax, ebp ; jge 0x41c332 ; ret 0x8589
0x00000000004306f0 : xchg eax, ebp ; jmp 0x430841
0x0000000000405a4d : xchg eax, ebp ; ret
0x0000000000407dbf : xchg eax, ebp ; ret 0x8445
0x0000000000403b4a : xchg eax, ebp ; ret 0xd284
0x0000000000452afb : xchg eax, ebp ; ret 0xf40
0x000000000043e605 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000444f05 : xchg eax, ebx ; ret
0x00000000004522d5 : xchg eax, ecx ; push rcx ; push rdx ; ret
0x0000000000445135 : xchg eax, ecx ; ret
0x0000000000407b4c : xchg eax, edi ; rcr byte ptr [rsi + 0x4e], -0x7f ; ret 0xffd0
0x00000000004040af : xchg eax, edi ; ret 0xd284
0x0000000000452343 : xchg eax, edx ; push rcx ; push rdx ; ret
0x000000000043e985 : xchg eax, edx ; ret
0x0000000000419384 : xchg eax, edx ; ret 0x8445
0x000000000041829d : xchg eax, edx ; ret 0xd284
0x0000000000464f45 : xchg eax, esi ; cld ; jmp qword ptr [rax]
0x000000000041d2b2 : xchg eax, esi ; jge 0x41d2a0 ; ret 0x8589
0x0000000000420969 : xchg eax, esi ; jge 0x420957 ; ret 0x35b9
0x0000000000439368 : xchg eax, esp ; int 6
0x000000000044ffca : xchg eax, esp ; jmp 0x450a38
0x000000000044ff07 : xchg eax, esp ; jmp 0x450a3a
0x0000000000407c5a : xchg eax, esp ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004499b4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000445285 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004499ff : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000418637 : xchg eax, esp ; push -0x67 ; ret
0x00000000004133a7 : xchg eax, esp ; ret
0x0000000000416c41 : xchg eax, esp ; ret 0x8041
0x000000000040a987 : xchg eax, esp ; ret 0x8445
0x00000000004488ce : xchg eax, esp ; ret 0xb740
0x000000000040408d : xchg eax, esp ; ret 0xd284
0x0000000000407c60 : xchg eax, esp ; ret 0xe280
0x000000000042225b : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000433dc5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042f9b2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000439367 : xchg eax, r12d ; int 6
0x000000000044ffc9 : xchg eax, r12d ; jmp 0x450a39
0x000000000043266f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000411882 : xlatb ; hlt ; ret 0x8909
0x000000000045ba1e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004276b0 : xlatb ; ret 0x560a
0x0000000000453b7a : xlatb ; sti ; ret 0x89f1
0x00000000004559b4 : xlatb ; sti ; ret 0xb9f1
0x000000000041a227 : xor al, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000465684 : xor al, 2 ; add byte ptr [rax], al ; test al, 0x19 ; sti ; jmp rcx
0x00000000004488c9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000043b8c5 : xor bl, byte ptr [rsi] ; ret
0x000000000043d167 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000438643 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x000000000043d168 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045bdb6 : xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000466b10 : xor byte ptr [rbx - 1], dh ; call rdi
0x000000000042f9b3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000423de8 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000464e04 : xor byte ptr [rsi - 6], bl ; call qword ptr [rax]
0x000000000041d1de : xor dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041eedf : xor dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000043b82f : xor dword ptr [rsi], ebx ; ret
0x000000000044e70e : xor eax, 0x7ab99ca8 ; ret
0x00000000004668c9 : xor edi, edi ; jmp rcx
0x000000000045ba1d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000045bd21 : xor esi, edi ; or eax, esi ; pop rbp ; ret
