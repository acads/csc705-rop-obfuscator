0x0000000000429244 : adc al, 6 ; add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rbx]
0x00000000004288d4 : adc byte ptr [rsi], -2 ; call qword ptr [rax]
0x0000000000417a7e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004173f1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042022b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041857b : adc eax, 0x558abda1 ; ret
0x0000000000408f28 : adc eax, 0x8b1dc18f ; push rbp ; loopne 0x408eb9 ; ret 0x33f7
0x000000000041bb59 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b60c : adc eax, dword ptr [rbx - 0x76ba95ea] ; ret 0x8141
0x00000000004042c2 : add al, 0 ; add bh, al ; mov word ptr [r11 - 9], fs ; ret 0xe95f
0x0000000000424a1a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000428903 : add al, al ; cmp esi, edi ; call rax
0x000000000041f8f6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4285
0x0000000000425171 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; jge 0x425169 ; call 0x401409
0x00000000004288c3 : add al, dl ; iretd ; std ; call rax
0x00000000004042c4 : add bh, al ; mov word ptr [r11 - 9], fs ; ret 0xe95f
0x000000000041ff04 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004183b9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000404343 : add bh, bh ; ret 0x1589
0x0000000000427e5f : add bl, dh ; ret
0x0000000000427b32 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000427d94 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000428db7 : add byte ptr [rax - 0x44], bh ; std ; call qword ptr [rcx]
0x0000000000428d77 : add byte ptr [rax - 0x45], bh ; std ; jmp qword ptr [rdi]
0x000000000041f8f8 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4285
0x00000000004048c8 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425173 : add byte ptr [rax - 0x75], cl ; jge 0x425167 ; call 0x401407
0x0000000000404379 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403e0c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000429242 : add byte ptr [rax], al ; adc al, 6 ; add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rbx]
0x00000000004288d2 : add byte ptr [rax], al ; adc byte ptr [rsi], -2 ; call qword ptr [rax]
0x000000000041ff02 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000427e5d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004049f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403e0a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000427e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403965 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000427e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040498e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041b5c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041e6c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000401a93 : add byte ptr [rax], al ; add byte ptr [rbx - 0x53d217bb], cl ; ret 0x8911
0x0000000000401a51 : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d217bb], cl ; ret 0x8911
0x00000000004250ec : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000421029 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040b08a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040b0a9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000427b33 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000427d95 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041fe70 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000426f01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000424281 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004084f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000426018 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403967 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423f95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041fdfa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041dc95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408859 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000428d72 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax - 0x45], bh ; std ; jmp qword ptr [rdi]
0x000000000041bb5b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b1e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042022d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425798 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004011b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000429652 : add byte ptr [rax], al ; and al, 0xa ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; call rdx
0x0000000000429b0e : add byte ptr [rax], al ; and bl, 0xff ; call qword ptr [rax]
0x0000000000428912 : add byte ptr [rax], al ; cmp byte ptr [rsi], -2 ; call qword ptr [rax]
0x0000000000429b0a : add byte ptr [rax], al ; fmul qword ptr [rsi] ; add byte ptr [rax], al ; and bl, 0xff ; call qword ptr [rax]
0x00000000004012c9 : add byte ptr [rax], al ; jmp 0x4011c9
0x0000000000428d76 : add byte ptr [rax], al ; js 0x428d3a ; std ; jmp qword ptr [rdi]
0x0000000000428db6 : add byte ptr [rax], al ; js 0x428d7b ; std ; call qword ptr [rcx]
0x0000000000428892 : add byte ptr [rax], al ; mov al, -0x41 ; std ; call qword ptr [rax]
0x0000000000429656 : add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; call rdx
0x0000000000427b78 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041dcfa : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e12d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e3a9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040490d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041df81 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425172 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x18] ; call 0x401408
0x00000000004049fa : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429246 : add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rbx]
0x00000000004018b9 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b5c3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e5e : add byte ptr [rax], al ; ret
0x00000000004288c2 : add byte ptr [rax], al ; ror bh, 1 ; std ; call rax
0x0000000000428902 : add byte ptr [rax], al ; sar byte ptr [rcx], -2 ; call rax
0x0000000000428db2 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; js 0x428d7f ; std ; call qword ptr [rcx]
0x00000000004289c2 : add byte ptr [rax], al ; xor byte ptr [rax - 1], cl ; jmp rax
0x0000000000428aba : add byte ptr [rax], al ; xor byte ptr [rcx - 1], bh ; call rax
0x0000000000428abb : add byte ptr [rax], dh ; jns 0x428ac2 ; call rax
0x00000000004288b3 : add byte ptr [rax], dl ; ret
0x0000000000404990 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041b5c4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041e6c5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041e67a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000401a95 : add byte ptr [rbx - 0x53d217bb], cl ; ret 0x8911
0x0000000000401a53 : add byte ptr [rbx - 0x54d217bb], cl ; ret 0x8911
0x00000000004250ee : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000427b79 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042102b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040b08c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000428db3 : add byte ptr [rcx + rax - 0x43880000], al ; std ; call qword ptr [rcx]
0x00000000004047d5 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000428d73 : add byte ptr [rcx + rax], al ; add byte ptr [rax - 0x45], bh ; std ; jmp qword ptr [rdi]
0x000000000040b067 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041ff6e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004015e8 : add byte ptr [rcx], al ; ret
0x0000000000427b35 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000427d97 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000041fe72 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000041e3da : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426f03 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000424283 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004084f2 : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000042601a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403969 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423f97 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041fdfc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041dc97 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040885b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000429653 : add byte ptr [rdx + rcx], ah ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; call rdx
0x0000000000429243 : add byte ptr [rsi + rax], dl ; add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rbx]
0x00000000004184ec : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041e8cd : add cl, ch ; ret
0x000000000040acd5 : add cl, ch ; ret 1
0x0000000000428db5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x44], bh ; std ; call qword ptr [rcx]
0x0000000000428d75 : add dword ptr [rax], eax ; add byte ptr [rax - 0x45], bh ; std ; jmp qword ptr [rdi]
0x000000000040b065 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000428d74 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x45], bh ; std ; jmp qword ptr [rdi]
0x000000000040954e : add dword ptr [rcx], esp ; ret 0xd709
0x0000000000427082 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000425ed4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047d7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015e4 : add eax, 0x228cae ; add ebx, esi ; ret
0x00000000004288c1 : add eax, 0xcfd00000 ; std ; call rax
0x00000000004015ab : add eax, edx ; sar rax, 1 ; jne 0x4015bc ; pop rbp ; ret
0x00000000004015e9 : add ebx, esi ; ret
0x00000000004019db : add esp, 0x10 ; pop rbp ; ret
0x000000000041ff6c : add esp, 0x100 ; pop rbp ; ret
0x00000000004200dc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040b785 : add esp, 0x1a8 ; pop rbp ; ret
0x000000000041b1e3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000420230 : add esp, 0x40 ; pop rbp ; ret
0x0000000000424c19 : add esp, 0x440 ; pop rbp ; ret
0x00000000004057d2 : add esp, 0x50 ; pop rbp ; ret
0x0000000000421150 : add esp, 0x60 ; pop rbp ; ret
0x0000000000409bc9 : add esp, 0x6a0 ; pop rbp ; ret
0x000000000041ced2 : add esp, 0x70 ; pop rbp ; ret
0x00000000004018b5 : add esp, 0x80 ; pop rbp ; ret
0x00000000004208ad : add esp, 0x90 ; pop rbp ; ret
0x000000000041dcb6 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041babb : add esp, 0xb0 ; pop rbp ; ret
0x000000000040be6a : add esp, 0xd0 ; pop rbp ; ret
0x000000000042533e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042201f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040c473 : add esp, 8 ; pop rbp ; ret
0x00000000004011b6 : add esp, 8 ; ret
0x00000000004015aa : add rax, rdx ; sar rax, 1 ; jne 0x4015bd ; pop rbp ; ret
0x00000000004019da : add rsp, 0x10 ; pop rbp ; ret
0x000000000041ff6b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004200db : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040b784 : add rsp, 0x1a8 ; pop rbp ; ret
0x000000000041b1e2 : add rsp, 0x20 ; pop rbp ; ret
0x000000000042022f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000424c18 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004057d1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042114f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000409bc8 : add rsp, 0x6a0 ; pop rbp ; ret
0x000000000041ced1 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004018b4 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004208ac : add rsp, 0x90 ; pop rbp ; ret
0x000000000041dcb5 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041baba : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040be69 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042533d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042201e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040c472 : add rsp, 8 ; pop rbp ; ret
0x00000000004011b5 : add rsp, 8 ; ret
0x00000000004095ba : and al, 0x21 ; ret 0xd709
0x0000000000429654 : and al, 0xa ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; call rdx
0x0000000000427b3d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000425ed3 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047d6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015e7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000429b10 : and bl, 0xff ; call qword ptr [rax]
0x0000000000420d5b : and byte ptr [rsi + 0x58], ah ; jb 0x420d92 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040503f : and eax, 0x4283b5 ; call 0x4012d7
0x0000000000417721 : and eax, 0x75b4b9d3 ; ret
0x0000000000408c38 : and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000404ff3 : call 0x401202
0x0000000000405044 : call 0x4012d2
0x0000000000425178 : call 0x401402
0x0000000000405233 : call 0x4014b2
0x0000000000421155 : call 0x421219
0x000000000042568d : call 0xffffffffaca318c1
0x000000000042568c : call 0xffffffffaca318c2
0x0000000000401a56 : call 0xffffffffc283c58c
0x0000000000401a55 : call 0xffffffffc283c58d
0x0000000000401a98 : call 0xffffffffc283c6ce
0x0000000000401a97 : call 0xffffffffc283c6cf
0x000000000041b1d9 : call 0xffffffffe9043b29
0x000000000041b1d8 : call 0xffffffffe9043b2a
0x0000000000425177 : call 0xfffffffffe04d567
0x0000000000427e39 : call qword ptr [r12 + rbx*8]
0x0000000000428897 : call qword ptr [rax]
0x0000000000408aaf : call qword ptr [rbx]
0x0000000000424cbc : call qword ptr [rcx]
0x000000000041a664 : call qword ptr [rdi]
0x000000000041664b : call qword ptr [rdx]
0x0000000000427e3a : call qword ptr [rsp + rbx*8]
0x000000000040160d : call rax
0x00000000004188cb : call rcx
0x000000000041a2a4 : call rdi
0x0000000000419ad5 : call rdx
0x000000000040a9f1 : call rsi
0x000000000040493b : call rsp
0x000000000041e130 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424c17 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004204b7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004215a9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004015af : clc ; jne 0x4015b8 ; pop rbp ; ret
0x00000000004048cc : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047ec : clc ; pop rbp ; ret
0x000000000040a044 : clc ; pop rbx ; pop rbp ; ret
0x000000000040dcad : clc ; ret 0x77a8
0x0000000000401a07 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000425cce : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042201d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004095b9 : cld ; and al, 0x21 ; ret 0xd709
0x00000000004049bf : cld ; jmp 0x404a2c
0x00000000004049be : cld ; jmp 0x404a2d
0x0000000000409ec6 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000409ec9 : cld ; pop rbp ; ret
0x0000000000420d60 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000427b3c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041fc7b : cmc ; ret 0x4f0b
0x000000000041f8fb : cmp al, 0x25 ; ret 0x4285
0x0000000000419248 : cmp al, ch ; ret 0xfe82
0x0000000000429129 : cmp bh, bh ; call rdi
0x0000000000428914 : cmp byte ptr [rsi], -2 ; call qword ptr [rax]
0x000000000041fe11 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000040156d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401580 ; pop rbp ; ret
0x00000000004290c9 : cmp edi, edi ; jmp qword ptr [rbx]
0x0000000000428905 : cmp esi, edi ; call rax
0x0000000000418577 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000040b561 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x000000000040b560 : cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x0000000000417a7b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004173ee : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000417bf3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041df02 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004047e8 : dec dword ptr [rax - 0x77] ; jge 0x4047eb ; pop rbp ; ret
0x0000000000424776 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041ef4b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004041fc : dec dword ptr [rbx - 0x89c45c8] ; ret 0x3d5f
0x000000000040b59b : dec dword ptr [rcx + 0x21ca31c2] ; ret 0x458b
0x0000000000401c82 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x000000000041fc76 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040accf : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffa], ah ; ret 1
0x000000000040d98a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x00000000004245a3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000408f31 : div dword ptr [rbx] ; push rsp ; in al, -0x7f ; ret 0xffd0
0x00000000004241f9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040bc89 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004260f8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000424dd7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000424dd8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000427e3c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000429b0c : fmul qword ptr [rsi] ; add byte ptr [rax], al ; and bl, 0xff ; call qword ptr [rax]
0x000000000040b1b5 : frstor dword ptr [rcx] ; ret 0xd709
0x00000000004019d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042533c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040c471 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401580 : hlt ; pop rbp ; mov edi, 0x62a240 ; jmp rax
0x0000000000420e8b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000408f34 : in al, -0x7f ; ret 0xffd0
0x0000000000421961 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000042574c : in al, dx ; jmp 0x4257c9
0x000000000042574b : in al, dx ; jmp 0x4257ca
0x0000000000401c88 : in al, dx ; pop rbp ; ret
0x00000000004047d3 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000409ec3 : in eax, -0x77 ; jge 0x409ecb ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004042c1 : inc byte ptr [rax + rax] ; add bh, al ; mov word ptr [r11 - 9], fs ; ret 0xe95f
0x000000000040b114 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000403739 : inc dword ptr [rcx + 0xf] ; ret
0x000000000040713d : insb byte ptr [rdi], dx ; ret
0x000000000041d687 : int 0x5b
0x000000000040b0a7 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004288c5 : iretd ; std ; call rax
0x0000000000401573 : ja 0x40157a ; pop rbp ; ret
0x0000000000420d5e : jb 0x420d8f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040157f : je 0x40157d ; pop rbp ; mov edi, 0x62a240 ; jmp rax
0x00000000004047eb : jge 0x4047e8 ; pop rbp ; ret
0x00000000004095b8 : jge 0x4095ba ; and al, 0x21 ; ret 0xd709
0x0000000000409ec5 : jge 0x409ec9 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000416b16 : jge 0x416a9b ; ret 0xffd5
0x00000000004175e0 : jge 0x4175c0 ; shr cl, cl ; ret 0x3b
0x0000000000425176 : jge 0x425164 ; call 0x401404
0x0000000000428acd : jl 0x428ad0 ; call qword ptr [rax]
0x000000000040b1b3 : jle 0x40b1ec ; frstor dword ptr [rcx] ; ret 0xd709
0x00000000004012cb : jmp 0x4011c7
0x000000000040351c : jmp 0x4047cb
0x00000000004049c0 : jmp 0x404a2b
0x00000000004087f4 : jmp 0x409eb8
0x0000000000417d30 : jmp 0x41b1b0
0x0000000000415c34 : jmp 0x41b1b1
0x0000000000417001 : jmp 0x41b1b2
0x000000000041f09b : jmp 0x41fb07
0x000000000041efd8 : jmp 0x41fb09
0x000000000041f8f4 : jmp 0x41fb0a
0x0000000000421103 : jmp 0x421168
0x0000000000424ab6 : jmp 0x424d98
0x000000000042574d : jmp 0x4257c8
0x000000000041fc7a : jmp 0x4f4dbf76
0x000000000041ab05 : jmp qword ptr [rax]
0x0000000000428ebb : jmp qword ptr [rbx]
0x0000000000408677 : jmp qword ptr [rcx]
0x0000000000408f6b : jmp qword ptr [rdi]
0x000000000041ff0a : jmp qword ptr [rdx]
0x0000000000401587 : jmp rax
0x0000000000417108 : jmp rbx
0x0000000000417b3a : jmp rcx
0x0000000000408d49 : jmp rdi
0x00000000004015c7 : jmp rdx
0x0000000000409716 : jmp rsi
0x0000000000417418 : jmp rsp
0x00000000004015b0 : jne 0x4015b7 ; pop rbp ; ret
0x0000000000428abd : jns 0x428ac0 ; call rax
0x000000000040954c : jo 0x409515 ; add dword ptr [rcx], esp ; ret 0xd709
0x0000000000410a2e : jo 0x410a3a ; ret
0x000000000041269e : jo 0x4126aa ; ret
0x0000000000415bed : jo 0x415bf9 ; ret
0x000000000041ced4 : jo 0x41cf35 ; ret
0x0000000000429b11 : jrcxz 0x429b14 ; call qword ptr [rax]
0x00000000004095b7 : js 0x40963b ; cld ; and al, 0x21 ; ret 0xd709
0x0000000000428d78 : js 0x428d38 ; std ; jmp qword ptr [rdi]
0x0000000000428db8 : js 0x428d79 ; std ; call qword ptr [rcx]
0x00000000004175de : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004186de : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004051c6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040503d : lea edi, dword ptr [0x4283b5] ; call 0x4012d9
0x000000000040d325 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d1c9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a042 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d324 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a041 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000415f3e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000401a9a : lodsb al, byte ptr [rsi] ; ret 0x8911
0x0000000000401bc2 : lodsb al, byte ptr [rsi] ; ret 0xb911
0x0000000000407157 : lodsd eax, dword ptr [rsi] ; loopne 0x407144 ; ret 0x8589
0x0000000000418f45 : loope 0x418f13 ; jmp 0x41b1b3
0x0000000000407158 : loopne 0x407143 ; ret 0x8589
0x0000000000407270 : loopne 0x40725b ; ret 0x8589
0x0000000000408a1a : loopne 0x408a05 ; ret 0x558b
0x0000000000408f2e : loopne 0x408eb3 ; ret 0x33f7
0x000000000040b55e : loopne 0x40b561 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x000000000040d323 : loopne 0x40d376 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041c8cd : loopne 0x41c933 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dcb4 : loopne 0x41dd07 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004207c3 : loopne 0x4207cc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042114e : loopne 0x42119e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042114d : loopne 0x42119f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000425340 : loopne 0x425347 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425cd2 : loopne 0x425cd9 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427b7c : loopne 0x427bcb ; mov esp, ebp ; pop rbp ; ret
0x0000000000427b7b : loopne 0x427bcc ; mov esp, ebp ; pop rbp ; ret
0x0000000000427dcc : loopne 0x427e1b ; mov esp, ebp ; pop rbp ; ret
0x0000000000427dcb : loopne 0x427e1c ; mov esp, ebp ; pop rbp ; ret
0x0000000000416b0d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416be7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040b27f : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414b95 : mov ah, 0x75 ; ret
0x0000000000428894 : mov al, -0x41 ; std ; call qword ptr [rax]
0x000000000041d6a3 : mov al, -0x47 ; ret
0x000000000042427f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041babd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004047d4 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405231 : mov al, 0 ; call 0x4014b4
0x0000000000428ab8 : mov al, 0xd ; add byte ptr [rax], al ; xor byte ptr [rcx - 1], bh ; call rax
0x00000000004288c0 : mov al, 5 ; add byte ptr [rax], al ; ror bh, 1 ; std ; call rax
0x0000000000428900 : mov al, 6 ; add byte ptr [rax], al ; sar byte ptr [rcx], -2 ; call rax
0x00000000004263ed : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004260ba : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042631d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e3dc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e535 : mov bl, 0x75 ; ret
0x00000000004015e3 : mov byte ptr [rip + 0x228cae], 1 ; ret
0x0000000000429658 : mov byte ptr [rsi - 1], ch ; call rdx
0x000000000041638f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000427084 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000425ed6 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047d9 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000427b3a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000426db1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040caa9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c67f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042574a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4257cb
0x000000000041f098 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x41fb0a
0x0000000000401c83 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004019d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fed : mov dword ptr [rbp - 0xcc], ecx ; call 0x401208
0x0000000000401a05 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409ec4 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004047ea : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040cd86 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c92d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041defe : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404378 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420fcb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a03e : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042119e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057ce : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004255c5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040caac : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042114c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427b7a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c92f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404375 : mov eax, dword ptr [rbp - 0x70] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c46f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000409ec7 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004048ca : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c92e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000041dcfc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e12f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e3ab : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040490f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041df83 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419348 : mov ebp, 0xe19c53ba ; ret
0x000000000040160b : mov ebp, esp ; call rax
0x0000000000401571 : mov ebp, esp ; ja 0x40157c ; pop rbp ; ret
0x0000000000409ec2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004087f5 : mov ecx, 0xb8000016 ; ret
0x000000000040c67c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040522f : mov ecx, eax ; mov al, 0 ; call 0x4014b6
0x0000000000403efa : mov ecx, gs ; ret
0x0000000000401605 : mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x0000000000401582 : mov edi, 0x62a240 ; jmp rax
0x00000000004015c2 : mov edi, 0x62a240 ; jmp rdx
0x0000000000415be7 : mov edi, 0xb8000055 ; wait ; jo 0x415bff ; ret
0x0000000000425175 : mov edi, dword ptr [rbp - 0x18] ; call 0x401405
0x0000000000427e37 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000428b0d : mov edi, edi ; call qword ptr [rax]
0x0000000000427e36 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000424a2e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004163ab : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000417222 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000424a17 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004015c0 : mov esi, eax ; mov edi, 0x62a240 ; jmp rdx
0x0000000000401c87 : mov esp, ebp ; pop rbp ; ret
0x00000000004047e9 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040cd85 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403ef9 : mov r9d, gs ; ret
0x000000000040a38b : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420fca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042119d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057cd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042114b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004048c9 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040160a : mov rbp, rsp ; call rax
0x0000000000401570 : mov rbp, rsp ; ja 0x40157d ; pop rbp ; ret
0x000000000040522e : mov rcx, rax ; mov al, 0 ; call 0x4014b7
0x0000000000425174 : mov rdi, qword ptr [rbp - 0x18] ; call 0x401406
0x00000000004015bf : mov rsi, rax ; mov edi, 0x62a240 ; jmp rdx
0x0000000000401c86 : mov rsp, rbp ; pop rbp ; ret
0x00000000004042c6 : mov word ptr [r11 - 9], fs ; ret 0xe95f
0x0000000000401c84 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000420d61 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401c85 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x00000000004042c7 : mov word ptr [rbx - 9], fs ; ret 0xe95f
0x00000000004015e6 : mov word ptr [rdx], fs ; add byte ptr [rcx], al ; ret
0x0000000000411e88 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000403963 : movabs byte ptr [0x950f000000000062], al ; ret 0xd284
0x000000000040970d : movabs eax, dword ptr [0xffff6085c7000007] ; jmp rsi
0x00000000004150d5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000404200 : movsxd rsi, edi ; ret 0x3d5f
0x00000000004041bb : movsxd rsi, edi ; ret 0x485f
0x000000000040339e : movsxd rsi, edi ; ret 0x895f
0x00000000004042c8 : movsxd rsi, edi ; ret 0xe95f
0x0000000000427083 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000425ed5 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004047d8 : movzx eax, al ; pop rbp ; ret
0x000000000041e3db : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424828 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404377 : nop ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e375 : nop ; ret
0x000000000041c782 : nop ; ret 0x148
0x000000000041c796 : nop ; ret 0x2948
0x0000000000427e58 : nop dword ptr [rax + rax] ; ret
0x0000000000416b0a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416be4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040c680 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000429248 : or byte ptr [rax - 1], al ; call qword ptr [rbx]
0x000000000041e678 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000408855 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004084ec : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000040b562 : or byte ptr [rcx], ah ; ret 0x8941
0x0000000000417bf6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040cd84 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c92b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004184eb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004260bc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004263ef : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d6a2 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000424a19 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004195d5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040e226 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000419620 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041ff01 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000424a1c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000420d5c : pop ax ; jb 0x420d91 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041a489 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e4c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c8cf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a48b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e4e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a48d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e50 : pop r14 ; pop r15 ; ret
0x000000000040d329 : pop r14 ; pop rbp ; ret
0x000000000041a48f : pop r15 ; pop rbp ; ret
0x0000000000427e52 : pop r15 ; ret
0x0000000000420d5d : pop rax ; jb 0x420d90 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004015e2 : pop rbp ; mov byte ptr [rip + 0x228cae], 1 ; ret
0x0000000000401581 : pop rbp ; mov edi, 0x62a240 ; jmp rax
0x00000000004015be : pop rbp ; mov rsi, rax ; mov edi, 0x62a240 ; jmp rdx
0x0000000000427e4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a48c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e4f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000416392 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000412665 : pop rbp ; pop rcx ; ret 0x8589
0x00000000004163ae : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401575 : pop rbp ; ret
0x000000000041c8ce : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041b5c5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d328 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a045 : pop rbx ; pop rbp ; ret
0x000000000041e680 : pop rbx ; ret
0x000000000040954b : pop rcx ; jo 0x409516 ; add dword ptr [rcx], esp ; ret 0xd709
0x0000000000416393 : pop rcx ; ret 0x1b2
0x0000000000410a66 : pop rcx ; ret 0x8589
0x00000000004163af : pop rcx ; ret 0x8b48
0x00000000004186e0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000408f29 : pop rcx ; sbb eax, 0x81e0558b ; ret 0x33f7
0x000000000041a490 : pop rdi ; pop rbp ; ret
0x0000000000427e53 : pop rdi ; ret
0x000000000041a48e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000427e51 : pop rsi ; pop r15 ; ret
0x000000000040d32a : pop rsi ; pop rbp ; ret
0x000000000040b1b2 : pop rsp ; jle 0x40b1ed ; frstor dword ptr [rcx] ; ret 0xd709
0x000000000041a48a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e4d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c8d0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410a65 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000426f05 : popfq ; ret 0xd284
0x0000000000416390 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041857a : push -0x75425eeb ; push rbp ; ret
0x00000000004150d8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000428ab7 : push qword ptr [rax + 0x3000000d] ; jns 0x428ac6 ; call rax
0x00000000004288bf : push qword ptr [rax - 0x2ffffffb] ; iretd ; std ; call rax
0x00000000004288ff : push qword ptr [rax - 0x3ffffffa] ; cmp esi, edi ; call rax
0x0000000000428af7 : push qword ptr [rax - 0x5ffffff2] ; xchg edi, edi ; call rax
0x00000000004057d4 : push rax ; pop rbp ; ret
0x0000000000408f2d : push rbp ; loopne 0x408eb4 ; ret 0x33f7
0x0000000000401604 : push rbp ; mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x000000000041857f : push rbp ; ret
0x0000000000418516 : push rbp ; ret 0xd284
0x0000000000416b0f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416be9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000424a1b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000408f33 : push rsp ; in al, -0x7f ; ret 0xffd0
0x0000000000424285 : pushfq ; ret 0xd284
0x00000000004084f4 : pushfq ; ret 0xe280
0x00000000004011b9 : ret
0x000000000040d98e : ret 0
0x000000000041c783 : ret 0x148
0x0000000000404345 : ret 0x1589
0x00000000004196e4 : ret 0x1a
0x000000000040e95d : ret 0x1add
0x0000000000416395 : ret 0x1b2
0x000000000040b04b : ret 0x2145
0x00000000004014d2 : ret 0x228c
0x00000000004012d2 : ret 0x228d
0x000000000040f2aa : ret 0x23da
0x000000000041bfa8 : ret 0x279e
0x0000000000417bf9 : ret 0x2948
0x00000000004186e4 : ret 0x2a
0x0000000000416b12 : ret 0x2d50
0x000000000042457e : ret 0x3040
0x000000000040601b : ret 0x31
0x000000000040b80f : ret 0x3144
0x0000000000405c9b : ret 0x33
0x0000000000408f30 : ret 0x33f7
0x00000000004175e4 : ret 0x3b
0x0000000000404202 : ret 0x3d5f
0x0000000000414645 : ret 0x3e
0x000000000041f2eb : ret 0x4285
0x000000000040b5a1 : ret 0x458b
0x0000000000417a81 : ret 0x4802
0x000000000040b727 : ret 0x4810
0x0000000000424a1e : ret 0x4815
0x00000000004041bd : ret 0x485f
0x00000000004195d6 : ret 0x4861
0x0000000000401b47 : ret 0x48f0
0x0000000000411e91 : ret 0x4b
0x000000000041d4a7 : ret 0x4cc0
0x000000000041a4e8 : ret 0x4cf0
0x000000000041fc7c : ret 0x4f0b
0x000000000040b2e1 : ret 0x5589
0x0000000000408a1c : ret 0x558b
0x0000000000416d9a : ret 0x5966
0x000000000041e8d7 : ret 0x5bc6
0x0000000000427b3f : ret 0x61
0x000000000040dff6 : ret 0x6a8a
0x0000000000424c78 : ret 0x72e8
0x000000000040dcae : ret 0x77a8
0x000000000040ee11 : ret 0x7a8a
0x0000000000415a8b : ret 0x7b7f
0x000000000041c43a : ret 0x8041
0x000000000040b06a : ret 0x8141
0x0000000000424779 : ret 0x8148
0x00000000004179a4 : ret 0x822d
0x000000000041c450 : ret 0x8445
0x000000000040715a : ret 0x8589
0x0000000000403b66 : ret 0x858a
0x0000000000401a5a : ret 0x8911
0x000000000040ea23 : ret 0x8940
0x000000000040b564 : ret 0x8941
0x0000000000403d17 : ret 0x8948
0x000000000042303f : ret 0x894a
0x0000000000402140 : ret 0x895f
0x000000000040e227 : ret 0x8961
0x0000000000424638 : ret 0x8a44
0x0000000000424535 : ret 0x8a4a
0x00000000004163b1 : ret 0x8b48
0x0000000000402f92 : ret 0x8f35
0x00000000004093ec : ret 0xa
0x0000000000416bec : ret 0xa30b
0x000000000042568f : ret 0xac60
0x0000000000403992 : ret 0xb0
0x00000000004184f0 : ret 0xb740
0x00000000004036f7 : ret 0xb841
0x0000000000420d57 : ret 0xb848
0x0000000000401bc4 : ret 0xb911
0x0000000000416720 : ret 0xb940
0x00000000004244c2 : ret 0xb94a
0x0000000000418b6c : ret 0xbf48
0x000000000040b857 : ret 0xc131
0x00000000004015a5 : ret 0xc148
0x000000000040b812 : ret 0xc221
0x0000000000408fbb : ret 0xc283
0x0000000000427d82 : ret 0xc493
0x0000000000426079 : ret 0xca21
0x000000000040b59d : ret 0xca31
0x0000000000427b45 : ret 0xccb2
0x000000000040b5aa : ret 0xd109
0x000000000040396c : ret 0xd284
0x0000000000422c85 : ret 0xd618
0x0000000000408c3a : ret 0xd709
0x00000000004084f5 : ret 0xe280
0x00000000004183c2 : ret 0xe940
0x00000000004042ca : ret 0xe95f
0x0000000000419621 : ret 0xe961
0x000000000040f44d : ret 0xea51
0x00000000004069e7 : ret 0xea59
0x0000000000427b37 : ret 0xea81
0x000000000041b1dc : ret 0xee8
0x000000000040b125 : ret 0xf281
0x0000000000417227 : ret 0xf41
0x0000000000419175 : ret 0xf7f3
0x00000000004178fe : ret 0xfc75
0x000000000041924a : ret 0xfe82
0x000000000041916f : ret 0xffa5
0x00000000004178f8 : ret 0xffc4
0x0000000000408f36 : ret 0xffd0
0x0000000000416b18 : ret 0xffd5
0x0000000000416bf2 : ret 0xffd8
0x00000000004179aa : ret 0xffd9
0x0000000000416d94 : ret 0xffe0
0x0000000000415a85 : ret 0xfffa
0x000000000042517a : ret 0xfffd
0x0000000000404ff5 : ret 0xffff
0x000000000040acd7 : ret 1
0x0000000000417790 : ret 2
0x000000000040a660 : ret 6
0x00000000004095ec : ret 8
0x00000000004249fd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042151c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040be6c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004249fc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004288c4 : ror bh, 1 ; std ; call rax
0x0000000000420d54 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004015ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4015bb ; pop rbp ; ret
0x0000000000425ed7 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040c92a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042482e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041d360 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042601c : sahf ; ret 0xd284
0x0000000000428904 : sar byte ptr [rcx], -2 ; call rax
0x00000000004015ae : sar eax, 1 ; jne 0x4015b9 ; pop rbp ; ret
0x00000000004186e1 : sar ebp, -0x17 ; ret 0x2a
0x00000000004015ad : sar rax, 1 ; jne 0x4015ba ; pop rbp ; ret
0x000000000041d6a0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000408c36 : sbb bl, byte ptr [rsi] ; and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000408c35 : sbb bl, byte ptr fs:[rsi] ; and esp, dword ptr [rcx] ; ret 0xd709
0x00000000004185e1 : sbb cl, ch ; ret
0x00000000004205a3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041dde1 : sbb eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000408f2b : sbb eax, 0x81e0558b ; ret 0x33f7
0x00000000004011b1 : sbb eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041c6f0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040726f : scasb al, byte ptr [rdi] ; loopne 0x40725c ; ret 0x8589
0x0000000000408a19 : scasb al, byte ptr [rdi] ; loopne 0x408a06 ; ret 0x558b
0x00000000004015e5 : scasb al, byte ptr [rdi] ; mov word ptr [rdx], fs ; add byte ptr [rcx], al ; ret
0x00000000004175e2 : shr cl, cl ; ret 0x3b
0x000000000041541d : stc ; ret 0x77a8
0x0000000000408857 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000428896 : std ; call qword ptr [rax]
0x0000000000428dba : std ; call qword ptr [rcx]
0x0000000000428886 : std ; call rax
0x0000000000428d7a : std ; jmp qword ptr [rdi]
0x00000000004288be : std ; push qword ptr [rax - 0x2ffffffb] ; iretd ; std ; call rax
0x000000000041bfa7 : std ; ret 0x279e
0x000000000040b55f : sti ; cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x0000000000401a58 : stosd dword ptr [rdi], eax ; ret 0x8911
0x0000000000404b0e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425796 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004049f8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416b15 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000416b0b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416be5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004179a5 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000408858 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000420d5f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000427ea1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000427ea0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000416b10 : test al, -0x7f ; ret 0x2d50
0x0000000000416bea : test al, -0x7f ; ret 0xa30b
0x00000000004242d3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041cd7e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000419346 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000041fdf8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b787 : test al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427e5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004090f2 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040acd1 : test byte ptr [rcx - 0x16fffffa], ah ; ret 1
0x0000000000428db4 : test byte ptr [rcx], al ; add byte ptr [rax], al ; js 0x428d7d ; std ; call qword ptr [rcx]
0x000000000040d98c : test byte ptr [rcx], ch ; ret 0
0x000000000040d986 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000041ff06 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041c99a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004183bb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041961a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000406014 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret 0x31
0x00000000004150da : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004195cf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004175df : wait ; jge 0x4175c1 ; shr cl, cl ; ret 0x3b
0x000000000041269d : wait ; jo 0x4126ab ; ret
0x0000000000415bec : wait ; jo 0x415bfa ; ret
0x0000000000424a18 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040b08f : xchg eax, ebp ; ret
0x000000000040396b : xchg eax, ebp ; ret 0xd284
0x000000000040e225 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000414b25 : xchg eax, ebx ; ret
0x0000000000414d55 : xchg eax, ecx ; ret
0x0000000000423f99 : xchg eax, edi ; ret 0xd284
0x000000000040b0a8 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000408479 : xchg eax, edx ; ret
0x000000000041c44f : xchg eax, edx ; ret 0x8445
0x000000000041fdfe : xchg eax, edx ; ret 0xd284
0x000000000041f09a : xchg eax, esp ; jmp 0x41fb08
0x000000000041efd7 : xchg eax, esp ; jmp 0x41fb0a
0x00000000004195d4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000414ea5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041961f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041c439 : xchg eax, esp ; ret 0x8041
0x00000000004184ee : xchg eax, esp ; ret 0xb740
0x000000000041dc99 : xchg eax, esp ; ret 0xd284
0x000000000040885d : xchg eax, esp ; ret 0xe280
0x000000000041f099 : xchg eax, r12d ; jmp 0x41fb09
0x0000000000404376 : xchg eax, r8d ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428afd : xchg edi, edi ; call rax
0x00000000004184e9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040cd87 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040cd88 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004289c4 : xor byte ptr [rax - 1], cl ; jmp rax
0x0000000000428abc : xor byte ptr [rcx - 1], bh ; call rax
0x0000000000408f32 : xor edx, dword ptr [rsp - 0x7f] ; ret 0xffd0
