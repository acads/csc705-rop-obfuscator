0x0000000000450680 : adc ah, bl ; sti ; call qword ptr [rsi]
0x0000000000404b1c : adc al, 0x25 ; ret 0x6522
0x0000000000404506 : adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000042c8f0 : adc al, byte ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000426a6b : adc al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041a60b : adc al, byte ptr [rbp - 0x77] ; ret
0x000000000042c656 : adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041b7b7 : adc byte ptr [rbp - 0x76bb9e03], bh ; ret
0x000000000042c624 : adc byte ptr [rbp - 0x77], al ; ret
0x000000000042a296 : adc byte ptr [rbx + 0x2144daec], dl ; rol byte ptr [rbp + 9], cl ; ret
0x000000000042360b : adc byte ptr [rcx + rax*4 - 0xe], dl ; jmp qword ptr [rcx]
0x000000000045028c : adc byte ptr [rdi - 1], ch ; jmp qword ptr [rax]
0x0000000000427fcf : adc ch, byte ptr [rax + 0x2145d78e] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000427f9d : adc ch, byte ptr [rax - 0x76ba2872] ; ret
0x000000000043deee : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040e7ff : adc cl, byte ptr [rax - 0x7f] ; ret 0x30
0x000000000040c7c6 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004045ea : adc dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x0000000000445f8b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000428f82 : adc dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000428f50 : adc dword ptr [rbp - 0x77], eax ; ret
0x00000000004152ff : adc dword ptr [rbp - 0x77], eax ; ret 0xf741
0x000000000042cd62 : adc eax, 0x21457255 ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004041cf : adc eax, 0x51b80000 ; ret
0x000000000043e9eb : adc eax, 0x558abda1 ; ret
0x000000000042cd30 : adc eax, 0x89457255 ; ret
0x000000000041e1eb : adc eax, 0x8945cf21 ; ret 0x8141
0x0000000000441fc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004246cc : adc eax, dword ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041662c : adc ebp, dword ptr [rax - 0x29] ; ret 0x2144
0x0000000000416639 : adc ebp, dword ptr [rax - 0x29] ; ret 0x2145
0x0000000000416623 : adc ebp, dword ptr [rax - 0x29] ; ret 0x8944
0x00000000004164e7 : adc ebx, dword ptr [rsi + 0x21453fb3] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004164b5 : adc ebx, dword ptr [rsi - 0x76bac04d] ; ret
0x000000000044ffcd : adc edi, ebx ; call qword ptr [rax]
0x000000000040465e : adc qword ptr [r8], r8 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000045067b : add ah, al ; add al, byte ptr [rax] ; add byte ptr [rax], dl ; fdiv st(3), st(0) ; call qword ptr [rsi]
0x00000000004246ca : add al, -0x3a ; adc eax, dword ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000416b4c : add al, -0x7a ; cmp byte ptr [rsp + rax*2 + 1], al ; ret 0xc281
0x00000000004269fe : add al, -5 ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x000000000040c04e : add al, 0 ; add cl, ch ; ret 1
0x00000000004054fe : add al, 0x25 ; ret
0x000000000040453c : add al, 0x25 ; ret 0x6522
0x000000000044ca5a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000427923 : add al, 0x71 ; rcr byte ptr [rbp + 0x21], cl ; ret 0x941
0x00000000004501bb : add al, al ; xor edi, edi ; call rax
0x00000000004505dd : add al, byte ptr [rax] ; add byte ptr [rax - 0x2f], al ; sti ; call qword ptr [rcx]
0x000000000045067d : add al, byte ptr [rax] ; add byte ptr [rax], dl ; fdiv st(3), st(0) ; call qword ptr [rsi]
0x000000000040bf40 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x2ed273bb], cl ; ret 0xcc4d
0x000000000040f190 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d25bbb], cl ; ret
0x000000000040cfbb : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004054fa : add al, byte ptr [rax] ; add dh, al ; add al, 0x25 ; ret
0x0000000000414069 : add al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414037 : add al, byte ptr [rbp - 0x77] ; ret
0x0000000000414143 : add al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004452ee : add al, ch ; lodsb al, byte ptr [rsi] ; ret 0xfffb
0x000000000040516f : add al, ch ; ret
0x0000000000405426 : add al, ch ; ret 0xffff
0x0000000000450bf7 : add al, cl ; sub bh, bh ; call qword ptr [rbx]
0x00000000004488a5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000445c64 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004055e3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000404508 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000040567b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x00000000004054b0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000043e829 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004507c9 : add bh, dh ; jmp qword ptr [rax]
0x000000000044eeef : add bl, dh ; ret
0x000000000044ebc2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000044ee24 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040f694 : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x000000000042fc9b : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004505df : add byte ptr [rax - 0x2f], al ; sti ; call qword ptr [rcx]
0x0000000000408020 : add byte ptr [rax - 0x47], cl ; push rsp ; ret 0x69f1
0x00000000004078aa : add byte ptr [rax - 0x75], cl ; call 0xffffffffb1030202
0x0000000000442f8b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408009 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x47], 0x54 ; ret 0x69f1
0x0000000000407cf3 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000413340 : add byte ptr [rax - 0x76bb7af4], al ; ret
0x0000000000401c27 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408662 : add byte ptr [rax - 0x77], cl ; ret 0x95e8
0x0000000000408719 : add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x00000000004085e8 : add byte ptr [rax - 0x77], cl ; ret 0xfe8
0x0000000000408661 : add byte ptr [rax - 0x77], r9b ; ret 0x95e8
0x0000000000408718 : add byte ptr [rax - 0x77], r9b ; ret 0xdee8
0x00000000004085e7 : add byte ptr [rax - 0x77], r9b ; ret 0xfe8
0x000000000042fcb7 : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000045067e : add byte ptr [rax], al ; adc ah, bl ; sti ; call qword ptr [rsi]
0x000000000045028a : add byte ptr [rax], al ; adc byte ptr [rdi - 1], ch ; jmp qword ptr [rax]
0x00000000004488a3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000445c62 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000404679 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x00000000004054ae : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000044eeed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042fc99 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040801e : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; push rsp ; ret 0x69f1
0x00000000004078a8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0xffffffffb1030204
0x0000000000407cf1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000401c25 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042fcb5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000044eeeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040dfcd : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044eeec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d67e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000441a32 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409e09 : add byte ptr [rax], al ; add byte ptr [rbx + 0x42dac45], cl ; ret 0xfb4
0x000000000040baf4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x632d8c45], cl ; ret
0x000000000040b49a : add byte ptr [rax], al ; add byte ptr [rbx - 0x19d233bb], cl ; ret 0x786b
0x000000000042edcd : add byte ptr [rax], al ; add byte ptr [rbx - 0x1ed273bb], cl ; jmp 0x42eda2
0x0000000000444423 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000040bc84 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2fd273bb], cl ; ret 0xcc4d
0x000000000044732c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000446d89 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042f2c8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d273bb], cl ; ret 0x626c
0x000000000042f16a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77d273bb], cl ; ret 0x626c
0x000000000040f1db : add byte ptr [rax], al ; add byte ptr [rbx - 0x8d25bbb], cl ; ret
0x000000000040ec71 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret
0x000000000044ebc3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000044ee25 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040b674 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000044df91 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404c85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000431b82 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004082e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404801 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f683 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042f70e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000445b5a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b799 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000000000408888 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405893 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000405813 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000441fcb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000441650 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000445f8d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401d60 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000431779 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004505da : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; sar ebx, 1 ; call qword ptr [rcx]
0x000000000045034a : add byte ptr [rax], al ; and bl, 0xff ; jmp qword ptr [rax]
0x00000000004055ce : add byte ptr [rax], al ; call 0x401844
0x000000000044ffc6 : add byte ptr [rax], al ; ja 0x44ffd3 ; add byte ptr [rax], al ; mov al, 0x13 ; sti ; call qword ptr [rax]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x000000000044ffca : add byte ptr [rax], al ; mov al, 0x13 ; sti ; call qword ptr [rax]
0x000000000044ec08 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f961 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000450a72 : add byte ptr [rax], al ; mov esp, 0x28000006 ; and al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000040b8f8 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000401c26 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045057e : add byte ptr [rax], al ; nop ; mov bl, -5 ; jmp rdx
0x000000000045018a : add byte ptr [rax], al ; nop ; xor bh, bh ; call qword ptr [rax]
0x00000000004507c2 : add byte ptr [rax], al ; or al, 4 ; add byte ptr [rax], al ; pop rax ; add bh, dh ; jmp qword ptr [rax]
0x00000000004500c3 : add byte ptr [rax], al ; or bh, dh ; jmp rax
0x00000000004507c6 : add byte ptr [rax], al ; pop rax ; add bh, dh ; jmp qword ptr [rax]
0x0000000000402025 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000441a33 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004054a5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000450112 : add byte ptr [rax], al ; push rax ; sub esi, edi ; jmp qword ptr [rax]
0x000000000044eeee : add byte ptr [rax], al ; ret
0x00000000004501ba : add byte ptr [rax], al ; sal byte ptr [rbx], -1 ; call rax
0x00000000004505de : add byte ptr [rax], al ; sar ebx, 1 ; call qword ptr [rcx]
0x0000000000450a76 : add byte ptr [rax], al ; sub byte ptr [rdi + rdi*8], ah ; jmp qword ptr [rbx]
0x0000000000450a77 : add byte ptr [rax], ch ; and al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x00000000004508e7 : add byte ptr [rax], ch ; and dh, bh ; call qword ptr [rdx]
0x0000000000450bd7 : add byte ptr [rax], cl ; sub edi, edi ; call rdx
0x000000000045067f : add byte ptr [rax], dl ; fdiv st(3), st(0) ; call qword ptr [rsi]
0x000000000045017b : add byte ptr [rax], dl ; xor bh, bh ; call rax
0x000000000041a631 : add byte ptr [rbp + 9], al ; ret
0x0000000000417544 : add byte ptr [rbp + 9], al ; ret 0x945
0x000000000040d680 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000409fe6 : add byte ptr [rbx + 0x3d2dac45], cl ; sal dl, cl ; ret
0x000000000040a144 : add byte ptr [rbx + 0x3e2dac45], cl ; sal dl, cl ; ret
0x0000000000441a34 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042787b : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409e0b : add byte ptr [rbx + 0x42dac45], cl ; ret 0xfb4
0x000000000040a31f : add byte ptr [rbx + 0x52dac45], cl ; ret 0xfb4
0x00000000004054a6 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040baf6 : add byte ptr [rbx + 0x632d8c45], cl ; ret
0x000000000040c0d2 : add byte ptr [rbx + 0x642d8c45], cl ; ret
0x000000000040b49c : add byte ptr [rbx - 0x19d233bb], cl ; ret 0x786b
0x000000000042edcf : add byte ptr [rbx - 0x1ed273bb], cl ; jmp 0x42eda0
0x000000000042ed84 : add byte ptr [rbx - 0x1fd273bb], cl ; jmp 0x42ed55
0x0000000000444425 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x00000000004443da : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040bf42 : add byte ptr [rbx - 0x2ed273bb], cl ; ret 0xcc4d
0x000000000040bc86 : add byte ptr [rbx - 0x2fd273bb], cl ; ret 0xcc4d
0x000000000044732e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040541b : add byte ptr [rbx - 0x5db4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f962 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x000000000044ec09 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000446d8b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042f2ca : add byte ptr [rbx - 0x76d273bb], cl ; ret 0x626c
0x000000000042f16c : add byte ptr [rbx - 0x77d273bb], cl ; ret 0x626c
0x000000000040f1dd : add byte ptr [rbx - 0x8d25bbb], cl ; ret
0x000000000040f192 : add byte ptr [rbx - 0x9d25bbb], cl ; ret
0x000000000040ec73 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret
0x000000000040f697 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004191d0 : add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x00000000004191cf : add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x00000000004150d7 : add byte ptr [rcx - 0x7629d63a], cl ; ret 0xca29
0x00000000004150d6 : add byte ptr [rcx - 0x7629d63a], r9b ; ret 0xca29
0x000000000040e16f : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040937e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x000000000044ebc5 : add byte ptr [rcx], al ; ret 0xea81
0x000000000044ee27 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000040b676 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000450110 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; push rax ; sub esi, edi ; jmp qword ptr [rax]
0x0000000000450288 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], ch ; jmp qword ptr [rax]
0x000000000044df93 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000404c87 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000431b84 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004082e6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404803 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042f685 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042f710 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000445b5c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b79b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x000000000040888a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405895 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000044ffc7 : add byte ptr [rdi], dh ; add byte ptr [rax], al ; mov al, 0x13 ; sti ; call qword ptr [rax]
0x00000000004505db : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; sar ebx, 1 ; call qword ptr [rcx]
0x0000000000450348 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; and bl, 0xff ; jmp qword ptr [rax]
0x00000000004507c3 : add byte ptr [rsp + rax], cl ; add byte ptr [rax], al ; pop rax ; add bh, dh ; jmp qword ptr [rax]
0x000000000043e95c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042edb1 : add cl, ch ; ret
0x000000000040a478 : add cl, ch ; ret 1
0x00000000004054fc : add dh, al ; add al, 0x25 ; ret
0x000000000040453a : add dh, al ; add al, 0x25 ; ret 0x6522
0x000000000040c0cf : add dword ptr [r8], r8d ; add byte ptr [rbx + 0x642d8c45], cl ; ret
0x0000000000404b84 : add dword ptr [rax - 0x76], eax ; xor al, 0x25 ; ret
0x0000000000407eeb : add dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004055e1 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004055cc : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x401846
0x000000000040c0d0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x642d8c45], cl ; ret
0x0000000000419dcf : add dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000423369 : add dword ptr [rbp + 9], eax ; ret
0x0000000000419d9d : add dword ptr [rbp - 0x77], eax ; ret
0x000000000040c858 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e112 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040b722 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d14e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416e06 : add eax, 0x21450606 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000401804 : add eax, 0x250aae ; add ebx, esi ; ret
0x0000000000426a99 : add eax, 0x8944dc1b ; ret
0x0000000000416dd4 : add eax, 0x89450606 ; ret
0x000000000041a62f : add eax, 0x9450000 ; ret
0x00000000004487d4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a31d : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x52dac45], cl ; ret 0xfb4
0x00000000004233e2 : add eax, dword ptr [rbp - 0x77] ; ret 0xf741
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x000000000040451b : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000041d008 : add esi, dword ptr [rip + 0x2145768b] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041cfd6 : add esi, dword ptr [rip - 0x76ba8975] ; ret
0x00000000004054e5 : add esi, eax ; add al, 0x25 ; ret 0x6522
0x0000000000405816 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x000000000040e4f7 : add esp, 0x10 ; pop rbp ; ret
0x000000000040937c : add esp, 0x100 ; pop rbp ; ret
0x0000000000445e3c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000043152d : add esp, 0x20 ; pop rbp ; ret
0x000000000043091f : add esp, 0x230 ; pop rbp ; ret
0x000000000042fa47 : add esp, 0x250 ; pop rbp ; ret
0x000000000040aeb6 : add esp, 0x2a0 ; pop rbp ; ret
0x0000000000445f90 : add esp, 0x40 ; pop rbp ; ret
0x000000000044cc59 : add esp, 0x440 ; pop rbp ; ret
0x000000000040e280 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000401d63 : add esp, 0x50 ; pop rbp ; ret
0x0000000000408977 : add esp, 0x5f0 ; pop rbp ; ret
0x0000000000446eb0 : add esp, 0x60 ; pop rbp ; ret
0x00000000004054a1 : add esp, 0x618 ; pop rbx ; pop rbp ; ret
0x000000000043177c : add esp, 0x70 ; pop rbp ; ret
0x0000000000402021 : add esp, 0x80 ; pop rbp ; ret
0x000000000044660d : add esp, 0x90 ; pop rbp ; ret
0x0000000000444126 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000441f2b : add esp, 0xb0 ; pop rbp ; ret
0x000000000040995a : add esp, 0xc0 ; pop rbp ; ret
0x0000000000430a0b : add esp, 0xd0 ; pop rbp ; ret
0x000000000044757e : add esp, 0xe0 ; pop rbp ; ret
0x0000000000431d4e : add esp, 0xf0 ; pop rbp ; ret
0x000000000040d57c : add esp, 0xf8 ; pop rbp ; ret
0x00000000004328e3 : add esp, 8 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000405815 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040e4f6 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040937b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000445e3b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000043152c : add rsp, 0x20 ; pop rbp ; ret
0x000000000043091e : add rsp, 0x230 ; pop rbp ; ret
0x000000000042fa46 : add rsp, 0x250 ; pop rbp ; ret
0x000000000040aeb5 : add rsp, 0x2a0 ; pop rbp ; ret
0x0000000000445f8f : add rsp, 0x40 ; pop rbp ; ret
0x000000000044cc58 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040e27f : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000401d62 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408976 : add rsp, 0x5f0 ; pop rbp ; ret
0x0000000000446eaf : add rsp, 0x60 ; pop rbp ; ret
0x00000000004054a0 : add rsp, 0x618 ; pop rbx ; pop rbp ; ret
0x000000000043177b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402020 : add rsp, 0x80 ; pop rbp ; ret
0x000000000044660c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000444125 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000441f2a : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000409959 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000430a0a : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044757d : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000431d4d : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d57b : add rsp, 0xf8 ; pop rbp ; ret
0x00000000004328e2 : add rsp, 8 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x000000000040453f : and ah, byte ptr [rbp] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x0000000000404537 : and ah, byte ptr [rbp] ; add dh, al ; add al, 0x25 ; ret 0x6522
0x0000000000404610 : and ah, byte ptr [rbp] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x00000000004054e2 : and ah, byte ptr [rbp] ; add esi, eax ; add al, 0x25 ; ret 0x6522
0x00000000004017a4 : and ah, byte ptr [rbp] ; jmp rax
0x00000000004017e4 : and ah, byte ptr [rbp] ; jmp rdx
0x000000000044538a : and al, 0x10 ; mov al, 0 ; call 0x4015a6
0x000000000044ebcd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000044525a : and al, 0xffffffffffffffb0 ; add al, ch ; ret
0x0000000000450a79 : and al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000040b721 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d14d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004505dc : and al, 2 ; add byte ptr [rax], al ; sar ebx, 1 ; call qword ptr [rcx]
0x00000000004452eb : and al, 8 ; mov al, 0 ; call 0x4015a6
0x00000000004198af : and al, byte ptr [rcx] ; ret 0xea81
0x000000000045034c : and bl, 0xff ; jmp qword ptr [rax]
0x0000000000419804 : and bl, byte ptr [r13 + r8*2 + 0x944d821] ; ret
0x0000000000419805 : and bl, byte ptr [rbp + rax*2 + 0x944d821] ; ret
0x0000000000416f66 : and bl, byte ptr [rdi - 0x7e3dfebc] ; ret 0xc3f3
0x0000000000419803 : and bl, byte ptr cs:[r13 + r8*2 + 0x944d821] ; ret
0x00000000004293ed : and byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004293bb : and byte ptr [rbp - 0x77], al ; ret
0x000000000041f6cb : and byte ptr [rbp - 0x77], al ; ret 0xf741
0x0000000000413d5a : and byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000446abb : and byte ptr [rsi + 0x58], ah ; jb 0x446af2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004508e9 : and dh, bh ; call qword ptr [rdx]
0x000000000041e1e9 : and dl, ah ; adc eax, 0x8945cf21 ; ret 0x8141
0x000000000041e1e8 : and dl, spl ; adc eax, 0x8945cf21 ; ret 0x8141
0x000000000042993e : and eax, 0x21442f49 ; ret
0x000000000041797e : and eax, 0x21455bc9 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000404535 : and eax, 0x6522c1 ; add dh, al ; add al, 0x25 ; ret 0x6522
0x00000000004054e0 : and eax, 0x6522c1 ; add esi, eax ; add al, 0x25 ; ret 0x6522
0x000000000043db91 : and eax, 0x75b4b9d3 ; ret
0x000000000041794c : and eax, 0x89455bc9 ; ret
0x0000000000414e64 : and eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414e32 : and eax, dword ptr [rbp - 0x77] ; ret
0x0000000000417a3f : and eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000450105 : and edi, esi ; jmp rax
0x0000000000445210 : call 0x4014a2
0x00000000004452ef : call 0x4015a2
0x00000000004052e3 : call 0x4015d2
0x0000000000405427 : call 0x401692
0x000000000040547a : call 0x4016f2
0x00000000004055d0 : call 0x401842
0x0000000000446eb5 : call 0x446f79
0x000000000042a25b : call 0xffffffff820d41fa
0x0000000000448bfd : call 0xffffffffaca54e31
0x0000000000448bfc : call 0xffffffffaca54e32
0x00000000004078ae : call 0xffffffffb10301fe
0x00000000004078ad : call 0xffffffffb10301ff
0x0000000000425f5f : call 0xffffffffc24ba4be
0x00000000004145fc : call 0xffffffffc3ca8b41
0x0000000000441649 : call 0xffffffffe9069f99
0x0000000000441648 : call 0xffffffffe9069f9a
0x000000000044eec9 : call qword ptr [r12 + rbx*8]
0x00000000004055e9 : call qword ptr [rax]
0x00000000004043ae : call qword ptr [rbx]
0x000000000044ccfc : call qword ptr [rcx]
0x0000000000408a85 : call qword ptr [rdi]
0x0000000000417815 : call qword ptr [rdx]
0x0000000000450683 : call qword ptr [rsi]
0x000000000044eeca : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000043096c : call rbx
0x000000000043ed3b : call rcx
0x0000000000440714 : call rdi
0x00000000004281b0 : call rdx
0x000000000041c3e0 : call rsi
0x000000000040450e : call rsp
0x0000000000427140 : cdq ; cmp dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042710e : cdq ; cmp dword ptr [rbp - 0x77], eax ; ret
0x00000000004211be : cdq ; cwde ; rol byte ptr [rbp + 0x21], 1 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042118c : cdq ; cwde ; rol byte ptr [rbp - 0x77], 1 ; ret
0x000000000044cc57 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000446217 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004495e9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d57a : clc ; add rsp, 0xf8 ; pop rbp ; ret
0x0000000000418956 : clc ; inc dword ptr [rcx - 0x73b700f] ; jmp qword ptr [rcx]
0x0000000000425c26 : clc ; jmp 0xffffffff820c5d91
0x000000000041895c : clc ; jmp qword ptr [rcx]
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x000000000040e29e : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000405827 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000442f8f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040582b : clc ; pop rbp ; ret
0x000000000042b73e : clc ; ret
0x000000000043411d : clc ; ret 0x77a8
0x000000000044923e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044a05d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d6af : cld ; jmp 0x40d71c
0x000000000040d6ae : cld ; jmp 0x40d71d
0x000000000040f965 : cld ; mov rsp, rbp ; pop rbp ; ret
0x00000000004191ce : cli ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x00000000004150d5 : cli ; add byte ptr [rcx - 0x7629d63a], r9b ; ret 0xca29
0x0000000000446ac0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042edae : cli ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000044ebcc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004459db : cmc ; ret 0x4f0b
0x000000000042bf7a : cmovne esp, dword ptr [rcx] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000413c48 : cmp al, 0x52 ; mov al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000413c16 : cmp al, 0x52 ; mov al, byte ptr [rbp - 0x77] ; ret
0x000000000041656d : cmp byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004259ef : cmp byte ptr [rbp + rcx*4 - 0x7e0dfe9e], dl ; ret 0x9438
0x000000000041653b : cmp byte ptr [rbp - 0x77], al ; ret
0x000000000041f03e : cmp byte ptr [rdi + 0x45cf21eb], -0x77 ; ret 0x8141
0x000000000041a8f7 : cmp byte ptr [rsi + 0x44], -0x77 ; ret
0x0000000000416b4e : cmp byte ptr [rsp + rax*2 + 1], al ; ret 0xc281
0x00000000004179fc : cmp cl, 0x62 ; ret 0x2141
0x00000000004179e6 : cmp cl, 0x62 ; ret 0x8945
0x00000000004179f0 : cmp cl, 0x62 ; ret 0xde21
0x0000000000445b71 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000425683 : cmp dh, byte ptr [rdi - 0x7e35fe19] ; ret 0x3a3c
0x00000000004081fd : cmp dl, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041b332 : cmp dl, 0x44 ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000427141 : cmp dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042710f : cmp dword ptr [rbp - 0x77], eax ; ret
0x0000000000423c87 : cmp dword ptr [rcx + 0x5ff781cf], ecx ; ret 0x4139
0x0000000000420f58 : cmp eax, 0x1f6c909 ; ret 0xea81
0x0000000000421fc8 : cmp eax, 0x2145bb57 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000421f96 : cmp eax, 0x8945bb57 ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x000000000042442d : cmp eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004243fb : cmp eax, dword ptr [rbp - 0x77] ; ret
0x000000000041dcf5 : cmp ebp, dword ptr [rax + 0x2145fe86] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041dcc3 : cmp ebp, dword ptr [rax - 0x76ba017a] ; ret
0x0000000000423366 : cmp ecx, dword ptr [rbx + 0x9450180] ; ret
0x000000000042bf78 : cmp esi, esp ; cmovne esp, dword ptr [rcx] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000043e9e7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004116c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or bl, byte ptr [rcx] ; ret 0x8589
0x000000000041c526 : cmpsb byte ptr [rsi], byte ptr [rdi] ; test al, 0x15 ; ret 0x8141
0x000000000041c537 : cmpsb byte ptr [rsi], byte ptr [rdi] ; test al, 0x15 ; ret 0xe381
0x000000000040451a : cmpsd dword ptr [rsi], dword ptr [rdi] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000041671a : cmpsd dword ptr [rsi], dword ptr [rdi] ; jbe 0x416774 ; pop qword ptr [rcx] ; ret 0xea81
0x00000000004253da : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebp, 0x144cbf1 ; ret 0xea81
0x0000000000413276 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or bl, byte ptr [rcx] ; ret 0x558a
0x0000000000411e36 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or bl, byte ptr [rcx] ; ret 0x8589
0x0000000000445004 : cwde ; ret
0x00000000004211c0 : cwde ; rol byte ptr [rbp + 0x21], 1 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042118e : cwde ; rol byte ptr [rbp - 0x77], 1 ; ret
0x000000000042fb2b : dec dword ptr [rax + 0x21] ; ret 0x8b48
0x000000000043deeb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000043d85e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000043e063 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000446bed : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000407fb0 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042f802 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000408173 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x0000000000408604 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000405421 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004051b6 : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000041c7ee : dec dword ptr [rbp + 0x5f] ; ret
0x000000000041dd73 : dec dword ptr [rcx + 0x1cf381cb] ; ret
0x000000000042d8dc : dec dword ptr [rcx + 0xdf381cb] ; lahf ; ret 0x45e9
0x0000000000425c1f : dec dword ptr [rcx - 0x157e77b3] ; ret
0x00000000004136df : dec dword ptr [rcx - 0x7629d63a] ; ret 0xca29
0x00000000004459d6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000042edab : dec dword ptr [rdi] ; test bh, dl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040f29a : dec dword ptr [rdi] ; test byte ptr [rbp + rax], al ; add cl, ch ; ret 1
0x00000000004120fb : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; ret
0x0000000000433dfa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040c04a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffffc], bh ; ret 1
0x000000000040cfb7 : dec dword ptr [rdi] ; test ch, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040a472 : dec dword ptr [rdi] ; test dh, bl ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004485ce : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000044c5e3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000422aca : div esp ; ret 0x6ab4
0x0000000000416f61 : enter -0x157f, -0xd ; ret
0x000000000042847a : enter -0x7ebf, -0x10 ; outsd dx, dword ptr [rsi] ; jns 0x4284d9 ; ret
0x0000000000431bac : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044c239 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d3a6 : enter 0x44dd, -0x77 ; ret
0x000000000041eaba : enter 0x45f7, -0x77 ; ret
0x000000000041eaec : enter 0x45f7, 0x21 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000428487 : enter 0x796f, 0x51 ; ret
0x00000000004085b8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041dd88 : fadd dword ptr [rbp - 0x77] ; fild word ptr [rcx - 0x7f] ; out 0x1c, eax ; ret
0x000000000042d8f1 : fadd dword ptr [rbp - 0x77] ; fild word ptr [rcx - 0x7f] ; out 0xd, eax ; lahf ; ret 0x41e9
0x000000000041aebf : fadd qword ptr [rcx + 0x945755b] ; ret 0x945
0x00000000004485b0 : fbld dword ptr [rcx] ; ret 0x941
0x00000000004293ea : fcompi st(0) ; pop rcx ; and byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004293b8 : fcompi st(0) ; pop rcx ; and byte ptr [rbp - 0x77], al ; ret
0x0000000000450681 : fdiv st(3), st(0) ; call qword ptr [rsi]
0x0000000000422d82 : fdivr st(2) ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x000000000041f7e5 : fiadd dword ptr [rbp + 0x21] ; ret 0xf741
0x00000000004183dc : fiadd dword ptr [rbp + 0x29] ; ret 0x2944
0x0000000000424328 : fiadd dword ptr [rbp + 0x29] ; ret 0xf741
0x00000000004233dc : fiadd dword ptr [rbp + 0x31] ; rol cl, 1 ; out dx, eax ; add eax, dword ptr [rbp - 0x77] ; ret 0xf741
0x00000000004183d9 : fiadd dword ptr [rcx - 9] ; fiadd dword ptr [rbp + 0x29] ; ret 0x2944
0x0000000000424325 : fiadd dword ptr [rcx - 9] ; fiadd dword ptr [rbp + 0x29] ; ret 0xf741
0x0000000000425bac : fiadd word ptr [rbp + 9] ; ret 0x3144
0x0000000000415972 : fiadd word ptr [rcx + 9] ; fild word ptr [rbp + 0x31] ; inc byte ptr [rbp - 0x77] ; ret
0x0000000000423278 : fiadd word ptr [rcx - 9] ; rol byte ptr [rbp + 0x21], 1 ; ret
0x000000000041335a : fild dword ptr [rbp + 9] ; ret 0xf741
0x0000000000418f34 : fild dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000418529 : fild word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415975 : fild word ptr [rbp + 0x31] ; inc byte ptr [rbp - 0x77] ; ret
0x00000000004184f7 : fild word ptr [rbp - 0x77] ; ret
0x000000000041f6c5 : fild word ptr [rcx + 0x48f1a0e7] ; and byte ptr [rbp - 0x77], al ; ret 0xf741
0x000000000044858f : fild word ptr [rcx - 0x77] ; ret
0x0000000000428484 : fild word ptr [rcx - 0x7f] ; enter 0x796f, 0x51 ; ret
0x000000000041dd8b : fild word ptr [rcx - 0x7f] ; out 0x1c, eax ; ret
0x000000000042d8f4 : fild word ptr [rcx - 0x7f] ; out 0xd, eax ; lahf ; ret 0x41e9
0x00000000004041ce : fist word ptr [rip + 0x51b80000] ; ret
0x000000000042997d : fisub word ptr [rax - 0x76ba30df] ; ret 0x8141
0x000000000040e9cc : fld dword ptr [rbp + 9] ; ret 0x3145
0x00000000004147af : fld dword ptr [rbp + 9] ; ret 0x944
0x00000000004132af : fld qword ptr [rcx - 0xd343] ; call qword ptr [rax]
0x000000000044d188 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000415bc2 : fldcw word ptr [rbp + 0xe] ; add al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415b90 : fldcw word ptr [rbp + 0xe] ; add al, byte ptr [rbp - 0x77] ; ret
0x0000000000447017 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000447018 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000424fd5 : fmul dword ptr [rdi + 0x4a] ; ret
0x000000000040b0b7 : fmul qword ptr [r9 - 0x1a167e3f] ; ret 0x786b
0x000000000044eecc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040b0b8 : fmul qword ptr [rcx - 0x1a167e3f] ; ret 0x786b
0x000000000041656a : fnsave dword ptr [rip + 0x2145389e] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416538 : fnsave dword ptr [rip - 0x76bac762] ; ret
0x0000000000428b8d : fnstsw dword ptr [rbx - 0x76bbac86] ; ret
0x0000000000417b16 : fsub dword ptr [rsi] ; mov byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000417ae4 : fsub dword ptr [rsi] ; mov byte ptr [rbp - 0x77], al ; ret
0x0000000000445ec3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043091d : hlt ; add rsp, 0x230 ; pop rbp ; ret
0x000000000044757c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004328e1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x000000000042bf79 : hlt ; cmovne esp, dword ptr [rcx] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040e2a1 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x652280 ; jmp rax
0x0000000000421b92 : hlt ; ret
0x0000000000422ac3 : hlt ; ret 0x6ab4
0x0000000000428f80 : idiv ecx ; adc dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000428f4e : idiv ecx ; adc dword ptr [rbp - 0x77], eax ; ret
0x0000000000446beb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040c919 : imul eax, dword ptr [rax + rcx*2], -0x77 ; ret 0x2948
0x00000000004081ba : imul edi, dword ptr [rcx - 0xd51b5b0], -0x76 ; adc al, 0x25 ; ret 0x6522
0x0000000000423d7b : imul edi, dword ptr [rcx], 0x81ca0144 ; ret 0x17b8
0x0000000000423d89 : in al, -6 ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x00000000004315a8 : in al, 0x2d ; ret 0xc226
0x00000000004499a1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000040e35c : in al, 7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040e11c : in al, 8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000424750 : in al, dx ; cli ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x000000000042bf77 : in al, dx ; cmp esi, esp ; cmovne esp, dword ptr [rcx] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000448cbc : in al, dx ; jmp 0x448d39
0x0000000000448cbb : in al, dx ; jmp 0x448d3a
0x0000000000401c2a : in al, dx ; pop rbp ; ret
0x000000000041dcf8 : inc byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415978 : inc byte ptr [rbp - 0x77] ; ret
0x00000000004308a1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004306e5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e16d : inc dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000450287 : inc dword ptr [rax] ; sldt word ptr [rax] ; adc byte ptr [rdi - 1], ch ; jmp qword ptr [rax]
0x000000000041a1ae : inc dword ptr [rbp + 0x21] ; ret
0x0000000000413b10 : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000407f38 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000417a15 : inc dword ptr [rcx + 0x62f980cb] ; ret 0x2141
0x00000000004041a6 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040fb88 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8041
0x000000000042e3d9 : inc dword ptr [rcx - 0x1144e13e] ; lea eax, dword ptr [rcx] ; ret 0xea81
0x00000000004198a9 : inc dword ptr [rcx - 0x1149493e] ; and al, byte ptr [rcx] ; ret 0xea81
0x0000000000418957 : inc dword ptr [rcx - 0x73b700f] ; jmp qword ptr [rcx]
0x000000000040e8c5 : inc dword ptr [rcx - 0x77] ; ret
0x000000000040e92d : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000041e370 : inc dword ptr [rcx - 0x7f] ; leave ; ret
0x000000000042757d : inc dword ptr [rcx - 0x7f] ; loop 0x42759f ; insd dword ptr [rdi], dx ; xchg eax, edx ; ret
0x0000000000429287 : inc dword ptr [rcx - 0x7f] ; loop 0x429256 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000423c9c : inc dword ptr [rcx - 0x7f] ; loope 0x423d06 ; ret 0x4139
0x0000000000422ada : inc dword ptr [rcx - 0x7f] ; loopne 0x422ad8 ; ret 0x6ab4
0x000000000042755f : inc dword ptr [rcx - 0x7f] ; loopne 0x427581 ; insd dword ptr [rdi], dx ; xchg eax, edx ; ret
0x00000000004289eb : inc dword ptr [rcx - 0x7f] ; retf ; call rax
0x0000000000429757 : insb byte ptr [rdi], dx ; cli ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000425f5e : insd dword ptr [rdi], dx ; call 0xffffffffc24ba4bf
0x00000000004085e5 : insd dword ptr [rdi], dx ; test byte ptr [rax + rax + 0x48], -0x77 ; ret 0xfe8
0x0000000000427564 : insd dword ptr [rdi], dx ; xchg eax, edx ; ret
0x000000000041cc32 : int 0x3e
0x000000000042c098 : int 0x4c
0x0000000000443af7 : int 0x5b
0x00000000004450cf : int 0xc3
0x000000000041f6c9 : int1 ; and byte ptr [rbp - 0x77], al ; ret 0xf741
0x000000000041e1e7 : int1 ; and dl, spl ; adc eax, 0x8945cf21 ; ret 0x8141
0x000000000042b73d : int1 ; clc ; ret
0x0000000000418959 : int1 ; pop rsp ; clc ; jmp qword ptr [rcx]
0x000000000041e342 : int1 ; ret
0x00000000004150a8 : int1 ; ret 0x3efd
0x000000000042505f : int1 ; ret 0x61c
0x00000000004284d2 : int1 ; sbb eax, 0x144db96 ; ret 0xc281
0x0000000000404b17 : int1 ; xchg eax, edx ; or eax, 0x25148ad8 ; ret 0x6522
0x000000000042885a : iretd ; sbb al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x000000000044ffc8 : ja 0x44ffd1 ; add byte ptr [rax], al ; mov al, 0x13 ; sti ; call qword ptr [rax]
0x000000000044faa1 : jae 0x44fab6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000446abe : jb 0x446aef ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041671b : jbe 0x416773 ; pop qword ptr [rcx] ; ret 0xea81
0x0000000000417ae3 : jbe 0x417ac3 ; mov byte ptr es:[rbp - 0x77], al ; ret
0x0000000000417ae2 : jbe 0x417ac4 ; mov byte ptr es:[rbp - 0x77], al ; ret
0x0000000000417b15 : jbe 0x417af8 ; mov byte ptr es:[rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000044faa7 : jbe 0x44fada ; leave ; ret 0x8581
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x652280 ; jmp rax
0x0000000000429e3d : je 0x429e42 ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000417a3d : jg 0x417aa6 ; and eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004189ea : jg 0x6098b6c ; ret 0x8f0f
0x0000000000405826 : jge 0x405827 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e29d : jge 0x40e29f ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000042f680 : jge 0x42f64a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042f70b : jge 0x42f6d5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000043cf86 : jge 0x43cf0b ; ret 0xffd5
0x000000000043da50 : jge 0x43da30 ; shr cl, cl ; ret 0x3b
0x000000000042a46a : jl 0x42a46f ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x000000000044fa1f : jmp 0x399bbc81
0x000000000040151b : jmp 0x401377
0x00000000004041cd : jmp 0x4057b8
0x00000000004054f8 : jmp 0x4057b9
0x0000000000407cb2 : jmp 0x407c5d
0x0000000000407872 : jmp 0x408c74
0x0000000000408080 : jmp 0x408c76
0x000000000040d6b0 : jmp 0x40d71b
0x0000000000427eac : jmp 0x427e38
0x0000000000426091 : jmp 0x42ea6d
0x000000000042ed8a : jmp 0x42ed4f
0x000000000042edd5 : jmp 0x42ed9a
0x000000000042f8bf : jmp 0x42f884
0x000000000043e1a0 : jmp 0x441620
0x000000000043c0a4 : jmp 0x441621
0x000000000043d471 : jmp 0x441622
0x0000000000444dfb : jmp 0x445867
0x0000000000444d38 : jmp 0x445869
0x0000000000446e63 : jmp 0x446ec8
0x0000000000448cbd : jmp 0x448d38
0x000000000044caf6 : jmp 0x44cdd8
0x00000000004459da : jmp 0x4f501cd6
0x000000000040b0bc : jmp 0x78ac73a8
0x0000000000425c27 : jmp 0xffffffff820c5d90
0x0000000000431564 : jmp 0xffffffffb6053c2d
0x000000000041751b : jmp 0xffffffffc2caba2f
0x000000000041be64 : jmp 0xffffffffc2cb037e
0x0000000000425e79 : jmp 0xffffffffc2cba39b
0x000000000044837f : jmp 0xffffffffc408ba46
0x0000000000408037 : jmp qword ptr [rax]
0x0000000000450a7b : jmp qword ptr [rbx]
0x0000000000404dc4 : jmp qword ptr [rcx]
0x000000000043ec27 : jmp qword ptr [rdi]
0x0000000000445c6a : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000408b50 : jmp rbx
0x000000000043dfaa : jmp rcx
0x0000000000405681 : jmp rdi
0x00000000004017e7 : jmp rdx
0x000000000041dbbe : jmp rsi
0x00000000004054b6 : jmp rsp
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x000000000040e2a0 : jne 0x40e29b ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004243f9 : jno 0x4243ac ; cmp eax, dword ptr [rbp - 0x77] ; ret
0x000000000042442b : jno 0x4243e1 ; cmp eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041c777 : jnp 0x41c7a1 ; xchg eax, esp ; or eax, dword ptr [rbp + 9] ; fld dword ptr [rbp + 9] ; ret 0x3145
0x000000000042847f : jns 0x4284d4 ; ret
0x0000000000428489 : jns 0x4284de ; ret
0x000000000043177e : jo 0x4317df ; ret
0x0000000000436e9e : jo 0x436eaa ; ret
0x0000000000438b0e : jo 0x438b1a ; ret
0x000000000043c05d : jo 0x43c069 ; ret
0x0000000000443344 : jo 0x4433a5 ; ret
0x000000000044fab8 : jo 0x44fa48 ; ret 0x51a3
0x000000000042c622 : jp 0x42c67f ; adc byte ptr [rbp - 0x77], al ; ret
0x000000000042c654 : jp 0x42c6b4 ; adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041e34c : jrcxz 0x41e37e ; ret
0x000000000041e358 : jrcxz 0x41e38a ; ret
0x000000000041f9a2 : jrcxz 0x41f9fc ; or al, byte ptr [rbp - 0x77] ; ret
0x000000000041f9d4 : jrcxz 0x41fa31 ; or al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000421ba7 : jrcxz 0x421b81 ; hlt ; ret
0x0000000000422a04 : jrcxz 0x422a51 ; ret
0x0000000000422a10 : jrcxz 0x422a5d ; ret
0x00000000004241a5 : jrcxz 0x4241c8 ; mov ecx, 0x94432cb ; ret
0x0000000000424e5e : jrcxz 0x424eca ; ret 0xb841
0x0000000000424e6a : jrcxz 0x424ed6 ; ret 0xb841
0x0000000000427f23 : jrcxz 0x427f45 ; ret
0x0000000000427f2f : jrcxz 0x427f51 ; ret
0x000000000042b3ac : jrcxz 0x42b419 ; push rsp ; ret 0x44b3
0x000000000042b3b8 : jrcxz 0x42b425 ; push rsp ; ret 0x44b3
0x000000000042b747 : jrcxz 0x42b743 ; ret
0x000000000042b752 : jrcxz 0x42b74e ; ret
0x000000000042c97b : jrcxz 0x42c9a5 ; ret 0x36fd
0x000000000042c987 : jrcxz 0x42c9b1 ; ret 0x36fd
0x000000000045034d : jrcxz 0x450350 ; jmp qword ptr [rax]
0x0000000000413271 : js 0x413261 ; xor ah, byte ptr [rdi + 0x190aa7b9] ; ret 0x558a
0x000000000042d8ec : lahf ; ret 0x41e9
0x000000000042d8e2 : lahf ; ret 0x45e9
0x000000000043da4e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000043eb4e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040deb6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042e3df : lea eax, dword ptr [rcx] ; ret 0xea81
0x000000000041858c : lea eax, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x000000000041361d : lea eax, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000427ec5 : lea ebx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000413867 : lea ebx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000416928 : lea ecx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000413e9b : lea ecx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000042ccda : lea edx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x000000000041477b : lea edx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000430b91 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ec20 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b90 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042b76e : leave ; clc ; ret
0x000000000041e373 : leave ; ret
0x000000000044faa9 : leave ; ret 0x8581
0x000000000042ea60 : ljmp ptr [rdi + 0x13] ; ret
0x000000000043c3ae : ljmp ptr [rdi] ; ret 0x23da
0x000000000042442c : lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004243fa : lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rbp - 0x77] ; ret
0x000000000042dc04 : lodsb al, byte ptr [rsi] ; popfq ; xlatb ; sub dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042dbd2 : lodsb al, byte ptr [rsi] ; popfq ; xlatb ; sub dword ptr [rbp - 0x77], eax ; ret
0x0000000000429270 : lodsb al, byte ptr [rsi] ; ret
0x0000000000419966 : lodsb al, byte ptr [rsi] ; ret 0x53f2
0x00000000004452f0 : lodsb al, byte ptr [rsi] ; ret 0xfffb
0x0000000000419972 : loop 0x419922 ; ret 0x53f2
0x000000000041a62d : loop 0x41a5f5 ; add eax, 0x9450000 ; ret
0x000000000041c536 : loop 0x41c4e2 ; test al, 0x15 ; ret 0xe381
0x000000000041f7cf : loop 0x41f81c ; add eax, 0x9450000 ; ret
0x0000000000422ac2 : loop 0x422aba ; ret 0x6ab4
0x0000000000427580 : loop 0x42759c ; insd dword ptr [rdi], dx ; xchg eax, edx ; ret
0x000000000042928a : loop 0x429253 ; lodsb al, byte ptr [rsi] ; ret
0x000000000042def2 : loop 0x42df40 ; ret
0x000000000040c857 : loope 0x40c863 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000417540 : loope 0x417540 ; sub eax, dword ptr [rdx] ; add byte ptr [rbp + 9], al ; ret 0x945
0x0000000000418cda : loope 0x418d44 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x818e
0x0000000000419965 : loope 0x419915 ; ret 0x53f2
0x0000000000421b90 : loope 0x421b6a ; hlt ; ret
0x0000000000423c9f : loope 0x423d03 ; ret 0x4139
0x0000000000425f5c : loope 0x425eff ; insd dword ptr [rdi], dx ; call 0xffffffffc24ba4c1
0x000000000042c1e5 : loope 0x42c1ac ; or eax, 0x21448541 ; ret
0x000000000042edd4 : loope 0x42edc3 ; ret 0x89dd
0x000000000042f8be : loope 0x42f8ad ; ret 0xb9dd
0x000000000042fc5f : loope 0x42fc4e ; ret 0xe9dd
0x000000000043f3b5 : loope 0x43f383 ; jmp 0x441623
0x0000000000418cc6 : loopne 0x418d30 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x418e
0x0000000000422add : loopne 0x422ad5 ; ret 0x6ab4
0x00000000004237f3 : loopne 0x4237f8 ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000425059 : loopne 0x425024 ; sbb al, 6 ; mov bh, -0x7f ; int1 ; ret 0x61c
0x0000000000427562 : loopne 0x42757e ; insd dword ptr [rdi], dx ; xchg eax, edx ; ret
0x000000000042ed89 : loopne 0x42ed78 ; ret 0x89dd
0x000000000043152b : loopne 0x43157b ; add esp, 0x20 ; pop rbp ; ret
0x000000000043152a : loopne 0x43157c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000433793 : loopne 0x4337e6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000442d3d : loopne 0x442da3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000444124 : loopne 0x444177 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000446523 : loopne 0x44652c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000446eae : loopne 0x446efe ; add esp, 0x60 ; pop rbp ; ret
0x0000000000446ead : loopne 0x446eff ; add esp, 0x60 ; pop rbp ; ret
0x0000000000447580 : loopne 0x447587 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000449242 : loopne 0x449249 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044ec0c : loopne 0x44ec5b ; mov esp, ebp ; pop rbp ; ret
0x000000000044ec0b : loopne 0x44ec5c ; mov esp, ebp ; pop rbp ; ret
0x000000000044ee5c : loopne 0x44eeab ; mov esp, ebp ; pop rbp ; ret
0x000000000044ee5b : loopne 0x44eeac ; mov esp, ebp ; pop rbp ; ret
0x0000000000414067 : mov ah, -0x4a ; add al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414035 : mov ah, -0x4a ; add al, byte ptr [rbp - 0x77] ; ret
0x000000000043cf7d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043d057 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040fbc3 : mov ah, 0x23 ; ret 0x8cc2
0x000000000040aef4 : mov ah, 0x3e ; sal dl, cl ; ret
0x000000000043b005 : mov ah, 0x75 ; ret
0x0000000000443b13 : mov al, -0x47 ; ret
0x000000000044c2bf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000441f2d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004452ed : mov al, 0 ; call 0x4015a4
0x0000000000405425 : mov al, 0 ; call 0x401694
0x000000000044ffcc : mov al, 0x13 ; sti ; call qword ptr [rax]
0x0000000000417b4b : mov al, 0x30 ; ret 0x44db
0x0000000000417b7d : mov al, 0x30 ; ret 0x45db
0x00000000004501b8 : mov al, 0xb ; add byte ptr [rax], al ; sal byte ptr [rbx], -1 ; call rax
0x0000000000413c4a : mov al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000044d47d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044d14a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413c18 : mov al, byte ptr [rbp - 0x77] ; ret
0x000000000044d3ad : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042505d : mov bh, -0x7f ; int1 ; ret 0x61c
0x00000000004102fa : mov bh, 0x6e ; ret 0x897e
0x0000000000450581 : mov bl, -5 ; jmp rdx
0x00000000004349a5 : mov bl, 0x75 ; ret
0x0000000000415e74 : mov byte ptr [r9 - 0x7629d63a], r9b ; ret 0xca29
0x000000000042e7a6 : mov byte ptr [rbp + 0x21], al ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000417b18 : mov byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000417ae6 : mov byte ptr [rbp - 0x77], al ; ret
0x0000000000415e75 : mov byte ptr [rcx - 0x7629d63a], cl ; ret 0xca29
0x0000000000424fdb : mov byte ptr [rcx - 0x7f], -0x1a ; fmul dword ptr [rdi + 0x4a] ; ret
0x0000000000401803 : mov byte ptr [rip + 0x250aae], 1 ; ret
0x0000000000417b17 : mov byte ptr es:[rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000417ae5 : mov byte ptr es:[rbp - 0x77], al ; ret
0x000000000044fa1e : mov ch, -0x17 ; pop rbx ; ret 0x3956
0x000000000043c7ff : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041b103 : mov cl, 0x23 ; or eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041b0d1 : mov cl, 0x23 ; or eax, dword ptr [rbp - 0x77] ; ret
0x00000000004198ad : mov dh, -0x12 ; and al, byte ptr [rcx] ; ret 0xea81
0x000000000040c85a : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e114 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040b724 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d150 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004198ac : mov dh, -0x4a ; out dx, al ; and al, byte ptr [rcx] ; ret 0xea81
0x000000000041a8f5 : mov dh, 0x77 ; cmp byte ptr [rsi + 0x44], -0x77 ; ret
0x0000000000404b80 : mov dh, 5 ; mov esi, 0x8a4001b2 ; xor al, 0x25 ; ret
0x0000000000418526 : mov dh, byte ptr [rsi + rdx*8] ; fild word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004184f4 : mov dh, byte ptr [rsi + rdx*8] ; fild word ptr [rbp - 0x77] ; ret
0x000000000044ebca : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000422118 : mov dl, -0x38 ; test byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004220e6 : mov dl, -0x38 ; test byte ptr [rbp - 0x77], al ; ret
0x000000000044de41 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000432f19 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000432aef : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427f4f : mov dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000448cba : mov dword ptr [rbp - 0x14], eax ; jmp 0x448d3b
0x0000000000431529 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044520a : mov dword ptr [rbp - 0x290], eax ; call 0x4014a8
0x0000000000445281 : mov dword ptr [rbp - 0x2a8], eax ; call 0x4014a8
0x00000000004052dd : mov dword ptr [rbp - 0x5d4], ecx ; call 0x4015d8
0x0000000000405474 : mov dword ptr [rbp - 0x5e4], ecx ; call 0x4016f8
0x0000000000444df8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x44586a
0x0000000000427f1d : mov dword ptr [rbp - 0x77], eax ; ret
0x0000000000445ec1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405825 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004331f6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040dfca : mov dword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x000000000040e2a2 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000417a79 : mov dword ptr [rsi + 0x44], 0x945d221 ; ret
0x0000000000432d9d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000445388 : mov dword ptr [rsp + 0x10], edx ; mov al, 0 ; call 0x4015a8
0x00000000004452e9 : mov dword ptr [rsp + 8], ebx ; mov al, 0 ; call 0x4015a8
0x00000000004296f0 : mov eax, 0x21459694 ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000040aef1 : mov eax, 0x3eb445c7 ; sal dl, cl ; ret
0x0000000000420296 : mov eax, 0x810044fa ; ret 0x24c7
0x0000000000432619 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d2ee : mov eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000446d2b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000446efe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e27c : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004311ae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000448b35 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432f1c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000446eac : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044ec0a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b8fb : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000432d9f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042d2bc : mov eax, dword ptr [rbp - 0x77] ; ret
0x00000000004328df : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040f963 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000442f8d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405829 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000432d9e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000405819 : mov eax, esi ; pop rbp ; ret
0x00000000004253db : mov ebp, 0x144cbf1 ; ret 0xea81
0x000000000041b7b8 : mov ebp, 0x894461fd ; ret
0x000000000043f7b8 : mov ebp, 0xe19c53ba ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000429eae : mov ebx, 0x214559b5 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000044faa4 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000428b8e : mov ebx, 0x8944537a ; ret
0x0000000000429e7c : mov ebx, 0x894559b5 ; ret
0x000000000042ce64 : mov ecx, 0x144e706 ; ret 0xc281
0x0000000000428428 : mov ecx, 0x144fafd ; ret 0xea81
0x00000000004161d6 : mov ecx, 0x81f20153 ; ret 0x844a
0x00000000004241a7 : mov ecx, 0x94432cb ; ret
0x0000000000432aec : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x651e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x652280 ; jmp rax
0x00000000004017e2 : mov edi, 0x652280 ; jmp rdx
0x000000000043c057 : mov edi, 0xb8000055 ; wait ; jo 0x43c06f ; ret
0x000000000040c04d : mov edi, 0xe9000004 ; ret 1
0x00000000004055cb : mov edi, 1 ; call 0x401847
0x000000000040e29c : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000044eec7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004502bd : mov edi, edi ; jmp rax
0x000000000044eec6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044ca6e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043c81b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000042b06c : mov edx, dr1 ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000405423 : mov edx, eax ; mov al, 0 ; call 0x401696
0x000000000042d861 : mov es, word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042d82f : mov es, word ptr [rbp - 0x77] ; ret
0x000000000041d353 : mov esi, 0x21453468 ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004206bc : mov esi, 0x2145e6cc ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000043d692 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000044ca57 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d321 : mov esi, 0x89453468 ; ret
0x000000000042068a : mov esi, 0x8945e6cc ; ret
0x0000000000404b82 : mov esi, 0x8a4001b2 ; xor al, 0x25 ; ret
0x000000000040e29f : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x652280 ; jmp rdx
0x000000000042c8ee : mov esp, 0x21451254 ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000429c82 : mov esp, 0x2145b52f ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000450a74 : mov esp, 0x28000006 ; and al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000041c142 : mov esp, 0x894516cd ; ret 0xf741
0x0000000000429c50 : mov esp, 0x8945b52f ; ret
0x0000000000401c29 : mov esp, ebp ; pop rbp ; ret
0x0000000000445209 : mov qword ptr [rbp - 0x290], rax ; call 0x4014a9
0x0000000000445280 : mov qword ptr [rbp - 0x2a8], rax ; call 0x4014a9
0x0000000000405824 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004331f5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040dfc9 : mov qword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x0000000000445387 : mov qword ptr [rsp + 0x10], r10 ; mov al, 0 ; call 0x4015a9
0x00000000004452e8 : mov qword ptr [rsp + 8], r11 ; mov al, 0 ; call 0x4015a9
0x000000000040aef3 : mov r12b, 0x3e ; sal dl, cl ; ret
0x000000000040aef0 : mov r8d, 0x3eb445c7 ; sal dl, cl ; ret
0x0000000000432618 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446d2a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000446efd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004311ad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000446eab : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b8fa : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000442f8c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405828 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405818 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000405422 : mov rdx, rax ; mov al, 0 ; call 0x401697
0x00000000004017df : mov rsi, rax ; mov edi, 0x652280 ; jmp rdx
0x0000000000401c28 : mov rsp, rbp ; pop rbp ; ret
0x00000000004209e2 : mov word ptr [r9 - 0x7629d63a], cs ; ret 0xca29
0x0000000000446ac1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004207c4 : mov word ptr [rbp + 0x21], es ; fld dword ptr [rbp + 9] ; ret 0x944
0x00000000004209e3 : mov word ptr [rcx - 0x7629d63a], cs ; ret 0xca29
0x000000000042fc95 : movabs al, byte ptr [0x148000000402d48] ; ret 0x8948
0x000000000041dfe1 : movabs al, byte ptr [0x89d729c7890044fa] ; ret 0xf229
0x0000000000415588 : movabs al, byte ptr [0x89f30941d62144e3] ; ret 0x2944
0x000000000042d5d1 : movabs al, byte ptr [0x945d02145971e79] ; ret
0x000000000041f6dc : movabs al, byte ptr [0x945f909412048f1] ; ret 0x3145
0x0000000000429991 : movabs al, byte ptr [0x945f90941c82141] ; ret 0x3145
0x00000000004041a1 : movabs al, byte ptr [0x950f41ffffffff3d] ; ret 0x8445
0x0000000000448221 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x00000000004382f8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000424deb : movabs byte ptr [0x8945ce2144bff3dd], al ; ret 0x8141
0x0000000000428f7f : movabs byte ptr [0x945d0214511f9f7], al ; ret
0x000000000041fa3b : movabs eax, dword ptr [0x2144fffffffff281] ; ret 0xbd8b
0x00000000004185f9 : movabs eax, dword ptr [0x89f30941d6214437] ; ret 0xfa29
0x0000000000417a77 : movabs eax, dword ptr [0x945d2214446c788] ; ret
0x0000000000418cc8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x418e
0x000000000043b545 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000418cdc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x818e
0x0000000000418cc7 : movsb byte ptr [rdi], byte ptr gs:[rsi] ; ret 0x418e
0x0000000000418cdb : movsb byte ptr [rdi], byte ptr gs:[rsi] ; ret 0x818e
0x000000000044e113 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040b723 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d14f : movzx eax, al ; pop rbp ; ret
0x000000000040c859 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004196c5 : neg byte ptr [rdx + 0x214571ca] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000419693 : neg byte ptr [rdx - 0x76ba8e36] ; ret
0x000000000044c868 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000423c8b : neg dword ptr [rdi + 0x4c] ; ret 0x4139
0x000000000042360a : nop ; adc byte ptr [rcx + rax*4 - 0xe], dl ; jmp qword ptr [rcx]
0x0000000000450580 : nop ; mov bl, -5 ; jmp rdx
0x00000000004347e5 : nop ; ret
0x0000000000442bf2 : nop ; ret 0x148
0x0000000000442c06 : nop ; ret 0x2948
0x000000000042ad6f : nop ; test byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042ad3d : nop ; test byte ptr [rbp - 0x77], al ; ret
0x000000000045018c : nop ; xor bh, bh ; call qword ptr [rax]
0x000000000044eee8 : nop dword ptr [rax + rax] ; ret
0x000000000044faa2 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x000000000043cf7a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043d054 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042759b : or al, 0xfffffffffffffffb ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x00000000004500d5 : or al, 0xfffffffffffffffe ; jmp qword ptr [rax]
0x00000000004507c4 : or al, 4 ; add byte ptr [rax], al ; pop rax ; add bh, dh ; jmp qword ptr [rax]
0x0000000000450179 : or al, byte ptr [rax] ; add byte ptr [rax], dl ; xor bh, bh ; call rax
0x000000000041f9d6 : or al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041f9a4 : or al, byte ptr [rbp - 0x77] ; ret
0x00000000004488e5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004500c5 : or bh, dh ; jmp rax
0x0000000000413277 : or bl, byte ptr [rcx] ; ret 0x558a
0x00000000004116c7 : or bl, byte ptr [rcx] ; ret 0x8589
0x0000000000432af0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000450bf5 : or byte ptr [rax], al ; add al, cl ; sub bh, bh ; call qword ptr [rbx]
0x0000000000450bd5 : or byte ptr [rax], al ; add byte ptr [rax], cl ; sub edi, edi ; call rdx
0x00000000004443d8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040a476 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000424ae8 : or byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000424ab6 : or byte ptr [rbp - 0x77], al ; ret
0x000000000040b795 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x000000000044faa5 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x00000000004488e4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040c6ac : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004331f4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042edaf : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000423409 : or dword ptr [rbp + 9], eax ; ret 0x941
0x000000000042ce63 : or dword ptr [rcx + 0x144e706], edi ; ret 0xc281
0x0000000000428ef3 : or dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004152fc : or dword ptr [rdi + 0x32], ebp ; adc dword ptr [rbp - 0x77], eax ; ret 0xf741
0x000000000042c1e7 : or eax, 0x21448541 ; ret
0x0000000000404b19 : or eax, 0x25148ad8 ; ret 0x6522
0x0000000000423058 : or eax, 0xb9cba4e4 ; ret
0x00000000004501b9 : or eax, dword ptr [rax] ; add al, al ; xor edi, edi ; call rax
0x000000000041b105 : or eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041c77a : or eax, dword ptr [rbp + 9] ; fld dword ptr [rbp + 9] ; ret 0x3145
0x000000000041b0d3 : or eax, dword ptr [rbp - 0x77] ; ret
0x000000000041751c : or eax, dword ptr [rbp - 0x77] ; ret 0xf741
0x0000000000432d9b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000423f81 : or esi, dword ptr [rsi - 0x7e35fe68] ; ret 0xb5e
0x0000000000424fde : out -0x28, al ; ret
0x0000000000424feb : out -0x28, eax ; ret
0x000000000042926e : out -0x3c, al ; lodsb al, byte ptr [rsi] ; ret
0x000000000041c525 : out -0x5a, eax ; test al, 0x15 ; ret 0x8141
0x000000000041f6c7 : out -0x60, eax ; int1 ; and byte ptr [rbp - 0x77], al ; ret 0xf741
0x000000000041c140 : out -0x69, eax ; mov esp, 0x894516cd ; ret 0xf741
0x000000000041dd81 : out 0x1c, al ; ret
0x000000000041dd8e : out 0x1c, eax ; ret
0x00000000004132ad : out 0x23, eax ; fld qword ptr [rcx - 0xd343] ; call qword ptr [rax]
0x000000000042df0c : out 0x4a, eax ; ret
0x0000000000423c83 : out 0x5f, al ; ret 0x8939
0x0000000000417a3c : out 0x7f, eax ; pop rdi ; and eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000042d8ea : out 0xd, al ; lahf ; ret 0x41e9
0x000000000042d8f7 : out 0xd, eax ; lahf ; ret 0x41e9
0x000000000043e95b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044d14c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004198ae : out dx, al ; and al, byte ptr [rcx] ; ret 0xea81
0x000000000042e3de : out dx, al ; lea eax, dword ptr [rcx] ; ret 0xea81
0x000000000040cfba : out dx, eax ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004233e1 : out dx, eax ; add eax, dword ptr [rbp - 0x77] ; ret 0xf741
0x000000000044d47f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000443b12 : out dx, eax ; mov al, -0x47 ; ret
0x000000000042467b : out dx, eax ; ret
0x000000000044ca59 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043fa45 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000434696 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004102fb : outsb dx, byte ptr [rsi] ; ret 0x897e
0x000000000043fa90 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000418a10 : outsb dx, byte ptr [rsi] ; ret 0xe97e
0x0000000000424ae5 : outsb dx, byte ptr [rsi] ; sbb al, 0x56 ; or byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000424ab3 : outsb dx, byte ptr [rsi] ; sbb al, 0x56 ; or byte ptr [rbp - 0x77], al ; ret
0x0000000000445c61 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042847e : outsd dx, dword ptr [rsi] ; jns 0x4284d5 ; ret
0x0000000000428488 : outsd dx, dword ptr [rsi] ; jns 0x4284df ; ret
0x000000000042e7a5 : outsd dx, dword ptr [rsi] ; mov byte ptr [rbp + 0x21], al ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000044ca5c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004041cb : outsd dx, dword ptr [rsi] ; sub ebp, ecx ; fist word ptr [rip + 0x51b80000] ; ret
0x0000000000446abc : pop ax ; jb 0x446af1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000418cb1 : pop qword ptr [rbp + 9] ; ret 0x945
0x000000000041671d : pop qword ptr [rcx] ; ret 0xea81
0x00000000004408f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044eedc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042787d : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004408fb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044eede : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ec24 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044eee0 : pop r14 ; pop r15 ; ret
0x0000000000430b95 : pop r14 ; pop rbp ; ret
0x000000000040ec26 : pop r15 ; pop rbp ; ret
0x00000000004120d6 : pop r15 ; ret
0x00000000004507c8 : pop rax ; add bh, dh ; jmp qword ptr [rax]
0x0000000000428acc : pop rax ; cli ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000446abd : pop rax ; jb 0x446af0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x250aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x652280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x652280 ; jmp rdx
0x000000000044eedb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004408fc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044eedf : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000043c802 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000438ad5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000043c81e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401795 : pop rbp ; ret
0x000000000042787c : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ec23 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b94 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004054a7 : pop rbx ; pop rbp ; ret
0x00000000004443e0 : pop rbx ; ret
0x000000000042ea1c : pop rbx ; ret 0x2d6f
0x000000000044fa20 : pop rbx ; ret 0x3956
0x000000000042cc76 : pop rbx ; rol byte ptr [rbp + 0x21], cl ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042cc44 : pop rbx ; rol byte ptr [rbp - 0x77], cl ; ret
0x00000000004293ec : pop rcx ; and byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004293ba : pop rcx ; and byte ptr [rbp - 0x77], al ; ret
0x000000000043c803 : pop rcx ; ret 0x1b2
0x0000000000436ed6 : pop rcx ; ret 0x8589
0x000000000043c81f : pop rcx ; ret 0x8b48
0x000000000043eb50 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004207c2 : pop rcx ; xchg eax, edi ; mov word ptr [rbp + 0x21], es ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000417a3e : pop rdi ; and eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040ec27 : pop rdi ; pop rbp ; ret
0x0000000000411427 : pop rdi ; ret
0x0000000000423c8c : pop rdi ; ret 0x4139
0x0000000000423c84 : pop rdi ; ret 0x8939
0x0000000000423f80 : pop rsi ; or esi, dword ptr [rsi - 0x7e35fe68] ; ret 0xb5e
0x000000000040ec25 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044eee1 : pop rsi ; pop r15 ; ret
0x0000000000430b96 : pop rsi ; pop rbp ; ret
0x00000000004452ea : pop rsp ; and al, 8 ; mov al, 0 ; call 0x4015a7
0x0000000000418954 : pop rsp ; clc ; inc dword ptr [rcx - 0x73b700f] ; jmp qword ptr [rcx]
0x000000000041895a : pop rsp ; clc ; jmp qword ptr [rcx]
0x00000000004408fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044eedd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042787e : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436ed5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000044df95 : popfq ; ret 0xd284
0x000000000042dc05 : popfq ; xlatb ; sub dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042dbd3 : popfq ; xlatb ; sub dword ptr [rbp - 0x77], eax ; ret
0x000000000043c800 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043e9ea : push -0x75425eeb ; push rbp ; ret
0x000000000043b548 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000044faa6 : push 0x76 ; leave ; ret 0x8581
0x0000000000450177 : push qword ptr [rax + 0x1000000a] ; xor bh, bh ; call rax
0x00000000004501b7 : push qword ptr [rax - 0x3ffffff5] ; xor edi, edi ; call rax
0x0000000000401d65 : push rax ; pop rbp ; ret
0x0000000000403c81 : push rax ; ret
0x0000000000450114 : push rax ; sub esi, edi ; jmp qword ptr [rax]
0x000000000041eab9 : push rbp ; enter 0x45f7, -0x77 ; ret
0x000000000041eaeb : push rbp ; enter 0x45f7, 0x21 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000401824 : push rbp ; mov edi, 0x651e20 ; mov rbp, rsp ; call rax
0x000000000043e9ef : push rbp ; ret
0x000000000043e986 : push rbp ; ret 0xd284
0x000000000043cf7f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043d059 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041f9d5 : push rbx ; or al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041f9a3 : push rbx ; or al, byte ptr [rbp - 0x77] ; ret
0x0000000000430839 : push rbx ; ret 0x4862
0x0000000000430436 : push rbx ; ret 0x8962
0x000000000043081d : push rbx ; ret 0xb262
0x0000000000404071 : push rcx ; ret
0x000000000044ca5b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000413c49 : push rdx ; mov al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000413c17 : push rdx ; mov al, byte ptr [rbp - 0x77] ; ret
0x000000000041671c : push rdx ; pop qword ptr [rcx] ; ret 0xea81
0x000000000041944d : push rdx ; xor eax, 0x21450cb5 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041941b : push rdx ; xor eax, 0x89450cb5 ; ret
0x000000000042c655 : push rsi ; adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042c623 : push rsi ; adc byte ptr [rbp - 0x77], al ; ret
0x0000000000424ae7 : push rsi ; or byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000424ab5 : push rsi ; or byte ptr [rbp - 0x77], al ; ret
0x000000000042c8ef : push rsp ; adc al, byte ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000445389 : push rsp ; and al, 0x10 ; mov al, 0 ; call 0x4015a7
0x000000000042b3ae : push rsp ; ret 0x44b3
0x000000000042b3a4 : push rsp ; ret 0x45b3
0x0000000000408010 : push rsp ; ret 0x69f1
0x000000000042fc5e : pushfq ; loope 0x42fc4f ; ret 0xe9dd
0x000000000042fc5d : pushfq ; loope 0x42fc50 ; ret 0xe9dd
0x00000000004152c7 : pushfq ; ret
0x0000000000404c89 : pushfq ; ret 0xd284
0x0000000000427925 : rcr byte ptr [rbp + 0x21], cl ; ret 0x941
0x0000000000401361 : ret
0x0000000000433dfe : ret 0
0x000000000042a053 : ret 0x119
0x00000000004158da : ret 0x141
0x000000000042969e : ret 0x142a
0x000000000041c36b : ret 0x145
0x0000000000442bf3 : ret 0x148
0x000000000042afd0 : ret 0x14e9
0x000000000041df46 : ret 0x14f1
0x0000000000416ac9 : ret 0x1510
0x000000000041db90 : ret 0x151b
0x0000000000423d81 : ret 0x17b8
0x000000000042e7e8 : ret 0x194b
0x000000000043fb54 : ret 0x1a
0x0000000000434dcd : ret 0x1add
0x000000000040a88f : ret 0x1b2
0x0000000000414cc8 : ret 0x1c08
0x000000000042b62a : ret 0x1ca6
0x0000000000415757 : ret 0x1d13
0x0000000000419fff : ret 0x1d7e
0x0000000000404d5b : ret 0x1db9
0x0000000000420779 : ret 0x1ec6
0x0000000000413ae1 : ret 0x1f99
0x00000000004179ff : ret 0x2141
0x000000000041662f : ret 0x2144
0x0000000000413b13 : ret 0x2145
0x000000000042f87b : ret 0x2148
0x000000000041ce6f : ret 0x22c0
0x000000000043571a : ret 0x23da
0x000000000040ad4a : ret 0x2474
0x000000000042029b : ret 0x24c7
0x0000000000401722 : ret 0x250a
0x0000000000401522 : ret 0x250b
0x0000000000422479 : ret 0x252
0x00000000004136bd : ret 0x2649
0x000000000042b5a3 : ret 0x271a
0x0000000000442418 : ret 0x279e
0x000000000041b8ad : ret 0x27a1
0x00000000004135fe : ret 0x2944
0x0000000000407cfa : ret 0x2948
0x000000000040ec9e : ret 0x294c
0x000000000040ec92 : ret 0x294d
0x000000000043eb54 : ret 0x2a
0x000000000043cf82 : ret 0x2d50
0x000000000042ea1d : ret 0x2d6f
0x0000000000418191 : ret 0x2dce
0x000000000044ccb8 : ret 0x2e8
0x000000000040e802 : ret 0x30
0x000000000044c5be : ret 0x3040
0x000000000041d8ea : ret 0x3085
0x000000000042264f : ret 0x3141
0x0000000000415220 : ret 0x3144
0x000000000040e9cf : ret 0x3145
0x0000000000422d71 : ret 0x3304
0x000000000041e269 : ret 0x34e8
0x000000000041537a : ret 0x358b
0x000000000042b05c : ret 0x35f
0x000000000042c973 : ret 0x36fd
0x00000000004163f3 : ret 0x386a
0x000000000044fa21 : ret 0x3956
0x0000000000425689 : ret 0x3a3c
0x000000000043da54 : ret 0x3b
0x000000000043aab5 : ret 0x3e
0x00000000004150a3 : ret 0x3efd
0x000000000042fcba : ret 0x40
0x000000000042d4c0 : ret 0x40cc
0x000000000041d994 : ret 0x40ec
0x0000000000423c8e : ret 0x4139
0x0000000000430638 : ret 0x4172
0x0000000000418cc9 : ret 0x418e
0x000000000042d8ed : ret 0x41e9
0x000000000040b8d0 : ret 0x4240
0x000000000042b3af : ret 0x44b3
0x0000000000417b4d : ret 0x44db
0x000000000041c71e : ret 0x450e
0x0000000000416714 : ret 0x458b
0x000000000042b3a5 : ret 0x45b3
0x0000000000417b7f : ret 0x45db
0x000000000042d8e3 : ret 0x45e9
0x000000000041437a : ret 0x480
0x000000000043def1 : ret 0x4802
0x0000000000413386 : ret 0x4804
0x0000000000428ac4 : ret 0x4806
0x000000000044ca5e : ret 0x4815
0x000000000043fa46 : ret 0x4861
0x000000000043083a : ret 0x4862
0x000000000042f9b9 : ret 0x48c0
0x0000000000401a2a : ret 0x48f0
0x0000000000438301 : ret 0x4b
0x0000000000443917 : ret 0x4cc0
0x0000000000440958 : ret 0x4cf0
0x00000000004211d2 : ret 0x4d36
0x00000000004280d1 : ret 0x4dec
0x00000000004459dc : ret 0x4f0b
0x000000000042644b : ret 0x4f80
0x000000000042fb3b : ret 0x4fe8
0x000000000044fabb : ret 0x51a3
0x000000000041e249 : ret 0x5395
0x0000000000419967 : ret 0x53f2
0x0000000000432d4b : ret 0x5589
0x0000000000413279 : ret 0x558a
0x000000000042642d : ret 0x558b
0x0000000000426fda : ret 0x56ab
0x000000000042492e : ret 0x580c
0x0000000000429328 : ret 0x58a9
0x000000000043d20a : ret 0x5966
0x000000000041d9b2 : ret 0x5ac3
0x0000000000429107 : ret 0x5bbc
0x0000000000444637 : ret 0x5bc6
0x000000000041e731 : ret 0x5f1
0x000000000042aa4b : ret 0x60ff
0x000000000044ebcf : ret 0x61
0x000000000042505a : ret 0x61c
0x000000000042f172 : ret 0x626c
0x000000000040fb94 : ret 0x6348
0x0000000000424e24 : ret 0x63f9
0x0000000000429747 : ret 0x6474
0x000000000040453e : ret 0x6522
0x0000000000420a0d : ret 0x65ad
0x000000000041abc5 : ret 0x66d3
0x0000000000421396 : ret 0x676c
0x00000000004172a7 : ret 0x69df
0x0000000000408011 : ret 0x69f1
0x0000000000434466 : ret 0x6a8a
0x0000000000422ac4 : ret 0x6ab4
0x0000000000426673 : ret 0x6b2
0x00000000004237eb : ret 0x6c9f
0x0000000000418f9b : ret 0x6cf6
0x0000000000427b30 : ret 0x6ed1
0x000000000042817b : ret 0x6f43
0x000000000042a3e9 : ret 0x750b
0x0000000000416691 : ret 0x751a
0x000000000042d574 : ret 0x7641
0x0000000000425453 : ret 0x7686
0x0000000000416719 : ret 0x76a7
0x000000000043411e : ret 0x77a8
0x000000000040b0be : ret 0x786b
0x000000000041d565 : ret 0x78c5
0x00000000004250b8 : ret 0x79e5
0x000000000041b94e : ret 0x7a68
0x0000000000435281 : ret 0x7a8a
0x000000000041db78 : ret 0x7a97
0x000000000042aa58 : ret 0x7ab0
0x000000000043befb : ret 0x7b7f
0x0000000000420403 : ret 0x7c02
0x000000000042d098 : ret 0x7c64
0x00000000004145b5 : ret 0x8001
0x000000000040fb8c : ret 0x8041
0x00000000004212d9 : ret 0x80f2
0x0000000000407f3b : ret 0x8141
0x000000000040b8cd : ret 0x8148
0x000000000041fca2 : ret 0x8164
0x0000000000418cdd : ret 0x818e
0x000000000043de14 : ret 0x822d
0x0000000000415708 : ret 0x83c
0x00000000004041aa : ret 0x8445
0x00000000004161db : ret 0x844a
0x00000000004276ff : ret 0x846e
0x00000000004195c0 : ret 0x853f
0x000000000044faaa : ret 0x8581
0x0000000000402960 : ret 0x8589
0x000000000040490c : ret 0x858a
0x0000000000414cdf : ret 0x858b
0x00000000004082e9 : ret 0x8840
0x0000000000408176 : ret 0x8844
0x000000000042e24b : ret 0x8887
0x000000000042c932 : ret 0x88f1
0x0000000000423c86 : ret 0x8939
0x0000000000434e93 : ret 0x8940
0x0000000000416626 : ret 0x8944
0x00000000004179e9 : ret 0x8945
0x00000000004051b9 : ret 0x8948
0x000000000040ec95 : ret 0x8949
0x000000000044b07f : ret 0x894a
0x0000000000434697 : ret 0x8961
0x0000000000430437 : ret 0x8962
0x000000000042fd6f : ret 0x8972
0x00000000004102fc : ret 0x897e
0x0000000000409b3d : ret 0x89a7
0x0000000000431567 : ret 0x89b5
0x000000000042ed8b : ret 0x89dd
0x000000000042bb65 : ret 0x89e1
0x000000000044c678 : ret 0x8a44
0x000000000044c575 : ret 0x8a4a
0x00000000004060a5 : ret 0x8a69
0x00000000004083b1 : ret 0x8b48
0x000000000040fbc5 : ret 0x8cc2
0x00000000004280d5 : ret 0x8d8b
0x0000000000413f67 : ret 0x8e3b
0x00000000004189e9 : ret 0x8f0f
0x0000000000419662 : ret 0x8f85
0x000000000041b512 : ret 0x929a
0x0000000000427cd6 : ret 0x93a2
0x0000000000420f57 : ret 0x93d
0x000000000042340c : ret 0x941
0x00000000004259f6 : ret 0x9438
0x00000000004147b2 : ret 0x944
0x0000000000417547 : ret 0x945
0x000000000040f66d : ret 0x9500
0x0000000000415a3a : ret 0x9589
0x0000000000410cb6 : ret 0x95c9
0x0000000000408665 : ret 0x95e8
0x00000000004207a5 : ret 0x9759
0x0000000000422fdc : ret 0x982e
0x00000000004259e1 : ret 0x9942
0x00000000004191bc : ret 0x99e6
0x0000000000420d07 : ret 0x9af2
0x00000000004300ed : ret 0x9c10
0x000000000042e753 : ret 0x9e78
0x0000000000426ff8 : ret 0x9eef
0x00000000004269f6 : ret 0x9f2a
0x0000000000420d8d : ret 0x9fbc
0x0000000000426805 : ret 0xa004
0x000000000041b938 : ret 0xa220
0x000000000043d05c : ret 0xa30b
0x000000000042ea03 : ret 0xa3e3
0x000000000040b037 : ret 0xa733
0x0000000000419644 : ret 0xaacf
0x0000000000426985 : ret 0xab7f
0x0000000000448bff : ret 0xac60
0x000000000041aa3e : ret 0xaff2
0x000000000040482f : ret 0xb0
0x000000000043081e : ret 0xb262
0x0000000000412702 : ret 0xb4
0x00000000004137ed : ret 0xb58b
0x0000000000423f87 : ret 0xb5e
0x00000000004198ab : ret 0xb6b6
0x000000000041a31a : ret 0xb70a
0x000000000042c2bb : ret 0xb711
0x000000000043e960 : ret 0xb740
0x000000000041f454 : ret 0xb785
0x0000000000424e56 : ret 0xb841
0x000000000040afab : ret 0xb848
0x000000000043cb90 : ret 0xb940
0x000000000044c502 : ret 0xb94a
0x0000000000428426 : ret 0xb978
0x000000000040ad6f : ret 0xb9a7
0x000000000042f8c0 : ret 0xb9dd
0x000000000041a0f2 : ret 0xba95
0x000000000042e3db : ret 0xbb1e
0x0000000000415e66 : ret 0xbbb7
0x0000000000417cd2 : ret 0xbcb6
0x0000000000414a29 : ret 0xbd8b
0x00000000004253d9 : ret 0xbda7
0x000000000042bc39 : ret 0xbddd
0x000000000043efdc : ret 0xbf48
0x000000000041770e : ret 0xc141
0x00000000004017c5 : ret 0xc148
0x00000000004315aa : ret 0xc226
0x000000000041872f : ret 0xc241
0x000000000042ea23 : ret 0xc25b
0x00000000004136a6 : ret 0xc281
0x000000000041aa28 : ret 0xc3d1
0x0000000000416f6c : ret 0xc3f3
0x000000000044ee12 : ret 0xc493
0x000000000041a110 : ret 0xc568
0x0000000000420642 : ret 0xc681
0x000000000041d0c5 : ret 0xc689
0x0000000000417cc5 : ret 0xc714
0x000000000042b9e4 : ret 0xc781
0x000000000041354e : ret 0xc789
0x0000000000413f1d : ret 0xc8fd
0x000000000044d109 : ret 0xca21
0x0000000000405346 : ret 0xca29
0x000000000041bb5c : ret 0xca94
0x0000000000423d08 : ret 0xcb47
0x000000000040bc8c : ret 0xcc4d
0x000000000044ebd5 : ret 0xccb2
0x000000000041cc30 : ret 0xcd47
0x0000000000422d09 : ret 0xcdb0
0x0000000000416703 : ret 0xd101
0x0000000000429d65 : ret 0xd197
0x0000000000416267 : ret 0xd232
0x0000000000404806 : ret 0xd284
0x000000000041c0d9 : ret 0xd2f7
0x000000000042c4d0 : ret 0xd322
0x000000000042222a : ret 0xd3e8
0x0000000000414827 : ret 0xd4dd
0x000000000041d2e7 : ret 0xd560
0x0000000000413601 : ret 0xd601
0x000000000041b190 : ret 0xd609
0x000000000044acc5 : ret 0xd618
0x0000000000414acc : ret 0xd629
0x000000000041760c : ret 0xd6f7
0x0000000000413821 : ret 0xd709
0x00000000004187d7 : ret 0xd7c3
0x000000000041c172 : ret 0xd7f7
0x0000000000427cea : ret 0xda1b
0x00000000004158d2 : ret 0xda21
0x000000000042db99 : ret 0xdab9
0x0000000000418121 : ret 0xdaf7
0x000000000041734a : ret 0xdc32
0x00000000004179f3 : ret 0xde21
0x000000000040871c : ret 0xdee8
0x0000000000428f08 : ret 0xe247
0x0000000000405898 : ret 0xe280
0x000000000041c53a : ret 0xe381
0x000000000042c29e : ret 0xe3d1
0x0000000000428a39 : ret 0xe552
0x00000000004187ec : ret 0xe671
0x000000000043e832 : ret 0xe940
0x000000000043fa91 : ret 0xe961
0x0000000000418a11 : ret 0xe97e
0x000000000042fc61 : ret 0xe9dd
0x000000000042c89c : ret 0xea32
0x00000000004358bd : ret 0xea51
0x0000000000413f24 : ret 0xea81
0x000000000042ddab : ret 0xead5
0x0000000000425460 : ret 0xecec
0x0000000000412c96 : ret 0xed
0x00000000004284e7 : ret 0xed46
0x000000000041d2d2 : ret 0xed70
0x000000000044164c : ret 0xee8
0x0000000000429543 : ret 0xef81
0x0000000000424681 : ret 0xefaa
0x0000000000406e09 : ret 0xf
0x000000000042a8ae : ret 0xf16e
0x00000000004082fe : ret 0xf180
0x000000000041d0bd : ret 0xf221
0x0000000000413605 : ret 0xf229
0x0000000000414f16 : ret 0xf281
0x000000000041439a : ret 0xf333
0x000000000043d697 : ret 0xf41
0x000000000040aa41 : ret 0xf45
0x000000000041a2f2 : ret 0xf5e8
0x0000000000416938 : ret 0xf681
0x000000000042e7f5 : ret 0xf710
0x000000000041335d : ret 0xf741
0x0000000000415c53 : ret 0xf781
0x00000000004181aa : ret 0xf789
0x000000000043f5e5 : ret 0xf7f3
0x0000000000425c2c : ret 0xf8c3
0x000000000042e235 : ret 0xf96f
0x00000000004280cd : ret 0xfa01
0x0000000000413546 : ret 0xfa21
0x000000000041355a : ret 0xfa29
0x0000000000409e11 : ret 0xfb4
0x000000000044911a : ret 0xfb83
0x0000000000414366 : ret 0xfb9e
0x000000000044658a : ret 0xfbb0
0x000000000043dd6e : ret 0xfc75
0x0000000000418739 : ret 0xfd53
0x0000000000413f3b : ret 0xfd57
0x00000000004085eb : ret 0xfe8
0x000000000040f4bf : ret 0xff50
0x000000000043f5df : ret 0xffa5
0x000000000043dd68 : ret 0xffc4
0x000000000043cf88 : ret 0xffd5
0x000000000043d062 : ret 0xffd8
0x000000000043de1a : ret 0xffd9
0x000000000043d204 : ret 0xffe0
0x0000000000401fda : ret 0xfff4
0x000000000043bef5 : ret 0xfffa
0x0000000000445212 : ret 0xfffb
0x00000000004052e5 : ret 0xffff
0x000000000040a47a : ret 1
0x000000000042fa29 : ret 2
0x000000000040ce43 : ret 5
0x0000000000409d3b : ret 6
0x0000000000440d54 : ret 8
0x00000000004289ee : retf ; call rax
0x000000000044ca3d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042f681 : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000042f70c : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004087f1 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044955c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430a0d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042db30 : rol byte ptr [rbp + 0x21], 1 ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000042327b : rol byte ptr [rbp + 0x21], 1 ; ret
0x00000000004211c1 : rol byte ptr [rbp + 0x21], 1 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042cc77 : rol byte ptr [rbp + 0x21], cl ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004137b6 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415571 : rol byte ptr [rbp + 9], cl ; ret
0x000000000041f7e2 : rol byte ptr [rbp - 0x77], 1 ; fiadd dword ptr [rbp + 0x21] ; ret 0xf741
0x000000000042118f : rol byte ptr [rbp - 0x77], 1 ; ret
0x000000000041528c : rol byte ptr [rbp - 0x77], cl ; ret
0x0000000000421ba1 : rol byte ptr [rbp - 0x77], cl ; rol dword ptr [rcx - 0x7f], cl ; jrcxz 0x421b87 ; hlt ; ret
0x0000000000407f6c : rol byte ptr [rcx + 0xf], -0x6b ; ret
0x0000000000418cc3 : rol byte ptr [rcx - 0x7f], 1 ; loopne 0x418d33 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x418e
0x0000000000419962 : rol byte ptr [rcx - 0x7f], cl ; loope 0x419918 ; ret 0x53f2
0x0000000000418cc0 : rol byte ptr [rcx - 9], 1 ; rol byte ptr [rcx - 0x7f], 1 ; loopne 0x418d36 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x418e
0x0000000000418af7 : rol byte ptr [rcx - 9], 1 ; rol dword ptr [rcx - 9], cl ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004500c0 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; or bh, dh ; jmp rax
0x000000000044ca3c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004233df : rol cl, 1 ; out dx, eax ; add eax, dword ptr [rbp - 0x77] ; ret 0xf741
0x00000000004177a6 : rol dword ptr [rbp + 9], 1 ; ret
0x0000000000424322 : rol dword ptr [rbp + 9], cl ; fiadd dword ptr [rcx - 9] ; fiadd dword ptr [rbp + 0x29] ; ret 0xf741
0x00000000004181bc : rol dword ptr [rbp - 0x77], 1 ; ret
0x0000000000419aa2 : rol dword ptr [rbp - 0x77], 1 ; ret 0x2145
0x0000000000418ac1 : rol dword ptr [rbp - 0x77], 1 ; ret 0x945
0x0000000000415196 : rol dword ptr [rbp - 0x77], 1 ; ret 0xf741
0x0000000000414cc3 : rol dword ptr [rcx + rsi - 0x31], -0x7f ; ret 0x1c08
0x0000000000417345 : rol dword ptr [rcx + rsi - 0x31], -0x7f ; ret 0xdc32
0x0000000000417707 : rol dword ptr [rcx - 0x3f], -0x1f ; sbb dword ptr [rbp - 0x77], eax ; ret 0xc141
0x000000000041c714 : rol dword ptr [rcx - 0x3f], -0x3f ; sbb dword ptr [rbp - 0x77], eax ; ret 0xc141
0x0000000000418cd7 : rol dword ptr [rcx - 0x7f], 1 ; loope 0x418d47 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x818e
0x0000000000421b8d : rol dword ptr [rcx - 0x7f], 1 ; loope 0x421b6d ; hlt ; ret
0x0000000000421ba4 : rol dword ptr [rcx - 0x7f], cl ; jrcxz 0x421b84 ; hlt ; ret
0x0000000000418afa : rol dword ptr [rcx - 9], cl ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040800c : ror byte ptr [r8 - 0x47], 0x54 ; ret 0x69f1
0x0000000000407cf6 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000446ab4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x000000000040800d : ror byte ptr [rax - 0x47], 0x54 ; ret 0x69f1
0x000000000040b725 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000407cf7 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040937a : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ee77 : ror byte ptr [rcx - 0x7629d63a], 1 ; ret 0x2944
0x0000000000432d9a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000450238 : ror byte ptr [rip + 0x5e900000], -1 ; jmp rax
0x000000000040b040 : ror dword ptr [rax + 1], 1 ; ror dword ptr [rax - 0x48], -0x44 ; ret 0xa733
0x000000000040b043 : ror dword ptr [rax - 0x48], -0x44 ; ret 0xa733
0x000000000040c85b : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044c86e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004437d0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041656c : sahf ; cmp byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041653a : sahf ; cmp byte ptr [rbp - 0x77], al ; ret
0x000000000041f9a1 : sahf ; jrcxz 0x41f9fd ; or al, byte ptr [rbp - 0x77] ; ret
0x000000000041f9a0 : sahf ; jrcxz 0x41f9fe ; or al, byte ptr [rbp - 0x77] ; ret
0x000000000041f9d3 : sahf ; jrcxz 0x41fa32 ; or al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000431b86 : sahf ; ret 0xd284
0x000000000044fa1a : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x00000000004501bc : sal byte ptr [rbx], -1 ; call rax
0x0000000000416e3b : sal byte ptr [rcx - 0x76bb8837], 1 ; ret
0x0000000000409fec : sal dl, cl ; ret
0x0000000000418528 : salc ; fild word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004184f6 : salc ; fild word ptr [rbp - 0x77] ; ret
0x00000000004222e6 : sar dl, 1 ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000043eb51 : sar ebp, -0x17 ; ret 0x2a
0x00000000004505e1 : sar ebx, 1 ; call qword ptr [rcx]
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000443b10 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000424ae6 : sbb al, 0x56 ; or byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000424ab4 : sbb al, 0x56 ; or byte ptr [rbp - 0x77], al ; ret
0x000000000042505b : sbb al, 6 ; mov bh, -0x7f ; int1 ; ret 0x61c
0x000000000042885b : sbb al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004241a6 : sbb bh, byte ptr [rcx + 0x94432cb] ; ret
0x0000000000423c52 : sbb bl, byte ptr [rbx + 0x21452e81] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000423c20 : sbb bl, byte ptr [rbx - 0x76bad17f] ; ret
0x000000000041caeb : sbb byte ptr [rax + 1], bl ; sub eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041cab9 : sbb byte ptr [rax + 1], bl ; sub eax, dword ptr [rbp - 0x77] ; ret
0x00000000004054a3 : sbb byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043ea51 : sbb cl, ch ; ret
0x0000000000446303 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041770b : sbb dword ptr [rbp - 0x77], eax ; ret 0xc141
0x0000000000425e7a : sbb dword ptr [rbp - 0x77], eax ; ret 0xf741
0x000000000042442a : sbb dword ptr [rcx - 0x54], esi ; cmp eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004243f8 : sbb dword ptr [rcx - 0x54], esi ; cmp eax, dword ptr [rbp - 0x77] ; ret
0x000000000042d85e : sbb dword ptr [rsi - 0x6f], esp ; mov es, word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042d82c : sbb dword ptr [rsi - 0x6f], esp ; mov es, word ptr [rbp - 0x77] ; ret
0x00000000004284d3 : sbb eax, 0x144db96 ; ret 0xc281
0x00000000004232f1 : sbb eax, 0x89459d1f ; ret
0x000000000042d3a4 : sbb ebx, ebp ; enter 0x44dd, -0x77 ; ret
0x0000000000442b60 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042f2c7 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76d273bb], cl ; ret 0x626c
0x0000000000419dce : scasd eax, dword ptr [rdi] ; add dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000419d9c : scasd eax, dword ptr [rdi] ; add dword ptr [rbp - 0x77], eax ; ret
0x000000000042a76d : shl dword ptr [rbp + 0x45], -0x77 ; ret
0x000000000042a79f : shl dword ptr [rbp + 0x45], 0x21 ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004211cc : shl dword ptr [rcx - 0x7e25febc], 1 ; ret 0x4d36
0x00000000004211cb : shl qword ptr [r9 - 0x7e25febc], 1 ; ret 0x4d36
0x00000000004211ca : shl qword ptr ss:[r9 - 0x7e25febc], 1 ; ret 0x4d36
0x000000000042713e : shr byte ptr [rcx + 0x21453999], cl ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042710c : shr byte ptr [rcx - 0x76bac667], cl ; ret
0x000000000043da52 : shr cl, cl ; ret 0x3b
0x0000000000450289 : sldt word ptr [rax] ; adc byte ptr [rdi - 1], ch ; jmp qword ptr [rax]
0x0000000000428f81 : stc ; adc dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000428f4f : stc ; adc dword ptr [rbp - 0x77], eax ; ret
0x000000000043b88d : stc ; ret 0x77a8
0x0000000000442417 : std ; ret 0x279e
0x00000000004269ff : sti ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000416e05 : sti ; add eax, 0x21450606 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416dd3 : sti ; add eax, 0x89450606 ; ret
0x000000000044ffce : sti ; call qword ptr [rax]
0x00000000004505e2 : sti ; call qword ptr [rcx]
0x0000000000450682 : sti ; call qword ptr [rsi]
0x000000000044ffd6 : sti ; jmp rax
0x0000000000450582 : sti ; jmp rdx
0x000000000044fa19 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x000000000042467a : stosb byte ptr [rdi], al ; out dx, eax ; ret
0x000000000040d7fe : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000450bf9 : sub bh, bh ; call qword ptr [rbx]
0x0000000000448d06 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6e8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043cf85 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000450a78 : sub byte ptr [rdi + rdi*8], ah ; jmp qword ptr [rbx]
0x000000000043cf7b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000043d055 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004150d4 : sub dl, bh ; add byte ptr [rcx - 0x7629d63a], r9b ; ret 0xca29
0x000000000042dc07 : sub dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042dbd5 : sub dword ptr [rbp - 0x77], eax ; ret
0x000000000041d850 : sub dword ptr [rsi + 0x2145b6d9], esi ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041d81e : sub dword ptr [rsi - 0x76ba4927], esi ; ret
0x000000000043de15 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041caee : sub eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041cabc : sub eax, dword ptr [rbp - 0x77] ; ret
0x0000000000417542 : sub eax, dword ptr [rdx] ; add byte ptr [rbp + 9], al ; ret 0x945
0x00000000004041cc : sub ebp, ecx ; fist word ptr [rip + 0x51b80000] ; ret
0x0000000000450bd9 : sub edi, edi ; call rdx
0x0000000000446abf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000450115 : sub esi, edi ; jmp qword ptr [rax]
0x000000000044ef1d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000044ef1c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000404b15 : test al, -0x47 ; int1 ; xchg eax, edx ; or eax, 0x25148ad8 ; ret 0x6522
0x000000000041dcf6 : test al, -0x7a ; inc byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041dcc4 : test al, -0x7a ; inc byte ptr [rbp - 0x77] ; ret
0x000000000043cf80 : test al, -0x7f ; ret 0x2d50
0x000000000043d05a : test al, -0x7f ; ret 0xa30b
0x000000000044c313 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042fd6d : test al, 0x14 ; ret 0x8972
0x000000000041c527 : test al, 0x15 ; ret 0x8141
0x000000000041c538 : test al, 0x15 ; ret 0xe381
0x00000000004431ee : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000043f7b6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000042c653 : test al, 0x7a ; push rsi ; adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042c621 : test al, 0x7a ; push rsi ; adc byte ptr [rbp - 0x77], al ; ret
0x0000000000445b58 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042edad : test bh, dl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000042565e : test byte ptr [r9 - 0x7629d63a], r9b ; ret 0xca29
0x0000000000408660 : test byte ptr [rax + rax + 0x48], -0x77 ; ret 0x95e8
0x00000000004085e6 : test byte ptr [rax + rax + 0x48], -0x77 ; ret 0xfe8
0x000000000044eeea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405721 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042211b : test byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040f29c : test byte ptr [rbp + rax], al ; add cl, ch ; ret 1
0x00000000004220e9 : test byte ptr [rbp - 0x77], al ; ret
0x000000000042565f : test byte ptr [rcx - 0x7629d63a], cl ; ret 0xca29
0x00000000004161d5 : test byte ptr [rcx - 0x7e0dfead], bh ; ret 0x844a
0x00000000004161d4 : test byte ptr [rcx - 0x7e0dfead], dil ; ret 0x844a
0x00000000004120fd : test byte ptr [rcx], bh ; ret
0x0000000000433dfc : test byte ptr [rcx], ch ; ret 0
0x000000000040c04c : test byte ptr [rdi - 0x16fffffc], bh ; ret 1
0x000000000040cfb9 : test ch, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040a474 : test dh, bl ; or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040aa4e : test dword ptr [rax + 0x29], 0x920f41fa ; ret 0x8844
0x0000000000433df6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004450c9 : test dword ptr [rax - 0x17000003], ebp ; int 0xc3
0x0000000000415b41 : test dword ptr [rcx + 0x2145bbdf], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415b0f : test dword ptr [rcx - 0x76ba4421], eax ; ret
0x00000000004488e7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004488a7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000448822 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000445c66 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004055e5 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000040450a : test dword ptr [rdi + rdi*8 - 1], esi ; call rsp
0x000000000040567d : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x00000000004054b2 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000442e0a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004206bb : test dword ptr [rsi + 0x2145e6cc], edi ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000043e82b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043fa8a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000420689 : test dword ptr [rsi - 0x76ba1934], edi ; ret
0x000000000043b54a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042713f : test eax, 0x21453999 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042d56f : test eax, 0x81f201a8 ; ret 0x7641
0x000000000042710d : test eax, 0x89453999 ; ret
0x000000000043fa3f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000043da4f : wait ; jge 0x43da31 ; shr cl, cl ; ret 0x3b
0x0000000000438b0d : wait ; jo 0x438b1b ; ret
0x000000000043c05c : wait ; jo 0x43c06a ; ret
0x00000000004296ef : wait ; mov eax, 0x21459694 ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000042d85f : xchg ax, cx ; mov es, word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042d82d : xchg ax, cx ; mov es, word ptr [rbp - 0x77] ; ret
0x000000000044ca58 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000407f6f : xchg eax, ebp ; ret
0x00000000004041a9 : xchg eax, ebp ; ret 0x8445
0x00000000004082e8 : xchg eax, ebp ; ret 0x8840
0x0000000000404805 : xchg eax, ebp ; ret 0xd284
0x0000000000434695 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043af95 : xchg eax, ebx ; ret
0x000000000042f687 : xchg eax, ebx ; ret 0xd284
0x000000000042d860 : xchg eax, ecx ; mov es, word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042d82e : xchg eax, ecx ; mov es, word ptr [rbp - 0x77] ; ret
0x000000000043b1c5 : xchg eax, ecx ; ret
0x000000000041c141 : xchg eax, edi ; mov esp, 0x894516cd ; ret 0xf741
0x00000000004207c3 : xchg eax, edi ; mov word ptr [rbp + 0x21], es ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000042f712 : xchg eax, edi ; ret 0xd284
0x0000000000427f4e : xchg eax, edx ; mov dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000427f1c : xchg eax, edx ; mov dword ptr [rbp - 0x77], eax ; ret
0x0000000000404b18 : xchg eax, edx ; or eax, 0x25148ad8 ; ret 0x6522
0x000000000040e73e : xchg eax, edx ; ret
0x000000000040fb8b : xchg eax, edx ; ret 0x8041
0x00000000004428bf : xchg eax, edx ; ret 0x8445
0x000000000040aa54 : xchg eax, edx ; ret 0x8844
0x0000000000445b5e : xchg eax, edx ; ret 0xd284
0x000000000041cc41 : xchg eax, esp ; cli ; add byte ptr [rcx - 0x7628d639], r9b ; ret 0xf229
0x0000000000428859 : xchg eax, esp ; iretd ; sbb al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000444dfa : xchg eax, esp ; jmp 0x445868
0x0000000000444d37 : xchg eax, esp ; jmp 0x44586a
0x000000000041c779 : xchg eax, esp ; or eax, dword ptr [rbp + 9] ; fld dword ptr [rbp + 9] ; ret 0x3145
0x000000000043fa44 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000043b315 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000043fa8f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004485d0 : xchg eax, esp ; ret
0x00000000004428a9 : xchg eax, esp ; ret 0x8041
0x000000000040f69a : xchg eax, esp ; ret 0x8445
0x000000000040b79d : xchg eax, esp ; ret 0x8b48
0x000000000043e95e : xchg eax, esp ; ret 0xb740
0x000000000040888c : xchg eax, esp ; ret 0xd284
0x0000000000405897 : xchg eax, esp ; ret 0xe280
0x000000000040aa40 : xchg eax, esp ; ret 0xf45
0x0000000000428858 : xchg eax, r12d ; iretd ; sbb al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000444df9 : xchg eax, r12d ; jmp 0x445869
0x000000000042e7a4 : xlatb ; outsd dx, dword ptr [rsi] ; mov byte ptr [rbp + 0x21], al ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041662e : xlatb ; ret 0x2144
0x000000000041663b : xlatb ; ret 0x2145
0x0000000000416625 : xlatb ; ret 0x8944
0x000000000042dc06 : xlatb ; sub dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000042dbd4 : xlatb ; sub dword ptr [rbp - 0x77], eax ; ret
0x0000000000413273 : xor ah, byte ptr [rdi + 0x190aa7b9] ; ret 0x558a
0x00000000004085e3 : xor al, 0x25 ; insd dword ptr [rdi], dx ; test byte ptr [rax + rax + 0x48], -0x77 ; ret 0xfe8
0x0000000000420294 : xor al, 0x25 ; mov eax, 0x810044fa ; ret 0x24c7
0x0000000000404b87 : xor al, 0x25 ; ret
0x0000000000418527 : xor al, 0xffffffffffffffd6 ; fild word ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004184f5 : xor al, 0xffffffffffffffd6 ; fild word ptr [rbp - 0x77] ; ret
0x000000000042813d : xor al, 0xfffffffffffffffa ; add byte ptr [rcx - 0x7629d63a], r9b ; ret 0xca29
0x0000000000450d21 : xor al, 0xffffffffffffffff ; jmp rsi
0x0000000000401c24 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043e959 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000045018d : xor bh, bh ; call qword ptr [rax]
0x000000000045017d : xor bh, bh ; call rax
0x000000000040a88c : xor bl, 0x83 ; ret 0x1b2
0x000000000040a130 : xor bl, 0x83 ; ret 0x8589
0x000000000040a8a5 : xor bl, 0x83 ; ret 0x8b48
0x00000000004331f7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004331f8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000430921 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415719 : xor dl, bh ; add byte ptr [rcx - 0x7629d63a], r9b ; ret 0xca29
0x000000000040b8ca : xor dword ptr [rax + 0x29], ecx ; ret 0x8148
0x000000000040b8de : xor dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000041944e : xor eax, 0x21450cb5 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041656b : xor eax, 0x2145389e ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041d009 : xor eax, 0x2145768b ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041941c : xor eax, 0x89450cb5 ; ret
0x0000000000416539 : xor eax, 0x8945389e ; ret
0x000000000041cfd7 : xor eax, 0x8945768b ; ret
0x00000000004501bd : xor edi, edi ; call rax
