0x0000000000432d59 : adc al, -1 ; call rdx
0x0000000000432c54 : adc al, 6 ; add byte ptr [rax], al ; call 0xffffffffd8432b74
0x000000000040fc88 : adc al, ch ; ret 0xff19
0x0000000000432c59 : adc bh, bh ; call rdi
0x000000000043232c : adc bh, ch ; std ; jmp rax
0x00000000004123cb : adc byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041164f : adc ch, cl ; ret
0x000000000041ebde : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040ca17 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000425663 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000042579b : adc cl, byte ptr [rax - 0x7f] ; ret 0x70
0x00000000004258ae : adc cl, byte ptr [rax - 0x7f] ; ret 0xc8
0x000000000040d572 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004298fb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f6db : adc eax, 0x558abda1 ; ret
0x0000000000422cb9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043236d : adc esi, edi ; jmp rax
0x000000000042f09a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004323f3 : add al, al ; sbb al, -1 ; call qword ptr [rax]
0x0000000000427722 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000432c57 : add al, ch ; adc bh, bh ; call rdi
0x0000000000406205 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0x00000000004285d8 : add al, ch ; ret 0xfd92
0x00000000004324b3 : add al, dh ; jae 0x4324ba ; jmp qword ptr [rax]
0x0000000000432523 : add al, dh ; xchg bh, bh ; jmp rax
0x0000000000404b0b : add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x00000000004295d4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000426456 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x000000000041f519 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043152f : add bl, dh ; ret
0x0000000000411d9b : add byte ptr [r13 - 0x77], al ; ret 0x8141
0x0000000000431202 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000431464 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000432e9b : add byte ptr [rax + rcx], bl ; add byte ptr [rax], al ; and bh, bh ; jmp rdi
0x00000000004322fb : add byte ptr [rax - 0x25], dl ; std ; jmp qword ptr [rax]
0x0000000000423c7b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f951 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040e3b5 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000043227b : add byte ptr [rax - 7], dl ; cld ; jmp qword ptr [rax]
0x0000000000432e3f : add byte ptr [rax], ah ; sbb edi, edi ; jmp qword ptr [rbx]
0x0000000000432c52 : add byte ptr [rax], al ; adc al, 6 ; add byte ptr [rax], al ; call 0xffffffffd8432b76
0x000000000043232a : add byte ptr [rax], al ; adc bh, ch ; std ; jmp rax
0x000000000043236b : add byte ptr [rax], al ; adc esi, edi ; jmp rax
0x00000000004295d2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043152d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040fd79 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040e3b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000043152b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043152c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411da4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000040fd0e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000411392 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000422722 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408742 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6b2d9845], cl ; popfq ; ret 0x892c
0x0000000000401cc0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1bd20fbb], cl ; ret
0x0000000000401c7e : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd20fbb], cl ; ret
0x0000000000427d93 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000402124 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3fd21bbb], cl ; ret 0x590b
0x000000000042ac9c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042a6f9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040e5f0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000431203 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000431465 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000429540 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004305d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042e901 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f6e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404dcd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e615 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004294ca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405030 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004327a2 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rax], bh ; leave ; std ; call qword ptr [rax]
0x0000000000422cbb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422340 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004298fd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402020 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411119 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401623 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000432a62 : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; cwde ; or edi, esi ; call qword ptr [rdx]
0x0000000000432e9f : add byte ptr [rax], al ; and bh, bh ; jmp rdi
0x0000000000406204 : add byte ptr [rax], al ; call 0x4124b4
0x0000000000432c56 : add byte ptr [rax], al ; call 0xffffffffd8432b72
0x00000000004327a6 : add byte ptr [rax], al ; cmp cl, cl ; std ; call qword ptr [rax]
0x0000000000432a66 : add byte ptr [rax], al ; cwde ; or edi, esi ; call qword ptr [rdx]
0x0000000000432f1a : add byte ptr [rax], al ; fmul qword ptr [rax] ; add byte ptr [rax], al ; ror byte ptr [rbx - 1], 1 ; jmp rsi
0x0000000000401659 : add byte ptr [rax], al ; jmp 0x401639
0x0000000000431248 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040faf1 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040fd7a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004323e2 : add byte ptr [rax], al ; nop ; sbb bh, bh ; call rax
0x0000000000401ef2 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422723 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040610f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000432e9a : add byte ptr [rax], al ; pop rsp ; or byte ptr [rax], al ; add byte ptr [rax], al ; and bh, bh ; jmp rdi
0x0000000000432432 : add byte ptr [rax], al ; push rax ; and edi, edi ; call qword ptr [rax]
0x00000000004324e2 : add byte ptr [rax], al ; push rax ; jge 0x4324eb ; jmp rax
0x000000000043227a : add byte ptr [rax], al ; push rax ; stc ; cld ; jmp qword ptr [rax]
0x000000000043152e : add byte ptr [rax], al ; ret
0x0000000000432f1e : add byte ptr [rax], al ; ror byte ptr [rbx - 1], 1 ; jmp rsi
0x0000000000432886 : add byte ptr [rax], al ; sub ch, dl ; std ; call qword ptr [rcx]
0x00000000004327a7 : add byte ptr [rax], bh ; leave ; std ; call qword ptr [rax]
0x000000000043232b : add byte ptr [rax], dl ; out dx, eax ; std ; jmp rax
0x0000000000411da6 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x0000000000424f3c : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000411d9c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040fd10 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000411394 : add byte ptr [rbx + 0x3f2dd045], cl ; call rax
0x0000000000422724 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406110 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407d69 : add byte ptr [rbx + 0x5d2db445], cl ; mul edx ; ret 0x8589
0x0000000000407db4 : add byte ptr [rbx + 0x5e2db445], cl ; mul edx ; ret 0x8589
0x00000000004086f9 : add byte ptr [rbx + 0x6a2d9845], cl ; popfq ; ret 0x892c
0x0000000000408744 : add byte ptr [rbx + 0x6b2d9845], cl ; popfq ; ret 0x892c
0x0000000000401cc2 : add byte ptr [rbx - 0x1bd20fbb], cl ; ret
0x0000000000401c80 : add byte ptr [rbx - 0x1cd20fbb], cl ; ret
0x0000000000427d95 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000427d4a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000402126 : add byte ptr [rbx - 0x3fd21bbb], cl ; ret 0x590b
0x000000000042ac9e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000431249 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042a6fb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040e5f2 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004327a3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], bh ; leave ; std ; call qword ptr [rax]
0x000000000042963e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401b78 : add byte ptr [rcx], al ; ret
0x0000000000431205 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000431467 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000429542 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004305d3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042e903 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042f6ea : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404dcf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e617 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004294cc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405032 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004322b8 : add byte ptr [rip + 0x6a800000], al ; std ; jmp qword ptr [rax]
0x0000000000412924 : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000432c53 : add byte ptr [rsi + rax], dl ; add byte ptr [rax], al ; call 0xffffffffd8432b75
0x0000000000432a63 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; cwde ; or edi, esi ; call qword ptr [rdx]
0x000000000041f64c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000427f9d : add cl, ch ; ret
0x00000000004074e0 : add cl, ch ; ret 1
0x00000000004327a5 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; leave ; std ; call qword ptr [rax]
0x0000000000426bf0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004086f7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x6a2d9845], cl ; popfq ; ret 0x892c
0x00000000004082ca : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430752 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000411ddc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f78e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004327a4 : add dword ptr fs:[rax], eax ; add byte ptr [rax], bh ; leave ; std ; call qword ptr [rax]
0x0000000000401b74 : add eax, 0x2327be ; add ebx, esi ; ret
0x00000000004322b9 : add eax, 0x6a800000 ; std ; jmp qword ptr [rax]
0x00000000004322e9 : add eax, 0xd8a00000 ; std ; jmp rax
0x0000000000406203 : add eax, dword ptr [rax] ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0x0000000000432279 : add eax, dword ptr [rax] ; add byte ptr [rax - 7], dl ; cld ; jmp qword ptr [rax]
0x0000000000401b3b : add eax, edx ; sar rax, 1 ; jne 0x401b4c ; pop rbp ; ret
0x0000000000401b79 : add ebx, esi ; ret
0x0000000000406134 : add edi, eax ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000404b22 : add edi, eax ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x0000000000422cbe : add esp, 0x10 ; pop rbp ; ret
0x000000000042963c : add esp, 0x100 ; pop rbp ; ret
0x0000000000412a2b : add esp, 0x130 ; pop rbp ; ret
0x0000000000406eae : add esp, 0x140 ; pop rbp ; ret
0x0000000000408c52 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000410ecd : add esp, 0x20 ; pop rbp ; ret
0x000000000040f449 : add esp, 0x40 ; pop rbp ; ret
0x000000000042f299 : add esp, 0x440 ; pop rbp ; ret
0x0000000000402023 : add esp, 0x50 ; pop rbp ; ret
0x000000000040f2c9 : add esp, 0x60 ; pop rbp ; ret
0x000000000041111c : add esp, 0x70 ; pop rbp ; ret
0x0000000000411764 : add esp, 0x78 ; pop rbp ; ret
0x0000000000401eee : add esp, 0x80 ; pop rbp ; ret
0x0000000000429f7d : add esp, 0x90 ; pop rbp ; ret
0x0000000000424e16 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000422c1b : add esp, 0xb0 ; pop rbp ; ret
0x0000000000412fca : add esp, 0xd0 ; pop rbp ; ret
0x0000000000427ab6 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042c69f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000407a7b : add esp, 0xf8 ; pop rbp ; ret
0x00000000004135d3 : add esp, 8 ; pop rbp ; ret
0x0000000000401626 : add esp, 8 ; ret
0x0000000000401b3a : add rax, rdx ; sar rax, 1 ; jne 0x401b4d ; pop rbp ; ret
0x0000000000422cbd : add rsp, 0x10 ; pop rbp ; ret
0x000000000042963b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000412a2a : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406ead : add rsp, 0x140 ; pop rbp ; ret
0x0000000000408c51 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000410ecc : add rsp, 0x20 ; pop rbp ; ret
0x000000000040f448 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042f298 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000402022 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2c8 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041111b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000411763 : add rsp, 0x78 ; pop rbp ; ret
0x0000000000401eed : add rsp, 0x80 ; pop rbp ; ret
0x0000000000429f7c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000424e15 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000422c1a : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000412fc9 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000427ab5 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042c69e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000407a7a : add rsp, 0xf8 ; pop rbp ; ret
0x00000000004135d2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401625 : add rsp, 8 ; ret
0x000000000043120d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000411ddb : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f78d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432a64 : and al, 4 ; add byte ptr [rax], al ; cwde ; or edi, esi ; call qword ptr [rdx]
0x0000000000432ea1 : and bh, bh ; jmp rdi
0x000000000042a42b : and byte ptr [rsi + 0x58], ah ; jb 0x42a462 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040cb61 : and eax, 0x24b80000 ; ret
0x000000000041e881 : and eax, 0x75b4b9d3 ; ret
0x0000000000401b77 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000432435 : and edi, edi ; call qword ptr [rax]
0x0000000000402282 : call 0x401719
0x0000000000402266 : call 0x4019b9
0x0000000000406206 : call 0x4124b2
0x000000000042a825 : call 0x42a8e9
0x000000000042b23d : call 0xffffffffaca37471
0x000000000042b23c : call 0xffffffffaca37472
0x0000000000432c58 : call 0xffffffffd8432b70
0x0000000000422339 : call 0xffffffffe904ac89
0x0000000000422338 : call 0xffffffffe904ac8a
0x0000000000431509 : call qword ptr [r12 + rbx*8]
0x00000000004323f7 : call qword ptr [rax]
0x000000000040cfdc : call qword ptr [rbx]
0x0000000000404ff1 : call qword ptr [rcx]
0x00000000004217c4 : call qword ptr [rdi]
0x000000000041d7ab : call qword ptr [rdx]
0x000000000040634a : call qword ptr [rsi]
0x000000000043150a : call qword ptr [rsp + rbx*8]
0x0000000000401b9d : call rax
0x000000000040dead : call rcx
0x000000000040e4a1 : call rdi
0x000000000040ecaf : call rdx
0x000000000040ef16 : call rsi
0x000000000040fcbb : call rsp
0x0000000000412a29 : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000042f297 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000429b87 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042bc29 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401b3f : clc ; jne 0x401b48 ; pop rbp ; ret
0x000000000040f0e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000423c7f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ea23 : clc ; pop rbx ; pop rbp ; ret
0x0000000000414e0d : clc ; ret 0x77a8
0x000000000042b87e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042c69d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000432276 : cld ; dec eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 7], dl ; cld ; jmp qword ptr [rax]
0x000000000040fd3f : cld ; jmp 0x40fdac
0x000000000040fd3e : cld ; jmp 0x40fdad
0x000000000043227e : cld ; jmp qword ptr [rax]
0x0000000000425834 : cld ; sbb al, -0x47 ; ret 0x8e0f
0x000000000042a430 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043120c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042934b : cmc ; ret 0x4f0b
0x000000000040226d : cmp al, 0x25 ; ret
0x00000000004294e1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004327a8 : cmp cl, cl ; std ; call qword ptr [rax]
0x000000000040dedc : cmp eax, 0xbb9b246 ; ret
0x0000000000401afd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b10 ; pop rbp ; ret
0x000000000041f6d7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000432a68 : cwde ; or edi, esi ; call qword ptr [rdx]
0x000000000040226a : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000041ebdb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040ca14 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000040d56f : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000040d90f : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042a55d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042edf6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000404eb2 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000408ad7 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x00000000004061dc : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004088f0 : dec dword ptr [rbx - 0x1334b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004089a5 : dec dword ptr [rbx - 0x1434b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408a20 : dec dword ptr [rbx - 0x1534b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408ad1 : dec dword ptr [rbx - 0x1634b] ; dec dword ptr [rax - 0x77] ; ret 0x8844
0x0000000000408ba0 : dec dword ptr [rbx - 0x17b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408c94 : dec dword ptr [rbx - 0x1934b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040596a : dec dword ptr [rbx - 0x8c76b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000040e9b7 : dec dword ptr [rbx - 0x9db63] ; dec dword ptr [rdi] ; ret
0x000000000040df26 : dec dword ptr [rbx] ; ret
0x0000000000429346 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040e9bd : dec dword ptr [rdi] ; ret
0x0000000000405970 : dec dword ptr [rdi] ; ret 0x8589
0x000000000042771e : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000414aea : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x00000000004074da : dec dword ptr [rdi] ; test byte ptr [rsi - 0x16fffffb], ch ; ret 1
0x000000000042ec23 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000432277 : dec eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 7], dl ; cld ; jmp qword ptr [rax]
0x000000000042e879 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432278 : enter 3, 0 ; push rax ; stc ; cld ; jmp qword ptr [rax]
0x0000000000412de9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040622b : fadd st(7) ; test dword ptr [rbp + rdi*8 - 1], esp ; ljmp ptr [rax - 0x63] ; ret
0x00000000004123c8 : fdiv st(2) ; movups xmm0, xmmword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004322ed : fdivr st(5) ; jmp rax
0x000000000042f7c8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040f94d : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042a987 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000040f94e : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042a988 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000043150c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000432f1c : fmul qword ptr [rax] ; add byte ptr [rax], al ; ror byte ptr [rbx - 1], 1 ; jmp rsi
0x0000000000429833 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042aeec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004135d1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x000000000040e60f : hlt ; jbe 0x40e651 ; jmp 0x40f0da
0x0000000000401eba : hlt ; jmp 0x401f1f
0x0000000000401b10 : hlt ; pop rbp ; mov edi, 0x6342d0 ; jmp rax
0x00000000004061da : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040e9bb : idiv bh ; dec dword ptr [rdi] ; ret
0x000000000043233d : idiv ebp ; jmp qword ptr [rax]
0x0000000000402268 : idiv edi ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000042a55b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000404eb0 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040596e : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000402267 : idiv r15d ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000407ac1 : in al, -0x77 ; ret 0xca29
0x000000000040797a : in al, -1 ; ret 0x5589
0x0000000000410f48 : in al, 0x2d ; ret 0xc226
0x00000000004119e2 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000042bfe1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000407a79 : in al, 0x48 ; add esp, 0xf8 ; pop rbp ; ret
0x0000000000401cc7 : in al, 0x4e ; ret
0x0000000000406c19 : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042b2fc : in al, dx ; jmp 0x42b379
0x000000000042b2fb : in al, dx ; jmp 0x42b37a
0x00000000004082d0 : in al, dx ; pop rbp ; ret
0x0000000000404dcb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004322b7 : inc dword ptr [rax] ; add eax, 0x6a800000 ; std ; jmp qword ptr [rax]
0x00000000004064a3 : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x0000000000404846 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040d4de : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x00000000004322e7 : inc eax ; add eax, 0xd8a00000 ; std ; jmp rax
0x0000000000404feb : inc edi ; test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rcx]
0x0000000000406344 : inc edi ; test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rsi]
0x0000000000404bbc : inc edi ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x000000000040cb60 : insd dword ptr [rdi], dx ; and eax, 0x24b80000 ; ret
0x00000000004247e7 : int 0x5b
0x0000000000401b03 : ja 0x401b0a ; pop rbp ; ret
0x00000000004324b5 : jae 0x4324b8 ; jmp qword ptr [rax]
0x000000000042a42e : jb 0x42a45f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040e610 : jbe 0x40e650 ; jmp 0x40f0d9
0x000000000041164d : jbe 0x411626 ; adc ch, cl ; ret
0x0000000000401b0f : je 0x401b0d ; pop rbp ; mov edi, 0x6342d0 ; jmp rax
0x000000000041dc76 : jge 0x41dbfb ; ret 0xffd5
0x000000000041e740 : jge 0x41e720 ; shr cl, cl ; ret 0x3b
0x00000000004324e5 : jge 0x4324e8 ; jmp rax
0x000000000040165b : jmp 0x401637
0x0000000000401ebb : jmp 0x401f1e
0x00000000004052f0 : jmp 0x40656a
0x00000000004052f0 : jmp 0x40656b
0x0000000000404e07 : jmp 0x40656c
0x000000000040e894 : jmp 0x40f0d7
0x000000000040cb5f : jmp 0x40f0d8
0x000000000040f6dd : jmp 0x40f9cc
0x000000000040fd40 : jmp 0x40fdab
0x000000000041ee90 : jmp 0x422310
0x000000000041cd94 : jmp 0x422311
0x000000000041e161 : jmp 0x422312
0x000000000042876b : jmp 0x4291d7
0x00000000004286a8 : jmp 0x4291d9
0x000000000042a7d3 : jmp 0x42a838
0x000000000042b2fd : jmp 0x42b378
0x000000000042f136 : jmp 0x42f418
0x000000000042934a : jmp 0x4f4e5646
0x0000000000410f04 : jmp 0xffffffffb60335cd
0x0000000000421c65 : jmp qword ptr [rax]
0x0000000000405485 : jmp qword ptr [rbp + 0x48c2f68a]
0x0000000000427100 : jmp qword ptr [rbx]
0x0000000000413a62 : jmp qword ptr [rcx]
0x000000000041f917 : jmp qword ptr [rdi]
0x000000000040613a : jmp qword ptr [rdx]
0x0000000000401b17 : jmp rax
0x000000000041e268 : jmp rbx
0x000000000040eb75 : jmp rcx
0x0000000000404b11 : jmp rdi
0x0000000000401b57 : jmp rdx
0x000000000040ed60 : jmp rsi
0x000000000041e578 : jmp rsp
0x0000000000401b40 : jne 0x401b47 ; pop rbp ; ret
0x000000000040c6ab : jo 0x40c63a ; ret 0x124
0x000000000041111e : jo 0x41117f ; ret
0x0000000000411c9c : jo 0x411cfd ; ret
0x0000000000417b8e : jo 0x417b9a ; ret
0x00000000004197fe : jo 0x41980a ; ret
0x000000000041cd4d : jo 0x41cd59 ; ret
0x0000000000424034 : jo 0x424095 ; ret
0x0000000000401c85 : jrcxz 0x401cd7 ; ret
0x0000000000411766 : js 0x4117c7 ; ret
0x00000000004270f1 : js 0x427115 ; ret 0x841
0x000000000041e73e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041f83e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000410546 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414485 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000424329 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ea21 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414484 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ea20 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004327a9 : leave ; std ; call qword ptr [rax]
0x000000000040c6a7 : ljmp ptr [rax + rsi*8 + 0x458a7088] ; ret 0x124
0x0000000000406231 : ljmp ptr [rax - 0x63] ; ret
0x000000000041d09e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004323f0 : lock or dword ptr [rax], eax ; add al, al ; sbb al, -1 ; call qword ptr [rax]
0x00000000004082c9 : loope 0x4082d5 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e3b1 : loope 0x40e3c1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004200a5 : loope 0x420073 ; jmp 0x422313
0x0000000000410ecb : loopne 0x410f1b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410eca : loopne 0x410f1c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000414483 : loopne 0x4144d6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423a2d : loopne 0x423a93 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424e14 : loopne 0x424e67 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000427ab8 : loopne 0x427abf ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429e93 : loopne 0x429e9c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a81e : loopne 0x42a86e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042a81d : loopne 0x42a86f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042aef0 : loopne 0x42aef7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b882 : loopne 0x42b889 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043124c : loopne 0x43129b ; mov esp, ebp ; pop rbp ; ret
0x000000000043124b : loopne 0x43129c ; mov esp, ebp ; pop rbp ; ret
0x000000000043149c : loopne 0x4314eb ; mov esp, ebp ; pop rbp ; ret
0x000000000043149b : loopne 0x4314ec ; mov esp, ebp ; pop rbp ; ret
0x00000000004325b5 : loopne 0x4325b8 ; jmp qword ptr [rax]
0x00000000004334c1 : loopne 0x4334c4 ; call qword ptr [rax]
0x000000000041dc6d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd47 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000407d6c : mov ah, 0x2d ; pop rbp ; mul edx ; ret 0x8589
0x0000000000407db7 : mov ah, 0x2d ; pop rsi ; mul edx ; ret 0x8589
0x0000000000407ca4 : mov ah, 0x2d ; ret
0x0000000000402210 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041bcf5 : mov ah, 0x75 ; ret
0x0000000000424803 : mov al, -0x47 ; ret
0x000000000042e8ff : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000422c1d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411d99 : mov al, 0x1d ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x00000000004323e0 : mov al, 9 ; add byte ptr [rax], al ; nop ; sbb bh, bh ; call rax
0x000000000042fabd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f78a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f9ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004259c7 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415695 : mov bl, 0x75 ; ret
0x000000000040c6aa : mov byte ptr [rax - 0x76], dh ; ret 0x124
0x000000000040f0e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401b73 : mov byte ptr [rip + 0x2327be], 1 ; ret
0x000000000041d4ef : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000406200 : mov dh, -0x17 ; pop rsi ; add eax, dword ptr [rax] ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0x000000000040ea1e : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004082cc : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430754 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000411dde : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f790 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004033b0 : mov dh, dh ; ret 0x8589
0x00000000004054e1 : mov dh, dh ; ret 0x8948
0x0000000000405487 : mov dh, dh ; ret 0x8b48
0x000000000043120a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000430481 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000413c09 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004137df : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b2fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x42b37b
0x0000000000410ec9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f6da : mov dword ptr [rbp - 0x2c], eax ; jmp 0x40f9cf
0x000000000040220e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428768 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4291da
0x0000000000429831 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413ee6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413a8d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040d3d6 : mov eax, 0x4c131b5c ; ret 0x14af
0x000000000040f950 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a69b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f445 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f2c5 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a86e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410b4e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b175 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413c0c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004119e0 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a81c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043124a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411760 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000040faf4 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000413a8f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004135cf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000423c7d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413a8e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004204a8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401b9b : mov ebp, esp ; call rax
0x0000000000401b01 : mov ebp, esp ; ja 0x401b0c ; pop rbp ; ret
0x0000000000405858 : mov ecx, 0x56b958a4 ; push rsi ; xchg eax, ecx ; ret
0x00000000004137dc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401b95 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x0000000000401b12 : mov edi, 0x6342d0 ; jmp rax
0x0000000000401b52 : mov edi, 0x6342d0 ; jmp rdx
0x000000000041cd47 : mov edi, 0xb8000055 ; wait ; jo 0x41cd5f ; ret
0x0000000000431507 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000431506 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040d3c6 : mov edx, 0x4c131b5c ; ret 0x14af
0x000000000042f0ae : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041d50b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000040f84a : mov edx, 0x62dcc748 ; ret 0x6c82
0x000000000040e613 : mov edx, 0xb800000a ; ret 0x5c2c
0x0000000000401b75 : mov esi, 0x1002327 ; ret
0x000000000041e382 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042f097 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401b50 : mov esi, eax ; mov edi, 0x6342d0 ; jmp rdx
0x0000000000407c9e : mov esp, 0x8b000002 ; mov r12b, 0x2d ; ret
0x00000000004082cf : mov esp, ebp ; pop rbp ; ret
0x0000000000413ee5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407d6b : mov r12b, 0x2d ; pop rbp ; mul edx ; ret 0x8589
0x0000000000407db6 : mov r12b, 0x2d ; pop rsi ; mul edx ; ret 0x8589
0x0000000000407ca3 : mov r12b, 0x2d ; ret
0x000000000040220f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040f94f : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a69a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f444 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f2c4 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a86d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410b4d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a81b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041175f : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000040faf3 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000423c7c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401b9a : mov rbp, rsp ; call rax
0x0000000000401b00 : mov rbp, rsp ; ja 0x401b0d ; pop rbp ; ret
0x0000000000401b4f : mov rsi, rax ; mov edi, 0x6342d0 ; jmp rdx
0x00000000004082ce : mov rsp, rbp ; pop rbp ; ret
0x000000000042a431 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000418fe8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004033af : movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, dh ; ret 0x8589
0x000000000041c235 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000403aaf : movsd dword ptr [rdi], dword ptr [rsi] ; mov dh, dh ; ret 0x8589
0x00000000004054e0 : movsd dword ptr [rdi], dword ptr [rsi] ; mov dh, dh ; ret 0x8948
0x0000000000405486 : movsd dword ptr [rdi], dword ptr [rsi] ; mov dh, dh ; ret 0x8b48
0x0000000000406207 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0x00000000004123c9 : movsd xmm0, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004123ca : movups xmm0, xmmword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430753 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000411ddd : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f78f : movzx eax, al ; pop rbp ; ret
0x000000000040f0ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040ea1d : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004082cb : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004081af : mul edx ; ret 0x3db9
0x0000000000407d6f : mul edx ; ret 0x8589
0x000000000042eea8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004154d5 : nop ; ret
0x00000000004238e2 : nop ; ret 0x148
0x00000000004238f6 : nop ; ret 0x2948
0x00000000004323e4 : nop ; sbb bh, bh ; call rax
0x0000000000431528 : nop dword ptr [rax + rax] ; ret
0x000000000041dc6a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd44 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411d97 : or al, 0xffffffffffffff95 ; mov al, 0x1d ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x0000000000426910 : or byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x00000000004137e0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000426454 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x0000000000432e9d : or byte ptr [rax], al ; add byte ptr [rax], al ; and bh, bh ; jmp rdi
0x0000000000427d48 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000411bec : or cl, ch ; ret 0
0x000000000040d3c4 : or dword ptr [rax - 0x46], ecx ; pop rsp ; sbb edx, dword ptr [rbx] ; ret 0x14af
0x000000000040d912 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000413ee4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004323f1 : or dword ptr [rax], eax ; add al, al ; sbb al, -1 ; call qword ptr [rax]
0x000000000040610e : or dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000413a8b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000432a69 : or edi, esi ; call qword ptr [rdx]
0x000000000041f64b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042f78c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432969 : out dx, al ; std ; jmp rax
0x000000000042fabf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424802 : out dx, eax ; mov al, -0x47 ; ret
0x000000000043232d : out dx, eax ; std ; jmp rax
0x000000000042f099 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000420735 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000415386 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420780 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004295d1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042f09c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042a42c : pop ax ; jb 0x42a461 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004215e9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043151c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423a2f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004215eb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043151e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004215ed : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000431520 : pop r14 ; pop r15 ; ret
0x0000000000406112 : pop r14 ; pop rbp ; ret
0x00000000004215ef : pop r15 ; pop rbp ; ret
0x0000000000431522 : pop r15 ; ret
0x000000000042a42d : pop rax ; jb 0x42a460 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000404b08 : pop rax ; sbb al, byte ptr [rax] ; add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x00000000004322ad : pop rax ; std ; jmp rax
0x0000000000401b72 : pop rbp ; mov byte ptr [rip + 0x2327be], 1 ; ret
0x0000000000401b11 : pop rbp ; mov edi, 0x6342d0 ; jmp rax
0x0000000000401b4e : pop rbp ; mov rsi, rax ; mov edi, 0x6342d0 ; jmp rdx
0x0000000000407d6e : pop rbp ; mul edx ; ret 0x8589
0x000000000043151b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004215ec : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043151f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041d4f2 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004197c5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041d50e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b05 : pop rbp ; ret
0x0000000000423a2e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422725 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406111 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ea24 : pop rbx ; pop rbp ; ret
0x0000000000427d50 : pop rbx ; ret
0x000000000041d4f3 : pop rcx ; ret 0x1b2
0x0000000000417bc6 : pop rcx ; ret 0x8589
0x000000000041d50f : pop rcx ; ret 0x8b48
0x000000000041f840 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004215f0 : pop rdi ; pop rbp ; ret
0x0000000000431523 : pop rdi ; ret
0x0000000000406202 : pop rsi ; add eax, dword ptr [rax] ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0x00000000004081ae : pop rsi ; mul edx ; ret 0x3db9
0x0000000000407db9 : pop rsi ; mul edx ; ret 0x8589
0x00000000004215ee : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000431521 : pop rsi ; pop r15 ; ret
0x0000000000406113 : pop rsi ; pop rbp ; ret
0x0000000000432e9c : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax], al ; and bh, bh ; jmp rdi
0x00000000004215ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043151d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000423a30 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417bc5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000412927 : pop rsp ; ret 0xf66
0x000000000040d3c7 : pop rsp ; sbb edx, dword ptr [rbx] ; ret 0x14af
0x000000000040e893 : popfq ; jmp 0x40f0d8
0x0000000000402bb4 : popfq ; ret
0x00000000004086ff : popfq ; ret 0x892c
0x0000000000408415 : popfq ; ret 0x8b2c
0x00000000004305d5 : popfq ; ret 0xd284
0x000000000041d4f0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004086fe : push -0x63 ; ret 0x892c
0x000000000041f6da : push -0x75425eeb ; push rbp ; ret
0x000000000041c238 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004322bd : push -3 ; jmp qword ptr [rax]
0x00000000004323df : push qword ptr [rax - 0x6ffffff7] ; sbb bh, bh ; call rax
0x0000000000432434 : push rax ; and edi, edi ; call qword ptr [rax]
0x00000000004324e4 : push rax ; jge 0x4324e9 ; jmp rax
0x00000000004323ef : push rax ; or dword ptr [rax], eax ; add al, al ; sbb al, -1 ; call qword ptr [rax]
0x0000000000402025 : push rax ; pop rbp ; ret
0x000000000043227c : push rax ; stc ; cld ; jmp qword ptr [rax]
0x0000000000407979 : push rbp ; in al, -1 ; ret 0x5589
0x0000000000401b94 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x0000000000403377 : push rbp ; push rsi ; xchg eax, ecx ; ret
0x00000000004034c8 : push rbp ; ret
0x000000000041f676 : push rbp ; ret 0xd284
0x000000000042636a : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x00000000004266d6 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x70
0x0000000000426913 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x000000000041dc6f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd49 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042f09b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004263f2 : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000042729d : push rdx ; sbb byte ptr [rax - 0x7f], cl ; ret 8
0x000000000042690f : push rsi ; or byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x0000000000403ae7 : push rsi ; push rsi ; xchg eax, ecx ; ret
0x0000000000403378 : push rsi ; xchg eax, ecx ; ret
0x000000000042e905 : pushfq ; ret 0xd284
0x0000000000401629 : ret
0x0000000000406208 : ret 0
0x000000000040c6ae : ret 0x124
0x000000000040d02e : ret 0x148
0x000000000040d3cb : ret 0x14af
0x000000000042636e : ret 0x18
0x0000000000420844 : ret 0x1a
0x0000000000415abd : ret 0x1add
0x000000000041d4f5 : ret 0x1b2
0x000000000040e1f4 : ret 0x1c4f
0x0000000000401a62 : ret 0x2327
0x0000000000401862 : ret 0x2328
0x0000000000401662 : ret 0x2329
0x000000000041640a : ret 0x23da
0x00000000004055ac : ret 0x2467
0x0000000000403987 : ret 0x26
0x0000000000423108 : ret 0x279e
0x000000000040d021 : ret 0x2948
0x000000000040d01e : ret 0x294c
0x000000000040a27a : ret 0x2a
0x000000000041dc72 : ret 0x2d50
0x000000000042ebfe : ret 0x3040
0x0000000000424f3f : ret 0x3145
0x000000000042686c : ret 0x3948
0x000000000041e744 : ret 0x3b
0x00000000004081b1 : ret 0x3db9
0x000000000041b7a5 : ret 0x3e
0x000000000040eb5b : ret 0x3fe8
0x00000000004119b5 : ret 0x4589
0x000000000041ebe1 : ret 0x4802
0x000000000040ca1a : ret 0x4808
0x000000000042f09e : ret 0x4815
0x0000000000425666 : ret 0x4818
0x0000000000420736 : ret 0x4861
0x000000000041219e : ret 0x4890
0x0000000000407f8b : ret 0x48f0
0x0000000000418ff1 : ret 0x4b
0x0000000000424607 : ret 0x4cc0
0x0000000000421648 : ret 0x4cf0
0x0000000000424f4c : ret 0x4d89
0x000000000042934c : ret 0x4f0b
0x00000000004029bc : ret 0x50ee
0x0000000000425027 : ret 0x53e8
0x000000000040797c : ret 0x5589
0x00000000004020c6 : ret 0x590b
0x000000000041defa : ret 0x5966
0x0000000000427fa7 : ret 0x5bc6
0x000000000040a8fe : ret 0x5c2c
0x000000000040d83f : ret 0x5f93
0x000000000043120f : ret 0x61
0x00000000004027e0 : ret 0x644e
0x000000000040da59 : ret 0x67bd
0x0000000000415156 : ret 0x6a8a
0x000000000040f84f : ret 0x6c82
0x000000000042579e : ret 0x70
0x0000000000414e0e : ret 0x77a8
0x0000000000415f71 : ret 0x7a8a
0x000000000041cbeb : ret 0x7b7f
0x000000000042359a : ret 0x8041
0x00000000004064a6 : ret 0x8141
0x000000000042edf9 : ret 0x8148
0x000000000041eb04 : ret 0x822d
0x00000000004270f3 : ret 0x841
0x000000000040484a : ret 0x8445
0x00000000004033b2 : ret 0x8589
0x0000000000404eb5 : ret 0x858a
0x000000000040c6a1 : ret 0x85c7
0x000000000042699e : ret 0x8841
0x0000000000408ada : ret 0x8844
0x0000000000411da9 : ret 0x8845
0x0000000000408700 : ret 0x892c
0x0000000000415b83 : ret 0x8940
0x00000000004054e3 : ret 0x8948
0x000000000042714f : ret 0x8949
0x000000000042d6bf : ret 0x894a
0x0000000000415387 : ret 0x8961
0x000000000040995c : ret 0x899e
0x0000000000410f07 : ret 0x89b5
0x000000000042ecb8 : ret 0x8a44
0x000000000042ebb5 : ret 0x8a4a
0x0000000000408416 : ret 0x8b2c
0x0000000000405489 : ret 0x8b48
0x00000000004255b3 : ret 0x8e0f
0x00000000004039cf : ret 0x9cc3
0x000000000040d28d : ret 0x9de8
0x000000000041dd4c : ret 0xa30b
0x000000000042b23f : ret 0xac60
0x00000000004061df : ret 0xb0
0x00000000004119b2 : ret 0xb60f
0x000000000041f650 : ret 0xb740
0x000000000042a427 : ret 0xb848
0x000000000042685f : ret 0xb849
0x000000000041d880 : ret 0xb940
0x000000000042eb42 : ret 0xb94a
0x000000000040d88a : ret 0xb99e
0x000000000040ccdd : ret 0xbde8
0x000000000041fccc : ret 0xbf48
0x000000000040c2cb : ret 0xbff0
0x0000000000401b35 : ret 0xc148
0x0000000000410f4a : ret 0xc226
0x0000000000431452 : ret 0xc493
0x00000000004258b1 : ret 0xc8
0x000000000042f749 : ret 0xca21
0x0000000000407ac3 : ret 0xca29
0x0000000000431215 : ret 0xccb2
0x0000000000404dd2 : ret 0xd284
0x000000000040a253 : ret 0xd418
0x000000000042d305 : ret 0xd618
0x0000000000406c5f : ret 0xd729
0x00000000004055a4 : ret 0xdb99
0x00000000004306fb : ret 0xe280
0x000000000042f2f8 : ret 0xe2e8
0x000000000041f522 : ret 0xe940
0x0000000000420781 : ret 0xe961
0x00000000004165ad : ret 0xea51
0x0000000000431207 : ret 0xea81
0x000000000042233c : ret 0xee8
0x0000000000413a75 : ret 0xf281
0x000000000041e387 : ret 0xf41
0x0000000000412928 : ret 0xf66
0x0000000000409992 : ret 0xf6bb
0x00000000004202d5 : ret 0xf7f3
0x000000000040ba9a : ret 0xfbe5
0x000000000041ea5e : ret 0xfc75
0x00000000004285da : ret 0xfd92
0x000000000040fc8a : ret 0xff19
0x00000000004202cf : ret 0xffa5
0x000000000041ea58 : ret 0xffc4
0x000000000041dc78 : ret 0xffd5
0x000000000041dd52 : ret 0xffd8
0x000000000041eb0a : ret 0xffd9
0x000000000041def4 : ret 0xffe0
0x000000000040d839 : ret 0xfff4
0x000000000041cbe5 : ret 0xfffa
0x00000000004074e2 : ret 1
0x000000000041275f : ret 2
0x000000000040709d : ret 4
0x000000000040e3be : ret 8
0x000000000042f07d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042bb9c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412fcc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432368 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; adc esi, edi ; jmp rax
0x00000000004322e8 : rol byte ptr [rip - 0x27600000], -3 ; jmp rax
0x0000000000432328 : rol byte ptr [rsi], 0 ; add byte ptr [rax], dl ; out dx, eax ; std ; jmp rax
0x000000000042f07c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000042a424 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401b3c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b4b ; pop rbp ; ret
0x0000000000411ddf : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000042636b : ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x00000000004266d7 : ror byte ptr [rax - 0x7f], 1 ; ret 0x70
0x0000000000426914 : ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x000000000042714c : ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x0000000000432f20 : ror byte ptr [rbx - 1], 1 ; jmp rsi
0x0000000000413a8a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040610d : ror byte ptr [rcx], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004119af : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x00000000004324e0 : ror byte ptr [rip + 0x7d500000], -1 ; jmp rax
0x0000000000432520 : ror byte ptr [rsi], 0 ; add al, dh ; xchg bh, bh ; jmp rax
0x000000000040d3d4 : ror dword ptr [rax - 0x48], 0x5c ; sbb edx, dword ptr [rbx] ; ret 0x14af
0x000000000040ea1f : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004082cd : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000042eeae : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004244c0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042f6ec : sahf ; ret 0xd284
0x000000000040ca11 : sar dh, -1 ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000401b3e : sar eax, 1 ; jne 0x401b49 ; pop rbp ; ret
0x000000000041f841 : sar ebp, -0x17 ; ret 0x2a
0x0000000000432575 : sar edi, cl ; jmp qword ptr [rax]
0x0000000000401b3d : sar rax, 1 ; jne 0x401b4a ; pop rbp ; ret
0x0000000000425837 : sbb al, -0x47 ; ret 0x8e0f
0x00000000004323f5 : sbb al, -1 ; call qword ptr [rax]
0x0000000000424800 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000404b09 : sbb al, byte ptr [rax] ; add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x00000000004323e5 : sbb bh, bh ; call rax
0x00000000004266d3 : sbb byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x70
0x000000000042731b : sbb byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0xc8
0x00000000004263f3 : sbb byte ptr [rax - 0x7f], cl ; ret 1
0x000000000042729e : sbb byte ptr [rax - 0x7f], cl ; ret 8
0x000000000041f741 : sbb cl, ch ; ret
0x0000000000404b85 : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x0000000000429c73 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411d9a : sbb eax, 0x89450043 ; ret 0x8141
0x0000000000411c95 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423850 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000405857 : sbb edi, dword ptr [rcx + 0x56b958a4] ; push rsi ; xchg eax, ecx ; ret
0x0000000000432e41 : sbb edi, edi ; jmp qword ptr [rbx]
0x000000000040d3c8 : sbb edx, dword ptr [rbx] ; ret 0x14af
0x000000000041293a : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041e742 : shr cl, cl ; ret 0x3b
0x000000000043227d : stc ; cld ; jmp qword ptr [rax]
0x000000000041c57d : stc ; ret 0x77a8
0x00000000004327aa : std ; call qword ptr [rax]
0x000000000043288a : std ; call qword ptr [rcx]
0x00000000004322b6 : std ; inc dword ptr [rax] ; add eax, 0x6a800000 ; std ; jmp qword ptr [rax]
0x00000000004322e6 : std ; inc eax ; add eax, 0xd8a00000 ; std ; jmp rax
0x00000000004322be : std ; jmp qword ptr [rax]
0x00000000004322ae : std ; jmp rax
0x0000000000423107 : std ; ret 0x279e
0x000000000040583c : std ; sub al, -0x47 ; push rsi ; push rsi ; xchg eax, ecx ; ret
0x000000000040583e : sub al, -0x47 ; push rsi ; push rsi ; xchg eax, ecx ; ret
0x000000000040fe8e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004263dc : sub byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x18
0x000000000042b346 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fd78 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041dc75 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000432888 : sub ch, dl ; std ; call qword ptr [rcx]
0x000000000041dc6b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041dd45 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041eb05 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000042a42f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000431581 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000431580 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004285d6 : test al, -0x50 ; add al, ch ; ret 0xfd92
0x000000000041dc70 : test al, -0x7f ; ret 0x2d50
0x000000000041dd4a : test al, -0x7f ; ret 0xa30b
0x000000000042e953 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d02c : test al, 0x1e ; ret 0x148
0x000000000040d01c : test al, 0x1e ; ret 0x294c
0x0000000000423ede : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004204a6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004294c8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000427720 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043152a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414aec : test byte ptr [rcx], ch ; ret 0
0x00000000004074dc : test byte ptr [rsi - 0x16fffffb], ch ; ret 1
0x0000000000414ae6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000404fed : test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rcx]
0x0000000000406346 : test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rsi]
0x0000000000405481 : test dword ptr [rbp + rdi*8 - 1], esp ; jmp qword ptr [rbp + 0x48c2f68a]
0x0000000000406136 : test dword ptr [rbp + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000404b0d : test dword ptr [rbp + rdi*8 - 1], esp ; jmp rdi
0x000000000040622d : test dword ptr [rbp + rdi*8 - 1], esp ; ljmp ptr [rax - 0x63] ; ret
0x00000000004295d6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000426458 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x0000000000423afa : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000402ca9 : test dword ptr [rdi*8 + 0x302dffff], ebx ; ret
0x00000000004041a9 : test dword ptr [rdi*8 + 0x312dffff], ebx ; ret
0x00000000004027d9 : test dword ptr [rdi*8 + 0x472dffff], ebx ; ret 0x644e
0x0000000000404679 : test dword ptr [rdi*8 + 0x482dffff], ebx ; ret 0x644e
0x00000000004029b5 : test dword ptr [rdi*8 + 0x4e2dffff], ebx ; ret 0x50ee
0x000000000040449d : test dword ptr [rdi*8 + 0x4f2dffff], ebx ; ret 0x50ee
0x0000000000403371 : test dword ptr [rdi*8 + 0x552dffff], ebx ; push rsi ; xchg eax, ecx ; ret
0x0000000000403ae1 : test dword ptr [rdi*8 + 0x562dffff], ebx ; push rsi ; xchg eax, ecx ; ret
0x0000000000402bad : test dword ptr [rdi*8 + 0x672dffff], ebx ; popfq ; ret
0x00000000004042a5 : test dword ptr [rdi*8 + 0x682dffff], ebx ; popfq ; ret
0x000000000040377d : test dword ptr [rdi*8 - 0x1ed20001], ebx ; ret
0x00000000004036d5 : test dword ptr [rdi*8 - 0x1fd20001], ebx ; ret
0x0000000000403991 : test dword ptr [rdi*8 - 0x25d20001], ebx ; push rbp ; ret
0x00000000004034c1 : test dword ptr [rdi*8 - 0x26d20001], ebx ; push rbp ; ret
0x00000000004039c9 : test dword ptr [rdi*8 - 0x3dd20001], ebx ; ret
0x0000000000403489 : test dword ptr [rdi*8 - 0x3ed20001], ebx ; ret
0x0000000000403aa9 : test dword ptr [rdi*8 - 0x5ad20001], ebx ; mov dh, dh ; ret 0x8589
0x00000000004033a9 : test dword ptr [rdi*8 - 0x5bd20001], ebx ; mov dh, dh ; ret 0x8589
0x000000000041f51b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042077a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041c23a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000042072f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041e73f : wait ; jge 0x41e721 ; shr cl, cl ; ret 0x3b
0x00000000004197fd : wait ; jo 0x41980b ; ret
0x000000000041cd4c : wait ; jo 0x41cd5a ; ret
0x0000000000432525 : xchg bh, bh ; jmp rax
0x000000000042f098 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000411d98 : xchg eax, ebp ; mov al, 0x1d ; add byte ptr [r13 - 0x77], al ; ret 0x8141
0x0000000000404849 : xchg eax, ebp ; ret 0x8445
0x0000000000404dd1 : xchg eax, ebp ; ret 0xd284
0x0000000000415385 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041bc85 : xchg eax, ebx ; ret
0x0000000000412848 : xchg eax, ebx ; ret 0xd284
0x0000000000403379 : xchg eax, ecx ; ret
0x000000000042e619 : xchg eax, edi ; ret 0xd284
0x000000000040e9a6 : xchg eax, edx ; ret
0x00000000004235af : xchg eax, edx ; ret 0x8445
0x00000000004294ce : xchg eax, edx ; ret 0xd284
0x000000000042876a : xchg eax, esp ; jmp 0x4291d8
0x00000000004286a7 : xchg eax, esp ; jmp 0x4291da
0x0000000000420734 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041c005 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042077f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000423599 : xchg eax, esp ; ret 0x8041
0x000000000040d4e1 : xchg eax, esp ; ret 0x8445
0x00000000004119b1 : xchg eax, esp ; ret 0xb60f
0x000000000041f64e : xchg eax, esp ; ret 0xb740
0x0000000000405034 : xchg eax, esp ; ret 0xd284
0x0000000000428769 : xchg eax, r12d ; jmp 0x4291d9
0x000000000040583b : xor al, 0xfffffffffffffffd ; sub al, -0x47 ; push rsi ; push rsi ; xchg eax, ecx ; ret
0x000000000041f649 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000413ee7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427148 : xor byte ptr [r9 - 0x77], cl ; ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x0000000000413ee8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427149 : xor byte ptr [rcx - 0x77], cl ; ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x0000000000412a2d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426366 : xor eax, 0x558b48f4 ; ror byte ptr [rax - 0x7f], 1 ; ret 0x18
