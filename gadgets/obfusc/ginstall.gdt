0x00000000004c1242 : adc ah, dh ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000498c64 : adc al, -0x13 ; ret
0x000000000042c7bf : adc al, -0x36 ; adc eax, 0x34ebfab9 ; ret 0x558a
0x00000000004e2aa8 : adc al, -0x71 ; sti ; jmp rsp
0x00000000004c0ee4 : adc al, -0xc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004e41d5 : adc al, 0 ; add byte ptr [rax + 0x17], cl ; clc ; call qword ptr [rdx]
0x00000000004e4c2c : adc al, 0x1f ; add byte ptr [rax], al ; adc byte ptr [rbp - 6], dl ; jmp qword ptr [rax]
0x00000000004a4c6c : adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000042ce05 : adc al, 0x4e ; add al, ch ; ret
0x00000000004e382c : adc al, 0xb ; add byte ptr [rax], al ; sal byte ptr [rax], -0xa ; call qword ptr [rbx]
0x00000000004bee02 : adc al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000438eff : adc al, ch ; sti ; ret
0x00000000004c5b09 : adc bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x000000000049ea64 : adc byte ptr [rax - 0x75], cl ; jge 0x49ea1e ; call rax
0x000000000049ea63 : adc byte ptr [rax - 0x75], cl ; jge 0x49ea1f ; call rax
0x000000000049eea0 : adc byte ptr [rax - 0x75], cl ; jge 0x49ee5a ; call rax
0x000000000049ee9f : adc byte ptr [rax - 0x75], cl ; jge 0x49ee5b ; call rax
0x00000000004e3d4d : adc byte ptr [rax], al ; add byte ptr [rax], dh ; loope 0x4e3d4f ; jmp rbx
0x00000000004e2335 : adc byte ptr [rax], al ; add byte ptr [rcx + rdx*8], al ; hlt ; call rsp
0x00000000004e4c30 : adc byte ptr [rbp - 6], dl ; jmp qword ptr [rax]
0x00000000004e4c50 : adc byte ptr [rbx - 6], dh ; jmp rsi
0x000000000040e79c : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049f0e1 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004e3600 : adc ch, cl ; cmc ; jmp rsi
0x00000000004ba254 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x000000000044d6da : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000045dab9 : adc cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb640
0x0000000000459a0c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000044ecbd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000445610 : adc cl, byte ptr [rax - 0x7f] ; ret 0x13
0x00000000004a6839 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x0000000000470871 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000044d4c4 : adc cl, byte ptr [rax - 9] ; fimul dword ptr [rax + 0x29] ; ret 0xf748
0x00000000004e2471 : adc dh, dh ; call rsp
0x000000000045e5ef : adc dh, dh ; ret 0xb901
0x000000000044b9ed : adc dl, byte ptr [rdx - 0x1464ade] ; ret
0x000000000048df1b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000047f364 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x00000000004d0a52 : adc dword ptr [rdx - 0x2b], edi ; jno 0x4d0a17 ; ror dword ptr [rcx], 1 ; ret
0x00000000004261e3 : adc dword ptr [rsi], ecx ; call 0x4024d5
0x00000000004c1eeb : adc dword ptr [rsp + rsi*8], eax ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000042c7c1 : adc eax, 0x34ebfab9 ; ret 0x558a
0x00000000004719fb : adc eax, 0x558abda1 ; ret
0x0000000000447e45 : adc eax, 0x8b000002 ; loopne 0x447e83 ; push rsi ; ret 0xc750
0x0000000000461f28 : adc eax, 0x8b1dc18f ; push rbp ; loopne 0x461eb9 ; ret 0x33f7
0x0000000000495d72 : adc eax, 0xe9000007 ; ret 1
0x00000000004c6269 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000486d73 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000458063 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000474fd9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046460c : adc eax, dword ptr [rbx - 0x76ba95ea] ; ret 0x8141
0x000000000049c72b : adc eax, ebp ; js 0x49c71c ; ret
0x00000000004e4179 : adc eax, edi ; jmp qword ptr [rdi]
0x00000000004c5c27 : adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000498c10 : adc ebp, ebp ; ret
0x000000000049cb7f : adc ebp, ecx ; ret 0
0x00000000004e36fb : add ah, ah ; or dword ptr [rax], eax ; add al, dl ; salc ; cmc ; call rdx
0x00000000004e36db : add ah, al ; or dword ptr [rax], eax ; add al, dl ; salc ; cmc ; call qword ptr [rbx]
0x00000000004e2567 : add ah, al ; ret 0xfff6
0x00000000004e4ef3 : add ah, bl ; and dword ptr [rax], eax ; add byte ptr [rax - 0x24], ch ; cli ; jmp qword ptr [rcx]
0x00000000004e3303 : add ah, ch ; add eax, 0x46180000 ; cmc ; call rbx
0x00000000004e31e3 : add ah, cl ; add al, 0 ; add byte ptr [rax - 0x6f], bh ; hlt ; jmp rdx
0x00000000004e32e3 : add ah, cl ; add eax, 0xd1180000 ; hlt ; call qword ptr [rdi]
0x00000000004e2577 : add ah, dh ; ret
0x00000000004e480b : add ah, dh ; sbb al, byte ptr [rax] ; add al, dl ; mov bl, -7 ; jmp qword ptr [rax]
0x00000000004e27a7 : add ah, dh ; stc ; call rsp
0x00000000004e2a67 : add ah, dh ; sub edi, ebx ; jmp rsp
0x00000000004e256f : add ah, dl ; ret
0x00000000004e2338 : add al, -0x2f ; hlt ; call rsp
0x00000000004c1eec : add al, -0xc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000049f112 : add al, 0 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x00000000004e31e5 : add al, 0 ; add byte ptr [rax - 0x6f], bh ; hlt ; jmp rdx
0x00000000004960ac : add al, 0 ; add byte ptr [rax - 0x75], cl ; jge 0x49608c ; call 0x4022e9
0x0000000000451370 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000042bd61 : add al, 0 ; add cl, ch ; ret 1
0x0000000000440c5b : add al, 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000445b19 : add al, 0x13 ; xor ebp, dword ptr [rax + rbp + 0x294ce11b] ; ret 0xb849
0x00000000004e551c : add al, 0x28 ; add byte ptr [rax], al ; and byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x00000000004a2b2a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004e26b0 : add al, 0xd ; clc ; jmp rsp
0x0000000000430486 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004e2a28 : add al, 5 ; sti ; jmp rsp
0x00000000004e382f : add al, al ; xor dh, dh ; call qword ptr [rbx]
0x00000000004e384f : add al, al ; xor esi, esi ; jmp qword ptr [rax]
0x00000000004c7079 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004c16e9 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004460a1 : add al, bh ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x00000000004e3327 : add al, bl ; cmc ; call rdi
0x00000000004302be : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000447e46 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x000000000040a6cf : add al, byte ptr [rax] ; add byte ptr [rbx - 0x64d237bb], cl ; ret 0xc18a
0x000000000041321d : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000047f49b : add al, byte ptr [rcx + 0xf] ; pushfq ; ret 0x8445
0x00000000004e44e7 : add al, ch ; and ecx, edi ; call qword ptr [rbx]
0x000000000042420b : add al, ch ; jmp rsi
0x0000000000403687 : add al, ch ; ret
0x000000000048ca48 : add al, ch ; ret 0xf75c
0x0000000000423f48 : add al, ch ; ret 0xfde3
0x0000000000422f48 : add al, ch ; ret 0xfdf3
0x0000000000445fac : add al, ch ; sahf ; ret
0x00000000004e480f : add al, dl ; mov bl, -7 ; jmp qword ptr [rax]
0x00000000004e36df : add al, dl ; salc ; cmc ; call qword ptr [rbx]
0x00000000004e36ff : add al, dl ; salc ; cmc ; call rdx
0x00000000004e45af : add al, dl ; stc ; jmp qword ptr [rbx]
0x000000000042ce06 : add al, r13b ; ret
0x0000000000445fab : add al, r13b ; sahf ; ret
0x0000000000452cc8 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x0000000000448104 : add bh, al ; in al, 0x57 ; ret 0xc750
0x0000000000459a28 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000047c142 : add bh, al ; mov r8b, 0x4d ; ret 0x4655
0x000000000049f114 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x000000000049eaa9 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rsp
0x000000000049f180 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x000000000049f18f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x00000000004be92d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004bd6b5 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004c2eb4 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x00000000004c5d93 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004c7283 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x00000000004c626b : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004b9cf6 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004bfb40 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004bc7b2 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x00000000004c43a7 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x00000000004c17d7 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004be68e : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004c67df : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004bcc79 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000494065 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000492531 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004924f0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000048da44 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000479697 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000439065 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdi
0x000000000045552f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045bdb0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x000000000042779d : add bh, al ; test dword ptr [rdi*8 - 0x15e70001], edi ; jmp qword ptr [rsi]
0x000000000042321e : add bh, al ; test dword ptr [rdi*8 - 0xf330001], edi ; ret 0xe90b
0x0000000000471839 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000486d75 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000458065 : add bh, al ; xchg eax, r12d ; int 6
0x000000000047f8ae : add bh, al ; xchg eax, r12d ; mov dh, 0x17 ; ret
0x00000000004df7ff : add bl, dh ; ret
0x0000000000451e34 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004c97d2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004c9a34 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004e41d7 : add byte ptr [rax + 0x17], cl ; clc ; call qword ptr [rdx]
0x00000000004e4367 : add byte ptr [rax + 0x1b], cl ; stc ; jmp qword ptr [rbx]
0x000000000045655d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000484577 : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000004c40a0 : add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000442474 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000043cf8d : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000049f111 : add byte ptr [rax + rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x000000000042c55b : add byte ptr [rax + rax], al ; add cl, ch ; ret 1
0x00000000004e551b : add byte ptr [rax + rbp], al ; add byte ptr [rax], al ; and byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x00000000004e45ab : add byte ptr [rax + rbx + 0x26d00000], dl ; stc ; jmp qword ptr [rbx]
0x00000000004e4ef7 : add byte ptr [rax - 0x24], ch ; cli ; jmp qword ptr [rcx]
0x00000000004e32c7 : add byte ptr [rax - 0x3c], bl ; hlt ; jmp rax
0x0000000000444413 : add byte ptr [rax - 0x47], cl ; add ebx, dword ptr [rdx - 0x38b2464a] ; ret 0x48cd
0x0000000000445c96 : add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x00000000004e535f : add byte ptr [rax - 0x47], dh ; sti ; call rdi
0x00000000004e3243 : add byte ptr [rax - 0x5cc80000], ch ; hlt ; jmp qword ptr [rcx]
0x00000000004e4d57 : add byte ptr [rax - 0x6c], bh ; cli ; call rdx
0x00000000004e31e7 : add byte ptr [rax - 0x6f], bh ; hlt ; jmp rdx
0x000000000047f7d4 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000048d0e5 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004a6aca : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4e20
0x0000000000459c0b : add byte ptr [rax - 0x75], cl ; call 0x49082563
0x000000000043fb00 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044dc24 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000496020 : add byte ptr [rax - 0x75], cl ; jge 0x495ffc ; call 0x4022e7
0x00000000004960ae : add byte ptr [rax - 0x75], cl ; jge 0x49608a ; call 0x4022e7
0x000000000049f031 : add byte ptr [rax - 0x75], cl ; jge 0x49efe3 ; call rax
0x000000000049f156 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffb90 ; call rax
0x0000000000403088 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004bf0df : add byte ptr [rax - 0x77], cl ; ret 0x78e8
0x00000000004c61e3 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000407eba : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004c6777 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000004a1ff4 : add byte ptr [rax - 0x77], cl ; shr r8b, 1 ; ret 0xf602
0x00000000004a1ff3 : add byte ptr [rax - 0x77], r9b ; shr r8b, 1 ; ret 0xf602
0x00000000004999c5 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x6b ; ret 0xb041
0x00000000004e37a7 : add byte ptr [rax - 4], cl ; cmc ; jmp qword ptr [rax]
0x000000000049fbae : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044b773 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004e551f : add byte ptr [rax], ah ; and al, 0xfffffffffffffffc ; jmp qword ptr [rcx]
0x00000000004e3c8f : add byte ptr [rax], ah ; ret
0x00000000004e2aa6 : add byte ptr [rax], al ; adc al, -0x71 ; sti ; jmp rsp
0x00000000004e4c2a : add byte ptr [rax], al ; adc al, 0x1f ; add byte ptr [rax], al ; adc byte ptr [rbp - 6], dl ; jmp qword ptr [rax]
0x00000000004e382a : add byte ptr [rax], al ; adc al, 0xb ; add byte ptr [rax], al ; sal byte ptr [rax], -0xa ; call qword ptr [rbx]
0x00000000004e4c2e : add byte ptr [rax], al ; adc byte ptr [rbp - 6], dl ; jmp qword ptr [rax]
0x00000000004e4c4e : add byte ptr [rax], al ; adc byte ptr [rbx - 6], dh ; jmp rsi
0x00000000004e35fe : add byte ptr [rax], al ; adc ch, cl ; cmc ; jmp rsi
0x00000000004e2336 : add byte ptr [rax], al ; add al, -0x2f ; hlt ; call rsp
0x00000000004e551a : add byte ptr [rax], al ; add al, 0x28 ; add byte ptr [rax], al ; and byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x00000000004e26ae : add byte ptr [rax], al ; add al, 0xd ; clc ; jmp rsp
0x00000000004e2a26 : add byte ptr [rax], al ; add al, 5 ; sti ; jmp rsp
0x0000000000459a26 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000047c140 : add byte ptr [rax], al ; add bh, al ; mov r8b, 0x4d ; ret 0x4655
0x000000000049f17e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x000000000049f18d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x0000000000494063 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000049252f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000048da42 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000047f8ac : add byte ptr [rax], al ; add bh, al ; xchg eax, r12d ; mov dh, 0x17 ; ret
0x00000000004df7fd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045655b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000484575 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000004c409e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000442472 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000043cf8b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000445ca7 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x0000000000459c09 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49082565
0x000000000044dc22 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000427977 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407eb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004df7fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000484573 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000048041a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000484571 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000400998 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040099a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000004a8160 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004077d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409a1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045409b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000047a80e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004df7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040099c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000049cd92 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000445af6 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; ret
0x00000000004beabb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000044b774 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000044006c : add byte ptr [rax], al ; add byte ptr [rbx + 0x12dd845], cl ; ret 0x1b4e
0x000000000042f48c : add byte ptr [rax], al ; add byte ptr [rbx + 0x202de045], cl ; ret
0x000000000044dd2d : add byte ptr [rax], al ; add byte ptr [rbx + 0x232dc845], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004595ab : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000459749 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000043fd11 : add byte ptr [rax], al ; add byte ptr [rbx + 0x292de845], cl ; ret 0xa474
0x000000000048dd30 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2b2de845], cl ; ret 0xe1a5
0x000000000044833e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043ff90 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2dd845], cl ; ret 0x1b4e
0x000000000042cab3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x412d9445], cl ; scasb al, byte ptr [rdi] ; ret
0x0000000000474a42 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044bddb : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042cc3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x422d9445], cl ; scasb al, byte ptr [rdi] ; ret
0x00000000004506e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000045080e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000047a893 : add byte ptr [rax], al ; add byte ptr [rbx + 0x482de445], cl ; hlt ; ret
0x000000000047a8d5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x492de445], cl ; hlt ; ret
0x000000000047ab95 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2da845], cl ; ret 0x4655
0x000000000040a489 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2dc845], cl ; ret
0x000000000040a891 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4d2dc845], cl ; ret
0x000000000043ff22 : add byte ptr [rax], al ; add byte ptr [rbx + 0x512dd845], cl ; ret 0x8947
0x00000000004400da : add byte ptr [rax], al ; add byte ptr [rbx + 0x522dd845], cl ; ret 0x8947
0x0000000000447e88 : add byte ptr [rax], al ; add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x0000000000412690 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000480232 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000412b65 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2de045], cl ; pop rbx ; ret 0x89c3
0x0000000000448d5c : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2dc045], cl ; ret
0x000000000044b8ea : add byte ptr [rax], al ; add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x000000000048c203 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043f3b9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2cd24bbb], cl ; ret
0x00000000004c9b48 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004c9b06 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000045182e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x00000000004a4a3e : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x00000000004a769c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042f476 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d21fbb], cl ; ret
0x00000000004ca8cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x00000000004ca81c : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000040a639 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d237bb], cl ; ret 0xc18a
0x00000000004469db : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bd22fbb], cl ; cdq ; ret 0x890e
0x00000000004379cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x000000000048ed19 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000047d6d0 : add byte ptr [rax], al ; add byte ptr [rbx - 0xbd247bb], cl ; call rsp
0x00000000004d0de1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x000000000045db40 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000425c5b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000045dfed : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040a9eb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000045e477 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045df2e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040dc56 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004640a9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004d107b : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x00000000004cae19 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret 0xd609
0x00000000004dacb5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004c97d3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000492d3d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x00000000004d0fbe : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000004c9a35 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004c6414 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x000000000043cacc : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004e3c89 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], dh ; add byte ptr [rax], ah ; ret
0x00000000004c8ba1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041199f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004614f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000040866e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000423119 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004077d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000440d93 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000442aeb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000044dd86 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000048d93a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000430488 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040cd8a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d506 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004e535a : add byte ptr [rax], al ; add byte ptr es:[rax], al ; jo 0x4e5324 ; sti ; call rdi
0x00000000004927fb : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000427bd2 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000043df14 : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000409a1c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004379e6 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000048df1d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004403e9 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d178 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044a7f9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402293 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004e551e : add byte ptr [rax], al ; and byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x00000000004e5966 : add byte ptr [rax], al ; call 0x114e5910
0x00000000004e44e6 : add byte ptr [rax], al ; call 0x144e3e13
0x00000000004e37a6 : add byte ptr [rax], al ; cld ; cmc ; jmp qword ptr [rax]
0x00000000004e4d52 : add byte ptr [rax], al ; cmp al, 0x20 ; add byte ptr [rax], al ; js 0x4e4cf7 ; cli ; call rdx
0x00000000004e5096 : add byte ptr [rax], al ; cmp byte ptr [rax - 5], ah ; call qword ptr [rax]
0x00000000004e43c6 : add byte ptr [rax], al ; cwde ; sbb al, -7 ; call rdi
0x00000000004e3326 : add byte ptr [rax], al ; fadd dword ptr [rsi - 0xb] ; call rdi
0x00000000004e2576 : add byte ptr [rax], al ; hlt ; ret
0x00000000004e480a : add byte ptr [rax], al ; hlt ; sbb al, byte ptr [rax] ; add al, dl ; mov bl, -7 ; jmp qword ptr [rax]
0x00000000004e27a6 : add byte ptr [rax], al ; hlt ; stc ; call rsp
0x00000000004e2a66 : add byte ptr [rax], al ; hlt ; sub edi, ebx ; jmp rsp
0x00000000004e22f6 : add byte ptr [rax], al ; in al, 0x61 ; hlt ; call rsp
0x00000000004e35fa : add byte ptr [rax], al ; in al, 8 ; add byte ptr [rax], al ; adc ch, cl ; cmc ; jmp rsi
0x00000000004e36fa : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; rcl dh ; cmc ; call rdx
0x00000000004e3302 : add byte ptr [rax], al ; in al, dx ; add eax, 0x46180000 ; cmc ; call rbx
0x00000000004e29e6 : add byte ptr [rax], al ; je 0x4e29b9 ; cli ; jmp rsp
0x00000000004e5092 : add byte ptr [rax], al ; jl 0x4e50c2 ; add byte ptr [rax], al ; cmp byte ptr [rax - 5], ah ; call qword ptr [rax]
0x00000000004023e9 : add byte ptr [rax], al ; jmp 0x4022a9
0x000000000043df10 : add byte ptr [rax], al ; jmp 0x43df1f
0x00000000004927f7 : add byte ptr [rax], al ; jmp 0x492806
0x000000000049cd23 : add byte ptr [rax], al ; jmp 0x49cd32
0x000000000049ce85 : add byte ptr [rax], al ; jmp 0x49ce94
0x000000000049d0f3 : add byte ptr [rax], al ; jmp 0x49d102
0x00000000004a6d8c : add byte ptr [rax], al ; jmp 0x4a6e41
0x00000000004ad1bc : add byte ptr [rax], al ; jmp 0x4b9407
0x00000000004e535e : add byte ptr [rax], al ; jo 0x4e5320 ; sti ; call rdi
0x00000000004e31e6 : add byte ptr [rax], al ; js 0x4e3180 ; hlt ; jmp rdx
0x00000000004e4d56 : add byte ptr [rax], al ; js 0x4e4cf3 ; cli ; call rdx
0x00000000004e32c2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add eax, 0xc4580000 ; hlt ; jmp rax
0x00000000004e26ee : add byte ptr [rax], al ; mov ah, 0x34 ; clc ; jmp rsp
0x00000000004e357e : add byte ptr [rax], al ; mov al, -0x3a ; cmc ; jmp qword ptr [rdi]
0x00000000004e4176 : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; clc ; jmp qword ptr [rdi]
0x000000000049289f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000047a9bb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004c9818 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047a7e5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000439ad6 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004ca2d5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047faca : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047fefd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000480179 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043fc4d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047fd51 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000451d1f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004ca991 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000044dc23 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000049601f : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x30] ; call 0x4022e8
0x0000000000403087 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004e37a2 : add byte ptr [rax], al ; mov word ptr [rdx], cs ; add byte ptr [rax], al ; cld ; cmc ; jmp qword ptr [rax]
0x00000000004e3322 : add byte ptr [rax], al ; or al, 6 ; add byte ptr [rax], al ; fadd dword ptr [rsi - 0xb] ; call rdi
0x00000000004a7959 : add byte ptr [rax], al ; or ecx, eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0x0000000000403535 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004302bf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000437181 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000412691 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004e4d72 : add byte ptr [rax], al ; pop rsp ; and byte ptr [rax], al ; add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004e36de : add byte ptr [rax], al ; rcl dh ; cmc ; call qword ptr [rbx]
0x00000000004e36fe : add byte ptr [rax], al ; rcl dh ; cmc ; call rdx
0x00000000004df7fe : add byte ptr [rax], al ; ret
0x000000000040099e : add byte ptr [rax], al ; ret 3
0x00000000004e382e : add byte ptr [rax], al ; sal byte ptr [rax], -0xa ; call qword ptr [rbx]
0x00000000004e384e : add byte ptr [rax], al ; sal byte ptr [rbx], -0xa ; jmp qword ptr [rax]
0x00000000004e3306 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xb], al ; call rbx
0x00000000004e32e6 : add byte ptr [rax], al ; sbb cl, dl ; hlt ; call qword ptr [rdi]
0x00000000004e4366 : add byte ptr [rax], al ; sbb rdi, rcx ; jmp qword ptr [rbx]
0x00000000004e45ae : add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; stc ; jmp qword ptr [rbx]
0x00000000004e2766 : add byte ptr [rax], al ; stc ; call rsp
0x00000000004e44c6 : add byte ptr [rax], al ; sub byte ptr [rax], ah ; stc ; call rdx
0x00000000004e2ae6 : add byte ptr [rax], al ; xchg eax, esp ; lodsd eax, dword ptr [rsi] ; sti ; jmp rsp
0x00000000004e45aa : add byte ptr [rax], al ; xchg eax, esp ; sbb byte ptr [rax], al ; add al, dl ; stc ; jmp qword ptr [rbx]
0x00000000004e48aa : add byte ptr [rax], al ; xchg eax, esp ; sbb eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dh, -7 ; jmp qword ptr [rdi]
0x00000000004e4c4a : add byte ptr [rax], al ; xor al, 0x1f ; add byte ptr [rax], al ; adc byte ptr [rbx - 6], dh ; jmp rsi
0x00000000004e384a : add byte ptr [rax], al ; xor al, 0xb ; add byte ptr [rax], al ; sal byte ptr [rbx], -0xa ; jmp qword ptr [rax]
0x00000000004e4d53 : add byte ptr [rax], bh ; add byte ptr [rax], al ; js 0x4e4cf6 ; cli ; call rdx
0x00000000004e4d77 : add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004e4d73 : add byte ptr [rax], bl ; add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004e3307 : add byte ptr [rax], bl ; cmc ; call rbx
0x00000000004e32e7 : add byte ptr [rax], bl ; sal esp, 1 ; call qword ptr [rdi]
0x00000000004e44c7 : add byte ptr [rax], ch ; and cl, bh ; call rdx
0x00000000004e3d4f : add byte ptr [rax], dh ; loope 0x4e3d4d ; jmp rbx
0x00000000004e48af : add byte ptr [rax], dh ; mov dh, -7 ; jmp qword ptr [rdi]
0x00000000004e353f : add byte ptr [rax], dh ; ret 0xfff5
0x00000000004e4c4f : add byte ptr [rax], dl ; jae 0x4e4c51 ; jmp rsi
0x00000000004e4c2f : add byte ptr [rax], dl ; push rbp ; cli ; jmp qword ptr [rax]
0x000000000049cd94 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000445af8 : add byte ptr [rbp + 1], cl ; ret
0x00000000004e32c3 : add byte ptr [rbp + rax - 0x3ba80000], ch ; hlt ; jmp rax
0x00000000004beabd : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000044b776 : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000044006e : add byte ptr [rbx + 0x12dd845], cl ; ret 0x1b4e
0x000000000042f48e : add byte ptr [rbx + 0x202de045], cl ; ret
0x000000000044dd2f : add byte ptr [rbx + 0x232dc845], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004595ad : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045974b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000043fd13 : add byte ptr [rbx + 0x292de845], cl ; ret 0xa474
0x000000000048dd32 : add byte ptr [rbx + 0x2b2de845], cl ; ret 0xe1a5
0x0000000000448340 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043ff92 : add byte ptr [rbx + 0x2dd845], cl ; ret 0x1b4e
0x000000000047af7f : add byte ptr [rbx + 0x402da845], cl ; cwde ; ret 0x8589
0x000000000042cab5 : add byte ptr [rbx + 0x412d9445], cl ; scasb al, byte ptr [rdi] ; ret
0x000000000047afca : add byte ptr [rbx + 0x412da845], cl ; cwde ; ret 0x8589
0x00000000004302c0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000437182 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042cc3f : add byte ptr [rbx + 0x422d9445], cl ; scasb al, byte ptr [rdi] ; ret
0x00000000004506e4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000450810 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000047a895 : add byte ptr [rbx + 0x482de445], cl ; hlt ; ret
0x000000000047a8d7 : add byte ptr [rbx + 0x492de445], cl ; hlt ; ret
0x0000000000494fbc : add byte ptr [rbx + 0x4c2d8c45], cl ; pushfq ; ret
0x000000000047ab97 : add byte ptr [rbx + 0x4c2da845], cl ; ret 0x4655
0x000000000040a48b : add byte ptr [rbx + 0x4c2dc845], cl ; ret
0x0000000000495020 : add byte ptr [rbx + 0x4d2d8c45], cl ; pushfq ; ret
0x000000000047b7b3 : add byte ptr [rbx + 0x4d2da845], cl ; ret 0x4655
0x000000000040a893 : add byte ptr [rbx + 0x4d2dc845], cl ; ret
0x000000000043ff24 : add byte ptr [rbx + 0x512dd845], cl ; ret 0x8947
0x00000000004400dc : add byte ptr [rbx + 0x522dd845], cl ; ret 0x8947
0x0000000000447e48 : add byte ptr [rbx + 0x562de045], cl ; ret 0xc750
0x0000000000447e8a : add byte ptr [rbx + 0x572de045], cl ; ret 0xc750
0x000000000042cb2c : add byte ptr [rbx + 0x5d2d9445], cl ; out dx, eax ; ret
0x0000000000412692 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042cb77 : add byte ptr [rbx + 0x5e2d9445], cl ; out dx, eax ; ret
0x000000000045cd6c : add byte ptr [rbx + 0x6c], cl ; ret
0x0000000000480234 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000412b1c : add byte ptr [rbx + 0xc2de045], cl ; pop rbx ; ret 0x89c3
0x0000000000412b67 : add byte ptr [rbx + 0xd2de045], cl ; pop rbx ; ret 0x89c3
0x0000000000448d5e : add byte ptr [rbx + 0xf2dc045], cl ; ret
0x00000000004e48ab : add byte ptr [rbx + rbx - 0x49d00000], dl ; stc ; jmp qword ptr [rdi]
0x00000000004e384b : add byte ptr [rbx + rcx], dh ; add byte ptr [rax], al ; sal byte ptr [rbx], -0xa ; jmp qword ptr [rax]
0x00000000004e382b : add byte ptr [rbx + rcx], dl ; add byte ptr [rax], al ; sal byte ptr [rax], -0xa ; call qword ptr [rbx]
0x000000000040db4e : add byte ptr [rbx - 0x1534b], cl ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040dbe7 : add byte ptr [rbx - 0x1574b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ddc6 : add byte ptr [rbx - 0x1634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040de37 : add byte ptr [rbx - 0x16b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000044b8ec : add byte ptr [rbx - 0x1d24bbb], cl ; ret
0x000000000048c205 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000048c1ba : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000043f3bb : add byte ptr [rbx - 0x2cd24bbb], cl ; ret
0x000000000043f370 : add byte ptr [rbx - 0x2dd24bbb], cl ; ret
0x00000000004c9b4a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004c9b08 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x0000000000451830 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000456a75 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x0000000000451372 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x00000000004e4a2b : add byte ptr [rbx - 0x47100000], dl ; stc ; call qword ptr [rdx]
0x00000000004568b3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x00000000004a4a40 : add byte ptr [rbx - 0x54d22bbb], cl ; ret
0x00000000004a769e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042f478 : add byte ptr [rbx - 0x58d21fbb], cl ; ret
0x000000000042f39c : add byte ptr [rbx - 0x59d21fbb], cl ; ret
0x00000000004ca8ce : add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x00000000004ca81e : add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000040a6d1 : add byte ptr [rbx - 0x64d237bb], cl ; ret 0xc18a
0x000000000040a63b : add byte ptr [rbx - 0x65d237bb], cl ; ret 0xc18a
0x00000000004469dd : add byte ptr [rbx - 0x6bd22fbb], cl ; cdq ; ret 0x890e
0x000000000044699b : add byte ptr [rbx - 0x6cd22fbb], cl ; cdq ; ret 0x890e
0x0000000000439ad7 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004ca2d6 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004379ce : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x00000000004c9819 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000048ed1b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000411e53 : add byte ptr [rbx - 0xad21fbb], cl ; jmp 0x45cae104
0x0000000000411d77 : add byte ptr [rbx - 0xbd21fbb], cl ; jmp 0x45cae028
0x000000000047d6d2 : add byte ptr [rbx - 0xbd247bb], cl ; call rsp
0x0000000000479f93 : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045e016 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x00000000004d0de3 : add byte ptr [rcx + 0x29], al ; ret
0x000000000045db42 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000425c5d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000045dfef : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040a9ed : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004b9da5 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x000000000045e479 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045df30 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x000000000040dc58 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004e2337 : add byte ptr [rcx + rdx*8], al ; hlt ; call rsp
0x0000000000464067 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000445ae8 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; ret
0x00000000004d107d : add byte ptr [rcx - 0x7f], al ; ret
0x00000000004cae1b : add byte ptr [rcx], ah ; ret 0xd609
0x0000000000449779 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402b48 : add byte ptr [rcx], al ; ret
0x00000000004dacb7 : add byte ptr [rcx], al ; ret 0x6348
0x00000000004c97d5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000492d3f : add byte ptr [rcx], bh ; ret 0xf40
0x00000000004d0fc0 : add byte ptr [rcx], ch ; ret
0x00000000004c9a37 : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004c6416 : add byte ptr [rcx], ch ; ret 0x8840
0x000000000043cace : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004e4c4b : add byte ptr [rdi + rbx], dh ; add byte ptr [rax], al ; adc byte ptr [rbx - 6], dh ; jmp rsi
0x00000000004e4c2b : add byte ptr [rdi + rbx], dl ; add byte ptr [rax], al ; adc byte ptr [rbp - 6], dl ; jmp qword ptr [rax]
0x00000000004e2aa7 : add byte ptr [rdi + rcx*4], dl ; sti ; jmp rsp
0x00000000004e3c8b : add byte ptr [rdi + rcx], dh ; add byte ptr [rax], ah ; ret
0x00000000004e44c3 : add byte ptr [rdi + rdx + 0x20280000], ch ; stc ; call rdx
0x00000000004801aa : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004c8ba3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004119a1 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004614f2 : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000408670 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042311b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004077d9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000440d95 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000442aed : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x000000000044dd88 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000048d93c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043048a : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040cd8c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d508 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004e37a3 : add byte ptr [rdx + rcx - 0x3b80000], cl ; cmc ; jmp qword ptr [rax]
0x00000000004e29e7 : add byte ptr [rdx + rcx*8 - 6], dh ; jmp rsp
0x000000000044f5ed : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004e3323 : add byte ptr [rsi + rax], cl ; add byte ptr [rax], al ; fadd dword ptr [rsi - 0xb] ; call rdi
0x00000000004e4bcb : add byte ptr [rsi + rbx + 0x35100000], dh ; cli ; jmp rcx
0x00000000004e2767 : add byte ptr [rsi + rdi - 7], al ; call rsp
0x00000000004e43c3 : add byte ptr [rsi + rdx + 0x1c980000], ch ; stc ; call rdi
0x00000000004e4363 : add byte ptr [rsi + rdx], cl ; add byte ptr [rax + 0x1b], cl ; stc ; jmp qword ptr [rbx]
0x00000000004e535b : add byte ptr [rsi], al ; add byte ptr [rax - 0x47], dh ; sti ; call rdi
0x00000000004e41d3 : add byte ptr [rsp + rdx + 0x17480000], bh ; clc ; call qword ptr [rdx]
0x00000000004e2aa5 : add byte ptr cs:[rax], al ; adc al, -0x71 ; sti ; jmp rsp
0x000000000042d505 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000402b47 : add byte ptr cs:[rcx], al ; ret
0x00000000004e535d : add byte ptr es:[rax], al ; jo 0x4e5321 ; sti ; call rdi
0x00000000004e535c : add byte ptr es:[rax], al ; jo 0x4e5322 ; sti ; call rdi
0x000000000049f17d : add byte ptr gs:[rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x000000000047196c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004ad06d : add cl, ch ; nop ; ret
0x00000000004ad0a5 : add cl, ch ; pop rax ; ret
0x000000000040b319 : add cl, ch ; ret
0x0000000000427bd4 : add cl, ch ; ret 0
0x000000000043df16 : add cl, ch ; ret 0xb
0x000000000040a749 : add cl, ch ; ret 1
0x0000000000459cc1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000489f4d : add dword ptr [rax - 0x75], ecx ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x0000000000440f16 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047c13f : add dword ptr [rax], 0x45c70000 ; mov al, 0x4d ; ret 0x4655
0x000000000047f8ab : add dword ptr [rax], 0x45c70000 ; xchg eax, esp ; mov dh, 0x17 ; ret
0x0000000000448102 : add dword ptr [rax], eax ; add bh, al ; in al, 0x57 ; ret 0xc750
0x00000000004924ee : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000045595e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004a6ac8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4e20
0x0000000000403086 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000047b7b1 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x4d2da845], cl ; ret 0x4655
0x000000000043f36e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x2dd24bbb], cl ; ret
0x000000000042f39a : add dword ptr [rax], eax ; add byte ptr [rbx - 0x59d21fbb], cl ; ret
0x0000000000446999 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6cd22fbb], cl ; cdq ; ret 0x890e
0x000000000045e014 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000464065 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000499a3c : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a747 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004804fd : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000484fb6 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004ad114 : add dword ptr [rax], eax ; jmp 0x4b9407
0x0000000000440dbf : add dword ptr [rax], eax ; pop rbp ; ret
0x000000000045996f : add dword ptr [rax], ecx ; ret 0x840
0x000000000042acc0 : add dword ptr [rax], ecx ; ret 0x844
0x000000000041f5e7 : add dword ptr [rax], esp ; ret 0x840
0x00000000004c158f : add dword ptr [rbp + 0x48b97d43], ebp ; ret
0x000000000042d502 : add dword ptr [rcx + 0x2ef9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040a357 : add dword ptr [rcx + 0xf], eax ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000440fb5 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000040a320 : add dword ptr [rcx - 0x78], eax ; ret
0x000000000042b569 : add dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x000000000046254e : add dword ptr [rcx], esp ; ret 0xd709
0x0000000000483c86 : add dword ptr [rdi], ecx ; lahf ; ret
0x0000000000440d9b : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x000000000043fedb : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040be3b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f6de : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004399b1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043f0d4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x38 ; pop rbp ; ret
0x000000000040b04c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d3a3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004c8d22 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000427e4e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439739 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041f85f : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000402b44 : add eax, 0x2e39ce ; add ebx, esi ; ret
0x00000000004e3305 : add eax, 0x46180000 ; cmc ; call rbx
0x0000000000492453 : add eax, 0x5d5b0000 ; ret
0x000000000049601e : add eax, 0x8b480000 ; jge 0x495ffe ; call 0x4022e9
0x000000000048d0e3 : add eax, 0x8d480000 ; cmp al, 0x25 ; ret
0x00000000004e3245 : add eax, 0xa3380000 ; hlt ; jmp qword ptr [rcx]
0x00000000004e32c5 : add eax, 0xc4580000 ; hlt ; jmp rax
0x00000000004e32e5 : add eax, 0xd1180000 ; hlt ; call qword ptr [rdi]
0x00000000004a5cf5 : add eax, 0xe9000004 ; ret 1
0x000000000049792a : add eax, 0xf7b80000 ; ret
0x0000000000437525 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000004c7281 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x0000000000493f94 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004a4594 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044f06e : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000043c973 : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000402b0b : add eax, edx ; sar rax, 1 ; jne 0x402b1c ; pop rbp ; ret
0x0000000000444403 : add ebx, dword ptr [rdx - 0x38b2464a] ; ret 0x48cd
0x0000000000402b49 : add ebx, esi ; ret
0x00000000004a4b77 : add edi, eax ; in al, -0x55 ; ret
0x00000000004c1685 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004bdef8 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004557d9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045bda1 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x000000000045c259 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x000000000043a5e3 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x000000000040328b : add esp, 0x10 ; pop rbp ; ret
0x0000000000449777 : add esp, 0x100 ; pop rbp ; ret
0x000000000040e79a : add esp, 0x110 ; pop rbp ; ret
0x0000000000442b73 : add esp, 0x12b0 ; pop rbp ; ret
0x000000000040acd8 : add esp, 0x140 ; pop rbp ; ret
0x00000000004446c0 : add esp, 0x150 ; pop rbp ; ret
0x0000000000447c8c : add esp, 0x158 ; pop rbp ; ret
0x000000000040ce86 : add esp, 0x160 ; pop rbp ; ret
0x00000000004dee01 : add esp, 0x1750 ; pop rbp ; ret
0x00000000004df89b : add esp, 0x18 ; ret
0x0000000000454cf8 : add esp, 0x180 ; pop rbp ; ret
0x0000000000443dea : add esp, 0x190 ; pop rbp ; ret
0x000000000041228f : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000464785 : add esp, 0x1a8 ; pop rbp ; ret
0x000000000040a270 : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000455979 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004593cf : add esp, 0x1d0 ; pop rbp ; ret
0x000000000048a022 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000427f6f : add esp, 0x20 ; pop rbp ; ret
0x000000000044adbe : add esp, 0x230 ; pop rbp ; ret
0x00000000004787fd : add esp, 0x240 ; pop rbp ; ret
0x00000000004139b8 : add esp, 0x250 ; pop rbp ; ret
0x000000000042f1f2 : add esp, 0x260 ; pop rbp ; ret
0x000000000040fcbd : add esp, 0x2f0 ; pop rbp ; ret
0x00000000004399b6 : add esp, 0x30 ; pop rbp ; ret
0x0000000000479f91 : add esp, 0x300 ; pop rbp ; ret
0x0000000000497cfe : add esp, 0x320 ; pop rbp ; ret
0x000000000043f0d9 : add esp, 0x38 ; pop rbp ; ret
0x000000000040cfe3 : add esp, 0x40 ; pop rbp ; ret
0x00000000004a2d29 : add esp, 0x440 ; pop rbp ; ret
0x0000000000411b4e : add esp, 0x490 ; pop rbp ; ret
0x000000000040b051 : add esp, 0x50 ; pop rbp ; ret
0x0000000000492450 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000040d17b : add esp, 0x60 ; pop rbp ; ret
0x0000000000487dff : add esp, 0x660 ; pop rbp ; ret
0x0000000000462bc9 : add esp, 0x6a0 ; pop rbp ; ret
0x000000000042b7e2 : add esp, 0x6d0 ; pop rbp ; ret
0x000000000044a7fc : add esp, 0x70 ; pop rbp ; ret
0x000000000049f0df : add esp, 0x710 ; pop rbp ; ret
0x0000000000403531 : add esp, 0x80 ; pop rbp ; ret
0x000000000044f4af : add esp, 0x88 ; pop rbp ; ret
0x000000000049aec7 : add esp, 0x8f0 ; pop rbp ; ret
0x000000000044ff7d : add esp, 0x90 ; pop rbp ; ret
0x000000000040e09e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000446fd4 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040939a : add esp, 0xb40 ; pop rbp ; ret
0x000000000043a336 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000440b59 : add esp, 0xd0 ; pop rbp ; ret
0x000000000041268d : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000043f73d : add esp, 0xe0 ; pop rbp ; ret
0x000000000049f88f : add esp, 0xf0 ; pop rbp ; ret
0x00000000004658f3 : add esp, 8 ; pop rbp ; ret
0x0000000000402296 : add esp, 8 ; ret
0x0000000000402b0a : add rax, rdx ; sar rax, 1 ; jne 0x402b1d ; pop rbp ; ret
0x000000000043a5e2 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040328a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000449776 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040e799 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000442b72 : add rsp, 0x12b0 ; pop rbp ; ret
0x000000000040acd7 : add rsp, 0x140 ; pop rbp ; ret
0x00000000004446bf : add rsp, 0x150 ; pop rbp ; ret
0x0000000000447c8b : add rsp, 0x158 ; pop rbp ; ret
0x000000000040ce85 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004dee00 : add rsp, 0x1750 ; pop rbp ; ret
0x00000000004df89a : add rsp, 0x18 ; ret
0x0000000000454cf7 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000443de9 : add rsp, 0x190 ; pop rbp ; ret
0x000000000041228e : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000464784 : add rsp, 0x1a8 ; pop rbp ; ret
0x000000000040a26f : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000455978 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004593ce : add rsp, 0x1d0 ; pop rbp ; ret
0x000000000048a021 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000427f6e : add rsp, 0x20 ; pop rbp ; ret
0x000000000044adbd : add rsp, 0x230 ; pop rbp ; ret
0x00000000004787fc : add rsp, 0x240 ; pop rbp ; ret
0x00000000004139b7 : add rsp, 0x250 ; pop rbp ; ret
0x000000000042f1f1 : add rsp, 0x260 ; pop rbp ; ret
0x000000000040fcbc : add rsp, 0x2f0 ; pop rbp ; ret
0x00000000004399b5 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000479f90 : add rsp, 0x300 ; pop rbp ; ret
0x0000000000497cfd : add rsp, 0x320 ; pop rbp ; ret
0x000000000043f0d8 : add rsp, 0x38 ; pop rbp ; ret
0x000000000040cfe2 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004a2d28 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000411b4d : add rsp, 0x490 ; pop rbp ; ret
0x000000000040b050 : add rsp, 0x50 ; pop rbp ; ret
0x000000000049244f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000040d17a : add rsp, 0x60 ; pop rbp ; ret
0x0000000000487dfe : add rsp, 0x660 ; pop rbp ; ret
0x0000000000462bc8 : add rsp, 0x6a0 ; pop rbp ; ret
0x000000000042b7e1 : add rsp, 0x6d0 ; pop rbp ; ret
0x000000000044a7fb : add rsp, 0x70 ; pop rbp ; ret
0x000000000049f0de : add rsp, 0x710 ; pop rbp ; ret
0x0000000000403530 : add rsp, 0x80 ; pop rbp ; ret
0x000000000044f4ae : add rsp, 0x88 ; pop rbp ; ret
0x000000000049aec6 : add rsp, 0x8f0 ; pop rbp ; ret
0x000000000044ff7c : add rsp, 0x90 ; pop rbp ; ret
0x000000000040e09d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000446fd3 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000409399 : add rsp, 0xb40 ; pop rbp ; ret
0x000000000043a335 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000440b58 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041268c : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000043f73c : add rsp, 0xe0 ; pop rbp ; ret
0x000000000049f88e : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004658f2 : add rsp, 8 ; pop rbp ; ret
0x0000000000402295 : add rsp, 8 ; ret
0x00000000004c3dba : and ah, ch ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000495839 : and ah, dh ; ret 0x89c5
0x00000000004962e7 : and ah, dh ; ret 0xb9c5
0x00000000004964cd : and ah, dh ; ret 0xe9c5
0x00000000004625ba : and al, 0x21 ; ret 0xd709
0x00000000004ad112 : and al, 0x32 ; add dword ptr [rax], eax ; jmp 0x4b9409
0x00000000004c97dd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042aa5a : and al, 0xffffffffffffff87 ; fld dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004e5521 : and al, 0xfffffffffffffffc ; jmp qword ptr [rcx]
0x0000000000427e4d : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000439738 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004e27a5 : and al, byte ptr [rax] ; add ah, dh ; stc ; call rsp
0x0000000000423e68 : and al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000043686f : and al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000459cbf : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004e4d55 : and byte ptr [rax], al ; add byte ptr [rax - 0x6c], bh ; cli ; call rdx
0x000000000045409a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a7957 : and byte ptr [rax], al ; add byte ptr [rax], al ; or ecx, eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0x00000000004e4d75 : and byte ptr [rax], al ; add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004a0110 : and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x00000000004113cf : and byte ptr [rbx + 0x27e8b9c9], dl ; ret
0x00000000004113ce : and byte ptr [rbx + 0x27e8b9c9], r10b ; ret
0x0000000000497d00 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a4c6e : and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x0000000000497a83 : and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000048ea4b : and byte ptr [rsi + 0x58], ah ; jb 0x48ea82 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004e5520 : and byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x00000000004a4c6d : and byte ptr ds:[rcx - 0x7bf03bbb], cl ; ret 0
0x000000000040a355 : and cl, 1 ; movzx eax, r9b ; pop rbp ; ret
0x00000000004e44c9 : and cl, bh ; call rdx
0x0000000000459cbe : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000440d99 : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x00000000004c1ed7 : and dl, byte ptr [rdi] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004e4ef5 : and dword ptr [rax], eax ; add byte ptr [rax - 0x24], ch ; cli ; jmp qword ptr [rcx]
0x00000000004e2765 : and dword ptr [rax], eax ; add byte ptr [rsi + rdi - 7], al ; call rsp
0x0000000000425d86 : and dword ptr [rbp - 0x77], eax ; ret 0x8141
0x0000000000424eea : and dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x0000000000425d90 : and dword ptr [rcx], esp ; ret 0x8945
0x00000000004261e1 : and eax, 0x4e11d1 ; call 0x4024d7
0x00000000004797fe : and eax, 0x558b48fb ; mov byte ptr [rax - 0x7f], cl ; ret 0x13
0x0000000000403682 : and eax, 0x6e6539 ; add al, ch ; ret
0x0000000000447d2f : and eax, 0x6e8978 ; pop rbp ; ret
0x0000000000470ba1 : and eax, 0x75b4b9d3 ; ret
0x000000000049289d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004c17d4 : and eax, 0xc700005e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000042bd60 : and eax, dword ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000049f11d : and eax, dword ptr [rbx - 0x17] ; ret 0
0x000000000049d478 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000049cf8f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004cc35c : and ebx, dword ptr [rbx + 0x6a] ; ret 0x8589
0x000000000044f5eb : and ecx, dword ptr [rcx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004e44e9 : and ecx, edi ; call qword ptr [rbx]
0x000000000049d53a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004957ee : and esi, esp ; ret 0x89c5
0x0000000000461c38 : and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000425d85 : and qword ptr [r13 - 0x77], r8 ; ret 0x8141
0x0000000000425d8f : and qword ptr [r9], r12 ; ret 0x8945
0x000000000040a354 : and r9b, 1 ; movzx eax, r9b ; pop rbp ; ret
0x000000000049f0dd : call 0x110e7233
0x0000000000435219 : call 0x1143521d
0x00000000004e5968 : call 0x114e590e
0x00000000004e44e8 : call 0x144e3e11
0x00000000004378f5 : call 0x174378f9
0x0000000000437455 : call 0x21437459
0x0000000000496025 : call 0x4022e2
0x00000000004a476b : call 0x402309
0x00000000004261e6 : call 0x4024d2
0x0000000000426234 : call 0x4024f2
0x0000000000402fd4 : call 0x402677
0x00000000004031f8 : call 0x402679
0x000000000043f53f : call 0x4026a7
0x00000000004266a3 : call 0x402912
0x000000000048ef34 : call 0x402916
0x00000000004a664c : call 0x402922
0x000000000043c787 : call 0x43f166
0x000000000040aa47 : call 0x476c82
0x000000000040debd : call 0x48a112
0x000000000048ee45 : call 0x48ef09
0x0000000000459c0f : call 0x4908255f
0x0000000000459c0e : call 0x49082560
0x0000000000459c5d : call 0x490825ad
0x0000000000459c5c : call 0x490825ae
0x000000000040b941 : call 0x49234294
0x00000000004de14d : call 0x4ca412
0x0000000000437768 : call 0x7a437770
0x000000000040debc : call 0x8032dac
0x000000000044acf2 : call 0xffffffff8a25028b
0x000000000048dd35 : call 0xffffffffa60b086a
0x000000000048dd34 : call 0xffffffffa60b086b
0x00000000004943bd : call 0xffffffffacaa05f1
0x00000000004943bc : call 0xffffffffacaa05f2
0x0000000000435dd2 : call 0xffffffffd1435dd6
0x000000000049a768 : call 0xffffffffd149a767
0x0000000000435fd4 : call 0xffffffffd2435fd8
0x0000000000436243 : call 0xffffffffd2436247
0x00000000004378ac : call 0xffffffffd24378b0
0x0000000000437660 : call 0xffffffffe2437664
0x0000000000434efd : call 0xffffffffe4434f01
0x00000000004377b2 : call 0xffffffffe44377b6
0x0000000000474659 : call 0xffffffffe909cfa9
0x0000000000474658 : call 0xffffffffe909cfaa
0x00000000004294cc : call 0xfffffffffc231a63
0x0000000000486d23 : call 0xfffffffffea4f2f5
0x0000000000486d22 : call 0xfffffffffea4f2f6
0x00000000004a4346 : call 0xffffffffff42c918
0x00000000004a4345 : call 0xffffffffff42c919
0x0000000000443b0b : call 0xffffffffffb4c0dd
0x0000000000443b0a : call 0xffffffffffb4c0de
0x00000000004df7d9 : call qword ptr [r12 + rbx*8]
0x000000000043521c : call qword ptr [rax]
0x0000000000461aaf : call qword ptr [rbx]
0x0000000000411be7 : call qword ptr [rcx]
0x0000000000424d24 : call qword ptr [rdi]
0x000000000040fcf9 : call qword ptr [rdx]
0x0000000000426c68 : call qword ptr [rsi]
0x00000000004df7da : call qword ptr [rsp + rbx*8]
0x000000000045df81 : call r11
0x000000000049e982 : call r8
0x000000000047f487 : call r9
0x0000000000402b6d : call rax
0x00000000004234f6 : call rbx
0x000000000040972d : call rcx
0x000000000042334b : call rdi
0x000000000041b179 : call rdx
0x0000000000404042 : call rsi
0x00000000004c5b0f : call rsp
0x00000000004469a1 : cdq ; ret 0x890e
0x000000000044690f : cdq ; ret 0x8b0e
0x000000000045bc73 : cdqe ; mov rdx, qword ptr [rcx] ; call rax
0x000000000047ff00 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004446be : clc ; add rsp, 0x150 ; pop rbp ; ret
0x00000000004529cb : clc ; add rsp, 0x190 ; pop rbp ; ret
0x00000000004a8405 : clc ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000049648d : clc ; add rsp, 0x1f0 ; pop rbp ; ret
0x00000000004a2d27 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x00000000004a6e24 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043eca7 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000048e1a7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044ff7b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000496879 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000043a334 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000440b57 : clc ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000044e3e5 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004e41da : clc ; call qword ptr [rdx]
0x00000000004e417a : clc ; jmp qword ptr [rdi]
0x00000000004e26b2 : clc ; jmp rsp
0x0000000000402b0f : clc ; jne 0x402b18 ; pop rbp ; ret
0x000000000049d479 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000049d243 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000047a80b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004a6c4b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000492afe : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045948e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000409a37 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044e5ab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044e5cb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048032b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048030b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000049cc91 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000043fb04 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409a3b : clc ; pop rbp ; ret
0x000000000045c196 : clc ; pop rbx ; pop rbp ; ret
0x000000000046712d : clc ; ret 0x77a8
0x000000000049cf90 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004032b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004a49b5 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000446bda : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000494d3e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000049f88d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004625b9 : cld ; and al, 0x21 ; ret 0xd709
0x00000000004e37a9 : cld ; cmc ; jmp qword ptr [rax]
0x000000000044836f : cld ; jmp 0x4483dc
0x000000000044836e : cld ; jmp 0x4483dd
0x00000000004e5522 : cld ; jmp qword ptr [rcx]
0x0000000000462ec6 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000439ada : cld ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462ec9 : cld ; pop rbp ; ret
0x0000000000436140 : cld ; ret
0x0000000000456a7a : cld ; stc ; in al, dx ; ret 0x8589
0x00000000004571cb : cld ; stc ; in al, dx ; ret 0xff3
0x00000000004a7fd0 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004e4d7a : cli ; call qword ptr [rdx]
0x00000000004e4d5a : cli ; call rdx
0x00000000004c2884 : cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004e29e2 : cli ; inc esp ; sub eax, dword ptr [rax] ; add byte ptr [rdx + rcx*8 - 6], dh ; jmp rsp
0x00000000004e4c32 : cli ; jmp qword ptr [rax]
0x00000000004e4efa : cli ; jmp qword ptr [rcx]
0x00000000004e4bd2 : cli ; jmp rcx
0x00000000004e4c52 : cli ; jmp rsi
0x00000000004e29aa : cli ; jmp rsp
0x0000000000424ee7 : cli ; js 0x424f00 ; and dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x000000000048ea50 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044b7ac : cli ; ret
0x000000000040c186 : cli ; scasd eax, dword ptr [rdi] ; sub dword ptr [rax + rcx*2 - 0x7cb71d77], edx ; ret 0x48f0
0x00000000004c97dc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004e36e2 : cmc ; call qword ptr [rbx]
0x00000000004e330a : cmc ; call rbx
0x00000000004e332a : cmc ; call rdi
0x00000000004e3702 : cmc ; call rdx
0x00000000004a4d65 : cmc ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000411e58 : cmc ; jmp 0x45cae0ff
0x0000000000411fb7 : cmc ; jmp 0xffffffffedfae25e
0x00000000004e37aa : cmc ; jmp qword ptr [rax]
0x00000000004e3582 : cmc ; jmp qword ptr [rdi]
0x00000000004e3602 : cmc ; jmp rsi
0x000000000042211a : cmc ; jns 0x4220d9 ; ret
0x0000000000414409 : cmc ; ret
0x000000000048d7bb : cmc ; ret 0x4f0b
0x000000000047a600 : cmp al, -1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004c08c0 : cmp al, 0x1a ; hlt ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004e4d54 : cmp al, 0x20 ; add byte ptr [rax], al ; js 0x4e4cf5 ; cli ; call rdx
0x000000000042ce02 : cmp al, 0x25 ; push rax ; adc al, 0x4e ; add al, ch ; ret
0x00000000004031ff : cmp al, 0x25 ; ret
0x00000000004a6acd : cmp al, 0x25 ; ret 0x4e20
0x0000000000425e88 : cmp bl, ch ; jmp 0x1a0547d8
0x00000000004e5098 : cmp byte ptr [rax - 5], ah ; call qword ptr [rax]
0x000000000045db3e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x00000000004a62bc : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004dd587 : cmp byte ptr [rcx - 0x1f743], al ; call qword ptr [rax]
0x0000000000427f6a : cmp byte ptr [rsi + rbp*2], ah ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004a010e : cmp cl, byte ptr [rdx] ; and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000048d951 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000408c5b : cmp dh, -1 ; dec dword ptr [rcx - 0x76397639] ; ret 0x86e8
0x000000000048f807 : cmp dl, al ; ret
0x000000000042f62b : cmp dword ptr [rax - 0x58468f1b], ecx ; ret
0x0000000000451b02 : cmp dword ptr [rax - 0x75], ecx ; jne 0x451ae4 ; call rax
0x000000000049b0a2 : cmp dword ptr [rax - 0x75], ecx ; xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000423f46 : cmp dword ptr [rax], eax ; add al, ch ; ret 0xfde3
0x0000000000425a97 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000402b46 : cmp dword ptr [rsi], ebp ; add byte ptr [rcx], al ; ret
0x0000000000449ab9 : cmp eax, 0x45c6a0d8 ; ret
0x0000000000439842 : cmp eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000045dbb3 : cmp eax, 0x8af1294f ; push rbp ; ret
0x00000000004cecfb : cmp eax, 0xb8000025 ; mov ebp, ecx ; ret
0x00000000004918d9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x0000000000402acd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402ae0 ; pop rbp ; ret
0x00000000004dddb1 : cmp eax, 0xe9b845c2 ; ret
0x0000000000483ad1 : cmp ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xb640
0x00000000004cf38f : cmp edi, ebp ; cwde ; jmp 0x4d1245
0x00000000004719f7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000042f3a1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004aed5a : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcc39
0x00000000004bfcb6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub dh, ah ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000425c4c : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub dword ptr [rbp + rdi*4 - 0x87f], -1 ; jmp qword ptr [rcx]
0x0000000000464561 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x000000000042f47d : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000434bc7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1b2
0x0000000000431eff : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x000000000042951e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x89f1
0x000000000042ad85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xb9f1
0x00000000004aedae : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xcc39
0x0000000000464560 : cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x0000000000492452 : cwde ; add eax, 0x5d5b0000 ; ret
0x00000000004a7df2 : cwde ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004cf391 : cwde ; jmp 0x4d1243
0x00000000004cecf9 : cwde ; jmp 0x4d1245
0x00000000004a6a26 : cwde ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045bc74 : cwde ; mov rdx, qword ptr [rcx] ; call rax
0x000000000048a7ff : cwde ; ret
0x000000000047baf5 : cwde ; ret 0x1b2
0x00000000004c27a5 : cwde ; ret 0x2eb9
0x000000000047bb0e : cwde ; ret 0x558b
0x000000000047af85 : cwde ; ret 0x8589
0x00000000004e43c8 : cwde ; sbb al, -7 ; call rdi
0x0000000000483a4a : dec byte ptr [rbx - 0x7c77b] ; jmp qword ptr [rcx]
0x0000000000483a6d : dec byte ptr [rbx - 0x7cb7b] ; jmp qword ptr [rcx]
0x000000000040a1fc : dec byte ptr [rdi] ; pushfq ; ret 0xd284
0x0000000000459427 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000441f9a : dec dword ptr [rax + 0x29] ; ret 0xb848
0x0000000000411fc6 : dec dword ptr [rax + 0x39] ; ret 0xf41
0x000000000041f85c : dec dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000040da7b : dec dword ptr [rax - 0x1346b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000047a108 : dec dword ptr [rax - 0x46] ; ret 0x2de3
0x00000000004031fc : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004ba251 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x0000000000470efb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000047086e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004c61e0 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000471073 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004c5c24 : dec dword ptr [rax - 0x77] ; adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000044609e : dec dword ptr [rax - 0x77] ; add al, bh ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x000000000047fcd2 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000047a1a8 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004a2886 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040da81 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040cdf1 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x000000000040bbb9 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004d12f0 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x00000000004d12be : dec dword ptr [rax - 0x7f] ; ret 0x20
0x000000000040f745 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004db88e : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004cf8b8 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000040f707 : dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004dd3cc : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000445ae5 : dec dword ptr [rbp - 0x75] ; add byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; ret
0x0000000000483d62 : dec dword ptr [rbp - 0x77] ; ret
0x000000000049550d : dec dword ptr [rbx - 0x1276b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000047dc65 : dec dword ptr [rbx - 0x1a76b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000496393 : dec dword ptr [rbx - 0x1cf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000488d25 : dec dword ptr [rbx - 0x2036b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004137b3 : dec dword ptr [rbx - 0x23b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004a6180 : dec dword ptr [rbx - 0x34b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004a65b8 : dec dword ptr [rbx - 0x36b6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004a6754 : dec dword ptr [rbx - 0x3736b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000046459b : dec dword ptr [rcx + 0x21ca31c2] ; ret 0x458b
0x000000000045dfad : dec dword ptr [rcx + 0x21ca31c2] ; ret 0x8b48
0x0000000000408505 : dec dword ptr [rcx + 0x64] ; xchg dword ptr [rcx + rbp*8], esi ; ret 0x13
0x00000000004cf52b : dec dword ptr [rcx - 0x7628d639] ; ret 0xea81
0x0000000000408c5e : dec dword ptr [rcx - 0x76397639] ; ret 0x86e8
0x000000000048380a : dec dword ptr [rcx - 0x77] ; ret 0x214d
0x00000000004dc93e : dec dword ptr [rcx - 0x7f] ; ret
0x00000000004dc9ee : dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000048d7b6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000042594c : dec dword ptr [rcx] ; ret 0x941
0x0000000000483d52 : dec dword ptr [rcx] ; ret 0xf709
0x000000000045db8d : dec dword ptr [rdi] ; pushfq ; ret
0x00000000004137b9 : dec dword ptr [rdi] ; ret 0x4589
0x00000000004ad067 : dec dword ptr [rdi] ; test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x000000000044f8d1 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004b6597 : dec dword ptr [rdi] ; test al, bl ; ret
0x000000000047734e : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004143ce : dec dword ptr [rdi] ; test bh, dh ; ret
0x00000000004d1422 : dec dword ptr [rdi] ; test bl, ch ; ret
0x000000000045474b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000047b712 : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff6], al ; ret 1
0x00000000004a7def : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000042c558 : dec dword ptr [rdi] ; test byte ptr [rax], al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000488a04 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffa], bh ; ret 1
0x000000000044f06a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x00000000004ad1b7 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000040b313 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff6], al ; ret
0x000000000047d32a : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffff6], bl ; ret
0x000000000043f333 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16fffffe], dl ; ret 1
0x000000000042bd5d : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; add al, 0 ; add cl, ch ; ret 1
0x0000000000477b11 : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000463ccf : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffffa], ah ; ret 1
0x000000000041a932 : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; ret
0x00000000004b8b1b : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret
0x0000000000466e0a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000413219 : dec dword ptr [rdi] ; test byte ptr [rcx], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000049bf54 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000417daa : dec dword ptr [rdi] ; test byte ptr [rdi], cl ; ret 0
0x00000000004ad10f : dec dword ptr [rdi] ; test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x4b940c
0x000000000042e611 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffff7], dh ; ret
0x00000000004a79ee : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffa], bl ; ret
0x0000000000495d6f : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff9], dl ; ret 1
0x00000000004a5cf2 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffc], al ; ret 1
0x000000000040a743 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000414406 : dec dword ptr [rdi] ; test dh, ch ; ret
0x0000000000457b45 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004b146f : dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004a3eba : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004de71f : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x000000000049ef87 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x0000000000493d8e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004113e1 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000045cd18 : dec dword ptr [rdx + 0x6c] ; ret
0x00000000004c6019 : dec ebp ; or ch, dh ; ret 0xdae9
0x0000000000440c90 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000461f31 : div dword ptr [rbx] ; push rsp ; in al, -0x7f ; ret 0xffd0
0x0000000000440c8f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000434feb : enter -0x2977, -0x77 ; ret 0xb0
0x000000000047bb0a : enter -0x4655, 0x41 ; cwde ; ret 0x558b
0x000000000044fce0 : enter -0x74b8, 0x31 ; call rax
0x000000000042ce8a : enter -0x74b8, 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040aa43 : enter -2, -1 ; call 0x476c86
0x000000000049e8b2 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a2309 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044dd32 : enter 0x232d, -0x5b ; ret
0x0000000000440d5c : enter 0x3b48, 0x41 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000445ca3 : enter 0x548, 2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5ebb
0x000000000042c2b5 : enter 0x77c7, -0x47 ; mov eax, gs ; ret
0x000000000045bd5e : enter 0x889, -0x39 ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x000000000047f7d2 : enter 0x8b, 0x48 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000049cdb5 : enter 0xf41, 0x44 ; ret 0x4589
0x0000000000486e51 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000454a28 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000049b9c5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041268f : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004e3328 : fadd dword ptr [rsi - 0xb] ; call rdi
0x0000000000422f15 : fadd qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000448eea : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000493d70 : fbld dword ptr [rcx] ; ret 0x941
0x0000000000422119 : fcomi st(5) ; jns 0x4220da ; ret
0x000000000049d06b : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004e2574 : fcomp qword ptr [rcx] ; add byte ptr [rax], al ; hlt ; ret
0x0000000000447aa2 : fcompi st(2) ; sub al, -0x47 ; ret
0x00000000004e4ef9 : fdiv st(2), st(0) ; jmp qword ptr [rcx]
0x000000000047f499 : fdivr dword ptr [rbx] ; add al, byte ptr [rcx + 0xf] ; pushfq ; ret 0x8445
0x000000000045474e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004d0e8d : fild dword ptr [rcx - 0x7f] ; ret 8
0x0000000000427851 : fild qword ptr [rax] ; jmp 0x413af9
0x0000000000427850 : fild qword ptr [rax] ; jmp 0x413afa
0x0000000000493d4f : fild word ptr [rcx - 0x77] ; ret
0x000000000044d4c7 : fimul dword ptr [rax + 0x29] ; ret 0xf748
0x000000000049d53b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x00000000004926bb : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004dd576 : fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x00000000004b9cf4 : fld dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000042aa5c : fld dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000425946 : fld qword ptr [rcx - 0x1a] ; dec dword ptr [rcx] ; ret 0x941
0x00000000004c7d98 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004652a7 : fmul dword ptr [r11 - 0x1376b800] ; pop rbp ; ret
0x000000000045362e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040deb7 : fmul dword ptr [r8 - 0x75] ; jge 0x40dead ; call 0x48a118
0x00000000004a7387 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004a0156 : fmul dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000045362f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044fcdc : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000040deb8 : fmul dword ptr [rax - 0x75] ; jge 0x40deac ; call 0x48a117
0x0000000000450a1d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042ce8e : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000044f309 : fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004652a8 : fmul dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x00000000004a7388 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004c77a2 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x00000000004d536d : fmul dword ptr [rdx - 0x6a] ; ret
0x00000000004df7dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000425d83 : fmul st(4) ; and qword ptr [r13 - 0x77], r8 ; ret 0x8141
0x0000000000425d8d : fmul st(4) ; and qword ptr [r9], r12 ; ret 0x8945
0x00000000004641b5 : frstor dword ptr [rcx] ; ret 0xd709
0x0000000000439444 : fsincos ; movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, ch ; ret 2
0x0000000000439736 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004105fb : fsub dword ptr [rax - 0x47] ; ret
0x0000000000439737 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000487577 : fsubr st(0) ; ret
0x00000000004a4172 : fsubr st(3) ; mov es, word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000483cab : fsubrp st(1) ; or bh, 0x8a ; push rbp ; ret
0x0000000000403289 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047ddc2 : hlt ; add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000497cfc : hlt ; add rsp, 0x320 ; pop rbp ; ret
0x00000000004a78ec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004658f1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004e32ea : hlt ; call qword ptr [rdi]
0x000000000047d6d7 : hlt ; call rsp
0x00000000004c0636 : hlt ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004bfcb8 : hlt ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000411d7c : hlt ; jmp 0x45cae023
0x00000000004e324a : hlt ; jmp qword ptr [rcx]
0x00000000004e32ca : hlt ; jmp rax
0x00000000004e31ea : hlt ; jmp rdx
0x000000000049556a : hlt ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000402ae0 : hlt ; pop rbp ; mov edi, 0x6e64c0 ; jmp rax
0x00000000004e2332 : hlt ; push qword ptr [rax + rdx - 0x2efc0000] ; hlt ; call rsp
0x00000000004e22f2 : hlt ; push qword ptr [rdi + rcx + 0x61e40000] ; hlt ; call rsp
0x000000000047a89b : hlt ; ret
0x0000000000406343 : hlt ; ret 0x8912
0x00000000004074ca : hlt ; ret 0xb912
0x00000000004e480c : hlt ; sbb al, byte ptr [rax] ; add al, dl ; mov bl, -7 ; jmp qword ptr [rax]
0x00000000004e27a8 : hlt ; stc ; call rsp
0x00000000004e2a68 : hlt ; sub edi, ebx ; jmp rsp
0x00000000004e2572 : idiv bh ; fcomp qword ptr [rcx] ; add byte ptr [rax], al ; hlt ; ret
0x0000000000402fd6 : idiv bh ; inc dword ptr [rcx - 0x47] ; ret
0x00000000004e256a : idiv bh ; mov esp, 0xd4000019 ; ret
0x000000000049b0dc : idiv bh ; pop rbp ; ret
0x00000000004e2562 : idiv bh ; pushfq ; sbb dword ptr [rax], eax ; add ah, al ; ret 0xfff6
0x00000000004c4c32 : idiv byte ptr [rcx + rsi*8 - 0x17] ; ret
0x000000000049a769 : idiv edi ; call rax
0x000000000048eb7b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000049ac87 : idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x00000000004e3e52 : idiv edi ; ret 0xa
0x000000000044badd : imul cl ; ret
0x0000000000420adf : imul ecx, dword ptr [rdi + rdx*8], 0x45782db9 ; ret 0xe6ba
0x00000000004a4b7a : in al, -0x55 ; ret
0x0000000000461f34 : in al, -0x7f ; ret 0xffd0
0x00000000004bf278 : in al, -0x7f ; ret 0xfff7
0x000000000047a898 : in al, 0x2d ; hlt ; ret
0x000000000044a628 : in al, 0x2d ; ret 0xc226
0x00000000004433db : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000437bbd : in al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000049d8c1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000448107 : in al, 0x57 ; ret 0xc750
0x00000000004e22f8 : in al, 0x61 ; hlt ; call rsp
0x00000000004e35fc : in al, 8 ; add byte ptr [rax], al ; adc ch, cl ; cmc ; jmp rsi
0x00000000004e36fc : in al, 9 ; add byte ptr [rax], al ; rcl dh ; cmc ; call rdx
0x0000000000442ae9 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004e3304 : in al, dx ; add eax, 0x46180000 ; cmc ; call rbx
0x000000000049aec5 : in al, dx ; add rsp, 0x8f0 ; pop rbp ; ret
0x0000000000446fd2 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000047a9c4 : in al, dx ; hlt ; ret
0x0000000000427cb4 : in al, dx ; jmp 0x427ea5
0x0000000000427cb3 : in al, dx ; jmp 0x427ea6
0x00000000004598f1 : in al, dx ; jmp 0x459abd
0x00000000004598f0 : in al, dx ; jmp 0x459abe
0x000000000047a954 : in al, dx ; jmp 0x47a9d2
0x000000000049447c : in al, dx ; jmp 0x4944f9
0x000000000049447b : in al, dx ; jmp 0x4944fa
0x000000000049cf25 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000049a42b : in al, dx ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000434bc1 : in al, dx ; mov ecx, 0x3879b9ff ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1b2
0x000000000040308b : in al, dx ; pop rbp ; ret
0x00000000004568ba : in al, dx ; ret 0x8589
0x00000000004598d4 : in al, dx ; ret 0xe8ff
0x00000000004571cd : in al, dx ; ret 0xff3
0x0000000000483af6 : in eax, -0x20 ; jrcxz 0x483a8b ; push rbp ; ret 0xd284
0x0000000000440fb3 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000462ec3 : in eax, -0x77 ; jge 0x462ecb ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004c3dbb : in eax, -0xd ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004b146d : in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004ad1bb : in eax, 0 ; add cl, ch ; ret 0
0x000000000049c72a : in eax, dx ; adc eax, ebp ; js 0x49c71d ; ret
0x0000000000498c11 : in eax, dx ; ret
0x00000000004bb30c : in eax, dx ; ret 0
0x0000000000464114 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000044bd06 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000440d73 : inc dword ptr [rax + 0x558801e2] ; ret
0x000000000049e992 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000425c59 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000044bb55 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041199d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040866c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000407f9a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004872ba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045e10b : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x000000000041f1e5 : inc dword ptr [rax] ; jmp 0x42785b
0x00000000004c6663 : inc dword ptr [rax] ; ret
0x0000000000479cd4 : inc dword ptr [rbp + 0xf] ; ret
0x000000000044448d : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x00000000004a4207 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000483c83 : inc dword ptr [rbx - 0x60f0fe16] ; ret
0x0000000000426f99 : inc dword ptr [rcx + 0x21] ; ret 0x8b48
0x000000000040a2eb : inc dword ptr [rcx + 0x2232cde1] ; ret 0x8141
0x000000000040a2d2 : inc dword ptr [rcx + 0x2232cde6] ; ret 0x8941
0x00000000004071b0 : inc dword ptr [rcx + 0xf] ; ret
0x00000000004c1a4b : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000049ac89 : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x000000000040cc5a : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x00000000004bf272 : inc dword ptr [rcx - 0x1cb46e16] ; in al, -0x7f ; ret 0xfff7
0x000000000049e9d0 : inc dword ptr [rcx - 0x47343] ; jmp qword ptr [rdx]
0x0000000000402fd8 : inc dword ptr [rcx - 0x47] ; ret
0x0000000000426f7b : inc dword ptr [rcx - 0x77] ; ret
0x00000000004d0e86 : inc dword ptr [rcx - 0x7f] ; ret 0xc350
0x0000000000487b9b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041f215 : inc dword ptr [rcx] ; jmp 0x42785b
0x000000000040a170 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000435512 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004964c9 : inc edi ; lodsb al, byte ptr [rsi] ; and ah, dh ; ret 0xe9c5
0x00000000004c556a : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004c3dbd : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004c5926 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x00000000004c090e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x00000000004c665d : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x00000000004c51c5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004c0637 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004c5ec5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x00000000004be639 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004c6615 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004bdf7e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x0000000000492589 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000049a689 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x000000000047a1c5 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000487e27 : inc edi ; test dword ptr [rsi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004e2aa3 : inc esp ; add byte ptr cs:[rax], al ; adc al, -0x71 ; sti ; jmp rsp
0x00000000004e2a63 : inc esp ; sub eax, 0x2bf40000 ; sti ; jmp rsp
0x00000000004e29e3 : inc esp ; sub eax, dword ptr [rax] ; add byte ptr [rdx + rcx*8 - 6], dh ; jmp rsp
0x000000000045cd1a : insb byte ptr [rdi], dx ; ret
0x000000000048f2c6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x0000000000489e10 : insd dword ptr [rdi], dx ; jmp 0x48a105
0x000000000048f31a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000476b07 : int 0x5b
0x000000000040a834 : int 0x80
0x00000000004578e4 : int 6
0x000000000044b772 : int1 ; add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004c318c : int1 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004d8c31 : int1 ; ret 0x43ce
0x00000000004de3f5 : int1 ; ret 0x81e9
0x00000000004d52ff : int1 ; ret 0x8589
0x00000000004de38f : int1 ; ret 0x8b48
0x00000000004640a7 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004d8221 : int1 ; xchg eax, esp ; ret
0x00000000004be92a : iretd ; mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000497a80 : iretd ; push rax ; pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000402ad3 : ja 0x402ada ; pop rbp ; ret
0x000000000042c2b7 : ja 0x42c276 ; mov eax, gs ; ret
0x0000000000459491 : ja 0x4594de ; pop rbp ; ret
0x000000000047b0e2 : ja 0x47b10a ; ret 0x89e8
0x0000000000484cbf : ja 0x484cd3 ; xchg eax, esp ; ret 0xe280
0x0000000000484e62 : ja 0x484e76 ; xchg eax, esp ; ret 0xe280
0x0000000000409def : jae 0x409e49 ; ret
0x0000000000409f37 : jae 0x409f91 ; ret
0x000000000040a27e : jae 0x40a2d8 ; ret
0x00000000004e4c51 : jae 0x4e4c4f ; jmp rsi
0x0000000000409d7f : jb 0x409dd9 ; ret
0x0000000000434bc0 : jb 0x434bb6 ; mov ecx, 0x3879b9ff ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1b2
0x000000000048ea4e : jb 0x48ea7f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004ade7b : jbe 0x4adebf ; ret 0x8589
0x00000000004adecf : jbe 0x4adf13 ; ret 0x8589
0x00000000004bd82b : jbe 0x4bd86f ; ret 0x1db9
0x00000000004c6395 : jbe 0x4c63d9 ; ret 0x8948
0x0000000000402adf : je 0x402add ; pop rbp ; mov edi, 0x6e64c0 ; jmp rax
0x0000000000445fa9 : je 0x445fc1 ; add al, r13b ; sahf ; ret
0x00000000004ad1b8 : je 0x4bb759 ; jmp 0x4b940b
0x00000000004ad110 : je 0x4c0342 ; jmp 0x4b940b
0x00000000004ad1f0 : je 0x4c2994 ; jmp 0x4b940b
0x00000000004ad148 : je 0x4c4f0e ; jmp 0x4b940b
0x00000000004ad180 : je 0x4c5d63 ; jmp 0x4b940b
0x00000000004e29e8 : je 0x4e29b7 ; cli ; jmp rsp
0x000000000042de9b : jg 0x42de58 ; ret 0x418
0x000000000049ae6a : jg 0x49ae7e ; xchg eax, edi ; ret 0xd284
0x00000000004c69a4 : jg 0x4c6973 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000409a36 : jge 0x409a37 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040debb : jge 0x40dea9 ; call 0x48a114
0x0000000000442ae8 : jge 0x442ade ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004437f5 : jge 0x44384c ; ret 0x89b9
0x0000000000443c75 : jge 0x443ccc ; ret 0xb2b9
0x0000000000443c91 : jge 0x443ce8 ; ret 0x48b9
0x000000000044e5aa : jge 0x44e5ab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044e5ca : jge 0x44e5cb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044fcdb : jge 0x44fcbe ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045948d : jge 0x45948e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004625b8 : jge 0x4625ba ; and al, 0x21 ; ret 0xd709
0x0000000000462ec5 : jge 0x462ec9 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000046ff96 : jge 0x46ff1b ; ret 0xffd5
0x0000000000470a60 : jge 0x470a40 ; shr cl, cl ; ret 0x3b
0x000000000047a80a : jge 0x47a80d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000048030a : jge 0x48030b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000048032a : jge 0x48032b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000496023 : jge 0x495ff9 ; call 0x4022e4
0x00000000004960b1 : jge 0x496087 ; call 0x4022e4
0x000000000049ea67 : jge 0x49ea1b ; call rax
0x000000000049eea3 : jge 0x49ee57 ; call rax
0x000000000049f034 : jge 0x49efe0 ; call rax
0x000000000049f0a5 : jge 0x49f051 ; call rax
0x00000000004a6c4a : jge 0x4a6c4d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004c1592 : jge 0x4c1550 ; ret
0x00000000004c1591 : jge 0x4c1551 ; ret
0x00000000004d52fd : jge 0x4d529c ; int1 ; ret 0x8589
0x00000000004436c1 : jl 0x443718 ; ret 0x89b9
0x00000000004e5094 : jl 0x4e50c0 ; add byte ptr [rax], al ; cmp byte ptr [rax - 5], ah ; call qword ptr [rax]
0x0000000000456618 : jle 0x4565ac ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000045e9ea : jle 0x45ea71 ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x00000000004641b3 : jle 0x4641ec ; frstor dword ptr [rcx] ; ret 0xd709
0x00000000004d5351 : jle 0x4d52f0 ; int1 ; ret 0x8589
0x00000000004de38d : jle 0x4de32c ; int1 ; ret 0x8b48
0x00000000004de3f3 : jle 0x4de392 ; int1 ; ret 0x81e9
0x0000000000425e8a : jmp 0x1a0547d6
0x0000000000423e67 : jmp 0x38bf95
0x00000000004023eb : jmp 0x4022a7
0x0000000000408cb1 : jmp 0x4098d7
0x0000000000408cb0 : jmp 0x4098d8
0x000000000040a15c : jmp 0x40a2af
0x0000000000409f31 : jmp 0x40a2b1
0x000000000040acb9 : jmp 0x40ad23
0x000000000040d8fb : jmp 0x40de63
0x000000000041123f : jmp 0x411cb6
0x0000000000427853 : jmp 0x413af7
0x0000000000425e89 : jmp 0x425e78
0x000000000041f1e7 : jmp 0x427859
0x000000000041f4e1 : jmp 0x42785a
0x000000000041ffb4 : jmp 0x42785b
0x0000000000427cb5 : jmp 0x427ea4
0x0000000000437086 : jmp 0x437918
0x000000000043579e : jmp 0x43791a
0x000000000043c73a : jmp 0x43d315
0x000000000043df12 : jmp 0x43df1d
0x0000000000443c6a : jmp 0x443e13
0x0000000000445d59 : jmp 0x44611f
0x0000000000447926 : jmp 0x447d20
0x0000000000448370 : jmp 0x4483db
0x0000000000448ed9 : jmp 0x44905d
0x000000000044e268 : jmp 0x44e48e
0x000000000044f2e4 : jmp 0x44f540
0x000000000044fb79 : jmp 0x44fd05
0x0000000000451a0a : jmp 0x451b4e
0x0000000000451a09 : jmp 0x451b4f
0x0000000000451a09 : jmp 0x451b50
0x00000000004598f2 : jmp 0x459abc
0x000000000045bb12 : jmp 0x45c32d
0x000000000045c0b6 : jmp 0x45c32e
0x0000000000411d7d : jmp 0x45cae022
0x0000000000411e59 : jmp 0x45cae0fe
0x000000000045e139 : jmp 0x45eb1e
0x00000000004617f4 : jmp 0x462eb8
0x00000000004711b0 : jmp 0x474630
0x000000000046f0b4 : jmp 0x474631
0x0000000000470481 : jmp 0x474632
0x0000000000479bb2 : jmp 0x47a208
0x000000000047a955 : jmp 0x47a9d1
0x000000000047db23 : jmp 0x47de97
0x000000000047f3b6 : jmp 0x47f92b
0x0000000000483aeb : jmp 0x484f19
0x0000000000488fa3 : jmp 0x4893c2
0x0000000000489c12 : jmp 0x48a102
0x0000000000489e11 : jmp 0x48a104
0x000000000048cbdb : jmp 0x48d647
0x000000000048cb18 : jmp 0x48d649
0x000000000048d0e1 : jmp 0x48d64a
0x000000000048edf3 : jmp 0x48ee58
0x0000000000456f4f : jmp 0x4907f89f
0x000000000045709b : jmp 0x4907f9eb
0x000000000045716d : jmp 0x4907fabd
0x00000000004571ee : jmp 0x4907fb3e
0x0000000000459194 : jmp 0x49081ae4
0x000000000045920f : jmp 0x49081b5f
0x000000000049158b : jmp 0x4926d0
0x0000000000491fa6 : jmp 0x4926d1
0x00000000004927f9 : jmp 0x492804
0x000000000049447d : jmp 0x4944f8
0x0000000000497928 : jmp 0x497e40
0x0000000000499905 : jmp 0x49a736
0x000000000049cd25 : jmp 0x49cd30
0x000000000049ce87 : jmp 0x49ce92
0x000000000049d0f5 : jmp 0x49d100
0x000000000049ee43 : jmp 0x49f1ec
0x00000000004a2bc6 : jmp 0x4a2ea8
0x00000000004a400d : jmp 0x4a46bf
0x00000000004a5ff7 : jmp 0x4a6c42
0x00000000004a6ac6 : jmp 0x4a6c44
0x00000000004a6d8e : jmp 0x4a6e3f
0x00000000004ad116 : jmp 0x4b9405
0x00000000004bb30b : jmp 0x4c75ff
0x00000000004bdbdd : jmp 0x4c7603
0x00000000004ba78b : jmp 0x4c7604
0x00000000004bb572 : jmp 0x4c7605
0x00000000004ca957 : jmp 0x4ca9a8
0x00000000004cf392 : jmp 0x4d1242
0x00000000004ce464 : jmp 0x4d1243
0x00000000004cecfa : jmp 0x4d1244
0x00000000004dc87e : jmp 0x4df784
0x00000000004db970 : jmp 0x4df785
0x000000000048d7ba : jmp 0x4f549ab6
0x0000000000427a0c : jmp 0x66048719
0x000000000044a5e4 : jmp 0xffffffffb606ccad
0x0000000000493b3f : jmp 0xffffffffc40d7206
0x0000000000440365 : jmp 0xffffffffec06915a
0x0000000000411fb8 : jmp 0xffffffffedfae25d
0x00000000004c5e16 : jmp 0xfffffffff6cdd425
0x00000000004c5e15 : jmp 0xfffffffff6cdd426
0x000000000042130f : jmp qword ptr [rax]
0x00000000004271f6 : jmp qword ptr [rbx]
0x000000000040810f : jmp qword ptr [rcx]
0x00000000004081ef : jmp qword ptr [rdi]
0x000000000041ebe0 : jmp qword ptr [rdx]
0x00000000004081fe : jmp qword ptr [rsi]
0x0000000000402ae7 : jmp rax
0x0000000000409424 : jmp rbx
0x0000000000409674 : jmp rcx
0x00000000004085d0 : jmp rdi
0x0000000000402b27 : jmp rdx
0x000000000042420d : jmp rsi
0x0000000000405b63 : jmp rsp
0x0000000000402b10 : jne 0x402b17 ; pop rbp ; ret
0x0000000000440c91 : jne 0x440c89 ; mov rax, rdx ; pop rbp ; ret
0x000000000044fd39 : jne 0x44fd04 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000451b05 : jne 0x451ae1 ; call rax
0x0000000000459ee2 : jne 0x459eda ; mov rax, rdx ; pop rbp ; ret
0x0000000000484f41 : jne 0x484f39 ; mov rax, rdx ; pop rbp ; ret
0x00000000004c5567 : jne 0x4c553f ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000048a7fe : jno 0x48a79a ; ret
0x000000000048a852 : jno 0x48a7ee ; ret
0x000000000048b846 : jno 0x48b7e2 ; ret
0x00000000004c318b : jno 0x4c3187 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004d0a55 : jno 0x4d0a14 ; ror dword ptr [rcx], 1 ; ret
0x000000000042211b : jns 0x4220d8 ; ret
0x0000000000431f51 : jns 0x431f8e ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x0000000000434bc5 : jns 0x434c02 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1b2
0x0000000000434be1 : jns 0x434c1e ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1b2
0x000000000045c7bc : jns 0x45c7f2 ; ret
0x0000000000497926 : jns 0x497909 ; jmp 0x497e42
0x00000000004a4d63 : jns 0x4a4d42 ; cmc ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004c2883 : jns 0x4c2888 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000042f62e : jo 0x42f5ec ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000044a7fe : jo 0x44a85f ; ret
0x000000000044de89 : jo 0x44deea ; ret
0x000000000046254c : jo 0x462515 ; add dword ptr [rcx], esp ; ret 0xd709
0x0000000000469eae : jo 0x469eba ; ret
0x000000000046bb1e : jo 0x46bb2a ; ret
0x000000000046f06d : jo 0x46f079 ; ret
0x0000000000476354 : jo 0x4763b5 ; ret
0x000000000047dda4 : jo 0x47ddc6 ; add al, r13b ; ret
0x000000000048030f : jo 0x480370 ; ret
0x000000000048030e : jo 0x480371 ; ret
0x00000000004e5360 : jo 0x4e531e ; sti ; call rdi
0x0000000000422083 : jp 0x422041 ; ret 0xd3c8
0x0000000000422082 : jp 0x422042 ; ret 0xd3c8
0x000000000045d354 : jp 0x45d38a ; ret
0x000000000045e13f : jp 0x45e175 ; ret
0x00000000004bfb3e : jp 0x4bfb48 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004d0a53 : jp 0x4d0a30 ; jno 0x4d0a16 ; ror dword ptr [rcx], 1 ; ret
0x0000000000483af9 : jrcxz 0x483a88 ; push rbp ; ret 0xd284
0x0000000000483af8 : jrcxz 0x483a89 ; push rbp ; ret 0xd284
0x000000000049603a : jrcxz 0x495ff7 ; ret
0x0000000000418f3e : js 0x418f87 ; ret 0x8589
0x0000000000418f92 : js 0x418fdb ; ret 0x8589
0x0000000000420ac8 : js 0x420b11 ; ret 0x1b2
0x0000000000420ae4 : js 0x420b2d ; ret 0xe6ba
0x0000000000424ee8 : js 0x424eff ; and dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x0000000000431efd : js 0x431f3a ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x00000000004625b7 : js 0x46263b ; cld ; and al, 0x21 ; ret 0xd709
0x000000000047b12d : js 0x47b155 ; ret 0x89e8
0x000000000047bbfe : js 0x47bc26 ; ret 0xb9e8
0x000000000049c72d : js 0x49c71a ; ret
0x00000000004e31e8 : js 0x4e317e ; hlt ; jmp rdx
0x00000000004e4d58 : js 0x4e4cf1 ; cli ; call rdx
0x0000000000483c88 : lahf ; ret
0x000000000049dec6 : lahf ; ret 0x7a
0x00000000004bdefe : lcall ptr [rbx + 0x47] ; ret
0x0000000000470a5e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004bcc7f : lcall ptr [rdx] ; ret 0x4fab
0x0000000000471b5e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004845bc : lds ecx, ptr [rax - 0x290c46bf] ; pop rbx ; ret 0xaba
0x0000000000448b76 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423e27 : lea ebp, dword ptr [rsi + 0x214530f7] ; rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000423e1d : lea ebp, dword ptr [rsi - 0x76becf09] ; ret 0x8141
0x00000000004261df : lea edi, dword ptr [0x4e11d1] ; call 0x4024d9
0x00000000004912b4 : lea edx, dword ptr [rax - 0x17000006] ; ret 0xf717
0x000000000040c3a8 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040aeb1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c194 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c3a7 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045c193 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000478f5b : leave ; ret 0x8589
0x00000000004c9b4f : leave ; ret 0x86f8
0x00000000004796ee : leave ; ret 0xde9
0x000000000042784e : ljmp ptr [rcx - 0x16d720b4] ; popfq ; ret 0xfffe
0x00000000004c6393 : ljmp ptr [rcx] ; jbe 0x4c63db ; ret 0x8948
0x000000000043cfea : ljmp ptr [rcx] ; ret 0x8b48
0x000000000046f3be : ljmp ptr [rdi] ; ret 0x23da
0x00000000004093d3 : ljmp ptr [rsi] ; push rdi ; ret 0xe99e
0x00000000004e32c4 : lodsb al, byte ptr [rsi] ; add eax, 0xc4580000 ; hlt ; jmp rax
0x00000000004964cc : lodsb al, byte ptr [rsi] ; and ah, dh ; ret 0xe9c5
0x0000000000489c11 : lodsb al, byte ptr [rsi] ; jmp 0x48a103
0x0000000000489c10 : lodsb al, byte ptr [rsi] ; jmp 0x48a104
0x000000000041eff0 : lodsb al, byte ptr [rsi] ; ret
0x0000000000431f35 : lodsb al, byte ptr [rsi] ; ret 0xc380
0x000000000044f06d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000043686e : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000047a5ff : lodsd eax, dword ptr [rsi] ; cmp al, -1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004c1590 : lodsd eax, dword ptr [rsi] ; jge 0x4c1552 ; ret
0x0000000000460157 : lodsd eax, dword ptr [rsi] ; loopne 0x460144 ; ret 0x8589
0x0000000000431f89 : lodsd eax, dword ptr [rsi] ; ret 0xc380
0x00000000004e2ae9 : lodsd eax, dword ptr [rsi] ; sti ; jmp rsp
0x0000000000440d9a : loop 0x440da1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000440d9a : loop 0x440da3 ; movzx eax, dl ; pop rbp ; ret
0x000000000044e6b0 : loop 0x44e6a5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000049d022 : loop 0x49cfd5 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000408cae : loope 0x408c98 ; jmp 0x4098da
0x000000000040a2ed : loope 0x40a2c0 ; xor ah, byte ptr [rdx] ; ret 0x8141
0x000000000040a356 : loope 0x40a360 ; movzx eax, r9b ; pop rbp ; ret
0x000000000040be3a : loope 0x40be46 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040dd4b : loope 0x40dd57 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b339 : loope 0x41b2c0 ; ret
0x000000000041ffba : loope 0x41ff41 ; ret
0x0000000000438204 : loope 0x43823f ; ret
0x00000000004383fc : loope 0x438437 ; ret
0x00000000004394c4 : loope 0x4394ff ; ret
0x000000000044f3ee : loope 0x44f3a9 ; xchg eax, ebp ; jmp 0x44f543
0x00000000004723c5 : loope 0x472393 ; jmp 0x474633
0x000000000047d00e : loope 0x47d01a ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004e3d51 : loope 0x4e3d4b ; jmp rbx
0x0000000000411d7a : loopne 0x411dae ; hlt ; jmp 0x45cae025
0x0000000000411d79 : loopne 0x411daf ; hlt ; jmp 0x45cae026
0x0000000000411e56 : loopne 0x411e8a ; cmc ; jmp 0x45cae101
0x0000000000411e55 : loopne 0x411e8b ; cmc ; jmp 0x45cae102
0x0000000000412b1f : loopne 0x412b52 ; or al, 0x5b ; ret 0x89c3
0x0000000000412b1e : loopne 0x412b53 ; or al, 0x5b ; ret 0x89c3
0x000000000041b2e5 : loopne 0x41b26c ; ret
0x00000000004244bc : loopne 0x4244c2 ; dec dword ptr [rax + 0x39] ; ret 0xf41
0x0000000000424719 : loopne 0x4246d7 ; ret
0x0000000000424929 : loopne 0x42492f ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042f39f : loopne 0x42f3d1 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000042f39e : loopne 0x42f3d2 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000042f47b : loopne 0x42f4ad ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000042f47a : loopne 0x42f4ae ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000043953c : loopne 0x4395a2 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043e828 : loopne 0x43e88e ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043f73f : loopne 0x43f746 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000447e4b : loopne 0x447e7d ; push rsi ; ret 0xc750
0x0000000000447e4a : loopne 0x447e7e ; push rsi ; ret 0xc750
0x0000000000447e8d : loopne 0x447ebf ; push rdi ; ret 0xc750
0x0000000000447e8c : loopne 0x447ec0 ; push rdi ; ret 0xc750
0x000000000044903a : loopne 0x44908d ; add esp, 0xc0 ; pop rbp ; ret
0x000000000044a5ab : loopne 0x44a5fb ; add esp, 0x20 ; pop rbp ; ret
0x000000000044a5aa : loopne 0x44a5fc ; add esp, 0x20 ; pop rbp ; ret
0x000000000044de85 : loopne 0x44ded5 ; add esp, 0x70 ; pop rbp ; ret
0x000000000044de84 : loopne 0x44ded6 ; add esp, 0x70 ; pop rbp ; ret
0x000000000044e220 : loopne 0x44e229 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000044e3e9 : loopne 0x44e3f0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000450ada : loopne 0x450ae1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045412e : loopne 0x45417f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045412d : loopne 0x454180 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004593cd : loopne 0x459420 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000460158 : loopne 0x460143 ; ret 0x8589
0x0000000000460270 : loopne 0x46025b ; ret 0x8589
0x0000000000461a1a : loopne 0x461a05 ; ret 0x558b
0x0000000000461f2e : loopne 0x461eb3 ; ret 0x33f7
0x000000000046455e : loopne 0x464561 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x00000000004667a3 : loopne 0x4667f6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000475d4d : loopne 0x475db3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000477134 : loopne 0x477187 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004776e8 : loopne 0x4776ef ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000479f8f : loopne 0x479fe2 ; add esp, 0x300 ; pop rbp ; ret
0x000000000048072c : loopne 0x4806c0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048072b : loopne 0x4806c1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000483af7 : loopne 0x483b41 ; jrcxz 0x483a8a ; push rbp ; ret 0xd284
0x000000000048e4b3 : loopne 0x48e4bc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000048ee3e : loopne 0x48ee8e ; add esp, 0x60 ; pop rbp ; ret
0x000000000048ee3d : loopne 0x48ee8f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000494d42 : loopne 0x494d49 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004975fd : loopne 0x497606 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a78f0 : loopne 0x4a78f7 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004c981c : loopne 0x4c986b ; mov esp, ebp ; pop rbp ; ret
0x00000000004c981b : loopne 0x4c986c ; mov esp, ebp ; pop rbp ; ret
0x00000000004c9a6c : loopne 0x4c9abb ; mov esp, ebp ; pop rbp ; ret
0x00000000004c9a6b : loopne 0x4c9abc ; mov esp, ebp ; pop rbp ; ret
0x00000000004cad8f : loopne 0x4cad23 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004cad8e : loopne 0x4cad24 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000049c729 : mov ah, -0x13 ; adc eax, ebp ; js 0x49c71e ; ret
0x000000000049d021 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004bc830 : mov ah, -0x50 ; out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000046ff8d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000470067 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000046427f : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004e2334 : mov ah, 0x10 ; add byte ptr [rax], al ; add al, -0x2f ; hlt ; call rsp
0x00000000004e2764 : mov ah, 0x21 ; add byte ptr [rax], al ; stc ; call rsp
0x00000000004e27a4 : mov ah, 0x22 ; add byte ptr [rax], al ; hlt ; stc ; call rsp
0x000000000049466a : mov ah, 0x2d ; ret 0xe41a
0x00000000004e26f0 : mov ah, 0x34 ; clc ; jmp rsp
0x000000000044f64e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000046e015 : mov ah, 0x75 ; ret
0x00000000004e22f4 : mov ah, 0xf ; add byte ptr [rax], al ; in al, 0x61 ; hlt ; call rsp
0x000000000049f03b : mov al, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x00000000004e3580 : mov al, -0x3a ; cmc ; jmp qword ptr [rdi]
0x0000000000476b23 : mov al, -0x47 ; ret
0x000000000044f3ef : mov al, -0x6b ; jmp 0x44f542
0x00000000004a238f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000408b66 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000446fd6 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426232 : mov al, 0 ; call 0x4024f4
0x00000000004266a1 : mov al, 0 ; call 0x402914
0x000000000048ef32 : mov al, 0 ; call 0x402918
0x0000000000442b75 : mov al, 0x12 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004da450 : mov al, 0x21 ; ret 0x8941
0x00000000004406d1 : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004587d0 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000047c145 : mov al, 0x4d ; ret 0x4655
0x000000000040a272 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000440fb4 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000049d47b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000043fc1d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c7d5a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000047fa97 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043fe7f : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000049d53c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000049d47a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000049d244 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000048a6c9 : mov bh, -0x3e ; jmp 0x48a685
0x000000000048b780 : mov bh, -0x3e ; jmp 0x48b73c
0x00000000004801ac : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000049d249 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004ce462 : mov bh, -0x6d ; jmp 0x4d1245
0x00000000004bc835 : mov bl, -0x2e ; ret 0x1b2
0x00000000004adeeb : mov bl, -0x2e ; ret 0x8589
0x00000000004bc851 : mov bl, -0x2e ; ret 0x8b48
0x00000000004e4811 : mov bl, -7 ; jmp qword ptr [rax]
0x00000000004679b5 : mov bl, 0x75 ; ret
0x00000000004c6db2 : mov bpl, -0xd ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000427bcd : mov byte ptr [r15], r9b ; test ah, ch ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000042a990 : mov byte ptr [r8 + 0x3b], r9b ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000042a991 : mov byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000479803 : mov byte ptr [rax - 0x7f], cl ; ret 0x13
0x000000000044f4b1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004845be : mov byte ptr [rcx - 0x47], al ; salc ; pop rbx ; ret 0xaba
0x00000000004e4178 : mov byte ptr [rcx], dl ; clc ; jmp qword ptr [rdi]
0x0000000000427bce : mov byte ptr [rdi], cl ; test ah, ch ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000402b43 : mov byte ptr [rip + 0x2e39ce], 1 ; ret
0x00000000004c6db3 : mov ch, -0xd ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000047eb25 : mov ch, 0x17 ; ret
0x0000000000424927 : mov ch, 0x3c ; loopne 0x424931 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042f62c : mov ch, ah ; jo 0x42f5ee ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000046f80f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004cb214 : mov ch, cl ; ret
0x00000000004ba789 : mov cl, 0x13 ; jmp 0x4c7606
0x00000000004d011a : mov cl, 0x13 ; ret 0x1ab9
0x00000000004d0f33 : mov cl, 0x13 ; ret 0x1e9
0x00000000004cc379 : mov cl, 0x13 ; ret 0x8589
0x0000000000439447 : mov cl, ch ; ret 2
0x0000000000459cc4 : mov dh, -0x39 ; pop rbp ; ret
0x000000000048a675 : mov dh, -0x3e ; jmp 0x48a631
0x0000000000440d9d : mov dh, -0x3e ; pop rbp ; ret
0x000000000043fedd : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040be3d : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a35a : mov dh, -0x3f ; pop rbp ; ret
0x000000000042f6e0 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004399b3 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043f0d6 : mov dh, -0x40 ; add rsp, 0x38 ; pop rbp ; ret
0x000000000040b04e : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d3a5 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004c8d24 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000427e50 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000043973b : mov dh, -0x40 ; pop rbp ; ret
0x000000000049d53f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004e48b1 : mov dh, -7 ; jmp qword ptr [rdi]
0x000000000047eb79 : mov dh, 0x17 ; ret
0x00000000004c97da : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004c8a51 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000043fe69 : mov dr1, word ptr [rcx + rdi*4 + 0x29] ; ret 0xa474
0x0000000000447d2d : mov dword ptr [0x6e8978], edi ; pop rbp ; ret
0x0000000000465f29 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000465aff : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451985 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x000000000040aa41 : mov dword ptr [rbp - 0x138], eax ; call 0x476c88
0x0000000000453fc9 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x0000000000427cb2 : mov dword ptr [rbp - 0x14], eax ; jmp 0x427ea7
0x00000000004598ef : mov dword ptr [rbp - 0x14], eax ; jmp 0x459abf
0x000000000049447a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4944fb
0x0000000000457d9d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000457fd0 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000047f481 : mov dword ptr [rbp - 0x208], ecx ; call r9
0x000000000044a5a9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000047f714 : mov dword ptr [rbp - 0x230], ecx ; call r9
0x0000000000439735 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040deb6 : mov dword ptr [rbp - 0x28], eax ; mov rdi, qword ptr [rbp - 0x18] ; call 0x48a119
0x0000000000488fa0 : mov dword ptr [rbp - 0x2c], eax ; jmp 0x4893c5
0x000000000044f2e1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x44f543
0x000000000044fb76 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x44fd08
0x000000000044fc01 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x44fd08
0x000000000045df7b : mov dword ptr [rbp - 0x45c], edx ; call r11
0x00000000004bb338 : mov dword ptr [rbp - 0x49c], eax ; jmp 0x4c7605
0x000000000044f64c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000489c0f : mov dword ptr [rbp - 0x54], eax ; jmp 0x48a105
0x000000000042d693 : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000049e97c : mov dword ptr [rbp - 0x6c8], eax ; call r8
0x000000000048cbd8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x48d64a
0x000000000049ebd5 : mov dword ptr [rbp - 0x6e8], ecx ; call rdx
0x000000000049eda0 : mov dword ptr [rbp - 0x6f8], ecx ; call rdx
0x0000000000403287 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044fbe1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x00000000004032b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000462ec4 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000409a35 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000466206 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004122e5 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412335 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000459490 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000047a80c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004a6c4c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004a795d : mov dword ptr [rdi], ecx ; pop rbp ; ret
0x0000000000447d31 : mov dword ptr [rsi], ebp ; pop rbp ; ret
0x0000000000465dad : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000420ac4 : mov eax, 0x782db9e4 ; ret 0x1b2
0x000000000045813b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000047fcce : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x000000000049ea62 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000049f0a0 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000047f7d3 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000049f155 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x470] ; call rax
0x000000000049f030 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000044eceb : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048ecbb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045c190 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000480461 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000049a429 : mov eax, dword ptr [rbp - 0x14] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004928a1 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000048ee8e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000449102 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044a22e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004942f5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451d22 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004433d9 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000437bbb : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000048ee3c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044de83 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000048072a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c981a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cfdf : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044cf72 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004652a6 : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000465daf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044fd3f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x000000000047a7e7 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x0000000000457567 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a6646 : mov eax, dword ptr [rbp - 0x60] ; mov rdi, qword ptr [rax] ; call 0x402928
0x00000000004a6a24 : mov eax, dword ptr [rbp - 0x68] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048bd66 : mov eax, dword ptr [rbp - 0x70] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004658ef : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000495568 : mov eax, dword ptr [rbp - 0xc] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004a49b3 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000439ad8 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000462ec7 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000494820 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004a6e22 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043eca5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000492afc : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043fb02 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409a39 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044e5ad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044e5cd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048032d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048030d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000465dae : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000049d246 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000049cc93 : mov eax, eax ; pop rbp ; ret
0x000000000049d06a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000047facc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047feff : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000452aa1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000439b7d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000440c94 : mov eax, edx ; pop rbp ; ret
0x000000000043fc4f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047fd53 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000049cf8d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043a5e6 : mov eax, esi ; pop rbp ; ret
0x000000000042be80 : mov eax, gs ; ret
0x000000000049d245 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000448101 : mov ebp, 0xc7000001 ; in al, 0x57 ; ret 0xc750
0x00000000004727c8 : mov ebp, 0xe19c53ba ; ret
0x0000000000488a07 : mov ebp, 0xe9000006 ; ret 1
0x000000000049f159 : mov ebp, 0xfffffb90 ; call rax
0x00000000004de148 : mov ebp, 0xfffffe00 ; call 0x4ca417
0x000000000042be35 : mov ebp, eax ; ret
0x00000000004cdfcc : mov ebp, ecx ; ret
0x0000000000402b6b : mov ebp, esp ; call rax
0x0000000000402ad1 : mov ebp, esp ; ja 0x402adc ; pop rbp ; ret
0x0000000000462ec2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004da572 : mov ebx, 0x214efb6f ; ret 0x8941
0x0000000000445b73 : mov ebx, 0x5bb9effe ; ret 0xd0b
0x000000000047e5d0 : mov ebx, 0x81df9d3b ; ret 0xffff
0x00000000004dd23e : mov ebx, 0x81ffffff ; ret 0x8ae1
0x0000000000445d5a : mov ebx, 0xb8000003 ; ret
0x00000000004c1241 : mov ebx, 0xc7fff410 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000434bc2 : mov ecx, 0x3879b9ff ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1b2
0x00000000004617f5 : mov ecx, 0xb8000016 ; ret
0x0000000000445c98 : mov ecx, 0xd85ebbc2 ; xchg eax, ebp ; ret 0x2018
0x0000000000465afc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000453edb : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045412c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000454a46 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044fcde : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045bc72 : mov ecx, dword ptr [rbp - 0x68] ; mov rdx, qword ptr [rcx] ; call rax
0x000000000045813d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000453edf : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042669f : mov ecx, eax ; mov al, 0 ; call 0x402916
0x000000000048b493 : mov ecx, gs ; ret 0xa
0x0000000000402b65 : mov edi, 0x6e5e20 ; mov rbp, rsp ; call rax
0x0000000000402ae2 : mov edi, 0x6e64c0 ; jmp rax
0x0000000000402b22 : mov edi, 0x6e64c0 ; jmp rdx
0x00000000004598f3 : mov edi, 0xb8000001 ; ret
0x0000000000491406 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000046f067 : mov edi, 0xb8000055 ; wait ; jo 0x46f07f ; ret
0x0000000000436c4a : mov edi, 0xffffff35 ; jmp qword ptr [rcx]
0x00000000004a664a : mov edi, dword ptr [rax] ; call 0x402924
0x000000000040deba : mov edi, dword ptr [rbp - 0x18] ; call 0x48a115
0x00000000004de147 : mov edi, dword ptr [rbp - 0x200] ; call 0x4ca418
0x0000000000496022 : mov edi, dword ptr [rbp - 0x30] ; call 0x4022e5
0x000000000049f158 : mov edi, dword ptr [rbp - 0x470] ; call rax
0x000000000049ea66 : mov edi, dword ptr [rbp - 0x50] ; call rax
0x000000000049f033 : mov edi, dword ptr [rbp - 0x58] ; call rax
0x000000000045948c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044e5a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044e5c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000480329 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000480309 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000453ee2 : mov edi, dword ptr [rcx] ; call rax
0x0000000000451b01 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000402fd2 : mov edi, eax ; call 0x402679
0x00000000004df7d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000424717 : mov edi, fs ; loopne 0x4246d9 ; ret
0x00000000004df7d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004def9c : mov edx, 0x2144b57b ; ret 0x8941
0x0000000000423e73 : mov edx, 0x3dbe000b ; ret 0xab78
0x00000000004a2b3e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000046f82b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000479b44 : mov edx, 0xc7000006 ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000484e46 : mov edx, 0xe9192036 ; ret 0
0x00000000004df1b1 : mov edx, 0xe9b9f505 ; ret
0x000000000049c782 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000480465 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045bc76 : mov edx, dword ptr [rcx] ; call rax
0x0000000000426230 : mov edx, eax ; mov al, 0 ; call 0x4024f6
0x00000000004a4174 : mov es, word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004218f2 : mov es, word ptr [rdx - 0x47] ; ret 0x7f35
0x000000000043fe49 : mov esi, 0x29b9727f ; ret 0xa474
0x00000000004706a2 : mov esi, 0x39443e04 ; ret 0xf41
0x00000000004a2b27 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000479989 : mov esi, 0x86cd86af ; outsb dx, byte ptr [rsi] ; ret
0x0000000000407542 : mov esi, 0xd3b90c32 ; jmp rsp
0x000000000043c785 : mov esi, dword ptr [rax] ; call 0x43f168
0x0000000000451b04 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000044fce2 : mov esi, dword ptr [rcx] ; call rax
0x000000000045bc6f : mov esi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x68] ; mov rdx, qword ptr [rcx] ; call rax
0x0000000000402b20 : mov esi, eax ; mov edi, 0x6e64c0 ; jmp rdx
0x000000000044fd3c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004422c5 : mov esp, 0x294cf223 ; ret 0x3948
0x000000000042c3f4 : mov esp, 0x34ebf92d ; ret 0x4589
0x000000000042c436 : mov esp, 0x34ebfa2d ; ret 0x4589
0x000000000049fd55 : mov esp, 0x5ba9942d ; ret
0x000000000049fd97 : mov esp, 0x5ba9952d ; ret
0x000000000043efd6 : mov esp, 0x8b4826cb ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x48f8
0x00000000004ca88f : mov esp, 0xb898e02d ; ret
0x0000000000447abd : mov esp, 0xb9dde3e5 ; ret
0x00000000004bfb3d : mov esp, 0xc700007a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004e256c : mov esp, 0xd4000019 ; ret
0x0000000000411fb3 : mov esp, 0xf5bf0003 ; jmp 0xffffffffedfae262
0x000000000040308a : mov esp, ebp ; pop rbp ; ret
0x0000000000447d2c : mov qword ptr [0x6e8978], rdi ; pop rbp ; ret
0x000000000040aa40 : mov qword ptr [rbp - 0x138], rax ; call 0x476c89
0x0000000000409a34 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000466205 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004122e4 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412334 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045948f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000049c728 : mov r12b, -0x13 ; adc eax, ebp ; js 0x49c71f ; ret
0x0000000000494669 : mov r12b, 0x2d ; ret 0xe41a
0x000000000044f64d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042c3f3 : mov r12d, 0x34ebf92d ; ret 0x4589
0x000000000042c435 : mov r12d, 0x34ebfa2d ; ret 0x4589
0x000000000049fd54 : mov r12d, 0x5ba9942d ; ret
0x000000000049fd96 : mov r12d, 0x5ba9952d ; ret
0x00000000004ca88e : mov r12d, 0xb898e02d ; ret
0x0000000000424716 : mov r15, fs ; loopne 0x4246da ; ret
0x000000000049f03a : mov r8b, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x000000000047c144 : mov r8b, 0x4d ; ret 0x4655
0x000000000048b492 : mov r9d, gs ; ret 0xa
0x000000000049ea61 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000049f09f : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000049f02f : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000044ecea : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000048ecba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000480460 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000048ee8d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000449101 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044a22d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000451d21 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000048ee3b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044de82 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044cf71 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044fd3e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004ca993 : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004a6645 : mov rax, qword ptr [rbp - 0x60] ; mov rdi, qword ptr [rax] ; call 0x402929
0x000000000049481f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043fb01 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409a38 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044e5ac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044e5cc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000048032c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000048030c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000049d069 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000049cc92 : mov rax, r8 ; pop rbp ; ret
0x0000000000452aa0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000439b7c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000440c93 : mov rax, rdx ; pop rbp ; ret
0x000000000043a5e5 : mov rax, rsi ; pop rbp ; ret
0x0000000000402b6a : mov rbp, rsp ; call rax
0x0000000000402ad0 : mov rbp, rsp ; ja 0x402add ; pop rbp ; ret
0x0000000000454a45 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044fcdd : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045bc71 : mov rcx, qword ptr [rbp - 0x68] ; mov rdx, qword ptr [rcx] ; call rax
0x000000000045813c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000453ede : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042669e : mov rcx, rax ; mov al, 0 ; call 0x402917
0x00000000004a6649 : mov rdi, qword ptr [rax] ; call 0x402925
0x000000000040deb9 : mov rdi, qword ptr [rbp - 0x18] ; call 0x48a116
0x00000000004de146 : mov rdi, qword ptr [rbp - 0x200] ; call 0x4ca419
0x0000000000496021 : mov rdi, qword ptr [rbp - 0x30] ; call 0x4022e6
0x000000000049f157 : mov rdi, qword ptr [rbp - 0x470] ; call rax
0x000000000049ea65 : mov rdi, qword ptr [rbp - 0x50] ; call rax
0x000000000049f032 : mov rdi, qword ptr [rbp - 0x58] ; call rax
0x000000000045948b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044e5a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044e5c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000480328 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000480308 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000453ee1 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000451b00 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000049c781 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000480464 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045bc75 : mov rdx, qword ptr [rcx] ; call rax
0x000000000042622f : mov rdx, rax ; mov al, 0 ; call 0x4024f7
0x000000000043c784 : mov rsi, qword ptr [rax] ; call 0x43f169
0x0000000000451b03 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044fce1 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000402b1f : mov rsi, rax ; mov edi, 0x6e64c0 ; jmp rdx
0x000000000044fd3b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000403089 : mov rsp, rbp ; pop rbp ; ret
0x000000000048ea51 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004be92b : mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004e37a4 : mov word ptr [rdx], cs ; add byte ptr [rax], al ; cld ; cmc ; jmp qword ptr [rax]
0x00000000004427b8 : movabs al, byte ptr [0x2948fa01481ae7a5] ; ret 0xb848
0x00000000004b94b8 : movabs al, byte ptr [0x8348e28948fffffb] ; ret 0x48f0
0x00000000004b96db : movabs al, byte ptr [0x8348e28948fffffc] ; ret 0x48f0
0x000000000041e76c : movabs al, byte ptr [0x8348e28948fffffd] ; ret 0x48f0
0x000000000041e995 : movabs al, byte ptr [0x8348e28948fffffe] ; ret 0x48f0
0x0000000000447caa : movabs al, byte ptr [0x8cacffffff7485c7] ; ret
0x000000000049eab2 : movabs al, byte ptr [0xa0b80000072de96b] ; ret 0x7a
0x00000000004939e1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000045c256 : movabs al, byte ptr [0xffff7485c7018948] ; jmp rdi
0x000000000046b308 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000440c59 : movabs dword ptr [0x5d20c483480004e2], eax ; ret
0x0000000000415660 : movabs dword ptr [0x840ffffff8c08589], eax ; ret 0xcb
0x0000000000483d4b : movabs dword ptr [0x9ffffffffe681b1], eax ; ret 0xf709
0x0000000000422f2e : movabs eax, dword ptr [0x950f41000000003d] ; ret 0x8445
0x000000000046270d : movabs eax, dword ptr [0xffff6085c7000007] ; jmp rsi
0x00000000004571ca : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x0000000000423e66 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x38bf96
0x0000000000439446 : movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, ch ; ret 2
0x00000000004ae01e : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rbx, esp ; ret
0x000000000046e555 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004b4663 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x00000000004beb31 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000044dd35 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004c79d1 : movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004adfcb : movsxd rbx, esp ; ret
0x000000000042f6df : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004399b2 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043f0d5 : movzx eax, al ; add rsp, 0x38 ; pop rbp ; ret
0x000000000040b04d : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d3a4 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004c8d23 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000427e4f : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043973a : movzx eax, al ; pop rbp ; ret
0x000000000049d53e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000049d248 : movzx eax, ax ; pop rbp ; ret
0x0000000000459cc3 : movzx eax, bh ; pop rbp ; ret
0x000000000043fedc : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040be3c : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a359 : movzx eax, cl ; pop rbp ; ret
0x00000000004801ab : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000459cc2 : movzx eax, dil ; pop rbp ; ret
0x0000000000440d9c : movzx eax, dl ; pop rbp ; ret
0x000000000040a358 : movzx eax, r9b ; pop rbp ; ret
0x00000000004a2938 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043f36d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x2dd24bbb], cl ; ret
0x000000000048bd68 : nop ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004677f5 : nop ; ret
0x0000000000475c02 : nop ; ret 0x148
0x0000000000475c16 : nop ; ret 0x2948
0x00000000004df7f8 : nop dword ptr [rax + rax] ; ret
0x00000000004d1073 : not byte ptr [rdx - 0x7ebe5362] ; ret
0x000000000043686c : not dword ptr [rdx - 0x53] ; and al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000485f48 : or ah, byte ptr [rcx] ; ret
0x000000000047a9b9 : or al, 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000047a7e3 : or al, 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000047dda2 : or al, 0x25 ; jo 0x47ddc8 ; add al, r13b ; ret
0x000000000046ff8a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000470064 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000412b21 : or al, 0x5b ; ret 0x89c3
0x00000000004b26c6 : or al, 0x7a ; ret 0x8909
0x00000000004ba28d : or al, 0x7a ; ret 0xb909
0x000000000047b7d1 : or al, 0xffffffffffffffba ; ret 0x8949
0x000000000047b912 : or al, 0xffffffffffffffba ; ret 0xba49
0x000000000047bb60 : or al, 0xffffffffffffffba ; ret 0xe949
0x00000000004ad06b : or al, 1 ; add cl, ch ; nop ; ret
0x00000000004e3324 : or al, 6 ; add byte ptr [rax], al ; fadd dword ptr [rsi - 0xb] ; call rdi
0x00000000004e37a5 : or al, byte ptr [rax] ; add byte ptr [rax - 4], cl ; cmc ; jmp qword ptr [rax]
0x000000000040b317 : or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000047b716 : or al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000483cad : or bh, 0x8a ; push rbp ; ret
0x00000000004598d1 : or bh, al ; in al, dx ; ret 0xe8ff
0x00000000004940a5 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000045bd60 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x0000000000447aa1 : or bh, bl ; sub al, -0x47 ; ret
0x0000000000423e72 : or bh, byte ptr [rdx + 0x3dbe000b] ; ret 0xab78
0x000000000045661d : or byte ptr [r15], 0x8f ; ret 6
0x0000000000440d5f : or byte ptr [r15], cl ; xchg eax, esp ; ret 0xe280
0x0000000000465b00 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004db2b3 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004e353d : or byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0xfff5
0x0000000000484a84 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412b1a : or byte ptr [rax], al ; add byte ptr [rbx + 0xc2de045], cl ; pop rbx ; ret 0x89c3
0x000000000048c1b8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000461855 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004614ec : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x00000000004457ca : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000464562 : or byte ptr [rcx], ah ; ret 0x8941
0x0000000000484fb4 : or byte ptr [rcx], bl ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045661e : or byte ptr [rdi], 0x8f ; ret 6
0x0000000000440d60 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000047b715 : or byte ptr [rdx], 0 ; add cl, ch ; ret 1
0x00000000004adf23 : or ch, dh ; ret 0x8589
0x00000000004bcbeb : or ch, dh ; ret 0xa2b9
0x00000000004c601b : or ch, dh ; ret 0xdae9
0x0000000000422f45 : or cl, byte ptr [rcx] ; add al, ch ; ret 0xfdf3
0x00000000004940a4 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000471076 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000466204 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004e36dd : or dword ptr [rax], eax ; add al, dl ; salc ; cmc ; call qword ptr [rbx]
0x00000000004e36fd : or dword ptr [rax], eax ; add al, dl ; salc ; cmc ; call rdx
0x000000000042e615 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040bbb3 : or dword ptr [rbx - 0x1d34b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000424925 : or dword ptr [rbx - 0x1fc34b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000485ea0 : or dword ptr [rcx], esp ; ret
0x000000000040b316 : or dword ptr [rdx], 0 ; add cl, ch ; ret
0x000000000040d176 : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004ca98f : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x00000000004ca5e7 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000425142 : or eax, 0xb8000027 ; ret 0x42b4
0x00000000004e382d : or eax, dword ptr [rax] ; add al, al ; xor dh, dh ; call qword ptr [rbx]
0x00000000004e384d : or eax, dword ptr [rax] ; add al, al ; xor esi, esi ; jmp qword ptr [rax]
0x0000000000479695 : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000041ef3d : or eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000049cc90 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000049cf93 : or eax, esi ; pop rbp ; ret
0x00000000004dd578 : or ebp, ecx ; jmp qword ptr [rcx]
0x000000000049d067 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004a795b : or ecx, eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0x00000000004bb308 : or ecx, edx ; stosd dword ptr [rdi], eax ; jmp 0x4c7602
0x0000000000465dab : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000049d066 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000049cc8f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040a2d4 : out -0x33, al ; xor ah, byte ptr [rdx] ; ret 0x8941
0x00000000004d0a71 : out -0x47, al ; ror dword ptr [rcx], 1 ; ret
0x00000000004bc832 : out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x0000000000410377 : out 0x27, eax ; ret
0x0000000000459cc0 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000047196b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004c7d5c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c3452 : out dx, al ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004422c4 : out dx, al ; mov esp, 0x294cf223 ; ret 0x3948
0x00000000004175dd : out dx, al ; ret
0x00000000004adf24 : out dx, al ; ret 0x8589
0x00000000004aaa4e : out dx, al ; ret 0x895e
0x00000000004bcbec : out dx, al ; ret 0xa2b9
0x00000000004c601c : out dx, al ; ret 0xdae9
0x0000000000455659 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004557d8 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043fc1f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000476b22 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041c50d : out dx, eax ; ret
0x00000000004b8236 : out dx, eax ; ret 0x895e
0x00000000004bc544 : out dx, eax ; ret 0xe95e
0x000000000047b90e : out dx, eax ; xor esi, 0xffffffb9 ; or al, 0xffffffffffffffba ; ret 0xba49
0x00000000004a2b29 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004a815f : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004077d4 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042c2b4 : outsb dx, byte ptr [rsi] ; enter 0x77c7, -0x47 ; mov eax, gs ; ret
0x00000000004be68b : outsb dx, byte ptr [rsi] ; pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000047998e : outsb dx, byte ptr [rsi] ; ret
0x000000000044f5d9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000472a55 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004676a6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000472aa0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004077d3 : outsb dx, byte ptr gs:[rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000048da41 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000047e7d5 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b900a : outsd dx, dword ptr [rsi] ; ret 0
0x00000000004a2b2c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000048ea4c : pop ax ; jb 0x48ea81 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004be68c : pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000426343 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004df7ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043953e : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426345 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004df7ee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aeb5 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004df7f0 : pop r14 ; pop r15 ; ret
0x000000000040c3ac : pop r14 ; pop rbp ; ret
0x000000000040aeb7 : pop r15 ; pop rbp ; ret
0x00000000004df7f2 : pop r15 ; ret
0x000000000048ea4d : pop rax ; jb 0x48ea80 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004ad0a7 : pop rax ; ret
0x0000000000497a82 : pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x00000000004a4171 : pop rbp ; fsubr st(3) ; mov es, word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000402b42 : pop rbp ; mov byte ptr [rip + 0x2e39ce], 1 ; ret
0x0000000000402ae1 : pop rbp ; mov edi, 0x6e64c0 ; jmp rax
0x0000000000402b1e : pop rbp ; mov rsi, rax ; mov edi, 0x6e64c0 ; jmp rdx
0x000000000042cb31 : pop rbp ; out dx, eax ; ret
0x00000000004df7eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426346 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004df7ef : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000046f812 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000046bae5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000046f82e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000402ad5 : pop rbp ; ret
0x000000000042162c : pop rbp ; sbb dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x000000000048d0e2 : pop rbx ; add eax, 0x8d480000 ; cmp al, 0x25 ; ret
0x000000000043953d : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040aeb4 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c3ab : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000412693 : pop rbx ; pop rbp ; ret
0x000000000048c1c0 : pop rbx ; ret
0x00000000004846c5 : pop rbx ; ret 0x45e9
0x0000000000413531 : pop rbx ; ret 0x48c3
0x0000000000481032 : pop rbx ; ret 0x8589
0x0000000000412b22 : pop rbx ; ret 0x89c3
0x00000000004845c3 : pop rbx ; ret 0xaba
0x0000000000413518 : pop rbx ; ret 0xb2c3
0x0000000000444ff7 : pop rbx ; ret 0xd0b
0x000000000048470f : pop rbx ; ret 0xfbe9
0x0000000000486d72 : pop rcx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x000000000046254b : pop rcx ; jo 0x462516 ; add dword ptr [rcx], esp ; ret 0xd709
0x000000000046f813 : pop rcx ; ret 0x1b2
0x0000000000469ee6 : pop rcx ; ret 0x8589
0x000000000046f82f : pop rcx ; ret 0x8b48
0x0000000000471b60 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000461f29 : pop rcx ; sbb eax, 0x81e0558b ; ret 0x33f7
0x000000000040aeb8 : pop rdi ; pop rbp ; ret
0x00000000004df7f3 : pop rdi ; ret
0x0000000000444cb0 : pop rdi ; ret 0x8589
0x0000000000445d60 : pop rdi ; ret 0x95b9
0x00000000004a85e2 : pop rdx ; ret
0x000000000044499f : pop rdx ; ret 0xd0b
0x00000000004a4c6b : pop rsi ; adc al, 0x3e ; and byte ptr [rcx - 0x7bf03bbb], cl ; ret 0
0x000000000042cb7c : pop rsi ; out dx, eax ; ret
0x000000000040aeb6 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004df7f1 : pop rsi ; pop r15 ; ret
0x000000000040c3ad : pop rsi ; pop rbp ; ret
0x000000000045cce2 : pop rsi ; ret
0x00000000004e4d74 : pop rsp ; and byte ptr [rax], al ; add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004641b2 : pop rsp ; jle 0x4641ed ; frstor dword ptr [rcx] ; ret 0xd709
0x0000000000426344 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004df7ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043953f : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000469ee5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000044f5f0 : pop rsp ; ret 0xf66
0x000000000044006b : popfq ; add byte ptr [rax], al ; add byte ptr [rbx + 0x12dd845], cl ; ret 0x1b4e
0x00000000004c8ba5 : popfq ; ret 0xd284
0x0000000000427854 : popfq ; ret 0xfffe
0x00000000004dc93a : popfq ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x00000000004555a5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000046f810 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000047f3b7 : push -0x47fffffb ; mov dh, 0x17 ; ret
0x000000000047db24 : push -0x47fffffd ; hlt ; call rsp
0x00000000004719fa : push -0x75425eeb ; push rbp ; ret
0x000000000046e558 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004143cb : push 0xffffffb ; test bh, dh ; ret
0x00000000004e2333 : push qword ptr [rax + rdx - 0x2efc0000] ; hlt ; call rsp
0x000000000040a27d : push qword ptr [rbx + 0x56] ; ret
0x00000000004e2763 : push qword ptr [rcx + 0x3e440000] ; stc ; call rsp
0x00000000004e22f3 : push qword ptr [rdi + rcx + 0x61e40000] ; hlt ; call rsp
0x00000000004e27a3 : push qword ptr [rdx + 0x42f40000] ; stc ; call rsp
0x00000000004c4c30 : push qword ptr [rdx - 0x160e830a] ; ret
0x000000000042ce04 : push rax ; adc al, 0x4e ; add al, ch ; ret
0x00000000004c6413 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000497a81 : push rax ; pop rbp ; and byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040b053 : push rax ; pop rbp ; ret
0x000000000043617c : push rax ; ret
0x000000000042aa59 : push rbp ; and al, 0xffffffffffffff87 ; fld dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040b940 : push rbp ; call 0x49234295
0x0000000000480466 : push rbp ; clc ; pop rbp ; ret
0x00000000004e4c31 : push rbp ; cli ; jmp qword ptr [rax]
0x000000000049cdb4 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x000000000047f498 : push rbp ; fdivr dword ptr [rbx] ; add al, byte ptr [rcx + 0xf] ; pushfq ; ret 0x8445
0x0000000000450a1c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042ce8d : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000044f308 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000440d72 : push rbp ; inc dword ptr [rax + 0x558801e2] ; ret
0x0000000000461f2d : push rbp ; loopne 0x461eb4 ; ret 0x33f7
0x0000000000479802 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 0x13
0x00000000004cc378 : push rbp ; mov cl, 0x13 ; ret 0x8589
0x0000000000402b64 : push rbp ; mov edi, 0x6e5e20 ; mov rbp, rsp ; call rax
0x000000000042ec50 : push rbp ; ret
0x000000000045dae0 : push rbp ; ret 0xd284
0x000000000049a763 : push rbp ; ror byte ptr [rax - 0x39], 1 ; test ebp, eax ; idiv edi ; call rax
0x0000000000489f50 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000043efdb : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x48f8
0x0000000000457346 : push rbp ; shr al, 1 ; ret
0x000000000046ff8f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000470069 : push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004c43a4 : push rbp ; xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000041f27e : push rbx ; push rsi ; sbb al, -0x47 ; sub al, -0x36 ; ret 0x8b48
0x0000000000443c92 : push rbx ; ret 0x48b9
0x00000000004436c2 : push rbx ; ret 0x89b9
0x0000000000443c76 : push rbx ; ret 0xb2b9
0x00000000004846c2 : push rbx ; salc ; pop rbx ; ret 0x45e9
0x000000000048470c : push rbx ; salc ; pop rbx ; ret 0xfbe9
0x000000000043ff29 : push rcx ; ret 0x8947
0x00000000004ad1f3 : push rdi ; add dword ptr [rax], eax ; jmp 0x4b9408
0x00000000004b46b6 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x00000000004beb30 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x00000000004a2b2b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000497dc2 : push rdi ; ret
0x0000000000403d4f : push rdi ; ret 0x899e
0x0000000000407142 : push rdi ; ret 0xb99e
0x0000000000447e8f : push rdi ; ret 0xc750
0x00000000004093d5 : push rdi ; ret 0xe99e
0x000000000042b568 : push rdx ; add dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x000000000043686d : push rdx ; lodsd eax, dword ptr [rsi] ; and al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004400e1 : push rdx ; ret 0x8947
0x000000000044023b : push rdx ; ret 0xb947
0x000000000049f18c : push rsi ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x00000000004d0119 : push rsi ; mov cl, 0x13 ; ret 0x1ab9
0x00000000004d0f32 : push rsi ; mov cl, 0x13 ; ret 0x1e9
0x00000000004ccf80 : push rsi ; mov cl, 0x13 ; ret 0x8589
0x00000000004b4662 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000409d80 : push rsi ; ret
0x0000000000447e4d : push rsi ; ret 0xc750
0x000000000041f27f : push rsi ; sbb al, -0x47 ; sub al, -0x36 ; ret 0x8b48
0x0000000000461f33 : push rsp ; in al, -0x7f ; ret 0xffd0
0x00000000004bb3a5 : push rsp ; ret 0
0x00000000004dd575 : pushfq ; fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x000000000045db8f : pushfq ; ret
0x000000000045db45 : pushfq ; ret 0x8445
0x000000000040a1fe : pushfq ; ret 0xd284
0x00000000004614f4 : pushfq ; ret 0xe280
0x00000000004c23eb : pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x00000000004e2564 : pushfq ; sbb dword ptr [rax], eax ; add ah, al ; ret 0xfff6
0x00000000004e36e0 : rcl dh ; cmc ; call qword ptr [rbx]
0x00000000004e3700 : rcl dh ; cmc ; call rdx
0x000000000041fb97 : rcr byte ptr [rbp - 0x229d46c6] ; ret 0xb2a9
0x00000000004002da : ret
0x0000000000417dae : ret 0
0x0000000000450a20 : ret 0x10
0x00000000004afa6a : ret 0x103
0x0000000000406263 : ret 0x1060
0x00000000004a56e7 : ret 0x11
0x00000000004ac4d2 : ret 0x111
0x00000000004a389a : ret 0x113e
0x0000000000417766 : ret 0x1204
0x000000000042eca9 : ret 0x124
0x000000000040850b : ret 0x13
0x00000000004b12b2 : ret 0x135
0x0000000000449af3 : ret 0x148
0x00000000004dd021 : ret 0x14e9
0x000000000040846a : ret 0x15
0x000000000043624c : ret 0x16
0x000000000042bfa3 : ret 0x17e8
0x00000000004063da : ret 0x19
0x0000000000433115 : ret 0x1a
0x00000000004d011c : ret 0x1ab9
0x0000000000467ddd : ret 0x1add
0x0000000000420aca : ret 0x1b2
0x000000000043ff98 : ret 0x1b4e
0x000000000042ec9d : ret 0x1be9
0x000000000041090b : ret 0x1c4
0x000000000044effd : ret 0x1cdd
0x00000000004cba11 : ret 0x1dad
0x00000000004bd82d : ret 0x1db9
0x00000000004ccf54 : ret 0x1e
0x000000000044ef25 : ret 0x1e1
0x00000000004d0f35 : ret 0x1e9
0x000000000043ae1b : ret 0x1f
0x000000000042c19b : ret 0x1fe8
0x00000000004d12c1 : ret 0x20
0x0000000000445c9e : ret 0x2018
0x000000000043574c : ret 0x21
0x000000000040a2e2 : ret 0x2144
0x000000000046404b : ret 0x2145
0x000000000048435c : ret 0x214c
0x000000000048380d : ret 0x214d
0x000000000046872a : ret 0x23da
0x0000000000417ef1 : ret 0x24a6
0x00000000004d3da9 : ret 0x273b
0x0000000000475428 : ret 0x279e
0x000000000044f5da : ret 0x280f
0x0000000000433f31 : ret 0x29
0x00000000004426c5 : ret 0x2948
0x0000000000424d8d : ret 0x2a
0x000000000046ff92 : ret 0x2d50
0x000000000047a10b : ret 0x2de3
0x00000000004029f2 : ret 0x2e39
0x00000000004027f2 : ret 0x2e3a
0x00000000004025f2 : ret 0x2e3b
0x00000000004023f2 : ret 0x2e3c
0x00000000004c27a6 : ret 0x2eb9
0x00000000004a268e : ret 0x3040
0x000000000045f01b : ret 0x31
0x00000000004beac0 : ret 0x3141
0x000000000046480f : ret 0x3144
0x000000000044b779 : ret 0x3145
0x000000000049578a : ret 0x315e
0x000000000045ec9b : ret 0x33
0x000000000041abad : ret 0x33a6
0x0000000000461f30 : ret 0x33f7
0x0000000000489b0e : ret 0x34be
0x00000000004506ea : ret 0x3504
0x00000000004422ca : ret 0x3948
0x000000000041bf15 : ret 0x3b
0x000000000047e5db : ret 0x3bbb
0x000000000040541a : ret 0x3c
0x0000000000432b21 : ret 0x3cf6
0x000000000046dac5 : ret 0x3e
0x000000000042db17 : ret 0x418
0x000000000041dde1 : ret 0x42b4
0x00000000004a7c6f : ret 0x4343
0x00000000004d2482 : ret 0x43ce
0x0000000000446fe2 : ret 0x43e9
0x0000000000411d7f : ret 0x4589
0x00000000004645a1 : ret 0x458b
0x00000000004846c6 : ret 0x45e9
0x000000000047ab9d : ret 0x4655
0x00000000004034fa : ret 0x467
0x0000000000459a0f : ret 0x4802
0x000000000044ecc0 : ret 0x4810
0x00000000004a2b2e : ret 0x4815
0x0000000000472a56 : ret 0x4861
0x000000000041fbb9 : ret 0x48a9
0x0000000000443c93 : ret 0x48b9
0x0000000000413532 : ret 0x48c3
0x000000000043befa : ret 0x48c7
0x0000000000444409 : ret 0x48cd
0x000000000043bcc6 : ret 0x48d0
0x000000000047991f : ret 0x48d3
0x000000000041e9e5 : ret 0x48e0
0x0000000000402dee : ret 0x48f0
0x000000000043efdf : ret 0x48f8
0x0000000000444caf : ret 0x4a5f
0x0000000000442477 : ret 0x4a8b
0x000000000046b311 : ret 0x4b
0x00000000004bf280 : ret 0x4b91
0x0000000000476927 : ret 0x4cc0
0x00000000004263a2 : ret 0x4cf0
0x00000000004a6147 : ret 0x4e20
0x000000000040977d : ret 0x4ee9
0x000000000048d7bc : ret 0x4f0b
0x0000000000447229 : ret 0x4f66
0x00000000004b71b3 : ret 0x4fab
0x0000000000426e8a : ret 0x4fd
0x00000000004d9589 : ret 0x54
0x000000000040853f : ret 0x5415
0x000000000049e4e6 : ret 0x5475
0x00000000004642e1 : ret 0x5589
0x000000000042c7c6 : ret 0x558a
0x0000000000461a1c : ret 0x558b
0x000000000041c759 : ret 0x5653
0x000000000043b50f : ret 0x56a0
0x00000000004275ca : ret 0x58e
0x000000000047021a : ret 0x5966
0x000000000043a7f0 : ret 0x59b0
0x00000000004d97b9 : ret 0x5b
0x000000000048c417 : ret 0x5bc6
0x00000000004c56ee : ret 0x5ce8
0x000000000044df2f : ret 0x5d68
0x0000000000445c99 : ret 0x5ebb
0x0000000000482c31 : ret 0x5fca
0x000000000042178d : ret 0x60
0x00000000004c97df : ret 0x61
0x000000000047f506 : ret 0x6348
0x000000000042138d : ret 0x64
0x0000000000408b82 : ret 0x64b9
0x00000000004cc5fc : ret 0x6620
0x0000000000467476 : ret 0x6a8a
0x00000000004885fa : ret 0x6f35
0x0000000000430661 : ret 0x6fb5
0x00000000004a3359 : ret 0x7160
0x000000000046712e : ret 0x77a8
0x00000000004bf0e2 : ret 0x78e8
0x000000000049dec7 : ret 0x7a
0x0000000000468291 : ret 0x7a8a
0x000000000046ef0b : ret 0x7b7f
0x0000000000484628 : ret 0x7b9
0x0000000000428542 : ret 0x7d5a
0x000000000041a929 : ret 0x7f35
0x000000000045df34 : ret 0x8041
0x000000000040a2f1 : ret 0x8141
0x0000000000445b2f : ret 0x8148
0x00000000004de3f6 : ret 0x81e9
0x0000000000470e24 : ret 0x822d
0x0000000000456f52 : ret 0x8348
0x000000000041f5e9 : ret 0x840
0x000000000042acc2 : ret 0x844
0x000000000040a9f1 : ret 0x8445
0x000000000043aa8f : ret 0x845f
0x00000000004bc69b : ret 0x8548
0x0000000000404f25 : ret 0x8589
0x0000000000407ac8 : ret 0x858a
0x000000000044f9a9 : ret 0x86a5
0x0000000000408c64 : ret 0x86e8
0x00000000004c9b0e : ret 0x86f8
0x00000000004c6418 : ret 0x8840
0x000000000040cdf4 : ret 0x8844
0x0000000000427c6e : ret 0x8868
0x000000000047898d : ret 0x88b0
0x00000000004b2674 : ret 0x8909
0x0000000000417a23 : ret 0x890b
0x00000000004469a2 : ret 0x890e
0x0000000000406344 : ret 0x8912
0x00000000004b4664 : ret 0x8923
0x00000000004b48cc : ret 0x8925
0x0000000000459586 : ret 0x8938
0x0000000000467ea3 : ret 0x8940
0x000000000040a2d8 : ret 0x8941
0x0000000000425dbc : ret 0x8944
0x00000000004230d4 : ret 0x8945
0x000000000048279a : ret 0x8946
0x000000000043ff2b : ret 0x8947
0x0000000000402eac : ret 0x8948
0x000000000047ab85 : ret 0x8949
0x00000000004a114f : ret 0x894a
0x00000000004360c3 : ret 0x894d
0x00000000004aaa50 : ret 0x895e
0x00000000004676a7 : ret 0x8961
0x00000000004d1bfb : ret 0x8962
0x0000000000427a0f : ret 0x8965
0x00000000004d19e7 : ret 0x896c
0x00000000004285b3 : ret 0x8972
0x0000000000413d53 : ret 0x897e
0x0000000000437c71 : ret 0x897f
0x000000000044a9ec : ret 0x899a
0x0000000000403d50 : ret 0x899e
0x0000000000418097 : ret 0x89a9
0x000000000044a5e7 : ret 0x89b5
0x00000000004436c3 : ret 0x89b9
0x0000000000412b23 : ret 0x89c3
0x00000000004957f0 : ret 0x89c5
0x000000000043af45 : ret 0x89c7
0x0000000000498b32 : ret 0x89cd
0x0000000000405234 : ret 0x89ce
0x000000000047b0e4 : ret 0x89e8
0x0000000000440368 : ret 0x89eb
0x000000000042951f : ret 0x89f1
0x00000000004a2748 : ret 0x8a44
0x0000000000484991 : ret 0x8a46
0x00000000004a2645 : ret 0x8a4a
0x00000000004dd243 : ret 0x8ae1
0x0000000000436c60 : ret 0x8ae8
0x0000000000446910 : ret 0x8b0e
0x000000000041f93c : ret 0x8b44
0x000000000041f285 : ret 0x8b48
0x0000000000424c8d : ret 0x8b4c
0x000000000044035d : ret 0x8beb
0x00000000004a90b6 : ret 0x8cbc
0x000000000049e96b : ret 0x8d89
0x000000000042594e : ret 0x941
0x000000000049d042 : ret 0x949
0x0000000000483826 : ret 0x94d
0x0000000000409346 : ret 0x9589
0x0000000000445d62 : ret 0x95b9
0x00000000004bdf37 : ret 0x96
0x0000000000495f46 : ret 0x9bb9
0x0000000000403cdf : ret 0x9d04
0x000000000048f2c7 : ret 0x9e6d
0x0000000000410c0b : ret 0xa
0x000000000041d601 : ret 0xa1aa
0x0000000000445cb9 : ret 0xa1e8
0x00000000004bcbed : ret 0xa2b9
0x000000000047006c : ret 0xa30b
0x000000000043fd19 : ret 0xa474
0x00000000004181e6 : ret 0xab78
0x00000000004845c4 : ret 0xaba
0x0000000000408547 : ret 0xabeb
0x00000000004943bf : ret 0xac60
0x000000000049bd00 : ret 0xae8
0x0000000000428889 : ret 0xaeaf
0x00000000004d0b87 : ret 0xafe9
0x000000000043df18 : ret 0xb
0x0000000000407b75 : ret 0xb0
0x00000000004999cc : ret 0xb041
0x000000000041fb9d : ret 0xb2a9
0x0000000000443c77 : ret 0xb2b9
0x0000000000413519 : ret 0xb2c3
0x00000000004cdbc0 : ret 0xb38e
0x00000000004359c5 : ret 0xb5e8
0x000000000045dac0 : ret 0xb640
0x0000000000471970 : ret 0xb740
0x000000000048a676 : ret 0xb7eb
0x00000000004bbd37 : ret 0xb8
0x00000000004dddb2 : ret 0xb845
0x000000000043ea2e : ret 0xb848
0x00000000004422bd : ret 0xb849
0x000000000045e5f1 : ret 0xb901
0x00000000004ba28f : ret 0xb909
0x00000000004074cb : ret 0xb912
0x00000000004beb32 : ret 0xb923
0x00000000004c2410 : ret 0xb925
0x000000000046fba0 : ret 0xb940
0x000000000045de34 : ret 0xb944
0x000000000044023d : ret 0xb947
0x000000000045368b : ret 0xb948
0x00000000004a25d2 : ret 0xb94a
0x00000000004dab17 : ret 0xb962
0x0000000000427dd0 : ret 0xb965
0x00000000004da51c : ret 0xb96c
0x000000000042a8f9 : ret 0xb972
0x000000000041fd37 : ret 0xb97e
0x000000000043938b : ret 0xb97f
0x000000000044ac40 : ret 0xb99a
0x0000000000407143 : ret 0xb99e
0x0000000000422673 : ret 0xb9a9
0x00000000004962e9 : ret 0xb9c5
0x0000000000499605 : ret 0xb9cd
0x0000000000407bab : ret 0xb9ce
0x000000000047bc00 : ret 0xb9e8
0x000000000042ad86 : ret 0xb9f1
0x0000000000423041 : ret 0xba0b
0x000000000047b914 : ret 0xba49
0x0000000000439302 : ret 0xba7f
0x000000000042bff3 : ret 0xbab9
0x0000000000422f10 : ret 0xbb0d
0x0000000000446e9d : ret 0xbcb9
0x0000000000471fec : ret 0xbf48
0x0000000000464857 : ret 0xc131
0x0000000000402b05 : ret 0xc148
0x0000000000423b65 : ret 0xc189
0x000000000040a641 : ret 0xc18a
0x0000000000464812 : ret 0xc221
0x000000000044a62a : ret 0xc226
0x0000000000461fbb : ret 0xc283
0x00000000004d0e89 : ret 0xc350
0x0000000000440d9e : ret 0xc35d
0x0000000000431f36 : ret 0xc380
0x00000000004adf93 : ret 0xc3d7
0x00000000004c9a22 : ret 0xc493
0x0000000000447e4e : ret 0xc750
0x00000000004ae933 : ret 0xc8c6
0x000000000045dfdb : ret 0xc981
0x00000000004c77a8 : ret 0xca20
0x000000000047dd5e : ret 0xca21
0x00000000004098b2 : ret 0xca29
0x000000000045dfaf : ret 0xca31
0x0000000000415669 : ret 0xcb
0x00000000004aed5b : ret 0xcc39
0x00000000004cbc78 : ret 0xcc41
0x00000000004c97e5 : ret 0xccb2
0x000000000048a9ad : ret 0xd
0x000000000041b3a9 : ret 0xd03c
0x00000000004449a0 : ret 0xd0b
0x00000000004645aa : ret 0xd109
0x00000000004077dc : ret 0xd284
0x00000000004a2d88 : ret 0xd2e8
0x00000000004301c1 : ret 0xd2f7
0x000000000041c545 : ret 0xd3c8
0x000000000040423a : ret 0xd3ce
0x00000000004b2a63 : ret 0xd4d
0x0000000000427311 : ret 0xd609
0x00000000004a0d95 : ret 0xd618
0x0000000000422f1d : ret 0xd689
0x000000000042ab79 : ret 0xd6b9
0x0000000000461c3a : ret 0xd709
0x00000000004acbe2 : ret 0xd803
0x0000000000418f9d : ret 0xda
0x00000000004c601d : ret 0xdae9
0x00000000004796ef : ret 0xde9
0x00000000004bd9c4 : ret 0xdf79
0x00000000004c677a : ret 0xe0e8
0x000000000048dd38 : ret 0xe1a5
0x000000000040cb9d : ret 0xe280
0x000000000049466c : ret 0xe41a
0x000000000041cd41 : ret 0xe59e
0x0000000000420ae6 : ret 0xe6ba
0x00000000004595b3 : ret 0xe8ff
0x000000000042ec65 : ret 0xe900
0x0000000000423227 : ret 0xe90b
0x000000000047805e : ret 0xe912
0x00000000004c6f2b : ret 0xe925
0x0000000000471842 : ret 0xe940
0x000000000045e891 : ret 0xe947
0x000000000047bb62 : ret 0xe949
0x00000000004bc546 : ret 0xe95e
0x0000000000472aa1 : ret 0xe961
0x00000000004df070 : ret 0xe962
0x000000000042b864 : ret 0xe972
0x000000000044adef : ret 0xe99a
0x00000000004093d6 : ret 0xe99e
0x00000000004964cf : ret 0xe9c5
0x000000000049a493 : ret 0xe9cd
0x00000000004a6d24 : ret 0xe9d2
0x00000000004688cd : ret 0xea51
0x000000000045f9e7 : ret 0xea59
0x0000000000442893 : ret 0xea81
0x0000000000411fba : ret 0xedb9
0x000000000047465c : ret 0xee8
0x00000000004996af : ret 0xf040
0x0000000000432f65 : ret 0xf10c
0x000000000040a2e5 : ret 0xf181
0x000000000042aca6 : ret 0xf280
0x000000000040a0e0 : ret 0xf281
0x0000000000409d9b : ret 0xf3fc
0x0000000000492d41 : ret 0xf40
0x0000000000411fc9 : ret 0xf41
0x000000000045806c : ret 0xf4e9
0x00000000004a1ffa : ret 0xf602
0x000000000044f5f1 : ret 0xf66
0x0000000000483d54 : ret 0xf709
0x00000000004912ba : ret 0xf717
0x000000000048ef3a : ret 0xf733
0x0000000000435d39 : ret 0xf748
0x000000000048ca4a : ret 0xf75c
0x00000000004725f5 : ret 0xf7f3
0x000000000045e01c : ret 0xfa81
0x000000000047cb80 : ret 0xfbd5
0x0000000000484710 : ret 0xfbe9
0x0000000000470d7e : ret 0xfc75
0x00000000004b9637 : ret 0xfd40
0x00000000004b9488 : ret 0xfd70
0x00000000004cec98 : ret 0xfdb9
0x0000000000423f4a : ret 0xfde3
0x0000000000422f4a : ret 0xfdf3
0x00000000004b949c : ret 0xff10
0x000000000045717f : ret 0xff3
0x000000000040b947 : ret 0xff70
0x00000000004dd027 : ret 0xff9b
0x00000000004725ef : ret 0xffa5
0x00000000004dd23d : ret 0xffbb
0x0000000000470d78 : ret 0xffc4
0x0000000000461f36 : ret 0xffd0
0x000000000046ff98 : ret 0xffd5
0x0000000000470072 : ret 0xffd8
0x0000000000470e2a : ret 0xffd9
0x0000000000470214 : ret 0xffe0
0x00000000004a664e : ret 0xfff5
0x0000000000496027 : ret 0xfff6
0x00000000004bf27a : ret 0xfff7
0x000000000046ef05 : ret 0xfffa
0x000000000047cb7a : ret 0xfffc
0x00000000004261e8 : ret 0xfffd
0x0000000000427855 : ret 0xfffe
0x000000000040f748 : ret 0xffff
0x000000000040a74b : ret 1
0x000000000042de5b : ret 2
0x00000000004009a0 : ret 3
0x000000000040940b : ret 4
0x000000000040c667 : ret 5
0x000000000040aa49 : ret 6
0x000000000040debf : ret 7
0x00000000004625ec : ret 8
0x00000000004112ea : ret 9
0x00000000004c182f : retf 0x5d ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004a2b0d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004561d4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040cd88 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000440b5b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004beac3 : rol byte ptr [rbp + 0x21], cl ; ret 0x8141
0x000000000049d52a : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000423e2d : rol byte ptr [rcx - 0x77], 1 ; ret
0x000000000045e9ec : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000403085 : rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004593d1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b7e4 : rol byte ptr [rsi], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a2b0c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000045bd9e : rol dh, 0 ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x00000000004ae42a : rol ebp, cl ; ret
0x000000000049f02d : ror byte ptr [r8 - 0x75], 0 ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000451250 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451afe : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000049cbd7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048ea44 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000402b0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402b1b ; pop rbp ; ret
0x000000000049a764 : ror byte ptr [rax - 0x39], 1 ; test ebp, eax ; idiv edi ; call rax
0x000000000049f02e : ror byte ptr [rax - 0x75], 0 ; mov rdi, qword ptr [rbp - 0x58] ; call rax
0x0000000000451251 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000451aff : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000049ea60 : ror byte ptr [rax - 0x75], 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x49ea22 ; call rax
0x000000000049ee9c : ror byte ptr [rax - 0x75], 0x40 ; adc byte ptr [rax - 0x75], cl ; jge 0x49ee5e ; call rax
0x000000000049f09e : ror byte ptr [rax - 0x75], 0x40 ; sbb byte ptr [rax - 0x75], cl ; jge 0x49f058 ; call rax
0x000000000049cbd8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427e51 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044fd3a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000042d5c1 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x000000000040b04f : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000489f51 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000043efdc : ror byte ptr [rax - 0x7d], 1 ; ret 0x48f8
0x000000000040e798 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043f73b : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x43f74a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000442b71 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0x12 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a26e : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044f4ad : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b7e0 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rsi], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000484359 : ror byte ptr [rbp + 0x21], cl ; ret 0x214c
0x000000000049d065 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000465daa : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004cb8a4 : ror byte ptr [rcx], 1 ; ret
0x00000000004999c8 : ror byte ptr [rdi], -0x6b ; ret 0xb041
0x000000000049d53d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000045dabc : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb640
0x000000000049d03f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x000000000040be3e : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004a293e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000483d68 : ror dword ptr [rbp + 0x21], cl ; ret
0x0000000000445aeb : ror dword ptr [rbp + 0x29], cl ; ret
0x00000000004842ef : ror dword ptr [rbp - 0x77], 1 ; ret 0x214d
0x00000000004bb337 : ror dword ptr [rcx - 0x49b7b], -1 ; jmp 0x4c7606
0x00000000004767e0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004cda54 : ror dword ptr [rcx], 1 ; ret
0x00000000004c77a5 : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000049f11c : sahf ; and eax, dword ptr [rbx - 0x17] ; ret 0
0x000000000042162b : sahf ; pop rbp ; sbb dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x0000000000445fae : sahf ; ret
0x0000000000411d7e : sahf ; ret 0x4589
0x0000000000408672 : sahf ; ret 0xd284
0x0000000000411fb9 : sahf ; ret 0xedb9
0x00000000004e3830 : sal byte ptr [rax], -0xa ; call qword ptr [rbx]
0x00000000004e3850 : sal byte ptr [rbx], -0xa ; jmp qword ptr [rax]
0x00000000004c51c3 : sal ebx, 1 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004e32e9 : sal esp, 1 ; call qword ptr [rdi]
0x00000000004e2339 : sal esp, 1 ; call rsp
0x00000000004e36e1 : salc ; cmc ; call qword ptr [rbx]
0x00000000004e3701 : salc ; cmc ; call rdx
0x000000000048feea : salc ; jmp qword ptr [rdi]
0x00000000004846c4 : salc ; pop rbx ; ret 0x45e9
0x0000000000481031 : salc ; pop rbx ; ret 0x8589
0x00000000004845c2 : salc ; pop rbx ; ret 0xaba
0x000000000048470e : salc ; pop rbx ; ret 0xfbe9
0x000000000048fe26 : salc ; sti ; ret 0x89f1
0x00000000004d9d5e : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004db88b : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004da739 : sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004dc93b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x00000000004dc9eb : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000049d024 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000449ab8 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x0000000000440d90 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000402b0e : sar eax, 1 ; jne 0x402b19 ; pop rbp ; ret
0x0000000000471b61 : sar ebp, -0x17 ; ret 0x2a
0x00000000004c1a49 : sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x00000000004b9dc2 : sar edi, cl ; inc dword ptr [rbp + 0xf] ; ret
0x0000000000402b0d : sar rax, 1 ; jne 0x402b1a ; pop rbp ; ret
0x000000000041f280 : sbb al, -0x47 ; sub al, -0x36 ; ret 0x8b48
0x00000000004c0635 : sbb al, -0xc ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004e43c9 : sbb al, -7 ; call rdi
0x0000000000476b20 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000045b726 : sbb al, ah ; ret
0x00000000004926be : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004e480d : sbb al, byte ptr [rax] ; add al, dl ; mov bl, -7 ; jmp qword ptr [rax]
0x00000000004918db : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000461c36 : sbb bl, byte ptr [rsi] ; and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000461c35 : sbb bl, byte ptr fs:[rsi] ; and esp, dword ptr [rcx] ; ret 0xd709
0x000000000049f0a2 : sbb byte ptr [rax - 0x75], cl ; jge 0x49f054 ; call rax
0x000000000049f0a1 : sbb byte ptr [rax - 0x75], cl ; jge 0x49f055 ; call rax
0x00000000004e45ad : sbb byte ptr [rax], al ; add al, dl ; stc ; jmp qword ptr [rbx]
0x00000000004c5d91 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000047f87a : sbb byte ptr [rcx - 0x7f], al ; ret
0x00000000004e3308 : sbb byte ptr [rsi - 0xb], al ; call rbx
0x00000000004427cb : sbb cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000471a61 : sbb cl, ch ; ret
0x00000000004e32e8 : sbb cl, dl ; hlt ; call qword ptr [rdi]
0x00000000004c08c1 : sbb dh, ah ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041cb49 : sbb dl, ch ; jmp qword ptr [rsi]
0x00000000004c51c2 : sbb dl, cl ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004e2565 : sbb dword ptr [rax], eax ; add ah, al ; ret 0xfff6
0x00000000004e2575 : sbb dword ptr [rax], eax ; add ah, dh ; ret
0x00000000004e256d : sbb dword ptr [rax], eax ; add ah, dl ; ret
0x00000000004c5c7e : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000048e293 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044dc21 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042162d : sbb dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x00000000004c0ee3 : sbb dword ptr [rsp + rsi*8], edx ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000047fbb1 : sbb eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000461f2b : sbb eax, 0x81e0558b ; ret 0x33f7
0x00000000004e4a2d : sbb eax, 0xb8f00000 ; stc ; call qword ptr [rdx]
0x00000000004c67dc : sbb eax, 0xc700000e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000451d1d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004e48ad : sbb eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dh, -7 ; jmp qword ptr [rdi]
0x0000000000475b70 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000484e49 : sbb ecx, ebp ; ret 0
0x00000000004e4369 : sbb edi, ecx ; jmp qword ptr [rbx]
0x00000000004e4368 : sbb rdi, rcx ; jmp qword ptr [rbx]
0x000000000046026f : scasb al, byte ptr [rdi] ; loopne 0x46025c ; ret 0x8589
0x0000000000461a19 : scasb al, byte ptr [rdi] ; loopne 0x461a06 ; ret 0x558b
0x00000000004adeea : scasb al, byte ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x000000000043fe48 : scasb al, byte ptr [rdi] ; mov esi, 0x29b9727f ; ret 0xa474
0x000000000042cabb : scasb al, byte ptr [rdi] ; ret
0x000000000042334f : scasd eax, dword ptr [rdi] ; jmp 0x42785b
0x00000000004bc834 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x00000000004adf3e : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x00000000004bc850 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8b48
0x000000000040c187 : scasd eax, dword ptr [rdi] ; sub dword ptr [rax + rcx*2 - 0x7cb71d77], edx ; ret 0x48f0
0x0000000000452ac4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000440d96 : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000439100 : shl byte ptr [rbp + 0x12], -0x46 ; sub al, 0x7e ; ret
0x0000000000452ac6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004e45b0 : shl byte ptr [rsi], 1 ; stc ; jmp qword ptr [rbx]
0x000000000044f60f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000457347 : shr al, 1 ; ret
0x00000000004a1ff8 : shr al, 1 ; ret 0xf602
0x0000000000470a62 : shr cl, cl ; ret 0x3b
0x00000000004ce465 : shr dword ptr [rip - 0x21480000], cl ; ret
0x00000000004a1ff7 : shr r8b, 1 ; ret 0xf602
0x00000000004e22f5 : sldt word ptr [rax] ; in al, 0x61 ; hlt ; call rsp
0x0000000000437180 : sldt word ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042d504 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004e44ea : stc ; call qword ptr [rbx]
0x00000000004e4a12 : stc ; call qword ptr [rdx]
0x00000000004e43ca : stc ; call rdi
0x00000000004e44ca : stc ; call rdx
0x00000000004e276a : stc ; call rsp
0x00000000004568b9 : stc ; in al, dx ; ret 0x8589
0x00000000004571cc : stc ; in al, dx ; ret 0xff3
0x00000000004e4812 : stc ; jmp qword ptr [rax]
0x00000000004e436a : stc ; jmp qword ptr [rbx]
0x00000000004e48b2 : stc ; jmp qword ptr [rdi]
0x00000000004e2762 : stc ; push qword ptr [rcx + 0x3e440000] ; stc ; call rsp
0x00000000004e27a2 : stc ; push qword ptr [rdx + 0x42f40000] ; stc ; call rsp
0x000000000047991e : stc ; ret 0x48d3
0x000000000046e89d : stc ; ret 0x77a8
0x0000000000461857 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004cf390 : std ; cwde ; jmp 0x4d1244
0x00000000004c256a : std ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000475427 : std ; ret 0x279e
0x00000000004e509a : sti ; call qword ptr [rax]
0x00000000004e5362 : sti ; call rdi
0x000000000046455f : sti ; cmpsq qword ptr [rsi], qword ptr [rdi] ; or byte ptr [rcx], ah ; ret 0x8941
0x00000000004e2aa2 : sti ; inc esp ; add byte ptr cs:[rax], al ; adc al, -0x71 ; sti ; jmp rsp
0x00000000004e2a62 : sti ; inc esp ; sub eax, 0x2bf40000 ; sti ; jmp rsp
0x00000000004e2a2a : sti ; jmp rsp
0x0000000000439445 : sti ; movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, ch ; ret 2
0x00000000004c79d0 : sti ; movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000438f01 : sti ; ret
0x000000000048fe27 : sti ; ret 0x89f1
0x0000000000491cb5 : sti ; ret 0xb9f1
0x00000000004568b8 : sti ; stc ; in al, dx ; ret 0x8589
0x000000000049d023 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004bb30a : stosd dword ptr [rdi], eax ; jmp 0x4c7600
0x00000000004c3451 : stosd dword ptr [rdi], eax ; out dx, al ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004a4a45 : stosd dword ptr [rdi], eax ; ret
0x0000000000418f76 : sub al, -0x36 ; ret 0x8589
0x000000000041f283 : sub al, -0x36 ; ret 0x8b48
0x0000000000447aa4 : sub al, -0x47 ; ret
0x0000000000418f3d : sub al, 0x78 ; ret 0x8589
0x0000000000438823 : sub al, 0x7e ; ret
0x00000000004484be : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004e44c8 : sub byte ptr [rax], ah ; stc ; call rdx
0x00000000004e551d : sub byte ptr [rax], al ; add byte ptr [rax], ah ; and al, 0xfffffffffffffffc ; jmp qword ptr [rcx]
0x00000000004944c6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004483a8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046ff95 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x00000000004ade7a : sub byte ptr [rsi + 0x40], dh ; ret 0x8589
0x0000000000427852 : sub cl, ch ; popfq ; ret 0xfffe
0x00000000004bfcb7 : sub dh, ah ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000046ff8b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000470065 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040c188 : sub dword ptr [rax + rcx*2 - 0x7cb71d77], edx ; ret 0x48f0
0x0000000000425c4d : sub dword ptr [rbp + rdi*4 - 0x87f], -1 ; jmp qword ptr [rcx]
0x0000000000420f65 : sub dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x0000000000445b29 : sub dword ptr [rip + 0x14c18da], ebp ; ret 0x8148
0x0000000000445b3d : sub dword ptr [rip + 0x294c18da], ebp ; ret 0x8b4c
0x00000000004bd82a : sub dword ptr [rsi + 0x40], esi ; ret 0x1db9
0x00000000004adece : sub dword ptr [rsi + 0x40], esi ; ret 0x8589
0x00000000004c6394 : sub dword ptr [rsi + 0x40], esi ; ret 0x8948
0x0000000000445b2a : sub eax, 0x14c18da ; ret 0x8148
0x0000000000445b3e : sub eax, 0x294c18da ; ret 0x8b4c
0x00000000004e2a65 : sub eax, 0x2bf40000 ; sti ; jmp rsp
0x0000000000470e25 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004c2bcc : sub eax, 0xc700004a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004ce466 : sub eax, 0xdeb80000 ; ret
0x0000000000461858 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004e29e5 : sub eax, dword ptr [rax] ; add byte ptr [rdx + rcx*8 - 6], dh ; jmp rsp
0x000000000043a5e0 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000443c8c : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x00000000004e2a69 : sub edi, ebx ; jmp rsp
0x000000000048ea4f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004df8a1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000445b28 : sub qword ptr [rip + 0x14c18da], r13 ; ret 0x8148
0x0000000000445b3c : sub qword ptr [rip + 0x294c18da], r13 ; ret 0x8b4c
0x00000000004df8a0 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004ad069 : test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000427bd0 : test ah, ch ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000044f8d3 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000049f1b9 : test al, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x000000000048ca46 : test al, -0x50 ; add al, ch ; ret 0xf75c
0x0000000000438efd : test al, -0x75 ; adc al, ch ; sti ; ret
0x0000000000457569 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046ff90 : test al, -0x7f ; ret 0x2d50
0x000000000047006a : test al, -0x7f ; ret 0xa30b
0x0000000000459307 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a23e3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000047af82 : test al, 0x2d ; cwde ; ret 0x8589
0x000000000047b0e0 : test al, 0x2d ; ja 0x47b10c ; ret 0x89e8
0x000000000047b0df : test al, 0x2d ; ja 0x47b10d ; ret 0x89e8
0x000000000047b12b : test al, 0x2d ; js 0x47b157 ; ret 0x89e8
0x000000000047b12a : test al, 0x2d ; js 0x47b158 ; ret 0x89e8
0x000000000047b7cf : test al, 0x2d ; or al, 0xffffffffffffffba ; ret 0x8949
0x0000000000489b0c : test al, 0x2d ; ret 0x34be
0x000000000047ab9a : test al, 0x2d ; ret 0x4655
0x000000000042d695 : test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004761fe : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004727c6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000048d938 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000464787 : test al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b6599 : test al, bl ; ret
0x0000000000477350 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004143d0 : test bh, dh ; ret
0x00000000004d1424 : test bl, ch ; ret
0x000000000045474d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045661a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000047b714 : test byte ptr [rax - 0x16fffff6], al ; ret 1
0x00000000004a7df1 : test byte ptr [rax - 0x16fffffd], bl ; ret 1
0x000000000042c55a : test byte ptr [rax], al ; add al, 0 ; add cl, ch ; ret 1
0x00000000004df7fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004620f2 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000488a06 : test byte ptr [rbp - 0x16fffffa], bh ; ret 1
0x000000000044f06c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x00000000004ad1b9 : test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000040b315 : test byte ptr [rbx - 0x16fffff6], al ; ret
0x000000000047d32c : test byte ptr [rbx - 0x16fffff6], bl ; ret
0x000000000043f335 : test byte ptr [rbx - 0x16fffffe], dl ; ret 1
0x000000000042bd5f : test byte ptr [rbx], ah ; add al, 0 ; add cl, ch ; ret 1
0x0000000000477b13 : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000463cd1 : test byte ptr [rcx - 0x16fffffa], ah ; ret 1
0x000000000045661b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000041a934 : test byte ptr [rcx], bh ; ret
0x00000000004b8b1d : test byte ptr [rcx], ch ; ret
0x0000000000466e0c : test byte ptr [rcx], ch ; ret 0
0x000000000041321b : test byte ptr [rcx], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000049bf56 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000417dac : test byte ptr [rdi], cl ; ret 0
0x00000000004ad111 : test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x4b940a
0x000000000042e613 : test byte ptr [rdx - 0x16fffff7], dh ; ret
0x00000000004a79f0 : test byte ptr [rdx - 0x16fffffa], bl ; ret
0x0000000000495d71 : test byte ptr [rip - 0x16fffff9], dl ; ret 1
0x00000000004a5cf4 : test byte ptr [rip - 0x16fffffc], al ; ret 1
0x000000000040a745 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000414408 : test dh, ch ; ret
0x0000000000457b47 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004b1471 : test dl, cl ; ret 0
0x000000000043b7e1 : test dword ptr [rax + 0x2dfffffe], ecx ; ret
0x000000000043b509 : test dword ptr [rax + 0x2dfffffe], ecx ; ret 0x56a0
0x000000000043aa89 : test dword ptr [rax + 0x2dfffffe], ecx ; ret 0x845f
0x000000000043af3d : test dword ptr [rax + 0x2dfffffe], ecx ; ret 0x89c7
0x000000000043a7e9 : test dword ptr [rax + 0x2dfffffe], ecx ; xchg eax, ebp ; ret 0x59b0
0x000000000043ba81 : test dword ptr [rax + 0x2dfffffe], ecx ; xchg eax, esi ; ret 0x59b0
0x000000000044240d : test dword ptr [rax + 0x3b], 0x940f4117 ; ret 0x8445
0x0000000000466e06 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000418f96 : test dword ptr [rax + rsi*8 - 0x7bf00001], edx ; ret 0xda
0x00000000004112e4 : test dword ptr [rax - 0x16000002], ecx ; ret 9
0x000000000044d8f3 : test dword ptr [rax - 0x17000002], ebp ; ret
0x00000000004a65a3 : test dword ptr [rax - 0x17000004], edx ; ret
0x00000000004a616b : test dword ptr [rax - 0x17000004], esi ; sti ; ret
0x00000000004385f8 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esi ; ret 3
0x000000000041dbee : test dword ptr [rbp - 0x7bf00001], ebp ; ret
0x000000000041b25e : test dword ptr [rbx + rbp*8 - 0x7bf00001], ebx ; ret 0
0x000000000049f116 : test dword ptr [rbx + rdi*8 - 1], esi ; call rbx
0x000000000049f03d : test dword ptr [rbx + rdi*8 - 1], esi ; call rdx
0x000000000049eaab : test dword ptr [rbx + rdi*8 - 1], esi ; call rsp
0x000000000049f182 : test dword ptr [rbx + rdi*8 - 1], esi ; jmp rcx
0x000000000049f191 : test dword ptr [rbx + rdi*8 - 1], esi ; jmp rsi
0x00000000004be92f : test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x00000000004bd6b7 : test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004c2eb6 : test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x00000000004c3dbf : test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004c5928 : test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x00000000004c7285 : test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x00000000004c5b0b : test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x00000000004c6015 : test dword ptr [rbx + rdi*8 - 1], esp ; dec ebp ; or ch, dh ; ret 0xdae9
0x00000000004c665f : test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x00000000004bcfcd : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004c6480 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x00000000004c69a6 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x00000000004b9cf8 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004bfb42 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x00000000004bc7b4 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x00000000004c438f : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x00000000004c1687 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004be63b : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004c6617 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004bdefa : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004bcc7b : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x00000000004c638f : test dword ptr [rbx + rdi*8 - 1], esp ; ljmp ptr [rcx] ; jbe 0x4c63df ; ret 0x8948
0x00000000004d5746 : test dword ptr [rbx + rsi*8 - 0x7bf00001], ebx ; ret
0x00000000004827f1 : test dword ptr [rcx + rdi*8 - 0x7bf00001], ebp ; ret
0x00000000004d2f76 : test dword ptr [rcx + rdi*8 - 1], ecx ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004940a7 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000494067 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000493fe2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000492533 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000049258b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004924f2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000049a68b : test dword ptr [rdi + rdi*8 - 1], ecx ; call rdi
0x000000000048da46 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004460a3 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp rbx
0x0000000000479699 : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000439067 : test dword ptr [rdi + rdi*8 - 1], edx ; call rdi
0x000000000047a1c7 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000455531 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045c2cb : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000447b96 : test dword ptr [rdi + rdi*8 - 1], esi ; call rdi
0x000000000045bd62 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x000000000045c25b : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rdi
0x0000000000475e1a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000042779f : test dword ptr [rdi*8 - 0x15e70001], edi ; jmp qword ptr [rsi]
0x000000000045cd71 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret 0x13
0x0000000000423220 : test dword ptr [rdi*8 - 0xf330001], edi ; ret 0xe90b
0x00000000004820b9 : test dword ptr [rdx + rdi*8 - 0x7bf00001], esi ; jmp qword ptr [rsi]
0x000000000047183b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000045cd66 : test dword ptr [rsi + rdi*8 + 0x2dffff], ebx ; insb byte ptr [rdi], dx ; ret
0x0000000000472a9a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000045f014 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret 0x31
0x000000000045cd12 : test dword ptr [rsi + rdi*8 - 0xd20001], ebx ; insb byte ptr [rdi], dx ; ret
0x0000000000487e29 : test dword ptr [rsi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000486d25 : test dword ptr [rsi + rdi*8 - 1], ebx ; call rdx
0x0000000000487e08 : test dword ptr [rsi + rdi*8 - 1], ebx ; jmp rsi
0x000000000043310e : test dword ptr [rsi + rsi*8 - 0x7bf00001], ecx ; ret 0x1a
0x000000000046e55a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000418f37 : test dword ptr [rsp + rdi*8 + 0x2c2dffff], ebp ; js 0x418f8e ; ret 0x8589
0x0000000000418f8b : test dword ptr [rsp + rdi*8 + 0x2d2dffff], ebp ; js 0x418fe2 ; ret 0x8589
0x0000000000418f6f : test dword ptr [rsp + rdi*8 + 0x2d2dffff], ebp ; sub al, -0x36 ; ret 0x8589
0x0000000000418fc3 : test dword ptr [rsp + rdi*8 + 0x2e2dffff], ebp ; sub al, -0x36 ; ret 0x8589
0x00000000004181df : test dword ptr [rsp + rdi*8 + 0x3c2dffff], ebp ; ret 0xab78
0x0000000000418233 : test dword ptr [rsp + rdi*8 + 0x3d2dffff], ebp ; ret 0xab78
0x000000000041a85f : test dword ptr [rsp + rdi*8 + 0x4a2dffff], ebp ; ret
0x000000000041a8b3 : test dword ptr [rsp + rdi*8 + 0x4b2dffff], ebp ; ret
0x000000000041c507 : test dword ptr [rsp + rdi*8 - 0x10d20001], ebp ; ret
0x00000000004175d7 : test dword ptr [rsp + rdi*8 - 0x11d20001], ebp ; ret
0x000000000041c37f : test dword ptr [rsp + rdi*8 - 0x3fd20001], ebp ; ret 0x1204
0x000000000041775f : test dword ptr [rsp + rdi*8 - 0x40d20001], ebp ; ret 0x1204
0x0000000000418c43 : test dword ptr [rsp + rdi*8 - 0x4ad20001], ebp ; ret
0x0000000000418bef : test dword ptr [rsp + rdi*8 - 0x4bd20001], ebp ; ret
0x0000000000410c04 : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret 0xa
0x0000000000472a4f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000439062 : test eax, 0xc7000006 ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdi
0x000000000042784f : test eax, 0xe928df4c ; popfq ; ret 0xfffe
0x00000000004adf92 : test eax, edx ; xlatb ; ret
0x000000000049a767 : test ebp, eax ; idiv edi ; call rax
0x000000000049ac85 : test esi, eax ; idiv edi ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8445
0x00000000004b146b : test esp, eax ; in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004a5483 : unpckhps xmm6, xmmword ptr [rsi] ; ret
0x0000000000470a5f : wait ; jge 0x470a41 ; shr cl, cl ; ret 0x3b
0x000000000046bb1d : wait ; jo 0x46bb2b ; ret
0x000000000046f06c : wait ; jo 0x46f07a ; ret
0x000000000047d32d : wait ; or al, byte ptr [rax] ; add cl, ch ; ret
0x000000000040a6d6 : wait ; ret 0xc18a
0x00000000004c77a4 : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000042162a : wait ; sahf ; pop rbp ; sbb dword ptr [rcx - 9], eax ; jmp qword ptr [rcx]
0x00000000004adfe6 : xchg dl, al ; xlatb ; ret
0x0000000000408508 : xchg dword ptr [rcx + rbp*8], esi ; ret 0x13
0x00000000004ddaed : xchg dword ptr [rdi - 0xe46c4ed], ebp ; xchg eax, esp ; ret
0x00000000004a2b28 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000408507 : xchg dword ptr fs:[rcx + rbp*8], esi ; ret 0x13
0x00000000004e4d79 : xchg eax, ebp ; cli ; call qword ptr [rdx]
0x000000000044f3f0 : xchg eax, ebp ; jmp 0x44f541
0x00000000004c23ea : xchg eax, ebp ; pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000042311d : xchg eax, ebp ; ret
0x0000000000445c9d : xchg eax, ebp ; ret 0x2018
0x000000000043a7ef : xchg eax, ebp ; ret 0x59b0
0x000000000045dff2 : xchg eax, ebp ; ret 0x8041
0x000000000040a9f0 : xchg eax, ebp ; ret 0x8445
0x00000000004999ca : xchg eax, ebp ; ret 0xb041
0x000000000045dabe : xchg eax, ebp ; ret 0xb640
0x00000000004077db : xchg eax, ebp ; ret 0xd284
0x0000000000440d97 : xchg eax, ebp ; ret 0xe280
0x00000000004d9d5d : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004db88a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004da738 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x00000000004dc9ea : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000043f336 : xchg eax, ebx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004469a0 : xchg eax, ebx ; cdq ; ret 0x890e
0x00000000004ad1ba : xchg eax, ebx ; in eax, 0 ; add cl, ch ; ret 0
0x00000000004ce463 : xchg eax, ebx ; jmp 0x4d1244
0x000000000047b90d : xchg eax, ebx ; out dx, eax ; xor esi, 0xffffffb9 ; or al, 0xffffffffffffffba ; ret 0xba49
0x00000000004676a5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000046dfa5 : xchg eax, ebx ; ret
0x0000000000442aef : xchg eax, ebx ; ret 0xd284
0x00000000004c2569 : xchg eax, ebx ; std ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004c6268 : xchg eax, ecx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004e31e9 : xchg eax, ecx ; hlt ; jmp rdx
0x000000000046e1d5 : xchg eax, ecx ; ret
0x0000000000402fd5 : xchg eax, edi ; idiv bh ; inc dword ptr [rcx - 0x47] ; ret
0x000000000048a851 : xchg eax, edi ; jno 0x48a7ef ; ret
0x000000000048b845 : xchg eax, edi ; jno 0x48b7e3 ; ret
0x000000000044dd8a : xchg eax, edi ; ret 0xd284
0x00000000004640a8 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042de9a : xchg eax, edx ; jg 0x42de59 ; ret 0x418
0x0000000000461479 : xchg eax, edx ; ret
0x00000000004758cf : xchg eax, edx ; ret 0x8445
0x00000000004b9da8 : xchg eax, edx ; ret 0x8844
0x000000000048d93e : xchg eax, edx ; ret 0xd284
0x000000000048a7fd : xchg eax, esi ; jno 0x48a79b ; ret
0x00000000004ad1f2 : xchg eax, esi ; push rdi ; add dword ptr [rax], eax ; jmp 0x4b9409
0x00000000004d536f : xchg eax, esi ; ret
0x0000000000487f8b : xchg eax, esi ; ret 0x148
0x0000000000487f9b : xchg eax, esi ; ret 0x2948
0x000000000043ba87 : xchg eax, esi ; ret 0x59b0
0x00000000004422d0 : xchg eax, esi ; ret 0x8445
0x0000000000443d2e : xchg eax, esi ; ret 0xd284
0x00000000004469e2 : xchg eax, esp ; cdq ; ret 0x890e
0x000000000044690e : xchg eax, esp ; cdq ; ret 0x8b0e
0x00000000004e4d59 : xchg eax, esp ; cli ; call rdx
0x0000000000458068 : xchg eax, esp ; int 6
0x000000000047f3b5 : xchg eax, esp ; jmp 0x47f92c
0x000000000048cbda : xchg eax, esp ; jmp 0x48d648
0x000000000048cb17 : xchg eax, esp ; jmp 0x48d64a
0x00000000004a5ff6 : xchg eax, esp ; jmp 0x4a6c43
0x00000000004e2ae8 : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; sti ; jmp rsp
0x000000000047f8b1 : xchg eax, esp ; mov dh, 0x17 ; ret
0x0000000000472a54 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000046e325 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000472a9f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000043048c : xchg eax, esp ; ret
0x000000000045df33 : xchg eax, esp ; ret 0x8041
0x000000000040cc5d : xchg eax, esp ; ret 0x8445
0x0000000000483ad3 : xchg eax, esp ; ret 0xb640
0x000000000047196e : xchg eax, esp ; ret 0xb740
0x00000000004c77a7 : xchg eax, esp ; ret 0xca20
0x000000000040cd8e : xchg eax, esp ; ret 0xd284
0x000000000041f861 : xchg eax, esp ; ret 0xe280
0x00000000004e45ac : xchg eax, esp ; sbb byte ptr [rax], al ; add al, dl ; stc ; jmp qword ptr [rbx]
0x00000000004e48ac : xchg eax, esp ; sbb eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dh, -7 ; jmp qword ptr [rdi]
0x0000000000452ac5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044e6b2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000458067 : xchg eax, r12d ; int 6
0x000000000048cbd9 : xchg eax, r12d ; jmp 0x48d649
0x00000000004a5ff5 : xchg eax, r12d ; jmp 0x4a6c44
0x000000000047f8b0 : xchg eax, r12d ; mov dh, 0x17 ; ret
0x000000000048bd67 : xchg eax, r8d ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004d536e : xchg rax, rsi ; ret
0x000000000045136f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000049cc8e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004adf94 : xlatb ; ret
0x000000000048fe7a : xlatb ; sti ; ret 0x89f1
0x0000000000491cb4 : xlatb ; sti ; ret 0xb9f1
0x00000000004a1ff1 : xor ah, byte ptr [rax] ; add byte ptr [rax - 0x77], r9b ; shr r8b, 1 ; ret 0xf602
0x000000000040a2e0 : xor ah, byte ptr [rdx] ; ret 0x2144
0x000000000040a2ef : xor ah, byte ptr [rdx] ; ret 0x8141
0x000000000040a2d6 : xor ah, byte ptr [rdx] ; ret 0x8941
0x00000000004e4c4c : xor al, 0x1f ; add byte ptr [rax], al ; adc byte ptr [rbx - 6], dh ; jmp rsi
0x00000000004e384c : xor al, 0xb ; add byte ptr [rax], al ; sal byte ptr [rbx], -0xa ; jmp qword ptr [rax]
0x0000000000408509 : xor al, 0xffffffffffffffe9 ; ret 0x13
0x00000000004e26f1 : xor al, 0xfffffffffffffff8 ; jmp rsp
0x00000000004c43a5 : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000471969 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x00000000004bcfcb : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004c647e : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000466207 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000457343 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000438ef9 : xor byte ptr [rax - 0x75], cl ; test al, -0x75 ; adc al, ch ; sti ; ret
0x0000000000466208 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000423e2a : xor byte ptr [rbp + 0x21], al ; rol byte ptr [rcx - 0x77], 1 ; ret
0x000000000049d026 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000044e6b3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000499a65 : xor byte ptr [rcx - 0x76], al ; push rbp ; ret
0x0000000000423e20 : xor byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000044adc0 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004c14cc : xor byte ptr [rsi], cl ; hlt ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000049b0a5 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000004e3831 : xor dh, dh ; call qword ptr [rbx]
0x000000000045bc70 : xor dword ptr [rax - 0x75], ecx ; cdqe ; mov rdx, qword ptr [rcx] ; call rax
0x00000000004999f4 : xor eax, 0x558a2352 ; ret 0xd284
0x000000000048027e : xor eax, 0x7ab99ca8 ; ret
0x0000000000445b1b : xor ebp, dword ptr [rax + rbp + 0x294ce11b] ; ret 0xb849
0x000000000049cc8d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000042c7be : xor edx, dword ptr [rdx + rcx*8] ; adc eax, 0x34ebfab9 ; ret 0x558a
0x0000000000461f32 : xor edx, dword ptr [rsp - 0x7f] ; ret 0xffd0
0x000000000047b90f : xor esi, 0xffffffb9 ; or al, 0xffffffffffffffba ; ret 0xba49
0x000000000049cf91 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004e3851 : xor esi, esi ; jmp qword ptr [rax]
